name: Build Test Binaries

# reusable workflow, do not add triggers
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-integration:
    name: Build test-${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.arch == 'arm64' && format('burnt-labs-{0}', matrix.arch) || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
        arch:
          - amd64
          - arm64

    steps:
      - name: Check Out Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Go Version
        run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' integration_tests/go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build Test Binary
        working-directory: integration_tests
        run: |
          go test -c -o ../dist/test-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Test Binaries
        uses: actions/upload-artifact@v4
        with:
          name: test-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/test-${{ matrix.os }}-${{ matrix.arch }}
          retention-days: 3
          if-no-files-found: error

      - name: find wasmvm lib
        run: |
          WASM_PATH="$(find /home/runner/go/pkg/mod -name libwasmvm.$(uname -m).so 2>/dev/null | head -n 1)"
          echo "WASM_PATH=$WASM_PATH" | tee -a $GITHUB_ENV
          echo "WASM_FILE=$(basename $WASM_PATH)" | tee -a $GITHUB_ENV

      - name: Upload wasmvm lib
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WASM_FILE }}
          path: ${{ env.WASM_PATH }}
          if-no-files-found: error
          retention-days: 3
