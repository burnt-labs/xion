name: Build and Push Docker Images

# reusable workflow, do not add triggers
on:
  workflow_call:
  workflow_dispatch:

env:
  GHCR: ghcr.io/${{ github.repository }}

jobs:
  build-docker:
    name: Build Docker Images
    permissions:
      id-token: write
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        runner:
          - name: X64
            platform: linux/amd64
          - name: ARM64
            platform: linux/arm64
    runs-on:
      - self-hosted
      - ${{ matrix.runner.name }}

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: true
          ref: ${{ github.ref }}

      - name: Set up docker buildx for push
        uses: docker/setup-buildx-action@v3

      - name: Prepare xion build environment
        run: |
          echo "PLATFORM=${{ matrix.runner.platform }} | sed 's/\//-/'" >> $GITHUB_ENV
          echo "TAG_SUFFIX=${{ matrix.runner.platform }} | sed 's/.*\///'" >> $GITHUB_ENV
          echo "VERSION=$(echo $(git describe --tags) | sed 's/^v//')" >> $GITHUB_ENV
          echo "COMMIT=$(git log -1 --format='%H')" >> $GITHUB_ENV
          echo "TAG_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Metadata for platform container
        id: meta-digest
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR }}/xion

      #- name: Build and push xion image
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: release
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta-digest.outputs.tags }}
          labels: ${{ steps.meta-digest.outputs.labels }}
          outputs: type=image,name=${{ env.GHCR }}/xion,push-by-digest=true,name-canonical=true,push=true
          build-args: |
            COMMIT=${{ env.COMMIT }}
            VERSION=${{ env.VERSION }}
            TAG_VERSION=${{ env.TAG_VERSION }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-docker
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Metadata for xion container
        id: meta-xion
        uses: docker/metadata-action@v5
        with:
          images: |
            burntnetwork/xion
            ${{ env.GHCR }}/xion
            385156030167.dkr.ecr.us-east-1.amazonaws.com/burnt/xiond
          tags: |
            type=sha
            type=semver,pattern={{version}},enable=${{ github.event_name == 'push' }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR }}/xion@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.GHCR }}/xion:${{ steps.meta-xion.outputs.version }}