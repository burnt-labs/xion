name: Build Docker Images and Binaries

# reusable workflow, do not add triggers
on:
  workflow_call:
  workflow_dispatch:

env:

jobs:
  build-docker:
    name: main
    permissions:
      id-token: write
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
        arch:
          - amd64
          - arm64
    runs-on: burnt-labs-${{ matrix.arch }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx for push
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
          platforms: ${{ matrix.os }}/${{ matrix.arch }}

      - name: Prepare environment
        run: |
          echo "XIOND_FN=xiond/${{ matrix.os }}/${{ matrix.arch }}" | tr '/' '-' | tee -a $GITHUB_ENV
          echo "DOCKER_FN=docker/${{ matrix.os }}/${{ matrix.arch }}.tar" | tr '/' '-' | tee -a $GITHUB_ENV
          echo "HEIGHLINER_FN=heighliner/${{ matrix.os }}/${{ matrix.arch }}.tar" | tr '/' '-' | tee -a $GITHUB_ENV
          echo "VERSION=$(git describe --tags | sed 's/^v//')" | tee -a $GITHUB_ENV

      - name: Build Docker Image
        id: build-docker
        uses: docker/build-push-action@v5
        with:
          build-args: |
            COMMIT="${GITHUB_SHA}"
            VERSION=${{ env.VERSION }}
            TAG_VERSION="${GITHUB_SHA:0:7}"
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.os }}/${{ matrix.arch }}
          push: false
          target: release
          outputs: type=docker,name=xion:${{ matrix.os }}-${{ matrix.arch }},name-canonical=true

      - name: Build Heighliner Image
        id: build-heighliner
        uses: docker/build-push-action@v5
        with:
          build-args: |
            BASE_IMAGE=xion
            VERSION=${{ matrix.os }}-${{ matrix.arch }}
            BINARIES=/usr/bin/xiond
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.os }}/${{ matrix.arch }}
          target: heighliner
          outputs: type=docker,name=heighliner:${{ matrix.os }}-${{ matrix.arch }},name-canonical=true

      - name: Save Docker Image
        working-directory: ${{ runner.temp }}
        run: |
          docker save xion:${{ matrix.os }}-${{ matrix.arch }} > ${{ env.DOCKER_FN }}

      - name: Upload Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DOCKER_FN }}
          path: ${{ runner.temp }}/${{ env.DOCKER_FN }}
          if-no-files-found: error
          retention-days: 3

      - name: Save Heighliner Image
        working-directory: ${{ runner.temp }}
        run: |
          docker save heighliner:${{ matrix.os }}-${{ matrix.arch }} > ${{ env.HEIGHLINER_FN }}

      - name: Upload Heighliner Image
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.HEIGHLINER_FN }}
          path: ${{ runner.temp }}/${{ env.HEIGHLINER_FN }}
          if-no-files-found: error
          retention-days: 3

      - name: Copy xiond binary from container
        # if-contains(github.event.ref, 'v[0-9]+\.[0-9]+\.[0-9]+')
        working-directory: ${{ runner.temp }}
        run: |
          tmpname="ctr-$(basename $XIOND_FN)"
          docker create --platform ${{ matrix.os }}/${{ matrix.arch }} --name "${tmpname}" "xion:${PLATFORM}"
          docker cp "${tmpname}:/usr/bin/xiond" "${XIOND_FN}"
          docker rm -v "${tmpname}"

      - name: Upload binary
        # if-contains(github.event.ref, 'v[0-9]+\.[0-9]+\.[0-9]+')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.XIOND_FN }}
          path: ${{ runner.temp }}/${{ env.XIOND_FN }}
          retention-days: 3
