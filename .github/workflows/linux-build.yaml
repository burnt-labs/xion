name: Build Docker Images and Binaries

# reusable workflow, do not add triggers
on:
  workflow_call:
  workflow_dispatch:

jobs:
  build-linux-images:
    name: Build ${{ matrix.os }}/${{ matrix.arch }}
    runs-on: ${{ matrix.arch == 'amd64' &&  'ubuntu-latest' || format('burnt-labs-{0}', matrix.arch) }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
        arch:
          - amd64
          - arm64

    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Go Version
        run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: build --clean --skip validate --id xiond_${{ matrix.os }}_${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename binary
        run: |
          cp dist/xiond_${{ matrix.os }}_${{ matrix.arch }}/xiond ${{ runner.temp }}/xiond-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload binary
        # if-contains(github.event.ref, 'v[0-9]+\.[0-9]+\.[0-9]+')
        uses: actions/upload-artifact@v4
        with:
          name: xiond-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ runner.temp }}/xiond-${{ matrix.os }}-${{ matrix.arch }}
          if-no-files-found: error
          retention-days: 3
