name: Create Release and Publish Binaries
# Run for new release tags only

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'
      - 'v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+'

env:
  GHCR: ghcr.io/${{ github.repository }}
  PLATFORMS: linux/amd64

jobs:
  build-docker:
    name: Build Docker Images
    uses: burnt-labs/xion/.github/workflows/docker-build.yml@wf1
    secrets: inherit

  docker-scout:
    needs: build-docker
    name: Docker Scout
    uses: burnt-labs/xion/.github/workflows/docker-scout.yml@wf1
    secrets: inherit

  build-heighliner:
    needs: build-docker
    name: Heighliner Build
    uses: burnt-labs/xion/.github/workflows/heighliner.yml@wf1
    secrets: inherit

  interchain-tests:
    needs: build-heighliner
    name: Interchain tests
    uses: burnt-labs/xion/.github/workflows/integration-tests.yml@wf1
    secrets: inherit

  build-release-binaries:
    needs: interchain-tests
    runs-on: ubuntu-latest
    environment: CI
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Copy xiond binary from linux/amd64 container
        id: copy-binary-amd64
        run: |
          IMAGE_VERSION=$(echo "$DOCKER_METADATA_OUTPUT_JSON" | jq -r '.labels["org.opencontainers.image.version"]')
          docker create --platform linux/amd64 --name temp_container-amd64 ${GHCR}:${IMAGE_VERSION}
          docker cp temp_container-amd64:/usr/bin/xiond ./xiond-linux-amd64
          ./xiond-linux-amd64 version --long
          docker rm -v temp_container-amd64

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: xiond-linux-amd64
          path: ./xiond-linux-amd64

  build-release:
    needs: build-release-binaries
    runs-on: ubuntu-latest
    environment: CI

    steps:
      - name: Create release directory
        run: mkdir -p build/release

      - name: Download artifacts
        working-directory: release
        run: gh release download ${{ github.ref_name }} -p 'xiond' -p '*.tar.gz' --repo ${{ github.repository }}

      - name: List files in workspace
        working-directory: release
        run: |
          ls -R

      - name: Create checksums
        working-directory: release
        run: |
          sha256sum * > checksum.txt

      - name: Display checksums
        working-directory: release
        run: |
          cat checksum.txt

      - name: Build Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Output Changelog
        run: echo "${{steps.changelog.outputs.changelog}}"


      - name: Create and Update Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          body: ${{ steps.changelog.outputs.changelog }}
          draft: true
          name: Release ${{ steps.get_version.outputs.VERSION }}
          prerelease: true
          tag: ${{ github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the artifacts to release
        run: gh release upload ${{github.ref_name}} build/release/* --repo ${{github.repository}}