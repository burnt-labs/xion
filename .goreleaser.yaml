---
version: 2
project_name: xiond

before:
  hooks:
    - apt update && apt install -y musl-tools=1.2.3-1
    - mkdir -p build/v{{ .Version }}

env:
  - CGO_ENABLED=1
  - GO111MODULE=on

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"

git:
  # sort more than one tag in the same commit.
  # Source: https://goreleaser.com/customization/git/
  tag_sort: -version:creatordate

builds:
  - id: xiond-linux-arm64
    main: ./cmd/xiond
    binary: "{{ .ShortCommit }}/xiond-linux-arm64/xiond"
    goos:
      - linux
    goarch:
      - arm64
    env:
      - BUILD_ID=xiond-linux-arm64
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++;
      - CGO_LDFLAGS='-L/lib'
    flags:
      - -mod=readonly
      - -trimpath
    hooks:
      pre:
        - sh -c 'grep "github.com/CosmWasm/wasmvm" go.mod | cut -d " " -f 1 | xargs -I {} go list -m {} | cut -d " " -f 2 | xargs -I % wget https://github.com/CosmWasm/wasmvm/releases/download/%/libwasmvm_muslc.aarch64.a -O /lib/libwasmvm_muslc.aarch64.a'
      post:
        - cp -f {{ .Path }} build/v{{ .Version }}/xiond-linux-arm64
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.AppName={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,muslc,osusergo
      - -w -s
      - -linkmode=external
      - -extldflags '-Wl,-z,muldefs -static -lm'
    no_unique_dist_dir: true
    tags:
      - netgo
      - ledger
      - muslc
      - osusergo

  - id: xiond-linux-amd64
    main: ./cmd/xiond
    binary: "{{ .ShortCommit }}/xiond-linux-amd64/xiond"
    goos:
      - linux
    goarch:
      - amd64
    env:
      # can only build on linux/amd64, use default gcc/g++
      # - CC=x86_64-linux-gnu-gcc
      # - CXX=x86_64-linux-gnu-g++
      - CGO_LDFLAGS='-L/lib'
    flags:
      - -mod=readonly
      - -trimpath
    hooks:
      pre:
        - sh -c 'grep "github.com/CosmWasm/wasmvm" go.mod | cut -d " " -f 1 | xargs -I {} go list -m {} | cut -d " " -f 2 | xargs -I % wget https://github.com/CosmWasm/wasmvm/releases/download/%/libwasmvm_muslc.x86_64.a -O /lib/libwasmvm_muslc.x86_64.a'
      post:
        - cp -f {{ .Path }} build/v{{ .Version }}/xiond-linux-amd64
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.AppName={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,muslc
      - -w -s
      - -linkmode=external
      - -extldflags '-Wl,-z,muldefs -static -lm'
    no_unique_dist_dir: true
    tags:
      - netgo
      - ledger
      - muslc

  - id: xiond-darwin-arm64
    main: ./cmd/xiond
    binary: "{{ .ShortCommit }}/xiond-darwin-arm64/xiond"
    goos:
      - darwin
    goarch:
      - arm64
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
      - CGO_LDFLAGS='-L/lib'
    flags:
      - -mod=readonly
      - -trimpath
    hooks:
      pre:
        - sh -c 'grep "github.com/CosmWasm/wasmvm" go.mod | cut -d " " -f 1 | xargs -I {} go list -m {} | cut -d " " -f 2 | xargs -I % wget https://github.com/CosmWasm/wasmvm/releases/download/%/libwasmvmstatic_darwin.a -O /lib/libwasmvmstatic_darwin.a'
      post:
        - cp -f {{ .Path }} build/v{{ .Version }}/xiond-darwin-arm64
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.AppName={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,static_wasm
      - -w -s
      - -linkmode=external
    no_unique_dist_dir: true
    tags:
      - netgo
      - ledger
      - static_wasm

  - id: xiond-darwin-amd64
    main: ./cmd/xiond
    binary: "{{ .ShortCommit }}/xiond-darwin-amd64/xiond"
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CC=o64-clang
      - CXX=o64-clang++
      - CGO_LDFLAGS='-L/lib'
    hooks:
      pre:
        - sh -c 'grep "github.com/CosmWasm/wasmvm" go.mod | cut -d " " -f 1 | xargs -I {} go list -m {} | cut -d " " -f 2 | xargs -I % wget https://github.com/CosmWasm/wasmvm/releases/download/%/libwasmvmstatic_darwin.a -O /lib/libwasmvmstatic_darwin.a'
      post:
        - cp -f {{ .Path }} build/v{{ .Version }}/xiond-darwin-amd64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X github.com/cosmos/cosmos-sdk/version.Name={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.AppName={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,static_wasm
      - -w -s
      - -linkmode=external
    no_unique_dist_dir: true
    tags:
      - netgo
      - ledger
      - static_wasm

universal_binaries:
  - id: xiond
    ids:
      - xiond-darwin-amd64
      - xiond-darwin-arm64
    replace: false
    name_template: xiond
    hooks:
      post:
        - mkdir -p dist/{{ .ShortCommit }}/xiond-darwin-all
        - mv dist/xiond_darwin_all/xiond dist/{{ .ShortCommit }}/xiond-darwin-all/xiond
        - rmdir dist/xiond_darwin_all

checksum:
  name_template: "xiond_v{{ .Version }}_checksums.txt"
  algorithm: sha256

# Docs: https://goreleaser.com/customization/changelog/
changelog:
  # disable: "{{ .Env.CREATE_CHANGELOG }}"
  use: github
  groups:
  - title: Features
    regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
    order: 0
  - title: "Bug fixes"
    regexp: '^.*?(bug|fix)(\([[:word:]]+\))??!?:.+$'
    order: 1
  - title: Others
    order: 999
  filters:
    exclude:
      - '^revert:'
    #include:

# Docs: https://goreleaser.com/customization/homebrew/
#brews:

# Docs: https://goreleaser.com/customization/release/
#release:
