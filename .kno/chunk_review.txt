
=== File: go.sum ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1-150
cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=
cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=
cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=
cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=
cloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=
cloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=
cloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=
cloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=
cloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=
cloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=
cloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=
cloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=
cloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=
cloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=
cloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=
cloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=
cloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=
cloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=
cloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=
cloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=
cloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=
cloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=
cloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=
cloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=
cloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=
cloud.google.com/go v0.99.0/go.mod h1:w0Xx2nLzqWJPuozYQX+hFfCSI8WioryfRDzkoI/Y2ZA=
cloud.google.com/go v0.100.2/go.mod h1:4Xra9TjzAeYHrl5+oeLlzbM2k3mjVhZh4UqTZ//w99A=
cloud.google.com/go v0.102.0/go.mod h1:oWcCzKlqJ5zgHQt9YsaeTY9KzIvjyy0ArmiBUgpQ+nc=
cloud.google.com/go v0.102.1/go.mod h1:XZ77E9qnTEnrgEOvr4xzfdX5TRo7fB4T2F4O6+34hIU=
cloud.google.com/go v0.104.0/go.mod h1:OO6xxXdJyvuJPcEPBLN9BJPD+jep5G1+2U5B5gkRYtA=
cloud.google.com/go v0.115.0 h1:CnFSK6Xo3lDYRoBKEcAtia6VSC837/ZkJuRduSFnr14=
cloud.google.com/go v0.115.0/go.mod h1:8jIM5vVgoAEoiVxQ/O4BFTfHqulPZgs/ufEzMcFMdWU=
cloud.google.com/go/aiplatform v1.22.0/go.mod h1:ig5Nct50bZlzV6NvKaTwmplLLddFx0YReh9WfTO5jKw=
cloud.google.com/go/aiplatform v1.24.0/go.mod h1:67UUvRBKG6GTayHKV8DBv2RtR1t93YRu5B1P3x99mYY=
cloud.google.com/go/analytics v0.11.0/go.mod h1:DjEWCu41bVbYcKyvlws9Er60YE4a//bK6mnhWvQeFNI=
cloud.google.com/go/analytics v0.12.0/go.mod h1:gkfj9h6XRf9+TS4bmuhPEShsh3hH8PAZzm/41OOhQd4=
cloud.google.com/go/area120 v0.5.0/go.mod h1:DE/n4mp+iqVyvxHN41Vf1CR602GiHQjFPusMFW6bGR4=
cloud.google.com/go/area120 v0.6.0/go.mod h1:39yFJqWVgm0UZqWTOdqkLhjoC7uFfgXRC8g/ZegeAh0=
cloud.google.com/go/artifactregistry v1.6.0/go.mod h1:IYt0oBPSAGYj/kprzsBjZ/4LnG/zOcHyFHjWPCi6SAQ=
cloud.google.com/go/artifactregistry v1.7.0/go.mod h1:mqTOFOnGZx8EtSqK/ZWcsm/4U8B77rbcLP6ruDU2Ixk=
cloud.google.com/go/asset v1.5.0/go.mod h1:5mfs8UvcM5wHhqtSv8J1CtxxaQq3AdBxxQi2jGW/K4o=
cloud.google.com/go/asset v1.7.0/go.mod h1:YbENsRK4+xTiL+Ofoj5Ckf+O17kJtgp3Y3nn4uzZz5s=
cloud.google.com/go/asset v1.8.0/go.mod h1:mUNGKhiqIdbr8X7KNayoYvyc4HbbFO9URsjbytpUaW0=
cloud.google.com/go/assuredworkloads v1.5.0/go.mod h1:n8HOZ6pff6re5KYfBXcFvSViQjDwxFkAkmUFffJRbbY=
cloud.google.com/go/assuredworkloads v1.6.0/go.mod h1:yo2YOk37Yc89Rsd5QMVECvjaMKymF9OP+QXWlKXUkXw=
cloud.google.com/go/assuredworkloads v1.7.0/go.mod h1:z/736/oNmtGAyU47reJgGN+KVoYoxeLBoj4XkKYscNI=
cloud.google.com/go/auth v0.6.0 h1:5x+d6b5zdezZ7gmLWD1m/xNjnaQ2YDhmIz/HH3doy1g=
cloud.google.com/go/auth v0.6.0/go.mod h1:b4acV+jLQDyjwm4OXHYjNvRi4jvGBzHWJRtJcy+2P4g=
cloud.google.com/go/auth/oauth2adapt v0.2.2 h1:+TTV8aXpjeChS9M+aTtN/TjdQnzJvmzKFt//oWu7HX4=
cloud.google.com/go/auth/oauth2adapt v0.2.2/go.mod h1:wcYjgpZI9+Yu7LyYBg4pqSiaRkfEK3GQcpb7C/uyF1Q=
cloud.google.com/go/automl v1.5.0/go.mod h1:34EjfoFGMZ5sgJ9EoLsRtdPSNZLcfflJR39VbVNS2M0=
cloud.google.com/go/automl v1.6.0/go.mod h1:ugf8a6Fx+zP0D59WLhqgTDsQI9w07o64uf/Is3Nh5p8=
cloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=
cloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=
cloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=
cloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=
cloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=
cloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=
cloud.google.com/go/bigquery v1.42.0/go.mod h1:8dRTJxhtG+vwBKzE5OseQn/hiydoQN3EedCaOdYmxRA=
cloud.google.com/go/billing v1.4.0/go.mod h1:g9IdKBEFlItS8bTtlrZdVLWSSdSyFUZKXNS02zKMOZY=
cloud.google.com/go/billing v1.5.0/go.mod h1:mztb1tBc3QekhjSgmpf/CV4LzWXLzCArwpLmP2Gm88s=
cloud.google.com/go/binaryauthorization v1.1.0/go.mod h1:xwnoWu3Y84jbuHa0zd526MJYmtnVXn0syOjaJgy4+dM=
cloud.google.com/go/binaryauthorization v1.2.0/go.mod h1:86WKkJHtRcv5ViNABtYMhhNWRrD1Vpi//uKEy7aYEfI=
cloud.google.com/go/cloudtasks v1.5.0/go.mod h1:fD92REy1x5woxkKEkLdvavGnPJGEn8Uic9nWuLzqCpY=
cloud.google.com/go/cloudtasks v1.6.0/go.mod h1:C6Io+sxuke9/KNRkbQpihnW93SWDU3uXt92nu85HkYI=
cloud.google.com/go/compute v0.1.0/go.mod h1:GAesmwr110a34z04OlxYkATPBEfVhkymfTBXtfbBFow=
cloud.google.com/go/compute v1.3.0/go.mod h1:cCZiE1NHEtai4wiufUhW8I8S1JKkAnhnQJWM7YD99wM=
cloud.google.com/go/compute v1.5.0/go.mod h1:9SMHyhJlzhlkJqrPAc839t2BZFTSk6Jdj6mkzQJeu0M=
cloud.google.com/go/compute v1.6.0/go.mod h1:T29tfhtVbq1wvAPo0E3+7vhgmkOYeXjhFvz/FMzPu0s=
cloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=
cloud.google.com/go/compute v1.7.0/go.mod h1:435lt8av5oL9P3fv1OEzSbSUe+ybHXGMPQHHZWZxy9U=
cloud.google.com/go/compute v1.10.0/go.mod h1:ER5CLbMxl90o2jtNbGSbtfOpQKR0t15FOtRsugnLrlU=
cloud.google.com/go/compute/metadata v0.5.2 h1:UxK4uu/Tn+I3p2dYWTfiX4wva7aYlKixAHn3fyqngqo=
cloud.google.com/go/compute/metadata v0.5.2/go.mod h1:C66sj2AluDcIqakBq/M8lw8/ybHgOZqin2obFxa/E5k=
cloud.google.com/go/containeranalysis v0.5.1/go.mod h1:1D92jd8gRR/c0fGMlymRgxWD3Qw9C1ff6/T7mLgVL8I=
cloud.google.com/go/containeranalysis v0.6.0/go.mod h1:HEJoiEIu+lEXM+k7+qLCci0h33lX3ZqoYFdmPcoO7s4=
cloud.google.com/go/datacatalog v1.3.0/go.mod h1:g9svFY6tuR+j+hrTw3J2dNcmI0dzmSiyOzm8kpLq0a0=
cloud.google.com/go/datacatalog v1.5.0/go.mod h1:M7GPLNQeLfWqeIm3iuiruhPzkt65+Bx8dAKvScX8jvs=
cloud.google.com/go/datacatalog v1.6.0/go.mod h1:+aEyF8JKg+uXcIdAmmaMUmZ3q1b/lKLtXCmXdnc0lbc=
cloud.google.com/go/dataflow v0.6.0/go.mod h1:9QwV89cGoxjjSR9/r7eFDqqjtvbKxAK2BaYU6PVk9UM=
cloud.google.com/go/dataflow v0.7.0/go.mod h1:PX526vb4ijFMesO1o202EaUmouZKBpjHsTlCtB4parQ=
cloud.google.com/go/dataform v0.3.0/go.mod h1:cj8uNliRlHpa6L3yVhDOBrUXH+BPAO1+KFMQQNSThKo=
cloud.google.com/go/dataform v0.4.0/go.mod h1:fwV6Y4Ty2yIFL89huYlEkwUPtS7YZinZbzzj5S9FzCE=
cloud.google.com/go/datalabeling v0.5.0/go.mod h1:TGcJ0G2NzcsXSE/97yWjIZO0bXj0KbVlINXMG9ud42I=
cloud.google.com/go/datalabeling v0.6.0/go.mod h1:WqdISuk/+WIGeMkpw/1q7bK/tFEZxsrFJOJdY2bXvTQ=
cloud.google.com/go/dataqna v0.5.0/go.mod h1:90Hyk596ft3zUQ8NkFfvICSIfHFh1Bc7C4cK3vbhkeo=
cloud.google.com/go/dataqna v0.6.0/go.mod h1:1lqNpM7rqNLVgWBJyk5NF6Uen2PHym0jtVJonplVsDA=
cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=
cloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=
cloud.google.com/go/datastream v1.2.0/go.mod h1:i/uTP8/fZwgATHS/XFu0TcNUhuA0twZxxQ3EyCUQMwo=
cloud.google.com/go/datastream v1.3.0/go.mod h1:cqlOX8xlyYF/uxhiKn6Hbv6WjwPPuI9W2M9SAXwaLLQ=
cloud.google.com/go/dialogflow v1.15.0/go.mod h1:HbHDWs33WOGJgn6rfzBW1Kv807BE3O1+xGbn59zZWI4=
cloud.google.com/go/dialogflow v1.16.1/go.mod h1:po6LlzGfK+smoSmTBnbkIZY2w8ffjz/RcGSS+sh1el0=
cloud.google.com/go/dialogflow v1.17.0/go.mod h1:YNP09C/kXA1aZdBgC/VtXX74G/TKn7XVCcVumTflA+8=
cloud.google.com/go/documentai v1.7.0/go.mod h1:lJvftZB5NRiFSX4moiye1SMxHx0Bc3x1+p9e/RfXYiU=
cloud.google.com/go/documentai v1.8.0/go.mod h1:xGHNEB7CtsnySCNrCFdCyyMz44RhFEEX2Q7UD0c5IhU=
cloud.google.com/go/domains v0.6.0/go.mod h1:T9Rz3GasrpYk6mEGHh4rymIhjlnIuB4ofT1wTxDeT4Y=
cloud.google.com/go/domains v0.7.0/go.mod h1:PtZeqS1xjnXuRPKE/88Iru/LdfoRyEHYA9nFQf4UKpg=
cloud.google.com/go/edgecontainer v0.1.0/go.mod h1:WgkZ9tp10bFxqO8BLPqv2LlfmQF1X8lZqwW4r1BTajk=
cloud.google.com/go/edgecontainer v0.2.0/go.mod h1:RTmLijy+lGpQ7BXuTDa4C4ssxyXT34NIuHIgKuP4s5w=
cloud.google.com/go/functions v1.6.0/go.mod h1:3H1UA3qiIPRWD7PeZKLvHZ9SaQhR26XIJcC0A5GbvAk=
cloud.google.com/go/functions v1.7.0/go.mod h1:+d+QBcWM+RsrgZfV9xo6KfA1GlzJfxcfZcRPEhDDfzg=
cloud.google.com/go/gaming v1.5.0/go.mod h1:ol7rGcxP/qHTRQE/RO4bxkXq+Fix0j6D4LFPzYTIrDM=
cloud.google.com/go/gaming v1.6.0/go.mod h1:YMU1GEvA39Qt3zWGyAVA9bpYz/yAhTvaQ1t2sK4KPUA=
cloud.google.com/go/gkeconnect v0.5.0/go.mod h1:c5lsNAg5EwAy7fkqX/+goqFsU1Da/jQFqArp+wGNr/o=
cloud.google.com/go/gkeconnect v0.6.0/go.mod h1:Mln67KyU/sHJEBY8kFZ0xTeyPtzbq9StAVvEULYK16A=
cloud.google.com/go/gkehub v0.9.0/go.mod h1:WYHN6WG8w9bXU0hqNxt8rm5uxnk8IH+lPY9J2TV7BK0=
cloud.google.com/go/gkehub v0.10.0/go.mod h1:UIPwxI0DsrpsVoWpLB0stwKCP+WFVG9+y977wO+hBH0=
cloud.google.com/go/grafeas v0.2.0/go.mod h1:KhxgtF2hb0P191HlY5besjYm6MqTSTj3LSI+M+ByZHc=
cloud.google.com/go/iam v0.3.0/go.mod h1:XzJPvDayI+9zsASAFO68Hk07u3z+f+JrT2xXNdp4bnY=
cloud.google.com/go/iam v0.5.0/go.mod h1:wPU9Vt0P4UmCux7mqtRu6jcpPAb74cP1fh50J3QpkUc=
cloud.google.com/go/iam v1.1.9 h1:oSkYLVtVme29uGYrOcKcvJRht7cHJpYD09GM9JaR0TE=
cloud.google.com/go/iam v1.1.9/go.mod h1:Nt1eDWNYH9nGQg3d/mY7U1hvfGmsaG9o/kLGoLoLXjQ=
cloud.google.com/go/language v1.4.0/go.mod h1:F9dRpNFQmJbkaop6g0JhSBXCNlO90e1KWx5iDdxbWic=
cloud.google.com/go/language v1.6.0/go.mod h1:6dJ8t3B+lUYfStgls25GusK04NLh3eDLQnWM3mdEbhI=
cloud.google.com/go/lifesciences v0.5.0/go.mod h1:3oIKy8ycWGPUyZDR/8RNnTOYevhaMLqh5vLUXs9zvT8=
cloud.google.com/go/lifesciences v0.6.0/go.mod h1:ddj6tSX/7BOnhxCSd3ZcETvtNr8NZ6t/iPhY2Tyfu08=
cloud.google.com/go/mediatranslation v0.5.0/go.mod h1:jGPUhGTybqsPQn91pNXw0xVHfuJ3leR1wj37oU3y1f4=
cloud.google.com/go/mediatranslation v0.6.0/go.mod h1:hHdBCTYNigsBxshbznuIMFNe5QXEowAuNmmC7h8pu5w=
cloud.google.com/go/memcache v1.4.0/go.mod h1:rTOfiGZtJX1AaFUrOgsMHX5kAzaTQ8azHiuDoTPzNsE=
cloud.google.com/go/memcache v1.5.0/go.mod h1:dk3fCK7dVo0cUU2c36jKb4VqKPS22BTkf81Xq617aWM=
cloud.google.com/go/metastore v1.5.0/go.mod h1:2ZNrDcQwghfdtCwJ33nM0+GrBGlVuh8rakL3vdPY3XY=
cloud.google.com/go/metastore v1.6.0/go.mod h1:6cyQTls8CWXzk45G55x57DVQ9gWg7RiH65+YgPsNh9s=
cloud.google.com/go/networkconnectivity v1.4.0/go.mod h1:nOl7YL8odKyAOtzNX73/M5/mGZgqqMeryi6UPZTk/rA=
cloud.google.com/go/networkconnectivity v1.5.0/go.mod h1:3GzqJx7uhtlM3kln0+x5wyFvuVH1pIBJjhCpjzSt75o=
cloud.google.com/go/networksecurity v0.5.0/go.mod h1:xS6fOCoqpVC5zx15Z/MqkfDwH4+m/61A3ODiDV1xmiQ=
cloud.google.com/go/networksecurity v0.6.0/go.mod h1:Q5fjhTr9WMI5mbpRYEbiexTzROf7ZbDzvzCrNl14nyU=
cloud.google.com/go/notebooks v1.2.0/go.mod h1:9+wtppMfVPUeJ8fIWPOq1UnATHISkGXGqTkxeieQ6UY=
cloud.google.com/go/notebooks v1.3.0/go.mod h1:bFR5lj07DtCPC7YAAJ//vHskFBxA5JzYlH68kXVdk34=
cloud.google.com/go/osconfig v1.7.0/go.mod h1:oVHeCeZELfJP7XLxcBGTMBvRO+1nQ5tFG9VQTmYS2Fs=
cloud.google.com/go/osconfig v1.8.0/go.mod h1:EQqZLu5w5XA7eKizepumcvWx+m8mJUhEwiPqWiZeEdg=
cloud.google.com/go/oslogin v1.4.0/go.mod h1:YdgMXWRaElXz/lDk1Na6Fh5orF7gvmJ0FGLIs9LId4E=
cloud.google.com/go/oslogin v1.5.0/go.mod h1:D260Qj11W2qx/HVF29zBg+0fd6YCSjSqLUkY/qEenQU=
cloud.google.com/go/phishingprotection v0.5.0/go.mod h1:Y3HZknsK9bc9dMi+oE8Bim0lczMU6hrX0UpADuMefr0=
cloud.google.com/go/phishingprotection v0.6.0/go.mod h1:9Y3LBLgy0kDTcYET8ZH3bq/7qni15yVUoAxiFxnlSUA=
cloud.google.com/go/privatecatalog v0.5.0/go.mod h1:XgosMUvvPyxDjAVNDYxJ7wBW8//hLDDYmnsNcMGq1K0=
cloud.google.com/go/privatecatalog v0.6.0/go.mod h1:i/fbkZR0hLN29eEWiiwue8Pb+GforiEIBnV9yrRUOKI=
cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=
cloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=
cloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=
cloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=
cloud.google.com/go/recaptchaenterprise v1.3.1/go.mod h1:OdD+q+y4XGeAlxRaMn1Y7/GveP6zmq76byL6tjPE7d4=
cloud.google.com/go/recaptchaenterprise/v2 v2.1.0/go.mod h1:w9yVqajwroDNTfGuhmOjPDN//rZGySaf6PtFVcSCa7o=
cloud.google.com/go/recaptchaenterprise/v2 v2.2.0/go.mod h1:/Zu5jisWGeERrd5HnlS3EUGb/D335f9k51B/FVil0jk=
cloud.google.com/go/recaptchaenterprise/v2 v2.3.0/go.mod h1:O9LwGCjrhGHBQET5CA7dd5NwwNQUErSgEDit1DLNTdo=
cloud.google.com/go/recommendationengine v0.5.0/go.mod h1:E5756pJcVFeVgaQv3WNpImkFP8a+RptV6dDLGPILjvg=
cloud.google.com/go/recommendationengine v0.6.0/go.mod h1:08mq2umu9oIqc7tDy8sx+MNJdLG0fUi3vaSVbztHgJ4=
cloud.google.com/go/recommender v1.5.0/go.mod h1:jdoeiBIVrJe9gQjwd759ecLJbxCDED4A6p+mqoqDvTg=

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:151-300
cloud.google.com/go/recommender v1.6.0/go.mod h1:+yETpm25mcoiECKh9DEScGzIRyDKpZ0cEhWGo+8bo+c=
cloud.google.com/go/redis v1.7.0/go.mod h1:V3x5Jq1jzUcg+UNsRvdmsfuFnit1cfe3Z/PGyq/lm4Y=
cloud.google.com/go/redis v1.8.0/go.mod h1:Fm2szCDavWzBk2cDKxrkmWBqoCiL1+Ctwq7EyqBCA/A=
cloud.google.com/go/retail v1.8.0/go.mod h1:QblKS8waDmNUhghY2TI9O3JLlFk8jybHeV4BF19FrE4=
cloud.google.com/go/retail v1.9.0/go.mod h1:g6jb6mKuCS1QKnH/dpu7isX253absFl6iE92nHwlBUY=
cloud.google.com/go/scheduler v1.4.0/go.mod h1:drcJBmxF3aqZJRhmkHQ9b3uSSpQoltBPGPxGAWROx6s=
cloud.google.com/go/scheduler v1.5.0/go.mod h1:ri073ym49NW3AfT6DZi21vLZrG07GXr5p3H1KxN5QlI=
cloud.google.com/go/secretmanager v1.6.0/go.mod h1:awVa/OXF6IiyaU1wQ34inzQNc4ISIDIrId8qE5QGgKA=
cloud.google.com/go/security v1.5.0/go.mod h1:lgxGdyOKKjHL4YG3/YwIL2zLqMFCKs0UbQwgyZmfJl4=
cloud.google.com/go/security v1.7.0/go.mod h1:mZklORHl6Bg7CNnnjLH//0UlAlaXqiG7Lb9PsPXLfD0=
cloud.google.com/go/security v1.8.0/go.mod h1:hAQOwgmaHhztFhiQ41CjDODdWP0+AE1B3sX4OFlq+GU=
cloud.google.com/go/securitycenter v1.13.0/go.mod h1:cv5qNAqjY84FCN6Y9z28WlkKXyWsgLO832YiWwkCWcU=
cloud.google.com/go/securitycenter v1.14.0/go.mod h1:gZLAhtyKv85n52XYWt6RmeBdydyxfPeTrpToDPw4Auc=
cloud.google.com/go/servicedirectory v1.4.0/go.mod h1:gH1MUaZCgtP7qQiI+F+A+OpeKF/HQWgtAddhTbhL2bs=
cloud.google.com/go/servicedirectory v1.5.0/go.mod h1:QMKFL0NUySbpZJ1UZs3oFAmdvVxhhxB6eJ/Vlp73dfg=
cloud.google.com/go/speech v1.6.0/go.mod h1:79tcr4FHCimOp56lwC01xnt/WPJZc4v3gzyT7FoBkCM=
cloud.google.com/go/speech v1.7.0/go.mod h1:KptqL+BAQIhMsj1kOP2la5DSEEerPDuOP/2mmkhHhZQ=
cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=
cloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=
cloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=
cloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=
cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=
cloud.google.com/go/storage v1.22.1/go.mod h1:S8N1cAStu7BOeFfE8KAQzmyyLkK8p/vmRq6kuBTW58Y=
cloud.google.com/go/storage v1.23.0/go.mod h1:vOEEDNFnciUMhBeT6hsJIn3ieU5cFRmzeLgDvXzfIXc=
cloud.google.com/go/storage v1.27.0/go.mod h1:x9DOL8TK/ygDUMieqwfhdpQryTeEkhGKMi80i/iqR2s=
cloud.google.com/go/storage v1.41.0 h1:RusiwatSu6lHeEXe3kglxakAmAbfV+rhtPqA6i8RBx0=
cloud.google.com/go/storage v1.41.0/go.mod h1:J1WCa/Z2FcgdEDuPUY8DxT5I+d9mFKsCepp5vR6Sq80=
cloud.google.com/go/talent v1.1.0/go.mod h1:Vl4pt9jiHKvOgF9KoZo6Kob9oV4lwd/ZD5Cto54zDRw=
cloud.google.com/go/talent v1.2.0/go.mod h1:MoNF9bhFQbiJ6eFD3uSsg0uBALw4n4gaCaEjBw9zo8g=
cloud.google.com/go/videointelligence v1.6.0/go.mod h1:w0DIDlVRKtwPCn/C4iwZIJdvC69yInhW0cfi+p546uU=
cloud.google.com/go/videointelligence v1.7.0/go.mod h1:k8pI/1wAhjznARtVT9U1llUaFNPh7muw8QyOUpavru4=
cloud.google.com/go/vision v1.2.0/go.mod h1:SmNwgObm5DpFBme2xpyOyasvBc1aPdjvMk2bBk0tKD0=
cloud.google.com/go/vision/v2 v2.2.0/go.mod h1:uCdV4PpN1S0jyCyq8sIM42v2Y6zOLkZs+4R9LrGYwFo=
cloud.google.com/go/vision/v2 v2.3.0/go.mod h1:UO61abBx9QRMFkNBbf1D8B1LXdS2cGiiCRx0vSpZoUo=
cloud.google.com/go/webrisk v1.4.0/go.mod h1:Hn8X6Zr+ziE2aNd8SliSDWpEnSS1u4R9+xXZmFiHmGE=
cloud.google.com/go/webrisk v1.5.0/go.mod h1:iPG6fr52Tv7sGk0H6qUFzmL3HHZev1htXuWDEEsqMTg=
cloud.google.com/go/workflows v1.6.0/go.mod h1:6t9F5h/unJz41YqfBmqSASJSXccBLtD1Vwf+KmJENM0=
cloud.google.com/go/workflows v1.7.0/go.mod h1:JhSrZuVZWuiDfKEFxU0/F1PQjmpnpcoISEXH2bcHC3M=
cosmossdk.io/api v0.7.6 h1:PC20PcXy1xYKH2KU4RMurVoFjjKkCgYRbVAD4PdqUuY=
cosmossdk.io/api v0.7.6/go.mod h1:IcxpYS5fMemZGqyYtErK7OqvdM0C8kdW3dq8Q/XIG38=
cosmossdk.io/client/v2 v2.0.0-beta.4 h1:LGIzWbVTOof/IHQZeoWwxPX0fq607ONXhsfA7eUrQIg=
cosmossdk.io/client/v2 v2.0.0-beta.4/go.mod h1:c753d0sBv3AQRx6X+BOKL1aGpKjZMTZAHGiLPbVi5TE=
cosmossdk.io/collections v0.4.0 h1:PFmwj2W8szgpD5nOd8GWH6AbYNi1f2J6akWXJ7P5t9s=
cosmossdk.io/collections v0.4.0/go.mod h1:oa5lUING2dP+gdDquow+QjlF45eL1t4TJDypgGd+tv0=
cosmossdk.io/core v0.11.1 h1:h9WfBey7NAiFfIcUhDVNS503I2P2HdZLebJlUIs8LPA=
cosmossdk.io/core v0.11.1/go.mod h1:OJzxcdC+RPrgGF8NJZR2uoQr56tc7gfBKhiKeDO7hH0=
cosmossdk.io/depinject v1.1.0 h1:wLan7LG35VM7Yo6ov0jId3RHWCGRhe8E8bsuARorl5E=
cosmossdk.io/depinject v1.1.0/go.mod h1:kkI5H9jCGHeKeYWXTqYdruogYrEeWvBQCw1Pj4/eCFI=
cosmossdk.io/errors v1.0.1 h1:bzu+Kcr0kS/1DuPBtUFdWjzLqyUuCiyHjyJB6srBV/0=
cosmossdk.io/errors v1.0.1/go.mod h1:MeelVSZThMi4bEakzhhhE/CKqVv3nOJDA25bIqRDu/U=
cosmossdk.io/log v1.5.0 h1:dVdzPJW9kMrnAYyMf1duqacoidB9uZIl+7c6z0mnq0g=
cosmossdk.io/log v1.5.0/go.mod h1:Tr46PUJjiUthlwQ+hxYtUtPn4D/oCZXAkYevBeh5+FI=
cosmossdk.io/math v1.5.0 h1:sbOASxee9Zxdjd6OkzogvBZ25/hP929vdcYcBJQbkLc=
cosmossdk.io/math v1.5.0/go.mod h1:AAwwBmUhqtk2nlku174JwSll+/DepUXW3rWIXN5q+Nw=
cosmossdk.io/store v1.1.1 h1:NA3PioJtWDVU7cHHeyvdva5J/ggyLDkyH0hGHl2804Y=
cosmossdk.io/store v1.1.1/go.mod h1:8DwVTz83/2PSI366FERGbWSH7hL6sB7HbYp8bqksNwM=
cosmossdk.io/tools/confix v0.1.2 h1:2hoM1oFCNisd0ltSAAZw2i4ponARPmlhuNu3yy0VwI4=
cosmossdk.io/tools/confix v0.1.2/go.mod h1:7XfcbK9sC/KNgVGxgLM0BrFbVcR/+6Dg7MFfpx7duYo=
cosmossdk.io/x/circuit v0.1.1 h1:KPJCnLChWrxD4jLwUiuQaf5mFD/1m7Omyo7oooefBVQ=
cosmossdk.io/x/circuit v0.1.1/go.mod h1:B6f/urRuQH8gjt4eLIXfZJucrbreuYrKh5CSjaOxr+Q=
cosmossdk.io/x/evidence v0.1.1 h1:Ks+BLTa3uftFpElLTDp9L76t2b58htjVbSZ86aoK/E4=
cosmossdk.io/x/evidence v0.1.1/go.mod h1:OoDsWlbtuyqS70LY51aX8FBTvguQqvFrt78qL7UzeNc=
cosmossdk.io/x/feegrant v0.1.1 h1:EKFWOeo/pup0yF0svDisWWKAA9Zags6Zd0P3nRvVvw8=
cosmossdk.io/x/feegrant v0.1.1/go.mod h1:2GjVVxX6G2fta8LWj7pC/ytHjryA6MHAJroBWHFNiEQ=
cosmossdk.io/x/nft v0.1.1 h1:pslAVS8P5NkW080+LWOamInjDcq+v2GSCo+BjN9sxZ8=
cosmossdk.io/x/nft v0.1.1/go.mod h1:Kac6F6y2gsKvoxU+fy8uvxRTi4BIhLOor2zgCNQwVgY=
cosmossdk.io/x/tx v0.13.7 h1:8WSk6B/OHJLYjiZeMKhq7DK7lHDMyK0UfDbBMxVmeOI=
cosmossdk.io/x/tx v0.13.7/go.mod h1:V6DImnwJMTq5qFjeGWpXNiT/fjgE4HtmclRmTqRVM3w=
cosmossdk.io/x/upgrade v0.1.4 h1:/BWJim24QHoXde8Bc64/2BSEB6W4eTydq0X/2f8+g38=
cosmossdk.io/x/upgrade v0.1.4/go.mod h1:9v0Aj+fs97O+Ztw+tG3/tp5JSlrmT7IcFhAebQHmOPo=
dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=
filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=
filippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=
github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 h1:/vQbFIOMbk2FiG/kXiLl8BRyzTWDw7gX/Hz7Dd5eDMs=
github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4/go.mod h1:hN7oaIRCjzsZ2dE+yG5k+rsdt3qcwykqK6HVGcKwsw4=
github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=
github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=
github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=
github.com/CosmWasm/wasmd v0.54.0 h1:/txsBehV1xnAi46H1xwuuY6D4NySujBy+wa5+ryItS8=
github.com/CosmWasm/wasmd v0.54.0/go.mod h1:8Zu/rj6RHbJ8Gx0WdqsGeHvgnEQb0rqchpqhgMxASRU=
github.com/CosmWasm/wasmvm/v2 v2.2.2 h1:MaQMtaZN8L08N0uAlBlOICP+GWolibJsajHGo3fQ03w=
github.com/CosmWasm/wasmvm/v2 v2.2.2/go.mod h1:bMhLQL4Yp9CzJi9A83aR7VO9wockOsSlZbT4ztOl6bg=
github.com/DataDog/datadog-go v3.2.0+incompatible h1:qSG2N4FghB1He/r2mFrWKCaL7dXCilEuNEeAn20fdD4=
github.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=
github.com/DataDog/zstd v1.5.5 h1:oWf5W7GtOLgp6bciQYDmhHHjdhYkALu6S/5Ni9ZgSvQ=
github.com/DataDog/zstd v1.5.5/go.mod h1:g4AWEaM3yOg3HYfnJ3YIawPnVdXJh9QME85blwSAmyw=
github.com/Knetic/govaluate v3.0.1-0.20171022003610-9aa49832a739+incompatible/go.mod h1:r7JcOSlj0wfOMncg0iLm8Leh48TZaKVeNIfJntJ2wa0=
github.com/Microsoft/go-winio v0.6.1 h1:9/kr64B9VUZrLm5YYwbGtUJnMgqWVOdUAXu6Migciow=
github.com/Microsoft/go-winio v0.6.1/go.mod h1:LRdKpFKfdobln8UmuiYcKPot9D2v6svN5+sAH+4kjUM=
github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 h1:TngWCqHvy9oXAN6lEVMRuU21PR1EtLVZJmdB18Gu3Rw=
github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=
github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=
github.com/PuerkitoBio/purell v1.1.1 h1:WEQqlqaGbrPkxLJWfBwQmfEAE1Z7ONdDLqrN38tNFfI=
github.com/PuerkitoBio/purell v1.1.1/go.mod h1:c11w/QuzBsJSee3cPx9rAFu61PvFxuPbtSwDGJws/X0=
github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 h1:d+Bc7a5rLufV/sSk/8dngufqelfh6jnri85riMAaF/M=
github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578/go.mod h1:uGdkoq3SwY9Y+13GIhn11/XLaGBb4BfwItxLd5jeuXE=
github.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=
github.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=
github.com/VividCortex/gohistogram v1.0.0 h1:6+hBz+qvs0JOrrNhhmR7lFxo5sINxBCGXrdtl/UvroE=
github.com/VividCortex/gohistogram v1.0.0/go.mod h1:Pf5mBqqDxYaXu3hDrrU+w6nw50o/4+TcAqDqk/vUH7g=
github.com/adlio/schema v1.3.6 h1:k1/zc2jNfeiZBA5aFTRy37jlBIuCkXCm0XmvpzCKI9I=
github.com/adlio/schema v1.3.6/go.mod h1:qkxwLgPBd1FgLRHYVCmQT/rrBr3JH38J9LjmVzWNudg=
github.com/afex/hystrix-go v0.0.0-20180502004556-fa1af6a1f4f5/go.mod h1:SkGFH1ia65gfNATL8TAiHDNxPzPdmEL5uirI2Uyuz6c=
github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=
github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=
github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=
github.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=
github.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=
github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=
github.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=
github.com/apache/thrift v0.13.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=
github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=
github.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=
github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=
github.com/aryann/difflib v0.0.0-20170710044230-e206f873d14a/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=
github.com/aws/aws-lambda-go v1.13.3/go.mod h1:4UKl9IzQMoD+QF79YdCuzCwp8VbmG4VAQwij/eHl5CU=
github.com/aws/aws-sdk-go v1.27.0/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=
github.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=
github.com/aws/aws-sdk-go v1.44.224 h1:09CiaaF35nRmxrzWZ2uRq5v6Ghg/d2RiPjZnSgtt+RQ=
github.com/aws/aws-sdk-go v1.44.224/go.mod h1:aVsgQcEevwlmQ7qHE9I3h+dtQgpqhFB+i8Phjh7fkwI=
github.com/aws/aws-sdk-go-v2 v0.18.0/go.mod h1:JWVYvqSMppoMJC0x5wdwiImzgXTI9FuZwxzkQq9wy+g=
github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=
github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=
github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=
github.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=
github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=
github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d h1:xDfNPAt8lFiC1UJrqV3uuy861HCTo708pDMbjHHdCas=
github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d/go.mod h1:6QX/PXZ00z/TKoufEY6K/a0k6AhaJrQKdFe6OfVXsa4=
github.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816 h1:41iFGWnSlI2gVpmOtVTJZNodLdLQLn/KsJqFvXwnd/s=
github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
github.com/bits-and-blooms/bitset v1.10.0 h1:ePXTeiPEazB5+opbv5fr8umg2R/1NlzgDsyepwsSr88=
github.com/bits-and-blooms/bitset v1.10.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=
github.com/btcsuite/btcd/btcec/v2 v2.3.4 h1:3EJjcN70HCu/mwqlUsGK8GcNVyLVxFDlWurTXGPFfiQ=
github.com/btcsuite/btcd/btcec/v2 v2.3.4/go.mod h1:zYzJ8etWJQIv1Ogk7OzpWjowwOdXY1W/17j2MW85J04=
github.com/btcsuite/btcd/btcutil v1.1.6 h1:zFL2+c3Lb9gEgqKNzowKUPQNb8jV7v5Oaodi/AYFd6c=
github.com/btcsuite/btcd/btcutil v1.1.6/go.mod h1:9dFymx8HpuLqBnsPELrImQeTQfKBQqzqGbbV3jK55aE=
github.com/bufbuild/protocompile v0.6.0 h1:Uu7WiSQ6Yj9DbkdnOe7U4mNKp58y9WDMKDn28/ZlunY=
github.com/bufbuild/protocompile v0.6.0/go.mod h1:YNP35qEYoYGme7QMtz5SBCoN4kL4g12jTtjuzRNdjpE=
github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a h1:bvO9Hr25/dVRdF8aGEMfc7TuTvlOtAF1b3x1876wLm0=
github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a/go.mod h1:0q/LBlPChRsvsub88tL4wgvx7RuWGrjcAXFiZf4uSjo=
github.com/bytedance/sonic v1.12.3 h1:W2MGa7RCU1QTeYRTPE3+88mVC0yXmsRQRChiyVocVjU=
github.com/bytedance/sonic v1.12.3/go.mod h1:B8Gt/XvtZ3Fqj+iSKMypzymZxw/FVwgIGKzMzT9r/rk=
github.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=
github.com/bytedance/sonic/loader v0.2.0 h1:zNprn+lsIP06C/IqCHs3gPQIvnvpKbbxyXQP1iU4kWM=
github.com/bytedance/sonic/loader v0.2.0/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=
github.com/casbin/casbin/v2 v2.1.2/go.mod h1:YcPU1XXisHhLzuxH9coDNf2FbKpjGlbCg3n9yuLkIJQ=
github.com/cenkalti/backoff v2.2.1+incompatible h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=
github.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:301-450
github.com/cenkalti/backoff/v4 v4.1.1/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=
github.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=
github.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=
github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=
github.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=
github.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=
github.com/cheggaaa/pb v1.0.27/go.mod h1:pQciLPpbU0oxA0h+VJYYLxO+XeDQb5pZijXscXHm81s=
github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=
github.com/chzyer/logex v1.2.1 h1:XHDu3E6q+gdHgsdTPH6ImJMIp436vR6MPtH8gP05QzM=
github.com/chzyer/logex v1.2.1/go.mod h1:JLbx6lG2kDbNRFnfkgvh4eRJRPX1QCoOIWomwysCBrQ=
github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=
github.com/chzyer/readline v1.5.1 h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=
github.com/chzyer/readline v1.5.1/go.mod h1:Eh+b79XXUwfKfcPLepksvw2tcLE/Ct21YObkaSkeBlk=
github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=
github.com/chzyer/test v1.0.0 h1:p3BQDXSxOhOG0P9z6/hGnII4LGiEPOYBhs8asl/fC04=
github.com/chzyer/test v1.0.0/go.mod h1:2JlltgoNkt4TW/z9V/IzDdFaMTM2JPIi26O1pF38GC8=
github.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=
github.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=
github.com/clbanning/x2j v0.0.0-20191024224557-825249438eec/go.mod h1:jMjuTZXRI4dUb/I5gc9Hdhagfvm9+RyrPryS/auMzxE=
github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
github.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=
github.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=
github.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=
github.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=
github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=
github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
github.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=
github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cockroachdb/apd/v2 v2.0.2 h1:weh8u7Cneje73dDh+2tEVLUvyBc89iwepWCD8b8034E=
github.com/cockroachdb/apd/v2 v2.0.2/go.mod h1:DDxRlzC2lo3/vSlmSoS7JkqbbrARPuFOGr0B9pvN3Gw=
github.com/cockroachdb/apd/v3 v3.2.1 h1:U+8j7t0axsIgvQUqthuNm82HIrYXodOV2iWLWtEaIwg=
github.com/cockroachdb/apd/v3 v3.2.1/go.mod h1:klXJcjp+FffLTHlhIG69tezTDvdP065naDsHzKhYSqc=
github.com/cockroachdb/datadriven v0.0.0-20190809214429-80d97fb3cbaa/go.mod h1:zn76sxSg3SzpJ0PPJaLDCu+Bu0Lg3sKTORVIj19EIF8=
github.com/cockroachdb/datadriven v1.0.3-0.20230801171734-e384cf455877 h1:1MLK4YpFtIEo3ZtMA5C795Wtv5VuUnrXX7mQG+aHg6o=
github.com/cockroachdb/datadriven v1.0.3-0.20230801171734-e384cf455877/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=
github.com/cockroachdb/errors v1.11.3 h1:5bA+k2Y6r+oz/6Z/RFlNeVCesGARKuC6YymtcDrbC/I=
github.com/cockroachdb/errors v1.11.3/go.mod h1:m4UIW4CDjx+R5cybPsNrRbreomiFqt8o1h1wUVazSd8=
github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce h1:giXvy4KSc/6g/esnpM7Geqxka4WSqI1SZc7sMJFd3y4=
github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce/go.mod h1:9/y3cnZ5GKakj/H4y9r9GTjCvAFta7KLgSHPJJYc52M=
github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b h1:r6VH0faHjZeQy818SGhaone5OnYfxFR/+AzdY3sf5aE=
github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b/go.mod h1:Vz9DsVWQQhf3vs21MhPMZpMGSht7O/2vFW2xusFUVOs=
github.com/cockroachdb/pebble v1.1.2 h1:CUh2IPtR4swHlEj48Rhfzw6l/d0qA31fItcIszQVIsA=
github.com/cockroachdb/pebble v1.1.2/go.mod h1:4exszw1r40423ZsmkG/09AFEG83I0uDgfujJdbL6kYU=
github.com/cockroachdb/redact v1.1.5 h1:u1PMllDkdFfPWaNGMyLD1+so+aq3uUItthCFqzwPJ30=
github.com/cockroachdb/redact v1.1.5/go.mod h1:BVNblN9mBWFyMyqK1k3AAiSxhvhfK2oOZZ2lK+dpvRg=
github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06 h1:zuQyyAKVxetITBuuhv3BI9cMrmStnpT18zmgmTxunpo=
github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06/go.mod h1:7nc4anLGjupUW/PeY5qiNYsdNXj7zopG+eqsS7To5IQ=
github.com/codahale/hdrhistogram v0.0.0-20161010025455-3a0bb77429bd/go.mod h1:sE/e/2PUdi/liOCUjSTXgM1o87ZssimdTWN964YiIeI=
github.com/coinbase/rosetta-sdk-go/types v1.0.0 h1:jpVIwLcPoOeCR6o1tU+Xv7r5bMONNbHU7MuEHboiFuA=
github.com/coinbase/rosetta-sdk-go/types v1.0.0/go.mod h1:eq7W2TMRH22GTW0N0beDnN931DW0/WOI1R2sdHNHG4c=
github.com/cometbft/cometbft v0.38.17 h1:FkrQNbAjiFqXydeAO81FUzriL4Bz0abYxN/eOHrQGOk=
github.com/cometbft/cometbft v0.38.17/go.mod h1:5l0SkgeLRXi6bBfQuevXjKqML1jjfJJlvI1Ulp02/o4=
github.com/cometbft/cometbft-db v1.0.1 h1:SylKuLseMLQKw3+i8y8KozZyJcQSL98qEe2CGMCGTYE=
github.com/cometbft/cometbft-db v1.0.1/go.mod h1:EBrFs1GDRiTqrWXYi4v90Awf/gcdD5ExzdPbg4X8+mk=
github.com/containerd/continuity v0.3.0 h1:nisirsYROK15TAMVukJOUyGJjz4BNQJBVsNvAXZJ/eg=
github.com/containerd/continuity v0.3.0/go.mod h1:wJEAIwKOm/pBZuBd0JmeTvnLquTB1Ag8espWhkykbPM=
github.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=
github.com/coreos/go-systemd v0.0.0-20180511133405-39ca1b05acc7/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=
github.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=
github.com/coreos/pkg v0.0.0-20160727233714-3ac0863d7acf/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=
github.com/cosmos/btcutil v1.0.5 h1:t+ZFcX77LpKtDBhjucvnOH8C2l2ioGsBNEQ3jef8xFk=
github.com/cosmos/btcutil v1.0.5/go.mod h1:IyB7iuqZMJlthe2tkIFL33xPyzbFYP0XVdS8P5lUPis=
github.com/cosmos/cosmos-db v1.1.1 h1:FezFSU37AlBC8S98NlSagL76oqBRWq/prTPvFcEJNCM=
github.com/cosmos/cosmos-db v1.1.1/go.mod h1:AghjcIPqdhSLP/2Z0yha5xPH3nLnskz81pBx3tcVSAw=
github.com/cosmos/cosmos-proto v1.0.0-beta.5 h1:eNcayDLpip+zVLRLYafhzLvQlSmyab+RC5W7ZfmxJLA=
github.com/cosmos/cosmos-proto v1.0.0-beta.5/go.mod h1:hQGLpiIUloJBMdQMMWb/4wRApmI9hjHH05nefC0Ojec=
github.com/cosmos/cosmos-sdk v0.50.13 h1:xQ32hhzVy7agEe7behMdZN0ezWhPss3KoLZsF9KoBnw=
github.com/cosmos/cosmos-sdk v0.50.13/go.mod h1:hrWEFMU1eoXqLJeE6VVESpJDQH67FS1nnMrQIjO2daw=
github.com/cosmos/go-bip39 v1.0.0 h1:pcomnQdrdH22njcAatO0yWojsUnCO3y2tNoV1cb6hHY=
github.com/cosmos/go-bip39 v1.0.0/go.mod h1:RNJv0H/pOIVgxw6KS7QeX2a0Uo0aKUlfhZ4xuwvCdJw=
github.com/cosmos/gogogateway v1.2.0 h1:Ae/OivNhp8DqBi/sh2A8a1D0y638GpL3tkmLQAiKxTE=
github.com/cosmos/gogogateway v1.2.0/go.mod h1:iQpLkGWxYcnCdz5iAdLcRBSw3h7NXeOkZ4GUkT+tbFI=
github.com/cosmos/gogoproto v1.4.2/go.mod h1:cLxOsn1ljAHSV527CHOtaIP91kK6cCrZETRBrkzItWU=
github.com/cosmos/gogoproto v1.7.0 h1:79USr0oyXAbxg3rspGh/m4SWNyoz/GLaAh0QlCe2fro=
github.com/cosmos/gogoproto v1.7.0/go.mod h1:yWChEv5IUEYURQasfyBW5ffkMHR/90hiHgbNgrtp4j0=
github.com/cosmos/iavl v1.2.4 h1:IHUrG8dkyueKEY72y92jajrizbkZKPZbMmG14QzsEkw=
github.com/cosmos/iavl v1.2.4/go.mod h1:GiM43q0pB+uG53mLxLDzimxM9l/5N9UuSY3/D0huuVw=
github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8 v8.2.0 h1:rM+S14DFiqmu6Rc3PuhvWqwywPsnt/CbIslSnBftPFs=
github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8 v8.2.0/go.mod h1:O5H9Ic3Pe6cmJn1eqlj5N48sLb8WQ1VWmDP4/11g/4E=
github.com/cosmos/ibc-apps/modules/ibc-hooks/v8 v8.0.0 h1:RBUq0cC9HJ9iIhifdWbV+kjDExzfhmAB7ktOAU1RWPU=
github.com/cosmos/ibc-apps/modules/ibc-hooks/v8 v8.0.0/go.mod h1:6szYOdzw0cUzFj8ZW+qfss0b4mMN1/HWxPATKZKbCfI=
github.com/cosmos/ibc-go/modules/apps/callbacks v0.2.1-0.20231113120333-342c00b0f8bd h1:Lx+/5dZ/nN6qPXP2Ofog6u1fmlkCFA1ElcOconnofEM=
github.com/cosmos/ibc-go/modules/apps/callbacks v0.2.1-0.20231113120333-342c00b0f8bd/go.mod h1:JWfpWVKJKiKtd53/KbRoKfxWl8FsT2GPcNezTOk0o5Q=
github.com/cosmos/ibc-go/modules/capability v1.0.1 h1:ibwhrpJ3SftEEZRxCRkH0fQZ9svjthrX2+oXdZvzgGI=
github.com/cosmos/ibc-go/modules/capability v1.0.1/go.mod h1:rquyOV262nGJplkumH+/LeYs04P3eV8oB7ZM4Ygqk4E=
github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72 h1:QjCi4bJoy9AXLL1e4jqi+4rHYN0gGZAQxf937cdWhw4=
github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72/go.mod h1:yiulzyQAZ+Ci802z/kVQqTA3lGiSJOmDpTq7kZxOUNE=
github.com/cosmos/ibc-go/v8 v8.7.0 h1:HqhVOkO8bDpClXE81DFQgFjroQcTvtpm0tCS7SQVKVY=
github.com/cosmos/ibc-go/v8 v8.7.0/go.mod h1:G2z+Q6ZQSMcyHI2+BVcJdvfOupb09M2h/tgpXOEdY6k=
github.com/cosmos/ics23/go v0.11.0 h1:jk5skjT0TqX5e5QJbEnwXIS2yI2vnmLOgpQPeM5RtnU=
github.com/cosmos/ics23/go v0.11.0/go.mod h1:A8OjxPE67hHST4Icw94hOxxFEJMBG031xIGF/JHNIY0=
github.com/cosmos/keyring v1.2.0 h1:8C1lBP9xhImmIabyXW4c3vFjjLiBdGCmfLUfeZlV1Yo=
github.com/cosmos/keyring v1.2.0/go.mod h1:fc+wB5KTk9wQ9sDx0kFXB3A0MaeGHM9AwRStKOQ5vOA=
github.com/cosmos/ledger-cosmos-go v0.14.0 h1:WfCHricT3rPbkPSVKRH+L4fQGKYHuGOK9Edpel8TYpE=
github.com/cosmos/ledger-cosmos-go v0.14.0/go.mod h1:E07xCWSBl3mTGofZ2QnL4cIUzMbbGVyik84QYKbX3RA=
github.com/cosmos/rosetta v0.50.6 h1:+Hgog7CUHevZuPxZaoqR8klTs1G3ukAcoVTIMporBmw=
github.com/cosmos/rosetta v0.50.6/go.mod h1:KUnwp2i9W0766Dv78HYNV5YKym+imaKmDvXc2W0Y1wA=
github.com/cosmos/rosetta-sdk-go v0.10.0 h1:E5RhTruuoA7KTIXUcMicL76cffyeoyvNybzUGSKFTcM=
github.com/cosmos/rosetta-sdk-go v0.10.0/go.mod h1:SImAZkb96YbwvoRkzSMQB6noNJXFgWl/ENIznEoYQI4=
github.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=
github.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=
github.com/creachadair/atomicfile v0.3.1 h1:yQORkHjSYySh/tv5th1dkKcn02NEW5JleB84sjt+W4Q=
github.com/creachadair/atomicfile v0.3.1/go.mod h1:mwfrkRxFKwpNAflYZzytbSwxvbK6fdGRRlp0KEQc0qU=
github.com/creachadair/tomledit v0.0.24 h1:5Xjr25R2esu1rKCbQEmjZYlrhFkDspoAbAKb6QKQDhQ=
github.com/creachadair/tomledit v0.0.24/go.mod h1:9qHbShRWQzSCcn617cMzg4eab1vbLCOjOshAWSzWr8U=
github.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=
github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=
github.com/danieljoos/wincred v1.1.2 h1:QLdCxFs1/Yl4zduvBdcHB8goaYk9RARS2SgLLRuAyr0=
github.com/danieljoos/wincred v1.1.2/go.mod h1:GijpziifJoIBfYh+S7BbkdUTU4LfM+QnGqR5Vl2tAx0=
github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=
github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/decred/dcrd/crypto/blake256 v1.0.1 h1:7PltbUIQB7u/FfZ39+DGa/ShuMyJ5ilcvdfma9wOH6Y=
github.com/decred/dcrd/crypto/blake256 v1.0.1/go.mod h1:2OfgNZ5wDpcsFmHmCK5gZTPcCXqlm2ArzUIkw9czNJo=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.2.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 h1:rpfIENRNNilwHwZeG5+P150SMrnNEcHYvcCuK6dPZSg=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=
github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f h1:U5y3Y5UE0w7amNe7Z5G/twsBW0KEalRQXZzf8ufSh9I=
github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f/go.mod h1:xH/i4TFMt8koVQZ6WFms69WAsDWr2XsYL3Hkl7jkoLE=
github.com/dgraph-io/badger/v4 v4.5.1 h1:7DCIXrQjo1LKmM96YD+hLVJ2EEsyyoWxJfpdd56HLps=
github.com/dgraph-io/badger/v4 v4.5.1/go.mod h1:qn3Be0j3TfV4kPbVoK0arXCD1/nr1ftth6sbL5jxdoA=
github.com/dgraph-io/ristretto/v2 v2.1.0 h1:59LjpOJLNDULHh8MC4UaegN52lC4JnO2dITsie/Pa8I=
github.com/dgraph-io/ristretto/v2 v2.1.0/go.mod h1:uejeqfYXpUomfse0+lO+13ATz4TypQYLJZzBSAemuB4=
github.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 h1:fAjc9m62+UWV/WAFKLNi6ZS0675eEUC9y3AlwSbQu1Y=
github.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=
github.com/distribution/reference v0.5.0 h1:/FUIFXtfc/x2gpa5/VGfiGLuOIdYa1t65IKK2OFGvA0=
github.com/distribution/reference v0.5.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=
github.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=
github.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=
github.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=
github.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=
github.com/dustin/go-humanize v0.0.0-20171111073723-bb3d318650d4/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=
github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=
github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=
github.com/dvsekhvalnov/jose2go v1.6.0 h1:Y9gnSnP4qEI0+/uQkHvFXeD2PLPJeXEL+ySMEA2EjTY=
github.com/dvsekhvalnov/jose2go v1.6.0/go.mod h1:QsHjhyTlD/lAVqn/NSbVZmSCGeDehTB/mPZadG+mhXU=
github.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=
github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=
github.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=
github.com/edsrzf/mmap-go v1.0.0/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=
github.com/emicklei/dot v1.6.2 h1:08GN+DD79cy/tzN6uLCT84+2Wk9u+wvqP+Hkx/dIR8A=
github.com/emicklei/dot v1.6.2/go.mod h1:DeV7GvQtIw4h2u73RKBkkFdvVAz0D9fzeJrgPW6gy/s=

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:451-600
github.com/envoyproxy/go-control-plane v0.6.9/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=
github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=
github.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=
github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
github.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
github.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=
github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=
github.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=
github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=
github.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=
github.com/fatih/color v1.15.0 h1:kOqh6YHBtK8aywxGerMG2Eq3H6Qgoqeo13Bk2Mv/nBs=
github.com/fatih/color v1.15.0/go.mod h1:0h5ZqXfHYED7Bhv2ZJamyIOUej9KtShiJESRwBDUSsw=
github.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=
github.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=
github.com/fortytw2/leaktest v1.3.0 h1:u8491cBMTQ8ft8aeV+adlcytMZylmA5nnwwkRZjI8vw=
github.com/fortytw2/leaktest v1.3.0/go.mod h1:jDsjWgpAGjm2CA7WthBh/CdZYEPF31XHquHwclZch5g=
github.com/franela/goblin v0.0.0-20200105215937-c9ffbefa60db/go.mod h1:7dvUGVsVBjqR7JHJk0brhHOZYGmfBYOrK0ZhYMEtBr4=
github.com/franela/goreq v0.0.0-20171204163338-bcd34c9993f8/go.mod h1:ZhphrRTfi2rbfLwlschooIH4+wKKDR4Pdxhh+TRoA20=
github.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=
github.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=
github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=
github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=
github.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=
github.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=
github.com/fxamacker/cbor/v2 v2.5.0 h1:oHsG0V/Q6E/wqTS2O1Cozzsy69nqCiguo5Q1a1ADivE=
github.com/fxamacker/cbor/v2 v2.5.0/go.mod h1:TA1xS00nchWmaBnEIxPSE5oHLuJBAVvqrtAnWBwBCVo=
github.com/getsentry/sentry-go v0.27.0 h1:Pv98CIbtB3LkMWmXi4Joa5OOcwbmnX88sF5qbK3r3Ps=
github.com/getsentry/sentry-go v0.27.0/go.mod h1:lc76E2QywIyW8WuBnwl8Lc4bkmQH4+w1gwTf25trprY=
github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=
github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=
github.com/gin-gonic/gin v1.8.1/go.mod h1:ji8BvRH1azfM+SYow9zQ6SZMvR8qOMZHmsCuWR9tTTk=
github.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=
github.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=
github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=
github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=
github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=
github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=
github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=
github.com/go-kit/kit v0.10.0/go.mod h1:xUsJbQ/Fp4kEt7AFgCuvyX4a71u8h9jB8tj/ORgOZ7o=
github.com/go-kit/kit v0.13.0 h1:OoneCcHKHQ03LfBpoQCUfCluwd2Vt3ohz+kvbJneZAU=
github.com/go-kit/kit v0.13.0/go.mod h1:phqEHMMUbyrCFCTgH48JueqrM3md2HcAZ8N3XE4FKDg=
github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=
github.com/go-kit/log v0.2.1 h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=
github.com/go-kit/log v0.2.1/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=
github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=
github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=
github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=
github.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=
github.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=
github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=
github.com/go-playground/locales v0.14.0/go.mod h1:sawfccIbzZTqEDETgFXqTho0QybSa7l++s0DH+LDiLs=
github.com/go-playground/universal-translator v0.18.0/go.mod h1:UvRDBj+xPUEGrFYl+lu/H90nyDXpg0fqeB/AQUGNTVA=
github.com/go-playground/validator/v10 v10.10.0/go.mod h1:74x4gJWsvQexRdW8Pn3dXSGrTK4nAUsbPlLADvpJkos=
github.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=
github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=
github.com/go-webauthn/webauthn v0.9.1 h1:KuZjvUX9JTuFjB2n7kZhM6n76BClLUFbFM8SLKnrXpo=
github.com/go-webauthn/webauthn v0.9.1/go.mod h1:m315kRGbUljOytw8b9FGWG9QzErjI5v02pNFCF3lwpI=
github.com/go-webauthn/x v0.1.4 h1:sGmIFhcY70l6k7JIDfnjVBiAAFEssga5lXIUXe0GtAs=
github.com/go-webauthn/x v0.1.4/go.mod h1:75Ug0oK6KYpANh5hDOanfDI+dvPWHk788naJVG/37H8=
github.com/gobwas/httphead v0.0.0-20180130184737-2c6c146eadee/go.mod h1:L0fX3K22YWvt/FAX9NnzrNzcI4wNYi9Yku4O0LKYflo=
github.com/gobwas/pool v0.2.0/go.mod h1:q8bcK0KcYlCgd9e7WYLm9LpyS+YeLd8JVDW6WezmKEw=
github.com/gobwas/ws v1.0.2/go.mod h1:szmBTxLgaFppYjEmNtny/v3w89xOydFnnZMcgRRu/EM=
github.com/goccy/go-json v0.9.7/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=
github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=
github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=
github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 h1:ZpnhV/YsD2/4cESfV5+Hoeu/iUR3ruzNvZ+yQfO03a0=
github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2/go.mod h1:bBOAhwG1umN6/6ZUMtDFBMQR8jRg9O75tm9K00oMsK4=
github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=
github.com/gogo/googleapis v0.0.0-20180223154316-0cd9801be74a/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=
github.com/gogo/googleapis v1.1.0/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=
github.com/gogo/googleapis v1.4.1-0.20201022092350-68b0159b7869/go.mod h1:5YRNX2z1oM5gXdAkurHa942MDgEJyk02w4OecKY87+c=
github.com/gogo/googleapis v1.4.1 h1:1Yx4Myt7BxzvUr5ldGSbwYiZG6t9wGBZ+8/fX3Wvtq0=
github.com/gogo/googleapis v1.4.1/go.mod h1:2lpHqI5OcWCtVElxXnPt+s8oJvMpySlOyM6xDCrzib4=
github.com/gogo/status v1.1.0 h1:+eIkrewn5q6b30y+g/BJINVVdi2xH7je5MPJ3ZPK3JA=
github.com/gogo/status v1.1.0/go.mod h1:BFv9nrluPLmrS0EmGVvLaPNmRosr9KapBYd5/hpY1WM=
github.com/golang-jwt/jwt/v4 v4.4.2/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=
github.com/golang-jwt/jwt/v5 v5.1.0 h1:UGKbA/IPjtS6zLcdB7i5TyACMgSbOTiR8qzXgw8HWQU=
github.com/golang-jwt/jwt/v5 v5.1.0/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=
github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
github.com/golang/groupcache v0.0.0-20160516000752-02826c3e7903/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=
github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
github.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=
github.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=
github.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=
github.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=
github.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=
github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.0/go.mod h1:Qd/q+1AKNOZr9uGQzbzCmRO6sUih6GTPZv6a1/R87v0=
github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
github.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
github.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=
github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
github.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=
github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=
github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=
github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb h1:PBC98N2aIaM3XXiurYmW7fx4GZkL8feAMVq7nEjURHk=
github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
github.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=
github.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=
github.com/google/flatbuffers v24.12.23+incompatible h1:ubBKR94NR4pXUCY/MUsRVzd9umNW7ht7EG9hHfS9FX8=
github.com/google/flatbuffers v24.12.23+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=
github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=
github.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:601-750
github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-tpm v0.9.0 h1:sQF6YqWMi+SCXpsmS3fd21oPy/vSddwZry4JnmltHVk=
github.com/google/go-tpm v0.9.0/go.mod h1:FkNVkc6C+IsvDI9Jw1OveJmxGZUUaKxtrpOS47QWKfU=
github.com/google/gofuzz v0.0.0-20170612174753-24818f796faf/go.mod h1:HP5RmnzzSNb993RKQDq4+1A4ia9nllfqcQFTQJedwGI=
github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
github.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=
github.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
github.com/google/martian v2.1.0+incompatible h1:/CP5g8u/VJHijgedC/Legn3BAbAaWPgecwXBIDzw5no=
github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=
github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=
github.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=
github.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=
github.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=
github.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=
github.com/google/orderedcode v0.0.1 h1:UzfcAexk9Vhv8+9pNOgRu41f16lHq725vPwnSeiG/Us=
github.com/google/orderedcode v0.0.1/go.mod h1:iVyU4/qPKHY5h/wSd6rZZCDcLJNxiWO6dvsYES2Sb20=
github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
github.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=
github.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=
github.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=
github.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/googleapis/enterprise-certificate-proxy v0.0.0-20220520183353-fd19c99a87aa/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=
github.com/googleapis/enterprise-certificate-proxy v0.1.0/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=
github.com/googleapis/enterprise-certificate-proxy v0.2.0/go.mod h1:8C0jb7/mgJe/9KK8Lm7X9ctZC2t60YyIpYEI16jx0Qg=
github.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=
github.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=
github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=
github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=
github.com/googleapis/gax-go/v2 v2.1.0/go.mod h1:Q3nei7sK6ybPYH7twZdmQpAd1MKb7pfu6SK+H1/DsU0=
github.com/googleapis/gax-go/v2 v2.1.1/go.mod h1:hddJymUZASv3XPyGkUpKj8pPO47Rmb0eJc8R6ouapiM=
github.com/googleapis/gax-go/v2 v2.2.0/go.mod h1:as02EH8zWkzwUoLbBaFeQ+arQaj/OthfcblKl4IGNaM=
github.com/googleapis/gax-go/v2 v2.3.0/go.mod h1:b8LNqSzNabLiUpXKkY7HAR5jr6bIT99EXz9pXxye9YM=
github.com/googleapis/gax-go/v2 v2.4.0/go.mod h1:XOTVJ59hdnfJLIP/dh8n5CGryZR2LxK9wbMD5+iXC6c=
github.com/googleapis/gax-go/v2 v2.5.1/go.mod h1:h6B0KMMFNtI2ddbGJn3T3ZbwkeT6yqEF02fYlzkUCyo=
github.com/googleapis/gax-go/v2 v2.6.0/go.mod h1:1mjbznJAPHFpesgE5ucqfYEscaz5kMdcIDwU/6+DDoY=
github.com/googleapis/gax-go/v2 v2.12.5 h1:8gw9KZK8TiVKB6q3zHY3SBzLnrGp6HQjyfYBYGmXdxA=
github.com/googleapis/gax-go/v2 v2.12.5/go.mod h1:BUDKcWo+RaKq5SC9vVYL0wLADa3VcfswbOMMRmB9H3E=
github.com/googleapis/go-type-adapters v1.0.0/go.mod h1:zHW75FOG2aur7gAO2B+MLby+cLsWGBF62rFAi7WjWO4=
github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=
github.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=
github.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=
github.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=
github.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=
github.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=
github.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=
github.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=
github.com/gorilla/websocket v0.0.0-20170926233335-4201258b820c/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=
github.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
github.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=
github.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
github.com/goware/urlx v0.3.2 h1:gdoo4kBHlkqZNaf6XlQ12LGtQOmpKJrR04Rc3RnpJEo=
github.com/goware/urlx v0.3.2/go.mod h1:h8uwbJy68o+tQXCGZNa9D73WN8n0r9OBae5bUnLcgjw=
github.com/grpc-ecosystem/go-grpc-middleware v1.0.1-0.20190118093823-f849b5445de4/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=
github.com/grpc-ecosystem/go-grpc-middleware v1.2.2/go.mod h1:EaizFBKfUKtMIF5iaDEhniwNedqGo9FuLFzppDr3uwI=
github.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=
github.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=
github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=
github.com/grpc-ecosystem/grpc-gateway v1.9.5/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=
github.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=
github.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=
github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c h1:6rhixN/i8ZofjG1Y75iExal34USq5p+wiN1tpie8IrU=
github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c/go.mod h1:NMPJylDgVpX0MLRlPy15sqSwOFv/U1GZ2m21JhFfek0=
github.com/hashicorp/consul/api v1.3.0/go.mod h1:MmDNSzIMUjNpY/mQ398R4bk2FnqQLoPndWW5VkKPlCE=
github.com/hashicorp/consul/sdk v0.3.0/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=
github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=
github.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
github.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=
github.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=
github.com/hashicorp/go-getter v1.7.5 h1:dT58k9hQ/vbxNMwoI5+xFYAJuv6152UNvdHokfI5wE4=
github.com/hashicorp/go-getter v1.7.5/go.mod h1:W7TalhMmbPmsSMdNjD0ZskARur/9GJ17cfHTRtXV744=
github.com/hashicorp/go-hclog v1.5.0 h1:bI2ocEMgcVlz55Oj1xZNBsVi900c7II+fWDyV9o+13c=
github.com/hashicorp/go-hclog v1.5.0/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=
github.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=
github.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=
github.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=
github.com/hashicorp/go-metrics v0.5.3 h1:M5uADWMOGCTUNU1YuC4hfknOeHNaX54LDm4oYSucoNE=
github.com/hashicorp/go-metrics v0.5.3/go.mod h1:KEjodfebIOuBYSAe/bHTm+HChmKSxAOXPBieMLYozDE=
github.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=
github.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=
github.com/hashicorp/go-plugin v1.5.2 h1:aWv8eimFqWlsEiMrYZdPYl+FdHaBJSN4AWwGWfT1G2Y=
github.com/hashicorp/go-plugin v1.5.2/go.mod h1:w1sAEES3g3PuV/RzUrgow20W2uErMly84hhD3um1WL4=
github.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=
github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=
github.com/hashicorp/go-safetemp v1.0.0 h1:2HR189eFNrjHQyENnQMMpCiBAsRxzbTMIgBhEyExpmo=
github.com/hashicorp/go-safetemp v1.0.0/go.mod h1:oaerMy3BhqiTbVye6QuFhFtIceqFoDHxNAB65b+Rj1I=
github.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=
github.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=
github.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=
github.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
github.com/hashicorp/go-version v1.6.0 h1:feTTfFNnjP967rlCxM/I9g701jU+RN74YKx2mOkIeek=
github.com/hashicorp/go-version v1.6.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=
github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
github.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=
github.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=
github.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=
github.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=
github.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=
github.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=
github.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=
github.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=
github.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=
github.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=
github.com/hashicorp/yamux v0.1.1 h1:yrQxtgseBDrq9Y652vSRDvsKCJKOUD+GzTS4Y0Y8pvE=
github.com/hashicorp/yamux v0.1.1/go.mod h1:CtWFDAQgb7dxtzFs4tWbplKIe2jSi3+5vKbgIO0SLnQ=
github.com/hdevalence/ed25519consensus v0.1.0 h1:jtBwzzcHuTmFrQN6xQZn6CQEO/V9f7HsjsjeEZ6auqU=
github.com/hdevalence/ed25519consensus v0.1.0/go.mod h1:w3BHWjwJbFU29IRHL1Iqkw3sus+7FctEyM4RqDxYNzo=
github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=
github.com/huandu/go-assert v1.1.5 h1:fjemmA7sSfYHJD7CUqs9qTwwfdNAx7/j2/ZlHXzNB3c=
github.com/huandu/go-assert v1.1.5/go.mod h1:yOLvuqZwmcHIC5rIzrBhT7D3Q9c3GFnd0JrPVhn/06U=
github.com/huandu/skiplist v1.2.0 h1:gox56QD77HzSC0w+Ws3MH3iie755GBJU1OER3h5VsYw=
github.com/huandu/skiplist v1.2.0/go.mod h1:7v3iFjLcSAzO4fN5B8dvebvo/qsfumiLiDXMrPiHF9w=
github.com/hudl/fargo v1.3.0/go.mod h1:y3CKSmjA+wD2gak7sUSXTAoopbhU08POFhmITJgmKTg=
github.com/iancoleman/orderedmap v0.3.0 h1:5cbR2grmZR/DiVt+VJopEhtVs9YGInGIxAoMJn+Ichc=
github.com/iancoleman/orderedmap v0.3.0/go.mod h1:XuLcCUkdL5owUCQeF2Ue9uuw1EptkJDkXXS7VoV7XGE=
github.com/iancoleman/strcase v0.3.0 h1:nTXanmYxhfFAMjZL34Ov6gkzEsSJZ5DbhxWjvSASxEI=
github.com/iancoleman/strcase v0.3.0/go.mod h1:iwCmte+B7n89clKwxIoIXy/HfoL7AsD47ZCWhYzw7ho=
github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=
github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=
github.com/improbable-eng/grpc-web v0.15.0 h1:BN+7z6uNXZ1tQGcNAuaU1YjsLTApzkjt2tzCixLaUPQ=
github.com/improbable-eng/grpc-web v0.15.0/go.mod h1:1sy9HKV4Jt9aEs9JSnkWlRJPuPtwNr0l57L4f878wP8=
github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=
github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=
github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=
github.com/influxdata/influxdb1-client v0.0.0-20191209144304-8bf82d3c094d/go.mod h1:qj24IKcXYK6Iy9ceXlo3Tc+vtHo9lIhSX5JddghvEPo=
github.com/jhump/protoreflect v1.15.3 h1:6SFRuqU45u9hIZPJAoZ8c28T3nK64BNdp9w6jFonzls=
github.com/jhump/protoreflect v1.15.3/go.mod h1:4ORHmSBmlCW8fh3xHmJMGyul1zNqZK4Elxc8qKP+p1k=
github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af/go.mod h1:Nht3zPeWKUH0NzdCt2Blrr5ys8VGpn0CEB0cQHVjt7k=

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:751-900
github.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=
github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=
github.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=
github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=
github.com/jmhodges/levigo v1.0.0 h1:q5EC36kV79HWeTBWsod3mG11EgStG3qArTKcvlksN1U=
github.com/jmhodges/levigo v1.0.0/go.mod h1:Q6Qx+uH3RAqyK4rFQroq9RL7mdkABMcfhEI+nNuzMJQ=
github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=
github.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=
github.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=
github.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.8/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=
github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=
github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=
github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=
github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=
github.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=
github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=
github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=
github.com/klauspost/compress v1.10.3/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=
github.com/klauspost/compress v1.11.7/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=
github.com/klauspost/compress v1.15.11/go.mod h1:QPwzmACJjUTFsnSHH934V6woptycfrDDJnH7hvFVbGM=
github.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=
github.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=
github.com/klauspost/cpuid/v2 v2.0.9 h1:lgaqFMSdTdQYdZ04uHyN2d/eKdOMyi2YLSvlQIBFYa4=
github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=
github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=
github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
github.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
github.com/kr/pretty v0.2.1/go.mod h1:ipq/a2n7PKx3OHsz4KJII5eveXtPO4qwEXGdVfWzfnI=
github.com/kr/pretty v0.3.0/go.mod h1:640gp4NfQd8pI5XOwp5fnNeVWj67G7CFk/SaSQn7NBk=
github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
github.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=
github.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=
github.com/larry0x/simapp v0.0.0-20230527213943-e57d94ffca4c h1:HxMMvjvPKv+Xttad2Blw6c9XKzg/Pk5TIZL8T04lUN0=
github.com/larry0x/simapp v0.0.0-20230527213943-e57d94ffca4c/go.mod h1:dPMXlnAbUE79idlpKD0z01+vBVvTiKceZZHztq2B34c=
github.com/leodido/go-urn v1.2.1/go.mod h1:zt4jvISO2HfUBqxjfIshjdMTYS56ZS/qv49ictyFfxY=
github.com/lestrrat-go/backoff/v2 v2.0.8 h1:oNb5E5isby2kiro9AgdHLv5N5tint1AnDVVf2E2un5A=
github.com/lestrrat-go/backoff/v2 v2.0.8/go.mod h1:rHP/q/r9aT27n24JQLa7JhSQZCKBBOiM/uP402WwN8Y=
github.com/lestrrat-go/blackmagic v1.0.2 h1:Cg2gVSc9h7sz9NOByczrbUvLopQmXrfFx//N+AkAr5k=
github.com/lestrrat-go/blackmagic v1.0.2/go.mod h1:UrEqBzIR2U6CnzVyUtfM6oZNMt/7O7Vohk2J0OGSAtU=
github.com/lestrrat-go/httpcc v1.0.1 h1:ydWCStUeJLkpYyjLDHihupbn2tYmZ7m22BGkcvZZrIE=
github.com/lestrrat-go/httpcc v1.0.1/go.mod h1:qiltp3Mt56+55GPVCbTdM9MlqhvzyuL6W/NMDA8vA5E=
github.com/lestrrat-go/httprc v1.0.5 h1:bsTfiH8xaKOJPrg1R+E3iE/AWZr/x0Phj9PBTG/OLUk=
github.com/lestrrat-go/httprc v1.0.5/go.mod h1:mwwz3JMTPBjHUkkDv/IGJ39aALInZLrhBp0X7KGUZlo=
github.com/lestrrat-go/iter v1.0.2 h1:gMXo1q4c2pHmC3dn8LzRhJfP1ceCbgSiT9lUydIzltI=
github.com/lestrrat-go/iter v1.0.2/go.mod h1:Momfcq3AnRlRjI5b5O8/G5/BvpzrhoFTZcn06fEOPt4=
github.com/lestrrat-go/jwx v1.2.28 h1:uadI6o0WpOVrBSf498tRXZIwPpEtLnR9CvqPFXeI5sA=
github.com/lestrrat-go/jwx v1.2.28/go.mod h1:nF+91HEMh/MYFVwKPl5HHsBGMPscqbQb+8IDQdIazP8=
github.com/lestrrat-go/jwx/v2 v2.0.21 h1:jAPKupy4uHgrHFEdjVjNkUgoBKtVDgrQPB/h55FHrR0=
github.com/lestrrat-go/jwx/v2 v2.0.21/go.mod h1:09mLW8zto6bWL9GbwnqAli+ArLf+5M33QLQPDggkUWM=
github.com/lestrrat-go/option v1.0.0/go.mod h1:5ZHFbivi4xwXxhxY9XHDe2FHo6/Z7WWmtT7T5nBBp3I=
github.com/lestrrat-go/option v1.0.1 h1:oAzP2fvZGQKWkvHa1/SAcFolBEca1oN+mQ7eooNBEYU=
github.com/lestrrat-go/option v1.0.1/go.mod h1:5ZHFbivi4xwXxhxY9XHDe2FHo6/Z7WWmtT7T5nBBp3I=
github.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=
github.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=
github.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=
github.com/lightstep/lightstep-tracer-go v0.18.1/go.mod h1:jlF1pusYV4pidLvZ+XD0UBX0ZE6WURAspgAczcDHrL4=
github.com/linxGnu/grocksdb v1.9.3 h1:s1cbPcOd0cU2SKXRG1nEqCOWYAELQjdqg3RVI2MH9ik=
github.com/linxGnu/grocksdb v1.9.3/go.mod h1:QYiYypR2d4v63Wj1adOOfzglnoII0gLj3PNh4fZkcFA=
github.com/lyft/protoc-gen-validate v0.0.13/go.mod h1:XbGvPuh87YZc5TdIa2/I4pLk0QoUACkjt2znoq26NVQ=
github.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=
github.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=
github.com/manifoldco/promptui v0.9.0 h1:3V4HzJk1TtXW1MTZMP7mdlwbBpIinw3HztaIlYthEiA=
github.com/manifoldco/promptui v0.9.0/go.mod h1:ka04sppxSGFAtxX0qhlYQjISsg9mR4GWtQEhdbn6Pgg=
github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=
github.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
github.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=
github.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=
github.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=
github.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=
github.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=
github.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=
github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
github.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=
github.com/mattn/go-runewidth v0.0.4/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=
github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=
github.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=
github.com/minio/highwayhash v1.0.3 h1:kbnuUMoHYyVl7szWjSxJnxw11k2U709jqFPPmIUyD6Q=
github.com/minio/highwayhash v1.0.3/go.mod h1:GGYsuwP/fPD6Y9hMiXuapVvlIUEhFhMTh0rxU3ik1LQ=
github.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=
github.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
github.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=
github.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
github.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=
github.com/mitchellh/go-testing-interface v1.14.1 h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=
github.com/mitchellh/go-testing-interface v1.14.1/go.mod h1:gfgS7OtZj6MA4U1UrDRp04twqAjfvlZyCfX3sDjEym8=
github.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=
github.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=
github.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
github.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=
github.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=
github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
github.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
github.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=
github.com/mtibben/percent v0.2.1 h1:5gssi8Nqo8QU/r2pynCm+hBQHpkB/uNK7BJCFogWdzs=
github.com/mtibben/percent v0.2.1/go.mod h1:KG9uO+SZkUp+VkRHsCdYQV3XSZrrSpR3O9ibNBTZrns=
github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=
github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=
github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=
github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=
github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=
github.com/mwitkow/grpc-proxy v0.0.0-20181017164139-0f1106ef9c76/go.mod h1:x5OoJHDHqxHS801UIuhqGl6QdSAEJvtausosHSdazIo=
github.com/nats-io/jwt v0.3.0/go.mod h1:fRYCDE99xlTsqUzISS1Bi75UBJ6ljOJQOAAu5VglpSg=
github.com/nats-io/jwt v0.3.2/go.mod h1:/euKqTS1ZD+zzjYrY7pseZrTtWQSjujC7xjPc8wL6eU=
github.com/nats-io/nats-server/v2 v2.1.2/go.mod h1:Afk+wRZqkMQs/p45uXdrVLuab3gwv3Z8C4HTBu8GD/k=
github.com/nats-io/nats.go v1.9.1/go.mod h1:ZjDU1L/7fJ09jvUSRVBR2e7+RnLiiIQyqyzEE/Zbp4w=
github.com/nats-io/nkeys v0.1.0/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=
github.com/nats-io/nkeys v0.1.3/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=
github.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=
github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=
github.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=
github.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=
github.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=
github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a h1:dlRvE5fWabOchtH7znfiFCcOvmIYgOeAS5ifBXBlh9Q=
github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a/go.mod h1:hVoHR2EVESiICEMbg137etN/Lx+lSrHPTD39Z/uE+2s=
github.com/oklog/oklog v0.3.2/go.mod h1:FCV+B7mhrz4o+ueLpx+KqkyXRGMWOYEvfiXtdGtbWGs=
github.com/oklog/run v1.0.0/go.mod h1:dlhp/R75TPv97u0XWUtDeV/lRKWPKSdTuV0TZvrmrQA=
github.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=
github.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=
github.com/olekukonko/tablewriter v0.0.0-20170122224234-a0225b3f23b5/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=
github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
github.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
github.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=
github.com/onsi/ginkgo v1.14.0/go.mod h1:iSB4RoI2tjJc9BBv4NKIKWKya62Rps+oPG/Lv9klQyY=
github.com/onsi/ginkgo v1.16.4 h1:29JGrr5oVBm5ulCWet69zQkzWipVXIol6ygQUe/EzNc=
github.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=
github.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=
github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=
github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
github.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=
github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:901-1050
github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=
github.com/opencontainers/image-spec v1.1.0-rc5 h1:Ygwkfw9bpDvs+c9E34SdgGOj41dX/cbdlwvlWt0pnFI=
github.com/opencontainers/image-spec v1.1.0-rc5/go.mod h1:X4pATf0uXsnn3g5aiGIsVnJBR4mxhKzfwmvK/B2NTm8=
github.com/opencontainers/runc v1.1.12 h1:BOIssBaW1La0/qbNZHXOOa71dZfZEQOzW7dqQf3phss=
github.com/opencontainers/runc v1.1.12/go.mod h1:S+lQwSfncpBha7XTy/5lBwWgm5+y5Ma/O44Ekby9FK8=
github.com/opentracing-contrib/go-observer v0.0.0-20170622124052-a52f23424492/go.mod h1:Ngi6UdF0k5OKD5t5wlmGhe/EDKPoUM3BXZSSfIuJbis=
github.com/opentracing/basictracer-go v1.0.0/go.mod h1:QfBfYuafItcjQuMwinw9GhYKwFXS9KnPs5lxoYwgW74=
github.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=
github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=
github.com/openzipkin-contrib/zipkin-go-opentracing v0.4.5/go.mod h1:/wsWhb9smxSfWAKL3wpBW7V8scJMt8N8gnaMCS9E/cA=
github.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=
github.com/openzipkin/zipkin-go v0.2.1/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=
github.com/openzipkin/zipkin-go v0.2.2/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=
github.com/ory/dockertest v3.3.5+incompatible h1:iLLK6SQwIhcbrG783Dghaaa3WPzGc+4Emza6EbVUUGA=
github.com/ory/dockertest v3.3.5+incompatible/go.mod h1:1vX4m9wsvi00u5bseYwXaSnhNrne+V0E6LAcBILJdPs=
github.com/osmosis-labs/fee-abstraction/v8 v8.0.2 h1:z8GfKxGqkEB66rO2iDNJ6/IA62ZZlyitOeOvzE11LiY=
github.com/osmosis-labs/fee-abstraction/v8 v8.0.2/go.mod h1:nNhh1fdDIXVK7xY/ji4qRNCkPEzgPrlJ1FD/ox3U+Oo=
github.com/pact-foundation/pact-go v1.0.4/go.mod h1:uExwJY4kCzNPcHRj+hCR/HBbOOIwwtUjcrb0b5/5kLM=
github.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=
github.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=
github.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=
github.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=
github.com/pelletier/go-toml/v2 v2.0.1/go.mod h1:r9LEWfGN8R5k0VXJ+0BkIe7MYkRdwZOjgMj2KwnJFUo=
github.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=
github.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=
github.com/performancecopilot/speed v3.0.0+incompatible/go.mod h1:/CLtqpZ5gBg1M9iaPbIdPPGyKcA8hKdoy6hAWba7Yac=
github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 h1:Dx7Ovyv/SFnMFw3fD4oEoeorXc6saIiQ23LrGLth0Gw=
github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7/go.mod h1:pxMtw7cyUw6B2bRH0ZBANSPg+AoSud1I1iyJHI69jH4=
github.com/pierrec/lz4 v1.0.2-0.20190131084431-473cd7ce01a1/go.mod h1:3/3N9NVKO0jef7pBehbT1qWhCMrIgbYNnFAZCqQ5LRc=
github.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=
github.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=
github.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=
github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=
github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=
github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/profile v1.2.1/go.mod h1:hJw3o1OdXxsrSjjVksARp5W95eeEaEfptyVZyv6JUPA=
github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=
github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
github.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=
github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=
github.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=
github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=
github.com/prometheus/client_golang v1.3.0/go.mod h1:hJaj2vgQTGQmVCsAACORcieXFeDPbaTKGT+JTgUa3og=
github.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=
github.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=
github.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=
github.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=
github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=
github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=
github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.1.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=
github.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=
github.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
github.com/prometheus/common v0.7.0/go.mod h1:DjGbpBbp5NYNiECxcL/VnbXCCaQpKd3tt26CguLLsqA=
github.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=
github.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=
github.com/prometheus/common v0.15.0/go.mod h1:U+gB1OBLb1lF3O42bTCL+FK18tX9Oar16Clt/msog/s=
github.com/prometheus/common v0.62.0 h1:xasJaQlnWAeyHdUBeGjXmutelfJHWMRr+Fg4QszZ2Io=
github.com/prometheus/common v0.62.0/go.mod h1:vyBcEuLSvWos9B1+CyL7JZ2up+uFzXhkqml0W5zIY1I=
github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=
github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=
github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=
github.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=
github.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=
github.com/prometheus/procfs v0.3.0/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=
github.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=
github.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=
github.com/rakyll/statik v0.1.7 h1:OF3QCZUuyPxuGEP7B4ypUa7sB/iHtqOTDYZXGM8KOdQ=
github.com/rakyll/statik v0.1.7/go.mod h1:AlZONWzMtEnMs7W4e/1LURLiI49pIMmp6V9Unghqrcc=
github.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=
github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=
github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=
github.com/regen-network/protobuf v1.3.3-alpha.regen.1 h1:OHEc+q5iIAXpqiqFKeLpu5NwTIkVXUs48vFMwzqpqY4=
github.com/regen-network/protobuf v1.3.3-alpha.regen.1/go.mod h1:2DjTFR1HhMQhiWC5sZ4OhQ3+NtdbZ6oBDKQwq5Ou+FI=
github.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=
github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=
github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
github.com/rogpeppe/go-internal v1.6.1/go.mod h1:xXDCJY+GAPziupqXw64V24skbSoqbTEfhy4qGm1nDQc=
github.com/rogpeppe/go-internal v1.8.0/go.mod h1:WmiCO8CzOY8rg0OYDC4/i/2WRWAB6poM+XZ2dLUbcbE=
github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
github.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=
github.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=
github.com/rs/cors v1.7.0/go.mod h1:gFx+x8UowdsKA9AchylcLynDq+nNFfI8FkUZdN/jGCU=
github.com/rs/cors v1.11.1 h1:eU3gRzXLRK57F5rKMGMZURNdIG4EoAmX8k94r9wXWHA=
github.com/rs/cors v1.11.1/go.mod h1:XyqrcTp5zjWr1wsJ8PIRZssZ8b/WMcMf71DJnit4EMU=
github.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=
github.com/rs/zerolog v1.33.0 h1:1cU2KZkvPxNyfgEmhHAz/1A9Bz+llsdYzklWFzgp0r8=
github.com/rs/zerolog v1.33.0/go.mod h1:/7mN4D5sKwJLZQ2b/znpjC3/GQWY/xaDXUM0kKWRHss=
github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
github.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=
github.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=
github.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=
github.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=
github.com/samuel/go-zookeeper v0.0.0-20190923202752-2cc03de413da/go.mod h1:gi+0XIa01GRL2eRQVjQkKGqKF3SF9vZR/HnPullcV2E=
github.com/sasha-s/go-deadlock v0.3.5 h1:tNCOEEDG6tBqrNDOX35j/7hL5FcFViG6awUGROb2NsU=
github.com/sasha-s/go-deadlock v0.3.5/go.mod h1:bugP6EGbdGYObIlx7pUZtWqlvo8k9H6vCBBsiChJQ5U=
github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=
github.com/segmentio/asm v1.2.0 h1:9BQrFxC+YOHJlTlHGkTrFWf59nbL3XnCoFLTwDCI7ys=
github.com/segmentio/asm v1.2.0/go.mod h1:BqMnlJP91P8d+4ibuonYZw9mfnzI9HfxselHZr5aAcs=
github.com/shamaton/msgpack/v2 v2.2.0 h1:IP1m01pHwCrMa6ZccP9B3bqxEMKMSmMVAVKk54g3L/Y=
github.com/shamaton/msgpack/v2 v2.2.0/go.mod h1:6khjYnkx73f7VQU7wjcFS9DFjs+59naVWJv1TB7qdOI=
github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=
github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=
github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=
github.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=
github.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=
github.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=
github.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=
github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=
github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=
github.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=
github.com/sony/gobreaker v0.4.1/go.mod h1:ZKptC7FHNvhBz7dN2LGjPVBz2sZJmc0/PkyDJOjmxWY=
github.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=
github.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=
github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
github.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=
github.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=
github.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=
github.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=
github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=
github.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=
github.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=
github.com/spf13/pflag v1.0.1/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=
github.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=
github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=
github.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=
github.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=
github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2 h1:U9TfBdvVL1Uk4Am4rhCkMpzwvI0aP05xt2p5gVHIt5I=
github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2/go.mod h1:L8XfncoH1M6fOrzqfRVQZePqo54ZlTDdatUpEr0Iz/E=
github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=
github.com/streadway/amqp v0.0.0-20190827072141-edfb9018d271/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=
github.com/streadway/handy v0.0.0-20190108123426-d5acb3125c2a/go.mod h1:qNTQ5P5JnDBl6z3cMAg/SywNDC5ABu5ApDIw6lUbRmI=
github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=
github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=
github.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=
github.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=
github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1051-1200
github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=
github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=
github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=
github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=
github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=
github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
github.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=
github.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=
github.com/syndtr/goleveldb v1.0.1-0.20210819022825-2ae1ddf74ef7 h1:epCh84lMvA70Z7CTTCmYQn2CKbY8j86K7/FAIr141uY=
github.com/syndtr/goleveldb v1.0.1-0.20210819022825-2ae1ddf74ef7/go.mod h1:q4W45IWZaF22tdD+VEXcAWRA037jwmWEB5VWYORlTpc=
github.com/tendermint/go-amino v0.16.0 h1:GyhmgQKvqF82e2oZeuMSp9JTN0N09emoSZlb2lyGa2E=
github.com/tendermint/go-amino v0.16.0/go.mod h1:TQU0M1i/ImAo+tYpZi73AU3V/dKeCoMC9Sphe2ZwGME=
github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=
github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=
github.com/tmc/grpc-websocket-proxy v0.0.0-20170815181823-89b8d40f7ca8/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=
github.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=
github.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=
github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=
github.com/ugorji/go v1.2.7/go.mod h1:nF9osbDWLy6bDVv/Rtoh6QgnvNDpmCalQV5urGCCS6M=
github.com/ugorji/go/codec v1.2.7/go.mod h1:WGN1fab3R1fzQlVQTkfxVtIBhWDRqOviHU95kRgeqEY=
github.com/ulikunitz/xz v0.5.10/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=
github.com/ulikunitz/xz v0.5.11 h1:kpFauv27b6ynzBNT/Xy+1k+fK4WswhN/6PN5WhFAGw8=
github.com/ulikunitz/xz v0.5.11/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=
github.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=
github.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=
github.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=
github.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=
github.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=
github.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=
github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=
github.com/zondax/hid v0.9.2 h1:WCJFnEDMiqGF64nlZz28E9qLVZ0KSJ7xpc5DLEyma2U=
github.com/zondax/hid v0.9.2/go.mod h1:l5wttcP0jwtdLjqjMMWFVEE7d1zO0jvSPA9OPZxWpEM=
github.com/zondax/ledger-go v0.14.3 h1:wEpJt2CEcBJ428md/5MgSLsXLBos98sBOyxNmCjfUCw=
github.com/zondax/ledger-go v0.14.3/go.mod h1:IKKaoxupuB43g4NxeQmbLXv7T9AlQyie1UpHb342ycI=
go.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=
go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5 h1:qxen9oVGzDdIRP6ejyAJc760RwW4SnVDiTYTzwnXuxo=
go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5/go.mod h1:eW0HG9/oHQhvRCvb1/pIXW4cOvtDqeQK+XSi3TnwaXY=
go.etcd.io/etcd v0.0.0-20191023171146-3cf2f69b5738/go.mod h1:dnLIgRNXwCJa5e+c6mIZCrds/GIG4ncV9HhK5PX7jPg=
go.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=
go.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=
go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=
go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=
go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=
go.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=
go.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=
go.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=
go.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=
go.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=
go.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=
go.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=
go.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=
go.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=
go.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=
go.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=
go.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=
go.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=
go.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=
go.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
go.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=
go.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=
go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=
go.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=
go.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=
go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=
go.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=
go.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=
go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=
go.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=
go.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=
go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=
go.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=
go.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=
golang.org/x/arch v0.0.0-20210923205945-b76863e36670 h1:18EFjUmQOcUvxNYSkA6jO9VAiXCnxFY6NyDX0bHDmkU=
golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=
golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
golang.org/x/crypto v0.0.0-20200728195943-123391ffb6de/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
golang.org/x/crypto v0.17.0/go.mod h1:gCAAfMLgwOJRpTjQ2zCCt2OcSfYMTeZVSRtQlPC7Nq4=
golang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=
golang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=
golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
golang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=
golang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=
golang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=
golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=
golang.org/x/exp v0.0.0-20200331195152-e8c3332aa8e5/go.mod h1:4M0jN8W1tt0AVLNr8HDosyJCDCDuyL9N9+3m7wDWgKw=
golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=
golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=
golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=
golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=
golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=
golang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=
golang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=
golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=
golang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=
golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=
golang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=
golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=
golang.org/x/mod v0.19.0 h1:fEdghXQSo20giMthA7cd28ZC+jts4amQ3YMXiP5oMQ8=
golang.org/x/mod v0.19.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=
golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1201-1350
golang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=
golang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200421231249-e086a090c8fd/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20200813134508-3edf25e44fcc/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=
golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=
golang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
golang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220607020251-c690dde0001d/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220617184016-355a448f1bc9/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220624214902-1bab6f366d9e/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220909164309-bea034e7d591/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=
golang.org/x/net v0.0.0-20221014081412-f15817d10f9b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=
golang.org/x/net v0.1.0/go.mod h1:Cx3nUiGt4eDBEyega/BKRp+/AlGL8hYe7U9odMt2Cco=
golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
golang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=
golang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=
golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210805134026-6f1e6394065a/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210819190943-2bc19b11175f/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220608161450-d0670ef3b1eb/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=
golang.org/x/oauth2 v0.0.0-20220622183110-fd043fe589d2/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=
golang.org/x/oauth2 v0.0.0-20220822191816-0ebed06d0094/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.0.0-20220909003341-f21342109be1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.1.0/go.mod h1:G9FE4dLTsbXUu90h/Pf85g4w1D+SSAgR+q46nJZ8M4A=
golang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=
golang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=
golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220601150217-0de741cfad7f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220929204114-8fcdb60fdcc0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=
golang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
golang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191220142924-d4481acd189f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200420163511-1957bb5e6d1f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200519105757-fe76b779f299/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200814200057-3d37ad5750ed/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1351-1500
golang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210603125802-9665404d3644/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210819135213-f52c844e1c1c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211210111614-af8b64212486/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220315194320-039c03cc5b86/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220502124256-b6088ccd6cba/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220610221304-9f5ed59c137d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220615213510-4f61da869c0c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220624220833-87e55d714810/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.15.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=
golang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
golang.org/x/term v0.1.0/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
golang.org/x/term v0.15.0/go.mod h1:BDl952bC7+uMoWR75FIrCDx79TPU9oHkTZ9yRbYOrX0=
golang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=
golang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=
golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
golang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=
golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=
golang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=
golang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=
golang.org/x/time v0.0.0-20180412165947-fbb02b2291d2/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=
golang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=
golang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=
golang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=
golang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=
golang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=
golang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=
golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=
golang.org/x/tools v0.23.0 h1:SGsXPZ+2l4JsgaCKkx+FQ9YZ5XEtA1GZYuoDjenLjvg=
golang.org/x/tools v0.23.0/go.mod h1:pnu6ufv6vQkll6szChhK3C3L/ruaIv5eBeztNG8wtsI=
golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1501-1650
golang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 h1:+cNy6SZtPcJQH3LJVLOSmiC7MMxXNOb3PU/VUEz+EhU=
golang.org/x/xerrors v0.0.0-20231012003039-104605ab7028/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=
google.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=
google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=
google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=
google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
google.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
google.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=
google.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=
google.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=
google.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=
google.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=
google.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=
google.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=
google.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=
google.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=
google.golang.org/api v0.47.0/go.mod h1:Wbvgpq1HddcWVtzsVLyfLp8lDg6AA241LmgIL59tHXo=
google.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=
google.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=
google.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=
google.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=
google.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=
google.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=
google.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=
google.golang.org/api v0.61.0/go.mod h1:xQRti5UdCmoCEqFxcz93fTl338AVqDgyaDRuOZ3hg9I=
google.golang.org/api v0.63.0/go.mod h1:gs4ij2ffTRXwuzzgJl/56BdwJaA194ijkfn++9tDuPo=
google.golang.org/api v0.67.0/go.mod h1:ShHKP8E60yPsKNw/w8w+VYaj9H6buA5UqDp8dhbQZ6g=
google.golang.org/api v0.70.0/go.mod h1:Bs4ZM2HGifEvXwd50TtW70ovgJffJYw2oRCOFU/SkfA=
google.golang.org/api v0.71.0/go.mod h1:4PyU6e6JogV1f9eA4voyrTY2batOLdgZ5qZ5HOCc4j8=
google.golang.org/api v0.74.0/go.mod h1:ZpfMZOVRMywNyvJFeqL9HRWBgAuRfSjJFpe9QtRRyDs=
google.golang.org/api v0.75.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=
google.golang.org/api v0.77.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=
google.golang.org/api v0.78.0/go.mod h1:1Sg78yoMLOhlQTeF+ARBoytAcH1NNyyl390YMy6rKmw=
google.golang.org/api v0.80.0/go.mod h1:xY3nI94gbvBrE0J6NHXhxOmW97HG7Khjkku6AFB3Hyg=
google.golang.org/api v0.84.0/go.mod h1:NTsGnUFJMYROtiquksZHBWtHfeMC7iYthki7Eq3pa8o=
google.golang.org/api v0.85.0/go.mod h1:AqZf8Ep9uZ2pyTvgL+x0D3Zt0eoT9b5E8fmzfu6FO2g=
google.golang.org/api v0.90.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=
google.golang.org/api v0.93.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=
google.golang.org/api v0.95.0/go.mod h1:eADj+UBuxkh5zlrSntJghuNeg8HwQ1w5lTKkuqaETEI=
google.golang.org/api v0.96.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.97.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.98.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.100.0/go.mod h1:ZE3Z2+ZOr87Rx7dqFsdRQkRBk36kDtp/h+QpHbB7a70=
google.golang.org/api v0.186.0 h1:n2OPp+PPXX0Axh4GuSsL5QL8xQCTb2oDwyzPnQvqUug=
google.golang.org/api v0.186.0/go.mod h1:hvRbBmgoje49RV3xqVXrmP6w93n6ehGgIVPYrGtBFFc=
google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
google.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=
google.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/genproto v0.0.0-20180518175338-11a468237815/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20180831171423-11092d34479b/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190530194941-fb225487d101/go.mod h1:z3L6/3dTEVtUr6QSP8miRzeRqwQOioJ9I66odjN4I7s=
google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=
google.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=
google.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200324203455-a04cca1dde73/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=
google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
google.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=
google.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210126160654-44e461bb6506/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210329143202-679c6ae281ee/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=
google.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=
google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=
google.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=
google.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=
google.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=
google.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=
google.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=
google.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=
google.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210909211513-a8c4777a87af/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211206160659-862468c7d6e0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211221195035-429b39de9b1c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220126215142-9970aeb2e350/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220207164111-0872dc986b00/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220218161850-94dd64e39d7c/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220222213610-43724f9ea8cf/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220304144024-325a89244dc8/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220310185008-1973136f34c6/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220314164441-57ef72a4c106/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=
google.golang.org/genproto v0.0.0-20220324131243-acbaeb5b85eb/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=
google.golang.org/genproto v0.0.0-20220407144326-9054f6ed7bac/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220413183235-5e96e2839df9/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220414192740-2d67ff6cf2b4/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220421151946-72621c1f0bd3/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220429170224-98d788798c3e/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220502173005-c8bf987b8c21/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220505152158-f39f71e6c8f3/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220518221133-4f43b3371335/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220523171625-347a074981d8/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220608133413-ed9918b62aac/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220616135557-88e70c0c3a90/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.sum:1651-1795
google.golang.org/genproto v0.0.0-20220617124728-180714bec0ad/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220624142145-8cd45d7dbd1f/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220628213854-d9e0b6570c03/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220722212130-b98a9ff5e252/go.mod h1:GkXuJDJ6aQ7lnJcRF+SJVgFdQhypqgl3LB1C9vabdRE=
google.golang.org/genproto v0.0.0-20220801145646-83ce21fca29f/go.mod h1:iHe1svFLAZg9VWz891+QbRMwUv9O/1Ww+/mngYeThbc=
google.golang.org/genproto v0.0.0-20220815135757-37a418bb8959/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220817144833-d7fd3f11b9b1/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220822174746-9e6da59bd2fc/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220829144015-23454907ede3/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220829175752-36a9c930ecbf/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220913154956-18f8339a66a5/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220914142337-ca0e39ece12f/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220915135415-7fd63a7952de/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220916172020-2692e8806bfa/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220919141832-68c03719ef51/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220920201722-2b89144ce006/go.mod h1:ht8XFiar2npT/g4vkk7O0WYS1sHOHbdujxbEp7CJWbw=
google.golang.org/genproto v0.0.0-20220926165614-551eb538f295/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=
google.golang.org/genproto v0.0.0-20220926220553-6981cbe3cfce/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=
google.golang.org/genproto v0.0.0-20221010155953-15ba04fc1c0e/go.mod h1:3526vdqwhZAwq4wsRUaVG555sVgsNmIjRtO7t/JH29U=
google.golang.org/genproto v0.0.0-20221014173430-6e2ab493f96b/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=
google.golang.org/genproto v0.0.0-20221014213838-99cd37c6964a/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=
google.golang.org/genproto v0.0.0-20221025140454-527a21cfbd71/go.mod h1:9qHF0xnpdSfF6knlcsnpzUu5y+rpwgbvsyGAZPBMg4s=
google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094 h1:6whtk83KtD3FkGrVb2hFXuQ+ZMbCNdakARIn/aHMmG8=
google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094/go.mod h1:Zs4wYw8z1zr6RNF4cwYb31mvN/EGaKAdQjNCF3DW6K4=
google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a h1:OAiGFfOiA0v9MRYsSidp3ubZaBnteRUyn3xB2ZQ5G/E=
google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a/go.mod h1:jehYqy3+AhJU9ve55aNOaSml7wUXjF9x6z2LcCfpAhY=
google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a h1:hgh8P4EuoxpsuKMXX/To36nOFD7vixReXgn8lPGnt+o=
google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a/go.mod h1:5uTbfoYQed2U9p3KIj2/Zzm02PYhndfdmML0qC3q3FU=
google.golang.org/grpc v1.12.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=
google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=
google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
google.golang.org/grpc v1.20.0/go.mod h1:chYK+tFQF0nDUGJgXMSgLCQk3phJEuONr2DCgLDdAQM=
google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=
google.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=
google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=
google.golang.org/grpc v1.22.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.23.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=
google.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=
google.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=
google.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.32.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=
google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=
google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=
google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.37.1/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.39.0/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=
google.golang.org/grpc v1.39.1/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=
google.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=
google.golang.org/grpc v1.40.1/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=
google.golang.org/grpc v1.44.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=
google.golang.org/grpc v1.45.0/go.mod h1:lN7owxKUQEqMfSyQikvvk5tf/6zMPsrK+ONuO11+0rQ=
google.golang.org/grpc v1.46.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.46.2/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.47.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.48.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.49.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.50.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.50.1/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.70.0 h1:pWFv03aZoHzlRKHWicjsZytKAiYCtNS0dHbXnIdq7jQ=
google.golang.org/grpc v1.70.0/go.mod h1:ofIJqVKDXx/JiXrwr2IG4/zwdH9txy3IlF40RmcJSQw=
google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=
google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=
google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
google.golang.org/protobuf v1.36.4 h1:6A3ZDJHn/eNqc1i+IdefRzy/9PokBTPvcqMySR7NNIM=
google.golang.org/protobuf v1.36.4/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=
gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=
gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20200902074654-038fdea0a05b/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
gopkg.in/cheggaaa/pb.v1 v1.0.25/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=
gopkg.in/cheggaaa/pb.v1 v1.0.27/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=
gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=
gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
gopkg.in/gcfg.v1 v1.2.3/go.mod h1:yesOnuUOFQAhST5vPY4nbZsb/huCgGGXlipJsBn0b3o=
gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=
gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
gopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=
gopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=
gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=
gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=
gotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=
honnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=
honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
nhooyr.io/websocket v1.8.6/go.mod h1:B70DZP8IakI65RVQ51MsWP/8jndNma26DVA/nFSCgW0=
nhooyr.io/websocket v1.8.10 h1:mv4p+MnGrLDcPlBoWsvPP7XCzTYMXP9F9eIGoKbgx7Q=
nhooyr.io/websocket v1.8.10/go.mod h1:rN9OFWIUwuxg4fR5tELlYC04bXYowCP9GX47ivo2l+c=
nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=
pgregory.net/rapid v1.1.0 h1:CMa0sjHSru3puNx+J0MIAuiiEV4N0qj8/cMWGBBCsjw=
pgregory.net/rapid v1.1.0/go.mod h1:PY5XlDGj0+V1FCq0o192FdRhpKHGTRIWBgqjDBTrq04=
rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=
rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=
rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=
sigs.k8s.io/yaml v1.1.0/go.mod h1:UJmg0vDUVViEyp3mgSv9WPwZCDxu4rQW1olrI1uml+o=
sigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=
sigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=
sourcegraph.com/sourcegraph/appdash v0.0.0-20190731080439-ebfcffb1b5c0/go.mod h1:hI742Nqp5OhwiqlzhgfbWU4mW4yO10fP+LoT9WOswdU=

=== File: buf.work.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/buf.work.yaml:1-5
# This workspace file points to the roots found in your
# previous "buf.yaml" configuration.
version: v1
directories:
  - proto

=== File: README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/README.md:1-150
# Xion Daemon

The Xion Daemon is scaffolded off of [CosmWasm/wasmd](https://github.com/CosmWasm/wasmd)
rather than being scaffolded with ignite in order to more easily achieve
compatibility with the latest cosmos-sdk and CosmWasm releases.

## Table of Contents

- [Prerequisites](#prerequisites)
- [Installation](#installation)
- [Build](#build)
- [Testing Prerequisites](#testing-prerequisites)
- [Testing](#testing)
- [Tools & Dependencies](#tools--dependencies)
- [Linting](#linting)
- [Protobuf](#protobuf)
- [Cleaning](#cleaning)

## Prerequisites

- [golang](https://golang.org)

## Installation

To build locally and install the `xiond` binary:

```sh
make install
```

To install a prebuilt package via homebrew/apt/yum/apk see [INSTALLERS.md](https://github.com/burnt-labs/xion/INSTALLERS.md)

## Build

To build the project:

```sh
make build
```

## Testing Prerequisites

- [golang](https://golang.org)
- [docker](https://docs.docker.com/get-docker/)
- [heighliner](https://github.com/strangelove-ventures/heighliner)

## Testing

There are various test targets available:

- `make test` - Run unit tests
- `make test-all` - Run all tests including unit, race, and coverage
- `make test-unit` - Run unit tests
- `make test-integration` - Run integration tests
- `make test-race` - Run tests with race condition detection
- `make test-cover` - Run tests with coverage
- `make benchmark` - Run benchmarks

## Specific Integration Tests

You can run specific integration tests by using the following commands:

```sh
make test-integration-dungeon-transfer-block
make test-integration-mint-module-no-inflation-no-fees
make test-integration-mint-module-inflation-high-fees
make test-integration-mint-module-inflation-low-fees
make test-integration-jwt-abstract-account
make test-integration-register-jwt-abstract-account
make test-integration-xion-send-platform-fee
make test-integration-xion-abstract-account
make test-integration-xion-min-default
make test-integration-xion-min-zero
make test-integration-xion-token-factory
make test-integration-xion-treasury-grants
make test-integration-min
make test-integration-web-auth-n-abstract-account
make test-integration-upgrade
make test-integration-upgrade-network
make test-integration-xion-mig
```

## Tools & Dependencies

To ensure all Go modules are downloaded:

```sh
make go-mod-cache
```

To verify dependencies:

```sh
make go.sum
```

To draw dependencies graph (requires Graphviz):

```sh
make draw-deps
```

## Linting

To format and lint the code:

```sh
make format
```

To just lint the code:

```sh
make lint
```

## Protobuf

*** Note: The prorobuf commands require Docker

To generate protobuf files:

```sh
make proto-gen
```

To format protobuf files:

```sh
make proto-format
```

To lint protobuf files:

```sh
make proto-lint
```

To check for breaking changes in protobuf files:

```sh
make proto-check-breaking
```

## Cleaning

To clean build artifacts:

```sh
make clean

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/README.md:151-159
```

To perform a full clean including vendor directory:

```sh
make distclean
```

For more detailed usage, refer to the individual make targets in the Makefile.

=== File: .gitmodules ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.gitmodules:1-3
[submodule "devnet"]
	path = devnet
	url = https://github.com/burnt-labs/devnet

=== File: INSTALLERS.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/INSTALLERS.md:1-101
# Install Via Package installers

## Homebrew

Tap the burnt-labs/xion repository

```bash
brew tap burnt-labs/xion
```

Install xiond

```bash
brew install xiond
```

Verify Installation

```bash
xiond version
```

## Debian/Apt

Download the repository key

```bash
wget -qO - https://packages.burnt.com/apt/gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/burnt-keyring.gpg
```

Add the burnt repository to your apt sources list, inlude the signing key

```bash
echo "deb [signed-by=/usr/share/keyrings/burnt-keyring.gpg] http://packages.burnt.com/apt /" | sudo tee /etc/apt/sources.list.d/burnt.list
```

Update sources, and install xiond

```bash
sudo apt update
sudo apt install xiond
```

Verify Installation

```bash
xiond version
```

## Redhat/Dnf/Yum/Rpm

Import the burnt repository key

```bash
sudo rpm --import https://packages.burnt.com/yum/gpg.key
```

Add the burnt repository to your repos list

```bash
printf "[burnt]\nname=Burnt Repo\nenabled=1\nbaseurl=https://packages.burnt.com/yum/\n" | sudo tee /etc/yum.repos.d/burnt.repo
```

Install xiond

```bash
sudo dnf install xiond
```

Verify Installation

```bash
xiond version
```

## Alpine Linux

Download the repository key

```bash
wget -qO - https://alpine.fury.io/burnt/burnt@fury.io-b8abd990.rsa.pub | sudo tee /etc/apk/keys/burnt@fury.io-b8abd990.rsa.pub 
```

Add the burnt repository to your repository list, inlude the signing key

```bash
echo "https://alpine.fury.io/burnt" >> /etc/apk/repositories
```

Update sources, and install xiond

```bash
sudo apk update
sudo apk add xiond
```

Verify Installation

```bash
xiond version
```

=== File: go.mod ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.mod:1-150
module github.com/burnt-labs/xion

go 1.23.5

replace (
	cosmossdk.io/core => cosmossdk.io/core v0.11.1
	github.com/99designs/keyring => github.com/cosmos/keyring v1.2.0

	// dgrijalva/jwt-go is deprecated and doesn't receive security updates.
	// See: https://github.com/cosmos/cosmos-sdk/issues/13134
	github.com/dgrijalva/jwt-go => github.com/golang-jwt/jwt/v4 v4.4.2
	// Fix upstream GHSA-h395-qcrw-5vmq vulnerability.
	// See: https://github.com/cosmos/cosmos-sdk/issues/10409
	github.com/gin-gonic/gin => github.com/gin-gonic/gin v1.8.1

	github.com/gogo/protobuf => github.com/regen-network/protobuf v1.3.3-alpha.regen.1
	github.com/larry0x/abstract-account => github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a
	github.com/strangelove-ventures/tokenfactory => github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2

	// pin version! 126854af5e6d has issues with the store so that queries fail
	github.com/syndtr/goleveldb => github.com/syndtr/goleveldb v1.0.1-0.20210819022825-2ae1ddf74ef7

	github.com/vektra/mockery/v2 => github.com/vektra/mockery/v2 v2.14.0
)

require (
	cosmossdk.io/api v0.7.6
	cosmossdk.io/client/v2 v2.0.0-beta.4
	cosmossdk.io/collections v0.4.0
	cosmossdk.io/core v0.12.0
	cosmossdk.io/depinject v1.1.0
	cosmossdk.io/errors v1.0.1
	cosmossdk.io/math v1.5.0
	cosmossdk.io/store v1.1.1
	cosmossdk.io/tools/confix v0.1.2
	cosmossdk.io/x/evidence v0.1.1
	cosmossdk.io/x/feegrant v0.1.1
	cosmossdk.io/x/nft v0.1.1
	cosmossdk.io/x/tx v0.13.7
	cosmossdk.io/x/upgrade v0.1.4
	github.com/CosmWasm/wasmd v0.54.0
	github.com/CosmWasm/wasmvm/v2 v2.2.2
	github.com/cometbft/cometbft v0.38.17
	github.com/cosmos/cosmos-db v1.1.1
	github.com/cosmos/cosmos-proto v1.0.0-beta.5
	github.com/cosmos/cosmos-sdk v0.50.13
	github.com/cosmos/gogoproto v1.7.0
	github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8 v8.2.0
	github.com/cosmos/ibc-apps/modules/ibc-hooks/v8 v8.0.0
	github.com/cosmos/ibc-go/modules/capability v1.0.1
	github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72
	github.com/cosmos/ibc-go/v8 v8.7.0
	github.com/cosmos/rosetta v0.50.6
	github.com/dvsekhvalnov/jose2go v1.6.0
	github.com/go-webauthn/webauthn v0.9.1
	github.com/golang/protobuf v1.5.4
	github.com/gorilla/mux v1.8.1
	github.com/grpc-ecosystem/grpc-gateway v1.16.0
	github.com/hashicorp/go-metrics v0.5.3
	github.com/larry0x/abstract-account v0.0.0-20240202022305-255071ed91ee
	github.com/lestrrat-go/jwx/v2 v2.0.21
	github.com/osmosis-labs/fee-abstraction/v8 v8.0.2
	github.com/prometheus/client_golang v1.20.5
	github.com/spf13/cast v1.7.1
	github.com/spf13/cobra v1.8.1
	github.com/spf13/viper v1.19.0
	github.com/strangelove-ventures/tokenfactory v0.50.3
	github.com/stretchr/testify v1.10.0
	github.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d
	go.uber.org/mock v0.4.0
	google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a
	google.golang.org/grpc v1.70.0
	gotest.tools/v3 v3.5.1
	sigs.k8s.io/yaml v1.4.0
)

require (
	cloud.google.com/go/auth v0.6.0 // indirect
	cloud.google.com/go/auth/oauth2adapt v0.2.2 // indirect
	github.com/DataDog/datadog-go v3.2.0+incompatible // indirect
	github.com/DataDog/zstd v1.5.5 // indirect
	github.com/PuerkitoBio/purell v1.1.1 // indirect
	github.com/PuerkitoBio/urlesc v0.0.0-20170810143723-de5bf2ad4578 // indirect
	github.com/bits-and-blooms/bitset v1.10.0 // indirect
	github.com/bytedance/sonic v1.12.3 // indirect
	github.com/bytedance/sonic/loader v0.2.0 // indirect
	github.com/cloudwego/base64x v0.1.4 // indirect
	github.com/cloudwego/iasm v0.2.0 // indirect
	github.com/cockroachdb/apd/v3 v3.2.1 // indirect
	github.com/cockroachdb/datadriven v1.0.3-0.20230801171734-e384cf455877 // indirect
	github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce // indirect
	github.com/cockroachdb/pebble v1.1.2 // indirect
	github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06 // indirect
	github.com/cometbft/cometbft-db v1.0.1 // indirect
	github.com/creachadair/atomicfile v0.3.1 // indirect
	github.com/creachadair/tomledit v0.0.24 // indirect
	github.com/dgraph-io/badger/v4 v4.5.1 // indirect
	github.com/dgraph-io/ristretto/v2 v2.1.0 // indirect
	github.com/distribution/reference v0.5.0 // indirect
	github.com/docker/go-connections v0.5.0 // indirect
	github.com/emicklei/dot v1.6.2 // indirect
	github.com/fatih/color v1.15.0 // indirect
	github.com/gogo/status v1.1.0 // indirect
	github.com/golang/mock v1.6.0 // indirect
	github.com/google/flatbuffers v24.12.23+incompatible // indirect
	github.com/goware/urlx v0.3.2 // indirect
	github.com/hashicorp/go-hclog v1.5.0 // indirect
	github.com/hashicorp/go-plugin v1.5.2 // indirect
	github.com/hashicorp/go-uuid v1.0.3 // indirect
	github.com/hashicorp/golang-lru/v2 v2.0.7 // indirect
	github.com/hashicorp/yamux v0.1.1 // indirect
	github.com/iancoleman/strcase v0.3.0 // indirect
	github.com/klauspost/cpuid/v2 v2.0.9 // indirect
	github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect
	github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a // indirect
	github.com/oklog/run v1.1.0 // indirect
	github.com/onsi/gomega v1.27.10 // indirect
	github.com/sagikazarmark/locafero v0.4.0 // indirect
	github.com/sagikazarmark/slog-shim v0.1.0 // indirect
	github.com/shamaton/msgpack/v2 v2.2.0 // indirect
	github.com/sourcegraph/conc v0.3.0 // indirect
	github.com/twitchyliquid64/golang-asm v0.15.1 // indirect
	go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect
	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect
	go.uber.org/multierr v1.11.0 // indirect
	golang.org/x/arch v0.0.0-20210923205945-b76863e36670 // indirect
	golang.org/x/time v0.5.0 // indirect
)

require (
	cloud.google.com/go v0.115.0 // indirect
	cloud.google.com/go/compute/metadata v0.5.2 // indirect
	cloud.google.com/go/iam v1.1.9 // indirect
	cloud.google.com/go/storage v1.41.0 // indirect
	cosmossdk.io/log v1.5.0
	filippo.io/edwards25519 v1.1.0 // indirect
	github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 // indirect
	github.com/99designs/keyring v1.2.2 // indirect
	github.com/aws/aws-sdk-go v1.44.224 // indirect
	github.com/beorn7/perks v1.0.1 // indirect
	github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d // indirect
	github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816 // indirect
	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
	github.com/cespare/xxhash/v2 v2.3.0 // indirect
	github.com/chzyer/readline v1.5.1 // indirect
	github.com/cockroachdb/apd/v2 v2.0.2 // indirect
	github.com/cockroachdb/errors v1.11.3 // indirect
	github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b // indirect
	github.com/cockroachdb/redact v1.1.5 // indirect
	github.com/coinbase/rosetta-sdk-go/types v1.0.0 // indirect

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/go.mod:151-273
	github.com/cosmos/btcutil v1.0.5 // indirect
	github.com/cosmos/go-bip39 v1.0.0 // indirect
	github.com/cosmos/gogogateway v1.2.0 // indirect
	github.com/cosmos/iavl v1.2.4 // indirect
	github.com/cosmos/ics23/go v0.11.0 // indirect
	github.com/cosmos/ledger-cosmos-go v0.14.0 // indirect
	github.com/cosmos/rosetta-sdk-go v0.10.0 // indirect
	github.com/danieljoos/wincred v1.1.2 // indirect
	github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect
	github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 // indirect
	github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f // indirect
	github.com/dustin/go-humanize v1.0.1 // indirect
	github.com/felixge/httpsnoop v1.0.4 // indirect
	github.com/fsnotify/fsnotify v1.7.0 // indirect
	github.com/fxamacker/cbor/v2 v2.5.0 // indirect
	github.com/getsentry/sentry-go v0.27.0 // indirect
	github.com/go-kit/kit v0.13.0 // indirect
	github.com/go-kit/log v0.2.1 // indirect
	github.com/go-logfmt/logfmt v0.6.0 // indirect
	github.com/go-logr/logr v1.4.2 // indirect
	github.com/go-logr/stdr v1.2.2 // indirect
	github.com/go-webauthn/x v0.1.4 // indirect
	github.com/goccy/go-json v0.10.2 // indirect
	github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 // indirect
	github.com/gogo/googleapis v1.4.1 // indirect
	github.com/gogo/protobuf v1.3.3 // indirect
	github.com/golang-jwt/jwt/v5 v5.1.0
	github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect
	github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb // indirect
	github.com/google/btree v1.1.3 // indirect
	github.com/google/go-cmp v0.6.0 // indirect
	github.com/google/go-tpm v0.9.0 // indirect
	github.com/google/gofuzz v1.2.0 // indirect
	github.com/google/orderedcode v0.0.1 // indirect
	github.com/google/s2a-go v0.1.7 // indirect
	github.com/google/uuid v1.6.0 // indirect
	github.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect
	github.com/googleapis/gax-go/v2 v2.12.5 // indirect
	github.com/gorilla/handlers v1.5.2 // indirect
	github.com/gorilla/websocket v1.5.3 // indirect
	github.com/grpc-ecosystem/go-grpc-middleware v1.4.0 // indirect
	github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c // indirect
	github.com/hashicorp/go-cleanhttp v0.5.2 // indirect
	github.com/hashicorp/go-getter v1.7.5 // indirect
	github.com/hashicorp/go-immutable-radix v1.3.1 // indirect
	github.com/hashicorp/go-safetemp v1.0.0 // indirect
	github.com/hashicorp/go-version v1.6.0 // indirect
	github.com/hashicorp/golang-lru v1.0.2 // indirect
	github.com/hashicorp/hcl v1.0.0 // indirect
	github.com/hdevalence/ed25519consensus v0.1.0 // indirect
	github.com/huandu/skiplist v1.2.0 // indirect
	github.com/iancoleman/orderedmap v0.3.0 // indirect
	github.com/improbable-eng/grpc-web v0.15.0 // indirect
	github.com/inconshreveable/mousetrap v1.1.0 // indirect
	github.com/jmespath/go-jmespath v0.4.0 // indirect
	github.com/jmhodges/levigo v1.0.0 // indirect
	github.com/klauspost/compress v1.17.11 // indirect
	github.com/kr/pretty v0.3.1 // indirect
	github.com/kr/text v0.2.0 // indirect
	github.com/lestrrat-go/backoff/v2 v2.0.8 // indirect
	github.com/lestrrat-go/blackmagic v1.0.2 // indirect
	github.com/lestrrat-go/httpcc v1.0.1 // indirect
	github.com/lestrrat-go/httprc v1.0.5 // indirect
	github.com/lestrrat-go/iter v1.0.2 // indirect
	github.com/lestrrat-go/jwx v1.2.28
	github.com/lestrrat-go/option v1.0.1 // indirect
	github.com/lib/pq v1.10.9 // indirect
	github.com/linxGnu/grocksdb v1.9.3 // indirect
	github.com/magiconair/properties v1.8.7 // indirect
	github.com/manifoldco/promptui v0.9.0 // indirect
	github.com/mattn/go-colorable v0.1.13 // indirect
	github.com/mattn/go-isatty v0.0.20 // indirect
	github.com/minio/highwayhash v1.0.3 // indirect
	github.com/mitchellh/go-homedir v1.1.0 // indirect
	github.com/mitchellh/go-testing-interface v1.14.1 // indirect
	github.com/mitchellh/mapstructure v1.5.0 // indirect
	github.com/mtibben/percent v0.2.1 // indirect
	github.com/opencontainers/go-digest v1.0.0 // indirect
	github.com/pelletier/go-toml/v2 v2.2.2 // indirect
	github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 // indirect
	github.com/pkg/errors v0.9.1 // indirect
	github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect
	github.com/prometheus/client_model v0.6.1 // indirect
	github.com/prometheus/common v0.62.0 // indirect
	github.com/prometheus/procfs v0.15.1 // indirect
	github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 // indirect
	github.com/rogpeppe/go-internal v1.12.0 // indirect
	github.com/rs/cors v1.11.1 // indirect
	github.com/rs/zerolog v1.33.0 // indirect
	github.com/sasha-s/go-deadlock v0.3.5 // indirect
	github.com/segmentio/asm v1.2.0 // indirect
	github.com/spf13/afero v1.11.0 // indirect
	github.com/spf13/pflag v1.0.5 // indirect
	github.com/subosito/gotenv v1.6.0 // indirect
	github.com/tendermint/go-amino v0.16.0 // indirect
	github.com/tidwall/btree v1.7.0 // indirect
	github.com/ulikunitz/xz v0.5.11 // indirect
	github.com/x448/float16 v0.8.4 // indirect
	github.com/zondax/hid v0.9.2 // indirect
	github.com/zondax/ledger-go v0.14.3 // indirect
	go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5 // indirect
	go.opencensus.io v0.24.0 // indirect
	go.opentelemetry.io/otel v1.32.0 // indirect
	go.opentelemetry.io/otel/metric v1.32.0 // indirect
	go.opentelemetry.io/otel/trace v1.32.0 // indirect
	golang.org/x/crypto v0.32.0 // indirect
	golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect
	golang.org/x/net v0.34.0 // indirect
	golang.org/x/oauth2 v0.24.0 // indirect
	golang.org/x/sync v0.10.0 // indirect
	golang.org/x/sys v0.29.0 // indirect
	golang.org/x/term v0.28.0 // indirect
	golang.org/x/text v0.21.0 // indirect
	google.golang.org/api v0.186.0 // indirect
	google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094 // indirect
	google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a // indirect
	google.golang.org/protobuf v1.36.4
	gopkg.in/ini.v1 v1.67.0 // indirect
	gopkg.in/yaml.v2 v2.4.0 // indirect
	gopkg.in/yaml.v3 v3.0.1 // indirect
	nhooyr.io/websocket v1.8.10 // indirect
	pgregory.net/rapid v1.1.0 // indirect
)

=== File: .go.work ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.go.work:1-6
go 1.20

use (
	.
	./integration_tests
)

=== File: .dockerignore ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.dockerignore:1-4
# Folders we don't want to copy to Docker daemon in `docker build . -t cosmwasm/xiond:latest`
.github/
.vscode/
devnet/

=== File: .gitignore ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.gitignore:1-59
# OS
.DS_Store
*.swp
*.swo
*.swl
*.swm
*.swn
.vscode
.idea

# Build
vendor
build
tools/bin/*
examples/build/*
docs/_build
docs/tutorial
dist
tools-stamp
docs/node_modules
client/docs/node_modules/
client/docs/tmp-swagger-gen/
devnet/.xiond
devnet/.shared

# Data - ideally these don't exist
baseapp/data/*
client/lcd/keys/*
mytestnet

# Testing
coverage.txt
profile.out
xion-data

# Vagrant
.vagrant/
*.box
*.log
vagrant

# IDE
.idea/
*.iml

# Graphviz
dependency-graph.png

# Latex
*.aux
*.out
*.synctex.gz
contract_tests/*

# Go
go.work
go.work.sum
/integration_tests/integration_tests.test
release

=== File: .codecov.yml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.codecov.yml:1-57
#
# This codecov.yml is the default configuration for
# all repositories on Codecov. You may adjust the settings
# below in your own codecov.yml in your repository.
#
coverage:
  precision: 2
  round: down
  range: 70...100

  status:
    # Learn more at https://docs.codecov.io/docs/commit-status
    project:
      default:
        threshold: 1% # allow this much decrease on project
      app:
        target: 70%
        flags:
          - app
      modules:
        target: 70%
        flags:
          - modules
      client:
        flags:
          - client
    changes: false

comment:
  layout: "reach, diff, files"
  behavior: default # update if exists else create new
  require_changes: true

flags:
  app:
    paths:
      - "app/"
  modules:
    paths:
      - "x/"
      - "!x/**/client/" # ignore client package
  client:
    paths:
      - "x/**/client/"

ignore:
  - "cmd/"
  - "contrib/"
  - "docs/"
  - "docker/"
  - "scripts/"
  - "*.md"
  - "*.rst"
  - "x/**/*.pb.go"
  - "x/**/*.pb.gw.go"
  - "x/**/test_common.go"
  - "x/**/testdata/"

=== File: buf.lock ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/buf.lock:1-2
# Generated by buf. DO NOT EDIT.
version: v1

=== File: chains.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/chains.yaml:1-12
# Xion
- name: xion
  github-organization: burnt-labs
  github-repo: xion
  dockerfile: cosmos
  pre-build:
    apk add --no-cache binutils-gold
  build-target: make install
  binaries:
    - /go/bin/xiond
  build-env:
    - BUILD_TAGS=muslc

=== File: .golangci.yml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.golangci.yml:1-54
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 10m
  tests: true

linters:
  disable-all: true
  enable:
    - bodyclose
    - dogsled
    - errcheck
    - goconst
    - gocritic
    - gofumpt
    - gci
    - revive
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - copyloopvar
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unused
    - unparam
    - misspell

linters-settings:
  gci:
    custom-order: true
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - blank # blank imports
      - dot # dot imports
      - prefix(github.com/cometbft/cometbft)
      - prefix(github.com/cosmos)
      - prefix(cosmossdk.io)
      - prefix(github.com/cosmos/cosmos-sdk)
      - prefix(github.com/burnt-labs/xion)
  gosec:
    excludes:
      - G404
  gocritic:
    disabled-checks:
      - appendAssign

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

=== File: .gitattributes ===

=== File: integration_tests/go.sum ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1-150
cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
cloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
cloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=
cloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=
cloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=
cloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=
cloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=
cloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=
cloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=
cloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=
cloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=
cloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=
cloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=
cloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=
cloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=
cloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=
cloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=
cloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=
cloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=
cloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=
cloud.google.com/go v0.83.0/go.mod h1:Z7MJUsANfY0pYPdw0lbnivPx4/vhy/e2FEkSkF7vAVY=
cloud.google.com/go v0.84.0/go.mod h1:RazrYuxIK6Kb7YrzzhPoLmCVzl7Sup4NrbKPg8KHSUM=
cloud.google.com/go v0.87.0/go.mod h1:TpDYlFy7vuLzZMMZ+B6iRiELaY7z/gJPaqbMx6mlWcY=
cloud.google.com/go v0.90.0/go.mod h1:kRX0mNRHe0e2rC6oNakvwQqzyDmg57xJ+SZU1eT2aDQ=
cloud.google.com/go v0.93.3/go.mod h1:8utlLll2EF5XMAV15woO4lSbWQlk8rer9aLOfLh7+YI=
cloud.google.com/go v0.94.1/go.mod h1:qAlAugsXlC+JWO+Bke5vCtc9ONxjQT3drlTTnAplMW4=
cloud.google.com/go v0.97.0/go.mod h1:GF7l59pYBVlXQIBLx3a761cZ41F9bBH3JUlihCt2Udc=
cloud.google.com/go v0.99.0/go.mod h1:w0Xx2nLzqWJPuozYQX+hFfCSI8WioryfRDzkoI/Y2ZA=
cloud.google.com/go v0.100.2/go.mod h1:4Xra9TjzAeYHrl5+oeLlzbM2k3mjVhZh4UqTZ//w99A=
cloud.google.com/go v0.102.0/go.mod h1:oWcCzKlqJ5zgHQt9YsaeTY9KzIvjyy0ArmiBUgpQ+nc=
cloud.google.com/go v0.102.1/go.mod h1:XZ77E9qnTEnrgEOvr4xzfdX5TRo7fB4T2F4O6+34hIU=
cloud.google.com/go v0.104.0/go.mod h1:OO6xxXdJyvuJPcEPBLN9BJPD+jep5G1+2U5B5gkRYtA=
cloud.google.com/go v0.115.0 h1:CnFSK6Xo3lDYRoBKEcAtia6VSC837/ZkJuRduSFnr14=
cloud.google.com/go v0.115.0/go.mod h1:8jIM5vVgoAEoiVxQ/O4BFTfHqulPZgs/ufEzMcFMdWU=
cloud.google.com/go/aiplatform v1.22.0/go.mod h1:ig5Nct50bZlzV6NvKaTwmplLLddFx0YReh9WfTO5jKw=
cloud.google.com/go/aiplatform v1.24.0/go.mod h1:67UUvRBKG6GTayHKV8DBv2RtR1t93YRu5B1P3x99mYY=
cloud.google.com/go/analytics v0.11.0/go.mod h1:DjEWCu41bVbYcKyvlws9Er60YE4a//bK6mnhWvQeFNI=
cloud.google.com/go/analytics v0.12.0/go.mod h1:gkfj9h6XRf9+TS4bmuhPEShsh3hH8PAZzm/41OOhQd4=
cloud.google.com/go/area120 v0.5.0/go.mod h1:DE/n4mp+iqVyvxHN41Vf1CR602GiHQjFPusMFW6bGR4=
cloud.google.com/go/area120 v0.6.0/go.mod h1:39yFJqWVgm0UZqWTOdqkLhjoC7uFfgXRC8g/ZegeAh0=
cloud.google.com/go/artifactregistry v1.6.0/go.mod h1:IYt0oBPSAGYj/kprzsBjZ/4LnG/zOcHyFHjWPCi6SAQ=
cloud.google.com/go/artifactregistry v1.7.0/go.mod h1:mqTOFOnGZx8EtSqK/ZWcsm/4U8B77rbcLP6ruDU2Ixk=
cloud.google.com/go/asset v1.5.0/go.mod h1:5mfs8UvcM5wHhqtSv8J1CtxxaQq3AdBxxQi2jGW/K4o=
cloud.google.com/go/asset v1.7.0/go.mod h1:YbENsRK4+xTiL+Ofoj5Ckf+O17kJtgp3Y3nn4uzZz5s=
cloud.google.com/go/asset v1.8.0/go.mod h1:mUNGKhiqIdbr8X7KNayoYvyc4HbbFO9URsjbytpUaW0=
cloud.google.com/go/assuredworkloads v1.5.0/go.mod h1:n8HOZ6pff6re5KYfBXcFvSViQjDwxFkAkmUFffJRbbY=
cloud.google.com/go/assuredworkloads v1.6.0/go.mod h1:yo2YOk37Yc89Rsd5QMVECvjaMKymF9OP+QXWlKXUkXw=
cloud.google.com/go/assuredworkloads v1.7.0/go.mod h1:z/736/oNmtGAyU47reJgGN+KVoYoxeLBoj4XkKYscNI=
cloud.google.com/go/auth v0.6.0 h1:5x+d6b5zdezZ7gmLWD1m/xNjnaQ2YDhmIz/HH3doy1g=
cloud.google.com/go/auth v0.6.0/go.mod h1:b4acV+jLQDyjwm4OXHYjNvRi4jvGBzHWJRtJcy+2P4g=
cloud.google.com/go/auth/oauth2adapt v0.2.2 h1:+TTV8aXpjeChS9M+aTtN/TjdQnzJvmzKFt//oWu7HX4=
cloud.google.com/go/auth/oauth2adapt v0.2.2/go.mod h1:wcYjgpZI9+Yu7LyYBg4pqSiaRkfEK3GQcpb7C/uyF1Q=
cloud.google.com/go/automl v1.5.0/go.mod h1:34EjfoFGMZ5sgJ9EoLsRtdPSNZLcfflJR39VbVNS2M0=
cloud.google.com/go/automl v1.6.0/go.mod h1:ugf8a6Fx+zP0D59WLhqgTDsQI9w07o64uf/Is3Nh5p8=
cloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=
cloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=
cloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=
cloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=
cloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=
cloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=
cloud.google.com/go/bigquery v1.42.0/go.mod h1:8dRTJxhtG+vwBKzE5OseQn/hiydoQN3EedCaOdYmxRA=
cloud.google.com/go/billing v1.4.0/go.mod h1:g9IdKBEFlItS8bTtlrZdVLWSSdSyFUZKXNS02zKMOZY=
cloud.google.com/go/billing v1.5.0/go.mod h1:mztb1tBc3QekhjSgmpf/CV4LzWXLzCArwpLmP2Gm88s=
cloud.google.com/go/binaryauthorization v1.1.0/go.mod h1:xwnoWu3Y84jbuHa0zd526MJYmtnVXn0syOjaJgy4+dM=
cloud.google.com/go/binaryauthorization v1.2.0/go.mod h1:86WKkJHtRcv5ViNABtYMhhNWRrD1Vpi//uKEy7aYEfI=
cloud.google.com/go/cloudtasks v1.5.0/go.mod h1:fD92REy1x5woxkKEkLdvavGnPJGEn8Uic9nWuLzqCpY=
cloud.google.com/go/cloudtasks v1.6.0/go.mod h1:C6Io+sxuke9/KNRkbQpihnW93SWDU3uXt92nu85HkYI=
cloud.google.com/go/compute v0.1.0/go.mod h1:GAesmwr110a34z04OlxYkATPBEfVhkymfTBXtfbBFow=
cloud.google.com/go/compute v1.3.0/go.mod h1:cCZiE1NHEtai4wiufUhW8I8S1JKkAnhnQJWM7YD99wM=
cloud.google.com/go/compute v1.5.0/go.mod h1:9SMHyhJlzhlkJqrPAc839t2BZFTSk6Jdj6mkzQJeu0M=
cloud.google.com/go/compute v1.6.0/go.mod h1:T29tfhtVbq1wvAPo0E3+7vhgmkOYeXjhFvz/FMzPu0s=
cloud.google.com/go/compute v1.6.1/go.mod h1:g85FgpzFvNULZ+S8AYq87axRKuf2Kh7deLqV/jJ3thU=
cloud.google.com/go/compute v1.7.0/go.mod h1:435lt8av5oL9P3fv1OEzSbSUe+ybHXGMPQHHZWZxy9U=
cloud.google.com/go/compute v1.10.0/go.mod h1:ER5CLbMxl90o2jtNbGSbtfOpQKR0t15FOtRsugnLrlU=
cloud.google.com/go/compute/metadata v0.5.2 h1:UxK4uu/Tn+I3p2dYWTfiX4wva7aYlKixAHn3fyqngqo=
cloud.google.com/go/compute/metadata v0.5.2/go.mod h1:C66sj2AluDcIqakBq/M8lw8/ybHgOZqin2obFxa/E5k=
cloud.google.com/go/containeranalysis v0.5.1/go.mod h1:1D92jd8gRR/c0fGMlymRgxWD3Qw9C1ff6/T7mLgVL8I=
cloud.google.com/go/containeranalysis v0.6.0/go.mod h1:HEJoiEIu+lEXM+k7+qLCci0h33lX3ZqoYFdmPcoO7s4=
cloud.google.com/go/datacatalog v1.3.0/go.mod h1:g9svFY6tuR+j+hrTw3J2dNcmI0dzmSiyOzm8kpLq0a0=
cloud.google.com/go/datacatalog v1.5.0/go.mod h1:M7GPLNQeLfWqeIm3iuiruhPzkt65+Bx8dAKvScX8jvs=
cloud.google.com/go/datacatalog v1.6.0/go.mod h1:+aEyF8JKg+uXcIdAmmaMUmZ3q1b/lKLtXCmXdnc0lbc=
cloud.google.com/go/dataflow v0.6.0/go.mod h1:9QwV89cGoxjjSR9/r7eFDqqjtvbKxAK2BaYU6PVk9UM=
cloud.google.com/go/dataflow v0.7.0/go.mod h1:PX526vb4ijFMesO1o202EaUmouZKBpjHsTlCtB4parQ=
cloud.google.com/go/dataform v0.3.0/go.mod h1:cj8uNliRlHpa6L3yVhDOBrUXH+BPAO1+KFMQQNSThKo=
cloud.google.com/go/dataform v0.4.0/go.mod h1:fwV6Y4Ty2yIFL89huYlEkwUPtS7YZinZbzzj5S9FzCE=
cloud.google.com/go/datalabeling v0.5.0/go.mod h1:TGcJ0G2NzcsXSE/97yWjIZO0bXj0KbVlINXMG9ud42I=
cloud.google.com/go/datalabeling v0.6.0/go.mod h1:WqdISuk/+WIGeMkpw/1q7bK/tFEZxsrFJOJdY2bXvTQ=
cloud.google.com/go/dataqna v0.5.0/go.mod h1:90Hyk596ft3zUQ8NkFfvICSIfHFh1Bc7C4cK3vbhkeo=
cloud.google.com/go/dataqna v0.6.0/go.mod h1:1lqNpM7rqNLVgWBJyk5NF6Uen2PHym0jtVJonplVsDA=
cloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=
cloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=
cloud.google.com/go/datastream v1.2.0/go.mod h1:i/uTP8/fZwgATHS/XFu0TcNUhuA0twZxxQ3EyCUQMwo=
cloud.google.com/go/datastream v1.3.0/go.mod h1:cqlOX8xlyYF/uxhiKn6Hbv6WjwPPuI9W2M9SAXwaLLQ=
cloud.google.com/go/dialogflow v1.15.0/go.mod h1:HbHDWs33WOGJgn6rfzBW1Kv807BE3O1+xGbn59zZWI4=
cloud.google.com/go/dialogflow v1.16.1/go.mod h1:po6LlzGfK+smoSmTBnbkIZY2w8ffjz/RcGSS+sh1el0=
cloud.google.com/go/dialogflow v1.17.0/go.mod h1:YNP09C/kXA1aZdBgC/VtXX74G/TKn7XVCcVumTflA+8=
cloud.google.com/go/documentai v1.7.0/go.mod h1:lJvftZB5NRiFSX4moiye1SMxHx0Bc3x1+p9e/RfXYiU=
cloud.google.com/go/documentai v1.8.0/go.mod h1:xGHNEB7CtsnySCNrCFdCyyMz44RhFEEX2Q7UD0c5IhU=
cloud.google.com/go/domains v0.6.0/go.mod h1:T9Rz3GasrpYk6mEGHh4rymIhjlnIuB4ofT1wTxDeT4Y=
cloud.google.com/go/domains v0.7.0/go.mod h1:PtZeqS1xjnXuRPKE/88Iru/LdfoRyEHYA9nFQf4UKpg=
cloud.google.com/go/edgecontainer v0.1.0/go.mod h1:WgkZ9tp10bFxqO8BLPqv2LlfmQF1X8lZqwW4r1BTajk=
cloud.google.com/go/edgecontainer v0.2.0/go.mod h1:RTmLijy+lGpQ7BXuTDa4C4ssxyXT34NIuHIgKuP4s5w=
cloud.google.com/go/functions v1.6.0/go.mod h1:3H1UA3qiIPRWD7PeZKLvHZ9SaQhR26XIJcC0A5GbvAk=
cloud.google.com/go/functions v1.7.0/go.mod h1:+d+QBcWM+RsrgZfV9xo6KfA1GlzJfxcfZcRPEhDDfzg=
cloud.google.com/go/gaming v1.5.0/go.mod h1:ol7rGcxP/qHTRQE/RO4bxkXq+Fix0j6D4LFPzYTIrDM=
cloud.google.com/go/gaming v1.6.0/go.mod h1:YMU1GEvA39Qt3zWGyAVA9bpYz/yAhTvaQ1t2sK4KPUA=
cloud.google.com/go/gkeconnect v0.5.0/go.mod h1:c5lsNAg5EwAy7fkqX/+goqFsU1Da/jQFqArp+wGNr/o=
cloud.google.com/go/gkeconnect v0.6.0/go.mod h1:Mln67KyU/sHJEBY8kFZ0xTeyPtzbq9StAVvEULYK16A=
cloud.google.com/go/gkehub v0.9.0/go.mod h1:WYHN6WG8w9bXU0hqNxt8rm5uxnk8IH+lPY9J2TV7BK0=
cloud.google.com/go/gkehub v0.10.0/go.mod h1:UIPwxI0DsrpsVoWpLB0stwKCP+WFVG9+y977wO+hBH0=
cloud.google.com/go/grafeas v0.2.0/go.mod h1:KhxgtF2hb0P191HlY5besjYm6MqTSTj3LSI+M+ByZHc=
cloud.google.com/go/iam v0.3.0/go.mod h1:XzJPvDayI+9zsASAFO68Hk07u3z+f+JrT2xXNdp4bnY=
cloud.google.com/go/iam v0.5.0/go.mod h1:wPU9Vt0P4UmCux7mqtRu6jcpPAb74cP1fh50J3QpkUc=
cloud.google.com/go/iam v1.1.9 h1:oSkYLVtVme29uGYrOcKcvJRht7cHJpYD09GM9JaR0TE=
cloud.google.com/go/iam v1.1.9/go.mod h1:Nt1eDWNYH9nGQg3d/mY7U1hvfGmsaG9o/kLGoLoLXjQ=
cloud.google.com/go/language v1.4.0/go.mod h1:F9dRpNFQmJbkaop6g0JhSBXCNlO90e1KWx5iDdxbWic=
cloud.google.com/go/language v1.6.0/go.mod h1:6dJ8t3B+lUYfStgls25GusK04NLh3eDLQnWM3mdEbhI=
cloud.google.com/go/lifesciences v0.5.0/go.mod h1:3oIKy8ycWGPUyZDR/8RNnTOYevhaMLqh5vLUXs9zvT8=
cloud.google.com/go/lifesciences v0.6.0/go.mod h1:ddj6tSX/7BOnhxCSd3ZcETvtNr8NZ6t/iPhY2Tyfu08=
cloud.google.com/go/mediatranslation v0.5.0/go.mod h1:jGPUhGTybqsPQn91pNXw0xVHfuJ3leR1wj37oU3y1f4=
cloud.google.com/go/mediatranslation v0.6.0/go.mod h1:hHdBCTYNigsBxshbznuIMFNe5QXEowAuNmmC7h8pu5w=
cloud.google.com/go/memcache v1.4.0/go.mod h1:rTOfiGZtJX1AaFUrOgsMHX5kAzaTQ8azHiuDoTPzNsE=
cloud.google.com/go/memcache v1.5.0/go.mod h1:dk3fCK7dVo0cUU2c36jKb4VqKPS22BTkf81Xq617aWM=
cloud.google.com/go/metastore v1.5.0/go.mod h1:2ZNrDcQwghfdtCwJ33nM0+GrBGlVuh8rakL3vdPY3XY=
cloud.google.com/go/metastore v1.6.0/go.mod h1:6cyQTls8CWXzk45G55x57DVQ9gWg7RiH65+YgPsNh9s=
cloud.google.com/go/networkconnectivity v1.4.0/go.mod h1:nOl7YL8odKyAOtzNX73/M5/mGZgqqMeryi6UPZTk/rA=
cloud.google.com/go/networkconnectivity v1.5.0/go.mod h1:3GzqJx7uhtlM3kln0+x5wyFvuVH1pIBJjhCpjzSt75o=
cloud.google.com/go/networksecurity v0.5.0/go.mod h1:xS6fOCoqpVC5zx15Z/MqkfDwH4+m/61A3ODiDV1xmiQ=
cloud.google.com/go/networksecurity v0.6.0/go.mod h1:Q5fjhTr9WMI5mbpRYEbiexTzROf7ZbDzvzCrNl14nyU=
cloud.google.com/go/notebooks v1.2.0/go.mod h1:9+wtppMfVPUeJ8fIWPOq1UnATHISkGXGqTkxeieQ6UY=
cloud.google.com/go/notebooks v1.3.0/go.mod h1:bFR5lj07DtCPC7YAAJ//vHskFBxA5JzYlH68kXVdk34=
cloud.google.com/go/osconfig v1.7.0/go.mod h1:oVHeCeZELfJP7XLxcBGTMBvRO+1nQ5tFG9VQTmYS2Fs=
cloud.google.com/go/osconfig v1.8.0/go.mod h1:EQqZLu5w5XA7eKizepumcvWx+m8mJUhEwiPqWiZeEdg=
cloud.google.com/go/oslogin v1.4.0/go.mod h1:YdgMXWRaElXz/lDk1Na6Fh5orF7gvmJ0FGLIs9LId4E=
cloud.google.com/go/oslogin v1.5.0/go.mod h1:D260Qj11W2qx/HVF29zBg+0fd6YCSjSqLUkY/qEenQU=
cloud.google.com/go/phishingprotection v0.5.0/go.mod h1:Y3HZknsK9bc9dMi+oE8Bim0lczMU6hrX0UpADuMefr0=
cloud.google.com/go/phishingprotection v0.6.0/go.mod h1:9Y3LBLgy0kDTcYET8ZH3bq/7qni15yVUoAxiFxnlSUA=
cloud.google.com/go/privatecatalog v0.5.0/go.mod h1:XgosMUvvPyxDjAVNDYxJ7wBW8//hLDDYmnsNcMGq1K0=
cloud.google.com/go/privatecatalog v0.6.0/go.mod h1:i/fbkZR0hLN29eEWiiwue8Pb+GforiEIBnV9yrRUOKI=
cloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=
cloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=
cloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=
cloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=
cloud.google.com/go/recaptchaenterprise v1.3.1/go.mod h1:OdD+q+y4XGeAlxRaMn1Y7/GveP6zmq76byL6tjPE7d4=
cloud.google.com/go/recaptchaenterprise/v2 v2.1.0/go.mod h1:w9yVqajwroDNTfGuhmOjPDN//rZGySaf6PtFVcSCa7o=
cloud.google.com/go/recaptchaenterprise/v2 v2.2.0/go.mod h1:/Zu5jisWGeERrd5HnlS3EUGb/D335f9k51B/FVil0jk=
cloud.google.com/go/recaptchaenterprise/v2 v2.3.0/go.mod h1:O9LwGCjrhGHBQET5CA7dd5NwwNQUErSgEDit1DLNTdo=
cloud.google.com/go/recommendationengine v0.5.0/go.mod h1:E5756pJcVFeVgaQv3WNpImkFP8a+RptV6dDLGPILjvg=
cloud.google.com/go/recommendationengine v0.6.0/go.mod h1:08mq2umu9oIqc7tDy8sx+MNJdLG0fUi3vaSVbztHgJ4=
cloud.google.com/go/recommender v1.5.0/go.mod h1:jdoeiBIVrJe9gQjwd759ecLJbxCDED4A6p+mqoqDvTg=

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:151-300
cloud.google.com/go/recommender v1.6.0/go.mod h1:+yETpm25mcoiECKh9DEScGzIRyDKpZ0cEhWGo+8bo+c=
cloud.google.com/go/redis v1.7.0/go.mod h1:V3x5Jq1jzUcg+UNsRvdmsfuFnit1cfe3Z/PGyq/lm4Y=
cloud.google.com/go/redis v1.8.0/go.mod h1:Fm2szCDavWzBk2cDKxrkmWBqoCiL1+Ctwq7EyqBCA/A=
cloud.google.com/go/retail v1.8.0/go.mod h1:QblKS8waDmNUhghY2TI9O3JLlFk8jybHeV4BF19FrE4=
cloud.google.com/go/retail v1.9.0/go.mod h1:g6jb6mKuCS1QKnH/dpu7isX253absFl6iE92nHwlBUY=
cloud.google.com/go/scheduler v1.4.0/go.mod h1:drcJBmxF3aqZJRhmkHQ9b3uSSpQoltBPGPxGAWROx6s=
cloud.google.com/go/scheduler v1.5.0/go.mod h1:ri073ym49NW3AfT6DZi21vLZrG07GXr5p3H1KxN5QlI=
cloud.google.com/go/secretmanager v1.6.0/go.mod h1:awVa/OXF6IiyaU1wQ34inzQNc4ISIDIrId8qE5QGgKA=
cloud.google.com/go/security v1.5.0/go.mod h1:lgxGdyOKKjHL4YG3/YwIL2zLqMFCKs0UbQwgyZmfJl4=
cloud.google.com/go/security v1.7.0/go.mod h1:mZklORHl6Bg7CNnnjLH//0UlAlaXqiG7Lb9PsPXLfD0=
cloud.google.com/go/security v1.8.0/go.mod h1:hAQOwgmaHhztFhiQ41CjDODdWP0+AE1B3sX4OFlq+GU=
cloud.google.com/go/securitycenter v1.13.0/go.mod h1:cv5qNAqjY84FCN6Y9z28WlkKXyWsgLO832YiWwkCWcU=
cloud.google.com/go/securitycenter v1.14.0/go.mod h1:gZLAhtyKv85n52XYWt6RmeBdydyxfPeTrpToDPw4Auc=
cloud.google.com/go/servicedirectory v1.4.0/go.mod h1:gH1MUaZCgtP7qQiI+F+A+OpeKF/HQWgtAddhTbhL2bs=
cloud.google.com/go/servicedirectory v1.5.0/go.mod h1:QMKFL0NUySbpZJ1UZs3oFAmdvVxhhxB6eJ/Vlp73dfg=
cloud.google.com/go/speech v1.6.0/go.mod h1:79tcr4FHCimOp56lwC01xnt/WPJZc4v3gzyT7FoBkCM=
cloud.google.com/go/speech v1.7.0/go.mod h1:KptqL+BAQIhMsj1kOP2la5DSEEerPDuOP/2mmkhHhZQ=
cloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=
cloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=
cloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=
cloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=
cloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=
cloud.google.com/go/storage v1.22.1/go.mod h1:S8N1cAStu7BOeFfE8KAQzmyyLkK8p/vmRq6kuBTW58Y=
cloud.google.com/go/storage v1.23.0/go.mod h1:vOEEDNFnciUMhBeT6hsJIn3ieU5cFRmzeLgDvXzfIXc=
cloud.google.com/go/storage v1.27.0/go.mod h1:x9DOL8TK/ygDUMieqwfhdpQryTeEkhGKMi80i/iqR2s=
cloud.google.com/go/storage v1.41.0 h1:RusiwatSu6lHeEXe3kglxakAmAbfV+rhtPqA6i8RBx0=
cloud.google.com/go/storage v1.41.0/go.mod h1:J1WCa/Z2FcgdEDuPUY8DxT5I+d9mFKsCepp5vR6Sq80=
cloud.google.com/go/talent v1.1.0/go.mod h1:Vl4pt9jiHKvOgF9KoZo6Kob9oV4lwd/ZD5Cto54zDRw=
cloud.google.com/go/talent v1.2.0/go.mod h1:MoNF9bhFQbiJ6eFD3uSsg0uBALw4n4gaCaEjBw9zo8g=
cloud.google.com/go/videointelligence v1.6.0/go.mod h1:w0DIDlVRKtwPCn/C4iwZIJdvC69yInhW0cfi+p546uU=
cloud.google.com/go/videointelligence v1.7.0/go.mod h1:k8pI/1wAhjznARtVT9U1llUaFNPh7muw8QyOUpavru4=
cloud.google.com/go/vision v1.2.0/go.mod h1:SmNwgObm5DpFBme2xpyOyasvBc1aPdjvMk2bBk0tKD0=
cloud.google.com/go/vision/v2 v2.2.0/go.mod h1:uCdV4PpN1S0jyCyq8sIM42v2Y6zOLkZs+4R9LrGYwFo=
cloud.google.com/go/vision/v2 v2.3.0/go.mod h1:UO61abBx9QRMFkNBbf1D8B1LXdS2cGiiCRx0vSpZoUo=
cloud.google.com/go/webrisk v1.4.0/go.mod h1:Hn8X6Zr+ziE2aNd8SliSDWpEnSS1u4R9+xXZmFiHmGE=
cloud.google.com/go/webrisk v1.5.0/go.mod h1:iPG6fr52Tv7sGk0H6qUFzmL3HHZev1htXuWDEEsqMTg=
cloud.google.com/go/workflows v1.6.0/go.mod h1:6t9F5h/unJz41YqfBmqSASJSXccBLtD1Vwf+KmJENM0=
cloud.google.com/go/workflows v1.7.0/go.mod h1:JhSrZuVZWuiDfKEFxU0/F1PQjmpnpcoISEXH2bcHC3M=
cosmossdk.io/api v0.7.6 h1:PC20PcXy1xYKH2KU4RMurVoFjjKkCgYRbVAD4PdqUuY=
cosmossdk.io/api v0.7.6/go.mod h1:IcxpYS5fMemZGqyYtErK7OqvdM0C8kdW3dq8Q/XIG38=
cosmossdk.io/client/v2 v2.0.0-beta.4 h1:LGIzWbVTOof/IHQZeoWwxPX0fq607ONXhsfA7eUrQIg=
cosmossdk.io/client/v2 v2.0.0-beta.4/go.mod h1:c753d0sBv3AQRx6X+BOKL1aGpKjZMTZAHGiLPbVi5TE=
cosmossdk.io/collections v0.4.0 h1:PFmwj2W8szgpD5nOd8GWH6AbYNi1f2J6akWXJ7P5t9s=
cosmossdk.io/collections v0.4.0/go.mod h1:oa5lUING2dP+gdDquow+QjlF45eL1t4TJDypgGd+tv0=
cosmossdk.io/core v0.11.1 h1:h9WfBey7NAiFfIcUhDVNS503I2P2HdZLebJlUIs8LPA=
cosmossdk.io/core v0.11.1/go.mod h1:OJzxcdC+RPrgGF8NJZR2uoQr56tc7gfBKhiKeDO7hH0=
cosmossdk.io/depinject v1.1.0 h1:wLan7LG35VM7Yo6ov0jId3RHWCGRhe8E8bsuARorl5E=
cosmossdk.io/depinject v1.1.0/go.mod h1:kkI5H9jCGHeKeYWXTqYdruogYrEeWvBQCw1Pj4/eCFI=
cosmossdk.io/errors v1.0.1 h1:bzu+Kcr0kS/1DuPBtUFdWjzLqyUuCiyHjyJB6srBV/0=
cosmossdk.io/errors v1.0.1/go.mod h1:MeelVSZThMi4bEakzhhhE/CKqVv3nOJDA25bIqRDu/U=
cosmossdk.io/log v1.5.0 h1:dVdzPJW9kMrnAYyMf1duqacoidB9uZIl+7c6z0mnq0g=
cosmossdk.io/log v1.5.0/go.mod h1:Tr46PUJjiUthlwQ+hxYtUtPn4D/oCZXAkYevBeh5+FI=
cosmossdk.io/math v1.5.0 h1:sbOASxee9Zxdjd6OkzogvBZ25/hP929vdcYcBJQbkLc=
cosmossdk.io/math v1.5.0/go.mod h1:AAwwBmUhqtk2nlku174JwSll+/DepUXW3rWIXN5q+Nw=
cosmossdk.io/store v1.1.1 h1:NA3PioJtWDVU7cHHeyvdva5J/ggyLDkyH0hGHl2804Y=
cosmossdk.io/store v1.1.1/go.mod h1:8DwVTz83/2PSI366FERGbWSH7hL6sB7HbYp8bqksNwM=
cosmossdk.io/x/circuit v0.1.1 h1:KPJCnLChWrxD4jLwUiuQaf5mFD/1m7Omyo7oooefBVQ=
cosmossdk.io/x/circuit v0.1.1/go.mod h1:B6f/urRuQH8gjt4eLIXfZJucrbreuYrKh5CSjaOxr+Q=
cosmossdk.io/x/evidence v0.1.1 h1:Ks+BLTa3uftFpElLTDp9L76t2b58htjVbSZ86aoK/E4=
cosmossdk.io/x/evidence v0.1.1/go.mod h1:OoDsWlbtuyqS70LY51aX8FBTvguQqvFrt78qL7UzeNc=
cosmossdk.io/x/feegrant v0.1.1 h1:EKFWOeo/pup0yF0svDisWWKAA9Zags6Zd0P3nRvVvw8=
cosmossdk.io/x/feegrant v0.1.1/go.mod h1:2GjVVxX6G2fta8LWj7pC/ytHjryA6MHAJroBWHFNiEQ=
cosmossdk.io/x/nft v0.1.1 h1:pslAVS8P5NkW080+LWOamInjDcq+v2GSCo+BjN9sxZ8=
cosmossdk.io/x/nft v0.1.1/go.mod h1:Kac6F6y2gsKvoxU+fy8uvxRTi4BIhLOor2zgCNQwVgY=
cosmossdk.io/x/tx v0.13.7 h1:8WSk6B/OHJLYjiZeMKhq7DK7lHDMyK0UfDbBMxVmeOI=
cosmossdk.io/x/tx v0.13.7/go.mod h1:V6DImnwJMTq5qFjeGWpXNiT/fjgE4HtmclRmTqRVM3w=
cosmossdk.io/x/upgrade v0.1.4 h1:/BWJim24QHoXde8Bc64/2BSEB6W4eTydq0X/2f8+g38=
cosmossdk.io/x/upgrade v0.1.4/go.mod h1:9v0Aj+fs97O+Ztw+tG3/tp5JSlrmT7IcFhAebQHmOPo=
dmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=
filippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=
filippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=
github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 h1:/vQbFIOMbk2FiG/kXiLl8BRyzTWDw7gX/Hz7Dd5eDMs=
github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4/go.mod h1:hN7oaIRCjzsZ2dE+yG5k+rsdt3qcwykqK6HVGcKwsw4=
github.com/99designs/keyring v1.2.2 h1:pZd3neh/EmUzWONb35LxQfvuY7kiSXAq3HQd97+XBn0=
github.com/99designs/keyring v1.2.2/go.mod h1:wes/FrByc8j7lFOAGLGSNEg8f/PaI3cgTBqhFkHUrPk=
github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161 h1:L/gRVlceqvL25UVaW/CKtUDjefjrs0SPonmDGUVOYP0=
github.com/Azure/go-ansiterm v0.0.0-20230124172434-306776ec8161/go.mod h1:xomTg63KZ2rFqZQzSB4Vz2SUXa1BpHTVz9L5PTmPC4E=
github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
github.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=
github.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=
github.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=
github.com/ChainSafe/go-schnorrkel v0.0.0-20200405005733-88cbf1b4c40d h1:nalkkPQcITbvhmL4+C4cKA87NW0tfm3Kl9VXRoPywFg=
github.com/ChainSafe/go-schnorrkel v0.0.0-20200405005733-88cbf1b4c40d/go.mod h1:URdX5+vg25ts3aCh8H5IFZybJYKWhJHYMTnf+ULtoC4=
github.com/ChainSafe/go-schnorrkel v1.0.0 h1:3aDA67lAykLaG1y3AOjs88dMxC88PgUuHRrLeDnvGIM=
github.com/ChainSafe/go-schnorrkel v1.0.0/go.mod h1:dpzHYVxLZcp8pjlV+O+UR8K0Hp/z7vcchBSbMBEhCw4=
github.com/ComposableFi/go-subkey/v2 v2.0.0-tm03420 h1:oknQF/iIhf5lVjbwjsVDzDByupRhga8nhA3NAmwyHDA=
github.com/ComposableFi/go-subkey/v2 v2.0.0-tm03420/go.mod h1:KYkiMX5AbOlXXYfxkrYPrRPV6EbVUALTQh5ptUOJzu8=
github.com/CosmWasm/wasmd v0.54.0 h1:/txsBehV1xnAi46H1xwuuY6D4NySujBy+wa5+ryItS8=
github.com/CosmWasm/wasmd v0.54.0/go.mod h1:8Zu/rj6RHbJ8Gx0WdqsGeHvgnEQb0rqchpqhgMxASRU=
github.com/CosmWasm/wasmvm/v2 v2.2.2 h1:MaQMtaZN8L08N0uAlBlOICP+GWolibJsajHGo3fQ03w=
github.com/CosmWasm/wasmvm/v2 v2.2.2/go.mod h1:bMhLQL4Yp9CzJi9A83aR7VO9wockOsSlZbT4ztOl6bg=
github.com/DataDog/datadog-go v3.2.0+incompatible h1:qSG2N4FghB1He/r2mFrWKCaL7dXCilEuNEeAn20fdD4=
github.com/DataDog/datadog-go v3.2.0+incompatible/go.mod h1:LButxg5PwREeZtORoXG3tL4fMGNddJ+vMq1mwgfaqoQ=
github.com/DataDog/zstd v1.5.5 h1:oWf5W7GtOLgp6bciQYDmhHHjdhYkALu6S/5Ni9ZgSvQ=
github.com/DataDog/zstd v1.5.5/go.mod h1:g4AWEaM3yOg3HYfnJ3YIawPnVdXJh9QME85blwSAmyw=
github.com/FactomProject/basen v0.0.0-20150613233007-fe3947df716e h1:ahyvB3q25YnZWly5Gq1ekg6jcmWaGj/vG/MhF4aisoc=
github.com/FactomProject/basen v0.0.0-20150613233007-fe3947df716e/go.mod h1:kGUqhHd//musdITWjFvNTHn90WG9bMLBEPQZ17Cmlpw=
github.com/FactomProject/btcutilecc v0.0.0-20130527213604-d3a63a5752ec h1:1Qb69mGp/UtRPn422BH4/Y4Q3SLUrD9KHuDkm8iodFc=
github.com/FactomProject/btcutilecc v0.0.0-20130527213604-d3a63a5752ec/go.mod h1:CD8UlnlLDiqb36L110uqiP2iSflVjx9g/3U9hCI4q2U=
github.com/Knetic/govaluate v3.0.1-0.20171022003610-9aa49832a739+incompatible/go.mod h1:r7JcOSlj0wfOMncg0iLm8Leh48TZaKVeNIfJntJ2wa0=
github.com/Microsoft/go-winio v0.6.2 h1:F2VQgta7ecxGYO8k3ZZz3RS8fVIXVxONVUPlNERoyfY=
github.com/Microsoft/go-winio v0.6.2/go.mod h1:yd8OoFMLzJbo9gZq8j5qaps8bJ9aShtEA8Ipt1oGCvU=
github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5 h1:TngWCqHvy9oXAN6lEVMRuU21PR1EtLVZJmdB18Gu3Rw=
github.com/Nvveen/Gotty v0.0.0-20120604004816-cd527374f1e5/go.mod h1:lmUJ/7eu/Q8D7ML55dXQrVaamCz2vxCfdQBasLZfHKk=
github.com/OneOfOne/xxhash v1.2.2/go.mod h1:HSdplMjZKSmBqAxg5vPj2TmRDmfkzw+cTzAElWljhcU=
github.com/Shopify/sarama v1.19.0/go.mod h1:FVkBWblsNy7DGZRfXLU0O9RCGt5g3g3yEuWXgklEdEo=
github.com/Shopify/toxiproxy v2.1.4+incompatible/go.mod h1:OXgGpZ6Cli1/URJOF1DMxUHB2q5Ap20/P/eIdh4G0pI=
github.com/StackExchange/wmi v1.2.1 h1:VIkavFPXSjcnS+O8yTq7NI32k0R5Aj+v39y29VYDOSA=
github.com/StackExchange/wmi v1.2.1/go.mod h1:rcmrprowKIVzvc+NUiLncP2uuArMWLCbu9SBzvHz7e8=
github.com/StirlingMarketingGroup/go-namecase v1.0.0 h1:2CzaNtCzc4iNHirR+5ru9OzGg8rQp860gqLBFqRI02Y=
github.com/StirlingMarketingGroup/go-namecase v1.0.0/go.mod h1:ZsoSKcafcAzuBx+sndbxHu/RjDcDTrEdT4UvhniHfio=
github.com/VictoriaMetrics/fastcache v1.12.2 h1:N0y9ASrJ0F6h0QaC3o6uJb3NIZ9VKLjCM7NQbSmF7WI=
github.com/VictoriaMetrics/fastcache v1.12.2/go.mod h1:AmC+Nzz1+3G2eCPapF6UcsnkThDcMsQicp4xDukwJYI=
github.com/VividCortex/gohistogram v1.0.0 h1:6+hBz+qvs0JOrrNhhmR7lFxo5sINxBCGXrdtl/UvroE=
github.com/VividCortex/gohistogram v1.0.0/go.mod h1:Pf5mBqqDxYaXu3hDrrU+w6nw50o/4+TcAqDqk/vUH7g=
github.com/adlio/schema v1.3.6 h1:k1/zc2jNfeiZBA5aFTRy37jlBIuCkXCm0XmvpzCKI9I=
github.com/adlio/schema v1.3.6/go.mod h1:qkxwLgPBd1FgLRHYVCmQT/rrBr3JH38J9LjmVzWNudg=
github.com/afex/hystrix-go v0.0.0-20180502004556-fa1af6a1f4f5/go.mod h1:SkGFH1ia65gfNATL8TAiHDNxPzPdmEL5uirI2Uyuz6c=
github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=
github.com/alecthomas/template v0.0.0-20190718012654-fb15b899a751/go.mod h1:LOuyumcjzFXgccqObfd/Ljyb9UuFJ6TxHnclSeseNhc=
github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=
github.com/alecthomas/units v0.0.0-20190717042225-c3de453c63f4/go.mod h1:ybxpYRFXyAe+OPACYpWeL0wqObRcbAqCMya13uyzqw0=
github.com/alecthomas/units v0.0.0-20190924025748-f65c72e2690d/go.mod h1:rBZYJk541a8SKzHPHnH3zbiI+7dagKZ0cgpgrD7Fyho=
github.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=
github.com/apache/thrift v0.12.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=
github.com/apache/thrift v0.13.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=
github.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=
github.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=
github.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=
github.com/aryann/difflib v0.0.0-20170710044230-e206f873d14a/go.mod h1:DAHtR1m6lCRdSC2Tm3DSWRPvIPr6xNKyeHdqDQSQT+A=
github.com/avast/retry-go/v4 v4.5.1 h1:AxIx0HGi4VZ3I02jr78j5lZ3M6x1E0Ivxa6b0pUUh7o=
github.com/avast/retry-go/v4 v4.5.1/go.mod h1:/sipNsvNB3RRuT5iNcb6h73nw3IBmXJ/H3XrCQYSOpc=
github.com/aws/aws-lambda-go v1.13.3/go.mod h1:4UKl9IzQMoD+QF79YdCuzCwp8VbmG4VAQwij/eHl5CU=
github.com/aws/aws-sdk-go v1.27.0/go.mod h1:KmX6BPdI08NWTb3/sm4ZGu5ShLoqVDhKgpiN924inxo=
github.com/aws/aws-sdk-go v1.44.122/go.mod h1:y4AeaBuwd2Lk+GepC1E9v0qOiTws0MIWAX4oIKwKHZo=
github.com/aws/aws-sdk-go v1.44.224 h1:09CiaaF35nRmxrzWZ2uRq5v6Ghg/d2RiPjZnSgtt+RQ=
github.com/aws/aws-sdk-go v1.44.224/go.mod h1:aVsgQcEevwlmQ7qHE9I3h+dtQgpqhFB+i8Phjh7fkwI=
github.com/aws/aws-sdk-go-v2 v0.18.0/go.mod h1:JWVYvqSMppoMJC0x5wdwiImzgXTI9FuZwxzkQq9wy+g=
github.com/benbjohnson/clock v1.1.0/go.mod h1:J11/hYXuz8f4ySSvYwY0FKfm+ezbsZBKZxNJlLklBHA=
github.com/beorn7/perks v0.0.0-20180321164747-3a771d992973/go.mod h1:Dwedo/Wpr24TaqPxmxbtue+5NUziq4I4S80YR8gNf3Q=
github.com/beorn7/perks v1.0.0/go.mod h1:KWe93zE9D1o94FZ5RNwFwVgaQK1VOXiVxmqh+CedLV8=
github.com/beorn7/perks v1.0.1 h1:VlbKKnNfV8bJzeqoa4cOKqO6bYr3WgKZxO8Z16+hsOM=
github.com/beorn7/perks v1.0.1/go.mod h1:G2ZrVWU2WbWT9wwq4/hrbKbnv/1ERSJQ0ibhJ6rlkpw=
github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d h1:xDfNPAt8lFiC1UJrqV3uuy861HCTo708pDMbjHHdCas=
github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d/go.mod h1:6QX/PXZ00z/TKoufEY6K/a0k6AhaJrQKdFe6OfVXsa4=
github.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816 h1:41iFGWnSlI2gVpmOtVTJZNodLdLQLn/KsJqFvXwnd/s=
github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=
github.com/bits-and-blooms/bitset v1.10.0 h1:ePXTeiPEazB5+opbv5fr8umg2R/1NlzgDsyepwsSr88=
github.com/bits-and-blooms/bitset v1.10.0/go.mod h1:7hO7Gc7Pp1vODcmWvKMRA9BNmbv6a/7QIWpPxHddWR8=

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:301-450
github.com/btcsuite/btcd/btcec/v2 v2.3.4 h1:3EJjcN70HCu/mwqlUsGK8GcNVyLVxFDlWurTXGPFfiQ=
github.com/btcsuite/btcd/btcec/v2 v2.3.4/go.mod h1:zYzJ8etWJQIv1Ogk7OzpWjowwOdXY1W/17j2MW85J04=
github.com/btcsuite/btcd/btcutil v1.1.6 h1:zFL2+c3Lb9gEgqKNzowKUPQNb8jV7v5Oaodi/AYFd6c=
github.com/btcsuite/btcd/btcutil v1.1.6/go.mod h1:9dFymx8HpuLqBnsPELrImQeTQfKBQqzqGbbV3jK55aE=
github.com/btcsuite/btcd/chaincfg/chainhash v1.0.1 h1:q0rUy8C/TYNBQS1+CGKw68tLOFYSNEs0TFnxxnS9+4U=
github.com/btcsuite/btcd/chaincfg/chainhash v1.0.1/go.mod h1:7SFka0XMvUgj3hfZtydOrQY2mwhPclbT2snogU7SQQc=
github.com/btcsuite/btcutil v1.0.3-0.20201208143702-a53e38424cce h1:YtWJF7RHm2pYCvA5t0RPmAaLUhREsKuKd+SLhxFbFeQ=
github.com/btcsuite/btcutil v1.0.3-0.20201208143702-a53e38424cce/go.mod h1:0DVlHczLPewLcPGEIeUEzfOJhqGPQ0mJJRDBtD307+o=
github.com/bufbuild/protocompile v0.6.0 h1:Uu7WiSQ6Yj9DbkdnOe7U4mNKp58y9WDMKDn28/ZlunY=
github.com/bufbuild/protocompile v0.6.0/go.mod h1:YNP35qEYoYGme7QMtz5SBCoN4kL4g12jTtjuzRNdjpE=
github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a h1:bvO9Hr25/dVRdF8aGEMfc7TuTvlOtAF1b3x1876wLm0=
github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a/go.mod h1:0q/LBlPChRsvsub88tL4wgvx7RuWGrjcAXFiZf4uSjo=
github.com/bytedance/sonic v1.12.3 h1:W2MGa7RCU1QTeYRTPE3+88mVC0yXmsRQRChiyVocVjU=
github.com/bytedance/sonic v1.12.3/go.mod h1:B8Gt/XvtZ3Fqj+iSKMypzymZxw/FVwgIGKzMzT9r/rk=
github.com/bytedance/sonic/loader v0.1.1/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=
github.com/bytedance/sonic/loader v0.2.0 h1:zNprn+lsIP06C/IqCHs3gPQIvnvpKbbxyXQP1iU4kWM=
github.com/bytedance/sonic/loader v0.2.0/go.mod h1:ncP89zfokxS5LZrJxl5z0UJcsk4M4yY2JpfqGeCtNLU=
github.com/casbin/casbin/v2 v2.1.2/go.mod h1:YcPU1XXisHhLzuxH9coDNf2FbKpjGlbCg3n9yuLkIJQ=
github.com/cenkalti/backoff v2.2.1+incompatible h1:tNowT99t7UNflLxfYYSlKYsBpXdEet03Pg2g16Swow4=
github.com/cenkalti/backoff v2.2.1+incompatible/go.mod h1:90ReRw6GdpyfrHakVjL/QHaoyV4aDUVVkXQJJJ3NXXM=
github.com/cenkalti/backoff/v4 v4.1.1/go.mod h1:scbssz8iZGpm3xbr14ovlUdkxfGXNInqkPWOWmG2CLw=
github.com/cenkalti/backoff/v4 v4.2.1 h1:y4OZtCnogmCPw98Zjyt5a6+QwPLGkiQsYW5oUqylYbM=
github.com/cenkalti/backoff/v4 v4.2.1/go.mod h1:Y3VNntkOUPxTVeUxJ/G5vcM//AlwfmyYozVcomhLiZE=
github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
github.com/cespare/xxhash v1.1.0/go.mod h1:XrSqR1VqqWfGrhpAt58auRo0WTKS1nRRg3ghfAqPWnc=
github.com/cespare/xxhash/v2 v2.1.1/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=
github.com/cespare/xxhash/v2 v2.3.0 h1:UL815xU9SqsFlibzuggzjXhog7bL6oX9BbNZnL2UFvs=
github.com/cespare/xxhash/v2 v2.3.0/go.mod h1:VGX0DQ3Q6kWi7AoAeZDth3/j3BFtOZR5XLFGgcrjCOs=
github.com/cheggaaa/pb v1.0.27/go.mod h1:pQciLPpbU0oxA0h+VJYYLxO+XeDQb5pZijXscXHm81s=
github.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=
github.com/chzyer/logex v1.2.1 h1:XHDu3E6q+gdHgsdTPH6ImJMIp436vR6MPtH8gP05QzM=
github.com/chzyer/logex v1.2.1/go.mod h1:JLbx6lG2kDbNRFnfkgvh4eRJRPX1QCoOIWomwysCBrQ=
github.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=
github.com/chzyer/readline v1.5.1 h1:upd/6fQk4src78LMRzh5vItIt361/o4uq553V8B5sGI=
github.com/chzyer/readline v1.5.1/go.mod h1:Eh+b79XXUwfKfcPLepksvw2tcLE/Ct21YObkaSkeBlk=
github.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=
github.com/chzyer/test v1.0.0 h1:p3BQDXSxOhOG0P9z6/hGnII4LGiEPOYBhs8asl/fC04=
github.com/chzyer/test v1.0.0/go.mod h1:2JlltgoNkt4TW/z9V/IzDdFaMTM2JPIi26O1pF38GC8=
github.com/circonus-labs/circonus-gometrics v2.3.1+incompatible/go.mod h1:nmEj6Dob7S7YxXgwXpfOuvO54S+tGdZdw9fuRZt25Ag=
github.com/circonus-labs/circonusllhist v0.1.3/go.mod h1:kMXHVDlOchFAehlya5ePtbp5jckzBHf4XRpQvBOLI+I=
github.com/clbanning/x2j v0.0.0-20191024224557-825249438eec/go.mod h1:jMjuTZXRI4dUb/I5gc9Hdhagfvm9+RyrPryS/auMzxE=
github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
github.com/cloudwego/base64x v0.1.4 h1:jwCgWpFanWmN8xoIUHa2rtzmkd5J2plF/dnLS6Xd/0Y=
github.com/cloudwego/base64x v0.1.4/go.mod h1:0zlkT4Wn5C6NdauXdJRhSKRlJvmclQ1hhJgA0rcu/8w=
github.com/cloudwego/iasm v0.2.0 h1:1KNIy1I1H9hNNFEEH3DVnI4UujN+1zjpuk6gwHLTssg=
github.com/cloudwego/iasm v0.2.0/go.mod h1:8rXZaNYT2n95jn+zTI1sDr+IgcD2GVs0nlbbQPiEFhY=
github.com/cmars/basen v0.0.0-20150613233007-fe3947df716e h1:0XBUw73chJ1VYSsfvcPvVT7auykAJce9FpRr10L6Qhw=
github.com/cmars/basen v0.0.0-20150613233007-fe3947df716e/go.mod h1:P13beTBKr5Q18lJe1rIoLUqjM+CB1zYrRg44ZqGuQSA=
github.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=
github.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
github.com/cncf/udpa/go v0.0.0-20210930031921-04548b0d99d4/go.mod h1:6pvJx4me5XPnfI9Z40ddWsdw2W/uZgQLFXToKeRcDiI=
github.com/cncf/xds/go v0.0.0-20210312221358-fbca930ec8ed/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20210805033703-aa0b78936158/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20210922020428-25de7278fc84/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20211001041855-01bcc9b48dfe/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cncf/xds/go v0.0.0-20211011173535-cb28da3451f1/go.mod h1:eXthEFrGJvWHgFFCl3hGmgk+/aYT6PnTQLykKQRLhEs=
github.com/cockroachdb/apd/v2 v2.0.2 h1:weh8u7Cneje73dDh+2tEVLUvyBc89iwepWCD8b8034E=
github.com/cockroachdb/apd/v2 v2.0.2/go.mod h1:DDxRlzC2lo3/vSlmSoS7JkqbbrARPuFOGr0B9pvN3Gw=
github.com/cockroachdb/apd/v3 v3.2.1 h1:U+8j7t0axsIgvQUqthuNm82HIrYXodOV2iWLWtEaIwg=
github.com/cockroachdb/apd/v3 v3.2.1/go.mod h1:klXJcjp+FffLTHlhIG69tezTDvdP065naDsHzKhYSqc=
github.com/cockroachdb/datadriven v0.0.0-20190809214429-80d97fb3cbaa/go.mod h1:zn76sxSg3SzpJ0PPJaLDCu+Bu0Lg3sKTORVIj19EIF8=
github.com/cockroachdb/datadriven v1.0.3-0.20230801171734-e384cf455877 h1:1MLK4YpFtIEo3ZtMA5C795Wtv5VuUnrXX7mQG+aHg6o=
github.com/cockroachdb/datadriven v1.0.3-0.20230801171734-e384cf455877/go.mod h1:a9RdTaap04u637JoCzcUoIcDmvwSUtcUFtT/C3kJlTU=
github.com/cockroachdb/errors v1.11.3 h1:5bA+k2Y6r+oz/6Z/RFlNeVCesGARKuC6YymtcDrbC/I=
github.com/cockroachdb/errors v1.11.3/go.mod h1:m4UIW4CDjx+R5cybPsNrRbreomiFqt8o1h1wUVazSd8=
github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce h1:giXvy4KSc/6g/esnpM7Geqxka4WSqI1SZc7sMJFd3y4=
github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce/go.mod h1:9/y3cnZ5GKakj/H4y9r9GTjCvAFta7KLgSHPJJYc52M=
github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b h1:r6VH0faHjZeQy818SGhaone5OnYfxFR/+AzdY3sf5aE=
github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b/go.mod h1:Vz9DsVWQQhf3vs21MhPMZpMGSht7O/2vFW2xusFUVOs=
github.com/cockroachdb/pebble v1.1.2 h1:CUh2IPtR4swHlEj48Rhfzw6l/d0qA31fItcIszQVIsA=
github.com/cockroachdb/pebble v1.1.2/go.mod h1:4exszw1r40423ZsmkG/09AFEG83I0uDgfujJdbL6kYU=
github.com/cockroachdb/redact v1.1.5 h1:u1PMllDkdFfPWaNGMyLD1+so+aq3uUItthCFqzwPJ30=
github.com/cockroachdb/redact v1.1.5/go.mod h1:BVNblN9mBWFyMyqK1k3AAiSxhvhfK2oOZZ2lK+dpvRg=
github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06 h1:zuQyyAKVxetITBuuhv3BI9cMrmStnpT18zmgmTxunpo=
github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06/go.mod h1:7nc4anLGjupUW/PeY5qiNYsdNXj7zopG+eqsS7To5IQ=
github.com/codahale/hdrhistogram v0.0.0-20161010025455-3a0bb77429bd/go.mod h1:sE/e/2PUdi/liOCUjSTXgM1o87ZssimdTWN964YiIeI=
github.com/cometbft/cometbft v0.38.17 h1:FkrQNbAjiFqXydeAO81FUzriL4Bz0abYxN/eOHrQGOk=
github.com/cometbft/cometbft v0.38.17/go.mod h1:5l0SkgeLRXi6bBfQuevXjKqML1jjfJJlvI1Ulp02/o4=
github.com/cometbft/cometbft-db v1.0.1 h1:SylKuLseMLQKw3+i8y8KozZyJcQSL98qEe2CGMCGTYE=
github.com/cometbft/cometbft-db v1.0.1/go.mod h1:EBrFs1GDRiTqrWXYi4v90Awf/gcdD5ExzdPbg4X8+mk=
github.com/consensys/bavard v0.1.13 h1:oLhMLOFGTLdlda/kma4VOJazblc7IM5y5QPd2A/YjhQ=
github.com/consensys/bavard v0.1.13/go.mod h1:9ItSMtA/dXMAiL7BG6bqW2m3NdSEObYWoH223nGHukI=
github.com/consensys/gnark-crypto v0.12.1 h1:lHH39WuuFgVHONRl3J0LRBtuYdQTumFSDtJF7HpyG8M=
github.com/consensys/gnark-crypto v0.12.1/go.mod h1:v2Gy7L/4ZRosZ7Ivs+9SfUDr0f5UlG+EM5t7MPHiLuY=
github.com/containerd/continuity v0.3.0 h1:nisirsYROK15TAMVukJOUyGJjz4BNQJBVsNvAXZJ/eg=
github.com/containerd/continuity v0.3.0/go.mod h1:wJEAIwKOm/pBZuBd0JmeTvnLquTB1Ag8espWhkykbPM=
github.com/coreos/go-semver v0.2.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=
github.com/coreos/go-systemd v0.0.0-20180511133405-39ca1b05acc7/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=
github.com/coreos/go-systemd/v22 v22.5.0/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=
github.com/coreos/pkg v0.0.0-20160727233714-3ac0863d7acf/go.mod h1:E3G3o1h8I7cfcXa63jLwjI0eiQQMgzzUDFVpN/nH/eA=
github.com/cosmos/btcutil v1.0.5 h1:t+ZFcX77LpKtDBhjucvnOH8C2l2ioGsBNEQ3jef8xFk=
github.com/cosmos/btcutil v1.0.5/go.mod h1:IyB7iuqZMJlthe2tkIFL33xPyzbFYP0XVdS8P5lUPis=
github.com/cosmos/cosmos-db v1.1.1 h1:FezFSU37AlBC8S98NlSagL76oqBRWq/prTPvFcEJNCM=
github.com/cosmos/cosmos-db v1.1.1/go.mod h1:AghjcIPqdhSLP/2Z0yha5xPH3nLnskz81pBx3tcVSAw=
github.com/cosmos/cosmos-proto v1.0.0-beta.5 h1:eNcayDLpip+zVLRLYafhzLvQlSmyab+RC5W7ZfmxJLA=
github.com/cosmos/cosmos-proto v1.0.0-beta.5/go.mod h1:hQGLpiIUloJBMdQMMWb/4wRApmI9hjHH05nefC0Ojec=
github.com/cosmos/cosmos-sdk v0.50.13 h1:xQ32hhzVy7agEe7behMdZN0ezWhPss3KoLZsF9KoBnw=
github.com/cosmos/cosmos-sdk v0.50.13/go.mod h1:hrWEFMU1eoXqLJeE6VVESpJDQH67FS1nnMrQIjO2daw=
github.com/cosmos/go-bip39 v0.0.0-20180819234021-555e2067c45d/go.mod h1:tSxLoYXyBmiFeKpvmq4dzayMdCjCnu8uqmCysIGBT2Y=
github.com/cosmos/go-bip39 v1.0.0 h1:pcomnQdrdH22njcAatO0yWojsUnCO3y2tNoV1cb6hHY=
github.com/cosmos/go-bip39 v1.0.0/go.mod h1:RNJv0H/pOIVgxw6KS7QeX2a0Uo0aKUlfhZ4xuwvCdJw=
github.com/cosmos/gogogateway v1.2.0 h1:Ae/OivNhp8DqBi/sh2A8a1D0y638GpL3tkmLQAiKxTE=
github.com/cosmos/gogogateway v1.2.0/go.mod h1:iQpLkGWxYcnCdz5iAdLcRBSw3h7NXeOkZ4GUkT+tbFI=
github.com/cosmos/gogoproto v1.4.2/go.mod h1:cLxOsn1ljAHSV527CHOtaIP91kK6cCrZETRBrkzItWU=
github.com/cosmos/gogoproto v1.7.0 h1:79USr0oyXAbxg3rspGh/m4SWNyoz/GLaAh0QlCe2fro=
github.com/cosmos/gogoproto v1.7.0/go.mod h1:yWChEv5IUEYURQasfyBW5ffkMHR/90hiHgbNgrtp4j0=
github.com/cosmos/iavl v1.2.4 h1:IHUrG8dkyueKEY72y92jajrizbkZKPZbMmG14QzsEkw=
github.com/cosmos/iavl v1.2.4/go.mod h1:GiM43q0pB+uG53mLxLDzimxM9l/5N9UuSY3/D0huuVw=
github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8 v8.2.0 h1:rM+S14DFiqmu6Rc3PuhvWqwywPsnt/CbIslSnBftPFs=
github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8 v8.2.0/go.mod h1:O5H9Ic3Pe6cmJn1eqlj5N48sLb8WQ1VWmDP4/11g/4E=
github.com/cosmos/ibc-apps/modules/ibc-hooks/v8 v8.0.0 h1:RBUq0cC9HJ9iIhifdWbV+kjDExzfhmAB7ktOAU1RWPU=
github.com/cosmos/ibc-apps/modules/ibc-hooks/v8 v8.0.0/go.mod h1:6szYOdzw0cUzFj8ZW+qfss0b4mMN1/HWxPATKZKbCfI=
github.com/cosmos/ibc-go/modules/apps/callbacks v0.2.1-0.20231113120333-342c00b0f8bd h1:Lx+/5dZ/nN6qPXP2Ofog6u1fmlkCFA1ElcOconnofEM=
github.com/cosmos/ibc-go/modules/apps/callbacks v0.2.1-0.20231113120333-342c00b0f8bd/go.mod h1:JWfpWVKJKiKtd53/KbRoKfxWl8FsT2GPcNezTOk0o5Q=
github.com/cosmos/ibc-go/modules/capability v1.0.1 h1:ibwhrpJ3SftEEZRxCRkH0fQZ9svjthrX2+oXdZvzgGI=
github.com/cosmos/ibc-go/modules/capability v1.0.1/go.mod h1:rquyOV262nGJplkumH+/LeYs04P3eV8oB7ZM4Ygqk4E=
github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72 h1:QjCi4bJoy9AXLL1e4jqi+4rHYN0gGZAQxf937cdWhw4=
github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72/go.mod h1:yiulzyQAZ+Ci802z/kVQqTA3lGiSJOmDpTq7kZxOUNE=
github.com/cosmos/ibc-go/v8 v8.7.0 h1:HqhVOkO8bDpClXE81DFQgFjroQcTvtpm0tCS7SQVKVY=
github.com/cosmos/ibc-go/v8 v8.7.0/go.mod h1:G2z+Q6ZQSMcyHI2+BVcJdvfOupb09M2h/tgpXOEdY6k=
github.com/cosmos/ics23/go v0.11.0 h1:jk5skjT0TqX5e5QJbEnwXIS2yI2vnmLOgpQPeM5RtnU=
github.com/cosmos/ics23/go v0.11.0/go.mod h1:A8OjxPE67hHST4Icw94hOxxFEJMBG031xIGF/JHNIY0=
github.com/cosmos/interchain-security/v5 v5.0.0-alpha1.0.20240424193412-7cd900ad2a74 h1:6atU/xizTL10q6EprP7oRuvfgUP2F6puvutnVoE+FRc=
github.com/cosmos/interchain-security/v5 v5.0.0-alpha1.0.20240424193412-7cd900ad2a74/go.mod h1:h/RkwOppo5AJj+1pkQyfjqU1MPdpohD/S6oEeAXpGZY=
github.com/cosmos/ledger-cosmos-go v0.14.0 h1:WfCHricT3rPbkPSVKRH+L4fQGKYHuGOK9Edpel8TYpE=
github.com/cosmos/ledger-cosmos-go v0.14.0/go.mod h1:E07xCWSBl3mTGofZ2QnL4cIUzMbbGVyik84QYKbX3RA=
github.com/cpuguy83/go-md2man/v2 v2.0.0-20190314233015-f79a8a8ca69d/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=
github.com/cpuguy83/go-md2man/v2 v2.0.4 h1:wfIWP927BUkWJb2NmU/kNDYIBTh/ziUX91+lVfRxZq4=
github.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=
github.com/crate-crypto/go-ipa v0.0.0-20240223125850-b1e8a79f509c h1:uQYC5Z1mdLRPrZhHjHxufI8+2UG/i25QG92j0Er9p6I=
github.com/crate-crypto/go-ipa v0.0.0-20240223125850-b1e8a79f509c/go.mod h1:geZJZH3SzKCqnz5VT0q/DyIG/tvu/dZk+VIfXicupJs=
github.com/crate-crypto/go-kzg-4844 v1.0.0 h1:TsSgHwrkTKecKJ4kadtHi4b3xHW5dCFUDFnUp1TsawI=
github.com/crate-crypto/go-kzg-4844 v1.0.0/go.mod h1:1kMhvPgI0Ky3yIa+9lFySEBUBXkYxeOi8ZF1sYioxhc=
github.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=
github.com/creack/pty v1.1.9/go.mod h1:oKZEueFk5CKHvIhNR5MUki03XCEU+Q6VDXinZuGJ33E=
github.com/danieljoos/wincred v1.1.2 h1:QLdCxFs1/Yl4zduvBdcHB8goaYk9RARS2SgLLRuAyr0=
github.com/danieljoos/wincred v1.1.2/go.mod h1:GijpziifJoIBfYh+S7BbkdUTU4LfM+QnGqR5Vl2tAx0=
github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=
github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
github.com/deckarep/golang-set v1.8.0 h1:sk9/l/KqpunDwP7pSjUg0keiOOLEnOBHzykLrsPppp4=
github.com/deckarep/golang-set v1.8.0/go.mod h1:5nI87KwE7wgsBU1F4GKAw2Qod7p5kyS383rP6+o6qqo=
github.com/deckarep/golang-set/v2 v2.6.0 h1:XfcQbWM1LlMB8BsJ8N9vW5ehnnPVIw0je80NsVHagjM=
github.com/deckarep/golang-set/v2 v2.6.0/go.mod h1:VAky9rY/yGXJOLEDv3OMci+7wtDpOF4IN+y82NBOac4=
github.com/decred/base58 v1.0.4 h1:QJC6B0E0rXOPA8U/kw2rP+qiRJsUaE2Er+pYb3siUeA=
github.com/decred/base58 v1.0.4/go.mod h1:jJswKPEdvpFpvf7dsDvFZyLT22xZ9lWqEByX38oGd9E=
github.com/decred/dcrd/chaincfg/chainhash v1.0.2 h1:rt5Vlq/jM3ZawwiacWjPa+smINyLRN07EO0cNBV6DGU=
github.com/decred/dcrd/chaincfg/chainhash v1.0.2/go.mod h1:BpbrGgrPTr3YJYRN3Bm+D9NuaFd+zGyNeIKgrhCXK60=

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:451-600
github.com/decred/dcrd/crypto/blake256 v1.0.0/go.mod h1:sQl2p6Y26YV+ZOcSTP6thNdn47hh8kt6rqSlvmrXFAc=
github.com/decred/dcrd/crypto/blake256 v1.0.1 h1:7PltbUIQB7u/FfZ39+DGa/ShuMyJ5ilcvdfma9wOH6Y=
github.com/decred/dcrd/crypto/blake256 v1.0.1/go.mod h1:2OfgNZ5wDpcsFmHmCK5gZTPcCXqlm2ArzUIkw9czNJo=
github.com/decred/dcrd/dcrec/secp256k1/v2 v2.0.1 h1:18HurQ6DfHeNvwIjvOmrgr44bPdtVaQAe/WWwHg9goM=
github.com/decred/dcrd/dcrec/secp256k1/v2 v2.0.1/go.mod h1:XmyzkaXBy7ZvHdrTAlXAjpog8qKSAWa3ze7yqzWmgmc=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.2.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 h1:rpfIENRNNilwHwZeG5+P150SMrnNEcHYvcCuK6dPZSg=
github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0/go.mod h1:v57UDF4pDQJcEfFUCRop3lJL149eHGSe9Jvczhzjo/0=
github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f h1:U5y3Y5UE0w7amNe7Z5G/twsBW0KEalRQXZzf8ufSh9I=
github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f/go.mod h1:xH/i4TFMt8koVQZ6WFms69WAsDWr2XsYL3Hkl7jkoLE=
github.com/dgraph-io/badger/v4 v4.5.1 h1:7DCIXrQjo1LKmM96YD+hLVJ2EEsyyoWxJfpdd56HLps=
github.com/dgraph-io/badger/v4 v4.5.1/go.mod h1:qn3Be0j3TfV4kPbVoK0arXCD1/nr1ftth6sbL5jxdoA=
github.com/dgraph-io/ristretto/v2 v2.1.0 h1:59LjpOJLNDULHh8MC4UaegN52lC4JnO2dITsie/Pa8I=
github.com/dgraph-io/ristretto/v2 v2.1.0/go.mod h1:uejeqfYXpUomfse0+lO+13ATz4TypQYLJZzBSAemuB4=
github.com/dgrijalva/jwt-go v3.2.0+incompatible/go.mod h1:E3ru+11k8xSBh+hMPgOLZmtrrCbhqsmaPHjLKYnJCaQ=
github.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13 h1:fAjc9m62+UWV/WAFKLNi6ZS0675eEUC9y3AlwSbQu1Y=
github.com/dgryski/go-farm v0.0.0-20200201041132-a6ae2369ad13/go.mod h1:SqUrOPUnsFjfmXRMNPybcSiG0BgUW2AuFH8PAnS2iTw=
github.com/distribution/reference v0.5.0 h1:/FUIFXtfc/x2gpa5/VGfiGLuOIdYa1t65IKK2OFGvA0=
github.com/distribution/reference v0.5.0/go.mod h1:BbU0aIcezP1/5jX/8MP0YiH4SdvB5Y4f/wlDRiLyi3E=
github.com/docker/distribution v2.8.2+incompatible h1:T3de5rq0dB1j30rp0sA2rER+m322EBzniBPB6ZIzuh8=
github.com/docker/distribution v2.8.2+incompatible/go.mod h1:J2gT2udsDAN96Uj4KfcMRqY0/ypR+oyYUYmja8H+y+w=
github.com/docker/docker v24.0.9+incompatible h1:HPGzNmwfLZWdxHqK9/II92pyi1EpYKsAqcl4G0Of9v0=
github.com/docker/docker v24.0.9+incompatible/go.mod h1:eEKB0N0r5NX/I1kEveEz05bcu8tLC/8azJZsviup8Sk=
github.com/docker/go-connections v0.5.0 h1:USnMq7hx7gwdVZq1L49hLXaFtUdTADjXGp+uj1Br63c=
github.com/docker/go-connections v0.5.0/go.mod h1:ov60Kzw0kKElRwhNs9UlUHAE/F9Fe6GLaXnqyDdmEXc=
github.com/docker/go-units v0.5.0 h1:69rxXcBk27SvSaaxTtLh/8llcHD8vYHT7WSdRZ/jvr4=
github.com/docker/go-units v0.5.0/go.mod h1:fgPhTUdO+D/Jk86RDLlptpiXQzgHJF7gydDDbaIK4Dk=
github.com/dustin/go-humanize v0.0.0-20171111073723-bb3d318650d4/go.mod h1:HtrtbFcZ19U5GC7JDqmcUSB87Iq5E25KnS6fMYU6eOk=
github.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=
github.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=
github.com/dvsekhvalnov/jose2go v1.6.0 h1:Y9gnSnP4qEI0+/uQkHvFXeD2PLPJeXEL+ySMEA2EjTY=
github.com/dvsekhvalnov/jose2go v1.6.0/go.mod h1:QsHjhyTlD/lAVqn/NSbVZmSCGeDehTB/mPZadG+mhXU=
github.com/eapache/go-resiliency v1.1.0/go.mod h1:kFI+JgMyC7bLPUVY133qvEBtVayf5mFgVsvEsIPBvNs=
github.com/eapache/go-xerial-snappy v0.0.0-20180814174437-776d5712da21/go.mod h1:+020luEh2TKB4/GOp8oxxtq0Daoen/Cii55CzbTV6DU=
github.com/eapache/queue v1.1.0/go.mod h1:6eCeP0CKFpHLu8blIFXhExK/dRa7WDZfr6jVFPTqq+I=
github.com/edsrzf/mmap-go v1.0.0/go.mod h1:YO35OhQPt3KJa3ryjFM5Bs14WD66h8eGKpfaBNrHW5M=
github.com/emicklei/dot v1.6.2 h1:08GN+DD79cy/tzN6uLCT84+2Wk9u+wvqP+Hkx/dIR8A=
github.com/emicklei/dot v1.6.2/go.mod h1:DeV7GvQtIw4h2u73RKBkkFdvVAz0D9fzeJrgPW6gy/s=
github.com/envoyproxy/go-control-plane v0.6.9/go.mod h1:SBwIajubJHhxtWwsL9s8ss4safvEdbitLhGGK48rN6g=
github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
github.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=
github.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=
github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
github.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
github.com/envoyproxy/go-control-plane v0.9.9-0.20210512163311-63b5d3c536b0/go.mod h1:hliV/p42l8fGbc6Y9bQ70uLwIvmJyVE5k4iMKlh8wCQ=
github.com/envoyproxy/go-control-plane v0.9.10-0.20210907150352-cf90f659a021/go.mod h1:AFq3mo9L8Lqqiid3OhADV3RfLJnjiw63cSpi+fDTRC0=
github.com/envoyproxy/go-control-plane v0.10.2-0.20220325020618-49ff273808a1/go.mod h1:KJwIaB5Mv44NWtYuAOFCVOjcI94vtpEz2JU/D2v6IjE=
github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
github.com/ethereum/c-kzg-4844 v1.0.0 h1:0X1LBXxaEtYD9xsyj9B9ctQEZIpnvVDeoBx8aHEwTNA=
github.com/ethereum/c-kzg-4844 v1.0.0/go.mod h1:VewdlzQmpT5QSrVhbBuGoCdFJkpaJlO1aQputP83wc0=
github.com/ethereum/go-ethereum v1.14.5 h1:szuFzO1MhJmweXjoM5nSAeDvjNUH3vIQoMzzQnfvjpw=
github.com/ethereum/go-ethereum v1.14.5/go.mod h1:VEDGGhSxY7IEjn98hJRFXl/uFvpRgbIIf2PpXiyGGgc=
github.com/ethereum/go-verkle v0.1.1-0.20240306133620-7d920df305f0 h1:KrE8I4reeVvf7C1tm8elRjj4BdscTYzz/WAbYyf/JI4=
github.com/ethereum/go-verkle v0.1.1-0.20240306133620-7d920df305f0/go.mod h1:D9AJLVXSyZQXJQVk8oh1EwjISE+sJTn2duYIZC0dy3w=
github.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=
github.com/fatih/color v1.13.0/go.mod h1:kLAiJbzzSOZDVNGyDpeOxJ47H46qBXwg5ILebYFFOfk=
github.com/fatih/color v1.16.0 h1:zmkK9Ngbjj+K0yRhTVONQh1p/HknKYSlNT+vZCzyokM=
github.com/fatih/color v1.16.0/go.mod h1:fL2Sau1YI5c0pdGEVCbKQbLXB6edEj1ZgiY4NijnWvE=
github.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=
github.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=
github.com/fjl/memsize v0.0.2 h1:27txuSD9or+NZlnOWdKUxeBzTAUkWCVh+4Gf2dWFOzA=
github.com/fjl/memsize v0.0.2/go.mod h1:VvhXpOYNQvB+uIk2RvXzuaQtkQJzzIx6lSBe1xv7hi0=
github.com/fortytw2/leaktest v1.3.0 h1:u8491cBMTQ8ft8aeV+adlcytMZylmA5nnwwkRZjI8vw=
github.com/fortytw2/leaktest v1.3.0/go.mod h1:jDsjWgpAGjm2CA7WthBh/CdZYEPF31XHquHwclZch5g=
github.com/franela/goblin v0.0.0-20200105215937-c9ffbefa60db/go.mod h1:7dvUGVsVBjqR7JHJk0brhHOZYGmfBYOrK0ZhYMEtBr4=
github.com/franela/goreq v0.0.0-20171204163338-bcd34c9993f8/go.mod h1:ZhphrRTfi2rbfLwlschooIH4+wKKDR4Pdxhh+TRoA20=
github.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=
github.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=
github.com/fsnotify/fsnotify v1.4.7/go.mod h1:jwhsz4b93w/PPRr/qN1Yymfu8t87LnFCMoQvtojpjFo=
github.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=
github.com/fsnotify/fsnotify v1.5.4/go.mod h1:OVB6XrOHzAwXMpEM7uPOzcehqUV2UqJxmVXmkdnm1bU=
github.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=
github.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=
github.com/fxamacker/cbor/v2 v2.5.0 h1:oHsG0V/Q6E/wqTS2O1Cozzsy69nqCiguo5Q1a1ADivE=
github.com/fxamacker/cbor/v2 v2.5.0/go.mod h1:TA1xS00nchWmaBnEIxPSE5oHLuJBAVvqrtAnWBwBCVo=
github.com/gballet/go-libpcsclite v0.0.0-20190607065134-2772fd86a8ff h1:tY80oXqGNY4FhTFhk+o9oFHGINQ/+vhlm8HFzi6znCI=
github.com/gballet/go-libpcsclite v0.0.0-20190607065134-2772fd86a8ff/go.mod h1:x7DCsMOv1taUwEWCzT4cmDeAkigA5/QCwUodaVOe8Ww=
github.com/getsentry/sentry-go v0.27.0 h1:Pv98CIbtB3LkMWmXi4Joa5OOcwbmnX88sF5qbK3r3Ps=
github.com/getsentry/sentry-go v0.27.0/go.mod h1:lc76E2QywIyW8WuBnwl8Lc4bkmQH4+w1gwTf25trprY=
github.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=
github.com/gin-contrib/sse v0.1.0/go.mod h1:RHrZQHXnP2xjPF+u1gW/2HnVO7nvIa9PG3Gm+fLHvGI=
github.com/gin-gonic/gin v1.6.3/go.mod h1:75u5sXoLsGZoRN5Sgbi1eraJ4GU3++wFwWzhwvtwp4M=
github.com/go-errors/errors v1.4.2 h1:J6MZopCL4uSllY1OfXM374weqZFFItUbrImctkmUxIA=
github.com/go-errors/errors v1.4.2/go.mod h1:sIVyrIiJhuEF+Pj9Ebtd6P/rEYROXFi3BopGUQ5a5Og=
github.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=
github.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=
github.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=
github.com/go-kit/kit v0.8.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=
github.com/go-kit/kit v0.9.0/go.mod h1:xBxKIO96dXMWWy0MnWVtmwkA9/13aqxPnvrjFYMA2as=
github.com/go-kit/kit v0.10.0/go.mod h1:xUsJbQ/Fp4kEt7AFgCuvyX4a71u8h9jB8tj/ORgOZ7o=
github.com/go-kit/kit v0.13.0 h1:OoneCcHKHQ03LfBpoQCUfCluwd2Vt3ohz+kvbJneZAU=
github.com/go-kit/kit v0.13.0/go.mod h1:phqEHMMUbyrCFCTgH48JueqrM3md2HcAZ8N3XE4FKDg=
github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=
github.com/go-kit/log v0.2.1 h1:MRVx0/zhvdseW+Gza6N9rVzU/IVzaeE1SFI4raAhmBU=
github.com/go-kit/log v0.2.1/go.mod h1:NwTd00d/i8cPZ3xOwwiv2PO5MOcx78fFErGNcVmBjv0=
github.com/go-logfmt/logfmt v0.3.0/go.mod h1:Qt1PoO58o5twSAckw1HlFXLmHsOX5/0LbT9GBnD5lWE=
github.com/go-logfmt/logfmt v0.4.0/go.mod h1:3RMwSq7FuexP4Kalkev3ejPJsZTpXXBr9+V4qmtdjCk=
github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=
github.com/go-logfmt/logfmt v0.6.0 h1:wGYYu3uicYdqXVgoYbvnkrPVXkuLM1p1ifugDMEdRi4=
github.com/go-logfmt/logfmt v0.6.0/go.mod h1:WYhtIu8zTZfxdn5+rREduYbwxfcBr/Vr6KEVveWlfTs=
github.com/go-logr/logr v1.2.2/go.mod h1:jdQByPbusPIv2/zmleS9BjJVeZ6kBagPoEUsqbVz/1A=
github.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=
github.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=
github.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=
github.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=
github.com/go-ole/go-ole v1.2.5/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=
github.com/go-ole/go-ole v1.3.0 h1:Dt6ye7+vXGIKZ7Xtk4s6/xVdGDQynvom7xCFEdWr6uE=
github.com/go-ole/go-ole v1.3.0/go.mod h1:5LS6F96DhAwUc7C+1HLexzMXY1xGRSryjyPPKW6zv78=
github.com/go-playground/assert/v2 v2.0.1/go.mod h1:VDjEfimB/XKnb+ZQfWdccd7VUvScMdVu0Titje2rxJ4=
github.com/go-playground/locales v0.13.0/go.mod h1:taPMhCMXrRLJO55olJkUXHZBHCxTMfnGwq/HNwmWNS8=
github.com/go-playground/universal-translator v0.17.0/go.mod h1:UkSxE5sNxxRwHyU+Scu5vgOQjsIJAF8j9muTVoKLVtA=
github.com/go-playground/validator/v10 v10.2.0/go.mod h1:uOYAAleCW8F/7oMFd6aG0GOhaH6EGOAJShg8Id5JGkI=
github.com/go-sql-driver/mysql v1.4.0/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=
github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=
github.com/go-task/slim-sprig v0.0.0-20210107165309-348f09dbbbc0/go.mod h1:fyg7847qk6SyHyPtNmDHnmrv/HOrqktSC+C9fM+CJOE=
github.com/go-webauthn/webauthn v0.9.1 h1:KuZjvUX9JTuFjB2n7kZhM6n76BClLUFbFM8SLKnrXpo=
github.com/go-webauthn/webauthn v0.9.1/go.mod h1:m315kRGbUljOytw8b9FGWG9QzErjI5v02pNFCF3lwpI=
github.com/go-webauthn/x v0.1.4 h1:sGmIFhcY70l6k7JIDfnjVBiAAFEssga5lXIUXe0GtAs=
github.com/go-webauthn/x v0.1.4/go.mod h1:75Ug0oK6KYpANh5hDOanfDI+dvPWHk788naJVG/37H8=
github.com/gobwas/httphead v0.0.0-20180130184737-2c6c146eadee/go.mod h1:L0fX3K22YWvt/FAX9NnzrNzcI4wNYi9Yku4O0LKYflo=
github.com/gobwas/pool v0.2.0/go.mod h1:q8bcK0KcYlCgd9e7WYLm9LpyS+YeLd8JVDW6WezmKEw=
github.com/gobwas/ws v1.0.2/go.mod h1:szmBTxLgaFppYjEmNtny/v3w89xOydFnnZMcgRRu/EM=
github.com/goccy/go-json v0.10.2 h1:CrxCmQqYDkv1z7lO7Wbh2HN93uovUHgrECaO5ZrCXAU=
github.com/goccy/go-json v0.10.2/go.mod h1:6MelG93GURQebXPDq3khkgXZkazVtN9CRI+MGFi0w8I=
github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 h1:ZpnhV/YsD2/4cESfV5+Hoeu/iUR3ruzNvZ+yQfO03a0=
github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2/go.mod h1:bBOAhwG1umN6/6ZUMtDFBMQR8jRg9O75tm9K00oMsK4=
github.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=
github.com/gofrs/flock v0.8.1 h1:+gYjHKf32LDeiEEFhQaotPbLuUXjY5ZqxKgXy7n59aw=
github.com/gofrs/flock v0.8.1/go.mod h1:F1TvTiK9OcQqauNUHlbJvyl9Qa1QvF/gOUDKA14jxHU=
github.com/gogo/googleapis v0.0.0-20180223154316-0cd9801be74a/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=
github.com/gogo/googleapis v1.1.0/go.mod h1:gf4bu3Q80BeJ6H1S1vYPm8/ELATdvryBaNFGgqEef3s=
github.com/gogo/googleapis v1.4.1-0.20201022092350-68b0159b7869/go.mod h1:5YRNX2z1oM5gXdAkurHa942MDgEJyk02w4OecKY87+c=
github.com/gogo/googleapis v1.4.1 h1:1Yx4Myt7BxzvUr5ldGSbwYiZG6t9wGBZ+8/fX3Wvtq0=
github.com/gogo/googleapis v1.4.1/go.mod h1:2lpHqI5OcWCtVElxXnPt+s8oJvMpySlOyM6xDCrzib4=
github.com/gogo/status v1.1.0 h1:+eIkrewn5q6b30y+g/BJINVVdi2xH7je5MPJ3ZPK3JA=
github.com/gogo/status v1.1.0/go.mod h1:BFv9nrluPLmrS0EmGVvLaPNmRosr9KapBYd5/hpY1WM=
github.com/golang-jwt/jwt/v4 v4.5.0 h1:7cYmW1XlMY7h7ii7UhUyChSgS5wUJEnm9uZVTGqOWzg=
github.com/golang-jwt/jwt/v4 v4.5.0/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=
github.com/golang-jwt/jwt/v5 v5.1.0 h1:UGKbA/IPjtS6zLcdB7i5TyACMgSbOTiR8qzXgw8HWQU=
github.com/golang-jwt/jwt/v5 v5.1.0/go.mod h1:pqrtFR0X4osieyHYxtmOUWsAWrfe1Q5UVIyoH402zdk=
github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
github.com/golang/groupcache v0.0.0-20160516000752-02826c3e7903/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da h1:oI5xCqsCo564l8iNU+DwB5epxmsaqB+rhGL0m5jtYqE=
github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=
github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
github.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:601-750
github.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=
github.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=
github.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=
github.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=
github.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=
github.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=
github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.0/go.mod h1:Qd/q+1AKNOZr9uGQzbzCmRO6sUih6GTPZv6a1/R87v0=
github.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
github.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
github.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=
github.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=
github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
github.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
github.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=
github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
github.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=
github.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=
github.com/golang/snappy v0.0.0-20180518054509-2e65f85255db/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.3/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.4/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb h1:PBC98N2aIaM3XXiurYmW7fx4GZkL8feAMVq7nEjURHk=
github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb/go.mod h1:/XxbfmMg8lxefKM7IXC3fBNl/7bRcc72aCRzEWrmP2Q=
github.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
github.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=
github.com/google/btree v1.1.3 h1:CVpQJjYgC4VbzxeGVHfvZrv1ctoYCAI8vbl07Fcxlyg=
github.com/google/btree v1.1.3/go.mod h1:qOPhT0dTNdNzV6Z/lhRX0YXUafgPLFUh+gZMl761Gm4=
github.com/google/flatbuffers v24.12.23+incompatible h1:ubBKR94NR4pXUCY/MUsRVzd9umNW7ht7EG9hHfS9FX8=
github.com/google/flatbuffers v24.12.23+incompatible/go.mod h1:1AeVuKshWv4vARoZatz6mlQ0JxURH0Kv5+zNeJKJCa8=
github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
github.com/google/go-cmp v0.5.7/go.mod h1:n+brtR0CgQNWTVd5ZUFpTBC8YFBDLK/h/bpaJ8/DtOE=
github.com/google/go-cmp v0.5.8/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=
github.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=
github.com/google/go-tpm v0.9.0 h1:sQF6YqWMi+SCXpsmS3fd21oPy/vSddwZry4JnmltHVk=
github.com/google/go-tpm v0.9.0/go.mod h1:FkNVkc6C+IsvDI9Jw1OveJmxGZUUaKxtrpOS47QWKfU=
github.com/google/gofuzz v0.0.0-20170612174753-24818f796faf/go.mod h1:HP5RmnzzSNb993RKQDq4+1A4ia9nllfqcQFTQJedwGI=
github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
github.com/google/gofuzz v1.2.0 h1:xRy4A+RhZaiKjJ1bPfwQ8sedCA+YS2YcCHW6ec7JMi0=
github.com/google/gofuzz v1.2.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
github.com/google/martian v2.1.0+incompatible h1:/CP5g8u/VJHijgedC/Legn3BAbAaWPgecwXBIDzw5no=
github.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=
github.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=
github.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=
github.com/google/martian/v3 v3.2.1/go.mod h1:oBOf6HBosgwRXnUGWUB05QECsc6uvmMiJ3+6W4l/CUk=
github.com/google/martian/v3 v3.3.3 h1:DIhPTQrbPkgs2yJYdXU/eNACCG5DVQjySNRNlflZ9Fc=
github.com/google/martian/v3 v3.3.3/go.mod h1:iEPrYcgCF7jA9OtScMFQyAlZZ4YXTKEtJ1E6RWzmBA0=
github.com/google/orderedcode v0.0.1 h1:UzfcAexk9Vhv8+9pNOgRu41f16lHq725vPwnSeiG/Us=
github.com/google/orderedcode v0.0.1/go.mod h1:iVyU4/qPKHY5h/wSd6rZZCDcLJNxiWO6dvsYES2Sb20=
github.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
github.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=
github.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=
github.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210407192527-94a9f03dee38/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210601050228-01bbb1931b22/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210609004039-a478d1d731e9/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20210720184732-4bb14d4b1be1/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=
github.com/google/pprof v0.0.0-20240409012703-83162a5b38cd h1:gbpYu9NMq8jhDVbvlGkMFWCjLFlqqEZjEmObmhUy6Vo=
github.com/google/pprof v0.0.0-20240409012703-83162a5b38cd/go.mod h1:kf6iHlnVGwgKolg33glAes7Yg/8iWP8ukqeldJSO7jw=
github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=
github.com/google/s2a-go v0.1.7 h1:60BLSyTrOV4/haCDW4zb1guZItoSq8foHCXrAnjBo/o=
github.com/google/s2a-go v0.1.7/go.mod h1:50CgR4k1jNlWBu4UfS4AcfhVe1r6pdZPygJ3R8F0Qdw=
github.com/google/subcommands v1.2.0/go.mod h1:ZjhPrFU+Olkh9WazFPsl27BQ4UPiG37m3yTrtFlrHVk=
github.com/google/uuid v1.0.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.3.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=
github.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
github.com/googleapis/enterprise-certificate-proxy v0.0.0-20220520183353-fd19c99a87aa/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=
github.com/googleapis/enterprise-certificate-proxy v0.1.0/go.mod h1:17drOmN3MwGY7t0e+Ei9b45FFGA3fBs3x36SsCg1hq8=
github.com/googleapis/enterprise-certificate-proxy v0.2.0/go.mod h1:8C0jb7/mgJe/9KK8Lm7X9ctZC2t60YyIpYEI16jx0Qg=
github.com/googleapis/enterprise-certificate-proxy v0.3.2 h1:Vie5ybvEvT75RniqhfFxPRy3Bf7vr3h0cechB90XaQs=
github.com/googleapis/enterprise-certificate-proxy v0.3.2/go.mod h1:VLSiSSBs/ksPL8kq3OBOQ6WRI2QnaFynd1DCjZ62+V0=
github.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=
github.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=
github.com/googleapis/gax-go/v2 v2.1.0/go.mod h1:Q3nei7sK6ybPYH7twZdmQpAd1MKb7pfu6SK+H1/DsU0=
github.com/googleapis/gax-go/v2 v2.1.1/go.mod h1:hddJymUZASv3XPyGkUpKj8pPO47Rmb0eJc8R6ouapiM=
github.com/googleapis/gax-go/v2 v2.2.0/go.mod h1:as02EH8zWkzwUoLbBaFeQ+arQaj/OthfcblKl4IGNaM=
github.com/googleapis/gax-go/v2 v2.3.0/go.mod h1:b8LNqSzNabLiUpXKkY7HAR5jr6bIT99EXz9pXxye9YM=
github.com/googleapis/gax-go/v2 v2.4.0/go.mod h1:XOTVJ59hdnfJLIP/dh8n5CGryZR2LxK9wbMD5+iXC6c=
github.com/googleapis/gax-go/v2 v2.5.1/go.mod h1:h6B0KMMFNtI2ddbGJn3T3ZbwkeT6yqEF02fYlzkUCyo=
github.com/googleapis/gax-go/v2 v2.6.0/go.mod h1:1mjbznJAPHFpesgE5ucqfYEscaz5kMdcIDwU/6+DDoY=
github.com/googleapis/gax-go/v2 v2.12.5 h1:8gw9KZK8TiVKB6q3zHY3SBzLnrGp6HQjyfYBYGmXdxA=
github.com/googleapis/gax-go/v2 v2.12.5/go.mod h1:BUDKcWo+RaKq5SC9vVYL0wLADa3VcfswbOMMRmB9H3E=
github.com/googleapis/go-type-adapters v1.0.0/go.mod h1:zHW75FOG2aur7gAO2B+MLby+cLsWGBF62rFAi7WjWO4=
github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=
github.com/gorilla/context v1.1.1/go.mod h1:kBGZzfjB9CEq2AlWe17Uuf7NDRt0dE0s8S51q0aT7Yg=
github.com/gorilla/handlers v1.5.2 h1:cLTUSsNkgcwhgRqvCNmdbRWG0A3N4F+M2nWKdScwyEE=
github.com/gorilla/handlers v1.5.2/go.mod h1:dX+xVpaxdSw+q0Qek8SSsl3dfMk3jNddUkMzo0GtH0w=
github.com/gorilla/mux v1.6.2/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=
github.com/gorilla/mux v1.7.3/go.mod h1:1lud6UwP+6orDFRuTfBEV8e9/aOM/c4fVVCaMa2zaAs=
github.com/gorilla/mux v1.8.1 h1:TuBL49tXwgrFYWhqrNgrUNEY92u81SPhu7sTdzQEiWY=
github.com/gorilla/mux v1.8.1/go.mod h1:AKf9I4AEqPTmMytcMc0KkNouC66V3BtZ4qD5fmWSiMQ=
github.com/gorilla/websocket v0.0.0-20170926233335-4201258b820c/go.mod h1:E7qHFY5m1UJ88s3WnNqhKjPHQ0heANvMoAMk2YaljkQ=
github.com/gorilla/websocket v1.4.1/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
github.com/gorilla/websocket v1.5.3 h1:saDtZ6Pbx/0u+bgYQ3q96pZgCzfhKXGPqt7kZ72aNNg=
github.com/gorilla/websocket v1.5.3/go.mod h1:YR8l580nyteQvAITg2hZ9XVh4b55+EU/adAjf1fMHhE=
github.com/grpc-ecosystem/go-grpc-middleware v1.0.1-0.20190118093823-f849b5445de4/go.mod h1:FiyG127CGDf3tlThmgyCl78X/SZQqEOJBCDaAfeWzPs=
github.com/grpc-ecosystem/go-grpc-middleware v1.2.2/go.mod h1:EaizFBKfUKtMIF5iaDEhniwNedqGo9FuLFzppDr3uwI=
github.com/grpc-ecosystem/go-grpc-middleware v1.4.0 h1:UH//fgunKIs4JdUbpDl1VZCDaL56wXCB/5+wF6uHfaI=
github.com/grpc-ecosystem/go-grpc-middleware v1.4.0/go.mod h1:g5qyo/la0ALbONm6Vbp88Yd8NsDy6rZz+RcrMPxvld8=
github.com/grpc-ecosystem/go-grpc-prometheus v1.2.0/go.mod h1:8NvIoxWQoOIhqOTXgfV/d3M/q6VIi02HzZEHgUlZvzk=
github.com/grpc-ecosystem/grpc-gateway v1.9.5/go.mod h1:vNeuVxBJEsws4ogUvrchl83t/GYV9WGTSLVdBhOQFDY=
github.com/grpc-ecosystem/grpc-gateway v1.16.0 h1:gmcG1KaJ57LophUzW0Hy8NmPhnMZb4M0+kPpLofRdBo=
github.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=
github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c h1:6rhixN/i8ZofjG1Y75iExal34USq5p+wiN1tpie8IrU=
github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c/go.mod h1:NMPJylDgVpX0MLRlPy15sqSwOFv/U1GZ2m21JhFfek0=
github.com/gtank/merlin v0.1.1-0.20191105220539-8318aed1a79f/go.mod h1:T86dnYJhcGOh5BjZFCJWTDeTK7XW8uE+E21Cy/bIQ+s=
github.com/gtank/merlin v0.1.1 h1:eQ90iG7K9pOhtereWsmyRJ6RAwcP4tHTDBHXNg+u5is=
github.com/gtank/merlin v0.1.1/go.mod h1:T86dnYJhcGOh5BjZFCJWTDeTK7XW8uE+E21Cy/bIQ+s=
github.com/gtank/ristretto255 v0.1.2 h1:JEqUCPA1NvLq5DwYtuzigd7ss8fwbYay9fi4/5uMzcc=
github.com/gtank/ristretto255 v0.1.2/go.mod h1:Ph5OpO6c7xKUGROZfWVLiJf9icMDwUeIvY4OmlYW69o=
github.com/hashicorp/consul/api v1.3.0/go.mod h1:MmDNSzIMUjNpY/mQ398R4bk2FnqQLoPndWW5VkKPlCE=
github.com/hashicorp/consul/sdk v0.3.0/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=
github.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=
github.com/hashicorp/go-bexpr v0.1.10 h1:9kuI5PFotCboP3dkDYFr/wi0gg0QVbSNz5oFRpxn4uE=
github.com/hashicorp/go-bexpr v0.1.10/go.mod h1:oxlubA2vC/gFVfX1A6JGp7ls7uCDlfJn732ehYYg+g0=
github.com/hashicorp/go-cleanhttp v0.5.0/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
github.com/hashicorp/go-cleanhttp v0.5.2 h1:035FKYIWjmULyFRBKPs8TBQoi0x6d9G4xc9neXJWAZQ=
github.com/hashicorp/go-cleanhttp v0.5.2/go.mod h1:kO/YDlP8L1346E6Sodw+PrpBSV4/SoxCXGY6BqNFT48=

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:751-900
github.com/hashicorp/go-getter v1.7.5 h1:dT58k9hQ/vbxNMwoI5+xFYAJuv6152UNvdHokfI5wE4=
github.com/hashicorp/go-getter v1.7.5/go.mod h1:W7TalhMmbPmsSMdNjD0ZskARur/9GJ17cfHTRtXV744=
github.com/hashicorp/go-hclog v1.5.0 h1:bI2ocEMgcVlz55Oj1xZNBsVi900c7II+fWDyV9o+13c=
github.com/hashicorp/go-hclog v1.5.0/go.mod h1:W4Qnvbt70Wk/zYJryRzDRU/4r0kIg0PVHBcfoyhpF5M=
github.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=
github.com/hashicorp/go-immutable-radix v1.3.1 h1:DKHmCUm2hRBK510BaiZlwvpD40f8bJFeZnpfm2KLowc=
github.com/hashicorp/go-immutable-radix v1.3.1/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=
github.com/hashicorp/go-metrics v0.5.3 h1:M5uADWMOGCTUNU1YuC4hfknOeHNaX54LDm4oYSucoNE=
github.com/hashicorp/go-metrics v0.5.3/go.mod h1:KEjodfebIOuBYSAe/bHTm+HChmKSxAOXPBieMLYozDE=
github.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=
github.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=
github.com/hashicorp/go-plugin v1.5.2 h1:aWv8eimFqWlsEiMrYZdPYl+FdHaBJSN4AWwGWfT1G2Y=
github.com/hashicorp/go-plugin v1.5.2/go.mod h1:w1sAEES3g3PuV/RzUrgow20W2uErMly84hhD3um1WL4=
github.com/hashicorp/go-retryablehttp v0.5.3/go.mod h1:9B5zBasrRhHXnJnui7y6sL7es7NDiJgTc6Er0maI1Xs=
github.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=
github.com/hashicorp/go-safetemp v1.0.0 h1:2HR189eFNrjHQyENnQMMpCiBAsRxzbTMIgBhEyExpmo=
github.com/hashicorp/go-safetemp v1.0.0/go.mod h1:oaerMy3BhqiTbVye6QuFhFtIceqFoDHxNAB65b+Rj1I=
github.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=
github.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=
github.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-uuid v1.0.3 h1:2gKiV6YVmrJ1i2CKKa9obLvRieoRGviZFL26PcT/Co8=
github.com/hashicorp/go-uuid v1.0.3/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=
github.com/hashicorp/go-version v1.2.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
github.com/hashicorp/go-version v1.6.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
github.com/hashicorp/go-version v1.7.0 h1:5tqGy27NaOTB8yJKUZELlFAS/LTKJkrmONwQKeRZfjY=
github.com/hashicorp/go-version v1.7.0/go.mod h1:fltr4n8CU8Ke44wwGCBoEymUuxUHl09ZGVZPK5anwXA=
github.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=
github.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
github.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=
github.com/hashicorp/golang-lru v1.0.2 h1:dV3g9Z/unq5DpblPpw+Oqcv4dU/1omnb4Ok8iPY6p1c=
github.com/hashicorp/golang-lru v1.0.2/go.mod h1:iADmTwqILo4mZ8BN3D2Q6+9jd8WM5uGBxy+E8yxSoD4=
github.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=
github.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=
github.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=
github.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=
github.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=
github.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=
github.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=
github.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=
github.com/hashicorp/yamux v0.1.1 h1:yrQxtgseBDrq9Y652vSRDvsKCJKOUD+GzTS4Y0Y8pvE=
github.com/hashicorp/yamux v0.1.1/go.mod h1:CtWFDAQgb7dxtzFs4tWbplKIe2jSi3+5vKbgIO0SLnQ=
github.com/hdevalence/ed25519consensus v0.1.0 h1:jtBwzzcHuTmFrQN6xQZn6CQEO/V9f7HsjsjeEZ6auqU=
github.com/hdevalence/ed25519consensus v0.1.0/go.mod h1:w3BHWjwJbFU29IRHL1Iqkw3sus+7FctEyM4RqDxYNzo=
github.com/holiman/billy v0.0.0-20240216141850-2abb0c79d3c4 h1:X4egAf/gcS1zATw6wn4Ej8vjuVGxeHdan+bRb2ebyv4=
github.com/holiman/billy v0.0.0-20240216141850-2abb0c79d3c4/go.mod h1:5GuXa7vkL8u9FkFuWdVvfR5ix8hRB7DbOAaYULamFpc=
github.com/holiman/bloomfilter/v2 v2.0.3 h1:73e0e/V0tCydx14a0SCYS/EWCxgwLZ18CZcZKVu0fao=
github.com/holiman/bloomfilter/v2 v2.0.3/go.mod h1:zpoh+gs7qcpqrHr3dB55AMiJwo0iURXE7ZOP9L9hSkA=
github.com/holiman/uint256 v1.2.4 h1:jUc4Nk8fm9jZabQuqr2JzednajVmBpC+oiTiXZJEApU=
github.com/holiman/uint256 v1.2.4/go.mod h1:EOMSn4q6Nyt9P6efbI3bueV4e1b3dGlUCXeiRV4ng7E=
github.com/hpcloud/tail v1.0.0/go.mod h1:ab1qPbhIpdTxEkNHXyeSf5vhxWSCs/tWer42PpOxQnU=
github.com/huandu/go-assert v1.1.5 h1:fjemmA7sSfYHJD7CUqs9qTwwfdNAx7/j2/ZlHXzNB3c=
github.com/huandu/go-assert v1.1.5/go.mod h1:yOLvuqZwmcHIC5rIzrBhT7D3Q9c3GFnd0JrPVhn/06U=
github.com/huandu/skiplist v1.2.0 h1:gox56QD77HzSC0w+Ws3MH3iie755GBJU1OER3h5VsYw=
github.com/huandu/skiplist v1.2.0/go.mod h1:7v3iFjLcSAzO4fN5B8dvebvo/qsfumiLiDXMrPiHF9w=
github.com/hudl/fargo v1.3.0/go.mod h1:y3CKSmjA+wD2gak7sUSXTAoopbhU08POFhmITJgmKTg=
github.com/huin/goupnp v1.3.0 h1:UvLUlWDNpoUdYzb2TCn+MuTWtcjXKSza2n6CBdQ0xXc=
github.com/huin/goupnp v1.3.0/go.mod h1:gnGPsThkYa7bFi/KWmEysQRf48l2dvR5bxr2OFckNX8=
github.com/iancoleman/orderedmap v0.3.0 h1:5cbR2grmZR/DiVt+VJopEhtVs9YGInGIxAoMJn+Ichc=
github.com/iancoleman/orderedmap v0.3.0/go.mod h1:XuLcCUkdL5owUCQeF2Ue9uuw1EptkJDkXXS7VoV7XGE=
github.com/iancoleman/strcase v0.3.0 h1:nTXanmYxhfFAMjZL34Ov6gkzEsSJZ5DbhxWjvSASxEI=
github.com/iancoleman/strcase v0.3.0/go.mod h1:iwCmte+B7n89clKwxIoIXy/HfoL7AsD47ZCWhYzw7ho=
github.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=
github.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=
github.com/icza/dyno v0.0.0-20220812133438-f0b6f8a18845 h1:H+uM0Bv88eur3ZSsd2NGKg3YIiuXxwxtlN7HjE66UTU=
github.com/icza/dyno v0.0.0-20220812133438-f0b6f8a18845/go.mod h1:c1tRKs5Tx7E2+uHGSyyncziFjvGpgv4H2HrqXeUQ/Uk=
github.com/improbable-eng/grpc-web v0.15.0 h1:BN+7z6uNXZ1tQGcNAuaU1YjsLTApzkjt2tzCixLaUPQ=
github.com/improbable-eng/grpc-web v0.15.0/go.mod h1:1sy9HKV4Jt9aEs9JSnkWlRJPuPtwNr0l57L4f878wP8=
github.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=
github.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=
github.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=
github.com/influxdata/influxdb1-client v0.0.0-20191209144304-8bf82d3c094d/go.mod h1:qj24IKcXYK6Iy9ceXlo3Tc+vtHo9lIhSX5JddghvEPo=
github.com/ipfs/go-cid v0.4.1 h1:A/T3qGvxi4kpKWWcPC/PgbvDA2bjVLO7n4UeVwnbs/s=
github.com/ipfs/go-cid v0.4.1/go.mod h1:uQHwDeX4c6CtyrFwdqyhpNcxVewur1M7l7fNU7LKwZk=
github.com/jackpal/go-nat-pmp v1.0.2 h1:KzKSgb7qkJvOUTqYl9/Hg/me3pWgBmERKrTGD7BdWus=
github.com/jackpal/go-nat-pmp v1.0.2/go.mod h1:QPH045xvCAeXUZOxsnwmrtiCoxIr9eob+4orBN1SBKc=
github.com/jhump/protoreflect v1.15.3 h1:6SFRuqU45u9hIZPJAoZ8c28T3nK64BNdp9w6jFonzls=
github.com/jhump/protoreflect v1.15.3/go.mod h1:4ORHmSBmlCW8fh3xHmJMGyul1zNqZK4Elxc8qKP+p1k=
github.com/jmespath/go-jmespath v0.0.0-20180206201540-c2b33e8439af/go.mod h1:Nht3zPeWKUH0NzdCt2Blrr5ys8VGpn0CEB0cQHVjt7k=
github.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=
github.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=
github.com/jmespath/go-jmespath/internal/testify v1.5.1 h1:shLQSRRSCCPj3f2gpwzGwWFoC7ycTf1rcQZHOlsJ6N8=
github.com/jmespath/go-jmespath/internal/testify v1.5.1/go.mod h1:L3OGu8Wl2/fWfCI6z80xFu9LTZmf1ZRjMHUOPmWr69U=
github.com/jmhodges/levigo v1.0.0 h1:q5EC36kV79HWeTBWsod3mG11EgStG3qArTKcvlksN1U=
github.com/jmhodges/levigo v1.0.0/go.mod h1:Q6Qx+uH3RAqyK4rFQroq9RL7mdkABMcfhEI+nNuzMJQ=
github.com/jonboulle/clockwork v0.1.0/go.mod h1:Ii8DK3G1RaLaWxj9trq07+26W01tbo22gdxWY5EU2bo=
github.com/jpillora/backoff v1.0.0/go.mod h1:J/6gKK9jxlEcS3zixgDgUAsiuZ7yrSoa/FX5e0EB2j4=
github.com/json-iterator/go v1.1.6/go.mod h1:+SdeFBvtyEkXs7REEP0seUULqWtbJapLOCVDaaPEHmU=
github.com/json-iterator/go v1.1.7/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.8/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.9/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/json-iterator/go v1.1.10/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=
github.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=
github.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=
github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=
github.com/julienschmidt/httprouter v1.2.0/go.mod h1:SYymIcj16QtmaHHD7aYtjjsJG7VTCxuUUipMqKk8s4w=
github.com/julienschmidt/httprouter v1.3.0/go.mod h1:JR6WtHb+2LUe8TCKY3cZOxFyyO8IZAc4RVcycCCAKdM=
github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=
github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=
github.com/klauspost/compress v1.10.3/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=
github.com/klauspost/compress v1.11.7/go.mod h1:aoV0uJVorq1K+umq18yTdKaF57EivdYsUV+/s2qKfXs=
github.com/klauspost/compress v1.15.11/go.mod h1:QPwzmACJjUTFsnSHH934V6woptycfrDDJnH7hvFVbGM=
github.com/klauspost/compress v1.17.11 h1:In6xLpyWOi1+C7tXUUWv2ot1QvBjxevKAaI6IXrJmUc=
github.com/klauspost/compress v1.17.11/go.mod h1:pMDklpSncoRMuLFrf1W9Ss9KT+0rH90U12bZKk7uwG0=
github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=
github.com/klauspost/cpuid/v2 v2.2.7 h1:ZWSB3igEs+d0qvnxR/ZBzXVmxkgt8DdzP6m9pfuVLDM=
github.com/klauspost/cpuid/v2 v2.2.7/go.mod h1:Lcz8mBdAVJIBVzewtcLocK12l3Y+JytZYpaMropDUws=
github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=
github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
github.com/konsorten/go-windows-terminal-sequences v1.0.3/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
github.com/kr/logfmt v0.0.0-20140226030751-b84e30acd515/go.mod h1:+0opPa2QZZtGFBFZlji/RkVcI2GknAs/DXo4wKdlNEc=
github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
github.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=
github.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=
github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
github.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=
github.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=
github.com/kylelemons/godebug v1.1.0 h1:RPNrshWIDI6G2gRW9EHilWtl7Z6Sb1BR0xunSBf0SNc=
github.com/kylelemons/godebug v1.1.0/go.mod h1:9/0rRGxNHcop5bhtWyNeEfOS8JIWk580+fNqagV/RAw=
github.com/larry0x/simapp v0.0.0-20230527213943-e57d94ffca4c h1:HxMMvjvPKv+Xttad2Blw6c9XKzg/Pk5TIZL8T04lUN0=
github.com/larry0x/simapp v0.0.0-20230527213943-e57d94ffca4c/go.mod h1:dPMXlnAbUE79idlpKD0z01+vBVvTiKceZZHztq2B34c=
github.com/leanovate/gopter v0.2.9 h1:fQjYxZaynp97ozCzfOyOuAGOU4aU/z37zf/tOujFk7c=
github.com/leanovate/gopter v0.2.9/go.mod h1:U2L/78B+KVFIx2VmW6onHJQzXtFb+p5y3y2Sh+Jxxv8=
github.com/leodido/go-urn v1.2.0/go.mod h1:+8+nEpDfqqsY+g338gtMEUOtuK+4dEMhiQEgxpxOKII=
github.com/lestrrat-go/backoff/v2 v2.0.8 h1:oNb5E5isby2kiro9AgdHLv5N5tint1AnDVVf2E2un5A=
github.com/lestrrat-go/backoff/v2 v2.0.8/go.mod h1:rHP/q/r9aT27n24JQLa7JhSQZCKBBOiM/uP402WwN8Y=
github.com/lestrrat-go/blackmagic v1.0.2 h1:Cg2gVSc9h7sz9NOByczrbUvLopQmXrfFx//N+AkAr5k=
github.com/lestrrat-go/blackmagic v1.0.2/go.mod h1:UrEqBzIR2U6CnzVyUtfM6oZNMt/7O7Vohk2J0OGSAtU=
github.com/lestrrat-go/httpcc v1.0.1 h1:ydWCStUeJLkpYyjLDHihupbn2tYmZ7m22BGkcvZZrIE=
github.com/lestrrat-go/httpcc v1.0.1/go.mod h1:qiltp3Mt56+55GPVCbTdM9MlqhvzyuL6W/NMDA8vA5E=
github.com/lestrrat-go/httprc v1.0.5 h1:bsTfiH8xaKOJPrg1R+E3iE/AWZr/x0Phj9PBTG/OLUk=
github.com/lestrrat-go/httprc v1.0.5/go.mod h1:mwwz3JMTPBjHUkkDv/IGJ39aALInZLrhBp0X7KGUZlo=
github.com/lestrrat-go/iter v1.0.2 h1:gMXo1q4c2pHmC3dn8LzRhJfP1ceCbgSiT9lUydIzltI=
github.com/lestrrat-go/iter v1.0.2/go.mod h1:Momfcq3AnRlRjI5b5O8/G5/BvpzrhoFTZcn06fEOPt4=
github.com/lestrrat-go/jwx v1.2.29 h1:QT0utmUJ4/12rmsVQrJ3u55bycPkKqGYuGT4tyRhxSQ=
github.com/lestrrat-go/jwx v1.2.29/go.mod h1:hU8k2l6WF0ncx20uQdOmik/Gjg6E3/wIRtXSNFeZuB8=
github.com/lestrrat-go/jwx/v2 v2.0.21 h1:jAPKupy4uHgrHFEdjVjNkUgoBKtVDgrQPB/h55FHrR0=
github.com/lestrrat-go/jwx/v2 v2.0.21/go.mod h1:09mLW8zto6bWL9GbwnqAli+ArLf+5M33QLQPDggkUWM=
github.com/lestrrat-go/option v1.0.0/go.mod h1:5ZHFbivi4xwXxhxY9XHDe2FHo6/Z7WWmtT7T5nBBp3I=
github.com/lestrrat-go/option v1.0.1 h1:oAzP2fvZGQKWkvHa1/SAcFolBEca1oN+mQ7eooNBEYU=
github.com/lestrrat-go/option v1.0.1/go.mod h1:5ZHFbivi4xwXxhxY9XHDe2FHo6/Z7WWmtT7T5nBBp3I=
github.com/lib/pq v1.10.9 h1:YXG7RB+JIjhP29X+OtkiDnYaXQwpS4JEWq7dtCCRUEw=
github.com/lib/pq v1.10.9/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=
github.com/libp2p/go-buffer-pool v0.1.0 h1:oK4mSFcQz7cTQIfqbe4MIj9gLW+mnanjyFtc6cdF0Y8=
github.com/libp2p/go-buffer-pool v0.1.0/go.mod h1:N+vh8gMqimBzdKkSMVuydVDq+UV5QTWy5HSiZacSbPg=
github.com/libp2p/go-libp2p v0.31.0 h1:LFShhP8F6xthWiBBq3euxbKjZsoRajVEyBS9snfHxYg=
github.com/libp2p/go-libp2p v0.31.0/go.mod h1:W/FEK1c/t04PbRH3fA9i5oucu5YcgrG0JVoBWT1B7Eg=
github.com/lightstep/lightstep-tracer-common/golang/gogo v0.0.0-20190605223551-bc2310a04743/go.mod h1:qklhhLq1aX+mtWk9cPHPzaBjWImj5ULL6C7HFJtXQMM=
github.com/lightstep/lightstep-tracer-go v0.18.1/go.mod h1:jlF1pusYV4pidLvZ+XD0UBX0ZE6WURAspgAczcDHrL4=

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:901-1050
github.com/linxGnu/grocksdb v1.9.3 h1:s1cbPcOd0cU2SKXRG1nEqCOWYAELQjdqg3RVI2MH9ik=
github.com/linxGnu/grocksdb v1.9.3/go.mod h1:QYiYypR2d4v63Wj1adOOfzglnoII0gLj3PNh4fZkcFA=
github.com/lyft/protoc-gen-validate v0.0.13/go.mod h1:XbGvPuh87YZc5TdIa2/I4pLk0QoUACkjt2znoq26NVQ=
github.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=
github.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=
github.com/manifoldco/promptui v0.9.0 h1:3V4HzJk1TtXW1MTZMP7mdlwbBpIinw3HztaIlYthEiA=
github.com/manifoldco/promptui v0.9.0/go.mod h1:ka04sppxSGFAtxX0qhlYQjISsg9mR4GWtQEhdbn6Pgg=
github.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=
github.com/mattn/go-colorable v0.1.9/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
github.com/mattn/go-colorable v0.1.12/go.mod h1:u5H1YNBxpqRaxsYJYSkiCWKzEfiAb1Gb520KVy5xxl4=
github.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=
github.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=
github.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
github.com/mattn/go-isatty v0.0.4/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
github.com/mattn/go-isatty v0.0.14/go.mod h1:7GGIvUiUoEMVVmxf/4nioHXj79iQHKdU27kJ6hsGG94=
github.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=
github.com/mattn/go-isatty v0.0.19/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
github.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=
github.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=
github.com/mattn/go-runewidth v0.0.2/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=
github.com/mattn/go-runewidth v0.0.4/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=
github.com/mattn/go-runewidth v0.0.15 h1:UNAjwbU9l54TA3KzvqLGxwWjHmMgBUVhBiTjelZgg3U=
github.com/mattn/go-runewidth v0.0.15/go.mod h1:Jdepj2loyihRzMpdS35Xk/zdY8IAYHsh153qUoGf23w=
github.com/matttproud/golang_protobuf_extensions v1.0.1/go.mod h1:D8He9yQNgCq6Z5Ld7szi9bcBfOoFv/3dc6xSMkL2PC0=
github.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=
github.com/mimoo/StrobeGo v0.0.0-20181016162300-f8f6d4d2b643/go.mod h1:43+3pMjjKimDBf5Kr4ZFNGbLql1zKkbImw+fZbw3geM=
github.com/mimoo/StrobeGo v0.0.0-20220103164710-9a04d6ca976b h1:QrHweqAtyJ9EwCaGHBu1fghwxIPiopAHV06JlXrMHjk=
github.com/mimoo/StrobeGo v0.0.0-20220103164710-9a04d6ca976b/go.mod h1:xxLb2ip6sSUts3g1irPVHyk/DGslwQsNOo9I7smJfNU=
github.com/minio/highwayhash v1.0.3 h1:kbnuUMoHYyVl7szWjSxJnxw11k2U709jqFPPmIUyD6Q=
github.com/minio/highwayhash v1.0.3/go.mod h1:GGYsuwP/fPD6Y9hMiXuapVvlIUEhFhMTh0rxU3ik1LQ=
github.com/minio/sha256-simd v1.0.1 h1:6kaan5IFmwTNynnKKpDHe6FWHohJOHhCPchzK49dzMM=
github.com/minio/sha256-simd v1.0.1/go.mod h1:Pz6AKMiUdngCLpeTL/RJY1M9rUuPMYujV5xJjtbRSN8=
github.com/misko9/go-substrate-rpc-client/v4 v4.0.0-20240603204351-26b456ae3afe h1:0fcCSfvBgbagEsEMkZuxgA3Ex7IN9i1Hon0fwgMLpQw=
github.com/misko9/go-substrate-rpc-client/v4 v4.0.0-20240603204351-26b456ae3afe/go.mod h1:Q5BxOd9FxJqYp4vCiLGVdetecPcWTmUQIu0bRigYosU=
github.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=
github.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
github.com/mitchellh/go-homedir v1.1.0 h1:lukF9ziXFxDFPkA1vsr5zpc1XuPDn/wFntq5mG+4E0Y=
github.com/mitchellh/go-homedir v1.1.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=
github.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=
github.com/mitchellh/go-testing-interface v1.14.1 h1:jrgshOhYAUVNMAJiKbEu7EqAwgJJ2JqpQmpLJOu07cU=
github.com/mitchellh/go-testing-interface v1.14.1/go.mod h1:gfgS7OtZj6MA4U1UrDRp04twqAjfvlZyCfX3sDjEym8=
github.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=
github.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=
github.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
github.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=
github.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=
github.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=
github.com/mitchellh/pointerstructure v1.2.0 h1:O+i9nHnXS3l/9Wu7r4NrEdwA2VFTicjUEN1uBnDo34A=
github.com/mitchellh/pointerstructure v1.2.0/go.mod h1:BRAsLI5zgXmw97Lf6s25bs8ohIXc3tViBH44KcwB2g4=
github.com/mmcloughlin/addchain v0.4.0 h1:SobOdjm2xLj1KkXN5/n0xTIWyZA2+s99UCY1iPfkHRY=
github.com/mmcloughlin/addchain v0.4.0/go.mod h1:A86O+tHqZLMNO4w6ZZ4FlVQEadcoqkyU72HC5wJ4RlU=
github.com/mmcloughlin/profile v0.1.1/go.mod h1:IhHD7q1ooxgwTgjxQYkACGA77oFTDdFVejUS1/tS/qU=
github.com/moby/term v0.0.0-20221205130635-1aeaba878587 h1:HfkjXDfhgVaN5rmueG8cL8KKeFNecRCXFhaJ2qZ5SKA=
github.com/moby/term v0.0.0-20221205130635-1aeaba878587/go.mod h1:8FzsFHVUBGZdbDsJw/ot+X+d5HLUbvklYLJ9uGfcI3Y=
github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
github.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
github.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=
github.com/morikuni/aec v1.0.0 h1:nP9CBfwrvYnBRgY6qfDQkygYDmYwOilePFkwzv4dU8A=
github.com/morikuni/aec v1.0.0/go.mod h1:BbKIizmSmc5MMPqRYbxO4ZU0S0+P200+tUnFx7PXmsc=
github.com/mr-tron/base58 v1.2.0 h1:T/HDJBh4ZCPbU39/+c3rRvE0uKBQlU27+QI8LJ4t64o=
github.com/mr-tron/base58 v1.2.0/go.mod h1:BinMc/sQntlIE1frQmRFPUoPA1Zkr8VRgBdjWI2mNwc=
github.com/mtibben/percent v0.2.1 h1:5gssi8Nqo8QU/r2pynCm+hBQHpkB/uNK7BJCFogWdzs=
github.com/mtibben/percent v0.2.1/go.mod h1:KG9uO+SZkUp+VkRHsCdYQV3XSZrrSpR3O9ibNBTZrns=
github.com/multiformats/go-base32 v0.1.0 h1:pVx9xoSPqEIQG8o+UbAe7DNi51oej1NtK+aGkbLYxPE=
github.com/multiformats/go-base32 v0.1.0/go.mod h1:Kj3tFY6zNr+ABYMqeUNeGvkIC/UYgtWibDcT0rExnbI=
github.com/multiformats/go-base36 v0.2.0 h1:lFsAbNOGeKtuKozrtBsAkSVhv1p9D0/qedU9rQyccr0=
github.com/multiformats/go-base36 v0.2.0/go.mod h1:qvnKE++v+2MWCfePClUEjE78Z7P2a1UV0xHgWc0hkp4=
github.com/multiformats/go-multiaddr v0.11.0 h1:XqGyJ8ufbCE0HmTDwx2kPdsrQ36AGPZNZX6s6xfJH10=
github.com/multiformats/go-multiaddr v0.11.0/go.mod h1:gWUm0QLR4thQ6+ZF6SXUw8YjtwQSPapICM+NmCkxHSM=
github.com/multiformats/go-multibase v0.2.0 h1:isdYCVLvksgWlMW9OZRYJEa9pZETFivncJHmHnnd87g=
github.com/multiformats/go-multibase v0.2.0/go.mod h1:bFBZX4lKCA/2lyOFSAoKH5SS6oPyjtnzK/XTFDPkNuk=
github.com/multiformats/go-multicodec v0.9.0 h1:pb/dlPnzee/Sxv/j4PmkDRxCOi3hXTz3IbPKOXWJkmg=
github.com/multiformats/go-multicodec v0.9.0/go.mod h1:L3QTQvMIaVBkXOXXtVmYE+LI16i14xuaojr/H7Ai54k=
github.com/multiformats/go-multihash v0.2.3 h1:7Lyc8XfX/IY2jWb/gI7JP+o7JEq9hOa7BFvVU9RSh+U=
github.com/multiformats/go-multihash v0.2.3/go.mod h1:dXgKXCXjBzdscBLk9JkjINiEsCKRVch90MdaGiKsvSM=
github.com/multiformats/go-varint v0.0.7 h1:sWSGR+f/eu5ABZA2ZpYKBILXTTs9JWpdEM/nEGOHFS8=
github.com/multiformats/go-varint v0.0.7/go.mod h1:r8PUYw/fD/SjBCiKOoDlGF6QawOELpZAu9eioSos/OU=
github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 h1:C3w9PqII01/Oq1c1nUAm88MOHcQC9l5mIlSMApZMrHA=
github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822/go.mod h1:+n7T8mK8HuQTcFwEeznm/DIxMOiR9yIdICNftLE1DvQ=
github.com/mwitkow/go-conntrack v0.0.0-20161129095857-cc309e4a2223/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=
github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f h1:KUppIJq7/+SVif2QVs3tOP0zanoHgBEVAwHxUSIzRqU=
github.com/mwitkow/go-conntrack v0.0.0-20190716064945-2f068394615f/go.mod h1:qRWi+5nqEBWmkhHvq77mSJWrCKwh8bxhgT7d/eI7P4U=
github.com/mwitkow/grpc-proxy v0.0.0-20181017164139-0f1106ef9c76/go.mod h1:x5OoJHDHqxHS801UIuhqGl6QdSAEJvtausosHSdazIo=
github.com/nats-io/jwt v0.3.0/go.mod h1:fRYCDE99xlTsqUzISS1Bi75UBJ6ljOJQOAAu5VglpSg=
github.com/nats-io/jwt v0.3.2/go.mod h1:/euKqTS1ZD+zzjYrY7pseZrTtWQSjujC7xjPc8wL6eU=
github.com/nats-io/nats-server/v2 v2.1.2/go.mod h1:Afk+wRZqkMQs/p45uXdrVLuab3gwv3Z8C4HTBu8GD/k=
github.com/nats-io/nats.go v1.9.1/go.mod h1:ZjDU1L/7fJ09jvUSRVBR2e7+RnLiiIQyqyzEE/Zbp4w=
github.com/nats-io/nkeys v0.1.0/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=
github.com/nats-io/nkeys v0.1.3/go.mod h1:xpnFELMwJABBLVhffcfd1MZx6VsNRFpEugbxziKVo7w=
github.com/nats-io/nuid v1.0.1/go.mod h1:19wcPz3Ph3q0Jbyiqsd0kePYG7A95tJPxeL+1OSON2c=
github.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=
github.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=
github.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=
github.com/nxadm/tail v1.4.4/go.mod h1:kenIhsEOeOJmVchQTgglprH7qJGnHDVpk1VPCcaMI8A=
github.com/nxadm/tail v1.4.8 h1:nPr65rt6Y5JFSKQO7qToXr7pePgD6Gwiw05lkbyAQTE=
github.com/nxadm/tail v1.4.8/go.mod h1:+ncqLTQzXmGhMZNUePPaPqPvBxHAIsmXswZKocGu+AU=
github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a h1:dlRvE5fWabOchtH7znfiFCcOvmIYgOeAS5ifBXBlh9Q=
github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a/go.mod h1:hVoHR2EVESiICEMbg137etN/Lx+lSrHPTD39Z/uE+2s=
github.com/oklog/oklog v0.3.2/go.mod h1:FCV+B7mhrz4o+ueLpx+KqkyXRGMWOYEvfiXtdGtbWGs=
github.com/oklog/run v1.0.0/go.mod h1:dlhp/R75TPv97u0XWUtDeV/lRKWPKSdTuV0TZvrmrQA=
github.com/oklog/run v1.1.0 h1:GEenZ1cK0+q0+wsJew9qUg/DyD8k3JzYsZAi5gYi2mA=
github.com/oklog/run v1.1.0/go.mod h1:sVPdnTZT1zYwAJeCMu2Th4T21pA3FPOQRfWjQlk7DVU=
github.com/olekukonko/tablewriter v0.0.0-20170122224234-a0225b3f23b5/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=
github.com/olekukonko/tablewriter v0.0.5 h1:P2Ga83D34wi1o9J6Wh1mRuqd4mF/x/lgBS7N7AbDhec=
github.com/olekukonko/tablewriter v0.0.5/go.mod h1:hPp6KlRPjbx+hW8ykQs1w3UBbZlj6HuIJcUGPhkA7kY=
github.com/onsi/ginkgo v1.6.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
github.com/onsi/ginkgo v1.7.0/go.mod h1:lLunBs/Ym6LB5Z9jYTR76FiuTmxDTDusOGeTQH+WWjE=
github.com/onsi/ginkgo v1.12.1/go.mod h1:zj2OWP4+oCPe1qIXoGWkgMRwljMUYCdkwsT2108oapk=
github.com/onsi/ginkgo v1.16.4/go.mod h1:dX+/inL/fNMqNlz0e9LfyB9TswhZpCVdJM/Z6Vvnwo0=
github.com/onsi/ginkgo v1.16.5 h1:8xi0RTUf59SOSfEtZMvwTvXYMzG4gV23XVHOZiXNtnE=
github.com/onsi/ginkgo v1.16.5/go.mod h1:+E8gABHa3K6zRBolWtd+ROzc/U5bkGt0FwiG042wbpU=
github.com/onsi/ginkgo/v2 v2.1.3/go.mod h1:vw5CSIxN1JObi/U8gcbwft7ZxR2dgaR70JSE3/PpL4c=
github.com/onsi/gomega v1.4.3/go.mod h1:ex+gbHU/CVuBBDIJjb2X0qEXbFg53c61hWP/1CpauHY=
github.com/onsi/gomega v1.7.1/go.mod h1:XdKZgCCFLUoM/7CFJVPcG8C1xQ1AJ0vpAezJrB7JYyY=
github.com/onsi/gomega v1.10.1/go.mod h1:iN09h71vgCQne3DLsj+A5owkum+a2tYe+TOCB1ybHNo=
github.com/onsi/gomega v1.17.0/go.mod h1:HnhC7FXeEQY45zxNK3PPoIUhzk/80Xly9PcubAlGdZY=
github.com/onsi/gomega v1.19.0/go.mod h1:LY+I3pBVzYsTBU1AnDwOSxaYi9WoWiqgwooUqq9yPro=
github.com/onsi/gomega v1.27.10 h1:naR28SdDFlqrG6kScpT8VWpu1xWY5nJRCF3XaYyBjhI=
github.com/onsi/gomega v1.27.10/go.mod h1:RsS8tutOdbdgzbPtzzATp12yT7kM5I5aElG3evPbQ0M=
github.com/op/go-logging v0.0.0-20160315200505-970db520ece7/go.mod h1:HzydrMdWErDVzsI23lYNej1Htcns9BCg93Dk0bBINWk=
github.com/opencontainers/go-digest v1.0.0 h1:apOUWs51W5PlhuyGyz9FCeeBIOUDA/6nW8Oi/yOhh5U=
github.com/opencontainers/go-digest v1.0.0/go.mod h1:0JzlMkj0TRzQZfJkVvzbP0HBR3IKzErnv2BNG4W4MAM=
github.com/opencontainers/image-spec v1.1.0-rc5 h1:Ygwkfw9bpDvs+c9E34SdgGOj41dX/cbdlwvlWt0pnFI=
github.com/opencontainers/image-spec v1.1.0-rc5/go.mod h1:X4pATf0uXsnn3g5aiGIsVnJBR4mxhKzfwmvK/B2NTm8=
github.com/opencontainers/runc v1.1.12 h1:BOIssBaW1La0/qbNZHXOOa71dZfZEQOzW7dqQf3phss=
github.com/opencontainers/runc v1.1.12/go.mod h1:S+lQwSfncpBha7XTy/5lBwWgm5+y5Ma/O44Ekby9FK8=
github.com/opentracing-contrib/go-observer v0.0.0-20170622124052-a52f23424492/go.mod h1:Ngi6UdF0k5OKD5t5wlmGhe/EDKPoUM3BXZSSfIuJbis=
github.com/opentracing/basictracer-go v1.0.0/go.mod h1:QfBfYuafItcjQuMwinw9GhYKwFXS9KnPs5lxoYwgW74=
github.com/opentracing/opentracing-go v1.0.2/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=
github.com/opentracing/opentracing-go v1.1.0/go.mod h1:UkNAQd3GIcIGf0SeVgPpRdFStlNbqXla1AfSYxPUl2o=
github.com/openzipkin-contrib/zipkin-go-opentracing v0.4.5/go.mod h1:/wsWhb9smxSfWAKL3wpBW7V8scJMt8N8gnaMCS9E/cA=
github.com/openzipkin/zipkin-go v0.1.6/go.mod h1:QgAqvLzwWbR/WpD4A3cGpPtJrZXNIiJc5AZX7/PBEpw=
github.com/openzipkin/zipkin-go v0.2.1/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=
github.com/openzipkin/zipkin-go v0.2.2/go.mod h1:NaW6tEwdmWMaCDZzg8sh+IBNOxHMPnhQw8ySjnjRyN4=
github.com/ory/dockertest v3.3.5+incompatible h1:iLLK6SQwIhcbrG783Dghaaa3WPzGc+4Emza6EbVUUGA=
github.com/ory/dockertest v3.3.5+incompatible/go.mod h1:1vX4m9wsvi00u5bseYwXaSnhNrne+V0E6LAcBILJdPs=
github.com/osmosis-labs/fee-abstraction/v8 v8.0.2 h1:z8GfKxGqkEB66rO2iDNJ6/IA62ZZlyitOeOvzE11LiY=
github.com/osmosis-labs/fee-abstraction/v8 v8.0.2/go.mod h1:nNhh1fdDIXVK7xY/ji4qRNCkPEzgPrlJ1FD/ox3U+Oo=
github.com/oxyno-zeta/gomock-extra-matcher v1.2.0 h1:WPEclU0y0PMwUzdDcaKZvld4aXpa3fkzjiUMQdcBEHg=
github.com/oxyno-zeta/gomock-extra-matcher v1.2.0/go.mod h1:S0r7HmKeCGsHmvIVFMjKWwswb4+30nCNWbXRMBVPkaU=
github.com/pact-foundation/pact-go v1.0.4/go.mod h1:uExwJY4kCzNPcHRj+hCR/HBbOOIwwtUjcrb0b5/5kLM=
github.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=
github.com/pascaldekloe/goe v0.1.0 h1:cBOtyMzM9HTpWjXfbbunk26uA6nG3a8n06Wieeh0MwY=
github.com/pascaldekloe/goe v0.1.0/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=
github.com/pborman/uuid v1.2.0/go.mod h1:X/NO0urCmaxf9VXbdlT7C2Yzkj2IKimNn4k+gtPdI/k=
github.com/pelletier/go-toml v1.9.5 h1:4yBQzkHv+7BHq2PQUZF3Mx0IYxG7LsP222s7Agd3ve8=
github.com/pelletier/go-toml v1.9.5/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=
github.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1051-1200
github.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=
github.com/performancecopilot/speed v3.0.0+incompatible/go.mod h1:/CLtqpZ5gBg1M9iaPbIdPPGyKcA8hKdoy6hAWba7Yac=
github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 h1:Dx7Ovyv/SFnMFw3fD4oEoeorXc6saIiQ23LrGLth0Gw=
github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7/go.mod h1:pxMtw7cyUw6B2bRH0ZBANSPg+AoSud1I1iyJHI69jH4=
github.com/pierrec/lz4 v1.0.2-0.20190131084431-473cd7ce01a1/go.mod h1:3/3N9NVKO0jef7pBehbT1qWhCMrIgbYNnFAZCqQ5LRc=
github.com/pierrec/lz4 v2.0.5+incompatible/go.mod h1:pdkljMzZIN41W+lC3N2tnIh5sFi+IEE17M5jbnwPHcY=
github.com/pierrec/xxHash v0.1.5 h1:n/jBpwTHiER4xYvK3/CdPVnLDPchj8eTJFFLUb4QHBo=
github.com/pierrec/xxHash v0.1.5/go.mod h1:w2waW5Zoa/Wc4Yqe0wgrIYAGKqRMf7czn2HNKXmuL+I=
github.com/pingcap/errors v0.11.4 h1:lFuQV/oaUMGcD2tqt+01ROSmJs75VG1ToEOkZIZ4nE4=
github.com/pingcap/errors v0.11.4/go.mod h1:Oi8TUi2kEtXXLMJk9l1cGmz20kV3TaQ0usTwv5KuLY8=
github.com/pkg/diff v0.0.0-20210226163009-20ebb0f2a09e/go.mod h1:pJLUxLENpZxwdsKMEsNbx1VGcRFpLqf3715MtcvvzbA=
github.com/pkg/errors v0.8.0/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/errors v0.9.1 h1:FEBLx1zS214owpjy7qsBeixbURkuhQAwrK5UwLGTwt4=
github.com/pkg/errors v0.9.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
github.com/pkg/profile v1.2.1/go.mod h1:hJw3o1OdXxsrSjjVksARp5W95eeEaEfptyVZyv6JUPA=
github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=
github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
github.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=
github.com/prometheus/client_golang v0.9.1/go.mod h1:7SWBe2y4D6OKWSNQJUaRYU/AaXPKyh/dDVn+NZz0KFw=
github.com/prometheus/client_golang v0.9.3-0.20190127221311-3c4408c8b829/go.mod h1:p2iRAGwDERtqlqzRXnrOVns+ignqQo//hLXqYxZYVNs=
github.com/prometheus/client_golang v1.0.0/go.mod h1:db9x61etRT2tGnBNRi70OPL5FsnadC4Ky3P0J6CfImo=
github.com/prometheus/client_golang v1.3.0/go.mod h1:hJaj2vgQTGQmVCsAACORcieXFeDPbaTKGT+JTgUa3og=
github.com/prometheus/client_golang v1.4.0/go.mod h1:e9GMxYsXl05ICDXkRhurwBS4Q3OK1iX/F2sw+iXX5zU=
github.com/prometheus/client_golang v1.7.1/go.mod h1:PY5Wy2awLA44sXw4AOSfFBetzPP4j5+D6mVACh+pe2M=
github.com/prometheus/client_golang v1.20.5 h1:cxppBPuYhUnsO6yo/aoRol4L7q7UFfdm+bR9r+8l63Y=
github.com/prometheus/client_golang v1.20.5/go.mod h1:PIEt8X02hGcP8JWbeHyeZ53Y/jReSnHgO035n//V5WE=
github.com/prometheus/client_model v0.0.0-20180712105110-5c3871d89910/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=
github.com/prometheus/client_model v0.0.0-20190115171406-56726106282f/go.mod h1:MbSGuTsp3dbXC40dX6PRTWyKYBIrTGTE9sqQNg2J8bo=
github.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.1.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.2.0/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
github.com/prometheus/client_model v0.6.1 h1:ZKSh/rekM+n3CeS952MLRAdFwIKqeY8b62p8ais2e9E=
github.com/prometheus/client_model v0.6.1/go.mod h1:OrxVMOVHjw3lKMa8+x6HeMGkHMQyHDk9E3jmP2AmGiY=
github.com/prometheus/common v0.2.0/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
github.com/prometheus/common v0.4.1/go.mod h1:TNfzLD0ON7rHzMJeJkieUDPYmFC7Snx/y86RQel1bk4=
github.com/prometheus/common v0.7.0/go.mod h1:DjGbpBbp5NYNiECxcL/VnbXCCaQpKd3tt26CguLLsqA=
github.com/prometheus/common v0.9.1/go.mod h1:yhUN8i9wzaXS3w1O07YhxHEBxD+W35wd8bs7vj7HSQ4=
github.com/prometheus/common v0.10.0/go.mod h1:Tlit/dnDKsSWFlCLTWaA1cyBgKHSMdTB80sz/V91rCo=
github.com/prometheus/common v0.15.0/go.mod h1:U+gB1OBLb1lF3O42bTCL+FK18tX9Oar16Clt/msog/s=
github.com/prometheus/common v0.62.0 h1:xasJaQlnWAeyHdUBeGjXmutelfJHWMRr+Fg4QszZ2Io=
github.com/prometheus/common v0.62.0/go.mod h1:vyBcEuLSvWos9B1+CyL7JZ2up+uFzXhkqml0W5zIY1I=
github.com/prometheus/procfs v0.0.0-20181005140218-185b4288413d/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=
github.com/prometheus/procfs v0.0.0-20190117184657-bf6a532e95b1/go.mod h1:c3At6R/oaqEKCNdg8wHV1ftS6bRYblBhIjjI8uT2IGk=
github.com/prometheus/procfs v0.0.2/go.mod h1:TjEm7ze935MbeOT/UhFTIMYKhuLP4wbCsTZCD3I8kEA=
github.com/prometheus/procfs v0.0.8/go.mod h1:7Qr8sr6344vo1JqZ6HhLceV9o3AJ1Ff+GxbHq6oeK9A=
github.com/prometheus/procfs v0.1.3/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=
github.com/prometheus/procfs v0.3.0/go.mod h1:lV6e/gmhEcM9IjHGsFOCxxuZ+z1YqCvr4OA4YeYWdaU=
github.com/prometheus/procfs v0.15.1 h1:YagwOFzUgYfKKHX6Dr+sHT7km/hxC76UB0learggepc=
github.com/prometheus/procfs v0.15.1/go.mod h1:fB45yRUv8NstnjriLhBQLuOUt+WW4BsoGhij/e3PBqk=
github.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=
github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 h1:N/ElC8H3+5XpJzTSTfLsJV/mx9Q9g7kxmchpfZyxgzM=
github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475/go.mod h1:bCqnVzQkZxMG4s8nGwiZ5l3QUCyqpo9Y+/ZMZ9VjZe4=
github.com/regen-network/protobuf v1.3.3-alpha.regen.1 h1:OHEc+q5iIAXpqiqFKeLpu5NwTIkVXUs48vFMwzqpqY4=
github.com/regen-network/protobuf v1.3.3-alpha.regen.1/go.mod h1:2DjTFR1HhMQhiWC5sZ4OhQ3+NtdbZ6oBDKQwq5Ou+FI=
github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=
github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=
github.com/rivo/uniseg v0.4.3 h1:utMvzDsuh3suAEnhH0RdHmoPbU648o6CvXxTx4SBMOw=
github.com/rivo/uniseg v0.4.3/go.mod h1:FN3SvrM+Zdj16jyLfmOkMNblXMcoc8DfTHruCPUcx88=
github.com/rogpeppe/fastuuid v0.0.0-20150106093220-6724a57986af/go.mod h1:XWv6SoW27p1b0cqNHllgS5HIMJraePCO15w5zCzIWYg=
github.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=
github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
github.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=
github.com/rogpeppe/go-internal v1.12.0 h1:exVL4IDcn6na9z1rAb56Vxr+CgyK3nn3O+epU5NdKM8=
github.com/rogpeppe/go-internal v1.12.0/go.mod h1:E+RYuTGaKKdloAfM02xzb0FW3Paa99yedzYV+kq4uf4=
github.com/rs/cors v1.7.0/go.mod h1:gFx+x8UowdsKA9AchylcLynDq+nNFfI8FkUZdN/jGCU=
github.com/rs/cors v1.11.1 h1:eU3gRzXLRK57F5rKMGMZURNdIG4EoAmX8k94r9wXWHA=
github.com/rs/cors v1.11.1/go.mod h1:XyqrcTp5zjWr1wsJ8PIRZssZ8b/WMcMf71DJnit4EMU=
github.com/rs/xid v1.5.0/go.mod h1:trrq9SKmegXys3aeAKXMUTdJsYXVwGY3RLcfgqegfbg=
github.com/rs/zerolog v1.33.0 h1:1cU2KZkvPxNyfgEmhHAz/1A9Bz+llsdYzklWFzgp0r8=
github.com/rs/zerolog v1.33.0/go.mod h1:/7mN4D5sKwJLZQ2b/znpjC3/GQWY/xaDXUM0kKWRHss=
github.com/russross/blackfriday v1.6.0 h1:KqfZb0pUVN2lYqZUYRddxF4OR8ZMURnJIG5Y3VRLtww=
github.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
github.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=
github.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=
github.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=
github.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=
github.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=
github.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=
github.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=
github.com/samuel/go-zookeeper v0.0.0-20190923202752-2cc03de413da/go.mod h1:gi+0XIa01GRL2eRQVjQkKGqKF3SF9vZR/HnPullcV2E=
github.com/sasha-s/go-deadlock v0.3.5 h1:tNCOEEDG6tBqrNDOX35j/7hL5FcFViG6awUGROb2NsU=
github.com/sasha-s/go-deadlock v0.3.5/go.mod h1:bugP6EGbdGYObIlx7pUZtWqlvo8k9H6vCBBsiChJQ5U=
github.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=
github.com/segmentio/asm v1.2.0 h1:9BQrFxC+YOHJlTlHGkTrFWf59nbL3XnCoFLTwDCI7ys=
github.com/segmentio/asm v1.2.0/go.mod h1:BqMnlJP91P8d+4ibuonYZw9mfnzI9HfxselHZr5aAcs=
github.com/shamaton/msgpack/v2 v2.2.0 h1:IP1m01pHwCrMa6ZccP9B3bqxEMKMSmMVAVKk54g3L/Y=
github.com/shamaton/msgpack/v2 v2.2.0/go.mod h1:6khjYnkx73f7VQU7wjcFS9DFjs+59naVWJv1TB7qdOI=
github.com/shirou/gopsutil v3.21.4-0.20210419000835-c7a38de76ee5+incompatible h1:Bn1aCHHRnjv4Bl16T8rcaFjYSrGrIZvpiGO6P3Q4GpU=
github.com/shirou/gopsutil v3.21.4-0.20210419000835-c7a38de76ee5+incompatible/go.mod h1:5b4v6he4MtMOwMlS0TUMTu2PcXUg8+E1lC7eC3UO/RA=
github.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=
github.com/sirupsen/logrus v1.2.0/go.mod h1:LxeOpSwHxABJmUn/MG1IvRgCAasNZTLOkJPxbbu5VWo=
github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=
github.com/sirupsen/logrus v1.6.0/go.mod h1:7uNnSEd1DgxDLC74fIahvMZmmYsHGZGEOFrfsX/uA88=
github.com/sirupsen/logrus v1.7.0/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=
github.com/sirupsen/logrus v1.9.3 h1:dueUQJ1C2q9oE3F7wvmSGAaVtTmUizReu6fjN8uqzbQ=
github.com/sirupsen/logrus v1.9.3/go.mod h1:naHLuLoDiP4jHNo9R0sCBMtWGeIprob74mVsIT4qYEQ=
github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=
github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=
github.com/soheilhy/cmux v0.1.4/go.mod h1:IM3LyeVVIOuxMH7sFAkER9+bJ4dT7Ms6E4xg4kGIyLM=
github.com/sony/gobreaker v0.4.1/go.mod h1:ZKptC7FHNvhBz7dN2LGjPVBz2sZJmc0/PkyDJOjmxWY=
github.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=
github.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=
github.com/spaolacci/murmur3 v0.0.0-20180118202830-f09979ecbc72/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
github.com/spaolacci/murmur3 v1.1.0 h1:7c1g84S4BPRrfL5Xrdp6fOJ206sU9y293DDHaoy0bLI=
github.com/spaolacci/murmur3 v1.1.0/go.mod h1:JwIasOWyU6f++ZhiEuf87xNszmSA2myDM2Kzu9HwQUA=
github.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=
github.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=
github.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=
github.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=
github.com/spf13/cobra v0.0.3/go.mod h1:1l0Ry5zgKvJasoi3XT1TypsSe7PqH0Sj9dhYf7v3XqQ=
github.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=
github.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=
github.com/spf13/pflag v1.0.1/go.mod h1:DYY7MBk1bdzusC3SYhjObp+wFpr4gzcvqqNjLnInEg4=
github.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=
github.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=
github.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=
github.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=
github.com/status-im/keycard-go v0.2.0 h1:QDLFswOQu1r5jsycloeQh3bVU8n/NatHHaZobtDnDzA=
github.com/status-im/keycard-go v0.2.0/go.mod h1:wlp8ZLbsmrF6g6WjugPAx+IzoLrkdf9+mHxBEeo3Hbg=
github.com/strangelove-ventures/interchaintest/v8 v8.7.0 h1:MAs3mCLQUHJELUa4nm+ZKkKMKQUV34icHUdlt2QVpfc=
github.com/strangelove-ventures/interchaintest/v8 v8.7.0/go.mod h1:d20jXQmPAzE4U9zop+nkMPk40l21CJzi/ZqwrgAixwU=
github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2 h1:U9TfBdvVL1Uk4Am4rhCkMpzwvI0aP05xt2p5gVHIt5I=
github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2/go.mod h1:L8XfncoH1M6fOrzqfRVQZePqo54ZlTDdatUpEr0Iz/E=
github.com/streadway/amqp v0.0.0-20190404075320-75d898a42a94/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=
github.com/streadway/amqp v0.0.0-20190827072141-edfb9018d271/go.mod h1:AZpEONHx3DKn8O/DFsRAY58/XVQiIPMTMB1SddzLXVw=
github.com/streadway/handy v0.0.0-20190108123426-d5acb3125c2a/go.mod h1:qNTQ5P5JnDBl6z3cMAg/SywNDC5ABu5ApDIw6lUbRmI=
github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=
github.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=
github.com/stretchr/objx v0.5.2 h1:xuMeJ0Sdp5ZMRXx/aWO6RZxdr3beISkG5/G/aIRr3pY=
github.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=
github.com/stretchr/testify v1.1.5-0.20170601210322-f6abca593680/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=
github.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
github.com/stretchr/testify v1.7.2/go.mod h1:R6va5+xMeoiuVRoj+gSkQ7d3FALtqAAGI1FQKckRals=
github.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=
github.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=
github.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=
github.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=
github.com/stretchr/testify v1.10.0 h1:Xv5erBjTwe/5IxqUQTdXv5kgmIvbHo3QQyRwhJsOfJA=
github.com/stretchr/testify v1.10.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1201-1350
github.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=
github.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=
github.com/supranational/blst v0.3.13 h1:AYeSxdOMacwu7FBmpfloBz5pbFXDmJL33RuwnKtmTjk=
github.com/supranational/blst v0.3.13/go.mod h1:jZJtfjgudtNl4en1tzwPIV3KjUnQUvG3/j+w+fVonLw=
github.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d h1:vfofYNRScrDdvS342BElfbETmL1Aiz3i2t0zfRj16Hs=
github.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d/go.mod h1:RRCYJbIwD5jmqPI9XoAFR0OcDxqUctll6zUj/+B4S48=
github.com/tendermint/go-amino v0.16.0 h1:GyhmgQKvqF82e2oZeuMSp9JTN0N09emoSZlb2lyGa2E=
github.com/tendermint/go-amino v0.16.0/go.mod h1:TQU0M1i/ImAo+tYpZi73AU3V/dKeCoMC9Sphe2ZwGME=
github.com/tidwall/btree v1.7.0 h1:L1fkJH/AuEh5zBnnBbmTwQ5Lt+bRJ5A8EWecslvo9iI=
github.com/tidwall/btree v1.7.0/go.mod h1:twD9XRA5jj9VUQGELzDO4HPQTNJsoWWfYEL+EUQ2cKY=
github.com/tidwall/gjson v1.17.1 h1:wlYEnwqAHgzmhNUFfw7Xalt2JzQvsMx2Se4PcoFCT/U=
github.com/tidwall/gjson v1.17.1/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=
github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=
github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=
github.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=
github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=
github.com/tklauser/go-sysconf v0.3.12 h1:0QaGUFOdQaIVdPgfITYzaTegZvdCjmYO52cSFAEVmqU=
github.com/tklauser/go-sysconf v0.3.12/go.mod h1:Ho14jnntGE1fpdOqQEEaiKRpvIavV0hSfmBq8nJbHYI=
github.com/tklauser/numcpus v0.6.1 h1:ng9scYS7az0Bk4OZLvrNXNSAO2Pxr1XXRAPyjhIx+Fk=
github.com/tklauser/numcpus v0.6.1/go.mod h1:1XfjsgE2zo8GVw7POkMbHENHzVg3GzmoZ9fESEdAacY=
github.com/tmc/grpc-websocket-proxy v0.0.0-20170815181823-89b8d40f7ca8/go.mod h1:ncp9v5uamzpCO7NfCPTXjqaC+bZgJeR0sMTm6dMHP7U=
github.com/tv42/httpunix v0.0.0-20150427012821-b75d8614f926/go.mod h1:9ESjWnEqriFuLhtthL60Sar/7RFoluCcXsuvEwTV5KM=
github.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=
github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=
github.com/tyler-smith/go-bip32 v1.0.0 h1:sDR9juArbUgX+bO/iblgZnMPeWY1KZMUC2AFUJdv5KE=
github.com/tyler-smith/go-bip32 v1.0.0/go.mod h1:onot+eHknzV4BVPwrzqY5OoVpyCvnwD7lMawL5aQupE=
github.com/tyler-smith/go-bip39 v1.1.0 h1:5eUemwrMargf3BSLRRCalXT93Ns6pQJIjYQN2nyfOP8=
github.com/tyler-smith/go-bip39 v1.1.0/go.mod h1:gUYDtqQw1JS3ZJ8UWVcGTGqqr6YIN3CWg+kkNaLt55U=
github.com/ugorji/go v1.1.7/go.mod h1:kZn38zHttfInRq0xu/PH0az30d+z6vm202qpg1oXVMw=
github.com/ugorji/go/codec v1.1.7/go.mod h1:Ax+UKWsSmolVDwsd+7N3ZtXu+yMGCf907BLYF3GoBXY=
github.com/ulikunitz/xz v0.5.10/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=
github.com/ulikunitz/xz v0.5.11 h1:kpFauv27b6ynzBNT/Xy+1k+fK4WswhN/6PN5WhFAGw8=
github.com/ulikunitz/xz v0.5.11/go.mod h1:nbz6k7qbPmH4IRqmfOplQw/tblSgqTqBwxkY0oWt/14=
github.com/urfave/cli v1.20.0/go.mod h1:70zkFmudgCuE/ngEzBv17Jvp/497gISqfk5gWijbERA=
github.com/urfave/cli v1.22.1 h1:+mkCCcOFKPnCmVYVcURKps1Xe+3zP90gSYGNfRkjoIY=
github.com/urfave/cli v1.22.1/go.mod h1:Gos4lmkARVdJ6EkW0WaNv/tZAAMe9V7XWyB60NtXRu0=
github.com/urfave/cli/v2 v2.25.7 h1:VAzn5oq403l5pHjc4OhD54+XGO9cdKVL/7lDjF+iKUs=
github.com/urfave/cli/v2 v2.25.7/go.mod h1:8qnjx1vcq5s2/wpsqoZFndg2CE5tNFyrTvS6SinrnYQ=
github.com/x448/float16 v0.8.4 h1:qLwI1I70+NjRFUR3zs1JPUCgaCXSh3SW62uAKT1mSBM=
github.com/x448/float16 v0.8.4/go.mod h1:14CWIYCyZA/cWjXOioeEpHeN/83MdbZDRQHoFcYsOfg=
github.com/xiang90/probing v0.0.0-20190116061207-43a291ad63a2/go.mod h1:UETIi67q53MR2AWcXfiuqkDkRtnGDLqkBTpCHuJHxtU=
github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673 h1:bAn7/zixMGCfxrRTfdpNzjtPYqr8smhKouy9mxVdGPU=
github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673/go.mod h1:N3UwUGtsrSj3ccvlPHLoLsHnpR27oXr4ZE984MbSER8=
github.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=
github.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=
github.com/zondax/hid v0.9.2 h1:WCJFnEDMiqGF64nlZz28E9qLVZ0KSJ7xpc5DLEyma2U=
github.com/zondax/hid v0.9.2/go.mod h1:l5wttcP0jwtdLjqjMMWFVEE7d1zO0jvSPA9OPZxWpEM=
github.com/zondax/ledger-go v0.14.3 h1:wEpJt2CEcBJ428md/5MgSLsXLBos98sBOyxNmCjfUCw=
github.com/zondax/ledger-go v0.14.3/go.mod h1:IKKaoxupuB43g4NxeQmbLXv7T9AlQyie1UpHb342ycI=
go.etcd.io/bbolt v1.3.3/go.mod h1:IbVyRI1SCnLcuJnV2u8VeU0CEYM7e686BmAb1XKL+uU=
go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5 h1:qxen9oVGzDdIRP6ejyAJc760RwW4SnVDiTYTzwnXuxo=
go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5/go.mod h1:eW0HG9/oHQhvRCvb1/pIXW4cOvtDqeQK+XSi3TnwaXY=
go.etcd.io/etcd v0.0.0-20191023171146-3cf2f69b5738/go.mod h1:dnLIgRNXwCJa5e+c6mIZCrds/GIG4ncV9HhK5PX7jPg=
go.opencensus.io v0.20.1/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=
go.opencensus.io v0.20.2/go.mod h1:6WKK9ahsWS3RSO+PY9ZHZUfv2irvY6gN279GOPZjmmk=
go.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=
go.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=
go.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=
go.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=
go.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=
go.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=
go.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 h1:4Pp6oUg3+e/6M4C0A/3kJ2VYa++dsWVTtGgLVj5xtHg=
go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0/go.mod h1:Mjt1i1INqiaoZOMGR1RIUJN+i3ChKoFRqzrRQhlkbs0=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 h1:jq9TW8u3so/bN+JPT166wjOI6/vQPF6Xe7nMNIltagk=
go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0/go.mod h1:p8pYQP+m5XfbZm9fxtSKAbM6oIllS7s2AfxrChvc7iw=
go.opentelemetry.io/otel v1.32.0 h1:WnBN+Xjcteh0zdk01SVqV55d/m62NJLJdIyb4y/WO5U=
go.opentelemetry.io/otel v1.32.0/go.mod h1:00DCVSB0RQcnzlwyTfqtxSm+DRr9hpYrHjNGiBHVQIg=
go.opentelemetry.io/otel/metric v1.32.0 h1:xV2umtmNcThh2/a/aCP+h64Xx5wsj8qqnkYZktzNa0M=
go.opentelemetry.io/otel/metric v1.32.0/go.mod h1:jH7CIbbK6SH2V2wE16W05BHCtIDzauciCRLoc/SyMv8=
go.opentelemetry.io/otel/sdk v1.32.0 h1:RNxepc9vK59A8XsgZQouW8ue8Gkb4jpWtJm9ge5lEG4=
go.opentelemetry.io/otel/sdk v1.32.0/go.mod h1:LqgegDBjKMmb2GC6/PrTnteJG39I8/vJCAP9LlJXEjU=
go.opentelemetry.io/otel/sdk/metric v1.32.0 h1:rZvFnvmvawYb0alrYkjraqJq0Z4ZUJAiyYCU9snn1CU=
go.opentelemetry.io/otel/sdk/metric v1.32.0/go.mod h1:PWeZlq0zt9YkYAp3gjKZ0eicRYvOh1Gd+X99x6GHpCQ=
go.opentelemetry.io/otel/trace v1.32.0 h1:WIC9mYrXf8TmY/EXuULKc8hR17vE+Hjv2cssQDe03fM=
go.opentelemetry.io/otel/trace v1.32.0/go.mod h1:+i4rkvCraA+tG6AzwloGaCtkx53Fa+L+V8e9a7YvhT8=
go.opentelemetry.io/proto/otlp v0.7.0/go.mod h1:PqfVotwruBrMGOCsRd/89rSnXhoiJIqeYNgFYFoEGnI=
go.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
go.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=
go.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=
go.uber.org/goleak v1.1.10/go.mod h1:8a7PlsEVH3e/a/GLqe5IIrQx6GzcnRmZEufDUTk4A7A=
go.uber.org/goleak v1.3.0 h1:2K3zAYmnTNqV73imy9J1T3WC+gmCePx2hEGkimedGto=
go.uber.org/goleak v1.3.0/go.mod h1:CoHD4mav9JJNrW/WLlf7HGZPjdw8EucARQHekz1X6bE=
go.uber.org/mock v0.4.0 h1:VcM4ZOtdbR4f6VXfiOpwpVJDL6lCReaZ6mw31wqh7KU=
go.uber.org/mock v0.4.0/go.mod h1:a6FSlNadKUHUa9IP5Vyt1zh4fC7uAwxMutEAscFbkZc=
go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=
go.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=
go.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=
go.uber.org/multierr v1.11.0 h1:blXXJkSxSSfBVBlC76pxqeO+LN3aDfLQo+309xJstO0=
go.uber.org/multierr v1.11.0/go.mod h1:20+QtiLqy0Nd6FdQB9TLXag12DsQkrbs3htMFfDN80Y=
go.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=
go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=
go.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=
go.uber.org/zap v1.18.1/go.mod h1:xg/QME4nWcxGxrpdeYfq7UvYrLh66cuVKdrbD1XF/NI=
go.uber.org/zap v1.27.0 h1:aJMhYGrd5QSmlpLMr2MftRKl7t8J8PTZPA732ud/XR8=
go.uber.org/zap v1.27.0/go.mod h1:GB2qFLM7cTU87MWRP2mPIjqfIDnGu+VIO4V/SdhGo2E=
golang.org/x/arch v0.0.0-20210923205945-b76863e36670 h1:18EFjUmQOcUvxNYSkA6jO9VAiXCnxFY6NyDX0bHDmkU=
golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=
golang.org/x/crypto v0.0.0-20170613210332-850760c427c5/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
golang.org/x/crypto v0.0.0-20180904163835-0709b304e793/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
golang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=
golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
golang.org/x/crypto v0.0.0-20191206172530-e9b2fee46413/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
golang.org/x/crypto v0.0.0-20200728195943-123391ffb6de/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
golang.org/x/crypto v0.19.0/go.mod h1:Iy9bg/ha4yyC70EfRS8jz+B6ybOBKMaSxLj6P6oBDfU=
golang.org/x/crypto v0.21.0/go.mod h1:0BP7YvVV9gBbVKyeTG0Gyn+gZm94bibOW5BjDEYAOMs=
golang.org/x/crypto v0.32.0 h1:euUpcYgM8WcP71gNpTqQCn6rC2t6ULUPiOzfWaXVVfc=
golang.org/x/crypto v0.32.0/go.mod h1:ZnnJkOaASj8g0AjIduWNlq2NRxL0PlBrbKVyZ6V/Ugc=
golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
golang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
golang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=
golang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=
golang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=
golang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=
golang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=
golang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=
golang.org/x/exp v0.0.0-20200331195152-e8c3332aa8e5/go.mod h1:4M0jN8W1tt0AVLNr8HDosyJCDCDuyL9N9+3m7wDWgKw=
golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 h1:2dVuKD2vS7b0QIHQbpyTISPd0LeHDbnYEryqj5Q1ug8=
golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56/go.mod h1:M4RDyNAINzryxdtnbRXRL/OHtkFuWGRjvuhBJpk2IlY=
golang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=
golang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=
golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
golang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
golang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=
golang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
golang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=
golang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1351-1500
golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=
golang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=
golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=
golang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=
golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
golang.org/x/mod v0.8.0/go.mod h1:iBbtSCu2XBx23ZKBPSOrRkjjQPZFPuis4dIYUhu/chs=
golang.org/x/mod v0.19.0 h1:fEdghXQSo20giMthA7cd28ZC+jts4amQ3YMXiP5oMQ8=
golang.org/x/mod v0.19.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=
golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20180906233101-161cd47e91fd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181114220301-adae6a3d119a/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20181220203305-927f97764cc3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190125091013-d26f9f9a57f3/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
golang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=
golang.org/x/net v0.0.0-20190613194153-d28f0bde5980/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
golang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200421231249-e086a090c8fd/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200520004742-59133d7f0dd7/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=
golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
golang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
golang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=
golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=
golang.org/x/net v0.0.0-20210428140749-89ef3d95e781/go.mod h1:OJAsFXCWl8Ukc7SiCT/9KSuxbyM7479/AVlXFRxuMCk=
golang.org/x/net v0.0.0-20210503060351-7fd8e65b6420/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
golang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
golang.org/x/net v0.0.0-20220127200216-cd36cc0744dd/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220225172249-27dd8689420f/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220325170049-de3da57026de/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220412020605-290c469a71a5/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220425223048-2871e0cb64e4/go.mod h1:CfG3xpIq0wQ8r1q4Su4UZFWDARRcnwPjda9FqA0JpMk=
golang.org/x/net v0.0.0-20220607020251-c690dde0001d/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220617184016-355a448f1bc9/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220624214902-1bab6f366d9e/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
golang.org/x/net v0.0.0-20220909164309-bea034e7d591/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=
golang.org/x/net v0.0.0-20221014081412-f15817d10f9b/go.mod h1:YDH+HFinaLZZlnHAfSS6ZXJJ9M9t4Dl22yv3iI2vPwk=
golang.org/x/net v0.1.0/go.mod h1:Cx3nUiGt4eDBEyega/BKRp+/AlGL8hYe7U9odMt2Cco=
golang.org/x/net v0.6.0/go.mod h1:2Tu9+aMcznHK/AK1HMvgo6xiTLG5rD5rZLDS+rp2Bjs=
golang.org/x/net v0.10.0/go.mod h1:0qNGK6F8kojg2nk9dLZ2mShWaEBan6FAoqfSigmmuDg=
golang.org/x/net v0.21.0/go.mod h1:bIjVDfnllIU7BJ2DNgfnXvpSvtn8VRwhlsaeUTyUS44=
golang.org/x/net v0.34.0 h1:Mb7Mrk043xzHgnRM88suvJFwzVrRfHEHJEl5/71CKw0=
golang.org/x/net v0.34.0/go.mod h1:di0qlW3YNM5oh6GqDGQr92MyTozJPmybPK4Ev/Gm31k=
golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
golang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=
golang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210514164344-f6687ab2804c/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210628180205-a41e5a781914/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210805134026-6f1e6394065a/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20210819190943-2bc19b11175f/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20211104180415-d3ed0bb246c8/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=
golang.org/x/oauth2 v0.0.0-20220223155221-ee480838109b/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220309155454-6242fa91716a/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220411215720-9780585627b5/go.mod h1:DAh4E804XQdzx2j+YRIaUnCqCV2RuMz24cGBJ5QYIrc=
golang.org/x/oauth2 v0.0.0-20220608161450-d0670ef3b1eb/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=
golang.org/x/oauth2 v0.0.0-20220622183110-fd043fe589d2/go.mod h1:jaDAt6Dkxork7LmZnYtzbRWj0W47D86a3TGe0YHBvmE=
golang.org/x/oauth2 v0.0.0-20220822191816-0ebed06d0094/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.0.0-20220909003341-f21342109be1/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.0.0-20221014153046-6fdb5e3db783/go.mod h1:h4gKUeWbJ4rQPri7E0u6Gs4e9Ri2zaLxzw5DI5XGrYg=
golang.org/x/oauth2 v0.1.0/go.mod h1:G9FE4dLTsbXUu90h/Pf85g4w1D+SSAgR+q46nJZ8M4A=
golang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=
golang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=
golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220601150217-0de741cfad7f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.0.0-20220929204114-8fcdb60fdcc0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.1.0/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
golang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=
golang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=
golang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20180909124046-d0be0721c37e/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181107165924-66b7b1311ac8/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181116152217-5ac8a444bdc5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20181122145206-62eef0e2fa9b/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
golang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190826190057-c7b8b68b1456/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190904154756-749cb33beabd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191120155948-bd437916bb0e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191220142924-d4481acd189f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200106162015-b016eb3dc98e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1501-1650
golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200420163511-1957bb5e6d1f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200615200032-f1bc736245b1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200625212154-ddb9806d33ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210112080510-489259a85091/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210514084401-e8d321eab015/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210603125802-9665404d3644/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210616094352-59db8d763f22/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210806184541-e5e7981a1069/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210819135213-f52c844e1c1c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210908233432-aa78b53d3365/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20210927094055-39ccf1dd6fa6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211025201205-69cdffdb9359/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211124211545-fe61309f8881/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211210111614-af8b64212486/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20211216021012-1d35b9e2eb4e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220128215802-99c3d69c2c27/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220209214540-3681064d5158/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220227234510-4e6760a101f9/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220315194320-039c03cc5b86/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220328115105-d36c6a25d886/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220502124256-b6088ccd6cba/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220503163025-988cb79eb6c6/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220610221304-9f5ed59c137d/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220615213510-4f61da869c0c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220624220833-87e55d714810/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220728004956-3c1f35247d10/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.5.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.8.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.11.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.12.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
golang.org/x/sys v0.17.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.21.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/sys v0.29.0 h1:TPYlXGxvx1MGTn2GiZDhnjPA9wZzZeGKHHmKhHYvgaU=
golang.org/x/sys v0.29.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=
golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
golang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
golang.org/x/term v0.1.0/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=
golang.org/x/term v0.5.0/go.mod h1:jMB1sMXY+tzblOD4FWmEbocvup2/aLOaQEp7JmGp78k=
golang.org/x/term v0.8.0/go.mod h1:xPskH00ivmX89bAKVGSKKtLOWNx2+17Eiy94tnKShWo=
golang.org/x/term v0.17.0/go.mod h1:lLRBjIVuehSbZlaOtGMbcMncT+aqLLLmKrsjNrUguwk=
golang.org/x/term v0.18.0/go.mod h1:ILwASektA3OnRv7amZ1xhE/KTR+u50pbXfZ03+6Nx58=
golang.org/x/term v0.28.0 h1:/Ts8HFuMR2E6IP/jlo7QVLZHggjKQbhu/7H0LJFr3Gg=
golang.org/x/term v0.28.0/go.mod h1:Sw/lC2IAUZ92udQNf3WodGtn4k/XoLyZoh8v/8uiwek=
golang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
golang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
golang.org/x/text v0.7.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=
golang.org/x/text v0.9.0/go.mod h1:e1OnstbJyHTd6l/uOt8jFFHp6TRDWZR/bV3emEE/zU8=
golang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=
golang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=
golang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=
golang.org/x/time v0.0.0-20180412165947-fbb02b2291d2/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=
golang.org/x/time v0.5.0 h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=
golang.org/x/time v0.5.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=
golang.org/x/tools v0.0.0-20180828015842-6cd1fcedba52/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
golang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
golang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
golang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191108193012-7d206e10da11/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
golang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
golang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=
golang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=
golang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=
golang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
golang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
golang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1651-1800
golang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20201224043029-2b0845dc783e/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=
golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.3/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.4/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
golang.org/x/tools v0.6.0/go.mod h1:Xwgl3UAJ/d3gWutnCtw505GrjyAbvKui8lOU390QaIU=
golang.org/x/tools v0.23.0 h1:SGsXPZ+2l4JsgaCKkx+FQ9YZ5XEtA1GZYuoDjenLjvg=
golang.org/x/tools v0.23.0/go.mod h1:pnu6ufv6vQkll6szChhK3C3L/ruaIv5eBeztNG8wtsI=
golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20220411194840-2f41105eb62f/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
golang.org/x/xerrors v0.0.0-20220517211312-f3a8303e98df/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20220907171357-04be3eba64a2/go.mod h1:K8+ghG5WaK9qNqU5K3HdILfMLy1f3aNYFI/wnl100a8=
golang.org/x/xerrors v0.0.0-20231012003039-104605ab7028 h1:+cNy6SZtPcJQH3LJVLOSmiC7MMxXNOb3PU/VUEz+EhU=
golang.org/x/xerrors v0.0.0-20231012003039-104605ab7028/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=
google.golang.org/api v0.3.1/go.mod h1:6wY9I6uQWHQ8EM57III9mq/AjF+i8G65rmVagqKMtkk=
google.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=
google.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=
google.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
google.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=
google.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=
google.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=
google.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=
google.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=
google.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=
google.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=
google.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=
google.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=
google.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=
google.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=
google.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=
google.golang.org/api v0.47.0/go.mod h1:Wbvgpq1HddcWVtzsVLyfLp8lDg6AA241LmgIL59tHXo=
google.golang.org/api v0.48.0/go.mod h1:71Pr1vy+TAZRPkPs/xlCf5SsU8WjuAWv1Pfjbtukyy4=
google.golang.org/api v0.50.0/go.mod h1:4bNT5pAuq5ji4SRZm+5QIkjny9JAyVD/3gaSihNefaw=
google.golang.org/api v0.51.0/go.mod h1:t4HdrdoNgyN5cbEfm7Lum0lcLDLiise1F8qDKX00sOU=
google.golang.org/api v0.54.0/go.mod h1:7C4bFFOvVDGXjfDTAsgGwDgAxRDeQ4X8NvUedIt6z3k=
google.golang.org/api v0.55.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=
google.golang.org/api v0.56.0/go.mod h1:38yMfeP1kfjsl8isn0tliTjIb1rJXcQi4UXlbqivdVE=
google.golang.org/api v0.57.0/go.mod h1:dVPlbZyBo2/OjBpmvNdpn2GRm6rPy75jyU7bmhdrMgI=
google.golang.org/api v0.61.0/go.mod h1:xQRti5UdCmoCEqFxcz93fTl338AVqDgyaDRuOZ3hg9I=
google.golang.org/api v0.63.0/go.mod h1:gs4ij2ffTRXwuzzgJl/56BdwJaA194ijkfn++9tDuPo=
google.golang.org/api v0.67.0/go.mod h1:ShHKP8E60yPsKNw/w8w+VYaj9H6buA5UqDp8dhbQZ6g=
google.golang.org/api v0.70.0/go.mod h1:Bs4ZM2HGifEvXwd50TtW70ovgJffJYw2oRCOFU/SkfA=
google.golang.org/api v0.71.0/go.mod h1:4PyU6e6JogV1f9eA4voyrTY2batOLdgZ5qZ5HOCc4j8=
google.golang.org/api v0.74.0/go.mod h1:ZpfMZOVRMywNyvJFeqL9HRWBgAuRfSjJFpe9QtRRyDs=
google.golang.org/api v0.75.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=
google.golang.org/api v0.77.0/go.mod h1:pU9QmyHLnzlpar1Mjt4IbapUCy8J+6HD6GeELN69ljA=
google.golang.org/api v0.78.0/go.mod h1:1Sg78yoMLOhlQTeF+ARBoytAcH1NNyyl390YMy6rKmw=
google.golang.org/api v0.80.0/go.mod h1:xY3nI94gbvBrE0J6NHXhxOmW97HG7Khjkku6AFB3Hyg=
google.golang.org/api v0.84.0/go.mod h1:NTsGnUFJMYROtiquksZHBWtHfeMC7iYthki7Eq3pa8o=
google.golang.org/api v0.85.0/go.mod h1:AqZf8Ep9uZ2pyTvgL+x0D3Zt0eoT9b5E8fmzfu6FO2g=
google.golang.org/api v0.90.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=
google.golang.org/api v0.93.0/go.mod h1:+Sem1dnrKlrXMR/X0bPnMWyluQe4RsNoYfmNLhOIkzw=
google.golang.org/api v0.95.0/go.mod h1:eADj+UBuxkh5zlrSntJghuNeg8HwQ1w5lTKkuqaETEI=
google.golang.org/api v0.96.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.97.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.98.0/go.mod h1:w7wJQLTM+wvQpNf5JyEcBoxK0RH7EDrh/L4qfsuJ13s=
google.golang.org/api v0.100.0/go.mod h1:ZE3Z2+ZOr87Rx7dqFsdRQkRBk36kDtp/h+QpHbB7a70=
google.golang.org/api v0.186.0 h1:n2OPp+PPXX0Axh4GuSsL5QL8xQCTb2oDwyzPnQvqUug=
google.golang.org/api v0.186.0/go.mod h1:hvRbBmgoje49RV3xqVXrmP6w93n6ehGgIVPYrGtBFFc=
google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
google.golang.org/appengine v1.2.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
google.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=
google.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=
google.golang.org/genproto v0.0.0-20180518175338-11a468237815/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20180831171423-11092d34479b/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
google.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=
google.golang.org/genproto v0.0.0-20190530194941-fb225487d101/go.mod h1:z3L6/3dTEVtUr6QSP8miRzeRqwQOioJ9I66odjN4I7s=
google.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
google.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=
google.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=
google.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=
google.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200324203455-a04cca1dde73/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200423170343-7949de9c1215/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=
google.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=
google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
google.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=
google.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210126160654-44e461bb6506/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=
google.golang.org/genproto v0.0.0-20210329143202-679c6ae281ee/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=
google.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=
google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=
google.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210604141403-392c879c8b08/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210608205507-b6d2f5bf0d7d/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=
google.golang.org/genproto v0.0.0-20210624195500-8bfb893ecb84/go.mod h1:SzzZ/N+nwJDaO1kznhnlzqS8ocJICar6hYhVyhi++24=
google.golang.org/genproto v0.0.0-20210713002101-d411969a0d9a/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=
google.golang.org/genproto v0.0.0-20210716133855-ce7ef5c701ea/go.mod h1:AxrInvYm1dci+enl5hChSFPOmmUF1+uAa/UsgNRWd7k=
google.golang.org/genproto v0.0.0-20210728212813-7823e685a01f/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=
google.golang.org/genproto v0.0.0-20210805201207-89edb61ffb67/go.mod h1:ob2IJxKrgPT52GcgX759i1sleT07tiKowYBGbczaW48=
google.golang.org/genproto v0.0.0-20210813162853-db860fec028c/go.mod h1:cFeNkxwySK631ADgubI+/XFU/xp8FD5KIVV4rj8UC5w=
google.golang.org/genproto v0.0.0-20210821163610-241b8fcbd6c8/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210828152312-66f60bf46e71/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210831024726-fe130286e0e2/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210903162649-d08c68adba83/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210909211513-a8c4777a87af/go.mod h1:eFjDcFEctNawg4eG61bRv87N7iHBWyVhJu7u1kqDUXY=
google.golang.org/genproto v0.0.0-20210924002016-3dee208752a0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211118181313-81c1377c94b1/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211206160659-862468c7d6e0/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1801-1950
google.golang.org/genproto v0.0.0-20211208223120-3a66f561d7aa/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20211221195035-429b39de9b1c/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220126215142-9970aeb2e350/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220207164111-0872dc986b00/go.mod h1:5CzLGKJ67TSI2B9POpiiyGha0AjJvZIUgRMt1dSmuhc=
google.golang.org/genproto v0.0.0-20220218161850-94dd64e39d7c/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220222213610-43724f9ea8cf/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220304144024-325a89244dc8/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220310185008-1973136f34c6/go.mod h1:kGP+zUP2Ddo0ayMi4YuN7C3WZyJvGLZRh8Z5wnAqvEI=
google.golang.org/genproto v0.0.0-20220314164441-57ef72a4c106/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=
google.golang.org/genproto v0.0.0-20220324131243-acbaeb5b85eb/go.mod h1:hAL49I2IFola2sVEjAn7MEwsja0xp51I0tlGAf9hz4E=
google.golang.org/genproto v0.0.0-20220407144326-9054f6ed7bac/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220413183235-5e96e2839df9/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220414192740-2d67ff6cf2b4/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220421151946-72621c1f0bd3/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220429170224-98d788798c3e/go.mod h1:8w6bsBMX6yCPbAVTeqQHvzxW0EIFigd5lZyahWgyfDo=
google.golang.org/genproto v0.0.0-20220502173005-c8bf987b8c21/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220505152158-f39f71e6c8f3/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220518221133-4f43b3371335/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220523171625-347a074981d8/go.mod h1:RAyBrSAP7Fh3Nc84ghnVLDPuV51xc9agzmm4Ph6i0Q4=
google.golang.org/genproto v0.0.0-20220608133413-ed9918b62aac/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220616135557-88e70c0c3a90/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220617124728-180714bec0ad/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220624142145-8cd45d7dbd1f/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220628213854-d9e0b6570c03/go.mod h1:KEWEmljWE5zPzLBa/oHl6DaEt9LmfH6WtH1OHIvleBA=
google.golang.org/genproto v0.0.0-20220722212130-b98a9ff5e252/go.mod h1:GkXuJDJ6aQ7lnJcRF+SJVgFdQhypqgl3LB1C9vabdRE=
google.golang.org/genproto v0.0.0-20220801145646-83ce21fca29f/go.mod h1:iHe1svFLAZg9VWz891+QbRMwUv9O/1Ww+/mngYeThbc=
google.golang.org/genproto v0.0.0-20220815135757-37a418bb8959/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220817144833-d7fd3f11b9b1/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220822174746-9e6da59bd2fc/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220829144015-23454907ede3/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220829175752-36a9c930ecbf/go.mod h1:dbqgFATTzChvnt+ujMdZwITVAJHFtfyN1qUhDqEiIlk=
google.golang.org/genproto v0.0.0-20220913154956-18f8339a66a5/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220914142337-ca0e39ece12f/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220915135415-7fd63a7952de/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220916172020-2692e8806bfa/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220919141832-68c03719ef51/go.mod h1:0Nb8Qy+Sk5eDzHnzlStwW3itdNaWoZA5XeSG+R3JHSo=
google.golang.org/genproto v0.0.0-20220920201722-2b89144ce006/go.mod h1:ht8XFiar2npT/g4vkk7O0WYS1sHOHbdujxbEp7CJWbw=
google.golang.org/genproto v0.0.0-20220926165614-551eb538f295/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=
google.golang.org/genproto v0.0.0-20220926220553-6981cbe3cfce/go.mod h1:woMGP53BroOrRY3xTxlbr8Y3eB/nzAvvFM83q7kG2OI=
google.golang.org/genproto v0.0.0-20221010155953-15ba04fc1c0e/go.mod h1:3526vdqwhZAwq4wsRUaVG555sVgsNmIjRtO7t/JH29U=
google.golang.org/genproto v0.0.0-20221014173430-6e2ab493f96b/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=
google.golang.org/genproto v0.0.0-20221014213838-99cd37c6964a/go.mod h1:1vXfmgAz9N9Jx0QA82PqRVauvCz1SGSz739p0f183jM=
google.golang.org/genproto v0.0.0-20221025140454-527a21cfbd71/go.mod h1:9qHF0xnpdSfF6knlcsnpzUu5y+rpwgbvsyGAZPBMg4s=
google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094 h1:6whtk83KtD3FkGrVb2hFXuQ+ZMbCNdakARIn/aHMmG8=
google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094/go.mod h1:Zs4wYw8z1zr6RNF4cwYb31mvN/EGaKAdQjNCF3DW6K4=
google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a h1:OAiGFfOiA0v9MRYsSidp3ubZaBnteRUyn3xB2ZQ5G/E=
google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a/go.mod h1:jehYqy3+AhJU9ve55aNOaSml7wUXjF9x6z2LcCfpAhY=
google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a h1:hgh8P4EuoxpsuKMXX/To36nOFD7vixReXgn8lPGnt+o=
google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a/go.mod h1:5uTbfoYQed2U9p3KIj2/Zzm02PYhndfdmML0qC3q3FU=
google.golang.org/grpc v1.12.0/go.mod h1:yo6s7OP7yaDglbqo1J04qKzAhqBH6lvTonzMVmEdcZw=
google.golang.org/grpc v1.17.0/go.mod h1:6QZJwpn2B+Zp71q/5VxRsJ6NXXVCE5NRUHRo+f3cWCs=
google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
google.golang.org/grpc v1.20.0/go.mod h1:chYK+tFQF0nDUGJgXMSgLCQk3phJEuONr2DCgLDdAQM=
google.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=
google.golang.org/grpc v1.21.0/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=
google.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=
google.golang.org/grpc v1.22.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.23.1/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=
google.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
google.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=
google.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=
google.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.32.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=
google.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=
google.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=
google.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=
google.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
google.golang.org/grpc v1.37.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.37.1/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=
google.golang.org/grpc v1.39.0/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=
google.golang.org/grpc v1.39.1/go.mod h1:PImNr+rS9TWYb2O4/emRugxiyHZ5JyHW5F+RPnDzfrE=
google.golang.org/grpc v1.40.0/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=
google.golang.org/grpc v1.40.1/go.mod h1:ogyxbiOoUXAkP+4+xa6PZSE9DZgIHtSpzjDTB9KAK34=
google.golang.org/grpc v1.44.0/go.mod h1:k+4IHHFw41K8+bbowsex27ge2rCb65oeWqe4jJ590SU=
google.golang.org/grpc v1.45.0/go.mod h1:lN7owxKUQEqMfSyQikvvk5tf/6zMPsrK+ONuO11+0rQ=
google.golang.org/grpc v1.46.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.46.2/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.47.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.48.0/go.mod h1:vN9eftEi1UMyUsIF80+uQXhHjbXYbm0uXoFCACuMGWk=
google.golang.org/grpc v1.49.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.50.0/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.50.1/go.mod h1:ZgQEeidpAuNRZ8iRrlBKXZQP1ghovWIVhdJRyCDK+GI=
google.golang.org/grpc v1.70.0 h1:pWFv03aZoHzlRKHWicjsZytKAiYCtNS0dHbXnIdq7jQ=
google.golang.org/grpc v1.70.0/go.mod h1:ofIJqVKDXx/JiXrwr2IG4/zwdH9txy3IlF40RmcJSQw=
google.golang.org/grpc/cmd/protoc-gen-go-grpc v1.1.0/go.mod h1:6Kw0yEErY5E/yWrBtf03jp27GLLJujG4z/JK95pnjjw=
google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
google.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=
google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
google.golang.org/protobuf v1.36.4 h1:6A3ZDJHn/eNqc1i+IdefRzy/9PokBTPvcqMySR7NNIM=
google.golang.org/protobuf v1.36.4/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=
gopkg.in/alecthomas/kingpin.v2 v2.2.6/go.mod h1:FMv+mEhP44yOT+4EoQTLFTRgOQ1FBLkstjWtayDeSgw=
gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20200902074654-038fdea0a05b/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c h1:Hei/4ADfdWqJk1ZMxUNpqntNwaWcugrBjAiHlqqRiVk=
gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c/go.mod h1:JHkPIbrfpd72SG/EVd6muEfDQjcINNoR0C8j2r3qZ4Q=
gopkg.in/cheggaaa/pb.v1 v1.0.25/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=
gopkg.in/cheggaaa/pb.v1 v1.0.27/go.mod h1:V/YB90LKu/1FcN3WVnfiiE5oMCibMjukxqG/qStrOgw=
gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=
gopkg.in/fsnotify.v1 v1.4.7/go.mod h1:Tz8NjZHkW78fSQdbUxIjBTcgA1z1m8ZHf0WmKUhAMys=
gopkg.in/gcfg.v1 v1.2.3/go.mod h1:yesOnuUOFQAhST5vPY4nbZsb/huCgGGXlipJsBn0b3o=
gopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=
gopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=
gopkg.in/natefinch/lumberjack.v2 v2.2.1 h1:bBRl1b0OH9s/DuPhuXpNl+VtCaJXFZ5/uEFST95x9zc=
gopkg.in/natefinch/lumberjack.v2 v2.2.1/go.mod h1:YD8tP3GAjkrDg1eZH7EGmyESg/lsYskCTPBJVb9jqSc=
gopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce h1:+JknDZhAj8YMt7GC73Ei8pv4MzjDUNPHgQWJdtMAaDU=
gopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce/go.mod h1:5AcXVHNjg+BDxry382+8OKon8SEWiKktQR07RKPsv1c=
gopkg.in/resty.v1 v1.12.0/go.mod h1:mDo4pnntr5jdWRML875a/NmxYqAlA73dVijT2AXvQQo=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7 h1:uRGJdciOHaEIrze2W8Q3AKkepLTh2hOroT7a+7czfdQ=
gopkg.in/tomb.v1 v1.0.0-20141024135613-dd632973f1e7/go.mod h1:dt/ZhP58zS4L8KSrWDmTeBkI65Dw0HsyUHuEVlX15mw=
gopkg.in/warnings.v0 v0.1.2/go.mod h1:jksf8JmL6Qr/oQM2OXTHunEvvTAsrWBLb6OOjuVWRNI=
gopkg.in/yaml.v2 v2.0.0-20170812160011-eb3733d160e7/go.mod h1:JAlM8MvJe8wmxCU4Bli9HhUf9+ttbYbLASfIpnQbh74=
gopkg.in/yaml.v2 v2.2.1/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.4/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.5/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.3.0/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
gopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=
gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
gotest.tools/v3 v3.5.1 h1:EENdUnS3pdur5nybKYIh2Vfgc8IUNBjxDPSjtiJcOzU=
gotest.tools/v3 v3.5.1/go.mod h1:isy3WKz7GK6uNw/sbHzfKBLvlvXwUyV06n6brMxxopU=
honnef.co/go/tools v0.0.0-20180728063816-88497007e858/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.sum:1951-2002
honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=
honnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
launchpad.net/gocheck v0.0.0-20140225173054-000000000087 h1:Izowp2XBH6Ya6rv+hqbceQyw/gSGoXfH/UPoTGduL54=
launchpad.net/gocheck v0.0.0-20140225173054-000000000087/go.mod h1:hj7XX3B/0A+80Vse0e+BUHsHMTEhd0O4cpUHr/e/BUM=
lukechampine.com/blake3 v1.2.1 h1:YuqqRuaqsGV71BV/nm9xlI0MKUv4QC54jQnBChWbGnI=
lukechampine.com/blake3 v1.2.1/go.mod h1:0OFRp7fBtAylGVCO40o87sbupkyIGgbpv1+M1k1LM6k=
modernc.org/cc/v4 v4.21.2 h1:dycHFB/jDc3IyacKipCNSDrjIC0Lm1hyoWOZTRR20Lk=
modernc.org/cc/v4 v4.21.2/go.mod h1:HM7VJTZbUCR3rV8EYBi9wxnJ0ZBRiGE5OeGXNA0IsLQ=
modernc.org/ccgo/v4 v4.17.10 h1:6wrtRozgrhCxieCeJh85QsxkX/2FFrT9hdaWPlbn4Zo=
modernc.org/ccgo/v4 v4.17.10/go.mod h1:0NBHgsqTTpm9cA5z2ccErvGZmtntSM9qD2kFAs6pjXM=
modernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=
modernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=
modernc.org/gc/v2 v2.4.1 h1:9cNzOqPyMJBvrUipmynX0ZohMhcxPtMccYgGOJdOiBw=
modernc.org/gc/v2 v2.4.1/go.mod h1:wzN5dK1AzVGoH6XOzc3YZ+ey/jPgYHLuVckd62P0GYU=
modernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 h1:5D53IMaUuA5InSeMu9eJtlQXS2NxAhyWQvkKEgXZhHI=
modernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6/go.mod h1:Qz0X07sNOR1jWYCrJMEnbW/X55x206Q7Vt4mz6/wHp4=
modernc.org/libc v1.52.1 h1:uau0VoiT5hnR+SpoWekCKbLqm7v6dhRL3hI+NQhgN3M=
modernc.org/libc v1.52.1/go.mod h1:HR4nVzFDSDizP620zcMCgjb1/8xk2lg5p/8yjfGv1IQ=
modernc.org/mathutil v1.6.0 h1:fRe9+AmYlaej+64JsEEhoWuAYBkOtQiMEU7n/XgfYi4=
modernc.org/mathutil v1.6.0/go.mod h1:Ui5Q9q1TR2gFm0AQRqQUaBWFLAhQpCwNcuhBOSedWPo=
modernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=
modernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=
modernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=
modernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=
modernc.org/sortutil v1.2.0 h1:jQiD3PfS2REGJNzNCMMaLSp/wdMNieTbKX920Cqdgqc=
modernc.org/sortutil v1.2.0/go.mod h1:TKU2s7kJMf1AE84OoiGppNHJwvB753OYfNl2WRb++Ss=
modernc.org/sqlite v1.30.1 h1:YFhPVfu2iIgUf9kuA1CR7iiHdcEEsI2i+yjRYHscyxk=
modernc.org/sqlite v1.30.1/go.mod h1:DUmsiWQDaAvU4abhc/N+djlom/L2o8f7gZ95RCvyoLU=
modernc.org/strutil v1.2.0 h1:agBi9dp1I+eOnxXeiZawM8F4LawKv4NzGWSaLfyeNZA=
modernc.org/strutil v1.2.0/go.mod h1:/mdcBmfOibveCTBxUl5B5l6W+TTH1FXPLHZE6bTosX0=
modernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=
modernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=
nhooyr.io/websocket v1.8.6/go.mod h1:B70DZP8IakI65RVQ51MsWP/8jndNma26DVA/nFSCgW0=
nhooyr.io/websocket v1.8.10 h1:mv4p+MnGrLDcPlBoWsvPP7XCzTYMXP9F9eIGoKbgx7Q=
nhooyr.io/websocket v1.8.10/go.mod h1:rN9OFWIUwuxg4fR5tELlYC04bXYowCP9GX47ivo2l+c=
nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=
pgregory.net/rapid v1.1.0 h1:CMa0sjHSru3puNx+J0MIAuiiEV4N0qj8/cMWGBBCsjw=
pgregory.net/rapid v1.1.0/go.mod h1:PY5XlDGj0+V1FCq0o192FdRhpKHGTRIWBgqjDBTrq04=
rsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=
rsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=
rsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=
rsc.io/tmplfunc v0.0.3 h1:53XFQh69AfOa8Tw0Jm7t+GV7KZhOi6jzsCzTtKbMvzU=
rsc.io/tmplfunc v0.0.3/go.mod h1:AG3sTPzElb1Io3Yg4voV9AGZJuleGAwaVRxL9M49PhA=
sigs.k8s.io/yaml v1.1.0/go.mod h1:UJmg0vDUVViEyp3mgSv9WPwZCDxu4rQW1olrI1uml+o=
sigs.k8s.io/yaml v1.4.0 h1:Mk1wCc2gy/F0THH0TAp1QYyJNzRm2KCLy3o5ASXVI5E=
sigs.k8s.io/yaml v1.4.0/go.mod h1:Ejl7/uTz7PSA4eKMyQCUTnhZYNmLIl+5c2lQPGR2BPY=
sourcegraph.com/sourcegraph/appdash v0.0.0-20190731080439-ebfcffb1b5c0/go.mod h1:hI742Nqp5OhwiqlzhgfbWU4mW4yO10fP+LoT9WOswdU=

=== File: integration_tests/webauthn_test.go ===

-- Chunk 1 --
// webauthn_test.go:34-73
func setupChain(t *testing.T) (TestData, ibc.Wallet, []byte, string, error) {
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	// users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	deployerAddr, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "default", deployerMnemonic, fundAmount, xion)
	require.NoError(t, err)
	err = testutil.WaitForBlocks(ctx, 8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", deployerAddr.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, deployerAddr.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	fp, err := os.Getwd()
	require.NoError(t, err)

	// deploy the contract
	codeIDStr, err := xion.StoreContract(ctx, deployerAddr.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
	require.NoError(t, err)

	return td, deployerAddr, codeHash, codeIDStr, nil
}

-- Chunk 2 --
// webauthn_test.go:75-224
func TestWebAuthNAbstractAccount(t *testing.T) {
	t.Parallel()
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	td, deployerAddr, codeHash, codeIDStr, err := setupChain(t)
	require.NoError(t, err)

	xion, ctx := td.xionChain, td.ctx

	// predict the contract address so it can be verified
	salt := "0"
	creatorAddr := types.AccAddress(deployerAddr.Address())
	require.NoError(t, err)
	predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
	t.Logf("predicted address: %s", predictedAddr.String())

	authenticatorDetails := map[string]interface{}{}
	authenticatorDetails["url"] = "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app"
	/*
		The following is a valid public key response from a webauthn authenticator the using above url. This will need to be updated from time to time when the accounts contract is updated.
		To regenerate, use the following steps:
		1. Run this test and make note of the `predicted address` output above.
		2. Go to the url above and open the developer tools console
		3. Enter the `predicted address` in the second field within the WebAuthN section (populated with the string "test-challenge" by default)
		4. Click "Register" and copy the result from the console
	*/
	cred := CreateWebAuthNAttestationCred(t, base64url.Encode([]byte(predictedAddr.String())))
	authenticatorDetails["credential"] = cred
	authenticatorDetails["id"] = 0

	authenticator := map[string]interface{}{}
	authenticator["Passkey"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["authenticator"] = authenticator

	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	registerCmd := []string{
		"abstract-account", "register",
		codeIDStr, string(instantiateMsgStr),
		"--salt", salt,
		"--chain-id", xion.Config().ChainID,
	}
	t.Logf("sender: %s", deployerAddr.FormattedAddress())

	txHash, err := ExecTx(t, ctx, xion.GetNode(), deployerAddr.KeyName(), registerCmd...)
	require.NoError(t, err)
	t.Logf("tx hash: %s", txHash)

	contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
	require.NoError(t, err)

	contract := contractsResponse["contracts"].([]interface{})[0].(string)

	// get the account from the chain. there might be a better way to do this
	accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
		"auth", "account", contract)
	require.NoError(t, err)
	t.Logf("account response: %s", accountResponse)

	ac, ok := accountResponse["account"]
	require.True(t, ok)

	ac2, ok := ac.(map[string]interface{})
	require.True(t, ok)

	acData, ok := ac2["value"]
	require.True(t, ok)

	accountJSON, err := json.Marshal(acData)
	require.NoError(t, err)

	var account aatypes.AbstractAccount
	err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
	require.NoError(t, err)

	err = xion.SendFunds(ctx, deployerAddr.FormattedAddress(), ibc.WalletAmount{Address: contract, Denom: "uxion", Amount: math.NewInt(10_000)})
	require.NoError(t, err)
	// create the raw tx
	sendMsg := fmt.Sprintf(`
	{
	 "body": {
	   "messages": [
	     {
	       "@type": "/cosmos.bank.v1beta1.MsgSend",
	       "from_address": "%s",
	       "to_address": "%s",
	       "amount": [
	         {
	           "denom": "%s",
	           "amount": "1337"
	         }
	       ]
	     }
	   ],
	   "memo": "",
	   "timeout_height": "0",
	   "extension_options": [],
	   "non_critical_extension_options": []
	 },
	 "auth_info": {
	   "signer_infos": [],
	   "fee": {
	     "amount": [],
	     "gas_limit": "200000",
	     "payer": "",
	     "granter": ""
	   },
	   "tip": null
	 },
	 "signatures": []
	}
		`, contract, deployerAddr.FormattedAddress(), "uxion")

	tx, err := xion.Config().EncodingConfig.TxConfig.TxJSONDecoder()([]byte(sendMsg))
	require.NoError(t, err)
	txBuilder, err := xion.Config().EncodingConfig.TxConfig.WrapTxBuilder(tx)
	require.NoError(t, err)
	// create the sign bytes
	pubKey := account.GetPubKey()
	anyPk, err := codectypes.NewAnyWithValue(pubKey)
	require.NoError(t, err)
	signerData := txsigning.SignerData{
		Address:       account.GetAddress().String(),
		ChainID:       xion.Config().ChainID,
		AccountNumber: account.GetAccountNumber(),
		Sequence:      account.GetSequence(),
		PubKey: &anypb.Any{
			TypeUrl: anyPk.TypeUrl,
			Value:   anyPk.Value,
		}, // NOTE: NilPubKey
	}

	sigData := signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: nil,
	}

	sig := signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}

	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

-- Chunk 3 --
// webauthn_test.go:225-281

	builtTx := txBuilder.GetTx()
	adaptableTx, ok := builtTx.(authsigning.V2AdaptableTx)
	if !ok {
		panic(fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", builtTx))
	}
	txData := adaptableTx.GetSigningTxData()

	signBytes, err := xion.Config().EncodingConfig.TxConfig.SignModeHandler().GetSignBytes(
		ctx,
		signingv1beta1.SignMode(signing.SignMode_SIGN_MODE_DIRECT),
		signerData, txData)
	require.NoError(t, err)
	// our signature is the sha256 of the signbytes
	signatureBz := sha256.Sum256(signBytes)
	challenge := base64url.Encode([]byte(base64.StdEncoding.EncodeToString(signatureBz[:])))

	t.Log("challenge ", challenge)

	/*
		The following is a valid signed challenge from a webauthn authenticator the using above url. This will need to be updated from time to time when the accounts contract is updated.
		To regenerate, use the following steps:
		1. Run this test and make note of the `challenge` output above.
		2. Go to the url above and open the developer tools console.
		3. Enter the `challenge` in the first field within the WebAuthN section (populated with the string "test-challenge" by default)
		4. Click "Sign" and copy the result from the console
	*/
	signedChallenge := CreateWebAuthNSignature(t, challenge, predictedAddr.String())
	sigBytes := append([]byte{0}, signedChallenge...)

	sigData = signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: sigBytes,
	}

	sig = signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}
	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	jsonTx, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(txBuilder.GetTx())
	require.NoError(t, err)
	t.Logf("json tx: %s", jsonTx)

	output, err := ExecBroadcast(t, ctx, xion.GetNode(), jsonTx)
	require.NoError(t, err)
	t.Logf("output: %s", output)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.True(t, math.NewInt(10_000-1337).Equal(newBalance))
}

=== File: integration_tests/token_factory_test.go ===

-- Chunk 1 --
// token_factory_test.go:16-92
func TestXionTokenFactory(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion, xion) // TODO: add a second user
	// TODO: extract both users
	xionUser := users[0]
	uaddr := xionUser.FormattedAddress()

	xionUser2 := users[1]
	uaddr2 := xionUser2.FormattedAddress()

	currentHeight, _ := xion.Height(ctx)
	testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)

	t.Logf("created xion user %s", uaddr)
	t.Logf("created xion user 2 %s", uaddr2)

	tfDenom := CreateTokenFactoryDenom(t, ctx, xion, xionUser, "ictestdenom", fmt.Sprintf("0%s", xion.Config().Denom))
	t.Log("tfDenom", tfDenom)

	// mint
	MintTokenFactoryDenom(t, ctx, xion, xionUser, 100, tfDenom)
	t.Log("minted tfDenom to user")
	balance, err := xion.GetBalance(ctx, uaddr, tfDenom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100).Int64(), balance.Int64())

	// mint-to
	expectedMint := uint64(70)
	MintToTokenFactoryDenom(t, ctx, xion, xionUser, xionUser2, expectedMint, tfDenom)
	t.Log("minted tfDenom to user")
	balance, err = xion.GetBalance(ctx, uaddr2, tfDenom)
	require.NoError(t, err)
	require.Equal(t, balance.Int64(), int64(expectedMint), "balance not 70")

	fp, err := os.Getwd()
	require.NoError(t, err)
	codeID, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "tokenfactory_core.wasm"))
	require.NoError(t, err)

	// This allows the uaddr here to mint tokens on behalf of the contract. Typically you only allow a contract here, but this is testing.
	coreInitMsg := fmt.Sprintf(`{"allowed_mint_addresses":["%s"],"existing_denoms":["%s"]}`, uaddr, tfDenom)
	coreTFContract, err := xion.InstantiateContract(ctx, xionUser.FormattedAddress(), codeID, coreInitMsg, true)
	require.NoError(t, err)

	// change admin to the contract
	TransferTokenFactoryAdmin(t, ctx, xion, xionUser, coreTFContract, tfDenom)

	// ensure the admin is the contract
	admin := GetTokenFactoryAdmin(t, ctx, xion, tfDenom)
	t.Log("admin", admin)
	if admin != coreTFContract {
		t.Fatal("admin not coreTFContract. Did not properly transfer.")
	}

	// Mint on the contract for the user to ensure mint bindings work.
	mintMsg := fmt.Sprintf(`{"mint":{"address":"%s","denom":[{"denom":"%s","amount":"31"}]}}`, uaddr2, tfDenom)
	_, err = xion.ExecuteContract(ctx, xionUser.FormattedAddress(), coreTFContract, mintMsg)
	require.NoError(t, err)

	// ensure uaddr2 has 31+70 = 101
	balance, err = xion.GetBalance(ctx, uaddr2, tfDenom)
	require.NoError(t, err)
	fmt.Println(balance)
	require.Equal(t, balance.Int64(), int64(101))
}

=== File: integration_tests/upgrade_test.go ===

-- Chunk 1 --
// upgrade_test.go:46-60
func TestXionUpgradeNetwork(t *testing.T) {
	t.Parallel()

	// pull "recent" version, that is the upgrade target
	imageTag := os.Getenv("XION_IMAGE")
	imageTagComponents := strings.Split(imageTag, ":")

	// set "previous" to the value in the test const
	err := os.Setenv("XION_IMAGE", fmt.Sprintf("%s:%s", xionImageFrom, xionVersionFrom))
	require.NoError(t, err)
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals, ModifyGenesisAAAllowedCodeIDs}, [][]string{{votingPeriod, maxDepositPeriod}, {votingPeriod, maxDepositPeriod}}))

	// issue the upgrade with "recent" again
	CosmosChainUpgradeTest(t, &td, imageTagComponents[0], imageTagComponents[1], xionUpgradeName)
}

-- Chunk 2 --
// upgrade_test.go:62-163
func CosmosChainUpgradeTest(t *testing.T, td *TestData, upgradeContainerRepo, upgradeVersion string, upgradeName string) {
	// t.Skip("ComosChainUpgradeTest should be run manually, please comment skip and follow instructions when running")
	chain, ctx, client := td.xionChain, td.ctx, td.client

	fundAmount := math.NewInt(10_000_000_000)
	users := interchaintest.GetAndFundTestUsers(t, ctx, "default", fundAmount, chain)
	chainUser := users[0]

	height, err := chain.Height(ctx)
	require.NoError(t, err, "error fetching height before submit upgrade proposal")

	haltHeight := height + haltHeightDelta

	plan := upgradetypes.Plan{
		Name:   upgradeName,
		Height: haltHeight,
		Info:   fmt.Sprintf("Software Upgrade %s", upgradeName),
	}
	upgrade := upgradetypes.MsgSoftwareUpgrade{
		Authority: authority,
		Plan:      plan,
	}

	address, err := chain.GetAddress(ctx, chainUser.KeyName())
	require.NoError(t, err)

	addrString, err := sdk.Bech32ifyAddressBytes(chain.Config().Bech32Prefix, address)
	require.NoError(t, err)

	proposal, err := chain.BuildProposal(
		[]cosmos.ProtoMessage{&upgrade},
		"Chain Upgrade 1",
		"First chain software upgrade",
		"",
		"500000000"+chain.Config().Denom, // greater than min deposit
		addrString,
		false,
	)
	require.NoError(t, err)

	_, err = chain.SubmitProposal(ctx, chainUser.KeyName(), proposal)
	require.NoError(t, err)

	prop, err := chain.GovQueryProposal(ctx, 1)
	require.NoError(t, err)
	require.Equal(t, govv1beta1.StatusVotingPeriod, prop.Status)

	err = chain.VoteOnProposalAllValidators(ctx, prop.ProposalId, cosmos.ProposalVoteYes)
	require.NoError(t, err, "failed to submit votes")

	_, err = cosmos.PollForProposalStatus(ctx, chain, height, height+haltHeightDelta, prop.ProposalId, govv1beta1.StatusPassed)
	require.NoError(t, err, "proposal status did not change to passed in expected number of blocks")

	height, err = chain.Height(ctx)
	require.NoError(t, err, "error fetching height before upgrade")

	timeoutCtx, timeoutCtxCancel := context.WithTimeout(ctx, time.Second*45)
	defer timeoutCtxCancel()

	// this should timeout due to chain halt at upgrade height.
	_ = testutil.WaitForBlocks(timeoutCtx, int(haltHeight-height), chain)

	height, err = chain.Height(ctx)
	require.NoError(t, err, "error fetching height after chain should have halted")

	// make sure that chain is halted
	require.Equal(t, haltHeight, height, fmt.Sprintf("height: %d is not equal to halt height: %d", height, haltHeight))

	// bring down nodes to prepare for upgrade
	err = chain.StopAllNodes(ctx)
	require.NoError(t, err, "error stopping node(s)")
	// upgrade version on all nodes
	chain.UpgradeVersion(ctx, client, upgradeContainerRepo, upgradeVersion)

	// start all nodes back up.
	// validators reach consensus on first block after upgrade height
	// and chain block production resumes.
	err = chain.StartAllNodes(ctx)
	require.NoError(t, err, "error starting upgraded node(s)")

	timeoutCtx, timeoutCtxCancel = context.WithTimeout(ctx, time.Second*45)
	defer timeoutCtxCancel()

	err = testutil.WaitForBlocks(timeoutCtx, int(blocksAfterUpgrade), chain)
	require.NoError(t, err, "chain did not produce blocks after upgrade")

	// check that the upgrade set the params
	paramsModResp, err := ExecQuery(t, ctx, chain.GetNode(),
		"params", "subspace", "jwk", "TimeOffset")
	require.NoError(t, err)
	t.Logf("jwk params response: %v", paramsModResp)

	jwkParams, err := ExecQuery(t, ctx, chain.GetNode(),
		"jwk", "params")
	require.NoError(t, err)
	t.Logf("jwk params response: %v", jwkParams)

	tokenFactoryParams, err := ExecQuery(t, ctx, chain.GetNode(),
		"tokenfactory", "params")
	require.NoError(t, err)
	t.Logf("tokenfactory params response: %v", tokenFactoryParams)
}

=== File: integration_tests/mint_test.go ===

-- Chunk 1 --
// mint_test.go:30-49
func TestMintModuleNoInflationNoFees(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals, ModifyGenesisInflation}, [][]string{{votingPeriod, maxDepositPeriod}, {minInflation, maxInflation, inflationRateChange}}))
	xion, ctx := td.xionChain, td.ctx

	// Wait for some blocks and check if that supply stays the same
	chainHeight, _ := xion.Height(ctx)
	testutil.WaitForBlocks(ctx, int(chainHeight)+10, xion)

	assertion := func(t *testing.T, provision math.LegacyDec, feesAccrued int64, tokenChange int64) {
		require.Equal(t, math.NewInt(0), math.NewInt(tokenChange))
		t.Logf("No minted or Burned tokens. Token change: %d", tokenChange)
	}

	// Run test harness
	VerifyMintModuleTestRandomBlocks(t, xion, ctx, assertion)
}

-- Chunk 2 --
// mint_test.go:55-77
func TestMintModuleInflationNoFees(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	chainHeight, _ := xion.Height(ctx)
	testutil.WaitForBlocks(ctx, int(chainHeight)+10, xion)
	assertion := func(t *testing.T, provision math.LegacyDec, feesAccrued int64, tokenChange int64) {
		require.Truef(t, provision.TruncateInt().GT(math.NewInt(feesAccrued)), "provision should be greater if tokens where minted, provision: %s, fees accrued:%s", provision.TruncateInt(), feesAccrued)
		// We have minted tokens because the fees accrued is less than the block provision
		mintedTokens := provision.TruncateInt().Sub(math.NewInt(feesAccrued))
		t.Logf("Minted tokens: %d and Token change: %d", mintedTokens.Int64(), int64(tokenChange))
		require.Equal(t, mintedTokens, math.NewInt(int64(tokenChange)))
	}

	// Run test harness
	VerifyMintModuleTestRandomBlocks(t, xion, ctx, assertion)
}

-- Chunk 3 --
// mint_test.go:81-93
func feeTxCommand(chain *cosmos.CosmosChain, fee string, sender string, receiver string) []string {
	command := []string{"tx"}
	return chain.GetNode().NodeCommand(append(command,
		"bank", "send", sender, receiver,
		fmt.Sprintf("%s%s", "1000000", chain.Config().Denom),
		"--from", "faucet",
		"--fees", fmt.Sprintf("%s%s", fee, chain.Config().Denom),
		"--chain-id", chain.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"-y",
	)...)
}

-- Chunk 4 --
// mint_test.go:105-157
func sendPeriodicBankTx(t *testing.T, chain *cosmos.CosmosChain, ctx context.Context, chainHeight uint64, duration int, txHashes *MintModuleTest, feeTypeHigh bool) {
	// Create a test wallet to send funds to
	err := chain.CreateKey(ctx, "testAccount")
	require.NoError(t, err)
	// Retrieve the test wallet address
	testAccountAddress, err := chain.GetNode().AccountKeyBech32(ctx, "testAccount")
	require.NoError(t, err)
	// Retrieve the faucet address. Every chain has a faucet account
	faucet, err := chain.GetNode().AccountKeyBech32(ctx, "faucet")
	require.NoError(t, err)
	// Get the current chain height
	cHeight, err := chain.Height(ctx)
	require.NoError(t, err)
	curHeight := uint64(cHeight)

	for curHeight < chainHeight {
		// Get the current block provision at some height
		blockProvisionDec := GetBlockAnnualProvision(t, chain, ctx, chain.Config().Denom, curHeight) // This the minted token amount for the current block
		var blockProvision math.Int
		if feeTypeHigh {
			// we are testing high fees
			// We send a fee that is 2x the block provision since
			// the inflation rate cannot increase that much
			blockProvision = blockProvisionDec.TruncateInt().Mul(math.NewInt(2))
		} else {
			// we are testing low fees
			// We send a fee that is 0.5x the block provision since
			// the inflation rate cannot decrease that much
			blockProvision = blockProvisionDec.TruncateInt().Quo(math.NewInt(2))
		}

		stdout, ee, err := chain.Exec(ctx, feeTxCommand(chain, blockProvision.String(), faucet, testAccountAddress), nil)
		if err != nil {
			t.Log(string(stdout))
			t.Log(string(ee))
			t.Fatal(err)
		}

		output := cosmos.CosmosTx{}
		err = json.Unmarshal([]byte(stdout), &output)
		if err != nil {
			t.Fatal(err)
		}

		// Save the hash of the Send tx for later analysis
		txHashes.TxHashes = append(txHashes.TxHashes, output.TxHash)

		time.Sleep(time.Duration(duration) * time.Second)
		cHeight, err := chain.Height(ctx)
		require.NoError(t, err)
		curHeight = uint64(cHeight)
	}
}

-- Chunk 5 --
// mint_test.go:159-161
type MintModuleTest struct {
	TxHashes []string
}

-- Chunk 6 --
// mint_test.go:166-199
func TestMintModuleInflationHighFees(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	td := BuildXionChain(t, "0.00uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	txHashes := MintModuleTest{
		TxHashes: []string{},
	}

	go func(t *testing.T, chain *cosmos.CosmosChain, ctx context.Context, blockHeight uint64, duration int, txHashes *MintModuleTest) {
		sendPeriodicBankTx(t, xion, ctx, blockHeight, duration, txHashes, true)
	}(t, xion, ctx, 20, 4, &txHashes)

	// Wait some blocks
	testutil.WaitForBlocks(ctx, 25, xion)

	require.NotEmpty(t, txHashes.TxHashes)

	assertion := func(t *testing.T, provision math.LegacyDec, feesAccrued int64, tokenChange int64) {
		// We have burned tokens because the fees accrued is greater than the block provision so the fees
		// accrued are used to pay validators and the remaining is burned
		require.True(t, provision.TruncateInt().LT(math.NewInt(feesAccrued)), "provision should be lower, in order to burn tokens")
		burnedTokens := math.NewInt(feesAccrued).Sub(provision.TruncateInt())
		t.Logf("Burned tokens: %d and Token change: %d", burnedTokens.Int64(), tokenChange)
		require.Equal(t, burnedTokens, math.NewInt(tokenChange).Abs())
	}
	// Run test harness
	VerifyMintModuleTest(t, xion, ctx, txHashes.TxHashes, assertion)
}

-- Chunk 7 --
// mint_test.go:204-239
func TestMintModuleInflationLowFees(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	td := BuildXionChain(t, "0.00uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	txHashes := MintModuleTest{
		TxHashes: []string{},
	}
	var mu sync.Mutex

	mu.Lock()
	go func(t *testing.T, chain *cosmos.CosmosChain, ctx context.Context, blockHeight uint64, duration int, txHashes *MintModuleTest) {
		sendPeriodicBankTx(t, xion, ctx, blockHeight, duration, txHashes, false)
	}(t, xion, ctx, 20, 4, &txHashes)
	mu.Unlock()

	// Wait some blocks
	testutil.WaitForBlocks(ctx, 25, xion)

	require.NotEmpty(t, txHashes.TxHashes)

	assertion := func(t *testing.T, provision math.LegacyDec, feesAccrued int64, tokenChange int64) {
		require.Truef(t, provision.TruncateInt().GT(math.NewInt(feesAccrued)), "provision should be greater if tokens where minted")
		// We have minted tokens because the fees accrued is less than the block provision
		mintedTokens := provision.TruncateInt().Sub(math.NewInt(feesAccrued))
		t.Logf("Minted tokens: %d and Token change: %d", mintedTokens.Int64(), int64(tokenChange))
		require.Equal(t, mintedTokens, math.NewInt(int64(tokenChange)))
	}
	// Run test harness
	VerifyMintModuleTest(t, xion, ctx, txHashes.TxHashes, assertion)
}

=== File: integration_tests/update_treasury_params_test.go ===

-- Chunk 1 --
// update_treasury_params_test.go:18-84
func TestUpdateTreasuryContractParams(t *testing.T) {
	// Setup Xion chain
	td := BuildXionChain(t, "0.0uxion", nil)
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and fund test user
	t.Log("Creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]

	err := testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Deploy contract
	t.Log("Deploying contract")
	fp, err := os.Getwd()
	require.NoError(t, err)

	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "treasury-aarch64.wasm"))
	require.NoError(t, err)

	// Instantiate contract
	t.Log("Instantiating contract")
	instantiateMsg := TreasuryInstantiateMsg{
		TypeUrls:     []string{},
		GrantConfigs: []GrantConfig{},
		FeeConfig: &FeeConfig{
			Description: "test fee grant",
		},
	}
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	contractAddr, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	t.Logf("Deployed and instantiated contract at address: %s", contractAddr)

	// CLI command to update params
	t.Log("Updating contract parameters")
	cmd := []string{
		"xion", "update-params", contractAddr,
		"https://example.com/display",
		"https://example.com/redirect",
		"https://example.com/icon.png",
		"--chain-id", xion.Config().ChainID,
		"--from", xionUser.KeyName(),
		"--gas-prices", "1uxion",
		"--gas-adjustment", "1.4",
		"--gas", "400000",
		"-y",
	}

	_, err = ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), cmd...)
	require.NoError(t, err)

	// Wait for the transaction to be included in a block
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Query and validate contract state
	validateUpdatedParams(t, ctx, xion, contractAddr)
}

-- Chunk 2 --
// update_treasury_params_test.go:87-113
func validateUpdatedParams(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, contractAddr string) {
	t.Log("Querying updated contract parameters")
	queryMsg := map[string]interface{}{
		"params": struct{}{},
	}
	queryMsgStr, err := json.Marshal(queryMsg)
	require.NoError(t, err)

	queryRaw, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", contractAddr, string(queryMsgStr))
	require.NoError(t, err)

	queryBytes, err := json.Marshal(queryRaw["data"])
	require.NoError(t, err)

	var queriedParams struct {
		DisplayURL  string `json:"display_url"`
		RedirectURL string `json:"redirect_url"`
		IconURL     string `json:"icon_url"`
	}
	err = json.Unmarshal(queryBytes, &queriedParams)
	require.NoError(t, err)

	// Validate the updated contract state
	require.Equal(t, "https://example.com/display", queriedParams.DisplayURL)
	require.Equal(t, "https://example.com/redirect", queriedParams.RedirectURL)
	require.Equal(t, "https://example.com/icon.png", queriedParams.IconURL)
}

=== File: integration_tests/update_treasury_configs_test.go ===

-- Chunk 1 --
// update_treasury_configs_test.go:23-26
func init() {
	// Define command-line flags
	flag.StringVar(&configFileUrl, "configUrl", "", "URL to the configuration file")
}

-- Chunk 2 --
// update_treasury_configs_test.go:28-130
func TestUpdateTreasuryConfigsWithLocalAndURL(t *testing.T) {
	flag.Parse()
	// require.NotNil(t, configFileUrl, "No config file is provided via the configUrl flag")
	configFileUrl = "https://raw.githubusercontent.com/burnt-labs/xion/refs/heads/main/integration_tests/testdata/unsigned_msgs/plain_config.json"
	// Setup Xion chain
	td := BuildXionChain(t, "0.0uxion", nil)
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and fund test user
	t.Log("Creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]

	err := testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Deploy contract
	t.Log("Deploying contract")
	fp, err := os.Getwd()
	require.NoError(t, err)

	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "treasury-aarch64.wasm"))
	require.NoError(t, err)

	// Instantiate contract
	t.Log("Instantiating contract")
	instantiateMsg := TreasuryInstantiateMsg{
		TypeUrls:     []string{},
		GrantConfigs: []GrantConfig{},
		FeeConfig: &FeeConfig{
			Description: "test fee grant",
		},
	}
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	treasuryAddr, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	t.Logf("Deployed and instantiated contract at address: %s", treasuryAddr)

	// Local File Test
	t.Log("Testing with local file")
	configData, err := os.ReadFile(path.Join(fp, "integration_tests", "testdata", "unsigned_msgs", "plain_config.json"))
	require.NoError(t, err)

	file, err := os.CreateTemp("", "*-config.json")
	require.NoError(t, err)
	_, err = file.Write(configData)
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), file)
	require.NoError(t, err)

	configFilePath := strings.Split(file.Name(), "/")
	cmd := []string{
		"xion", "update-configs", treasuryAddr, path.Join(xion.GetNode().HomeDir(), configFilePath[len(configFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
		"--from", xionUser.KeyName(),
		"--gas-prices", "1uxion", "--gas-adjustment", "1.4",
		"--gas", "400000",
		"--local",
		"-y",
	}
	_, err = ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), cmd...)
	require.NoError(t, err)

	// Wait for the transaction to be included in a block
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Query and validate Grant Config URLs
	validateGrantConfigs(t, ctx, xion, treasuryAddr)

	// Query and validate Fee Config
	validateFeeConfig(t, ctx, xion, treasuryAddr)

	// URL Test
	t.Log("Testing with URL")
	cmd = []string{
		"xion", "update-configs", treasuryAddr, configFileUrl,
		"--chain-id", xion.Config().ChainID,
		"--from", xionUser.KeyName(),
		"--gas-prices", "1uxion", "--gas-adjustment", "1.4",
		"--gas", "400000",
		"-y",
	}
	_, err = ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), cmd...)
	require.NoError(t, err)

	// Wait for the transaction to be included in a block
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Query and validate Grant Config URLs
	validateGrantConfigs(t, ctx, xion, treasuryAddr)

	// Query and validate Fee Config
	validateFeeConfig(t, ctx, xion, treasuryAddr)
}

-- Chunk 3 --
// update_treasury_configs_test.go:132-160
func validateGrantConfigs(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, treasuryAddr string) {
	t.Log("Querying grant config type URLs")
	grantQueryMsg := map[string]interface{}{
		"grant_config_type_urls": struct{}{},
	}
	grantQueryMsgStr, err := json.Marshal(grantQueryMsg)
	require.NoError(t, err)

	grantQueryRaw, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", treasuryAddr, string(grantQueryMsgStr))
	require.NoError(t, err)

	grantQueryBytes, err := json.Marshal(grantQueryRaw["data"])
	require.NoError(t, err)

	var queriedGrantConfigUrls []string
	err = json.Unmarshal(grantQueryBytes, &queriedGrantConfigUrls)
	require.NoError(t, err)

	// Validate that all grants are in the contract state
	require.Equal(t, 3, len(queriedGrantConfigUrls))
	check := []string{"/cosmos.bank.v1beta1.MsgSend", "/cosmos.staking.v1beta1.MsgDelegate", "/cosmos.gov.v1beta1.MsgVote"}
	exists := make(map[string]bool)
	for _, str := range queriedGrantConfigUrls {
		exists[str] = true
	}
	for _, str := range check {
		require.True(t, exists[str], "Expected %s to be in the grant config type URLs", str)
	}
}

-- Chunk 4 --
// update_treasury_configs_test.go:162-183
func validateFeeConfig(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, treasuryAddr string) {
	t.Log("Querying fee config")
	feeQueryMsg := map[string]interface{}{
		"fee_config": struct{}{},
	}
	feeQueryMsgStr, err := json.Marshal(feeQueryMsg)
	require.NoError(t, err)

	feeQueryRaw, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", treasuryAddr, string(feeQueryMsgStr))
	require.NoError(t, err)

	feeQueryBytes, err := json.Marshal(feeQueryRaw["data"])
	require.NoError(t, err)

	var queriedFeeConfig FeeConfig
	err = json.Unmarshal(feeQueryBytes, &queriedFeeConfig)
	require.NoError(t, err)

	// Validate Fee Config
	require.Equal(t, "Fee allowance for user1", queriedFeeConfig.Description)
	require.Equal(t, "/cosmos.feegrant.v1beta1.AllowedMsgAllowance", queriedFeeConfig.Allowance.TypeURL)
}

-- Chunk 5 --
// update_treasury_configs_test.go:185-334
func TestUpdateTreasuryConfigsWithAALocalAndURL(t *testing.T) {
	configFileUrl = "https://raw.githubusercontent.com/burnt-labs/xion/refs/heads/main/integration_tests/testdata/unsigned_msgs/plain_config.json"
	// require.NotNil(t, configFileUrl, "Skipping test as no config file is provided via the --config flag")
	// Setup Xion chain
	td := BuildXionChain(t, "0.0uxion", nil)
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	fp, err := os.Getwd()
	require.NoError(t, err)

	// Create and fund test user
	t.Log("Creating and funding user accounts")
	fundAmount := math.NewInt(100_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Create a Secondary Key For Rotation
	recipientKeyName := "recipient-key"
	err = xion.CreateKey(ctx, recipientKeyName)
	require.NoError(t, err)
	receipientKeyAddressBytes, err := xion.GetAddress(ctx, recipientKeyName)
	require.NoError(t, err)
	_, err = types.Bech32ifyAddressBytes(xion.Config().Bech32Prefix, receipientKeyAddressBytes)
	require.NoError(t, err)

	_, err = ExecBin(t, ctx, xion.GetNode(),
		"keys", "show",
		xionUser.KeyName(),
		"--keyring-backend", keyring.BackendTest,
		"-p",
	)
	require.NoError(t, err)

	// Store AA Wasm Contract
	codeID, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	depositedFunds := fmt.Sprintf("%d%s", 10000000, xion.Config().Denom)

	registeredTxHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "register",
		codeID,
		xionUser.KeyName(),
		"--funds", depositedFunds,
		"--salt", "0",
		"--authenticator", "Secp256K1",
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("tx hash: %s", registeredTxHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", registeredTxHash)
	require.NoError(t, err)
	aaContractAddr := GetAAContractAddress(t, txDetails)
	t.Logf("AA Contract Address: %s", aaContractAddr)

	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "treasury-aarch64.wasm"))
	require.NoError(t, err)

	t.Log("Instantiating Treasury contract")
	accAddr, err := types.AccAddressFromBech32(aaContractAddr)
	require.NoError(t, err)
	instantiateMsg := TreasuryInstantiateMsg{
		Admin:        accAddr,
		TypeUrls:     []string{},
		GrantConfigs: []GrantConfig{},
		FeeConfig: &FeeConfig{
			Description: "test fee grant",
		},
	}
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	treasuryAddr1, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	treasuryAddr2, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	t.Logf("Deployed and instantiated Treasury contract at address: %s %s", treasuryAddr1, treasuryAddr2)

	// Test with local config file
	t.Log("Testing with local config file")
	configData, err := os.ReadFile(path.Join(fp, "integration_tests", "testdata", "unsigned_msgs", "plain_config.json"))
	require.NoError(t, err)

	file, err := os.CreateTemp("", "*-config.json")
	require.NoError(t, err)
	_, err = file.Write(configData)
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), file)
	require.NoError(t, err)

	configFilePath := strings.Split(file.Name(), "/")
	cmd := []string{
		"tx", "xion", "update-configs", treasuryAddr1, path.Join(xion.GetNode().HomeDir(), configFilePath[len(configFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
		"--from", aaContractAddr,
		"--gas-prices", "1uxion", "--gas-adjustment", "2",
		"--gas", "4000000",
		"--local",
		"--generate-only",
	}
	unsignedTx, err := ExecBin(t, ctx, xion.GetNode(), cmd...)
	require.NoError(t, err)

	// Marshal the unsignedTx to JSON for logging
	_, err = json.MarshalIndent(unsignedTx, "", "  ")
	require.NoError(t, err)

	unsignedTxFile := WriteUnsignedTxToFile(t, unsignedTx)

	defer os.Remove(unsignedTxFile.Name())

	err = UploadFileToContainer(t, ctx, xion.GetNode(), unsignedTxFile)
	require.NoError(t, err)

	unsignedTxFilePath := strings.Split(unsignedTxFile.Name(), "/")

	_, err = ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "xion", "sign", xionUser.KeyName(), aaContractAddr, path.Join(xion.GetNode().HomeDir(), unsignedTxFilePath[len(unsignedTxFilePath)-1]),
		"--from", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()),
	)
	require.NoError(t, err)

	// Wait for the transaction to be included in a block
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Validate Grant Configs
	validateGrantConfigs(t, ctx, xion, treasuryAddr1)

	// Validate Fee Config
	validateFeeConfig(t, ctx, xion, treasuryAddr1)

	// Test with URL config file
	t.Log("Testing with URL config file")
	cmd = []string{

-- Chunk 6 --
// update_treasury_configs_test.go:335-374
		"tx", "xion", "update-configs", treasuryAddr2, configFileUrl,
		"--chain-id", xion.Config().ChainID,
		"--from", aaContractAddr,
		"--gas-prices", "1uxion", "--gas-adjustment", "2",
		"--gas", "4000000",
		"--generate-only",
	}
	unsignedTx, err = ExecBin(t, ctx, xion.GetNode(), cmd...)
	require.NoError(t, err)

	t.Log("Signing transaction for URL config")
	unsignedTxFile2 := WriteUnsignedTxToFile(t, unsignedTx)
	defer os.Remove(unsignedTxFile2.Name())

	err = UploadFileToContainer(t, ctx, xion.GetNode(), unsignedTxFile2)
	require.NoError(t, err)

	unsignedTxFilePath2 := strings.Split(unsignedTxFile2.Name(), "/")

	_, err = ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "xion", "sign", xionUser.KeyName(), aaContractAddr, path.Join(xion.GetNode().HomeDir(), unsignedTxFilePath2[len(unsignedTxFilePath2)-1]),
		"--from", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()),
	)
	require.NoError(t, err)

	// Wait for the transaction to be included in a block
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	// Validate Grant Configs
	validateGrantConfigs(t, ctx, xion, treasuryAddr2)

	// Validate Fee Config
	validateFeeConfig(t, ctx, xion, treasuryAddr2)
}

-- Chunk 7 --
// update_treasury_configs_test.go:376-387
func WriteUnsignedTxToFile(t *testing.T, unsignedTx map[string]interface{}) *os.File {
	t.Helper()
	unsignedTxFile, err := os.CreateTemp("", "*-msg-update-config.json")
	require.NoError(t, err)

	unsignedTxBz, err := json.Marshal(unsignedTx)
	require.NoError(t, err)
	_, err = unsignedTxFile.Write(unsignedTxBz)
	require.NoError(t, err)

	return unsignedTxFile
}

=== File: integration_tests/upgrade_ibc_test.go ===

-- Chunk 1 --
// upgrade_ibc_test.go:72-221
func TestXionUpgradeIBC(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	chains := interchaintest.CreateChainsWithChainSpecs(t, []*interchaintest.ChainSpec{
		{
			Name:    "xion",
			Version: xionVersionFrom,
			ChainConfig: ibc.ChainConfig{
				Images: []ibc.DockerImage{
					{
						Repository: xionImageFrom,
						Version:    xionVersionFrom,
						UidGid:     "1025:1025",
					},
				},
				GasPrices:      "0.0uxion",
				GasAdjustment:  1.3,
				Type:           "cosmos",
				ChainID:        "xion-1",
				Bin:            "xiond",
				Bech32Prefix:   "xion",
				Denom:          "uxion",
				TrustingPeriod: ibcClientTrustingPeriod,
				EncodingConfig: func() *moduletestutil.TestEncodingConfig {
					cfg := moduletestutil.MakeTestEncodingConfig(
						auth.AppModuleBasic{},
						genutil.NewAppModuleBasic(genutiltypes.DefaultMessageValidator),
						bank.AppModuleBasic{},
						capability.AppModuleBasic{},
						staking.AppModuleBasic{},
						mint.AppModuleBasic{},
						distr.AppModuleBasic{},
						gov.NewAppModuleBasic(
							[]govclient.ProposalHandler{
								paramsclient.ProposalHandler,
							},
						),
						params.AppModuleBasic{},
						slashing.AppModuleBasic{},
						upgrade.AppModuleBasic{},
						consensus.AppModuleBasic{},
						transfer.AppModuleBasic{},
						ibccore.AppModuleBasic{},
						ibctm.AppModuleBasic{},
						ibcwasm.AppModuleBasic{},
						ccvprovider.AppModuleBasic{},
						ibcsolomachine.AppModuleBasic{},

						// custom
						wasm.AppModuleBasic{},
						authz.AppModuleBasic{},
						tokenfactory.AppModuleBasic{},
						xion.AppModuleBasic{},
						jwk.AppModuleBasic{},
						aa.AppModuleBasic{},
					)
					// TODO: add encoding types here for the modules you want to use
					ibclocalhost.RegisterInterfaces(cfg.InterfaceRegistry)
					return &cfg
				}(),

				ModifyGenesis: ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}),
			},
		},
		{
			Name:    "osmosis",
			Version: osmosisVersion,
			ChainConfig: ibc.ChainConfig{
				Images: []ibc.DockerImage{
					{
						Repository: osmosisImage,
						Version:    osmosisVersion,
						UidGid:     "1025:1025",
					},
				},
				Type:           "cosmos",
				Bin:            "osmosisd",
				Bech32Prefix:   "osmo",
				Denom:          "uosmo",
				GasPrices:      "0.025uosmo",
				GasAdjustment:  1.3,
				TrustingPeriod: ibcClientTrustingPeriod,
			},
		},
	})

	client, network := interchaintest.DockerSetup(t)

	chain, counterpartyChain := chains[0].(*cosmos.CosmosChain), chains[1].(*cosmos.CosmosChain)

	const (
		testPath    = "ibc-upgrade-test-testPath"
		relayerName = "relayer"
	)

	// Get a relayer instance
	rf := interchaintest.NewBuiltinRelayerFactory(
		ibc.CosmosRly,
		zaptest.NewLogger(t),
		relayer.StartupFlags("-b", "100"),
	)

	r := rf.Build(t, client, network)

	ic := interchaintest.NewInterchain().
		AddChain(chain).
		AddChain(counterpartyChain).
		AddRelayer(r, relayerName).
		AddLink(interchaintest.InterchainLink{
			Chain1:  chain,
			Chain2:  counterpartyChain,
			Relayer: r,
			Path:    testPath,
		})

	ctx := context.Background()

	rep := testreporter.NewNopReporter()

	require.NoError(t, ic.Build(ctx, rep.RelayerExecReporter(t), interchaintest.InterchainBuildOptions{
		TestName:  t.Name(),
		Client:    client,
		NetworkID: network,
		// BlockDatabaseFile: interchaintest.DefaultBlockDatabaseFilepath(),
		SkipPathCreation: false,
	}))
	t.Cleanup(func() {
		_ = ic.Close()
	})

	userFunds := math.NewInt(10_000_000_000)
	users := interchaintest.GetAndFundTestUsers(t, ctx, t.Name(), userFunds, chain)
	chainUser := users[0]

	// deploy the account contract, and pin it
	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := chain.StoreContract(ctx, chainUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	authority, err := chain.UpgradeQueryAuthority(ctx)
	require.NoError(t, err)
	codeID, err := strconv.Atoi(codeIDStr)
	require.NoError(t, err)


-- Chunk 2 --
// upgrade_ibc_test.go:222-334
	pinCodeMsg := wasmtypes.MsgPinCodes{
		Authority: authority,
		CodeIDs:   []uint64{uint64(codeID)},
	}
	msg, err := chain.Config().EncodingConfig.Codec.MarshalInterfaceJSON(&pinCodeMsg)
	require.NoError(t, err)

	pinCodeTx, err := chain.SubmitProposal(ctx, chainUser.KeyName(), cosmos.TxProposalv1{
		Messages: []json.RawMessage{msg},
		Metadata: "",
		Deposit:  "100uxion",
		Title:    "Pin AA Contract Code",
		Summary:  "To verify that the wasm cache doesn't move or change during upgrade",
	})
	require.NoError(t, err)

	proposalID, err := strconv.Atoi(pinCodeTx.ProposalID)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := chain.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusVotingPeriod {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status VOTING, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status VOTING after 11s")

	err = chain.VoteOnProposalAllValidators(ctx, uint64(proposalID), cosmos.ProposalVoteYes)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := chain.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusPassed {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status PASSED, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status PASSED after 11s")

	// test IBC conformance before chain upgrade
	conformance.TestChainPair(t, ctx, client, network, chain, counterpartyChain, rf, rep, r, testPath)

	height, err := chain.Height(ctx)
	require.NoError(t, err, "error fetching height before submit upgrade proposal")

	haltHeight := height + haltHeightDelta

	proposal := cosmos.SoftwareUpgradeProposal{
		Deposit:     "500000000" + chain.Config().Denom, // greater than min deposit
		Title:       "Chain Upgrade 1",
		Name:        xionUpgradeName,
		Description: "First chain software upgrade",
		Height:      haltHeight,
	}

	upgradeTx, err := chain.UpgradeProposal(ctx, chainUser.KeyName(), proposal)
	require.NoError(t, err, "error submitting software upgrade proposal tx")

	propId, err := strconv.ParseUint(upgradeTx.ProposalID, 10, 64)
	require.NoError(t, err, "failed to convert proposal ID to uint64")

	err = chain.VoteOnProposalAllValidators(ctx, propId, cosmos.ProposalVoteYes)
	require.NoError(t, err, "failed to submit votes")

	_, err = cosmos.PollForProposalStatus(ctx, chain, height, height+haltHeightDelta, propId, govv1beta1.StatusPassed)
	require.NoError(t, err, "proposal status did not change to passed in expected number of blocks")

	height, err = chain.Height(ctx)
	require.NoError(t, err, "error fetching height before upgrade")

	timeoutCtx, timeoutCtxCancel := context.WithTimeout(ctx, time.Second*45)
	defer timeoutCtxCancel()

	// this should timeout due to chain halt at upgrade height.
	_ = testutil.WaitForBlocks(timeoutCtx, int(haltHeight-height)+1, chain)

	height, err = chain.Height(ctx)
	require.NoError(t, err, "error fetching height after chain should have halted")

	// make sure that chain is halted
	require.Equal(t, haltHeight, height, "height is not equal to halt height")

	// bring down nodes to prepare for upgrade
	err = chain.StopAllNodes(ctx)
	require.NoError(t, err, "error stopping node(s)")

	// upgrade version on all nodes
	chain.UpgradeVersion(ctx, client, xionImageTo, xionVersionTo)

	// start all nodes back up.
	// validators reach consensus on first block after upgrade height
	// and chain block production resumes.
	err = chain.StartAllNodes(ctx)
	require.NoError(t, err, "error starting upgraded node(s)")

	timeoutCtx, timeoutCtxCancel = context.WithTimeout(ctx, time.Second*45)
	defer timeoutCtxCancel()

	err = testutil.WaitForBlocks(timeoutCtx, int(blocksAfterUpgrade), chain)
	require.NoError(t, err, "chain did not produce blocks after upgrade")

	// test IBC conformance after chain upgrade on same path
	conformance.TestChainPair(t, ctx, client, network, chain, counterpartyChain, rf, rep, r, testPath)
}

=== File: integration_tests/go.mod ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.mod:1-150
module integration_tests

go 1.23.5

replace (
	cosmossdk.io/core => cosmossdk.io/core v0.11.1
	github.com/ChainSafe/go-schnorrkel => github.com/ChainSafe/go-schnorrkel v0.0.0-20200405005733-88cbf1b4c40d
	github.com/ChainSafe/go-schnorrkel/1 => github.com/ChainSafe/go-schnorrkel v1.0.0
	github.com/burnt-labs/xion => ../
	github.com/gogo/protobuf => github.com/regen-network/protobuf v1.3.3-alpha.regen.1
	github.com/larry0x/abstract-account => github.com/burnt-labs/abstract-account v0.0.0-20241017182826-e40d245c944a
	github.com/strangelove-ventures/tokenfactory => github.com/strangelove-ventures/tokenfactory v0.50.3-wasmvm2
	github.com/vedhavyas/go-subkey => github.com/strangelove-ventures/go-subkey v1.0.7
	github.com/vektra/mockery/v2 => github.com/vektra/mockery/v2 v2.14.0
)

require (
	cosmossdk.io/api v0.7.6
	cosmossdk.io/math v1.5.0
	cosmossdk.io/x/feegrant v0.1.1
	cosmossdk.io/x/tx v0.13.7
	cosmossdk.io/x/upgrade v0.1.4
	github.com/CosmWasm/wasmd v0.54.0
	github.com/burnt-labs/xion v0.1.0
	github.com/cosmos/cosmos-sdk v0.50.13
	github.com/cosmos/gogoproto v1.7.0
	github.com/cosmos/ibc-go/modules/capability v1.0.1
	github.com/cosmos/ibc-go/modules/light-clients/08-wasm v0.4.2-0.20240730185033-ccd4dc278e72
	github.com/cosmos/ibc-go/v8 v8.7.0
	github.com/cosmos/interchain-security/v5 v5.0.0-alpha1.0.20240424193412-7cd900ad2a74
	github.com/docker/docker v24.0.9+incompatible
	github.com/dvsekhvalnov/jose2go v1.6.0
	github.com/go-webauthn/webauthn v0.9.1
	github.com/golang-jwt/jwt/v4 v4.5.0
	github.com/icza/dyno v0.0.0-20220812133438-f0b6f8a18845
	github.com/larry0x/abstract-account v0.0.0-20240904201714-f31e8234ed64
	github.com/lestrrat-go/jwx v1.2.29
	github.com/strangelove-ventures/interchaintest/v8 v8.7.0
	github.com/strangelove-ventures/tokenfactory v0.50.3
	github.com/stretchr/testify v1.10.0
	go.uber.org/zap v1.27.0
	google.golang.org/protobuf v1.36.4
)

require (
	cloud.google.com/go v0.115.0 // indirect
	cloud.google.com/go/auth v0.6.0 // indirect
	cloud.google.com/go/auth/oauth2adapt v0.2.2 // indirect
	cloud.google.com/go/compute/metadata v0.5.2 // indirect
	cloud.google.com/go/iam v1.1.9 // indirect
	cloud.google.com/go/storage v1.41.0 // indirect
	cosmossdk.io/collections v0.4.0 // indirect
	cosmossdk.io/core v0.12.0 // indirect
	cosmossdk.io/depinject v1.1.0 // indirect
	cosmossdk.io/errors v1.0.1 // indirect
	cosmossdk.io/log v1.5.0 // indirect
	cosmossdk.io/store v1.1.1 // indirect
	cosmossdk.io/x/evidence v0.1.1 // indirect
	filippo.io/edwards25519 v1.1.0 // indirect
	github.com/99designs/go-keychain v0.0.0-20191008050251-8e49817e8af4 // indirect
	github.com/99designs/keyring v1.2.2 // indirect
	github.com/BurntSushi/toml v1.4.0 // indirect
	github.com/ChainSafe/go-schnorrkel v1.0.0 // indirect
	github.com/ChainSafe/go-schnorrkel/1 v0.0.0-00010101000000-000000000000 // indirect
	github.com/ComposableFi/go-subkey/v2 v2.0.0-tm03420 // indirect
	github.com/CosmWasm/wasmvm/v2 v2.2.2 // indirect
	github.com/DataDog/datadog-go v3.2.0+incompatible // indirect
	github.com/DataDog/zstd v1.5.5 // indirect
	github.com/FactomProject/basen v0.0.0-20150613233007-fe3947df716e // indirect
	github.com/FactomProject/btcutilecc v0.0.0-20130527213604-d3a63a5752ec // indirect
	github.com/Microsoft/go-winio v0.6.2 // indirect
	github.com/StackExchange/wmi v1.2.1 // indirect
	github.com/StirlingMarketingGroup/go-namecase v1.0.0 // indirect
	github.com/avast/retry-go/v4 v4.5.1 // indirect
	github.com/aws/aws-sdk-go v1.44.224 // indirect
	github.com/beorn7/perks v1.0.1 // indirect
	github.com/bgentry/go-netrc v0.0.0-20140422174119-9fd32a8b3d3d // indirect
	github.com/bgentry/speakeasy v0.1.1-0.20220910012023-760eaf8b6816 // indirect
	github.com/bits-and-blooms/bitset v1.10.0 // indirect
	github.com/btcsuite/btcd/btcec/v2 v2.3.4 // indirect
	github.com/bytedance/sonic v1.12.3 // indirect
	github.com/bytedance/sonic/loader v0.2.0 // indirect
	github.com/cenkalti/backoff/v4 v4.2.1 // indirect
	github.com/cespare/xxhash/v2 v2.3.0 // indirect
	github.com/chzyer/readline v1.5.1 // indirect
	github.com/cloudwego/base64x v0.1.4 // indirect
	github.com/cloudwego/iasm v0.2.0 // indirect
	github.com/cockroachdb/apd/v3 v3.2.1 // indirect
	github.com/cockroachdb/errors v1.11.3 // indirect
	github.com/cockroachdb/fifo v0.0.0-20240606204812-0bbfbd93a7ce // indirect
	github.com/cockroachdb/logtags v0.0.0-20230118201751-21c54148d20b // indirect
	github.com/cockroachdb/pebble v1.1.2 // indirect
	github.com/cockroachdb/redact v1.1.5 // indirect
	github.com/cockroachdb/tokenbucket v0.0.0-20230807174530-cc333fc44b06 // indirect
	github.com/cometbft/cometbft v0.38.17 // indirect
	github.com/cometbft/cometbft-db v1.0.1 // indirect
	github.com/consensys/bavard v0.1.13 // indirect
	github.com/consensys/gnark-crypto v0.12.1 // indirect
	github.com/cosmos/btcutil v1.0.5 // indirect
	github.com/cosmos/cosmos-db v1.1.1 // indirect
	github.com/cosmos/cosmos-proto v1.0.0-beta.5 // indirect
	github.com/cosmos/go-bip39 v1.0.0 // indirect
	github.com/cosmos/gogogateway v1.2.0 // indirect
	github.com/cosmos/iavl v1.2.4 // indirect
	github.com/cosmos/ics23/go v0.11.0 // indirect
	github.com/cosmos/ledger-cosmos-go v0.14.0 // indirect
	github.com/crate-crypto/go-kzg-4844 v1.0.0 // indirect
	github.com/danieljoos/wincred v1.1.2 // indirect
	github.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc // indirect
	github.com/deckarep/golang-set v1.8.0 // indirect
	github.com/deckarep/golang-set/v2 v2.6.0 // indirect
	github.com/decred/base58 v1.0.4 // indirect
	github.com/decred/dcrd/crypto/blake256 v1.0.1 // indirect
	github.com/decred/dcrd/dcrec/secp256k1/v2 v2.0.1 // indirect
	github.com/decred/dcrd/dcrec/secp256k1/v4 v4.3.0 // indirect
	github.com/desertbit/timer v0.0.0-20180107155436-c41aec40b27f // indirect
	github.com/dgraph-io/badger/v4 v4.5.1 // indirect
	github.com/dgraph-io/ristretto/v2 v2.1.0 // indirect
	github.com/distribution/reference v0.5.0 // indirect
	github.com/docker/distribution v2.8.2+incompatible // indirect
	github.com/docker/go-connections v0.5.0 // indirect
	github.com/docker/go-units v0.5.0 // indirect
	github.com/dustin/go-humanize v1.0.1 // indirect
	github.com/emicklei/dot v1.6.2 // indirect
	github.com/ethereum/c-kzg-4844 v1.0.0 // indirect
	github.com/ethereum/go-ethereum v1.14.5 // indirect
	github.com/fatih/color v1.16.0 // indirect
	github.com/felixge/httpsnoop v1.0.4 // indirect
	github.com/fsnotify/fsnotify v1.7.0 // indirect
	github.com/fxamacker/cbor/v2 v2.5.0 // indirect
	github.com/getsentry/sentry-go v0.27.0 // indirect
	github.com/go-kit/kit v0.13.0 // indirect
	github.com/go-kit/log v0.2.1 // indirect
	github.com/go-logfmt/logfmt v0.6.0 // indirect
	github.com/go-logr/logr v1.4.2 // indirect
	github.com/go-logr/stdr v1.2.2 // indirect
	github.com/go-ole/go-ole v1.3.0 // indirect
	github.com/go-webauthn/x v0.1.4 // indirect
	github.com/goccy/go-json v0.10.2 // indirect
	github.com/godbus/dbus v0.0.0-20190726142602-4481cbc300e2 // indirect
	github.com/gogo/googleapis v1.4.1 // indirect
	github.com/gogo/protobuf v1.3.3 // indirect
	github.com/gogo/status v1.1.0 // indirect
	github.com/golang-jwt/jwt/v5 v5.1.0 // indirect
	github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect
	github.com/golang/mock v1.6.0 // indirect
	github.com/golang/protobuf v1.5.4 // indirect
	github.com/golang/snappy v0.0.5-0.20220116011046-fa5810519dcb // indirect
	github.com/google/btree v1.1.3 // indirect
	github.com/google/flatbuffers v24.12.23+incompatible // indirect

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.mod:151-300
	github.com/google/go-cmp v0.6.0 // indirect
	github.com/google/go-tpm v0.9.0 // indirect
	github.com/google/gofuzz v1.2.0 // indirect
	github.com/google/orderedcode v0.0.1 // indirect
	github.com/google/s2a-go v0.1.7 // indirect
	github.com/google/uuid v1.6.0 // indirect
	github.com/googleapis/enterprise-certificate-proxy v0.3.2 // indirect
	github.com/googleapis/gax-go/v2 v2.12.5 // indirect
	github.com/gorilla/handlers v1.5.2 // indirect
	github.com/gorilla/mux v1.8.1 // indirect
	github.com/gorilla/websocket v1.5.3 // indirect
	github.com/grpc-ecosystem/go-grpc-middleware v1.4.0 // indirect
	github.com/grpc-ecosystem/grpc-gateway v1.16.0 // indirect
	github.com/gsterjov/go-libsecret v0.0.0-20161001094733-a6f4afe4910c // indirect
	github.com/gtank/merlin v0.1.1 // indirect
	github.com/gtank/ristretto255 v0.1.2 // indirect
	github.com/hashicorp/go-cleanhttp v0.5.2 // indirect
	github.com/hashicorp/go-getter v1.7.5 // indirect
	github.com/hashicorp/go-hclog v1.5.0 // indirect
	github.com/hashicorp/go-immutable-radix v1.3.1 // indirect
	github.com/hashicorp/go-metrics v0.5.3 // indirect
	github.com/hashicorp/go-plugin v1.5.2 // indirect
	github.com/hashicorp/go-safetemp v1.0.0 // indirect
	github.com/hashicorp/go-version v1.7.0 // indirect
	github.com/hashicorp/golang-lru v1.0.2 // indirect
	github.com/hashicorp/golang-lru/v2 v2.0.7 // indirect
	github.com/hashicorp/hcl v1.0.0 // indirect
	github.com/hashicorp/yamux v0.1.1 // indirect
	github.com/hdevalence/ed25519consensus v0.1.0 // indirect
	github.com/holiman/uint256 v1.2.4 // indirect
	github.com/huandu/skiplist v1.2.0 // indirect
	github.com/iancoleman/strcase v0.3.0 // indirect
	github.com/improbable-eng/grpc-web v0.15.0 // indirect
	github.com/inconshreveable/mousetrap v1.1.0 // indirect
	github.com/ipfs/go-cid v0.4.1 // indirect
	github.com/jmespath/go-jmespath v0.4.0 // indirect
	github.com/jmhodges/levigo v1.0.0 // indirect
	github.com/klauspost/compress v1.17.11 // indirect
	github.com/klauspost/cpuid/v2 v2.2.7 // indirect
	github.com/kr/pretty v0.3.1 // indirect
	github.com/kr/text v0.2.0 // indirect
	github.com/lestrrat-go/backoff/v2 v2.0.8 // indirect
	github.com/lestrrat-go/blackmagic v1.0.2 // indirect
	github.com/lestrrat-go/httpcc v1.0.1 // indirect
	github.com/lestrrat-go/httprc v1.0.5 // indirect
	github.com/lestrrat-go/iter v1.0.2 // indirect
	github.com/lestrrat-go/jwx/v2 v2.0.21 // indirect
	github.com/lestrrat-go/option v1.0.1 // indirect
	github.com/lib/pq v1.10.9 // indirect
	github.com/libp2p/go-buffer-pool v0.1.0 // indirect
	github.com/libp2p/go-libp2p v0.31.0 // indirect
	github.com/linxGnu/grocksdb v1.9.3 // indirect
	github.com/magiconair/properties v1.8.7 // indirect
	github.com/manifoldco/promptui v0.9.0 // indirect
	github.com/mattn/go-colorable v0.1.13 // indirect
	github.com/mattn/go-isatty v0.0.20 // indirect
	github.com/mimoo/StrobeGo v0.0.0-20220103164710-9a04d6ca976b // indirect
	github.com/minio/highwayhash v1.0.3 // indirect
	github.com/minio/sha256-simd v1.0.1 // indirect
	github.com/misko9/go-substrate-rpc-client/v4 v4.0.0-20240603204351-26b456ae3afe // indirect
	github.com/mitchellh/go-homedir v1.1.0 // indirect
	github.com/mitchellh/go-testing-interface v1.14.1 // indirect
	github.com/mitchellh/mapstructure v1.5.0 // indirect
	github.com/mmcloughlin/addchain v0.4.0 // indirect
	github.com/morikuni/aec v1.0.0 // indirect
	github.com/mr-tron/base58 v1.2.0 // indirect
	github.com/mtibben/percent v0.2.1 // indirect
	github.com/multiformats/go-base32 v0.1.0 // indirect
	github.com/multiformats/go-base36 v0.2.0 // indirect
	github.com/multiformats/go-multiaddr v0.11.0 // indirect
	github.com/multiformats/go-multibase v0.2.0 // indirect
	github.com/multiformats/go-multicodec v0.9.0 // indirect
	github.com/multiformats/go-multihash v0.2.3 // indirect
	github.com/multiformats/go-varint v0.0.7 // indirect
	github.com/munnerz/goautoneg v0.0.0-20191010083416-a7dc8b61c822 // indirect
	github.com/ncruces/go-strftime v0.1.9 // indirect
	github.com/oasisprotocol/curve25519-voi v0.0.0-20230904125328-1f23a7beb09a // indirect
	github.com/oklog/run v1.1.0 // indirect
	github.com/opencontainers/go-digest v1.0.0 // indirect
	github.com/opencontainers/image-spec v1.1.0-rc5 // indirect
	github.com/pelletier/go-toml v1.9.5 // indirect
	github.com/pelletier/go-toml/v2 v2.2.2 // indirect
	github.com/petermattis/goid v0.0.0-20240813172612-4fcff4a6cae7 // indirect
	github.com/pierrec/xxHash v0.1.5 // indirect
	github.com/pkg/errors v0.9.1 // indirect
	github.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 // indirect
	github.com/prometheus/client_golang v1.20.5 // indirect
	github.com/prometheus/client_model v0.6.1 // indirect
	github.com/prometheus/common v0.62.0 // indirect
	github.com/prometheus/procfs v0.15.1 // indirect
	github.com/rcrowley/go-metrics v0.0.0-20201227073835-cf1acfcdf475 // indirect
	github.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect
	github.com/rogpeppe/go-internal v1.12.0 // indirect
	github.com/rs/cors v1.11.1 // indirect
	github.com/rs/zerolog v1.33.0 // indirect
	github.com/sagikazarmark/locafero v0.4.0 // indirect
	github.com/sagikazarmark/slog-shim v0.1.0 // indirect
	github.com/sasha-s/go-deadlock v0.3.5 // indirect
	github.com/segmentio/asm v1.2.0 // indirect
	github.com/shamaton/msgpack/v2 v2.2.0 // indirect
	github.com/shirou/gopsutil v3.21.4-0.20210419000835-c7a38de76ee5+incompatible // indirect
	github.com/sourcegraph/conc v0.3.0 // indirect
	github.com/spaolacci/murmur3 v1.1.0 // indirect
	github.com/spf13/afero v1.11.0 // indirect
	github.com/spf13/cast v1.7.1 // indirect
	github.com/spf13/cobra v1.8.1 // indirect
	github.com/spf13/pflag v1.0.5 // indirect
	github.com/spf13/viper v1.19.0 // indirect
	github.com/subosito/gotenv v1.6.0 // indirect
	github.com/supranational/blst v0.3.13 // indirect
	github.com/syndtr/goleveldb v1.0.1-0.20220721030215-126854af5e6d // indirect
	github.com/tendermint/go-amino v0.16.0 // indirect
	github.com/tidwall/btree v1.7.0 // indirect
	github.com/tidwall/gjson v1.17.1 // indirect
	github.com/tidwall/match v1.1.1 // indirect
	github.com/tidwall/pretty v1.2.0 // indirect
	github.com/tklauser/go-sysconf v0.3.12 // indirect
	github.com/tklauser/numcpus v0.6.1 // indirect
	github.com/twitchyliquid64/golang-asm v0.15.1 // indirect
	github.com/tyler-smith/go-bip32 v1.0.0 // indirect
	github.com/tyler-smith/go-bip39 v1.1.0 // indirect
	github.com/ulikunitz/xz v0.5.11 // indirect
	github.com/x448/float16 v0.8.4 // indirect
	github.com/zondax/hid v0.9.2 // indirect
	github.com/zondax/ledger-go v0.14.3 // indirect
	go.etcd.io/bbolt v1.4.0-alpha.0.0.20240404170359-43604f3112c5 // indirect
	go.opencensus.io v0.24.0 // indirect
	go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.49.0 // indirect
	go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.49.0 // indirect
	go.opentelemetry.io/otel v1.32.0 // indirect
	go.opentelemetry.io/otel/metric v1.32.0 // indirect
	go.opentelemetry.io/otel/trace v1.32.0 // indirect
	go.uber.org/multierr v1.11.0 // indirect
	golang.org/x/arch v0.0.0-20210923205945-b76863e36670 // indirect
	golang.org/x/crypto v0.32.0 // indirect
	golang.org/x/exp v0.0.0-20240719175910-8a7402abbf56 // indirect
	golang.org/x/mod v0.19.0 // indirect
	golang.org/x/net v0.34.0 // indirect
	golang.org/x/oauth2 v0.24.0 // indirect
	golang.org/x/sync v0.10.0 // indirect
	golang.org/x/sys v0.29.0 // indirect
	golang.org/x/term v0.28.0 // indirect
	golang.org/x/text v0.21.0 // indirect
	golang.org/x/time v0.5.0 // indirect
	golang.org/x/tools v0.23.0 // indirect
	google.golang.org/api v0.186.0 // indirect
	google.golang.org/genproto v0.0.0-20240701130421-f6361c86f094 // indirect
	google.golang.org/genproto/googleapis/api v0.0.0-20241202173237-19429a94021a // indirect
	google.golang.org/genproto/googleapis/rpc v0.0.0-20241202173237-19429a94021a // indirect
	google.golang.org/grpc v1.70.0 // indirect

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/go.mod:301-318
	gopkg.in/ini.v1 v1.67.0 // indirect
	gopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce // indirect
	gopkg.in/yaml.v2 v2.4.0 // indirect
	gopkg.in/yaml.v3 v3.0.1 // indirect
	gotest.tools/v3 v3.5.1 // indirect
	lukechampine.com/blake3 v1.2.1 // indirect
	modernc.org/gc/v3 v3.0.0-20240107210532-573471604cb6 // indirect
	modernc.org/libc v1.52.1 // indirect
	modernc.org/mathutil v1.6.0 // indirect
	modernc.org/memory v1.8.0 // indirect
	modernc.org/sqlite v1.30.1 // indirect
	modernc.org/strutil v1.2.0 // indirect
	modernc.org/token v1.1.0 // indirect
	nhooyr.io/websocket v1.8.10 // indirect
	pgregory.net/rapid v1.1.0 // indirect
	rsc.io/tmplfunc v0.0.3 // indirect
	sigs.k8s.io/yaml v1.4.0 // indirect
)

=== File: integration_tests/jwt_aa_test.go ===

-- Chunk 1 --
// jwt_aa_test.go:33-182
func TestJWTAbstractAccount(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// load the test private key
	privateKeyBz, err := os.ReadFile("./integration_tests/testdata/keys/jwtRS256.key")
	require.NoError(t, err)
	privateKey, err := jwt.ParseRSAPrivateKeyFromPEM(privateKeyBz)
	require.NoError(t, err)
	t.Logf("private key: %v", privateKey)

	// log the test public key
	publicKey, err := jwk.New(privateKey)
	require.NoError(t, err)
	publicKey, err = publicKey.PublicKey()
	require.NoError(t, err)
	publicKeyJSON, err := json.Marshal(publicKey)
	require.NoError(t, err)
	t.Logf("public key: %s", publicKeyJSON)

	// build the jwk key
	testKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	require.NoError(t, err)
	err = testKey.Set("alg", "RS256")
	require.NoError(t, err)
	testKeyPublic, err := testKey.PublicKey()
	require.NoError(t, err)
	testPublicKeyJSON, err := json.Marshal(testKeyPublic)
	require.NoError(t, err)

	// deploy the key to the jwk module
	aud := "integration-test-project"

	createAudienceClaimHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience-claim",
		aud,
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience claim hash: %s", createAudienceClaimHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", createAudienceClaimHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	createAudienceHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience",
		aud,
		string(testPublicKeyJSON),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience hash: %s", createAudienceHash)

	// deploy the contract
	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	audienceQuery, err := ExecQuery(t, ctx, xion.GetNode(), "jwk", "list-audience")
	t.Logf("audiences: \n%s", audienceQuery)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	sub := "integration-test-user"

	authenticatorDetails := map[string]interface{}{}
	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud
	authenticatorDetails["id"] = 0

	authenticator := map[string]interface{}{}
	authenticator["Jwt"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["authenticator"] = authenticator

	// predict the contract address so it can be verified
	salt := "0"
	creatorAddr := types.AccAddress(xionUser.Address())
	codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
	require.NoError(t, err)
	predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
	t.Logf("predicted address: %s", predictedAddr.String())

	// b64 the contract address to use as the transaction hash
	signature := base64.StdEncoding.EncodeToString([]byte(predictedAddr.String()))

	now := time.Now()
	fiveAgo := now.Add(-time.Second * 5)
	inFive := now.Add(time.Minute * 5)

	auds := jwt.ClaimStrings{aud}
	token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	output, err := token.SignedString(privateKey)
	require.NoError(t, err)
	t.Logf("signed token: %s", output)

	authenticatorDetails["token"] = []byte(output)
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)
	t.Logf("inst msg: %s", string(instantiateMsgStr))

	// register the account
	t.Logf("registering account: %s", instantiateMsgStr)
	registerCmd := []string{
		"abstract-account", "register",
		codeIDStr, string(instantiateMsgStr),
		"--salt", salt,
		"--funds", "10000uxion",

-- Chunk 2 --
// jwt_aa_test.go:183-332
		"--chain-id", xion.Config().ChainID,
	}
	t.Logf("sender: %s", xionUser.FormattedAddress())
	t.Logf("register cmd: %s", registerCmd)

	txHash, err := ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), registerCmd...)
	require.NoError(t, err)
	t.Logf("tx hash: %s", txHash)

	contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
	require.NoError(t, err)

	contract := contractsResponse["contracts"].([]interface{})[0].(string)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)
	newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000), newBalance.Int64())

	// get the account from the chain. there might be a better way to do this
	accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
		"auth", "account", contract)
	require.NoError(t, err)
	t.Logf("account response: %s", accountResponse)

	ac, ok := accountResponse["account"]
	require.True(t, ok)

	ac2, ok := ac.(map[string]interface{})
	require.True(t, ok)

	acData, ok := ac2["value"]
	require.True(t, ok)

	accountJSON, err := json.Marshal(acData)
	require.NoError(t, err)

	var account aatypes.AbstractAccount
	err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
	require.NoError(t, err)

	// create the raw tx
	sendMsg := fmt.Sprintf(`
	{
	 "body": {
	   "messages": [
	     {
	       "@type": "/cosmos.bank.v1beta1.MsgSend",
	       "from_address": "%s",
	       "to_address": "%s",
	       "amount": [
	         {
	           "denom": "%s",
	           "amount": "1337"
	         }
	       ]
	     }
	   ],
	   "memo": "",
	   "timeout_height": "0",
	   "extension_options": [],
	   "non_critical_extension_options": []
	 },
	 "auth_info": {
	   "signer_infos": [],
	   "fee": {
	     "amount": [],
	     "gas_limit": "200000",
	     "payer": "",
	     "granter": ""
	   },
	   "tip": null
	 },
	 "signatures": []
	}
		`, contract, xionUser.FormattedAddress(), "uxion")

	tx, err := xion.Config().EncodingConfig.TxConfig.TxJSONDecoder()([]byte(sendMsg))
	require.NoError(t, err)

	// create the sign bytes

	pubKey := account.GetPubKey()
	anyPk, err := codectypes.NewAnyWithValue(pubKey)
	require.NoError(t, err)
	signerData := txsigning.SignerData{
		Address:       account.GetAddress().String(),
		ChainID:       xion.Config().ChainID,
		AccountNumber: account.GetAccountNumber(),
		Sequence:      account.GetSequence(),
		PubKey: &anypb.Any{
			TypeUrl: anyPk.TypeUrl,
			Value:   anyPk.Value,
		}, // NOTE: NilPubKey
	}

	txBuilder, err := xion.Config().EncodingConfig.TxConfig.WrapTxBuilder(tx)
	require.NoError(t, err)

	sigData := signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: nil,
	}

	sig := signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}

	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	builtTx := txBuilder.GetTx()
	adaptableTx, ok := builtTx.(authsigning.V2AdaptableTx)
	if !ok {
		panic(fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", builtTx))
	}
	txData := adaptableTx.GetSigningTxData()

	signBytes, err := xion.Config().EncodingConfig.TxConfig.SignModeHandler().GetSignBytes(
		ctx,
		signingv1beta1.SignMode(signing.SignMode_SIGN_MODE_DIRECT),
		signerData, txData)
	require.NoError(t, err)

	// our signature is the sha256 of the signbytes
	signatureBz := sha256.Sum256(signBytes)
	signature = base64.StdEncoding.EncodeToString(signatureBz[:])

	// we need to create a new valid token, making sure the time works
	now = time.Now()
	fiveAgo = now.Add(-time.Second * 5)
	inFive = now.Add(time.Minute * 5)

	token = jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	signedTokenStr, err := token.SignedString(privateKey)
	require.NoError(t, err)

-- Chunk 3 --
// jwt_aa_test.go:333-364

	// add the auth index to the signature
	signedTokenBz := []byte(signedTokenStr)
	sigBytes := append([]byte{0}, signedTokenBz...)

	sigData = signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: sigBytes,
	}

	sig = signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}
	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	jsonTx, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(txBuilder.GetTx())
	require.NoError(t, err)
	t.Logf("json tx: %s", jsonTx)

	output, err = ExecBroadcast(t, ctx, xion.GetNode(), jsonTx)
	require.NoError(t, err)
	t.Logf("output: %s", output)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	newBalance, err = xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000-1337), newBalance.Int64())
}

=== File: integration_tests/account_migration_test.go ===

-- Chunk 1 --
// account_migration_test.go:38-106
func TestAbstractAccountMigration(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals, ModifyGenesisAAAllowedCodeIDs}, [][]string{{votingPeriod, maxDepositPeriod}, {votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// prepare the JWT key and data
	fp, err := os.Getwd()
	require.NoError(t, err)

	// deploy the contract
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64-previous.wasm"))
	require.NoError(t, err)

	predictedAddrs := addAccounts(t, ctx, xion, 50, codeIDStr, xionUser)

	// deploy the new contract
	newCodeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	// retrieve the new hash
	newCodeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", newCodeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", newCodeResp)

	CosmosChainUpgradeTest(t, &td, "xion", "upgrade", "v6")
	// todo: validate that verification or tx submission still works

	newCodeResp, err = ExecQuery(t, ctx, td.xionChain.GetNode(),
		"wasm", "code-info", newCodeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %+v", newCodeResp)

	err = testutil.WaitForBlocks(ctx, int(blocksAfterUpgrade), td.xionChain)
	require.NoError(t, err, "chain did not produce blocks after upgrade")

	for _, predictedAddr := range predictedAddrs {
		rawUpdatedContractInfo, err := ExecQuery(t, ctx, td.xionChain.GetNode(),
			"wasm", "contract", predictedAddr.String())
		require.NoError(t, err)
		t.Logf("updated contract info: %s", rawUpdatedContractInfo)

		updatedContractInfo := rawUpdatedContractInfo["contract_info"].(map[string]interface{})
		updatedCodeID := updatedContractInfo["code_id"].(string)
		require.Equal(t, updatedCodeID, newCodeIDStr)
	}
}

-- Chunk 2 --
// account_migration_test.go:108-230
func addAccounts(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, noOfAccounts int, codeIDStr string, xionUser ibc.Wallet) []sdk.AccAddress {
	predictedAddrs := make([]sdk.AccAddress, 0)
	sub := "integration-test-user"
	aud := "integration-test-project"

	authenticatorDetails := map[string]string{}
	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud

	authenticator := map[string]interface{}{}
	authenticator["Jwt"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["id"] = 0
	instantiateMsg["authenticator"] = authenticator

	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	for i := 0; i < noOfAccounts; i++ {
		salt := fmt.Sprintf("%d", i)
		creatorAddr := types.AccAddress(xionUser.Address())
		codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
		require.NoError(t, err)
		predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
		t.Logf("predicted address: %s", predictedAddr.String())

		privateKeyBz, err := os.ReadFile("./integration_tests/testdata/keys/jwtRS256.key")
		require.NoError(t, err)
		privateKey, err := jwt.ParseRSAPrivateKeyFromPEM(privateKeyBz)
		require.NoError(t, err)
		t.Logf("private key: %v", privateKey)

		publicKey, err := jwk.New(privateKey)
		require.NoError(t, err)
		publicKeyJSON, err := json.Marshal(publicKey)
		require.NoError(t, err)
		t.Logf("public key: %s", publicKeyJSON)

		// sha256 the contract addr, as it expects
		signatureBz := sha256.Sum256([]byte(predictedAddr.String()))
		signature := base64.StdEncoding.EncodeToString(signatureBz[:])

		now := time.Now()
		fiveAgo := now.Add(-time.Second * 5)
		inFive := now.Add(time.Minute * 5)

		auds := jwt.ClaimStrings{aud}
		token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
			"iss":              aud,
			"sub":              sub,
			"aud":              auds,
			"exp":              inFive.Unix(),
			"nbf":              fiveAgo.Unix(),
			"iat":              fiveAgo.Unix(),
			"transaction_hash": signature,
		})
		t.Logf("jwt claims: %v", token)

		// sign the JWT with the predefined key
		output, err := token.SignedString(privateKey)
		require.NoError(t, err)
		t.Logf("signed token: %s", output)

		instantiateMsg["signature"] = []byte(output)
		instantiateMsgStr, err := json.Marshal(instantiateMsg)
		require.NoError(t, err)
		t.Logf("inst msg: %s", string(instantiateMsgStr))

		// register the account
		t.Logf("registering account: %s", instantiateMsgStr)
		registerCmd := []string{
			"abstract-account", "register",
			codeIDStr, string(instantiateMsgStr),
			"--salt", salt,
			"--funds", "10000uxion",
			"--chain-id", xion.Config().ChainID,
		}
		t.Logf("sender: %s", xionUser.FormattedAddress())
		t.Logf("register cmd: %s", registerCmd)

		txHash, err := ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), registerCmd...)
		require.NoError(t, err)
		t.Logf("tx hash: %s", txHash)

		contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
		require.NoError(t, err)

		contract := contractsResponse["contracts"].([]interface{})[0].(string)

		err = testutil.WaitForBlocks(ctx, 1, xion)
		require.NoError(t, err)
		newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
		require.NoError(t, err)
		require.Equal(t, int64(10_000), newBalance)

		// get the account from the chain. there might be a better way to do this
		accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
			"auth", "account", contract)
		require.NoError(t, err)
		t.Logf("account response: %s", accountResponse)

		ac, ok := accountResponse["account"]
		require.True(t, ok)

		ac2, ok := ac.(map[string]interface{})
		require.True(t, ok)

		acData, ok := ac2["value"]
		require.True(t, ok)

		accountJSON, err := json.Marshal(acData)
		require.NoError(t, err)

		var account aatypes.AbstractAccount
		err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
		require.NoError(t, err)
		predictedAddrs = append(predictedAddrs, predictedAddr)
	}
	return predictedAddrs
}

-- Chunk 3 --
// account_migration_test.go:232-381
func TestSingleAbstractAccountMigration(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	xionUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "default", deployerMnemonic, fundAmount, xion)
	require.NoError(t, err)
	currentHeight, _ := xion.Height(ctx)
	err = testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// load the test private key
	privateKeyBz, err := os.ReadFile("./integration_tests/testdata/keys/jwtRS256.key")
	require.NoError(t, err)
	privateKey, err := jwt.ParseRSAPrivateKeyFromPEM(privateKeyBz)
	require.NoError(t, err)
	t.Logf("private key: %v", privateKey)

	// log the test public key
	publicKey, err := jwk.New(privateKey)
	require.NoError(t, err)
	publicKey, err = publicKey.PublicKey()
	require.NoError(t, err)
	publicKeyJSON, err := json.Marshal(publicKey)
	require.NoError(t, err)
	t.Logf("public key: %s", publicKeyJSON)

	// build the jwk key
	testKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	require.NoError(t, err)
	err = testKey.Set("alg", "RS256")
	require.NoError(t, err)
	testKeyPublic, err := testKey.PublicKey()
	require.NoError(t, err)
	testPublicKeyJSON, err := json.Marshal(testKeyPublic)
	require.NoError(t, err)

	// deploy the key to the jwk module
	aud := "integration-test-project"

	createAudienceClaimHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience-claim",
		aud,
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience claim hash: %s", createAudienceClaimHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", createAudienceClaimHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	createAudienceHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience",
		aud,
		string(testPublicKeyJSON),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience hash: %s", createAudienceHash)

	// Store Wasm Contracts
	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "account_updatable-aarch64-previous.wasm"))
	require.NoError(t, err)
	t.Logf("loaded previous contract at ID %s", codeIDStr)

	migrateTargetCodeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)
	t.Logf("loaded new contract at ID %s", migrateTargetCodeIDStr)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	sub := "integration-test-user"

	authenticatorDetails := map[string]interface{}{}
	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud
	// authenticatorDetails["id"] = 0

	authenticator := map[string]interface{}{}
	authenticator["Jwt"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["id"] = 0
	instantiateMsg["authenticator"] = authenticator

	// predict the contract address so it can be verified
	salt := "0"
	creatorAddr := types.AccAddress(xionUser.Address())
	codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
	require.NoError(t, err)
	predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
	t.Logf("predicted address: %s", predictedAddr.String())

	// b64 the contract address to use as the transaction hash
	signatureBz := sha256.Sum256([]byte(predictedAddr.String()))
	signature := base64.StdEncoding.EncodeToString(signatureBz[:])

	now := time.Now()
	fiveAgo := now.Add(-time.Second * 5)
	inFive := now.Add(time.Minute * 5)

	auds := jwt.ClaimStrings{aud}
	token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	output, err := token.SignedString(privateKey)
	require.NoError(t, err)
	t.Logf("signed token: %s", output)

	instantiateMsg["signature"] = []byte(output)
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)
	t.Logf("inst msg: %s", string(instantiateMsgStr))

	// register the account

-- Chunk 4 --
// account_migration_test.go:382-531
	t.Logf("registering account: %s", instantiateMsgStr)
	registerCmd := []string{
		"abstract-account", "register",
		codeIDStr, string(instantiateMsgStr),
		"--salt", salt,
		"--funds", "10000uxion",
		"--chain-id", xion.Config().ChainID,
	}
	t.Logf("sender: %s", xionUser.FormattedAddress())
	t.Logf("register cmd: %s", registerCmd)

	txHash, err := ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), registerCmd...)
	require.NoError(t, err)
	t.Logf("tx hash: %s", txHash)

	contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
	require.NoError(t, err)

	contract := contractsResponse["contracts"].([]interface{})[0].(string)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)
	newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000), newBalance.Int64())

	// get the account from the chain. there might be a better way to do this
	accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
		"auth", "account", contract)
	require.NoError(t, err)
	t.Logf("account response: %s", accountResponse)

	ac, ok := accountResponse["account"]
	require.True(t, ok)

	ac2, ok := ac.(map[string]interface{})
	require.True(t, ok)

	acData, ok := ac2["value"]
	require.True(t, ok)

	accountJSON, err := json.Marshal(acData)
	require.NoError(t, err)

	var account aatypes.AbstractAccount
	err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
	require.NoError(t, err)

	// Generate Msg Send without signatures
	jsonMsg := RawJSONMsgMigrateContract(account.GetAddress().String(), migrateTargetCodeIDStr)
	require.NoError(t, err)
	require.True(t, json.Valid(jsonMsg))

	tx, err := xion.Config().EncodingConfig.TxConfig.TxJSONDecoder()([]byte(jsonMsg))
	require.NoError(t, err)

	pubKey := account.GetPubKey()
	anyPk, err := codectypes.NewAnyWithValue(pubKey)
	require.NoError(t, err)
	signerData := txsigning.SignerData{
		Address:       account.GetAddress().String(),
		ChainID:       xion.Config().ChainID,
		AccountNumber: account.GetAccountNumber(),
		Sequence:      account.GetSequence(),
		PubKey: &anypb.Any{
			TypeUrl: anyPk.TypeUrl,
			Value:   anyPk.Value,
		}, // NOTE: NilPubKey
	}

	txBuilder, err := xion.Config().EncodingConfig.TxConfig.WrapTxBuilder(tx)
	require.NoError(t, err)

	sigData := signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: nil,
	}

	sig := signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}

	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	builtTx := txBuilder.GetTx()
	adaptableTx, ok := builtTx.(authsigning.V2AdaptableTx)
	if !ok {
		panic(fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", builtTx))
	}
	txData := adaptableTx.GetSigningTxData()

	signBytes, err := xion.Config().EncodingConfig.TxConfig.SignModeHandler().GetSignBytes(
		ctx,
		signingv1beta1.SignMode(signing.SignMode_SIGN_MODE_DIRECT),
		signerData, txData)
	require.NoError(t, err)

	// our signature is the sha256 of the signbytes
	signatureBz = sha256.Sum256(signBytes)
	signature = base64.StdEncoding.EncodeToString(signatureBz[:])

	// we need to create a new valid token, making sure the time works
	now = time.Now()
	fiveAgo = now.Add(-time.Second * 5)
	inFive = now.Add(time.Minute * 5)

	token = jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	signedTokenStr, err := token.SignedString(privateKey)
	require.NoError(t, err)

	// add the auth index to the signature
	signedTokenBz := []byte(signedTokenStr)
	sigBytes := append([]byte{0}, signedTokenBz...)

	sigData = signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: sigBytes,
	}

	sig = signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}
	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	jsonTx, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(txBuilder.GetTx())
	require.NoError(t, err)
	t.Logf("json tx: %s", jsonTx)

	output, err = ExecBroadcast(t, ctx, xion.GetNode(), jsonTx)
	require.NoError(t, err)
	t.Logf("output: %s", output)

	err = testutil.WaitForBlocks(ctx, 2, xion)

-- Chunk 5 --
// account_migration_test.go:532-543
	require.NoError(t, err)

	// confirm the new contract code ID
	rawUpdatedContractInfo, err := ExecQuery(t, ctx, td.xionChain.GetNode(),
		"wasm", "contract", account.GetAddress().String())
	require.NoError(t, err)
	t.Logf("updated contract info: %s", rawUpdatedContractInfo)

	updatedContractInfo := rawUpdatedContractInfo["contract_info"].(map[string]interface{})
	updatedCodeID := updatedContractInfo["code_id"].(string)
	require.Equal(t, updatedCodeID, migrateTargetCodeIDStr)
}

=== File: integration_tests/utils.go ===

-- Chunk 1 --
// utils.go:90-90
type ModifyInterChainGenesisFn []func(ibc.ChainConfig, []byte, ...string) ([]byte, error)

-- Chunk 2 --
// utils.go:92-96
type TestData struct {
	xionChain *cosmos.CosmosChain
	ctx       context.Context
	client    *client.Client
}

-- Chunk 3 --
// utils.go:98-135
func RawJSONMsgSend(t *testing.T, from, to, denom string) []byte {
	msg := fmt.Sprintf(`
{
  "body": {
    "messages": [
      {
        "@type": "/cosmos.bank.v1beta1.MsgSend",
        "from_address": "%s",
        "to_address": "%s",
        "amount": [
          {
            "denom": "%s",
            "amount": "100000"
          }
        ]
      }
    ],
    "memo": "",
    "timeout_height": "0",
    "extension_options": [],
    "non_critical_extension_options": []
  },
  "auth_info": {
    "signer_infos": [],
    "fee": {
      "amount": [],
      "gas_limit": "200000",
      "payer": "",
      "granter": ""
    },
    "tip": null
  },
  "signatures": []
}
	`, from, to, denom)
	var rawMsg json.RawMessage = []byte(msg)
	return rawMsg
}

-- Chunk 4 --
// utils.go:137-174
func RawJSONMsgExecContractRemoveAuthenticator(sender string, contract string, index uint64) []byte {
	msg := fmt.Sprintf(`
{
  "body": {
    "messages": [
      {
        "@type": "/cosmwasm.wasm.v1.MsgExecuteContract",
        "sender": "%s",
        "contract": "%s",
        "msg": {
			"remove_auth_method": {
				"id": %d
			}
        },
        "funds": []
      }
    ],
    "memo": "",
    "timeout_height": "0",
    "extension_options": [],
    "non_critical_extension_options": []
  },
  "auth_info": {
    "signer_infos": [],
    "fee": {
      "amount": [],
      "gas_limit": "200000",
      "payer": "",
      "granter": ""
    },
    "tip": null
  },
  "signatures": []
}
	`, sender, contract, index)
	var rawMsg json.RawMessage = []byte(msg)
	return rawMsg
}

-- Chunk 5 --
// utils.go:176-210
func RawJSONMsgMigrateContract(sender string, codeID string) []byte {
	msg := fmt.Sprintf(`

{
  "body": {
    "messages": [
    {
      "@type": "/cosmwasm.wasm.v1.MsgMigrateContract",
      "sender": "%s",
      "contract": "%s",
      "code_id": "%s",
      "msg": {}
    }
    ],
    "memo": "",
    "timeout_height": "0",
    "extension_options": [],
    "non_critical_extension_options": []
  },
  "auth_info": {
    "signer_infos": [],
    "fee": {
      "amount": [],
      "gas_limit": "200000",
      "payer": "",
      "granter": ""
    },
    "tip": null
  },
  "signatures": []
}
	`, sender, sender, codeID)
	var rawMsg json.RawMessage = []byte(msg)
	return rawMsg
}

-- Chunk 6 --
// utils.go:212-323
func BuildXionChain(t *testing.T, gas string, modifyGenesis func(ibc.ChainConfig, []byte) ([]byte, error)) TestData {
	ctx := context.Background()

	numFullNodes := 1
	numValidators := 3

	// pulling image from env to foster local dev
	imageTag := os.Getenv("XION_IMAGE")
	println("image tag:", imageTag)
	imageTagComponents := strings.Split(imageTag, ":")

	// config
	cfg := ibc.ChainConfig{
		Images: []ibc.DockerImage{
			{
				Repository: imageTagComponents[0],
				Version:    imageTagComponents[1],
				UidGid:     "1025:1025",
			},
		},
		// GasPrices:              "0.1uxion",
		GasPrices:      gas,
		GasAdjustment:  2.0,
		Type:           "cosmos",
		ChainID:        "xion-1",
		Bin:            "xiond",
		Bech32Prefix:   "xion",
		Denom:          "uxion",
		TrustingPeriod: "336h",
		ModifyGenesis:  modifyGenesis,
		// UsingNewGenesisCommand: true,
		EncodingConfig: func() *moduletestutil.TestEncodingConfig {
			cfg := moduletestutil.MakeTestEncodingConfig(
				auth.AppModuleBasic{},
				genutil.NewAppModuleBasic(genutiltypes.DefaultMessageValidator),
				bank.AppModuleBasic{},
				capability.AppModuleBasic{},
				staking.AppModuleBasic{},
				mint.AppModuleBasic{},
				distr.AppModuleBasic{},
				gov.NewAppModuleBasic(
					[]govclient.ProposalHandler{
						paramsclient.ProposalHandler,
					},
				),
				params.AppModuleBasic{},
				slashing.AppModuleBasic{},
				upgrade.AppModuleBasic{},
				consensus.AppModuleBasic{},
				transfer.AppModuleBasic{},
				ibccore.AppModuleBasic{},
				ibctm.AppModuleBasic{},
				ibcwasm.AppModuleBasic{},
				ccvprovider.AppModuleBasic{},
				ibcsolomachine.AppModuleBasic{},

				// custom
				wasm.AppModuleBasic{},
				authz.AppModuleBasic{},
				tokenfactory.AppModuleBasic{},
				xion.AppModuleBasic{},
				jwk.AppModuleBasic{},
				aa.AppModuleBasic{},
			)
			// TODO: add encoding types here for the modules you want to use
			ibclocalhost.RegisterInterfaces(cfg.InterfaceRegistry)
			return &cfg
		}(),
	}

	// Chain factory
	cf := interchaintest.NewBuiltinChainFactory(zaptest.NewLogger(t), []*interchaintest.ChainSpec{
		{
			Name:          imageTagComponents[0],
			Version:       imageTagComponents[1],
			ChainConfig:   cfg,
			NumValidators: &numValidators,
			NumFullNodes:  &numFullNodes,
		},
	})

	chains, err := cf.Chains(t.Name())
	require.NoError(t, err)

	xion := chains[0].(*cosmos.CosmosChain)

	client, network := interchaintest.DockerSetup(t)

	// Prep Interchain
	ic := interchaintest.NewInterchain().
		AddChain(xion)

	// Log location
	f, err := interchaintest.CreateLogFile(fmt.Sprintf("%d.json", time.Now().Unix()))
	require.NoError(t, err)
	// Reporter/logs
	rep := testreporter.NewReporter(f)
	eRep := rep.RelayerExecReporter(t)

	// Build Interchain
	require.NoError(t, ic.Build(ctx, eRep, interchaintest.InterchainBuildOptions{
		TestName:          t.Name(),
		Client:            client,
		NetworkID:         network,
		BlockDatabaseFile: interchaintest.DefaultBlockDatabaseFilepath(),

		SkipPathCreation: false,
	},
	),
	)
	return TestData{xion, ctx, client}
}

-- Chunk 7 --
// utils.go:330-343
func ModifyInterChainGenesis(fns ModifyInterChainGenesisFn, params [][]string) func(ibc.ChainConfig, []byte) ([]byte, error) {
	return func(chainConfig ibc.ChainConfig, genbz []byte) ([]byte, error) {
		res := genbz
		var err error

		for i, fn := range fns {
			res, err = fn(chainConfig, res, params[i]...)
			if err != nil {
				return nil, fmt.Errorf("failed to modify genesis: %w", err)
			}
		}
		return res, nil
	}
}

-- Chunk 8 --
// utils.go:346-368
func ModifyGenesisShortProposals(chainConfig ibc.ChainConfig, genbz []byte, params ...string) ([]byte, error) {
	g := make(map[string]interface{})
	if err := json.Unmarshal(genbz, &g); err != nil {
		return nil, fmt.Errorf("failed to unmarshal genesis file: %w", err)
	}
	if err := dyno.Set(g, params[0], "app_state", "gov", "params", "voting_period"); err != nil {
		return nil, fmt.Errorf("failed to set voting period in genesis json: %w", err)
	}
	if err := dyno.Set(g, params[1], "app_state", "gov", "params", "max_deposit_period"); err != nil {
		return nil, fmt.Errorf("failed to set voting period in genesis json: %w", err)
	}
	if err := dyno.Set(g, chainConfig.Denom, "app_state", "gov", "params", "min_deposit", 0, "denom"); err != nil {
		return nil, fmt.Errorf("failed to set voting period in genesis json: %w", err)
	}
	if err := dyno.Set(g, "100", "app_state", "gov", "params", "min_deposit", 0, "amount"); err != nil {
		return nil, fmt.Errorf("failed to set voting period in genesis json: %w", err)
	}
	out, err := json.Marshal(g)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal genesis bytes to json: %w", err)
	}
	return out, nil
}

-- Chunk 9 --
// utils.go:370-383
func ModifyGenesispacketForwardMiddleware(chainConfig ibc.ChainConfig, genbz []byte, params ...string) ([]byte, error) {
	g := make(map[string]interface{})
	if err := json.Unmarshal(genbz, &g); err != nil {
		return nil, fmt.Errorf("failed to unmarshal genesis file: %w", err)
	}
	if err := dyno.Set(g, "0.0", "app_state", "packetfowardmiddleware", "params", "fee_percentage"); err != nil {
		return nil, fmt.Errorf("failed to set voting period in genesis json: %w", err)
	}
	out, err := json.Marshal(g)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal genesis bytes to json: %w", err)
	}
	return out, nil
}

-- Chunk 10 --
// utils.go:386-405
func ModifyGenesisInflation(chainConfig ibc.ChainConfig, genbz []byte, params ...string) ([]byte, error) {
	g := make(map[string]interface{})
	if err := json.Unmarshal(genbz, &g); err != nil {
		return nil, fmt.Errorf("failed to unmarshal genesis file: %w", err)
	}
	if err := dyno.Set(g, params[0], "app_state", "mint", "params", "inflation_min"); err != nil {
		return nil, fmt.Errorf("failed to set inflation in genesis json: %w", err)
	}
	if err := dyno.Set(g, params[1], "app_state", "mint", "params", "inflation_max"); err != nil {
		return nil, fmt.Errorf("failed to set inflation in genesis json: %w", err)
	}
	if err := dyno.Set(g, params[2], "app_state", "mint", "params", "inflation_rate_change"); err != nil {
		return nil, fmt.Errorf("failed to set rate of inflation change in genesis json: %w", err)
	}
	out, err := json.Marshal(g)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal genesis bytes to json: %w", err)
	}
	return out, nil
}

-- Chunk 11 --
// utils.go:407-424
func ModifyGenesisAAAllowedCodeIDs(chainConfig ibc.ChainConfig, genbz []byte, params ...string) ([]byte, error) {
	g := make(map[string]interface{})
	if err := json.Unmarshal(genbz, &g); err != nil {
		return nil, fmt.Errorf("failed to unmarshal genesis file: %w", err)
	}
	if err := dyno.Set(g, []int64{1}, "app_state", "abstractaccount", "params", "allowed_code_ids"); err != nil {
		return nil, fmt.Errorf("failed to set allowed code ids in genesis json: %w", err)
	}

	if err := dyno.Set(g, false, "app_state", "abstractaccount", "params", "allow_all_code_ids"); err != nil {
		return nil, fmt.Errorf("failed to set allow all code ids in genesis json: %w", err)
	}
	out, err := json.Marshal(g)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal genesis bytes to json: %w", err)
	}
	return out, nil
}

-- Chunk 12 --
// utils.go:427-459
func getTotalCoinSupplyInBank(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, denom string, blockHeight uint64) string {
	if blockHeight == 0 {
		// No history is required so use the most recent block height
		bHeight, err := xion.Height(ctx)
		require.NoError(t, err)
		blockHeight = uint64(bHeight)
		require.Greater(t, blockHeight, 0)
	}

	/*
	 * Response is of the structure
	 * {"supply":[{"denom":"uxion","amount":"110000002059725"}]}
	 */
	jsonRes := make(map[string]interface{})
	queryRes, _, err := xion.GetNode().ExecQuery(ctx, "bank", "total", "--height", strconv.FormatInt(int64(blockHeight), 10))
	require.NoError(t, err)

	require.NoError(t, json.Unmarshal(queryRes, &jsonRes))

	// Presuming we are the only denom on the chain then the returned array only has one Coin type ours (uxion)
	totalSupply, err := dyno.GetSlice(jsonRes, "supply")
	require.NoError(t, err)
	xionCoin := totalSupply[0]
	require.NotEmpty(t, xionCoin)
	// Make sure we selected the uxion denom
	xionCoinDenom, err := dyno.GetString(xionCoin, "denom")
	require.NoError(t, err)
	require.Equal(t, xionCoinDenom, denom)
	// Get the returned amount
	initialXionSupply, err := dyno.GetString(xionCoin, "amount")
	require.NoError(t, err)
	return initialXionSupply
}

-- Chunk 13 --
// utils.go:462-493
func getAddressBankBalanceAtHeight(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, address string, denom string, blockHeight uint64) string {
	if blockHeight == 0 {
		bHeight, err := xion.Height(ctx)
		require.NoError(t, err)
		blockHeight = uint64(bHeight)
		require.Greater(t, blockHeight, 0)
	}

	/*
	 * Response is of the structure
	 * {"supply":[{"denom":"uxion","amount":"110000002059725"}]}
	 */
	jsonRes := make(map[string]interface{})
	queryRes, _, err := xion.GetNode().ExecQuery(ctx, "bank", "balances", address, "--height", strconv.FormatInt(int64(blockHeight), 10))
	require.NoError(t, err)

	require.NoError(t, json.Unmarshal(queryRes, &jsonRes))

	balances, err := dyno.GetSlice(jsonRes, "balances")
	require.NoError(t, err)
	if len(balances) == 0 {
		return "0"
	}
	// Make sure we selected the uxion denom
	balanceDenom, err := dyno.GetString(balances[0], "denom")
	require.NoError(t, err)
	require.Equal(t, balanceDenom, denom)
	balance, err := dyno.GetString(balances[0], "amount")
	require.NoError(t, err)
	t.Logf("Balance for address %s: %s", address, balance)
	return balance
}

-- Chunk 14 --
// utils.go:496-523
func GetModuleAddress(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, moduleName string) string {
	/*
		* Response is of the type
		* {
			"account": {
				"@type": "/cosmos.auth.v1beta1.ModuleAccount",
				"base_account": {
				"address": "xion1jv65s3grqf6v6jl3dp4t6c9t9rk99cd89k77l5",
				"pub_key": null,
				"account_number": "3",
				"sequence": "0"
				},
				"name": "distribution",
				"permissions": []
			}
			}
	*/
	jsonRes := make(map[string]interface{})
	queryRes, _, err := xion.GetNode().ExecQuery(ctx, "auth", "module-account", moduleName)
	require.NoError(t, err)

	require.NoError(t, json.Unmarshal(queryRes, &jsonRes))

	moduleAddress, err := dyno.GetString(jsonRes, "account", "value", "address")
	require.NoError(t, err)
	t.Logf("%s module address: %s", moduleName, moduleAddress)
	return moduleAddress
}

-- Chunk 15 --
// utils.go:526-549
func GetBlockAnnualProvision(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, denom string, blockHeight uint64) math.LegacyDec {
	if blockHeight == 0 {
		bHeight, err := xion.Height(ctx)
		require.NoError(t, err)
		blockHeight = uint64(bHeight)
		require.Greater(t, blockHeight, 0)
	}

	// Query the current block provision
	// Response is a string
	var annualProvision json.Number
	queryRes, _, err := xion.GetNode().ExecQuery(ctx, "mint", "annual-provisions", "--height", strconv.FormatInt(int64(blockHeight), 10))
	require.NoError(t, err)
	require.NoError(t, json.Unmarshal(queryRes, &annualProvision))
	// Query the block per year
	params := make(map[string]interface{})
	queryRes, _, err = xion.GetNode().ExecQuery(ctx, "mint", "params")
	require.NoError(t, err)
	require.NoError(t, json.Unmarshal(queryRes, &params))
	blocksPerYear, err := dyno.GetInteger(params, "blocks_per_year")
	require.NoError(t, err)
	// Calculate the block provision
	return math.LegacyMustNewDecFromStr(annualProvision.String()).QuoInt(math.NewInt(blocksPerYear))
}

-- Chunk 16 --
// utils.go:571-621
func MintModuleTestHarness(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, blockHeight int, assertion func(*testing.T, math.LegacyDec, int64, int64)) {
	// Get bank supply at previous height
	previousXionBankSupply, err := strconv.ParseInt(getTotalCoinSupplyInBank(t, xion, ctx, xion.Config().Denom, uint64(blockHeight-1)), 10, 64)
	t.Logf("Previous Xion bank supply: %d", previousXionBankSupply)
	require.NoError(t, err, "bank supply should be convertible to an int64")
	// Get bank supply at current height
	currentXionBankSupply, err := strconv.ParseInt(getTotalCoinSupplyInBank(t, xion, ctx, xion.Config().Denom, uint64(blockHeight)), 10, 64)
	t.Logf("Current Xion bank supply: %d", currentXionBankSupply)
	require.NoError(t, err, "bank supply should be convertible to an int64")
	tokenChange := currentXionBankSupply - previousXionBankSupply

	// Get the distribution module account address
	distributionModuleAddress := GetModuleAddress(t, xion, ctx, "distribution")
	// Get distribution module account balance in previous height
	previousDistributionModuleBalance, err := strconv.ParseInt(getAddressBankBalanceAtHeight(t, xion, ctx, distributionModuleAddress, xion.Config().Denom, uint64(blockHeight-1)), 10, 64)
	require.NoError(t, err, "distribution module balance should be convertible to an int64")
	// Get distribution module account balance in current height
	currentDistributionModuleBalance, err := strconv.ParseInt(getAddressBankBalanceAtHeight(t, xion, ctx, distributionModuleAddress, xion.Config().Denom, uint64(blockHeight)), 10, 64)
	require.NoError(t, err, "distribution module balance should be convertible to an int64")

	delta := currentDistributionModuleBalance - previousDistributionModuleBalance

	// Fees Accrued is the total fees in a block. Since the tokens in the distribution module account
	// are the fees and the minted tokens, we can compute the fees accrued by subtracting the token change
	// from the delta
	feesAccrued := delta - tokenChange
	t.Logf("Fees accrued: %d", feesAccrued)

	// Get the block provision. This is the minted tokens for the block for validators and delegator
	blockProvision := GetBlockAnnualProvision(t, xion, ctx, xion.Config().Denom, uint64(blockHeight))

	assertion(t, blockProvision, feesAccrued, tokenChange)
	/*
		if blockProvision.TruncateInt().GT(math.NewInt(feesAccrued)) {
			// We have minted tokens because the fees accrued is less than the block provision
			mintedTokens := blockProvision.TruncateInt().Sub(math.NewInt(feesAccrued))
			t.Logf("Minted tokens: %d and Token change: %d", mintedTokens.Int64(), int64(tokenChange))
			require.Equal(t, mintedTokens, math.NewInt(int64(tokenChange)))
		} else if blockProvision.TruncateInt().LT(math.NewInt(feesAccrued)) {
			// We have burned tokens because the fees accrued is greater than the block provision so the fees
			// accrued are used to pay validators and the remaining is burned
			burnedTokens := math.NewInt(feesAccrued).Sub(blockProvision.TruncateInt())
			t.Logf("Burned tokens: %d and Token change: %d", burnedTokens.Int64(), tokenChange)
			require.Equal(t, burnedTokens, math.NewInt(tokenChange).Abs())
		} else {
			// We have not minted or burned tokens but just used all fees accrued to pay validators
			require.Equal(t, math.NewInt(0), math.NewInt(tokenChange))
			t.Logf("No minted or Burned tokens. Token change: %d", tokenChange)
		}
	*/
}

-- Chunk 17 --
// utils.go:625-636
func VerifyMintModuleTestRandomBlocks(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, assertion func(*testing.T, math.LegacyDec, int64, int64)) {
	currentBlockHeight, err := xion.Height(ctx)
	require.NoError(t, err)
	require.GreaterOrEqual(t, currentBlockHeight, int64(12))
	// Get a random number from 1 to the (currentBlockHeight - 10)
	randomHeight := rand.Intn(int(currentBlockHeight)-11) + 2 // we start from 2 because we need at least 2 blocks to run the test

	for i := randomHeight; i < randomHeight+10; i++ {
		t.Logf("Current random height: %d", i)
		MintModuleTestHarness(t, xion, ctx, i, assertion)
	}
}

-- Chunk 18 --
// utils.go:639-646
func VerifyMintModuleTest(t *testing.T, xion *cosmos.CosmosChain, ctx context.Context, txHashes []string, assertion func(*testing.T, math.LegacyDec, int64, int64)) {
	for i, txHash := range txHashes {
		txResp, err := authTx.QueryTx(xion.GetNode().CliContext(), txHash)
		require.NoError(t, err)
		t.Logf("Bank send msg %d BH: %d", i, txResp.Height)
		MintModuleTestHarness(t, xion, ctx, int(txResp.Height)+1, assertion) // check my block and the next one
	}
}

-- Chunk 19 --
// utils.go:648-659
func TxCommandOverrideGas(t *testing.T, tn *cosmos.ChainNode, keyName, gas string, command ...string) []string {
	command = append([]string{"tx"}, command...)
	return tn.NodeCommand(append(command,
		"--from", keyName,
		"--gas-prices", gas,
		"--gas-adjustment", fmt.Sprint(tn.Chain.Config().GasAdjustment),
		"--gas", "auto",
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"-y",
	)...)
}

-- Chunk 20 --
// utils.go:661-680
func ExecTx(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, keyName string, command ...string) (string, error) {
	cmd := TxCommandOverrideGas(t, tn, keyName, tn.Chain.Config().GasPrices, command...)
	t.Logf("cmd: %s", cmd)
	stdout, _, err := tn.Exec(ctx, cmd, nil)
	if err != nil {
		return "", err
	}
	output := cosmos.CosmosTx{}
	err = json.Unmarshal(stdout, &output)
	if err != nil {
		return "", err
	}
	if output.Code != 0 {
		return output.TxHash, fmt.Errorf("transaction failed with code %d: %s", output.Code, output.RawLog)
	}
	if err := testutil.WaitForBlocks(ctx, 2, tn); err != nil {
		return "", err
	}
	return output.TxHash, nil
}

-- Chunk 21 --
// utils.go:682-701
func ExecTxWithGas(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, keyName string, gas string, command ...string) (string, error) {
	cmd := TxCommandOverrideGas(t, tn, keyName, gas, command...)
	t.Logf("cmd: %s", cmd)
	stdout, _, err := tn.Exec(ctx, cmd, nil)
	if err != nil {
		return "", err
	}
	output := cosmos.CosmosTx{}
	err = json.Unmarshal(stdout, &output)
	if err != nil {
		return "", err
	}
	if output.Code != 0 {
		return output.TxHash, fmt.Errorf("transaction failed with code %d: %s", output.Code, output.RawLog)
	}
	if err := testutil.WaitForBlocks(ctx, 2, tn); err != nil {
		return "", err
	}
	return output.TxHash, nil
}

-- Chunk 22 --
// utils.go:703-717
func GenerateTx(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, keyName string, command ...string) (string, error) {
	cmd := append([]string{"tx"}, command...)
	cmd = tn.NodeCommand(append(cmd,
		"--from", keyName,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"--generate-only",
	)...)
	t.Logf("cmd: %s", cmd)
	stdout, _, err := tn.Exec(ctx, cmd, nil)
	if err != nil {
		return "", err
	}
	return string(stdout), nil
}

-- Chunk 23 --
// utils.go:719-729
func ExecQuery(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, command ...string) (map[string]interface{}, error) {
	jsonRes := make(map[string]interface{})
	t.Logf("querying with cmd: %s", command)
	output, _, err := tn.ExecQuery(ctx, command...)
	if err != nil {
		return jsonRes, err
	}
	require.NoError(t, json.Unmarshal(output, &jsonRes))

	return jsonRes, nil
}

-- Chunk 24 --
// utils.go:731-740
func ExecBin(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, command ...string) (map[string]interface{}, error) {
	jsonRes := make(map[string]interface{})
	output, _, err := tn.ExecBin(ctx, command...)
	if err != nil {
		return jsonRes, err
	}
	require.NoError(t, json.Unmarshal(output, &jsonRes))

	return jsonRes, nil
}

-- Chunk 25 --
// utils.go:742-746
func ExecBinStr(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, command ...string) (string, error) {
	output, _, err := tn.ExecBin(ctx, command...)
	require.NoError(t, err)
	return string(output), nil
}

-- Chunk 26 --
// utils.go:748-755
func ExecBinRaw(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, command ...string) ([]byte, error) {
	output, _, err := tn.ExecBin(ctx, command...)
	if err != nil {
		return output, err
	}

	return output, nil
}

-- Chunk 27 --
// utils.go:757-769
func ExecBroadcast(_ *testing.T, ctx context.Context, tn *cosmos.ChainNode, tx []byte) (string, error) {
	if err := tn.WriteFile(ctx, tx, "tx.json"); err != nil {
		return "", err
	}

	cmd := tn.NodeCommand("tx", "broadcast", path.Join(tn.HomeDir(), "tx.json"), "--output", "json")

	stdout, _, err := tn.Exec(ctx, cmd, nil)
	if err != nil {
		return "", err
	}
	return string(stdout), err
}

-- Chunk 28 --
// utils.go:771-795
func ExecBroadcastWithFlags(_ *testing.T, ctx context.Context, tn *cosmos.ChainNode, tx []byte, command ...string) (string, error) {
	if err := tn.WriteFile(ctx, tx, "tx.json"); err != nil {
		return "", err
	}
	c := append([]string{"tx", "broadcast", path.Join(tn.HomeDir(), "tx.json")}, command...)
	cmd := tn.NodeCommand(c...)

	stdout, _, err := tn.Exec(ctx, cmd, nil)
	if err != nil {
		return "", err
	}

	output := cosmos.CosmosTx{}
	err = json.Unmarshal(stdout, &output)
	if err != nil {
		return "", err
	}
	if output.Code != 0 {
		return output.TxHash, fmt.Errorf("transaction failed with code %d: %s", output.Code, output.RawLog)
	}
	if err := testutil.WaitForBlocks(ctx, 2, tn); err != nil {
		return "", err
	}
	return output.TxHash, err
}

-- Chunk 29 --
// utils.go:797-804
func UploadFileToContainer(t *testing.T, ctx context.Context, tn *cosmos.ChainNode, file *os.File) error {
	content, err := os.ReadFile(file.Name())
	if err != nil {
		return err
	}
	path := strings.Split(file.Name(), "/")
	return tn.WriteFile(ctx, content, path[len(path)-1])
}

-- Chunk 30 --
// utils.go:806-806
type signOpts struct{}

-- Chunk 31 --
// utils.go:808-810
func (*signOpts) HashFunc() crypto.Hash {
	return crypto.SHA256
}

-- Chunk 32 --
// utils.go:817-834
func getWebAuthNKeys(t *testing.T) (*rsa.PrivateKey, []byte, webauthncose.RSAPublicKeyData) {
	privateKey, _, err := wasmbinding.SetupPublicKeys("./integration_tests/testdata/keys/jwtRS256.key")
	require.NoError(t, err)
	publicKey := privateKey.PublicKey
	publicKeyModulus := publicKey.N.Bytes()
	require.NoError(t, err)
	pubKeyData := webauthncose.RSAPublicKeyData{
		PublicKeyData: webauthncose.PublicKeyData{
			KeyType:   int64(webauthncose.RSAKey),
			Algorithm: int64(webauthncose.AlgRS256),
		},
		Modulus:  publicKeyModulus,
		Exponent: big.NewInt(int64(publicKey.E)).Bytes(),
	}
	publicKeyBuf, err := webauthncbor.Marshal(pubKeyData)
	require.NoError(t, err)
	return privateKey, publicKeyBuf, pubKeyData
}

-- Chunk 33 --
// utils.go:836-851
func CreateWebAuthn(t *testing.T) (webauthn.Config, *webauthn.WebAuthn, error) {
	webAuthnConfig := webauthn.Config{
		RPDisplayName:         "Xion",
		RPID:                  "xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
		RPOrigins:             []string{"https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app"},
		AttestationPreference: "none",
		AuthenticatorSelection: protocol.AuthenticatorSelection{
			AuthenticatorAttachment: protocol.Platform,
			UserVerification:        protocol.VerificationPreferred,
		},
	}
	webAuthn, err := webauthn.New(&webAuthnConfig)
	require.NoError(t, err)

	return webAuthnConfig, webAuthn, nil
}

-- Chunk 34 --
// utils.go:853-936
func CreateWebAuthNAttestationCred(t *testing.T, challenge string) []byte {
	webAuthnConfig, _, err := CreateWebAuthn(t)
	require.NoError(t, err)
	clientData := protocol.CollectedClientData{
		Type:      "webauthn.create",
		Challenge: challenge,
		Origin:    "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
	}

	_, publicKeyBuf, _ := getWebAuthNKeys(t)

	clientDataJSON, err := json.Marshal(clientData)
	require.NoError(t, err)

	RPIDHash := sha256.Sum256([]byte(webAuthnConfig.RPID))
	authData := protocol.AuthenticatorData{
		RPIDHash: RPIDHash[:],
		Counter:  0,
		AttData: protocol.AttestedCredentialData{
			AAGUID:              AAGUID,
			CredentialID:        credentialID,
			CredentialPublicKey: publicKeyBuf,
		},
		Flags: 69,
	}
	authDataBz := append(RPIDHash[:], big.NewInt(69).Bytes()[:]...)
	counterBytes := make([]byte, 4)
	binary.LittleEndian.PutUint32(counterBytes, 0)
	authDataBz = append(authDataBz, counterBytes...)

	var attData []byte

	// Concatenate AAGUID
	attData = append(attData, AAGUID...)

	// Add CredentialIDLength
	credentialIDLengthBytes := make([]byte, 2)
	credentialIDLength := uint16(len(credentialID))
	binary.BigEndian.PutUint16(credentialIDLengthBytes, credentialIDLength)
	attData = append(attData, credentialIDLengthBytes...)

	// Add CredentialID
	attData = append(attData, credentialID...)

	// Add CredentialPublicKey
	attData = append(attData, publicKeyBuf...)

	authDataBz = append(authDataBz, attData...)

	attestationObject := protocol.AttestationObject{
		AuthData:    authData,
		RawAuthData: authDataBz,
		Format:      "none",
	}
	attestationObjectJSON, err := webauthncbor.Marshal(attestationObject)
	require.NoError(t, err)

	attestationResponse := protocol.AuthenticatorAttestationResponse{
		AuthenticatorResponse: protocol.AuthenticatorResponse{
			ClientDataJSON: protocol.URLEncodedBase64(clientDataJSON),
		},
		AttestationObject: attestationObjectJSON,
	}
	_, err = attestationResponse.Parse()
	require.NoError(t, err)

	credentialCreationResponse := protocol.CredentialCreationResponse{
		PublicKeyCredential: protocol.PublicKeyCredential{
			Credential: protocol.Credential{
				ID:   string(credentialID),
				Type: "public-key",
			},
			RawID:                   credentialID,
			AuthenticatorAttachment: string(protocol.Platform),
		},
		AttestationResponse: attestationResponse,
	}
	_, err = credentialCreationResponse.Parse()
	require.NoError(t, err)

	credCreationRes, err := json.Marshal(credentialCreationResponse)
	require.NoError(t, err)
	return credCreationRes
}

-- Chunk 35 --
// utils.go:938-1026
func CreateWebAuthNSignature(t *testing.T, challenge string, address string) []byte {
	webAuthnConfig, _, err := CreateWebAuthn(t)
	require.NoError(t, err)
	privateKey, publicKeyBuf, pubKeyData := getWebAuthNKeys(t)

	webAuthnUser := types.SmartContractUser{
		Address: address,
		Credential: &webauthn.Credential{
			ID:              credentialID,
			AttestationType: "none",
			PublicKey:       publicKeyBuf,
			Transport:       []protocol.AuthenticatorTransport{protocol.Internal},
			Flags: webauthn.CredentialFlags{
				UserPresent:  false,
				UserVerified: false,
			},
			Authenticator: webauthn.Authenticator{
				AAGUID:     AAGUID,
				SignCount:  0,
				Attachment: protocol.Platform,
			},
		},
	}

	RPIDHash := sha256.Sum256([]byte(webAuthnConfig.RPID))
	clientData := protocol.CollectedClientData{
		Type:      "webauthn.get",
		Challenge: challenge,
		Origin:    "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
	}
	clientDataJSON, err := json.Marshal(clientData)
	require.NoError(t, err)
	clientDataHash := sha256.Sum256(clientDataJSON)
	authDataBz := append(RPIDHash[:], big.NewInt(69).Bytes()[:]...)
	counterBytes := make([]byte, 4)
	binary.LittleEndian.PutUint32(counterBytes, 0)
	authDataBz = append(authDataBz, counterBytes...)

	var attData []byte

	// Concatenate AAGUID
	attData = append(attData, AAGUID...)

	// Add CredentialIDLength
	credentialIDLengthBytes := make([]byte, 2)
	credentialIDLength := uint16(len(credentialID))
	binary.BigEndian.PutUint16(credentialIDLengthBytes, credentialIDLength)
	attData = append(attData, credentialIDLengthBytes...)

	// Add CredentialID
	attData = append(attData, credentialID...)

	// Add CredentialPublicKey
	attData = append(attData, publicKeyBuf...)

	authDataBz = append(authDataBz, attData...)
	require.NoError(t, err)

	signData := append(authDataBz[:], clientDataHash[:]...)
	signHash := sha256.Sum256(signData)
	signature, err := privateKey.Sign(cryptoRand.Reader, signHash[:], &signOpts{})
	require.NoError(t, err)
	verified, err := pubKeyData.Verify(signData[:], signature)
	require.NoError(t, err)
	require.True(t, verified)

	credentialAssertionData := &protocol.CredentialAssertionResponse{
		PublicKeyCredential: protocol.PublicKeyCredential{
			Credential: protocol.Credential{
				ID:   string(credentialID),
				Type: "public-key",
			},
			RawID:                   credentialID,
			AuthenticatorAttachment: string(protocol.Platform),
		},
		AssertionResponse: protocol.AuthenticatorAssertionResponse{
			AuthenticatorResponse: protocol.AuthenticatorResponse{
				ClientDataJSON: protocol.URLEncodedBase64(clientDataJSON),
			},
			AuthenticatorData: authDataBz,
			Signature:         signature,
			UserHandle:        webAuthnUser.WebAuthnID(),
		},
	}
	// validate signature
	assertionResponse, err := json.Marshal(credentialAssertionData)
	require.NoError(t, err)
	return assertionResponse
}

-- Chunk 36 --
// utils.go:1028-1053
func CreateTokenFactoryDenom(t *testing.T, ctx context.Context, chain *cosmos.CosmosChain, user ibc.Wallet, subDenomName, feeCoin string) (fullDenom string) {
	// TF gas to create cost 2mil, so we set to 2.5 to be safe
	cmd := []string{
		"xiond", "tx", "tokenfactory", "create-denom", subDenomName,
		"--node", chain.GetRPCAddress(),
		"--home", chain.HomeDir(),
		"--chain-id", chain.Config().ChainID,
		"--from", user.KeyName(),
		"--gas", "2500000",
		"--keyring-dir", chain.HomeDir(),
		"--keyring-backend", keyring.BackendTest,
		"-y",
	}

	if feeCoin != "" {
		cmd = append(cmd, "--fees", feeCoin)
	}

	_, _, err := chain.Exec(ctx, cmd, nil)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 2, chain)
	require.NoError(t, err)

	return "factory/" + user.FormattedAddress() + "/" + subDenomName
}

-- Chunk 37 --
// utils.go:1055-1074
func MintTokenFactoryDenom(t *testing.T, ctx context.Context, chain *cosmos.CosmosChain, admin ibc.Wallet, amount uint64, fullDenom string) {
	denom := strconv.FormatUint(amount, 10) + fullDenom

	// mint new tokens to the account
	cmd := []string{
		"xiond", "tx", "tokenfactory", "mint", denom,
		"--node", chain.GetRPCAddress(),
		"--home", chain.HomeDir(),
		"--chain-id", chain.Config().ChainID,
		"--from", admin.KeyName(),
		"--keyring-dir", chain.HomeDir(),
		"--keyring-backend", keyring.BackendTest,
		"-y",
	}
	_, _, err := chain.Exec(ctx, cmd, nil)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 2, chain)
	require.NoError(t, err)
}

-- Chunk 38 --
// utils.go:1076-1099
func MintToTokenFactoryDenom(t *testing.T, ctx context.Context, chain *cosmos.CosmosChain, admin ibc.Wallet, toWallet ibc.Wallet, amount uint64, fullDenom string) {
	denom := strconv.FormatUint(amount, 10) + fullDenom

	receiver := toWallet.FormattedAddress()

	t.Log("minting", denom, "to", receiver)

	// mint new tokens to the account
	cmd := []string{
		"xiond", "tx", "tokenfactory", "mint-to", receiver, denom,
		"--node", chain.GetRPCAddress(),
		"--home", chain.HomeDir(),
		"--chain-id", chain.Config().ChainID,
		"--from", admin.KeyName(),
		"--keyring-dir", chain.HomeDir(),
		"--keyring-backend", keyring.BackendTest,
		"-y",
	}
	_, _, err := chain.Exec(ctx, cmd, nil)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 2, chain)
	require.NoError(t, err)
}

-- Chunk 39 --
// utils.go:1101-1117
func TransferTokenFactoryAdmin(t *testing.T, ctx context.Context, chain *cosmos.CosmosChain, currentAdmin ibc.Wallet, newAdminBech32 string, fullDenom string) {
	cmd := []string{
		"xiond", "tx", "tokenfactory", "change-admin", fullDenom, newAdminBech32,
		"--node", chain.GetRPCAddress(),
		"--home", chain.HomeDir(),
		"--chain-id", chain.Config().ChainID,
		"--from", currentAdmin.KeyName(),
		"--keyring-dir", chain.HomeDir(),
		"--keyring-backend", keyring.BackendTest,
		"-y",
	}
	_, _, err := chain.Exec(ctx, cmd, nil)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 2, chain)
	require.NoError(t, err)
}

-- Chunk 40 --
// utils.go:1119-1136
func GetTokenFactoryAdmin(t *testing.T, ctx context.Context, chain *cosmos.CosmosChain, fullDenom string) string {
	cmd := []string{
		"xiond", "query", "tokenfactory", "denom-authority-metadata", fullDenom,
		"--node", chain.GetRPCAddress(),
		//"--chain-id", chain.Config().ChainID,
		"--output", "json",
	}
	stdout, _, err := chain.Exec(ctx, cmd, nil)
	require.NoError(t, err)

	results := &tokenfactorytypes.QueryDenomAuthorityMetadataResponse{}
	err = json.Unmarshal(stdout, results)
	require.NoError(t, err)

	t.Log(results)

	return results.AuthorityMetadata.Admin
}

-- Chunk 41 --
// utils.go:1139-1166
func OverrideConfiguredChainsYaml(t *testing.T) *os.File {
	// Extract the embedded file to a temporary file
	tempFile, err := os.CreateTemp("", "configuredChains-*.yaml")
	if err != nil {
		t.Errorf("error creating temporary file: %v", err)
	}

	content, err := configuredChainsFile.ReadFile("configuredChains.yaml")
	if err != nil {
		t.Errorf("error reading embedded file: %v", err)
	}

	if _, err := tempFile.Write(content); err != nil {
		t.Errorf("error writing to temporary file: %v", err)
	}
	if err := tempFile.Close(); err != nil {
		t.Errorf("error closing temporary file: %v", err)
	}

	// Set the environment variable to the path of the temporary file
	err = os.Setenv("IBCTEST_CONFIGURED_CHAINS", tempFile.Name())
	t.Logf("set env var IBCTEST_CONFIGURED_CHAINS to %s", tempFile.Name())
	if err != nil {
		t.Errorf("error setting env var: %v", err)
	}

	return tempFile
}

=== File: integration_tests/configuredChains.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/configuredChains.yaml:1-45
## NOTICE: This file gets embedded into interchaintest binary.
## Set the environment variable: IBCTEST_CONFIGURED_CHAINS to a path
## to use custom versions of this file

axelar:
  name: axelar
  type: cosmos
  bin: axelard
  bech32-prefix: axelar
  denom: uaxl
  gas-prices: 0.01uaxl
  gas-adjustment: 1.3
  trusting-period: 168h
  images:
    - repository: ghcr.io/strangelove-ventures/heighliner/axelar
      uid-gid: 1025:1025
  no-host-mount: false

osmosis:
  name: osmosis
  type: cosmos
  bin: osmosisd
  bech32-prefix: osmo
  denom: uosmo
  gas-prices: 0.0025uosmo
  gas-adjustment: 1.3
  trusting-period: 336h
  images:
    - repository: ghcr.io/strangelove-ventures/heighliner/osmosis
      uid-gid: 1025:1025
  no-host-mount: false

xion:
  name: xion
  type: cosmos
  bin: xiond
  bech32-prefix: xion
  denom: uxion
  gas-prices: 0.0uxion
  gas-adjustment: 1.3
  trusting-period: 336h
  images:
    - repository: ghcr.io/burnt-labs/xion/xion
      uid-gid: 1025:1025
  no-host-mount: false

=== File: integration_tests/simulate_test.go ===

-- Chunk 1 --
// simulate_test.go:35-184
func TestSimulate(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// load the test private key
	privateKeyBz, err := os.ReadFile("./integration_tests/testdata/keys/jwtRS256.key")
	require.NoError(t, err)
	privateKey, err := jwt.ParseRSAPrivateKeyFromPEM(privateKeyBz)
	require.NoError(t, err)
	t.Logf("private key: %v", privateKey)

	// log the test public key
	publicKey, err := jwk.New(privateKey)
	require.NoError(t, err)
	publicKey, err = publicKey.PublicKey()
	require.NoError(t, err)
	publicKeyJSON, err := json.Marshal(publicKey)
	require.NoError(t, err)
	t.Logf("public key: %s", publicKeyJSON)

	// build the jwk key
	testKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	require.NoError(t, err)
	err = testKey.Set("alg", "RS256")
	require.NoError(t, err)
	testKeyPublic, err := testKey.PublicKey()
	require.NoError(t, err)
	testPublicKeyJSON, err := json.Marshal(testKeyPublic)
	require.NoError(t, err)

	// deploy the key to the jwk module
	aud := "integration-test-project"

	createAudienceClaimHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience-claim",
		aud,
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience claim hash: %s", createAudienceClaimHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", createAudienceClaimHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	createAudienceHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience",
		aud,
		string(testPublicKeyJSON),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience hash: %s", createAudienceHash)

	// deploy the contract
	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	audienceQuery, err := ExecQuery(t, ctx, xion.GetNode(), "jwk", "list-audience")
	t.Logf("audiences: \n%s", audienceQuery)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	sub := "integration-test-user"

	authenticatorDetails := map[string]interface{}{}
	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud
	authenticatorDetails["id"] = 0

	authenticator := map[string]interface{}{}
	authenticator["Jwt"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["authenticator"] = authenticator

	// predict the contract address so it can be verified
	salt := "0"
	creatorAddr := types.AccAddress(xionUser.Address())
	codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
	require.NoError(t, err)
	predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
	t.Logf("predicted address: %s", predictedAddr.String())

	// b64 the contract address to use as the transaction hash
	signature := base64.StdEncoding.EncodeToString([]byte(predictedAddr.String()))

	now := time.Now()
	fiveAgo := now.Add(-time.Second * 5)
	inFive := now.Add(time.Minute * 5)

	auds := jwt.ClaimStrings{aud}
	token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	output, err := token.SignedString(privateKey)
	require.NoError(t, err)
	t.Logf("signed token: %s", output)

	authenticatorDetails["token"] = []byte(output)
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)
	t.Logf("inst msg: %s", string(instantiateMsgStr))

	// register the account
	t.Logf("registering account: %s", instantiateMsgStr)
	registerCmd := []string{
		"abstract-account", "register",
		codeIDStr, string(instantiateMsgStr),
		"--salt", salt,
		"--funds", "10000uxion",

-- Chunk 2 --
// simulate_test.go:185-334
		"--chain-id", xion.Config().ChainID,
	}
	t.Logf("sender: %s", xionUser.FormattedAddress())
	t.Logf("register cmd: %s", registerCmd)

	txHash, err := ExecTx(t, ctx, xion.GetNode(), xionUser.KeyName(), registerCmd...)
	require.NoError(t, err)
	t.Logf("tx hash: %s", txHash)

	contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
	require.NoError(t, err)

	contract := contractsResponse["contracts"].([]interface{})[0].(string)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)
	newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000), newBalance.Int64())

	// get the account from the chain. there might be a better way to do this
	accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
		"auth", "account", contract)
	require.NoError(t, err)
	t.Logf("account response: %s", accountResponse)

	ac, ok := accountResponse["account"]
	require.True(t, ok)

	ac2, ok := ac.(map[string]interface{})
	require.True(t, ok)

	acData, ok := ac2["value"]
	require.True(t, ok)

	accountJSON, err := json.Marshal(acData)
	require.NoError(t, err)

	var account aatypes.AbstractAccount
	err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
	require.NoError(t, err)

	// create the raw tx
	sendMsg := fmt.Sprintf(`
	{
	 "body": {
	   "messages": [
	     {
	       "@type": "/cosmos.bank.v1beta1.MsgSend",
	       "from_address": "%s",
	       "to_address": "%s",
	       "amount": [
	         {
	           "denom": "%s",
	           "amount": "1337"
	         }
	       ]
	     }
	   ],
	   "memo": "",
	   "timeout_height": "0",
	   "extension_options": [],
	   "non_critical_extension_options": []
	 },
	 "auth_info": {
	   "signer_infos": [],
	   "fee": {
	     "amount": [],
	     "gas_limit": "200000",
	     "payer": "",
	     "granter": ""
	   },
	   "tip": null
	 },
	 "signatures": []
	}
		`, contract, xionUser.FormattedAddress(), "uxion")

	tx, err := xion.Config().EncodingConfig.TxConfig.TxJSONDecoder()([]byte(sendMsg))
	require.NoError(t, err)

	// create the sign bytes

	pubKey := account.GetPubKey()
	anyPk, err := codectypes.NewAnyWithValue(pubKey)
	require.NoError(t, err)
	signerData := txsigning.SignerData{
		Address:       account.GetAddress().String(),
		ChainID:       xion.Config().ChainID,
		AccountNumber: account.GetAccountNumber(),
		Sequence:      account.GetSequence(),
		PubKey: &anypb.Any{
			TypeUrl: anyPk.TypeUrl,
			Value:   anyPk.Value,
		}, // NOTE: NilPubKey
	}

	txBuilder, err := xion.Config().EncodingConfig.TxConfig.WrapTxBuilder(tx)
	require.NoError(t, err)

	sigData := signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: nil,
	}

	sig := signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: 0,
	}

	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	builtTx := txBuilder.GetTx()
	adaptableTx, ok := builtTx.(authsigning.V2AdaptableTx)
	if !ok {
		panic(fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", builtTx))
	}
	txData := adaptableTx.GetSigningTxData()

	signBytes, err := xion.Config().EncodingConfig.TxConfig.SignModeHandler().GetSignBytes(
		ctx,
		signingv1beta1.SignMode(signing.SignMode_SIGN_MODE_DIRECT),
		signerData, txData)
	require.NoError(t, err)

	// our signature is the sha256 of the signbytes
	signatureBz := sha256.Sum256(signBytes)
	signature = base64.StdEncoding.EncodeToString(signatureBz[:])

	// we need to create a new valid token, making sure the time works
	now = time.Now()
	fiveAgo = now.Add(-time.Second * 5)
	inFive = now.Add(time.Minute * 5)

	token = jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	signedTokenStr, err := token.SignedString(privateKey)
	require.NoError(t, err)

-- Chunk 3 --
// simulate_test.go:335-360

	// add the auth index to the signature
	signedTokenBz := []byte(signedTokenStr)
	sigBytes := append([]byte{0}, signedTokenBz...)

	sigData = signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: sigBytes,
	}

	sig = signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}
	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	txBytes, err := xion.Config().EncodingConfig.TxConfig.TxEncoder()(txBuilder.GetTx())
	txSvcClient := txtypes.NewServiceClient(xion.GetNode().GrpcConn)
	simRes, err := txSvcClient.Simulate(context.Background(), &txtypes.SimulateRequest{
		TxBytes: txBytes,
	})
	require.NoError(t, err)
	t.Logf("sim res: %s", simRes)
}

=== File: integration_tests/abstract_account_test.go ===

-- Chunk 1 --
// abstract_account_test.go:41-41
type jsonAuthenticator map[string]map[string]string

-- Chunk 2 --
// abstract_account_test.go:43-192
func TestXionAbstractAccountJWTCLI(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// load the test private key
	privateKeyBz, err := os.ReadFile("./integration_tests/testdata/keys/jwtRS256.key")
	require.NoError(t, err)
	privateKey, err := jwt.ParseRSAPrivateKeyFromPEM(privateKeyBz)
	require.NoError(t, err)
	t.Logf("private key: %v", privateKey)

	// log the test public key
	publicKey, err := jwk.New(privateKey)
	require.NoError(t, err)
	publicKey, err = publicKey.PublicKey()
	require.NoError(t, err)
	publicKeyJSON, err := json.Marshal(publicKey)
	require.NoError(t, err)
	t.Logf("public key: %s", publicKeyJSON)

	// build the jwk key
	testKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	require.NoError(t, err)
	err = testKey.Set("alg", "RS256")
	require.NoError(t, err)
	testKeyPublic, err := testKey.PublicKey()
	require.NoError(t, err)
	testPublicKeyJSON, err := json.Marshal(testKeyPublic)
	require.NoError(t, err)

	// deploy the key to the jwk module
	aud := "integration-test-project"

	createAudienceClaimHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience-claim",
		aud,
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience claim hash: %s", createAudienceClaimHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", createAudienceClaimHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	createAudienceHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"jwk", "create-audience",
		aud,
		string(testPublicKeyJSON),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("create audience hash: %s", createAudienceHash)

	// deploy the contract
	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	audienceQuery, err := ExecQuery(t, ctx, xion.GetNode(), "jwk", "list-audience")
	t.Logf("audiences: \n%s", audienceQuery)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeIDStr)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	sub := "integration-test-user"
	depositedFunds := fmt.Sprintf("%d%s", 10000, xion.Config().Denom)

	authenticatorDetails := map[string]interface{}{}
	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud
	authenticatorDetails["id"] = 0

	authenticator := map[string]interface{}{}
	authenticator["Jwt"] = authenticatorDetails

	instantiateMsg := map[string]interface{}{}
	instantiateMsg["authenticator"] = authenticator

	// predict the contract address so it can be verified
	salt := "0"
	creatorAddr := types.AccAddress(xionUser.Address())
	codeHash, err := hex.DecodeString(codeResp["checksum"].(string))
	require.NoError(t, err)
	predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})
	t.Logf("predicted address: %s", predictedAddr.String())

	// b64 the contract address to use as the transaction hash
	signature := base64.StdEncoding.EncodeToString([]byte(predictedAddr.String()))

	now := time.Now()
	fiveAgo := now.Add(-time.Second * 5)
	inFive := now.Add(time.Minute * 5)

	auds := jwt.ClaimStrings{aud}
	token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key
	output, err := token.SignedString(privateKey)
	require.NoError(t, err)
	t.Logf("signed token: %s", output)

	authenticatorDetails["token"] = []byte(output)
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)
	t.Logf("inst msg: %s", string(instantiateMsgStr))

	// register the account

	registeredTxHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "register",
		codeIDStr,

-- Chunk 3 --
// abstract_account_test.go:193-342
		xionUser.KeyName(),
		"--funds", depositedFunds,
		"--salt", "0",
		"--authenticator", "Jwt",
		"--token", output,
		"--sub", sub,
		"--aud", aud,
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("tx hash: %s", registeredTxHash)

	contractsResponse, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contracts", codeIDStr)
	require.NoError(t, err)

	contract := contractsResponse["contracts"].([]interface{})[0].(string)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)
	newBalance, err := xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000), newBalance.Int64())

	// get the account from the chain. there might be a better way to do this
	accountResponse, err := ExecQuery(t, ctx, xion.GetNode(),
		"auth", "account", contract)
	require.NoError(t, err)
	t.Logf("account response: %s", accountResponse)

	ac, ok := accountResponse["account"]
	require.True(t, ok)

	ac2, ok := ac.(map[string]interface{})
	require.True(t, ok)

	acData, ok := ac2["value"]
	require.True(t, ok)

	accountJSON, err := json.Marshal(acData)
	require.NoError(t, err)

	var account aatypes.AbstractAccount
	err = xion.Config().EncodingConfig.Codec.UnmarshalJSON(accountJSON, &account)
	require.NoError(t, err)

	// create the raw tx
	sendMsg := fmt.Sprintf(`
		{
		 "body": {
		   "messages": [
		     {
		       "@type": "/cosmos.bank.v1beta1.MsgSend",
		       "from_address": "%s",
		       "to_address": "%s",
		       "amount": [
		         {
		           "denom": "%s",
		           "amount": "1337"
		         }
		       ]
		     }
		   ],
		   "memo": "",
		   "timeout_height": "0",
		   "extension_options": [],
		   "non_critical_extension_options": []
		 },
		 "auth_info": {
		   "signer_infos": [],
		   "fee": {
		     "amount": [],
		     "gas_limit": "200000",
		     "payer": "",
		     "granter": ""
		   },
		   "tip": null
		 },
		 "signatures": []
		}
			`, contract, xionUser.FormattedAddress(), "uxion")

	tx, err := xion.Config().EncodingConfig.TxConfig.TxJSONDecoder()([]byte(sendMsg))
	require.NoError(t, err)

	// create the sign bytes
	pubKey := account.GetPubKey()
	anyPk, err := codectypes.NewAnyWithValue(pubKey)
	require.NoError(t, err)
	signerData := txsigning.SignerData{
		Address:       account.GetAddress().String(),
		ChainID:       xion.Config().ChainID,
		AccountNumber: account.GetAccountNumber(),
		Sequence:      account.GetSequence(),
		PubKey: &anypb.Any{
			TypeUrl: anyPk.TypeUrl,
			Value:   anyPk.Value,
		}, // NOTE: NilPubKey
	}

	txBuilder, err := xion.Config().EncodingConfig.TxConfig.WrapTxBuilder(tx)
	require.NoError(t, err)

	sigData := signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: nil,
	}

	sig := signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}

	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	builtTx := txBuilder.GetTx()
	adaptableTx, ok := builtTx.(authsigning.V2AdaptableTx)
	if !ok {
		panic(fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", builtTx))
	}
	txData := adaptableTx.GetSigningTxData()

	signBytes, err := xion.Config().EncodingConfig.TxConfig.SignModeHandler().GetSignBytes(
		ctx,
		signingv1beta1.SignMode(signing.SignMode_SIGN_MODE_DIRECT),
		signerData, txData)
	require.NoError(t, err)

	// our signature is the sha256 of the signbytes
	signatureBz := sha256.Sum256(signBytes)
	signature = base64.StdEncoding.EncodeToString(signatureBz[:])

	// we need to create a new valid token, making sure the time works
	now = time.Now()
	fiveAgo = now.Add(-time.Second * 5)
	inFive = now.Add(time.Minute * 5)

	token = jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
		"iss":              aud,
		"sub":              sub,
		"aud":              auds,
		"exp":              inFive.Unix(),
		"nbf":              fiveAgo.Unix(),
		"iat":              fiveAgo.Unix(),
		"transaction_hash": signature,
	})
	t.Logf("jwt claims: %v", token)

	// sign the JWT with the predefined key

-- Chunk 4 --
// abstract_account_test.go:343-376
	signedTokenStr, err := token.SignedString(privateKey)
	require.NoError(t, err)

	// add the auth index to the signature
	signedTokenBz := []byte(signedTokenStr)
	sigBytes := append([]byte{0}, signedTokenBz...)

	sigData = signing.SingleSignatureData{
		SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
		Signature: sigBytes,
	}

	sig = signing.SignatureV2{
		PubKey:   account.GetPubKey(),
		Data:     &sigData,
		Sequence: account.GetSequence(),
	}
	err = txBuilder.SetSignatures(sig)
	require.NoError(t, err)

	jsonTx, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(txBuilder.GetTx())
	require.NoError(t, err)
	t.Logf("json tx: %s", jsonTx)

	output, err = ExecBroadcast(t, ctx, xion.GetNode(), jsonTx)
	require.NoError(t, err)
	t.Logf("output: %s", output)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	newBalance, err = xion.GetBalance(ctx, contract, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, int64(10_000-1337), newBalance.Int64())
}

-- Chunk 5 --
// abstract_account_test.go:378-527
func TestXionAbstractAccount(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	xionUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "default", deployerMnemonic, fundAmount, xion)
	require.NoError(t, err)
	currentHeight, _ := xion.Height(ctx)
	err = testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// Create a Secondary Key For Rotation
	recipientKeyName := "recipient-key"
	err = xion.CreateKey(ctx, recipientKeyName)
	require.NoError(t, err)
	receipientKeyAddressBytes, err := xion.GetAddress(ctx, recipientKeyName)
	require.NoError(t, err)
	recipientKeyAddress, err := types.Bech32ifyAddressBytes(xion.Config().Bech32Prefix, receipientKeyAddressBytes)
	require.NoError(t, err)

	// Get Public Key For Funded Account
	account, err := ExecBin(t, ctx, xion.GetNode(),
		"keys", "show",
		xionUser.KeyName(),
		"--keyring-backend", keyring.BackendTest,
		"-p",
	)
	require.NoError(t, err)
	t.Log("Funded Account:")
	for k, v := range account {
		t.Logf("[%s]: %v", k, v)
	}

	fp, err := os.Getwd()
	require.NoError(t, err)

	// Store Wasm Contract
	codeID, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "account_updatable-aarch64.wasm"))
	require.NoError(t, err)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeID)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	depositedFunds := fmt.Sprintf("%d%s", 100000, xion.Config().Denom)

	registeredTxHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "register",
		codeID,
		xionUser.KeyName(),
		"--funds", depositedFunds,
		"--salt", "0",
		"--authenticator", "Secp256K1",
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("tx hash: %s", registeredTxHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", registeredTxHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)
	aaContractAddr := GetAAContractAddress(t, txDetails)

	contractBalance, err := xion.GetBalance(ctx, aaContractAddr, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100000), contractBalance)

	contractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", aaContractAddr, `{"authenticator_by_i_d":{ "id": 0 }}`)
	require.NoError(t, err)

	pubkey64, ok := contractState["data"].(string)
	require.True(t, ok)
	pubkeyRawJSON, err := base64.StdEncoding.DecodeString(pubkey64)
	require.NoError(t, err)
	var pubKeyMap jsonAuthenticator
	json.Unmarshal(pubkeyRawJSON, &pubKeyMap)
	require.Equal(t, account["key"], pubKeyMap["Secp256K1"]["pubkey"])

	// Generate Msg Send without signatures
	jsonMsg := RawJSONMsgSend(t, aaContractAddr, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.True(t, json.Valid(jsonMsg))

	sendFile, err := os.CreateTemp("", "*-msg-bank-send.json")
	require.NoError(t, err)
	defer os.Remove(sendFile.Name())

	_, err = sendFile.Write(jsonMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), sendFile)
	require.NoError(t, err)

	// Sign and broadcast a transaction
	sendFilePath := strings.Split(sendFile.Name(), "/")
	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), sendFilePath[len(sendFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)

	// Confirm the updated balance
	balance, err := xion.GetBalance(ctx, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100000).Uint64(), balance.Uint64())

	// Generate Key Rotation Msg
	account, err = ExecBin(t, ctx, xion.GetNode(),
		"keys", "show",
		xionUser.KeyName(),
		"--keyring-backend", keyring.BackendTest,
		"-p",
	)

	// add secondary authenticator to account. in this case, the same key but in a different position
	jsonExecMsgStr, err := GenerateTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "add-authenticator", aaContractAddr,
		"--authenticator-id", "1",
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	jsonExecMsg := []byte(jsonExecMsgStr)
	require.True(t, json.Valid(jsonExecMsg))

-- Chunk 6 --
// abstract_account_test.go:528-604

	rotateFile, err := os.CreateTemp("", "*-msg-exec-rotate-key.json")
	require.NoError(t, err)
	defer os.Remove(rotateFile.Name())

	_, err = rotateFile.Write(jsonExecMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), rotateFile)
	require.NoError(t, err)

	rotateFilePath := strings.Split(rotateFile.Name(), "/")

	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), rotateFilePath[len(rotateFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	updatedContractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", aaContractAddr, `{"authenticator_by_i_d":{ "id": 1 }}`)
	require.NoError(t, err)

	updatedPubKey, ok := updatedContractState["data"].(string)
	require.True(t, ok)

	updatedPubKeyRawJSON, err := base64.StdEncoding.DecodeString(updatedPubKey)
	require.NoError(t, err)
	var updatedPubKeyMap jsonAuthenticator

	err = json.Unmarshal(updatedPubKeyRawJSON, &updatedPubKeyMap)
	require.NoError(t, err)
	require.Equal(t, account["key"], updatedPubKeyMap["Secp256K1"]["pubkey"])

	// delete the original key
	jsonExecMsg = RawJSONMsgExecContractRemoveAuthenticator(aaContractAddr, aaContractAddr, 0)
	require.True(t, json.Valid(jsonExecMsg))

	removeFile, err := os.CreateTemp("", "*-msg-exec-remove-key.json")
	require.NoError(t, err)
	defer os.Remove(removeFile.Name())

	_, err = removeFile.Write(jsonExecMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), removeFile)
	require.NoError(t, err)

	removeFilePath := strings.Split(removeFile.Name(), "/")

	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), removeFilePath[len(removeFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
		"--authenticator-id", "1",
	)
	require.NoError(t, err)

	// validate original key was deleted
	updatedContractState, err = ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", aaContractAddr, `{"authenticator_i_ds":{}}`)
	require.NoError(t, err)
	resp := updatedContractState["data"]
	t.Logf("type: %v %T", resp, resp)
	rv := reflect.ValueOf(resp)
	if rv.Kind() == reflect.Slice {
		require.Equal(t, 1, rv.Len())
		require.Equal(t, uint8(1), uint8(rv.Index(0).Interface().(float64)))

	} else {
		require.Fail(t, "response not a slice")
	}
}

-- Chunk 7 --
// abstract_account_test.go:606-623
func GetAAContractAddress(t *testing.T, txDetails map[string]interface{}) string {
	logs, ok := txDetails["events"].([]interface{})
	require.True(t, ok)

	log, ok := logs[9].(map[string]interface{})
	require.True(t, ok)

	attributes, ok := log["attributes"].([]interface{})
	require.True(t, ok)

	attribute, ok := attributes[0].(map[string]interface{})
	require.True(t, ok)

	addr, ok := attribute["value"].(string)
	require.True(t, ok)

	return addr
}

-- Chunk 8 --
// abstract_account_test.go:625-774
func TestXionClientEvent(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	xionUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "default", deployerMnemonic, fundAmount, xion)
	require.NoError(t, err)
	currentHeight, _ := xion.Height(ctx)
	err = testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// Create a Secondary Key For Rotation
	recipientKeyName := "recipient-key"
	err = xion.CreateKey(ctx, recipientKeyName)
	require.NoError(t, err)
	receipientKeyAddressBytes, err := xion.GetAddress(ctx, recipientKeyName)
	require.NoError(t, err)
	recipientKeyAddress, err := types.Bech32ifyAddressBytes(xion.Config().Bech32Prefix, receipientKeyAddressBytes)
	require.NoError(t, err)

	// Get Public Key For Funded Account
	account, err := ExecBin(t, ctx, xion.GetNode(),
		"keys", "show",
		xionUser.KeyName(),
		"--keyring-backend", keyring.BackendTest,
		"-p",
	)
	require.NoError(t, err)
	t.Log("Funded Account:")
	for k, v := range account {
		t.Logf("[%s]: %v", k, v)
	}

	fp, err := os.Getwd()
	require.NoError(t, err)

	// Store Wasm Contract
	codeID, err := xion.StoreContract(ctx, xionUser.FormattedAddress(), path.Join(fp,
		"integration_tests", "testdata", "contracts", "account-wasm-updatable-event-aarch64.wasm"))
	require.NoError(t, err)

	// retrieve the hash
	codeResp, err := ExecQuery(t, ctx, xion.GetNode(),
		"wasm", "code-info", codeID)
	require.NoError(t, err)
	t.Logf("code response: %s", codeResp)

	depositedFunds := fmt.Sprintf("%d%s", 100000, xion.Config().Denom)

	registeredTxHash, err := ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "register",
		codeID,
		xionUser.KeyName(),
		"--funds", depositedFunds,
		"--salt", "0",
		"--authenticator", "Secp256K1",
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	t.Logf("tx hash: %s", registeredTxHash)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", registeredTxHash)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)
	aaContractAddr := GetAAContractAddress(t, txDetails)

	contractBalance, err := xion.GetBalance(ctx, aaContractAddr, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100000), contractBalance)

	contractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", aaContractAddr, `{"authenticator_by_i_d":{ "id": 0 }}`)
	require.NoError(t, err)

	pubkey64, ok := contractState["data"].(string)
	require.True(t, ok)
	pubkeyRawJSON, err := base64.StdEncoding.DecodeString(pubkey64)
	require.NoError(t, err)
	var pubKeyMap jsonAuthenticator
	json.Unmarshal(pubkeyRawJSON, &pubKeyMap)
	require.Equal(t, account["key"], pubKeyMap["Secp256K1"]["pubkey"])

	// Generate Msg Send without signatures
	jsonMsg := RawJSONMsgSend(t, aaContractAddr, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.True(t, json.Valid(jsonMsg))

	sendFile, err := os.CreateTemp("", "*-msg-bank-send.json")
	require.NoError(t, err)
	defer os.Remove(sendFile.Name())

	_, err = sendFile.Write(jsonMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), sendFile)
	require.NoError(t, err)

	// Sign and broadcast a transaction
	sendFilePath := strings.Split(sendFile.Name(), "/")
	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), sendFilePath[len(sendFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)

	err = testutil.WaitForBlocks(ctx, 1, xion)
	require.NoError(t, err)

	// Confirm the updated balance
	balance, err := xion.GetBalance(ctx, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100000).Uint64(), balance.Uint64())

	// Generate Key Rotation Msg
	account, err = ExecBin(t, ctx, xion.GetNode(),
		"keys", "show",
		xionUser.KeyName(),
		"--keyring-backend", keyring.BackendTest,
		"-p",
	)

	// add secondary authenticator to account. in this case, the same key but in a different position
	jsonExecMsgStr, err := GenerateTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "add-authenticator", aaContractAddr,
		"--authenticator-id", "1",
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	jsonExecMsg := []byte(jsonExecMsgStr)
	require.True(t, json.Valid(jsonExecMsg))

-- Chunk 9 --
// abstract_account_test.go:775-863

	rotateFile, err := os.CreateTemp("", "*-msg-exec-rotate-key.json")
	require.NoError(t, err)
	defer os.Remove(rotateFile.Name())

	_, err = rotateFile.Write(jsonExecMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), rotateFile)
	require.NoError(t, err)

	rotateFilePath := strings.Split(rotateFile.Name(), "/")

	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), rotateFilePath[len(rotateFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err)
	updatedContractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "smart", aaContractAddr, `{"authenticator_by_i_d":{ "id": 1 }}`)
	require.NoError(t, err)

	updatedPubKey, ok := updatedContractState["data"].(string)
	require.True(t, ok)

	updatedPubKeyRawJSON, err := base64.StdEncoding.DecodeString(updatedPubKey)
	require.NoError(t, err)
	var updatedPubKeyMap jsonAuthenticator

	err = json.Unmarshal(updatedPubKeyRawJSON, &updatedPubKeyMap)
	require.NoError(t, err)
	require.Equal(t, account["key"], updatedPubKeyMap["Secp256K1"]["pubkey"])

	cometWsClient, err := getCometClient(xion.GetHostRPCAddress()) // Note: add a close function
	require.NoError(t, err)
	fmt.Printf("%+v\n", xion.GetNode())

	err = cometWsClient.Start()
	require.NoError(t, err)

	//eventStream, err := subscribeToEvent(t, ctx, cometTypes.EventTx, cometWsClient)
	eventStream, err := subscribeToEvent(t, ctx, cometWsClient)

	require.NoError(t, err)

	doneChan := make(chan struct{})
	go receiveEvents(t, doneChan, eventStream)

	jsonExecMsgStr, err = GenerateTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "emit", "arbitrary_data", aaContractAddr,
		"--authenticator-id", "0",
		"--chain-id", xion.Config().ChainID,
	)

	require.NoError(t, err)
	jsonExecMsg = []byte(jsonExecMsgStr)
	require.True(t, json.Valid(jsonExecMsg))

	rotateFile, err = os.CreateTemp("", "*-msg-exec-emit.json")
	require.NoError(t, err)
	defer os.Remove(rotateFile.Name())

	_, err = rotateFile.Write(jsonExecMsg)
	require.NoError(t, err)

	err = UploadFileToContainer(t, ctx, xion.GetNode(), rotateFile)
	require.NoError(t, err)

	rotateFilePath = strings.Split(rotateFile.Name(), "/")

	_, err = ExecTx(t, ctx, xion.GetNode(),
		xionUser.KeyName(),
		"xion", "sign",
		xionUser.KeyName(),
		aaContractAddr,
		path.Join(xion.GetNode().HomeDir(), rotateFilePath[len(rotateFilePath)-1]),
		"--chain-id", xion.Config().ChainID,
	)
	require.NoError(t, err) // it's returning an error and it's not throwing
	fmt.Println("we have thrown a transaction")

	//wg.Wait()
	<-doneChan
	stopClient(ctx, cometWsClient)
}

-- Chunk 10 --
// abstract_account_test.go:865-867
func getCometClient(hostAddr string) (cometClient.Client, error) {
	return rpchttp.New(hostAddr, "/websocket")
}

-- Chunk 11 --
// abstract_account_test.go:869-871
func subscribeToEvent(t *testing.T, ctx context.Context, cli cometClient.Client) (<-chan cometRpcCoreTypes.ResultEvent, error) {
	return cli.Subscribe(ctx, "helpers", "message.module='wasm' AND message.action='/cosmwasm.wasm.v1.MsgExecuteContract'")
}

-- Chunk 12 --
// abstract_account_test.go:873-896
func receiveEvents(t *testing.T, done chan<- struct{}, eventStream <-chan cometRpcCoreTypes.ResultEvent) {
	for {
		select {
		case event := <-eventStream:
			fmt.Println("event intercepted")
			contractAddress, ok := event.Events["wasm-account_emit._contract_address"]
			if !ok {
				fmt.Println("not desired event")
				continue
			}
			arbData, ok := event.Events["wasm-account_emit.data"]
			if !ok {
				fmt.Println("not desired event")
				continue
			}
			fmt.Println(contractAddress)
			fmt.Println(arbData)
			done <- struct{}{}
			return
		default:
			continue
		}
	}
}

-- Chunk 13 --
// abstract_account_test.go:898-907
func stopClient(ctx context.Context, cli cometClient.Client) error {
	if err := cli.UnsubscribeAll(ctx, "helpers"); err != nil {
		return err
	}

	if err := cli.Stop(); err != nil {
		return err
	}
	return nil
}

=== File: integration_tests/treasury_test.go ===

-- Chunk 1 --
// treasury_test.go:33-37
type GrantConfig struct {
	Description   string      `json:"description"`
	Authorization ExplicitAny `json:"authorization"`
	Optional      bool        `json:"optional"`
}

-- Chunk 2 --
// treasury_test.go:39-43
type FeeConfig struct {
	Description string       `json:"description"`
	Allowance   *ExplicitAny `json:"allowance,omitempty"`
	Expiration  int32        `json:"expiration,omitempty"`
}

-- Chunk 3 --
// treasury_test.go:44-49
type TreasuryInstantiateMsg struct {
	Admin        types.AccAddress `json:"admin,omitempty"`
	TypeUrls     []string         `json:"type_urls"`
	GrantConfigs []GrantConfig    `json:"grant_configs"`
	FeeConfig    *FeeConfig       `json:"fee_config"`
}

-- Chunk 4 --
// treasury_test.go:51-54
type ExplicitAny struct {
	TypeURL string `json:"type_url"`
	Value   []byte `json:"value"`
}

-- Chunk 5 --
// treasury_test.go:56-205
func TestTreasuryContract(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "treasury-aarch64.wasm"))
	require.NoError(t, err)
	t.Logf("deployed code id: %s", codeIDStr)

	inFive := time.Now().Add(time.Minute * 5)
	testAuth := authz.NewGenericAuthorization("/" + proto.MessageName(&banktypes.MsgSend{}))
	testGrant, err := authz.NewGrant(time.Now(), testAuth, &inFive)
	require.NoError(t, err)

	xionUserAddr, err := types.AccAddressFromBech32(xionUser.FormattedAddress())
	require.NoError(t, err)

	testAllowance := feegrant.BasicAllowance{
		SpendLimit: types.Coins{},
		Expiration: &inFive,
	}

	// NOTE: Create Feegrant
	feeGrant, err := feegrant.NewGrant(xionUserAddr, xionUserAddr, &testAllowance)
	require.NoError(t, err)
	allowanceAny := ExplicitAny{
		TypeURL: feeGrant.Allowance.TypeUrl,
		Value:   feeGrant.Allowance.Value,
	}

	authorizationAny := ExplicitAny{
		TypeURL: testGrant.Authorization.TypeUrl,
		Value:   testGrant.Authorization.Value,
	}

	grantConfig := GrantConfig{
		Description:   "test authorization",
		Authorization: authorizationAny,
		Optional:      false,
	}

	// NOTE: Start the Treasury
	instantiateMsg := TreasuryInstantiateMsg{
		TypeUrls:     []string{testAuth.MsgTypeURL()},
		GrantConfigs: []GrantConfig{grantConfig},
		FeeConfig: &FeeConfig{
			Description: "test fee grant",
			Allowance:   &allowanceAny,
			Expiration:  int32(18000),
		},
	}

	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	treasuryAddr, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	t.Logf("created treasury instance: %s", treasuryAddr)
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	contractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "all", treasuryAddr)
	require.NoError(t, err)
	t.Logf("Contract State: %s", contractState)

	granteeUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "grantee", "", fundAmount, xion)
	require.NoError(t, err)

	granterUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "granter", "", fundAmount, xion)
	require.NoError(t, err)
	t.Logf("granter: %s %s %s", granterUser.KeyName(), granterUser.FormattedAddress(), granterUser.Address())
	require.NoError(t, err)

	// wait for user creation
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	err = xion.SendFunds(ctx, granterUser.KeyName(), ibc.WalletAmount{
		Address: treasuryAddr,
		Denom:   "uxion",
		Amount:  math.NewInt(1000),
	})
	require.NoError(t, err)

	// NOTE: Create AuthZGrant
	authzGrantMsg, err := authz.NewMsgGrant(granterUser.Address(), granteeUser.Address(), testAuth, &inFive)
	require.NoError(t, err)

	executeMsg := map[string]interface{}{}
	feegrantMsg := map[string]interface{}{}
	feegrantMsg["authz_granter"] = granterUser.FormattedAddress()
	feegrantMsg["authz_grantee"] = granteeUser.FormattedAddress()
	executeMsg["deploy_fee_grant"] = feegrantMsg
	executeMsgBz, err := json.Marshal(executeMsg)
	require.NoError(t, err)

	// NOTE: Execute in contract
	contractMsg := wasmtypes.MsgExecuteContract{
		Sender:   granterUser.FormattedAddress(),
		Contract: treasuryAddr,
		Msg:      executeMsgBz,
		Funds:    nil,
	}

	require.NoError(t, err)

	// build the tx
	txBuilder := xion.Config().EncodingConfig.TxConfig.NewTxBuilder()
	err = txBuilder.SetMsgs(authzGrantMsg, &contractMsg)
	require.NoError(t, err)
	txBuilder.SetGasLimit(200000)
	tx := txBuilder.GetTx()

	txJSONStr, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(tx)
	require.NoError(t, err)

	t.Logf("tx: %s", txJSONStr)
	require.True(t, json.Valid([]byte(txJSONStr)))
	sendFile, err := os.CreateTemp("", "*-combo-msg-tx.json")
	require.NoError(t, err)
	defer os.Remove(sendFile.Name())

	_, err = sendFile.Write([]byte(txJSONStr))
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), sendFile)
	require.NoError(t, err)

	sendFilePath := strings.Split(sendFile.Name(), "/")

-- Chunk 6 --
// treasury_test.go:206-308

	signedTx, err := ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "sign", path.Join(xion.GetNode().HomeDir(), sendFilePath[len(sendFilePath)-1]),
		"--from", granterUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"--overwrite",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()))
	require.NoError(t, err)
	t.Logf("signed tx: %s", signedTx)

	// todo: validate that the feegrant was created correctly
	res, err := ExecBroadcastWithFlags(t, ctx, xion.GetNode(), signedTx, "--output", "json")

	require.NoError(t, err)
	t.Logf("broadcasted tx: %s", res)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", res)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	feeGrantDetails, err := ExecQuery(t, ctx, xion.GetNode(), "feegrant", "grants-by-grantee", granteeUser.FormattedAddress())
	require.NoError(t, err)
	t.Logf("FeeGrantDetails: %s", feeGrantDetails)
	allowances := feeGrantDetails["allowances"].([]interface{})
	allowance := (allowances[0].(map[string]interface{}))["allowance"].(map[string]interface{})
	allowanceType := allowance["type"].(string)
	require.Contains(t, allowanceType, "cosmos-sdk/BasicAllowance")

	revokeMsg := map[string]interface{}{}
	grantee := map[string]interface{}{}
	grantee["grantee"] = granteeUser.FormattedAddress()
	revokeMsg["revoke_allowance"] = grantee
	revokeMsgBz, err := json.Marshal(revokeMsg)
	require.NoError(t, err)

	revokeContractMsg := wasmtypes.MsgExecuteContract{
		Sender:   xionUser.FormattedAddress(),
		Contract: treasuryAddr,
		Msg:      revokeMsgBz,
		Funds:    nil,
	}
	newTxBuilder := xion.Config().EncodingConfig.TxConfig.NewTxBuilder()
	err = newTxBuilder.SetMsgs(&revokeContractMsg)
	require.NoError(t, err)
	newTxBuilder.SetGasLimit(20000000)
	newTx := newTxBuilder.GetTx()

	txJSONStr, err = xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(newTx)
	require.NoError(t, err)

	t.Logf("tx: %s", txJSONStr)
	require.True(t, json.Valid([]byte(txJSONStr)))
	revokeSendFile, err := os.CreateTemp("", "*-revoke-combo-msg-tx.json")
	require.NoError(t, err)
	defer os.Remove(revokeSendFile.Name())

	_, err = revokeSendFile.Write([]byte(txJSONStr))
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), revokeSendFile)
	require.NoError(t, err)

	revokeSendFilePath := strings.Split(revokeSendFile.Name(), "/")

	revokeSignedTx, err := ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "sign", path.Join(xion.GetNode().HomeDir(), revokeSendFilePath[len(revokeSendFilePath)-1]),
		"--from", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"--overwrite",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()))
	require.NoError(t, err)
	t.Logf("signed tx: %s", revokeSignedTx)

	// todo: validate that the feegrant was created correctly
	res, err = ExecBroadcastWithFlags(t, ctx, xion.GetNode(), revokeSignedTx, "--output", "json")
	require.NoError(t, err)
	t.Logf("broadcasted tx: %s", res)

	txDetails, err = ExecQuery(t, ctx, xion.GetNode(), "tx", res)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	feeGrantDetails, err = ExecQuery(t, ctx, xion.GetNode(), "feegrant", "grants-by-grantee", granteeUser.FormattedAddress())
	require.NoError(t, err)
	t.Logf("FeeGrantDetails: %s", feeGrantDetails)

	finalAllowancesStr, ok := feeGrantDetails["allowances"]
	if ok {
		finalAllowances := finalAllowancesStr.([]interface{})
		require.Equal(t, 0, len(finalAllowances))
	}
}

-- Chunk 7 --
// treasury_test.go:310-459
func TestTreasuryMulti(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}
	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	err := testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	fp, err := os.Getwd()
	require.NoError(t, err)
	codeIDStr, err := xion.StoreContract(ctx, xionUser.FormattedAddress(),
		path.Join(fp, "integration_tests", "testdata", "contracts", "treasury-aarch64.wasm"))
	require.NoError(t, err)
	t.Logf("deployed code id: %s", codeIDStr)

	inFive := time.Now().Add(time.Minute * 5)
	testAuth := authz.NewGenericAuthorization("/" + proto.MessageName(&banktypes.MsgSend{}))
	testGrant, err := authz.NewGrant(time.Now(), testAuth, &inFive)
	require.NoError(t, err)

	/*
		xionUserAddr, err := types.AccAddressFromBech32(xionUser.FormattedAddress())
		require.NoError(t, err)
	*/

	testAllowanceA := &feegrant.BasicAllowance{
		SpendLimit: types.Coins{types.Coin{Denom: "uxion", Amount: math.NewInt(10)}},
		Expiration: &inFive,
	}

	testAllowanceB := &feegrant.BasicAllowance{
		SpendLimit: types.Coins{types.Coin{Denom: "uxion", Amount: math.NewInt(10)}},
		Expiration: &inFive,
	}

	// NOTE: Create multiallownace
	testMultiAllowance, err := xiontypes.NewMultiAnyAllowance([]feegrant.FeeAllowanceI{testAllowanceA, testAllowanceB})
	require.NoError(t, err)

	bz, err := proto.Marshal(testMultiAllowance)
	require.NoError(t, err)
	require.NoError(t, testMultiAllowance.ValidateBasic())

	allowanceAny := ExplicitAny{
		TypeURL: "/" + proto.MessageName(testMultiAllowance),
		Value:   bz,
	}

	authorizationAny := ExplicitAny{
		TypeURL: testGrant.Authorization.TypeUrl,
		Value:   testGrant.Authorization.Value,
	}

	grantConfig := GrantConfig{
		Description:   "test authorization",
		Authorization: authorizationAny,
		Optional:      false,
	}

	// NOTE: Start the Treasury
	instantiateMsg := TreasuryInstantiateMsg{
		TypeUrls:     []string{testAuth.MsgTypeURL()},
		GrantConfigs: []GrantConfig{grantConfig},
		FeeConfig: &FeeConfig{
			Description: "test fee grant",
			Allowance:   &allowanceAny,
			Expiration:  int32(18000),
		},
	}

	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	require.NoError(t, err)

	treasuryAddr, err := xion.InstantiateContract(ctx, xionUser.KeyName(), codeIDStr, string(instantiateMsgStr), true)
	require.NoError(t, err)
	t.Logf("created treasury instance: %s", treasuryAddr)
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)
	contractState, err := ExecQuery(t, ctx, xion.GetNode(), "wasm", "contract-state", "all", treasuryAddr)
	require.NoError(t, err)
	t.Logf("Contract State: %s", contractState)

	granteeUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "grantee", "", fundAmount, xion)
	require.NoError(t, err)

	granterUser, err := ibctest.GetAndFundTestUserWithMnemonic(ctx, "granter", "", fundAmount, xion)
	require.NoError(t, err)
	t.Logf("granter: %s %s %s", granterUser.KeyName(), granterUser.FormattedAddress(), granterUser.Address())
	require.NoError(t, err)

	// wait for user creation
	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	err = xion.SendFunds(ctx, granterUser.KeyName(), ibc.WalletAmount{
		Address: treasuryAddr,
		Denom:   "uxion",
		Amount:  math.NewInt(1000),
	})
	require.NoError(t, err)

	// NOTE: Create AuthZGrant
	authzGrantMsg, err := authz.NewMsgGrant(granterUser.Address(), granteeUser.Address(), testAuth, &inFive)
	require.NoError(t, err)

	executeMsg := map[string]interface{}{}
	feegrantMsg := map[string]interface{}{}
	feegrantMsg["authz_granter"] = granterUser.FormattedAddress()
	feegrantMsg["authz_grantee"] = granteeUser.FormattedAddress()
	executeMsg["deploy_fee_grant"] = feegrantMsg
	executeMsgBz, err := json.Marshal(executeMsg)
	require.NoError(t, err)

	// NOTE: Execute in contract
	contractMsg := wasmtypes.MsgExecuteContract{
		Sender:   granterUser.FormattedAddress(),
		Contract: treasuryAddr,
		Msg:      executeMsgBz,
		Funds:    nil,
	}

	require.NoError(t, err)

	// build the tx
	txBuilder := xion.Config().EncodingConfig.TxConfig.NewTxBuilder()
	err = txBuilder.SetMsgs(authzGrantMsg, &contractMsg)
	require.NoError(t, err)
	txBuilder.SetGasLimit(200000)
	tx := txBuilder.GetTx()

	txJSONStr, err := xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(tx)
	require.NoError(t, err)


-- Chunk 8 --
// treasury_test.go:460-574
	t.Logf("tx: %s", txJSONStr)
	require.True(t, json.Valid([]byte(txJSONStr)))
	sendFile, err := os.CreateTemp("", "*-combo-msg-tx.json")
	require.NoError(t, err)
	defer os.Remove(sendFile.Name())

	_, err = sendFile.Write([]byte(txJSONStr))
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), sendFile)
	require.NoError(t, err)

	sendFilePath := strings.Split(sendFile.Name(), "/")

	signedTx, err := ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "sign", path.Join(xion.GetNode().HomeDir(), sendFilePath[len(sendFilePath)-1]),
		"--from", granterUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"--overwrite",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()))
	require.NoError(t, err)
	t.Logf("signed tx: %s", signedTx)

	// todo: validate that the feegrant was created correctly
	res, err := ExecBroadcastWithFlags(t, ctx, xion.GetNode(), signedTx, "--output", "json")

	require.NoError(t, err)
	t.Logf("broadcasted tx: %s", res)

	txDetails, err := ExecQuery(t, ctx, xion.GetNode(), "tx", res)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	feeGrantDetails, err := ExecQuery(t, ctx, xion.GetNode(), "feegrant", "grants-by-grantee", granteeUser.FormattedAddress())
	require.NoError(t, err)
	t.Logf("FeeGrantDetails: %s", feeGrantDetails)
	allowances := feeGrantDetails["allowances"].([]interface{})
	allowance := (allowances[0].(map[string]interface{}))["allowance"].(map[string]interface{})
	allowanceType := allowance["type"].(string)
	require.Contains(t, allowanceType, "xion/MultiAnyAllowance")

	revokeMsg := map[string]interface{}{}
	grantee := map[string]interface{}{}
	grantee["grantee"] = granteeUser.FormattedAddress()
	revokeMsg["revoke_allowance"] = grantee
	revokeMsgBz, err := json.Marshal(revokeMsg)
	require.NoError(t, err)

	revokeContractMsg := wasmtypes.MsgExecuteContract{
		Sender:   xionUser.FormattedAddress(),
		Contract: treasuryAddr,
		Msg:      revokeMsgBz,
		Funds:    nil,
	}
	newTxBuilder := xion.Config().EncodingConfig.TxConfig.NewTxBuilder()
	err = newTxBuilder.SetMsgs(&revokeContractMsg)
	require.NoError(t, err)
	newTxBuilder.SetGasLimit(20000000)
	newTx := newTxBuilder.GetTx()

	txJSONStr, err = xion.Config().EncodingConfig.TxConfig.TxJSONEncoder()(newTx)
	require.NoError(t, err)

	t.Logf("tx: %s", txJSONStr)
	require.True(t, json.Valid([]byte(txJSONStr)))
	revokeSendFile, err := os.CreateTemp("", "*-revoke-combo-msg-tx.json")
	require.NoError(t, err)
	defer os.Remove(revokeSendFile.Name())

	_, err = revokeSendFile.Write([]byte(txJSONStr))
	require.NoError(t, err)
	err = UploadFileToContainer(t, ctx, xion.GetNode(), revokeSendFile)
	require.NoError(t, err)

	revokeSendFilePath := strings.Split(revokeSendFile.Name(), "/")

	revokeSignedTx, err := ExecBinRaw(t, ctx, xion.GetNode(),
		"tx", "sign", path.Join(xion.GetNode().HomeDir(), revokeSendFilePath[len(revokeSendFilePath)-1]),
		"--from", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		"--keyring-backend", keyring.BackendTest,
		"--output", "json",
		"--overwrite",
		"-y",
		"--node", fmt.Sprintf("tcp://%s:26657", xion.GetNode().HostName()))
	require.NoError(t, err)
	t.Logf("signed tx: %s", revokeSignedTx)

	// todo: validate that the feegrant was created correctly
	res, err = ExecBroadcastWithFlags(t, ctx, xion.GetNode(), revokeSignedTx, "--output", "json")
	require.NoError(t, err)
	t.Logf("broadcasted tx: %s", res)

	txDetails, err = ExecQuery(t, ctx, xion.GetNode(), "tx", res)
	require.NoError(t, err)
	t.Logf("TxDetails: %s", txDetails)

	err = testutil.WaitForBlocks(ctx, 2, xion)
	require.NoError(t, err)

	feeGrantDetails, err = ExecQuery(t, ctx, xion.GetNode(), "feegrant", "grants-by-grantee", granteeUser.FormattedAddress())
	require.NoError(t, err)
	t.Logf("FeeGrantDetails: %s", feeGrantDetails)

	finalAllowancesStr, ok := feeGrantDetails["allowances"]
	if ok {
		finalAllowances := finalAllowancesStr.([]interface{})
		require.Equal(t, 0, len(finalAllowances))
	}
}

=== File: integration_tests/minimum_fee_test.go ===

-- Chunk 1 --
// minimum_fee_test.go:29-59
func TestXionMinimumFeeDefault(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()
	td := BuildXionChain(t, "0.025uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}, {defaultMinGasPrices.String()}}))

	assertion := func(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, xionUser ibc.Wallet, recipientAddress string, fundAmount math.Int) {
		// NOTE: Tx should be rejected inssufficient gas
		_, err := ExecTxWithGas(t, ctx, xion.GetNode(),
			xionUser.KeyName(),
			"0.024uxion",
			"xion", "send", xionUser.KeyName(),
			"--chain-id", xion.Config().ChainID,
			recipientAddress, fmt.Sprintf("%d%s", 100, xion.Config().Denom),
		)
		require.Error(t, err)

		// NOTE: Uses default Gas
		_, err = ExecTx(t, ctx, xion.GetNode(),
			xionUser.KeyName(),
			"xion", "send", xionUser.KeyName(),
			"--chain-id", xion.Config().ChainID,
			recipientAddress, fmt.Sprintf("%d%s", 100, xion.Config().Denom),
		)
		require.NoError(t, err)
	}

	testMinimumFee(t, &td, assertion)
}

-- Chunk 2 --
// minimum_fee_test.go:61-90
func TestXionMinimumFeeZero(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()
	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}, {defaultMinGasPrices.String()}}))

	assertion := func(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, xionUser ibc.Wallet, recipientAddress string, fundAmount math.Int) {
		toSend := math.NewInt(100)

		_, err := ExecTx(t, ctx, xion.GetNode(),
			xionUser.KeyName(),
			"xion", "send", xionUser.KeyName(),
			"--chain-id", xion.Config().ChainID,
			recipientAddress, fmt.Sprintf("%d%s", toSend.Int64(), xion.Config().Denom),
		)
		require.NoError(t, err)

		balance, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
		require.NoError(t, err)
		require.Equal(t, fundAmount.Sub(toSend), balance)

		balance, err = xion.GetBalance(ctx, recipientAddress, xion.Config().Denom)
		require.NoError(t, err)
		require.Equal(t, toSend, balance)
	}

	testMinimumFee(t, &td, assertion)
}

-- Chunk 3 --
// minimum_fee_test.go:92-173
func testMinimumFee(t *testing.T, td *TestData, assert assertionFn) {
	xion, ctx := td.xionChain, td.ctx

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	currentHeight, _ := xion.Height(ctx)
	testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	cdc := codec.NewProtoCodec(xion.Config().EncodingConfig.InterfaceRegistry)
	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	setPlatformMinimumsMsg := xiontypes.MsgSetPlatformMinimum{
		Authority: authtypes.NewModuleAddress("gov").String(),
		Minimums:  types.Coins{types.Coin{Amount: math.NewInt(10), Denom: "uxion"}},
	}

	msg, err := cdc.MarshalInterfaceJSON(&setPlatformMinimumsMsg)
	require.NoError(t, err)

	prop := cosmos.TxProposalv1{
		Messages: []json.RawMessage{msg},
		Metadata: "",
		Deposit:  "100uxion",
		Title:    "Set platform percentage to 5%",
		Summary:  "Ups the platform fee to 5% for the integration test",
	}
	paramChangeTx, err := xion.SubmitProposal(ctx, xionUser.KeyName(), prop)
	require.NoError(t, err)
	t.Logf("Platform percentage change proposal submitted with ID %s in transaction %s", paramChangeTx.ProposalID, paramChangeTx.TxHash)

	proposalID, err := strconv.Atoi(paramChangeTx.ProposalID)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusVotingPeriod {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status VOTING, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status VOTING after 11s")

	err = xion.VoteOnProposalAllValidators(ctx, uint64(proposalID), cosmos.ProposalVoteYes)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusPassed {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status PASSED, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status PASSED after 11s")

	// step 1: send a xion message with default (0%) platform fee
	recipientKeyName := "recipient-key"
	err = xion.CreateKey(ctx, recipientKeyName)
	require.NoError(t, err)
	receipientKeyAddressBytes, err := xion.GetAddress(ctx, recipientKeyName)
	require.NoError(t, err)
	recipientKeyAddress, err := types.Bech32ifyAddressBytes(xion.Config().Bech32Prefix, receipientKeyAddressBytes)
	require.NoError(t, err)

	assert(t, ctx, xion, xionUser, recipientKeyAddress, fundAmount)
}

-- Chunk 4 --
// minimum_fee_test.go:175-175
type assertionFn func(t *testing.T, ctx context.Context, xion *cosmos.CosmosChain, wallet ibc.Wallet, recipientAddress string, fundAmount math.Int)

=== File: integration_tests/send_test.go ===

-- Chunk 1 --
// send_test.go:24-173
func TestXionSendPlatformFee(t *testing.T) {
	if testing.Short() {
		t.Skip("skipping in short mode")
	}

	t.Parallel()

	td := BuildXionChain(t, "0.0uxion", ModifyInterChainGenesis(ModifyInterChainGenesisFn{ModifyGenesisShortProposals}, [][]string{{votingPeriod, maxDepositPeriod}}))
	xion, ctx := td.xionChain, td.ctx

	// Create and Fund User Wallets
	t.Log("creating and funding user accounts")
	fundAmount := math.NewInt(10_000_000)
	users := ibctest.GetAndFundTestUsers(t, ctx, "default", fundAmount, xion)
	xionUser := users[0]
	currentHeight, _ := xion.Height(ctx)
	testutil.WaitForBlocks(ctx, int(currentHeight)+8, xion)
	t.Logf("created xion user %s", xionUser.FormattedAddress())

	xionUserBalInitial, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, fundAmount, xionUserBalInitial)

	// step 1: send a xion message with default (0%) platform fee
	recipientKeyName := "recipient-key"
	err = xion.CreateKey(ctx, recipientKeyName)
	require.NoError(t, err)
	receipientKeyAddressBytes, err := xion.GetAddress(ctx, recipientKeyName)
	require.NoError(t, err)
	recipientKeyAddress, err := types.Bech32ifyAddressBytes(xion.Config().Bech32Prefix, receipientKeyAddressBytes)
	require.NoError(t, err)

	cdc := codec.NewProtoCodec(xion.Config().EncodingConfig.InterfaceRegistry)
	config := types.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	// query to make sure minimums are empty

	minimums, err := ExecQuery(t, ctx, xion.GetNode(), "xion", "platform-minimum")
	require.NoError(t, err)
	t.Log(minimums)
	require.Equal(t, []interface{}{}, minimums["minimums"])

	setPlatformMinimumsMsg := xiontypes.MsgSetPlatformMinimum{
		Authority: authtypes.NewModuleAddress("gov").String(),
		Minimums:  types.Coins{types.Coin{Amount: math.NewInt(10), Denom: "uxion"}},
	}

	msg, err := cdc.MarshalInterfaceJSON(&setPlatformMinimumsMsg)
	require.NoError(t, err)

	_, err = xion.GetNode().ExecTx(ctx,
		xionUser.KeyName(),
		"xion", "send", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		recipientKeyAddress, fmt.Sprintf("%d%s", 100, xion.Config().Denom),
	)
	// platform minimums unset, so this should fail
	require.Error(t, err)

	prop := cosmos.TxProposalv1{
		Messages: []json.RawMessage{msg},
		Metadata: "",
		Deposit:  "100uxion",
		Title:    "Set platform minimum to 100uxion",
		Summary:  "Ups the platform minimum to 100uxion for the integration test",
	}
	paramChangeTx, err := xion.SubmitProposal(ctx, xionUser.KeyName(), prop)
	require.NoError(t, err)
	t.Logf("Platform percentage change proposal submitted with ID %s in transaction %s", paramChangeTx.ProposalID, paramChangeTx.TxHash)

	proposalID, err := strconv.Atoi(paramChangeTx.ProposalID)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusVotingPeriod {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status VOTING, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status VOTING after 11s")

	err = xion.VoteOnProposalAllValidators(ctx, uint64(proposalID), cosmos.ProposalVoteYes)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusPassed {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status PASSED, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status PASSED after 11s")

	// check that the value has been set

	minimums, err = ExecQuery(t, ctx, xion.GetNode(), "xion", "platform-minimum")
	require.NoError(t, err)
	coins := minimums["minimums"].([]interface{})
	require.Equal(t, 1, len(coins))

	_, err = xion.GetNode().ExecTx(ctx,
		xionUser.KeyName(),
		"xion", "send", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		recipientKeyAddress, fmt.Sprintf("%d%s", 100, xion.Config().Denom),
	)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		balance, err := xion.GetBalance(ctx, recipientKeyAddress, xion.Config().Denom)
		require.NoError(t, err)
		t.Logf("expected %d, got %d", 100, balance.Int64())
		return balance.Equal(math.NewInt(100))
	},
		time.Second*20,
		time.Second*6,
		"balance never correctly changed")

	// step 2: update the platform percentage to 5%

	setPlatformPercentageMsg := xiontypes.MsgSetPlatformPercentage{
		Authority:          authtypes.NewModuleAddress("gov").String(),
		PlatformPercentage: 500,
	}
	msg, err = cdc.MarshalInterfaceJSON(&setPlatformPercentageMsg)
	require.NoError(t, err)

	prop = cosmos.TxProposalv1{
		Messages: []json.RawMessage{msg},
		Metadata: "",
		Deposit:  "100uxion",
		Title:    "Set platform percentage to 5%",
		Summary:  "Ups the platform fee to 5% for the integration test",
	}
	paramChangeTx, err = xion.SubmitProposal(ctx, xionUser.KeyName(), prop)
	require.NoError(t, err)
	t.Logf("Platform percentage change proposal submitted with ID %s in transaction %s", paramChangeTx.ProposalID, paramChangeTx.TxHash)

	proposalID, err = strconv.Atoi(paramChangeTx.ProposalID)
	require.NoError(t, err)

-- Chunk 2 --
// send_test.go:174-228

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusVotingPeriod {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status VOTING, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status VOTING after 11s")

	err = xion.VoteOnProposalAllValidators(ctx, uint64(proposalID), cosmos.ProposalVoteYes)
	require.NoError(t, err)

	require.Eventuallyf(t, func() bool {
		proposalInfo, err := xion.GovQueryProposal(ctx, uint64(proposalID))
		if err != nil {
			require.NoError(t, err)
		} else {
			if proposalInfo.Status == govv1beta1.StatusPassed {
				return true
			}
			t.Logf("Waiting for proposal to enter voting status PASSED, current status: %s", proposalInfo.Status)
		}
		return false
	}, time.Second*11, time.Second, "failed to reach status PASSED after 11s")

	// step 3: transfer and verify platform fees is extracted
	initialSendingBalance, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	initialReceivingBalance, err := xion.GetBalance(ctx, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(100), initialReceivingBalance)

	_, err = xion.GetNode().ExecTx(ctx,
		xionUser.KeyName(),
		"xion", "send", xionUser.KeyName(),
		"--chain-id", xion.Config().ChainID,
		recipientKeyAddress, fmt.Sprintf("%d%s", 200, xion.Config().Denom),
	)

	require.NoError(t, err)
	err = testutil.WaitForBlocks(ctx, int(currentHeight)+100, xion)
	require.NoError(t, err)

	postSendingBalance, err := xion.GetBalance(ctx, xionUser.FormattedAddress(), xion.Config().Denom)
	require.NoError(t, err)
	require.Equalf(t, initialSendingBalance.SubRaw(200), postSendingBalance, "Wanted %d, got %d", initialSendingBalance.SubRaw(200), postSendingBalance)
	postReceivingBalance, err := xion.GetBalance(ctx, recipientKeyAddress, xion.Config().Denom)
	require.NoError(t, err)
	require.Equal(t, math.NewInt(290), postReceivingBalance)
}

=== File: integration_tests/testdata/keys/jwtRS256.key ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/keys/jwtRS256.key:1-51
-----BEGIN RSA PRIVATE KEY-----
MIIJKAIBAAKCAgEAolg7TF3aai+wR4HTDe5oR+WRhEsdW3u+O3IJHl0BiHkmR4ML
skHG9HzivWoXsloUBnBMrFNxOH0x5cNMI07oi4PeRbHySiogRW9CXPjJaNlTi+pT
/IgKFsyJNXsLyzrnajLkDbQU6pRsHmNeL0hAOUv48rtXv8VVWWN8okJehD2q9N7L
HoFAOmIUEPg/VTHTt8K//O+9eMZKN4eMjh/4+sxRX6NXPSPT87XRlrK4GZ4pUdp8
6K0tOFLhwO4Uj0JkMNfI82eVZ1tAbDlqjd8jFnAb8fWm8wtdaTNbL/AAXmbDhsww
JOyrw8fARZIhrXSdKBWa6e4k7sLwTIy+OO8saebnlARsjGst7ZCzmw5KCm2ctEVl
3hYhHwyXu/A5rOblMrV3H0G7WqeKMCMVSJ11ssrlsmfVhNIwu1Qlt5GYmPTTJiCg
GUGRxZkgDyOyjFNHglYpZamCGyJ9oyofsukEGoqMQ6WzjFi/hjVapzXi7Li+Q0Oj
EopIUUDDgeUrgjbGY0eiHI6sAz5hoaD0Qjc9e3Hk6+y7VcKCTCAanZOlJV0vJkHB
98LBLh9qAoVUei/VaLFe2IcfVlrL/43aXlsHhr/SUQY5pHPlUMbQihE/57dpPRh3
1qDX/w6ye8dilniP8JmpKM2uIwnJ0x7hfJ45Qa0oLHmrGlzY9wi+RGP0YUkCAwEA
AQKCAgBdvr1fN8LsFmWgpSMOpGCrQ7Fnx0hIj4gmI4+IbQR5nhuwp8eVQ85zV7pG
zoCoiMOPhEGCMRzsFb8+givxJ5u5FIjBjiPvF6xS7BBSR4dmeDh6TvH4nUXWLH3+
1/LThEwlUwXFs/twCgz070Rv4TTU4T38TJo7LuQ+HejWeaTCkCmsBQsdrl08WW5k
7jUEKSWss1TR5k5u83Hf5vIPD/9iM6G5rESwFYRK8u74KnOMt3v8vEHsyjOWlqWu
FszgfOIGIlTz2Ri4+kSVOgKBshw81LgOXF/vcNyb5v/9CoXr/UNjD32tlM0K3Mn2
Yo/37aLihrdR5iaFiSPh0FP35ISsJwnIrYGPnOsxN6VMl2MfS0TfGRHvqcYV1xiD
D7MLVzAlUGcyOkPtzqgA84UjQEhvlrhfPXPtcn45Ynbj0Mdz0OygSd+WGMV8qUkK
k/pPD9ocZcQW9Hvn2uUEpjuV2mRSZ9L601WCDDCxReu8ZqbGPrmtcXV4CBNAan1z
mht3MD2se/x+F5JXiG/I4yldzOPSBoTia5Y9ycw8cpxwz7XlyIm6IyLEnlL4bFNd
UZDUTZy+ZfLgC+m5HrvJDGq1hHSehpFRf7mTnM1EGShOd5sShig73mrWmAaPWB5f
27t0SojWRGzYgdPEl+1THhsvxQdffKd0Z8OAt4vAQep9BV2mAQKCAQEA0ukT+Ee9
OJ6zaSdBgodDOFEo7HymtzDov+bcw+4gL+Gw6Q+l7J6atWytXWvMlAvcken2DHoe
LprMa5AYfMt5ExsybnX8wkR3HgxodfG7Zk/pDaE+ljPGfI1y+v/bJTkFTlpTvupE
+ycTOtBDxF5+LF/S3SzVl2ysIEtxXKpdX1rW2EeiRsrkCt74H1Shy/xxwngA9n5f
UrOx0Zd4wlPO62wdhM6edbK6QdXYqeBKVU2I9PnrqUNneMRgw6Yw4RiD4zJfffkI
vStxnv1mqD0lNXZqSB4CMI3Xpzm8DSrT53C1+IU+mlzQZLDOYjOUDxeFwK5u9CmE
rRU2BWmB26KrEQKCAQEAxQ0x4WBUlDHHpqbdjzns6VdFjOkMig7DgneZ+68Tv58r
v7XYMIPCxPgzK1xSdyM3EgvnSUmhh2SbRCX9aMTCa1W4t/ugBqayr7+ADzYzwWwV
bacaRdvfAZRNAaM2BejQljx41CQGAgnJfnGWUwA+x656EOIjGO8fsJjDm+lkL/MU
Vp2Kn6dwd0vjCiwbi/TuBAR+LweDTYKibpj74I90KkbYRUPSg/X5IheaMpg3VRJH
IpXcSbqr2yaailIJfoTlE3I9xqDcEdpc4Tn9cqIXtNOqXuBieeM6U7UW5T7Sdrt8
dEGeZEO5Hgk5C3wpjVMcvRp12VV552u1A8ywrMaiuQKCAQBZEd/CIaHSsIr6JH7w
/eiwdu3+eWH6yWfx6zBeekkTj4+jzVz4Qb76UWwhoO3js+KxqImlmUj3y5366v68
bT2ziO/SYHefH0Ti5sCS1sSan7K/c9I3oqP3Y9EkGTtWS+9muJTXcp4xJr5jPyLv
YiyM1ub5Sv7lFRrYBKRaSwRlyboj2pS4quSFhsZojNhLilAMnZtifdoJ1iOJbRut
jbE8EQuiU5PuBs3MEeCPVU5vGfB17LnOYM3o3Z4z4hKQbUb9gv969tnu8dLpHwDk
mfYFzv1xeWLZWH2zfJljQiv9eMcQrkzS6dGERHrUVA36FagByGjJKmOCqQuIW5dg
xyDRAoIBAFE9FmJvf481UrVvOArTe8vbsg3dCtFkMtB4FKDB1md67ON1yfJ+b+8a
0KXAwzLg7tRe2fTKCXEzVhvreaUW8Xyk86nOcHQth5+TWO1skDvfHpp9eQRyGGej
R3g0XJJlIJG/zqTPUTbH6C1cEPiZMkjKswKA6K1f8HWzFXoS574o/iqTetJFisV0
IN9Rve2ehf5cB9XFyClNgUANjFJRcjf3yzQLOSA0aYjXqDfRr4ZAKdmlZRN0hWOt
b6s1FTr2+SZiQ/u+19v4ZbBpYwc+sn1XgnbpFVBhEOvvzcendceDllSrtOxrS0eJ
z93fS5Y7PK7t2MZISiDRs+gkHHau0ekCggEBAI7Dq4IaaKF4FSYziuL4nrwtabyX
R42vN1fULd+gL5xWrkH0R6U38mQjUf8kgDrEiIbgHE38W/UNob3lul9aWPfb3nhC
pjDhg7WkB+79zWP4zKoZmXa7n+6DqaYBhJzJVIs9FmBKPOFuI/EGlCMD/FcnQu2O
sgA+ufWrO12MEvxUagG2ZJlGxwsREZvTSJcuqgC8E64gELlHsPN4rJP0fVwUgADe
xxiq9l/SAJOht/qPz9cm2BjRvgOui4USHa+GMN39q8uOCFkmWKx5CDqFXk8iyB5Z
wcYmLe1F7mUW1ST8FmHPbL1Bq77g/jg0iQTVMIyKIEj5QAmWSM0wLuZHBQk=
-----END RSA PRIVATE KEY-----

=== File: integration_tests/testdata/keys/jwtRS256.key.pub ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/keys/jwtRS256.key.pub:1-1
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCiWDtMXdpqL7BHgdMN7mhH5ZGESx1be747cgkeXQGIeSZHgwuyQcb0fOK9aheyWhQGcEysU3E4fTHlw0wjTuiLg95FsfJKKiBFb0Jc+Mlo2VOL6lP8iAoWzIk1ewvLOudqMuQNtBTqlGweY14vSEA5S/jyu1e/xVVZY3yiQl6EPar03ssegUA6YhQQ+D9VMdO3wr/87714xko3h4yOH/j6zFFfo1c9I9PztdGWsrgZnilR2nzorS04UuHA7hSPQmQw18jzZ5VnW0BsOWqN3yMWcBvx9abzC11pM1sv8ABeZsOGzDAk7KvDx8BFkiGtdJ0oFZrp7iTuwvBMjL447yxp5ueUBGyMay3tkLObDkoKbZy0RWXeFiEfDJe78Dms5uUytXcfQbtap4owIxVInXWyyuWyZ9WE0jC7VCW3kZiY9NMmIKAZQZHFmSAPI7KMU0eCVillqYIbIn2jKh+y6QQaioxDpbOMWL+GNVqnNeLsuL5DQ6MSikhRQMOB5SuCNsZjR6IcjqwDPmGhoPRCNz17ceTr7LtVwoJMIBqdk6UlXS8mQcH3wsEuH2oChVR6L9VosV7Yhx9WWsv/jdpeWweGv9JRBjmkc+VQxtCKET/nt2k9GHfWoNf/DrJ7x2KWeI/wmakoza4jCcnTHuF8njlBrSgseasaXNj3CL5EY/RhSQ== mv@invidia-2.local

=== File: integration_tests/testdata/contracts/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/README.md:1-2
The account contract is an optimized build of:
https://github.com/burnt-labs/contracts account contract

=== File: integration_tests/testdata/contracts/treasury-aarch64.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1-150
 asm   ` ` ` ` ` ` ` ````~``` `
 `~ `
 `  `~~`~ `` `~`~ `~~``
``~`~~~~ `~~ envabort  env
db_next_value 	env
db_next_key 	envdb_read 	envdb_write env	db_remove  envdb_scan envdb_next 	env
addr_validate 	envaddr_canonicalize env
addr_humanize envsecp256k1_verify envsecp256k1_recover_pubkey 
enved25519_verify enved25519_batch_verify envdebug  env
query_chain 	   


          
  

   	       
     














       











  
 		       				   			  				         	 


 	   


       	  
 	 												    		
 	

         
	



p A 
 A 
 A 
memory 
instantiate execute query interface_version_8 allocate 
deallocate requires_stargate requires_iterator requires_cosmwasm_1_2 requires_cosmwasm_1_3 requires_cosmwasm_1_4 requires_cosmwasm_2_0 requires_cosmwasm_1_1 
__data_end
__heap_base	 A

~# A k"$  Aj  Ax!A!@@@ - E
 Ax! - 	AqA"G
    A0j   (<! (8! (4!@ (0
 @@ AxF
  !

@@ 
 A!

A ! A H
A - ΀ A! A "E

     !
 Aj 6   6(  6$  )$"7  A
j 6    7A !

  6(  6$A
!
 A j j 6  Aj A jA
j( "6   )$"7  A
j 6    7A!
   6  A j$ 
    
# A k"$  A:  A 6  6  6
 A
j A
j      ((! ($! ( !@@ (
"AxF
  (<! (8! (4! (0!	 (,!
 A
j A
j @ (
AxG
    6    6
   6   	6   
6   6
   6   6   6 

   )
7  A
j A$j( 6   Ax6 @ E
   A 
@ E
  
 A 
 E
  A 

   6
   6   6  Ax6 
 A j$ 
# A k"$  A(j  @@ - (
   BȀ7 

@@@@@@@@@@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   BȂ7 

   A j  Ax!Ax!	@ -  
 Ax!
Ax!

@ - !Aq"A"F
  A F
Ax!
Ax!Ax!

 A,j Ѐ @ (,"
AxF
 Ax!Ax!
Ax!	 
!

 A0j!
@@@@@@@ - 0"
 
 A j  @ (PAxF
 Ax!Ax!	


-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:151-300

 A,j   (8!
 (4! (0!
Ax!	@ (,E
 Ax!



 A j  @ (PAxF
 Ax!Ax!


 A,j   (8! (4! (0!	Ax!
 (,E
Ax! !

 A j  @ (PAxF
 Ax!
Ax!	
	
 A,j   (8! (4! (0!Ax!	@ (,E
 Ax!



Ax!


 A,j  @@ (,AxF
  A jAj A,jAj( 6   ),7P

 A j  
@ (PAxF
 Ax!Ax!
Ax!	

Ax!	Ax!


Ax!
 Aj   - E
 - !@ !@@@@@@@ Aq"A,F
 Ax!@ A F
  !

 	AxG
 !


   Aj  @ - 
 Ax! !

@@@@@@ - Aq"A"F
 Ax! A G
 !


 A,j Ѐ @ (,"
AxF
  ! 
!

 - 0"

 !Ax!

 A,j  @@ (,AxG
  A j  

 A jAj A,jAj( 6   ),7P
 (PAxF
 !

@ 	AxF
  A0jA A
 

 A j  @ (PAxF
  !

 A,j   (8! (0!	 ! (4"! ! (,E


 !

@ 
AxF
  A0jA A
 

 A j   (PAxG

 A,j   (8!
 (4! (0!
 (,E


@ 
AxG"

  A0jA A
 

 AxF
  6L  6H  6D  
6@  6<  
68  64  60 	!


 AxF
 A0jA A A ! E
  A 

 A0jA A  
E
   
A 
A!@@ 	
 A !	

  	A 
 !

 A j   (PAxG
 A,j   (8! (4! (0! ! (,

 Aj   - 	! - E

 

A   
  B聀7 

Ax!
Ax!
 A0jA A
 

 
 )P7  
Aj A jAj( 6  (0! (4! (8!
  68  64  60A !


 
 )P7  
Aj A jAj( 6  (0!
 (4! (8!

  

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:301-450
68  64  
60A !
Ax!


 
 )P7  
Aj A jAj( 6  (0!	 (4! (8!
  68  64  	60
A !
Ax!	A !

A !

 !A !

  ( 16P  A4j(  6 S - 0!


 ! !
 A8j ( S6    (P6 5  
: 4  60

 A8j A j( 6   )P70
A !
A !
@ AxrAxF
   A 
 ! 


Ax! 
AxrAxG
 !
Ax! 


  
A  ! 

Ax! 	AxrAxF
   	A 
@@ - 
Aj"Aq G
   : 
 AxF
 (8! (4! (0!	 (L! (H!
 (D! (@! (<!
 A j  @ (PAxG
    6    
6
   6   6   
6   6
   6   	6   6 

   )P7  A
j A j( 6   Ax6 @ E
  	 A 
@ E
  
 A 
 E
 
 A 

A   
  Ax6    A0j") 7  A
j Aj( 6 
 A j$ 
# A0k"$  A:  A 6  6
  6 Aj Aj          ($! ( ! (
!@@ ("AxF
  (,! ((! Aj Aj @ (AxG
    6   6   6
   6   6   6 

   )7  A
j A j( 6   Ax6 @ E
   A 
@ E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

 E
  AtA 

   6
   6   6  Ax6 
 A0j$ 

# A k"$  A j  @@ -  
   BȀ7 

@@@@@@@@@@@@@@ - !AqA G
 @ - 
"E
   Aj": 
@ Aq
   BȂ7 

   Aj  Ax!Ax!@ - 
 Ax!	


@ - Aq"
A"F
  
A F
Ax!	Ax!


 A(j ǀ @ (("
AxF
 Ax!	Ax! 
!
	
 A,j!
@@@@ - ,"
 
 A j  @ (@AxF
 Ax!

 A(j   (4!
 (0!
 (,!	Ax!@ ((E
 
	


 A j  @ (@AxF
 Ax!	
	
 A(j     (4! (0! (,!Ax!	 ((E

	
 A(j  @@ ((AxF
  A jAj A(jAj( 6   )(7@

 A j  
@ (@AxF
 Ax!	Ax!


Ax!Ax!	
 Aj  @ - 
  !



-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:451-600
 - ! !@@@@ Aq"A,F
 Ax!@ A F
  !

 AxG
 !

   Aj  @ - 
 Ax! !


@@@@@ - 	Aq"A"F
 Ax! A G
 !

 A(j ǀ @ (("
AxF
  ! 
!

 - ,"

 !Ax!

 A(j  @@ ((AxG
  A j  

 A jAj A(jAj( 6   )(7@
 (@AxF
 !

@ AxF
  A,jA A  !

 A j  @ (@AxF
  !


 A(j     (4! (,! ! (0"! ((E



@ 	AxF
  A,jA A  !

 A j   (@AxG
 A(j   (4!
 (0!
 (,!	 ((E


@ 	AxG
  A,jA A Ax!
 E
  A 

  
6<  
68  	64  60  6, !


    - ! -  
 
 !
	
A   
  B聀7 


Ax!	
 A,jA A Ax!

 
 )@7  
Aj A jAj( 6  (,!	 (0!
 (4!

  
64  
60  	6, !

 
 )@7  
Aj A jAj( 6  (,! (0! (4!
  64  60  6,Ax!

  ( -6@  A0j(  6 C - ,!

 A4j ( C6    (@6 1  
: 0  6,

 A4j A j( 6   )@7,
 	AxF

@ 
E
  
Aj!@@ A|j( "
E
  (  
A 
 A j! 
Aj"

 

 	E
  
 	AtA 
Ax!
 AxrAxF
   A 
@@ - 
Aj"Aq G
   : 
 
AxF
 (4!	 (0!
 (,! (<!
 (8! A j  @ (@AxG
    
6   6   	6
   
6   6   
6 

   )@7  A
j A j( 6   Ax6 @ 
E
   
A 
@ 
E
  Aj!@@ A|j( "E
  (  A 
 A j! 
Aj"

 

 	E
  	AtA 

A   
  Ax6    A,j") 7  A
j Aj( 6 
 A j$ 
~# A k"$  A:  A 6  6
  6 Aj Aj      ($! ( ! (
!@@ ("AxF

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:601-750
  )8! (4! (0! (,!	 ((!
 Aj Aj @ (AxG
    7    6
   6   	6   
6   6
   6   6   6 

   )7  A
j A j( 6   Ax6 @ E
   A 
@ E
  
 A 
 E
  A 

   6
   6   6  Ax6 
 A j$ 
~# A k"$  A(j  @@ - (
   BȀ7 

@@@@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   BȂ7 

   A j  Ax!Ax!@ -  
 Ax!	


@ - !Aq"	A"F
  	A F
Ax!	Ax!


 A0j π @ (0"
AxF
 Ax!	Ax! 
!


@@@@@@@ - 4"
 
 A0j  @ (0AxF
 Ax!


 A j     ŀ Ax! (d!
 (`!
 (\!
@ (X"	AxG
 


 (l! (h!A!Ax!

 A j  @ (XAxF
 Ax!	


 A0j   (<! (8! (4!Ax!	@ (0E
  !

A!

 A0j  @@ (0AxF
  A jAj A0jAj( 6   )07X

 A j  
@ (X"AxF
 Ax!	Ax!
	
 - \!

 A0j  @@ (0AxF
  A jAj A0jAj( 6   )07X

 A j  
@ (XAxF
 Ax!	Ax!

A!
Ax!Ax!	

 Aj  @ - 
  !


 - !@@@@@@@@ Aq"A,F
 Ax!@ A F
  !

 AxG
 !


   Aj  @ - 
 Ax! !

@@@@@@ - Aq"A"F
 Ax! A G
 !

 A0j π @ (0"
AxF
  ! 
!

 - 4"

 !Ax!

 A0j  @@ (0AxG
  A j  

 A jAj A0jAj( 6   )07X
 (XAxF
 !

@ AxF
  A4jA A
 

 A j  @ (XAxF
  !

 A0j   (<! (4! ! (8"! (0E


@ 	AxF
  A4jA A
 

 A0j  @ (0AxF
  !

 A j     ŀ  (d!
 (`!
 (\!
 (X"	AxG
 !

@ AqAF
  A4jA A 

 A0j  @@ (0AxG
  A j  

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:751-900

 A jAj A0jAj( 6   )07X
 (X"AxF
 !


@ 	AxG"
  A4jA A
 

  6l  6h  
6d  
6`  
6\  	6X AqAF
  6P  6L  
6H  
6D  
6@  	6<  68  64  Aq: T !

 - \!

 A4jA A  A j 
A!
@@ 
 A !

  A 
 !

 (l! (h!
 Aj   - 	! - 
 
 !


A   
  B聀7 

Ax!	
 A4jA A
 

 A<j A j(  6    ( ]6 9  - \: 8  64
	
 A jAj" )07  Aj A0jAj( 6  (d!
 (`!
 (\!

  
6<  
68  
64
	
 A0jAj" )X7  Aj A jAj( 6  (4! (8! (<!
  6<  68  64
A !Ax!A !


A ! !A !


  ( 56X  A8j(  6 [ - 4!

 A<j ( [6    (X6 9  
: 8  64

 A<j A j( 6   )X74
A !A !

Ax!@ 	AxF
  
 @ 	E
  
 	A 
 
E
   
A 
 


Ax! AxrAxF
   A 
@@ - 
Aj"	Aq 	G
   	: 
 AxF
 (<!	 (8!
 (4!
 )P! (L!
 (H! (D! (@! A j  @ (XAxG
    7    
6
   6   6   6   	6
   
6   
6   6 

   )X7  A
j A j( 6   Ax6 @ E
  
 A 
@ 	E
   	A 
 E
 
 A 

A   
  Ax6    A4j") 7  A
j Aj( 6 
 A j$ 


# Ak"$  A j  @@ -  
   B7 

@@@@@@@@@@@@@@@@@@ - !AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A:   6 Aj  Ax!@ - 
 Ax!	Ax!
A!Ax!



@ - Aq"A G
 A!Ax!	Ax!
Ax!



 A : @ A"F
 Ax!	Ax!
A!Ax!
Ax!


 A j ̀  - |!
@ (x"
AxF
 A!Ax!
Ax!	Ax!
 
!


-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:901-1050

 A j!@@@@@@@ 
 
 A(j  @ ((AxF
 A!Ax!
Ax!	


 A j   (!
 (! (|!
Ax!	Ax!
A! (xE



 A(j  @ ((AxF
 A!Ax!
Ax!	


 A j   (! (! (|!
Ax!	Ax!
A! (xE



 A j Aj󀀀  (! (! (|!	Ax!
A!Ax!
 (xE



 A(j  @ ((AxF
 Ax!
Ax!	Ax!


 A j       (! (! (|!@ (x"AG
 Ax!
Ax!	Ax!


 (! (! (! (! (! (!
 (!
Ax!	Ax!


 A j  @@ (xAxF
  AjAj A jAj( 6   )x7

 Aj  
@ (AxF
 A!Ax!
Ax!	Ax!


Ax!	Ax!
A!
Ax!

 Aj  @ - 
  
!
 ! !  !! !"


 - !# !"@ 
!
 ! !  !!@ #Aq"
A,F
 Ax! 
A G




   Aj  @ - 
 Ax!


@ - 	Aq"
A"F
 Ax! 
A F

Ax!


 A j ̀  - |!
@ (x"
AxF
  
!


@@@@@@@ 
 
 A j  @@ (xAxG
  Aj  

 AjAj A jAj( 6   )x7
 (AxG


@ 	AxF
  A,jA A  A6(

 A j Aj󀀀  (! (|!	 "!# 
!
 !  ! !! ("!" (xE


@ 
AxF
  A,jA A	  A6(

 A(j   ((AxG

 A j   (! (! (|!
 
!
 ! (xE



@ 
AxF
  A,jA A
  A6(

 A(j   ((AxG
 A j   (!
 (! (|!
  ! !! (xE

	
@ AF
  A,jA A
  A6(A !
A !A !


 A(j   ((AxG
 A j       (! (! (|! (x"AF
 (! (! (! (! (! (!
 (!

 
!
 !  ! !!

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1051-1200
    - !# -  
 
 
!
 ! !  !!


A   
  B7 

  )(7  Aj A(jAj( 6  (! (! (|!
  64  60  6, A6(A !
A !A !



  )(7  Aj A(jAj( 6  (|!
 (! (!

  
64  60  
6, A6(A !
Ax!


  )(7  Aj A(jAj( 6  (|!
 (! (!
  64  60  
6, A6(A !
Ax!


  64  60  	6, A6(A !
Ax!	 #!"

  ( }6  Aj(  6 
 A4j ( 6    (6 1  
: 0  6, A6(

 	Ax 	AxG"
!@@ 
AxG"
  A,jA A	  A6(A !


   6  !6  
6@@ 
AxG"

  A,jA A
  A6(

  
6  6|  
6x@ AF
   6t  "6p  6l  
6h  6d  
6`   6\  !6X  
6T  6P  6L  6H  6D  6@  
6<  
68  64  60  6,  6(
	
 A(jAjA A
  A6( A j  
E
   
A(lA 
 Aj  
E
  ! 
A
lA 
 AxrAxF
 " A 

 A4j Aj( 6   )7, A6(
A !

A !A !

 AF

@ E
   A 
 
AxF
 @ 
E
   
A 
 E
   A 
@ 
AxF
  

 @ 
E
  !@@ ( "
E
  Aj(  
A 
@ A
j( "
E
  Aj(  
A 
@ Aj( "
E
  A
j(  
A 
 A(j! 
Aj"

 

 
E
   
A(lA 
@ 
AxF r
 @  E
  !!@@ ( "
E
  Aj(  
A 
 A
j!  Aj" 
 

 
E
  ! 
A
lA 
 

  	AxH
  	E
  " 	A 
@@ - 
Aj"Aq G
   : 
 A,j! ((" AF
 A jA j A(jA j) 7  A jA j A(jA j) 7  A jA8j A(jA8j) 7  A jA0j A(jA0j) 7  A jA(j A(jA(j) 7  A jA j A(jA j) 7  A jAj A(jAj) 7  A jA
j Aj( 6   )87  ) 7|   6x Aj  @ (AxG
    A jA  


-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1201-1350
   )7  A
j AjAj( 6   A6  A j 

A   
  A6    ) 7  A
j Aj( 6 
 Aj$ 
@  (D"AxF
  E
   (H A 
  (0!@  (4"E
  !@@ ( "E
  Aj(  A 
 A
j! Aj"
 

@  (,"E
   A
lA 
  (<!@  (@"E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
@ Aj( "E
  A
j(  A 
 A(j! Aj"
 

@  (8"E
   A(lA 
@  ("E
   (
 A 
@  ("AxF
 @ E
   ( A 
  ( "E
   ($ A 

~~~# A k"$  A:  A 6  6
  6 A8j Aj      A(jAj" A8jA
j( 6   )<7(@@ (8"AF
  AjAj ( 6   )(7 )h! (d! (`! )X! (T! (P! )H!	 A8j Aj @ (8AxG
    6    )7   70   6,   6(   7    6
   6   	7  A
j A j( 6 

   )87  A
j A j( 6   A6 @ E
   A 
 E
  A 

   )(7  A6   A
j ( 6 
 A j$ 
	~~# Ak"$  A(j  @@ - (
   B7 

@@@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A: l  6h A j  Ax!@ -  
 Ax!	Ax!
	
@ - !Aq"A G
 A!
Ax!Ax!	


 A : l@ A"F
 Ax!	Ax!Ax!
	
 A0j ɀ  - 4!
@ (0"
AxF
 Ax!Ax!	 
!

@@@@@@@ 
 
 A0j A j  (8!
 (4!
Ax!	@ (0"AxF
 Ax!


Ax!

 A0j  @ (0AxF
 Ax!


 Aj     Ҁ Ax! ("	AxF

 AjAj AjAj) "7  A jAj 7   )"7  7p (! )!A!


 Aj  @ (AxF
 Ax!	

 A0j     р  (<!
 (8! (4!Ax!	@ (0E
 

A!


 A0j  @@ (0AxF
  AjAj A0jAj( 6   )07

 Aj  
@ (AxF
 Ax!Ax!	

A!
Ax!	
Ax!

 Aj   - E
 - !@@ Aq"A,F
 Ax! A G



   Aj  @ - 
 Ax!


@ - Aq"A"F
 Ax! A F
Ax!


 A0j ɀ  - 4!
@ (0"AxF
  !
	
@@@@@ 
 
 A0j  @@ (0AxG
  Aj  

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1351-1500

 AjAj A0jAj( 6   )07
 (AxG


@ 	AxF
  A0jArA A 

 A0j   (0AxG
	 Aj     Ҁ  ("	AxF
 AjAj AjAj) "7  A jAj 7   )"7  7p (! )!

@ 
AF
  A0jArA A
 

 A0j A j  (8!
 (4!
 (0"AxF


@ AxF
  A0jArA A 

 Aj   (AxG
 A0j     р  (<!
 (8! (4! (0

 Aj   - 	! - 
 
	

A   
  B7 

 A4j" )7  Aj AjAj( 6  (4! (8! (<!

  
6<  68  64
	
  
6<  
68  64

 AjAj A0jAj( 6   )07
 AjAj AjAj( "	6  A<j 	6   )"7  74Ax!	

  ( 56  A8j(  6 
 A<j ( 6    (6 9  
: 8  64

@ 	AxG
  AjA A  A<j Aj( 6   )74Ax!	

@ AxG
  A0jArA A  	E
  	A 

 A j A j) 7   
6`  )p78  
64 - 
Aj"Aq G
  : 
 )@! )`! Aj  @ (AxG
    70   6,   6(   7    6
   	6   7   A0jAr") 7  A  
 
AF6   A
j Aj( 6 

   )7  A
j Aj( 6   A6 @ 	E
   	A 
 E
  A 

 A<j Aj( 6   )74
 AxF

 E
   A 
 	AxrAxF
   	A 
 - 
Aj"Aq F

A   
  : 
   )47  A6   A
j A0jA
j( 6 
 Aj$ 
# A k"$  A: 
 A 6  6  6  Aj       (
! (! (!@@ (
  Aj  @ (AxG
    6
   6   6  A 6 

   )7  A
j Aj( 6   A6  AxH
 E
  A 

   6
   6   6  A6 
 A j$ 
# A k"$  Aj  Ax!@@@@ - E
 @@ - 	Aq"A"F
  A F
  B7 

 Aj À @@ ("AxG
 Ax!

   / ; 	  A
j Aj-  :   - !   (6
   : 
  A6    6

 - 
"E
  Aj": 
 Aq
Ax!
  A6    6

A   
   Aj ̂ @ - 
Aj"Aq G
   : 
   )7   Aj AjAj) 7 

A   
 A j$ 

# A k"$  A:  A 6
  6  6 Aj Aj      ( ! (
! (!@@ ("AF
  (<! (8! (4! (0!	 (,!
 ((!
 ($!
 Aj Aj @ (AxG
    6(   6$   6    	6
   
6   
6   
6   6
   6   6   6 

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1501-1650

   )7  A
j A
j( 6   A6 @ E
   A 
 
AxF
@ 
E
  
 
A 
 E
  A 

   6
   6   6  A6 
 A j$ 
# A k"$  A j  @@ -  
   B7 

@@@@@@@@@@@@@@@ - !AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A: T  6P Aj  Ax!@ - 
 Ax!	Ax!

@ - Aq"A G
 Ax!A!
Ax!	


 A : T@ A"F
 Ax!	Ax!Ax!

 A$j ʀ  - (!
@ ($"
AxF
 Ax!Ax!	 
!

@@@@@@@ 
 
 A j A j  (d!
 (`! (\!@ (X"AxG
 Ax!	


 (l! (h!A!
Ax!	

 A j  @ (XAxF
 Ax!


 A$j   (0! (,!
 ((!	Ax!@ ($E
  
!


A!


 A$j A j􀀀  (,! ((!
Ax!	Ax! ($"AxF


 A$j  @@ ($AxF
  A jAj A$jAj( 6   )$7X

 A j  
@ (XAxF
 Ax!Ax!	


A!
Ax!	Ax!


 Aj  @ - 
  
!

 - !@@ Aq"A,F
 Ax! A F

 
!
	
   Aj  @ - 
 Ax! 
!
	
@@@@@@@@ - 	Aq"A"F
 Ax! A G
 
!

 A$j ʀ  - (!
@ ($"AxF
  
! !

 

 
!Ax!

 A$j  @@ ($AxG
  A j  

 A jAj A$jAj( 6   )$7X
 (XAxF
 
!

@ 	AxF
  A(jA A
 

 A j  @ (XAxF
  
!


 A$j   (0! ((!	 
! (,"!
 ($E



@ AxF
  A(jA A	 

 A j A j  (d!
 (`! (\! (X"AxG
 
!

@ 
AF
  A(jA A
 

 A$j A j􀀀  (,! ((!

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1651-1800
 ($"AxF


 (l! (h!
    - ! -  
 
 
!

A   
  B7 

  60  
6,  6(

  
60  6,  6(
	
 A(j"	 )X7  	Aj A jAj( 6  ((!	 (,! (0!
  60  6,  	6(Ax!	

  ( )6X  A,j(  6 [
 A0j ( [6    (X6 -  
: ,  6(

 A0j A j( 6   )X7(

 	AxG
 A(jA A
 Ax!	
 
!
 AxL
@ E
   A 
 
E
  
A 

 - 
Aj"Aq G
Ax  AxF!  : 
 A$j  @ ($AxG
    6(   6$   
6    6
   6   6   6   
6
   	6   6  A  
 
AF6 

   )$7  A
j A,j( 6   A6 @ 	E
  
 	A 
 AxF
@ E
   A 
 
E
  
A 

@ 	AxrAxF
   	A 
 - 
Aj"Aq F

A   
  : 
   )(7  A6   A
j A$jA
j( 6 
 A j$ 
# A k"$    Ax!@@@@ -  E
 @@ - Aq"A"F
  A F
  B7 

 Aj  @@ ("AxG
 Ax!

   / 
; 	  A
j Aj-  :   - 
!   (6
   : 
  A6    6

 - 
"E
  Aj": 
 Aq
Ax!
  A6    6

A   
   Aj ʂ @ - 
Aj"Aq G
   : 
   )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   A j AjA j) 7   A(j AjA(j) 7   A0j AjA0j) 7 

A   
 A j$ 
@@@@@@@@@  (  
  (!@  (
"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

  ("E
  AtA 
  ("E
  ( A 
@  ("E
   ( A 
@  ("E
   ( A 
@  (
"E
   (  A 
  (("E
  (, A 
  ("E
  ( A 
@  (
"E
   ( A 
  ("AxF
@ E
   (
 A 
  ($"E
  (( A 
@  ("E
   ( A 
  ("E
  ( A 
  ("E
  ( A 
@  ("E
   ( A 
@  ("E
   ( A 
  (
"E
   (  A 

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1801-1950

<@  ( "E
   ( A 
@  (
"E
   ( A 

# A0k"$    @@@ -  
   Ax6

@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6

   A:   6 A$j Aj򀀀 @@@@ ($"AxG
 @ - (E
 A$j (" @@ ($AxG
  Aj  

 AjAj A$jAj( 6   )$7
 ("AxG
 A$j Aj򀀀  ($"AxF
 

  ( )6  A,j(  6 
 - (!

  ( 
6  A j(  6 
 - 
!
A! - 
Aj"Aq G
  : 
   (6 	   :    6  A
j ( 
6  

 - 
Aj"Aq G
  : 
 A$j  @ ($AxG
   Ax6A !

   )$7  A
j A,j( 6 

  Ax6

A   
A   
A!
   6  A0j$ 

~# A k"$  A8j  @@ - 8
   Ax6 

Ax!@@@@@@@@@@@@@@ - 9Aq"Aj# 
 A^j
          
 Aj  Ax! - E
  - 	!@ Aq"A,F
 A F
 A F
      - ! -  
 

   6 


 Aj  @ - 
   Ax6 


 - AqA"G
   A j   (h! (d! (`
@ AxG
   Ax6 


  Ax6  E
  A 


 A(j  @ - (
   Ax6 


Ax!@ - )AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6 


  A!@@@ A j  @ -  
 Ax!

@@@@ - !"Aq"A,F
  A F
 Aq!A ! 
Ax!

   Aj  @ - 
 Ax!

 - !
@ AqA G
 Ax!

 A j   (`"AxG
 B~B!

 B~!
 BPE
 
 - 
Aj"Aq G

  : 
 A j  Ax! (`AxF
   )`7   Aj A jAj( 6 


 )d!
 - 
Aj"Aq G
	   7   6   : 



   6 
	
 A0j  @ - 0
   Ax6 
	
 - 1AqA G
 - 
"E
  Aj": 
@ Aq
   Ax6 
	
   A: @  6< A j A<j򀀀 @@@ (D"AxG
 @ - HE
 A j (<" @@ (`AxG

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:1951-2100
  A j  

 A jAj A jAj( 6   )`7P
@ (P"AxF
  5 U A j1  B0 A j3  B ! - T!

 A j A<j򀀀  (D"AxF
 

 5 I A j1  B0 A j3  B ! - H!
 - 
Aj"Aq G
   6   : 
   B B7
	
 - 
Aj"Aq G
  : 
 A j  @ (`AxG
   Ax6 
	
   )`7   Aj A jAj( 6 

  Ax6 

  Ax6 

   (l6   6   6 

Á   
  Ax6 

A   
A   
Á   
 A j$ 

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 


   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 Ax! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
Ax!@ (AxF
 




 Aj   (AxG
 A j   (t! (p! (l! (h

 Aj   - E
 - !@@@@ Aq"A,F
 Ax! A G
	 AxG



   Aj  @ - 
 Ax!
	
@ - Aq"A"F
 Ax! A F
	Ax!
	
 A j  @ (h"AxF
  !

@ - l"E
  A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxG



@ AxF
  A4jA A 


 Aj   (AxG
 A j   (t! (p! (l! (hE


  6<  68  64 - 
Aj"Aq G
  : 
 A jA
j A4j"Aj( 6  A6h  ) 7l Aj  @ (AxG
    )h7   A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 


 Aj   - 	! - 
 


A   
  B7 
	
 A j" )7  Aj AjAj( 6  (l! (p! (t!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jA A 

 A<j Aj( 6   )74
 AxF

@ E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

 E
   AtA 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 

-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2101-2250
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ AG
  A A A G!
  Ax6    : 

A!@ AG
  A A A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$    @@ -  
   B7 

@@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   B7 

   Aj Aւ  - 
Aj"Aq G
  : 
 (
 (! (
! (! Aj  @ (AxG
    6
   6   6  A 6 

   )7  A
j A
j( 6   A6 @ E
  Aj!@@ A|j( " E
  (   A 
 A j! Aj"
 

 E
  AtA 

  B7 

Á   
Á   
  A6    Aj") 7  A
j Aj( 6 
 A j$ 
# A0k"$    @@@ -  
   Ax6

@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6

   A:   6 A$j Aj򀀀 @@@@ ($"AxG
 @ - (E
 A$j (" @@ ($AxG
  Aj  

 AjAj A$jAj( 6   )$7
 ("AxG
 A$j Aj򀀀  ($"AxF
 

  ( )6  A,j(  6 
 - (!

  ( 
6  A j(  6 
 - 
!
A! - 
Aj"Aq G
  : 
   (6 	   :    6  A
j ( 
6  

 - 
Aj"Aq G
  : 
 A$j  @ ($AxG
   Ax6A !

   )$7  A
j A,j( 6 

  Ax6

A   
A   
A!
   6  A0j$ 

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 


   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 Ax! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
Ax!@ (AxF
 




 Aj   (AxG
 A j     (t! (p! (l! (h

 Aj   - E
 - !@@@@ Aq"A,F
 Ax! A G
	 AxG




-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2251-2400
   Aj  @ - 
 Ax!
	
@ - Aq"A"F
 Ax! A F
	Ax!
	
 A j  @ (h"AxF
  !

@ - l"E
  A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxG



@ AxF
  A4jA A	  E



 Aj   (AxG
 A j     (t! (p! (l! (hE


  6<  68  64 - 
Aj"Aq G
  : 
 A jA
j A4j"Aj( 6  A 6h  ) 7l Aj  @ (AxG
    )h7   A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 


 Aj   - 	! - 
 


A   
  B7 
	
 A j" )7  Aj AjAj( 6  (l! (p! (t!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jA A	 

 A<j Aj( 6   )74
 AxrAxF

  A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ A	G
  A A	 A G!
  Ax6    : 

A!@ A	G
  A A	 A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 


   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 Ax! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
Ax!@ (AxF
 




 Aj   (AxG
 A j   (t! (p! (l! (h

 Aj   - E
 - !@@@@ Aq"A,F
 Ax! A G
	 AxG



   Aj  @ - 
 Ax!
	
@ - Aq"A"F
 Ax! A F
	Ax!
	
 A j  @ (h"AxF
  !

@ - l"E
  A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxG



@ AxF
  A4jA A

-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2401-2550
  E



 Aj   (AxG
 A j   (t! (p! (l! (hE


  6<  68  64 - 
Aj"Aq G
  : 
 A jA
j A4j"Aj( 6  A6h  ) 7l Aj  @ (AxG
    )h7   A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 


 Aj   - 	! - 
 


A   
  B7 
	
 A j" )7  Aj AjAj( 6  (l! (p! (t!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jA A
 

 A<j Aj( 6   )74
 AxrAxF

  A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ A
G
  A A
 A G!
  Ax6    : 

A!@ A
G
  A A
 A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj  A!Ax!A!@@ - E
 Ax! - 	AqA"G
    Aj   (
! (! (!A!@@ (E
  !

A !@ AxF
  !

@@ 
 A!

A ! A H
A - ΀ A! A "E

     !
   6   6A
!
   6    j 6  A j$ 
    

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@@@ - )AqA G
  - 
"E
  Aj": 
@ Aq
   B7 


   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 Ax! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
Ax!@ (AxF
 




 Aj   (AxG
 A j       (t! (p! (l! (h"AxF
 (!	 (!
 (!
 (|!
 (x!

 Aj   - E
 - !@@@ Aq"A,F
 Ax! A G
 AxG

	
   Aj  @ - 
 Ax!

@ - Aq"A"F
 Ax! A F
Ax!

 A j  @ (h"AxF
  !

@@ - l"E
  A j  @@ (hAxG
  Aj  

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2551-2700

 AjAj A jAj( 6   )h7
 (AxG



@ AxF
  A4jAނ A  E



 Aj   (AxG
 A j       (t! (p! (l! (h"AxF
 (!	 (!
 (!
 (|!
 (x!

 Aj   - 	! - 
 


  	6T  
6P  
6L  
6H  
6D  6@  6<  68  64 - 
Aj"Aq G

  : 
 A jA0j" A0jAj"A j) 7  A jA(j"
 Aj) 7  A jA j" Aj) 7  A jAj"
 Aj) 7  A jA
j A4j"Aj( 6  A6h  ) 7x  ) 7l Aj  @ (AxG
    )h7   A0j ) 7   A(j 
) 7   A j ) 7   Aj 
) 7   Aj A jAj) 7   Aj A jAj) 7 


   )7  A
j AjAj( 6   A6  A j 


  B7 


A   
 A j" )7  Aj AjAj( 6  (t! (p! (l!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jAނ A 

 A<j Aj( 6   )74
 AxF
 E

  A 
@ E
  
 A 
 
E
  
 
A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ AG
  A A A G!
  Ax6    : 

A!@ AG
  A A A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 

~# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A j  Ax!Ax!@ -  
 Ax!


@ - !Aq"A"F
  A F
Ax!Ax!


 A j  @ (h"AxF
 Ax!Ax! !
	
 A j!@@@@ - l" 
 Aj  @ (AxF
 Ax!

 A j      Ax! (t!	 (p!
 (l!
@ (h"AxG
 
	
 )!
 (!
 (! (|! (x!Ax!

 Aj  @ (AxF
 Ax!
	
 A j   (t! (p! (l!Ax!@ (hE
  !




 A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
@ (AxF
 Ax!Ax!


Ax!Ax!

-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2701-2850
 Aj  @ - 
  !


 - !@@@@@ Aq"A,F
 Ax!@ A F
  !

 AxG
 !

   Aj  @ - 
 Ax! !

@@@@@ - Aq"A"F
 Ax! A G
 !

 A j  @ (h"AxF
  ! !

 - l"
 !Ax!

 A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxF
 !

@ AxF
  A4jA A
  !

 Aj  @ (AxF
  !


 A j   (t! (l! ! (p"! (hE



@ AxF
  A4jA A
  E


 Aj  @ (AxF
  !
	
 A j       (t!	 (p!
 (l!
 (h"AxG
 !
	
@ AxG
  A4jA A
  E
  A 

  
7`  
6\  6X  6T  6P  	6L  
6H  
6D  6@  6<  68  64 - 
Aj"Aq G
  : 
 A jA0j" A0jAj"A j) 7  A jA(j" Aj) 7  A jA j"	 Aj) 7  A jAj" Aj) 7  A jA
j A4j"Aj( 6  A6h  ) 7x  ) 7l Aj  @ (AxG
    )h7   A0j ) 7   A(j ) 7   A j 	) 7   Aj ) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 

 )!
 (!
 (! (|! (x!
 Aj   - 	! - 
 
 !
	
A   
  B7 

Ax!
 A4jA A
 Ax!

  )7  Aj AjAj( 6  (t!	 (p!
 (l!

  	6<  
68  
64

  )7  Aj AjAj( 6  (l! (p! (t!
  6<  68  64Ax!

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A<j Aj( 6   )74
@ 
  !

 ! AxF

 
 A 
@ 	E
   	A 
@ 
  !

 
 A  !
 AxrAxF
   A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ A
G
 @ A A
 E
   Aj! A A
 
 A:  

  A : 

  Aj!
 A:  
  Ax6 

@@@ A
G

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:2851-3000
 @ A A
 E
   Aj! A A
 
 A:  

  A : 

  Aj!
 A:  
  Ax6  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@@ - )AqA G
  - 
"E
  Aj": 
@ Aq
   B7 


   A j  Ax!A!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 A! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
A!@ (AxF
 




 Aj   (AxG
 A j       (t! (p! (l! (h"AF
 (!	 (!
 (!
 (!
 (!
 (|! (x!
 Aj   - E
 - !@@@ Aq"A,F
 Ax! A G
 AG

	
   Aj  @ - 
 Ax!

@ - Aq"A"F
 Ax! A F
Ax!

 A j  @ (h"AxF
  !

@@ - l"E
  A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxG



@ AF
  A4jA A
 


 Aj   (AxG
 A j       (t! (p! (l! (h"AF
 (!	 (!
 (!
 (!
 (!
 (|! (x!
 Aj   - 	! - 
 


  	6\  
6X  
6T  
6P  
6L  6H  6D  6@  6<  68  64 - 
Aj"Aq G

  : 
 A jA0j" A0jAj"A j) 7  A jA(j" Aj) 7  A jA j" Aj) 7  A jAj"
 Aj) 7  A jA
j A4j"Aj( 6  A6h  ) 7x  ) 7l Aj  @ (AxG
    )h7   A0j ) 7   A(j ) 7   A j ) 7   Aj 
) 7   Aj A jAj) 7   Aj A jAj) 7 


   )7  A
j AjAj( 6   A6  A j 


  B7 


A   
 A j" )7  Aj AjAj( 6  (t! (p! (l!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jA A
 

 A<j Aj( 6   )74
 AF

@ E
   A 
 AxF
 @ E
  
 A 
 
E
  
 
A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 

-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3001-3150
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ A
G
  A A
 A G!
  Ax6    : 

A!@ A
G
  A A
 A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 


   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (h"AxF
 Ax! !

@@ - l"E
  A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
Ax!@ (AxF
 




 Aj   (AxG
 A j     (t! (p! (l! (h

 Aj   - E
 - !@@@@ Aq"A,F
 Ax! A G
	 AxG



   Aj  @ - 
 Ax!
	
@ - Aq"A"F
 Ax! A F
	Ax!
	
 A j  @ (h"AxF
  !

@ - l"E
  A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxG



@ AxF
  A4jAׂ A  E



 Aj   (AxG
 A j     (t! (p! (l! (hE


  6<  68  64 - 
Aj"Aq G
  : 
 A jA
j A4j"Aj( 6  A6h  ) 7l Aj  @ (AxG
    )h7   A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 


 Aj   - 	! - 
 


A   
  B7 
	
 A j" )7  Aj AjAj( 6  (l! (p! (t!
  6<  68  64

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A4jAׂ A 

 A<j Aj( 6   )74
 AxrAxF

  A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ AG
  A A A G!
  Ax6    : 

A!@ AG
  A A A G!
  Ax6    :  E
  A 


-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3151-3300
  Ax6 

   6   6   6 
 A j$ 
# A0k"$    @@@ -  
   Ax6

@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6

   A:   6 A$j Aj򀀀 @@@@ ($"AxG
 @ - (E
 A$j (" @@ ($AxG
  Aj  

 AjAj A$jAj( 6   )$7
 ("AxG
 A$j Aj򀀀  ($"AxF
 

  ( )6  A,j(  6 
 - (!

  ( 
6  A j(  6 
 - 
!
A! - 
Aj"Aq G
  : 
   (6 	   :    6  A
j ( 
6  

 - 
Aj"Aq G
  : 
 A$j  @ ($AxG
   Ax6A !

   )$7  A
j A,j( 6 

  Ax6

A   
A   
A!
   6  A0j$ 
# A0k"$    @@@ -  
   Ax6

@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6

   A:   6 A$j Aj򀀀 @@@@ ($"AxG
 @ - (E
 A$j (" @@ ($AxG
  Aj  

 AjAj A$jAj( 6   )$7
 ("AxG
 A$j Aj򀀀  ($"AxF
 

  ( )6  A,j(  6 
 - (!

  ( 
6  A j(  6 
 - 
!
A! - 
Aj"Aq G
  : 
   (6 	   :    6  A
j ( 
6  

 - 
Aj"Aq G
  : 
 A$j  @ ($AxG
   Ax6A !

   )$7  A
j A,j( 6 

  Ax6

A   
A   
A!
   6  A0j$ 

# A k"$  A(j  @@ - (
   B7 

@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A j  Ax!Ax!@ -  
 

@ - !Aq"A"F
  A F
Ax!

 A j  @ (@"AxF
 Ax! !

@@ - D"E
  A j  @@ (@AxF
  A jAj A jAj( 6   )@7P

 A j  
Ax! (PAxG
	

 A j   (PAxG
 A j   (L! (H! (D! (@

 Aj   - E
 - !@@@@ Aq"A,F
 Ax! A G
	 AxG



   Aj  @ - 
 Ax!
	
@ - Aq"A"F
 Ax! A F
	Ax!
	
 A j  @ (@"AxF
  !

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3301-3450

@ - D"E
  A j  @@ (@AxG
  A j  

 A jAj A jAj( 6   )@7P
 (PAxG



@ AxF
  A4jA A
  E



 A j   (PAxG
 A j   (L! (H! (D! (@E


 - 
Aj"Aq G

  : 
 A j  @ (@AxG
    6
   6   6  A 6 

   )@7  A
j A j( 6   A6  AjAI
 E
  A 

 Aj   - 	! - 
 


A   
  B7 


 A j" )P7  Aj A jAj( 6  (D! (H! (L!
  6<  68  64

  ( E6P  A j(  6 S - D!
 A<j ( S6    (P6 9  : 8  64

 A4jA A
 

 A<j A j( 6   )P74
 AxrAxF

  A 
 - 
Aj"Aq F

A   
  : 
   )47  A6   A
j A0jA
j( 6 
 A j$ 

# Ak"$  A(j  @@@ - (
   B7 

@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A j  Ax!Ax!@ -  
 Ax!


@ - !Aq"A"F
  A F
Ax!Ax!


 A j  @ (h"AxF
 Ax!Ax! !
	
 A j!@@@@ - l" 
 Aj  @ (AxF
 Ax!

 A j     (t! (p!	 (l!Ax!@ (hE
 
	


 Aj  @ (AxF
 Ax!
	
 A j     (t!
 (p!
 (l!Ax!@ (hE
  
!





 A j  @@ (hAxF
  AjAj A jAj( 6   )h7

 Aj  
@ (AxF
 Ax!Ax!


Ax!Ax!
 Aj  @ - 
  
!



 - !
@@@@ 
Aq"
A,F
 Ax!@ 
A F
  
!


 AxG
 
!


   Aj  @ - 
 Ax! 
!



@@@@@ - Aq"
A"F
 Ax! 
A G
 
!

-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3451-3600


 A j  @ (h"AxF
  
!
 !

 - l"
 
!
Ax!

 A j  @@ (hAxG
  Aj  

 AjAj A jAj( 6   )h7
 (AxF
 
!


@ AxF
  A4jA A
  
!


 Aj  @ (AxF
  
!



 A j     (t!
 (l! 
!
 (p"
!
 (hE



@ AxF
  A4jAʂ A
  
!
 


 Aj   (AxG
 A j     (t! (p!	 (l! (hE


@ AxG
  A4jAʂ A
  E
 
 A 

  6H  	6D  6@  
6<  
68  64 - 
Aj"Aq G
  : 
 A jA0j" A0jAj"A j) 7  A jA(j" Aj) 7  A jA j"	 Aj) 7  A jAj"
 Aj) 7  A jA
j A0jAj"Aj( 6  A6h  ) 7x  ) 7l Aj  @ (AxG
    )h7   A0j ) 7   A(j ) 7   A j 	) 7   Aj 
) 7   Aj A jAj) 7   Aj A jAj) 7 

   )7  A
j AjAj( 6   A6  A j 

 Aj   - 	!
 - 
 
 
!

	
A   
  B7 


Ax!
 A4jA A
 Ax!

  )7  Aj AjAj( 6  (l! (p!	 (t!
  6<  	68  64 
!


  )7  Aj AjAj( 6  (l! (p!
 (t!

  
6<  
68  64Ax!

  ( m6  A j(  6  - l!
 A<j ( 6    (6 9  : 8  64

 A<j Aj( 6   )74
 AxrAxF

 	 A 
 AxrAxF
  
 A 
 - 
Aj"Aq G
  : 
  A
j A0jA
j( 6    )47  A6 
 Aj$ 
A   
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ A
G
 @ A A
 E
   Aj! A A
 
 A:  

  A : 

  Aj!
 A:  
  Ax6 

@@@ A
G
 @ A A
 E
   Aj! A A
 
 A:  

  A : 

  Aj!

-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3601-3750
 A:  
  Ax6  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$    @@ -  
   B7 

@@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   B7 

   Aj Aׂ  - 
Aj"Aq G
  : 
 (
 (! (
! (! Aj  @ (AxG
    6
   6   6  A 6 

   )7  A
j A
j( 6   A6 @ E
  !@@ ( " E
  Aj(   A 
 A
j! Aj"
 

 E
  A
lA 

  B7 

Á   
Á   
  A6    Aj") 7  A
j Aj( 6 
 A j$ 
# A k"$    @@ -  
   B7 

@@@@ - AqA G
  - 
"E
  Aj": 
@ Aq
   B7 

   Aj A؂  - 
Aj"Aq G
  : 
 (
 (! (
! (! Aj  @ (AxG
    6
   6   6  A 6 

   )7  A
j A
j( 6   A6 @ E
  !@@ ( " E
  Aj(   A 
@ A
j( " E
  Aj(   A 
@ Aj( " E
  A
j(   A 
 A(j! Aj"
 

 E
  A(lA 

  B7 

Á   
Á   
  A6    Aj") 7  A
j Aj( 6 
 A j$ 
# A k"$  Aj  @@ - 
   B7 

@@ - 	AqA"G
    A8j   (D! (@! (<! (8
@ AxG
   6  6 Aj   @ - 
    ) 7  Aj AjAj) 7   A 6 

  - : 7 A6< Aܘ 68 B7D A B  A7j7X A B  Aj7P  A j6@  Aj A8j   A6 

  6  6 Aj   @@ - 
    ) 7  Aj AjAj) 7 A !

  - : 7 A6< Aܘ 68 B7D A B  A7j7X A B  Aj7P  A j6@  Aj A8j A!
   6  E
  A 

  B7 

   6
   6   6  A6 
 A j$ 
# A k"$  Aj  @@ - 
   B7 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
     쀀 

    쀀  E
  A 

  B7 

   6
   6   6  A6 
 A j$ 
~# A k"$  Aj  Ax!@ - E
 Ax!@@@ - "AqASj 
  A !

Ax! AOjAqA	O
   Aj   APjAq! - E
  - APj"AqA	K
 @  @ B
~"B E
 Ax!

@ " Aqj" O
 Ax!

 Aj   - E
 - 	APj"AqA
I
 

   6Ax!

-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3751-3900
   6  A j$ 
~# A0k"$  A(j  @@ - (
   Ax6A!

@@@@ - )"AqASj 
  Ax6A!

    B 7

@ AOjAqA	I
   Ax6A!

   A j   APjB!@@ -  E
  - !APj"AqA	K
 @   Aj B B
B   )B R
 )" B|" T
 Aj   - E
 - 	APj"AqA
I
 

   7

  Ax6A!

A !
   6  A0j$ 
# Ak"$    @@ -  
   Ax6 

@@@@ - AqAj              
  Ax6 

   Aj A܁ A  (AxF
   )7   Aj AjAj( 6 

   Aj A߁ A @ (AxF
    )7   Aj AjAj( 6 

  Ax6   A : 

  Ax6   A: 
 Aj$ 
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
     ɂ 

    ɂ  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
     ˂ 

    ˂  E
  A 

  Ax6 

   6   6   6 
 A j$ 

# A k"$  A j  @@ -  
   Ax6 

@@@@@@@@@ - !AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6 


   Aj  @ - 
 Ax!

Ax!@ - Aq"A"F
  A F


 A j ΀  (D"AxG
@@ - H"	E
  A j  @@ (DAxF
  A8jAj A jAj( 6   )D78

 A8j  
 (8AxG
A !


 A j  @@ (DAxF
  A8jAj A jAj( 6   )D78

 A8j  
 (8"AxG
 (<!
A!

 Aj  @ - 
 Ax!

 - !@@@ Aq"A,F
 Ax! A G
	 




   Aj  @ - 
 Ax!
	
@ - 	Aq"A"F
  A G
	Ax!
	
 A j ΀  (D"AxG
@@ - H"	E
  A j  @@ (DAxG
  A8j  

 A8jAj A jAj( 6   )D78
 (8AxF


 
AF
 A j  @@ (DAxG
  A8j  

 A8jAj A jAj( 6   )D78
 (8"AxG
 (<!
A!

    - ! -  

-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:3901-4050
 
Ax!

 Ax6(  
6,

  Ax6 

A   
  )<7,  6(

 A(jAǀ A 

 A(jAj A8jAj( 6   )87(

  ( I68  A j(  6 ; - H!	 !
 A0j ( ;6    (86 -  	: ,  6(

 A(jAǀ A 
@@ - 
Aj"Aq G
   : 
 (,! (("	AxG
 A j  @ (DAxG
   Ax6    6

   )D7   Aj A jAj( 6 

A   
   (06   6   	6 
 A j$ 

# A k"$  A j  @@ -  
   BȀ7 

@@@@@@@@@@@@@@ - !AqA G
 @ - 
"E
   Aj": 
@ Aq
   BȂ7 

   Aj  Ax!Ax!@ - 
 Ax!	


@ - Aq"	A"F
  	A F
Ax!	Ax!


 A8j ̀ @ (8"
AxF
 Ax!	Ax! 
!
	
 A<j!
@@@@@ - <"
 
 A(j  @ ((AxF
 Ax!
	
 A8j   (D!
 (@!
 (<!	Ax!@ (8E
 




 A(j  @ ((AxF
 Ax!	


 A8j   (D! (@! (<!Ax!	 (8E
 !


 A8j  @@ (8AxF
  A(jAj A8jAj( 6   )87(

 A(j  
@ ((AxF
 Ax!	Ax!


Ax!Ax!	

 Aj  @ - 
  !


 - !@@@@ Aq"A,F
 Ax!@ A F
  !

 AxG
 !

   Aj  @ - 
 Ax! !


@@@@@ - 	Aq"A"F
 Ax! A G
 !

 A8j ̀ @ (8"
AxF
  ! 
!

 - <"

 !Ax!

 A8j  @@ (8AxG
  A(j  

 A(jAj A8jAj( 6   )87(
 ((AxF
 !

@ AxF
  A<jA A  !

 A(j  @ ((AxF
  !


 A8j   (D! (<! ! (@"! (8E



@ 	AxF
  A<jAÃ A  ! 	


 A(j   ((AxG
 A8j   (D!
 (@!
 (<!	 (8E


@ 	AxG
  A,jAÃ A   (46D  ),7<Ax!	 E
  A 

  
6L  

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4051-4200
6H  	6D  6@  6< !	

    - ! -  
 
 !
	
A   
  B聀7 


Ax!	
 A<jA A Ax!

 
 )(7  
Aj A(jAj( 6  (<!	 (@!
 (D!

  
6D  
6@  	6< !

 
 )(7  
Aj A(jAj( 6  (<! (@! (D!
  6D  6@  6<Ax!

  ( =6(  A j(  6 + - <!

 A j ( +6    ((6 A  
: @  6<

 A j A0j( 6   )(7<
 	AxrAxF

 
 	A 
Ax!	 AxrAxF
   A 
@@ - 
Aj"Aq G
   : 
 	AxF
 (D! (@!
 (<! (L! (H!
 A(j  @ ((AxG
    6   
6   6
   
6   6   	6 

   )(7  A
j A0j( 6   Ax6 @ 	E
   	A 
 E
 
 A 

A   
  Ax6    A<j") 7  A
j Aj( 6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@@@ A{j 
 A A E

  Aj!

  Aj! A A E

 A:  

 A:  

@@@@@ A{j 
 A A E

  Aj!

  Aj! A A E

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A 

  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@@@ A{j 
 A A E

  Aj!

  Aj! A A E

 A:  

 A:  

@@@@@ A{j 
 A A E

  Aj!

  Aj! A A E

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A 

  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (

-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4201-4350
@ AxG
 A!@ AG
  A A A G!
  Ax6    : 

A!@ AG
  A A A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ A{j 





 Aլ A E


	
  Aj! )  A )  R
	 A:  


 Aڬ A
 
  A: 


@@@ A{j 
 Aլ A E


  Aj! )  A )  R
 A:  

 Aڬ A
 
  A: 

  Ax6 
	
   6   6   6 

  Aj!
 A:  

  A : 
  Ax6  E
  A 

  Aj!
 A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ Awj 

 A A
 E


	
  Aj! A A
 
	 A:  


 A A	 
  A: 


@@@ Awj 
 A A
 E


  Aj! A A
 
 A:  

 A A	 
  A: 

  Ax6 
	
   6   6   6 

  Aj!
 A:  

  A : 
  Ax6  E
  A 

  Aj!
 A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ A|j
 


 A A E


	
  Aj! )  A )  R
	 A:  


 (  A (  G
  A: 


@@@ A|j 
 A A E


  Aj! )  A )  R
 A:  


-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4351-4500
 (  A (  G
  A: 

  Ax6 
	
   6   6   6 

  Aj!
 A:  

  A : 
  Ax6  E
  A 

  Aj!
 A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
     Ȃ 

    Ȃ  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@@@ A{j 
 )  A )  Q

  Aj!

  Aj! A A E

 A:  

 A:  

@@@@@ A{j 
 )  A )  Q

  Aj!

  Aj! A A E

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A 

  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 A!@ AG
  A A A G!
  Ax6    : 

A!@ AG
  A A A G!
  Ax6    :  E
  A 

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ Axj

 


 A A
 E


	
  Aj! )  A )  R
	 A:  


 A A
 
  A: 


@@@ Axj 
 A A
 E


  Aj! )  A )  R
 A:  

 A A
 
  A: 

  Ax6 
	
   6   6   6 

  Aj!
 A:  

  A : 
  Ax6  E
  A 

  Aj!
 A:  

  A : 

-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4501-4650
  Ax6 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@@ Axj

 

 Aʵ A
 E


	
  Aj! )  A )  R
	 A:  


 Aյ A
 
  A: 


@@@ Axj 
 Aʵ A
 E


  Aj! )  A )  R
 A:  

 Aյ A
 
  A: 

  Ax6 
	
   6   6   6 

  Aj!
 A:  

  A : 
  Ax6  E
  A 

  Aj!
 A:  

  A : 
  Ax6 
 A j$ 

# A k"$  A(j  @@ - (
   B7 

@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   B7 

   A j  Ax!Ax!@ -  
 

@ - !Aq"	A"F
  	A F
Ax!

 A0j Ȁ @ (0"	AxF
 Ax! 	!

@@ - 4"	E
  A0j  @@ (0AxF
  A jAj A0jAj( 6   )07@

 A j  
Ax! (@AxG
	

 A j   (@AxG
 A0j     (<!
 (8!
 (4! (0

 Aj   - E
 - !
@@@@ 
Aq"
A,F
 Ax! 
A G
	 AxG



   Aj  @ - 
 Ax!
	
@ - Aq"
A"F
 Ax! 
A F
	Ax!
	
 A0j Ȁ @ (0"	AxF
  	!

@ - 4"	E
  A0j  @@ (0AxG
  A j  

 A jAj A0jAj( 6   )07@
 (@AxG



@ AxF
  A4jA A  E



 A j   (@AxG
 A0j     (<!
 (8!
 (4! (0E


 - 
Aj"Aq G

  : 
 A0j  @ (0AxG
    
6
   
6   6  A 6 

   )07  A
j A8j( 6   A6  E
 
 A 

 Aj   - 	!
 - 

-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4651-4800
 


A   
  B7 


 A4j" )@7  Aj A jAj( 6  (4! (8!
 (<!

  
6<  
68  64

  ( 56@  A8j(  6 C - 4!	
 A<j ( C6    (@6 9  	: 8  64

 A4jA A 

 A<j A j( 6   )@74
 AxrAxF

 
 A 
 - 
Aj"Aq F

A   
  : 
   )47  A6   A
j A0jA
j( 6 
 A j$ 
~# A k"$  A(j  @@ - (
   Ax6  Ax6 

@@@@@@@@@@@@@@@@ - )AqA G
 @ - 
"E
   Aj": 
@ Aq
   Ax6  Ax6 

   A j  Ax!Ax!@ -  
 


@ - !Aq"	A"F
  	A F
Ax!


 A0j ˀ @ (0"	AxF
 Ax! 	!


@@@@@@ - 4"	 
 A0j  @ (0AxF
 Ax!


 A j   Ӏ @ (PE
 Ax!


 )X!
B !
B!
Ax!

 A0j  @ (0AxF
 Ax!


 A j  @ (PE
 Ax!

 )X!
B!
B !
Ax!

 A j   (PAxG
 A0j   (<! (8! (4! (0
B !


 A0j  @@ (0AxF
  A jAj A0jAj( 6   )07P

 A j  
@ (PAxF
 Ax!

B !
Ax!
B !

 Aj   - E

 - !@@@@@@ Aq"A,F
 Ax! A G
 
E
	 

 A0jA A 

   Aj  @ - 
 Ax!

@ - Aq"A"F
 Ax! A F
Ax!

 A0j ˀ @ (0"	AxF
  	!

@@@@ - 4"	 
 A0j  @@ (0AxG
  A j  

 A jAj A0jAj( 6   )07P
 (PAxG


 
AF
 A0j   (0AxG
 A j   (P
 )X!
B!


 
AF
 A0j   (0AxG

 A j   Ӏ  (P

 )X!
B!


@ AxF
  A0jA A  


 A j   (PAxG
	 A0j   (<! (8! (4! (0E

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4801-4950



Ax!@ AxG
  A0jA A 

  6H  6D  
78  
70 !

 A0jA A 

 A0jA A 

 Aj   - 	! - 
 



A   
  Ax6  Ax6 

Ax!
 A0jA A 
	
 A4j" )P7  Aj A jAj( 6  (4! (8! (<!
  68  64  60
	
 A j A8j( 6   )07T
  )X74  (T60

 A j A8j( 6   )07T
  )X74  (T60

  ( 56P  A8j(  6 S - 4!	
 A8j ( S6    (P6 5  	: 4  60

 A0jAj A jAj( 6   )P70
Ax! AxrAxF

  A 
Ax!
@@ - 
Aj"Aq G
   : 
 AxF
 )H!
 (D! A j  @ (PAxG
    )07    
7   6   6  Aj A0jAj) 7 

   )P7   Aj A jAj( 6   Ax6 E
  A 

A   
   )07   Ax6  Aj A0jAj( 6 
 A j$ 
~# A k"$    Ax!A!@@@@@ -  E
 Ax! - AqA"G
    A8j   (D! (@! (<!@ (8
 @ AxG
   6
  6 A j    -  
  )(7A !

  6
  6 A j   @@ -  
   )(7A !

  - !: 7 A6< A 68 B7D A B  A7j7X A B  Aj7P  A j6@ AjAr A8j A!
 E
  A 

  6  6
A
!
 Aj j 6 

  - !: 7 A6< A 68 B7D A B  A7j7X A B  Aj7P  A j6@ AjAr A8j A!
 
  )!A !

 )!   (
6A!
   6    7 A j$ 
~# A k"$  A j  @@ -  
   Ax6  Ax6 

@@@@@@@@@@@@ - !AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6  Ax6 


   Aj  Ax!Ax!@ - 
 

@ - Aq"	A"F
  	A F
	Ax!

 A(j ƀ @ (("	AxF
 Ax! 	!

@@@@@ - ,"	 
 A(j  @ ((AxF
 Ax!

 A j  @ (HE
 Ax!

 A j) !
 )P!
B!
Ax!

 A j   (HAxG
 A(j   (4!
 (0! (,! ((
B !


 A(j  @@ ((AxF
  A jAj A(jAj( 6   )(7H

 A j  
@ (HAxF
 Ax!


B !
Ax!

 Aj   - E
 - ! A j!@@@@ Aq"A,F
 Ax! A G

 AxG



   Aj  @ - 
 Ax!


@ - 	Aq"A"F
 Ax! A F


-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:4951-5100
Ax!


 A(j ƀ @ (("	AxF
  	!


@@@@ - ,"	 
 A(j  @@ ((AxG
  A j  

 A jAj A(jAj( 6   )(7H
 (HAxG


@ AxF
  A(jA A 

 A j   (HAxG
	 A(j   (4!
 (0! (,! ((E



 
AF
 A(j   ((AxG
 A j   (H
 ) !
 )P!
B!

    - ! -  
 



@ 

  A(jA A Ax! E

  A 


  
7(  
6@  6<  
70 !


 A(jA A 


  Ax6  Ax6 


A   
 A j A0j( 6   )(7L
  )P7,  (L6(

 A,j" )H7  Aj A jAj( 6  (,! (0! (4!

  
60  6,  6(Ax!

  ( -6H  A0j(  6 K - ,!	
 A0j ( K6    (H6 -  	: ,  6(

 A(jA A Ax!

 A(jAj A jAj( 6   )H7(
Ax! AxrAxF
   A 
@@ - 
Aj"Aq G
   : 
 AxF
 )@!
 (<! A j  @ (HAxG
    )(7    
7   6   6  Aj A(jAj) 7 

   )H7   Aj A jAj( 6   Ax6 E
  A 

A   
   )(7   Ax6  Aj A(jAj( 6 
 A j$ 
~@  ("E
   (!B
     @ (  ("k" O
      (  ("k!
@  O
      (!
 ( j      j6
@  ) "P
 B     
@  )"P
 B     
@  1 
"B Q
 B  큀   큀 
@  1 
"P
 B( 큀   큀 

~# A k"$ @@@@@@@ Aj 
    끀 ! 

   Aj  ނ " 
A ! 

@  ) B R
   A 6  B 7  B7 
  : 
 A: 
@ AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

@ 
 A A ! 

  Aj  Aj恀 " 
A ! 

   6 AjA AA A
 

   6 AjA AA A
 
 (! 
 A j$   
~# A k"$ @@@@@@@ Aj 
    끀 !

   Aj   "
A !

 A : 
  : 
@ AqE
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5101-5250
j Aj  A
j !

 Aj  @ (E
  (
!

   ) 7 A !

  6 AjA A
A A 

  6 AjA A
A A 
 (!
 A j$  
~# A k"$ @@@@@@@@ ) B||"A BT  
   A A	A A A Aj 

   A A	AA A  

   A A	AA A Aj 

   A A	AA A  

   A A	AA A Aj 

   A A	AA A Aj 

 Aj A A	AA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A Aj  (AxG
 Aj A
jA A  @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$ @@@@@ -  
  Aj AŇ AA Aˇ AA  - 
! (! ("AxG
  :   6
 Aj A
jAχ A
 Aj  (AxG
 Aj A
jA A Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

 Aj AŇ AAAڇ A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jAχ A
 Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   (
 -  
 A j$ 
# A k"$ @@@@@ (
AxF
  Aj A AA A AA  - 
! (! ("AxG
  :   6
 Aj A
jA A
   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

 Aj A AAA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA

-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5251-5400
j-  :     :    6   6 

  :   6
 Aj A
jA A   (AxF
   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   (
 -  
 A j$ 
# A k"$ @@@@@@@@@@@@ (   
 Aj A AA A AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 


  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jA A A
j  (AxF
	   )7   Aj AjAj( 6 


 Aj A AAA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 


  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jA A A8j @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jA A A
j @ (AxF
    )7   Aj AjAj( 6 


 Aj A
jAǈ A A(j  (AxF
   )7   Aj AjAj( 6 
	
 Aj A AAÄ A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 
	
  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 
	
 Aj A
jA A A j @ (AxF
    )7   Aj AjAj( 6 
	
 Aj A
jAǈ A Aj @ (AxF
    )7   Aj AjAj( 6 
	
 Aj A
jA A A
j @ (AxF
    )7   Aj AjAj( 6 
	
 Aj A
jA A A(j @ (AxF
    )7   Aj AjAj( 6 
	
 Aj A
jA؈ A A4j  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA܈ AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A
 A j @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5401-5550
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  

   (
 -  

   (
 -  

   (
 -  

   (
 -  

   (
 -  
 A j$ 
 @@@@ -    
   A A
A A A 
   A A
AA A 
   A A
AA A 
   A A
AA A
 
# Ak"$ A ! A 6
 B7 (!A !@@@@ ("E
  ArgAsA	lA jAvAj" j" I

 (!@ ("E
  ArgAsA	lA jAvAj" j" I

  j" I
@@ A H
 @ E
 B
 Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A܆   

# Ak"$ A ! A 6
 B7A !@@@@@@@@@ (
"AxF
 A !A !@ ("E
  ArgAsA	lA jAvAj"	 j" 	I

@ ( "E
  ArgAsA	lA jAvAj"	 j" 	I

  j" I
 ArgAsA	lA jAvAj" j" I

 (!
@ ("
E
  
Aj!A ! 
!@ ( "ArgAsA	lA jAv"	 j" 	I
  j" I
 A
j! ! Aj"
 

 
 j" 
I
  j" I
@@ A H
 @ AxF
 A A
j Ajむ 
@ 
E
  
A
l! 
Aj!@B Ajڂ  Aj( " Ajڂ  ( !	@ ( (
"k O
  Aj    (
!
 ( j 	     j6
 A
j! Atj"
 

   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
A   
A   
A   
A   
A   
~~# Ak"$ A ! A 6
 B7A !@@@@@@@@@ )0"BQ
  (P!A !  (L"  AljA  j" I
@ P
  (@!A !A !@ )8"	P
  	ByA?sA	lA jAvAj!
@ E
  AryA?sA	lA jAvAj!
  j" ArgAsA	lA jAvjAj!
  j" I
 ArgAsA	lA jAvAj" j" I

@ ) P"

  (!A !A !@ )"	P
  	ByA?sA	lA jAvAj!

-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5551-5700
@ E
  AryA?sA	lA jAvAj!
  j" ArgAsA	lA jAvjAj!
  j" I
 (`!  (\"  AljA  j" I
  j" I
 (l!  (h"  AljA  j"
 I
@@@  
j"
 I
  )P"
E
A !

A   
 ((!A !
A !@ ) "	P
  	ByA?sA	lA jAvAj!
@ E
  AryA?sA	lA jAvAj!

 
 j" ArgAsA	lA jAvjAj!
 
 j" 
I
@@ A H
 @ BQ
 A A0j Aj䂀 
@ 

 A Aj Ajႀ 
@ E
  Al!@A  Aj₀  Aj! Ahj"
 

@ E
  Al!@A  Aj₀  Aj! Ahj"
 

@ 

 A A j Ajႀ 
   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
AЌ   
A؄   
A   
AЌ   
A   
AЌ   
A   
A   
~# Ak"$ A ! A 6
 B7 ( !@@  (
"  AljA  j" I
 @ ) P"
  (!A !A !	@ )"
P
  
ByA?sA	lA jAvAj!	
@ E
  AryA?sA	lA jAvAj!
  	j" ArgAsA	lA jAvjAj!
  j" I
@@ A H
 @ E
  Al!@A  Aj₀  Aj! Ahj"
 

@ 
 A Aj Ajႀ 
   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
AЌ   
A؄   

# Ak"$ A ! A 6
 B7 (!A !@@@@@@@@@ ("E
  ArgAsA	lA jAvAj" j" I

 (!@ ("E
  ArgAsA	lA jAvAj"	 j" 	I

  j" I
A !@ ("	AxF
 A !
A !@ ( "
E
  
ArgAsA	lA jAvAj"
 
j" 
I

@ (,"
E
  
ArgAsA	lA jAvAj"
 
j"
 
I

  
j"
 I
 
ArgAsA	lA jAvAj"
 
j" 
I

  j" I
@@ A H
 @ E
 B
 Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ 	AxF
 A Aj Ajむ 
   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
A   
A   
A   
A   
A   
# Ak"$ A ! A 6

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5701-5850
 B7 (!A !@@@@ ("E
  ArgAsA	lA jAvAj" j" I

 (!@ ("E
  ArgAsA	lA jAvAj" j" I

  j" I
@@ A H
 @ E
 B
 Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
~# Ak"$   6  6  B 7 B7  6, Aj!@@@@@@@ (,(E
 A j A,j怀  (X
  )`"70 BV
  B"78 BZ
@ "AO
 A A !

 !@@@@ Av"Aj 
@ (AxG
  B7$ B 7
 B7
  : @ A: 8@@ BQ
  A6\ A 6X B7d A B " A8j7x   A j7p  A j6` A j A j  A j !

A !  A,jA 遀 "E

  6X A jA AAÆ A	  (X!

A !  Aj A,jA ݂ "E
  6X A jA AĂ A  (X!

   A,jA 끀 !
 E
 


   )7   A j AjA j( 6   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

 (\!

 A6\ A 6X B7d A B  A0j7p  A j6` A j A j  A j !

 A6\ A 6X B7d A B  A8j7@  A j6` A j A j  A j !
   6  Ax6  (! (
! (! @ ("AxF
  ($! ( !@ E
  ( A 
 E
   A 
@ E
  !@@ ( "E
  Aj(  A 
 A
j! Aj"
 

  E
    A
lA 
 Aj$ 
~@ ( "Aj( "
 A A !  A6    6
@@@@@@@@@@ ( ",  "AJ
 @@@@ A
K
   jAj,  A H

 Aq , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
 Aj!@ , "AJ
  Aq , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI
 , "! AjB
 |!@ AJ
  1 	"BV
@  B? B B8|" T
 A
!

A   
 BB8 |!A	!

 B
 |!A!

 B
 |!A!

 B
 |!A!


 BB
 |!A!


   쁀 
 !A!


A A !  A6    6
   B7  A 6  Aj Aj6   Aj6 
A   
 !A!

A   
 !A!

AЋ   
A   
A   
A   
   7  A 6  Aj  k6    j6 
~# Ak"$   6  6  B7p B 7h B 7` B 7 B78 B 7   6| AjAj! A(j! AjA j! A j! A8j!@@@@@@@ (|(E
 Aj A j怀  (
  )"	7 	BV
  	B"
7 
BZ
@ 	"AO

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:5851-6000
 A A !

 
!@@@@@@@@@@@@@ Av"Aj 

@ )8BR
  A 6X B 7P B 78
  :  A:  
BQ
 A6 A 6 B7 A B "	 Aj7  	 Aj7  Aj6 Aj Aj  Aj !

@ )B R
  A 6 B 7 B7
  :  A:  
BQ
 A6 A 6 B7 A B "	 Aj7  	 Aj7  Aj6 Aj Aj  Aj !

@ ) B R
  A 60 B 7( B7 
  :  A:  
BQ
 A6 A 6 B7 A B "	 Aj7  	 Aj7  Aj6 Aj Aj  Aj !

A !  A jA 偀 "E

  6 AjAą AAՅ A  (!


A !  A jA ぀ "E

  6 AjAą AAڅ A  (!


A !   A jA ނ "E
  6 AjAą AA A  (!


A !   A jA ނ "E
  6 AjAą AA A  (!
	
A !  A jA 恀 "E

  6 AjAą AA A
  (!

   A jA 끀 !
 E
 


   AjA  

 (!

 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !

 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !
   6  B7  (t! (p! (l! (h!  (d!
 (`!@ )8BQ
  (T!
 (P!
@ (X"E
  
!@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj! Aj"
 

 
E
  
 
AlA 
@  E
  
!@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj!  Aj" 
 

@ E
  
 AlA 
@ E
  !@@ ( " E
  Aj(   A 
@ A
j( " E
  Aj(   A 
 Aj! Aj"
 

 E
   AlA 
 Aj$ 
~# Ak"$   6
  6 A 60 B 7( B 7  Aj6<@@@@@@@ (<(E
 A j A<j怀  (p
  )x"7@ BV
  B"7X BZ
@ "AO
 A A !

 Aj Av  A<jA ր "E
 


   )7   A j AjA j) 7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

 (t!

 A6t A 6p B7| A B  A j7`  A j6x A j A j  A j !

 A6t A 6p B7| A B  A j7  Aj6x A j A j  A j !
   6  B7  (,! ((!@ (0" E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj!  Aj" 
 

 E
   AlA 
 Aj$ 
@  ("E
   (!B
 ڂ   ڂ @ (  ("k O
      (!
 ( j      j6
@  ("E
   (!B ڂ   ڂ @ (  (" k O
       (! 
 (  j       j6

# Ak"$ @@@@@@@@@ Aj 
    끀 ! 

      "
 Aj  (  (ֆ @ (
 A ! 

A A/ !  A 6

-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6001-6150

   A
j   "
 Aj  (  (ֆ @ (
 A ! 

A A/ !  A 6

  A 6
  6 AjA AA A 

  A 6
  6 AjA AA A 
 (! 
 Aj$   
@@@@@@@@@  (  
  (!@  (
"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

  ("E
  AtA 
  ("E
  ( A 
@  ("E
   ( A 
@  ("E
   ( A 
@  (
"E
   (  A 
  (("E
  (, A 
  ("E
  ( A 
@  (
"E
   ( A 
  ("AxF
@ E
   (
 A 
  ($"E
  (( A 
@  ("E
   ( A 
  ("E
  ( A 
  ("E
  ( A 
@  ("E
   ( A 
@  ("E
   ( A 
  (
"E
   (  A 


# A k"$   6  6  Aj   @@ - A
G
    )
7  A 6   A
j AjA
j( 6 

 A64 A 60 B7< A B  7H  A j68  Aj A0j   A6  - " A
F
 @@@@@@@@@@@@@  
	


 
 (
!@ ( " ( "E
     
  ("E

    ( 


@ - A
I
  (
!@ ( " ( "E
     
  ("E
     ( 
 (
!@ (" ( "E
     
  ("E

    ( 


@ (AG
  (
!@ ( " ( "E
     
  ("E
     ( 
 (
!@ (" ( "E
     
  ("E
    ( 


@ (" E
  (  A 
 (
!@ (" ( "E
     
  ("E
	    ( 
	
@ (" E
  (  A 
 (
!@ (" ( "E
     
  ("E
    ( 

 ( !@ ($" ( "E
     
  ("E
    ( 

@ (" E
  (  A 
 (
!@ (" ( "E
     
  ("E
    ( 

@ (" E
  (  A 
 (
!@ (" ( "E
     
  ("E
    ( 

@ (" E

-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6151-6300
  (  A 
 (
!@ (" ( "E
     
  ("E
    ( 

@ (" E
  (  A 
@ ( " E
  ($  A 
 (
!@ (" ( "E
     
  ("E
    ( 

@ (" E
  (  A 
@ ( " E
  ($  A 
 (
!@ (" ( "E
     
  ("E
    ( 

 (
!@ (" ( "E
     
  ("E
    ( 

 (
!@ (" ( "E
     
  ("E
     ( 
 A j$ 
# A k"$  Aj   (
! (! (!@@@ (
  Aj   - 
  B7  AxH
 E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  AxH
 E
  A 

     6
   6   6  A 6 
 A j$ 
# A k"$  Aj   (
! (! (!@@@ (
  Aj   - 
  B7  AxH
 E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  AxH
 E
  A 

     6
   6   6  A 6 
 A j$ 
# A k"$  Aj   (
! (! (!@@@ (
  Aj   - 
  B7  AxH
 E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  AxH
 E
  A 

     6
   6   6  A 6 
 A j$ 
# A k"$  Aj   (
! (! (!@@@ (
  Aj   - 
  B7  AxH
 E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  AxH
 E
  A 

     6
   6   6  A 6 
 A j$ 
# A k"$  Aj   (
! (! (!@@@ (
  Aj   - 
  B7  AxH
 E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  AxH
 E
  A 

     6
   6   6  A 6 
 A j$ 
# A0k"$  Aj ( " @@ - 
   Ax6 

@@@@@ - "Aq"A,F
  A F
 - 
  Ax6 

 - 
    Aj   - E
 - !

 A : 

  Ax6   A : 

  Ax6 

@ Aq"A"F
 Ax!@ A G
 Ax!

-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6301-6450
   6 

 Aj  @@@ - 
 Ax!

@ - 	AqA"F
 Ax!

   A j   ((! ($!@ ( 
  AxrAxF
  A 

 AxF
 (,!
   6   6   6 

  Ax6   A: 
 A0j$ 
# A k"$  Aj ( " @@@@ (AxG
  Aj  @ - 
   Ax6

@ - 	AqA F
  Aj A A    )7  A
j AjA
j( 6    (6 

   Aj A A  (AxF
   )7  A
j Aj( 6 

   )7  A
j Aj( 6   A6 

  B7 

  A6 
 A j$ 
# Ak"$  Aj ( " @@ (AxG
    @ -  
   Ax6 

@@ - AqA G
    Aj A A  (AxG
  B7 

 Aj  @ (AxG
    (6  B7 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  Aj ( " @@@@ (AxG
    @ -  
   Ax6

@ - AqA F
  Aj A AA Aŀ @ (AxF
    )7   Aj AjAj) 7   Aj AjAj) 7 

   )
7  Ax6   A
j AjA
j( 6 

   Aj A A  (AxF
   )7  A
j Aj( 6 

   )7  A
j Aj( 6   Ax6 

  Ax6 

  Ax6 
 A j$ 
# Ak"$  Aj ( " @@ (AxG
    @ -  
   Ax6 

@@ - AqA G
    Aj A A  (AxG
  B7 

 Aj A AA AĀ @ (AxG
    (6  B7 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"Al! A֪*IAt!@@ 
 A !

  Al6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6451-6600
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"A
l! Aժ IAt!@@ 
 A !

  A
l6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
  ( "At"   K"A AK"Al! AIAt!@@ 
 A !

  Al6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"Al! A֪*IAt!@@ 
 A !

  Al6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"A(l! AIAt!@@ 
 A !

  A(l6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"At! A IAt!@@ 
 A !

  At6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"Al! AIAt!@@ 
 A !

  Al6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"A0l! AժIAt!@@ 
 A !

  A0l6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"A
l! Aժ IAt!@@ 
 A !

  A
l6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"A l! Aʤ	IAt!@@ 
 A !

  A l6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A Aj  (AxG
 Aj A
jA A  @ (AxG
    (

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6601-6750
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$ @@@@@@@@ (   
 Aj AԎ A	A Aݎ AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj AԎ A	AA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj AԎ A	AA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj  (AxF
   )7   Aj AjAj( 6 

 Aj AԎ A	AA A	A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  

   (
 -  

   (
 -  

   (
 -  
 A j$ 
# A k"$ @@@@ 
 A!

A ! A H
A - ΀ A! A "E

    ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj 
   )
7  A j Aj( 6  A ل  ( ! (!   6   6   6
   6   6  A	:  @ ( " AxF
   E
  (  A 
 A j$ 
    
A A7 A?jA AЕ ۆ  
# A k"$ @@@@ 
 A!

A ! A H
A - ΀ A! A "E

    ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj 
   )
7  A j A
jAj( 6  A ل  ( ! (!   6   6   6
   6   6  A:  @ ( " AxH
   E
  (  A 
 A j$ 
    
A A7 A?jA AЕ ۆ  
~~# Ak"$   (! AjAj"  "Aj( 6   ) 7 A
j Aj  A
A    "Aj( 6   ) 7 Aj Aj  A
A    "Aj( 6   ) 7 A$j Aj  A
A  Aj (" ( @@ (AF
  A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj ) 7   )7H

 AjAj AjA
j( 6   )7 A jAjA A Aj  A6H
@ (
"E
   A 
@@@@@@@@ (HAF
  A0jAj A jAj) 7  A0jAj A jAj") 7   )H70 (`! (d! )h! (p!	 (t!
 )x!
 (! Aj (
" (  @@ (AxF
  Aj AjAj) 7  Aj AjAj) 7   )7 A
: 

  Aj( 6   )7H AjAù A  A j 
@ E
   A 
 - A
G
 (! (!
 (!
 (! (! (! AjAj" A$jAj( 6   )$7 A j Aj  (HAF
 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A jAj) 7  Aj A jAj) 7   A0jAj) 7  AjAj A0jAj) 7   )H7  )07 A 6 A 6 A 6  6  
6  
6  6  6  6  

-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6751-6900
7  
6  	6  7  6  6  Aj6  Aj6  Aj6 A j   Aj Aj Aj Aj    Aj A j 

 AjA j A j) 7  AjAj A jA j) 7  AjAj A jAj) 7  AjAj A jAj) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj Aj 
 Aj AjAj( 6   )7 Ax6 Aj @ ($"E
  (( A 
 ("E
 (
 A 

 A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj AjAj) 7   )7H A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j Aj 
 Aj AjAj( 6   )7 Ax6 A j @ E
   A 
@ 	E
  
 	A 
 ($"E
 (( A 

 AjA j A j) 7  AjAj A jA j) 7  AjAj A jAj) 7  AjAj A jAj) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj Aj 
 Aj Aj( 6   )7 Ax6 Aj @ E
   A 
@ E
  
Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@ 
E
  
 
AtA 
@ E
   A 
 	E
  
 	A 
 Aj Aj @ - A
G
 A - ΀  (! (! (!A
A "E
  6  6  6  Aj  Aj$  
 A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj AjAj) 7   )7HA A+ A jA A ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
AA
  
# A k"$ @@@ ( AxF
    ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 A j A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )7  A 64 B7, A: X A 6H A 6T A 6P A 6@ A 68  A,j6L  A8j 
   ),7  A
j A,jAj( 6   Ax6 @@@@ -  "AtjA  AsjAqA
IAq 
  

@ ("(
" AxF
   E
  (  A 
@ ( " E
  (  AtA 
 AA 

 ("E
 ( A 

 ("E
  ( A 
 A j$ 
A A7 A jA AЕ ۆ  
	@@@@@@@@@@@@@@  -  
	


 
  (!@  (" ( "E
     
  ("E

    ( 
@  - 
A
I
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E

    ( 
@  (
AG
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
	    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (
" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E

-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:6901-7050
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
     ( 

@@@  ( "AxF
   (!@  ("E
  Aj!@@ A|j( "E
  (  A 
 Aj  Aj! Aj"
 

@ E
   AlA 
  (!@  ("E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj! Aj"
 

@  (
"E
   AlA 
  Aj @  ("E
   (
 AlA 
A$!  ($"AxG


  (!A!
 E
    j( A 

~~# Ak"$   (! AjAj"  "Aj( 6   ) 7 A
j Aj  A
A    "Aj( 6   ) 7 Aj Aj  A
A    "Aj( 6   ) 7 A$j Aj  A
A  Aj (" ( @@ (AF
  A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj ) 7   )7H

 AjAj AjA
j( 6   )7 A jAjA A Aj  A6H
@ (
"E
   A 
@@@@@@@@ (HAF
  A0jAj A jAj) 7  A0jAj A jAj") 7   )H70 (`! (d! )h! (p!	 (t!
 )x!
 (! Aj (
" (  @@ (AxF
  Aj AjAj) 7  Aj AjAj) 7   )7 A
: 

  Aj( 6   )7H AjAù A  A j 
@ E
   A 
 - A
G
 (! (!
 (!
 (! (! (! AjAj" A$jAj( 6   )$7 A j Aj  (HAF
 Aj A jA  !  A0jAj) 7  AjAj A0jAj) 7  A 6 A 6 A 6  6  
6  
6  6  6  6  
7  
6  	6  7  6  6  )07  Aj6  Aj6  Aj6 A j   AjA j Aj Aj     Aj A j 

 AjA j A j) 7  AjAj A jA j) 7  AjAj A jAj) 7  AjAj A jAj) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj Aj 
 Aj AjAj( 6   )7 Ax6 Aj @ ($"E
  (( A 
 ("E
 (
 A 

 A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj AjAj) 7   )7H A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j Aj 
 Aj AjAj( 6   )7 Ax6 A j @ E
   A 
@ 	E
  
 	A 
 ($"E
 (( A 

 AjA j A j) 7  AjAj A jA j) 7  AjAj A jAj) 7  AjAj A jAj) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj Aj 
 Aj Aj( 6   )7 Ax6 Aj @ E
   A 
@ E
  
Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@ 
E
  
 
AtA 
@ E
   A 
 	E
  
 	A 
 Aj Aj @ - A
G
 A - ΀  (! (! (!A
A "E
  6  6  6  Aj  Aj$  
 A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj AjAj) 7   )7HA A+ A jA A ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
AA
  
~~# Ak"$   (! A jAj"  "Aj( 6   ) 7x Aj A j  A
A    "Aj( 6   ) 7x A
j A j  A
A  A j (" ( @@ (xAF
  A jA0j A jA0j) 7  A jA(j A jA(j) 7  A jA j A jA j) 7  A jAj A jAj) 7  A jAj A jAj) 7  A jAj ) 7   )x7@

 AjAj A jA
j( 6   )|7 A jAjA A Aj  A6@
@ ("E
   A 
@@@@@@@@ (@AF
  A(jAj A jAj) 7  A(jAj A jAj) 7   )@7( (X! (\! )`! (h! (l!	 )p!
 (

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7051-7200
! A j ( "
 ($  A j!@@ (x
  A j Aj( 6  A
: @  ) 7D

 AjAj Aj( 6   ) 7 A jA A Aj 
@ E
  
 A 
 - @A
G
 Aj A jA
j"( 6  A jAj" A(jAj) 7  A jAj"
 A(jAj) 7   )D7  )(7x A 6 A 6 A 6  
7  	6  6  7  6  6  Aj6  Aj6  Aj6 A j   Aj A j Aj    - @A
G
 A
j ( 6   )D7 A 6 

 A jA j A j) 7  A jAj A jA j) 7  A jAj A jAj) 7  A jAj A jAj) 7   )H7x A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j Aj 
 A
j AjAj( 6   )7 A6  A j  (
"E
 (  A 

 A jA j A jA j) 7  A jAj A jAj) 7  
 A jAj) 7   A jAj) 7   )@7x A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j Aj 
 A
j Aj( 6   )7 A6  A j 

 A jA j A jA j) 7  A jAj A jAj) 7  A jAj A jAj) 7  A jAj A jAj) 7   )@7x A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j Aj 
 A
j AjAj( 6   )7 A6  A j @ E
   A 
 E
  	 A 
 A j  @ - @A
G
 A - ΀  (L! (D! (H!A
A "E
  6  6  6 @ ("E
  ( A 
 Aj$  
 A jA j A jA j) 7  A jAj A jAj) 7  A jAj A jAj) 7  A jAj A jAj) 7   )@7xA A+ A jA A ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
A A7 AjA AЕ ۆ  
AA
  
# A0k"$ @@@@@@@@@@@@  -  "AtjA  AsjAqA
IAq
 	
 
    ! 


  Aj  ! 
	
  Aj  ! 

  Aj  ! 

 A6
 A 6 B7   Aj6, A B  A,j7   A j6 ( ( Ajφ ! 

 A A 􆀀 ! 

 A؝ A 􆀀 ! 

 A6
 A 6 B7   Aj6, A B  A,j7   A j6 ( ( Ajφ ! 

 A A􆀀 ! 

 A A􆀀 ! 

 A A
􆀀 ! 
 A0j$   
# Ak"$  Aj   A
j  ( ( (
  @@ (
AxF
  A(jAj A
jAj( 6   )
7(   A(j 

 Aj    )78 A
6D A 6@ A B  A8j7h A B  A j7` AjA:   AjA(6  AjB7  A jA(jB 7  A6\ A6L Aܭ 6H A6T A6 A:  A 6 B 7 A6x A6p  A j6X  A j6P  A
j A j  A ل  ( !   (6   6  A:  
 Aj$ 
# Ak"$  Aj   A
j  ( ( (
  @@ (
"AxF
  A j ( " ($ @@ (`AF
    )`7  A,j Aj( 6   A$j Aj) 7   A
j A j) 7   Aj A j) 7   A
j A j) 7 A !

 A8jAj A j( 6   )d78  AjA A A8j A!
   6  E
  A 

 Aj    )7( A64 A 60 A B  A(j7X A B  A0j7P AjA:   AjA(6  AjB7  A jA(jB 7  A6L A6< Aܭ 68 A6D A6 A: | A 6x B 7p A6h A6`  A j6H  A j6@  Aj A8j  A ل  ( !   (6   6
  A:   A6 
 Aj$ 
~# A k"$  Aj   (
! (! A j  A j  A j @@@@ (dAxG
  A
j A j( 6   )X7

 A8jAj" A jAj( 6   )d78@ (X"E
  (\ A 
 A jAj ( 6   )87H AjA A A j  - "A
G

 (!    (" (
 (
  A
! E
  A 

   / ;    ) 7  Aj - :    Aj AjAj) 7   A j AjA j) 7  )!	   (
6
   	7
   :   A j$ 
~# A k"$  Aj   (
! (! A j  A j A j ( ( @@@@ (dAxG
  A
j A j( 6   )X7

 A8jAj" A jAj( 6   )d78@ (X"E
  (\ A 
 A jAj ( 6   )87H AjAɶ A
 A j  - "A
G

 (!    (" (
 (
  A
! E
  A 

   / ;    ) 7  Aj - :    Aj AjAj) 7   A j AjA j) 7  )!	   (
6
   	7
   :   A j$ 
~# A k"$  Aj   (
! (! A j  A j  A j󁀀 @@@@ (dAxG

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7201-7350
  A
j A j( 6   )X7

 A8jAj" A jAj( 6   )d78@ (X"E
  (\ A 
 A jAj ( 6   )87H AjA۷ A A j  - "A
G

 (!    (" (
 (
  A
! E
  A 

   / ;    ) 7  Aj - :    Aj AjAj) 7   A j AjA j) 7  )!	   (
6
   	7
   :   A j$ 
~# A k"$  Aj   (
! (! A j  A j  A jق @@@@ (dAxG
  A
j A j( 6   )X7

 A8jAj" A jAj( 6   )d78@ (X"E
  (\ A 
 A jAj ( 6   )87H AjA A A j  - "A
G

 (!    (" (
 (
  A
! E
  A 

   / ;    ) 7  Aj - :    Aj AjAj) 7   A j AjA j) 7  )!	   (
6
   	7
   :   A j$ 

# Ak"$  Aj  @@ (
"E
  (" Alj"Alj" kAn!@@  G
 A!A !

A !A - ΀  At"A "E
 !	 ! !
@  Alj!
@@@@@@@ 	-    
 	Aj( !
 	Aj( !


A!
 	Aj!


 
Aj!
A!


 
Aj!
A!


 
Aj!
A!


 
Aj!
A!

  
6  Aj 
6  	Aj!	 Aj! Aj! 
Aj"

 

@@@@@@@ -    
 Alj"	Aj( ! 	Aj( !	

 Amj!	A!

 Amj!	A!

 Amj!	A!

 Amj!	A!

 Amj!	A!
     	  @ ("E
   AlA 
@ E
   AtA 
 Aj$ 
A   
A   
-    ( -  At" A j(   Aܞ j( 􆀀 
(  A A   ( -  " A
A  􆀀 
!    ( -  AtAĞ j( A􆀀 
   ( " Aj(   Aj(   
=@ (
"Aq
 @ A q
    ̆ 
    
   ↀ 
=@ (
"Aq
 @ A q
     
    
    
   A  φ 
 @  ( "E
   ( A 

N@  -  A
I
   (!@  (
" ( "E
     
  ("E
     ( 

N@  ( AG
   (!@  (
" ( "E
     
  ("E
     ( 

  A A􆀀 
   (  (  
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 

-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7351-7500
  AvAqAr: 
A!A!

@  ("  ( G
    
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
        (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
        (!
  ( j       j6A 
VA - ΀ @AA "
 AA  
  6   6 B7 B 7  
YA - ΀ @AA "
 AA  
 A 6 B 7    ) 7
 Aj  Aj( 6  
# Ak"$ @@@@@@@@@@@@@@  -  
 	


 
   Aj6
 A AA A  A
jA A A	 A
jA  ! 


   Aj6
 A AA A  A
jA A A	 A
jA  ! 


   Aj6
 AЖ A
A A  A
jAܖ A A	 A
jA  ! 


   Aj6
 A A
A A  A
jAܖ A A	 A
jA  ! 
	
   Aj6
 A AA A  AjA A A  AjA A A	 A
jA  ! 

   Aj6
 A A
A A  A
jAܖ A A	 A
jA  ! 

   Aj6
 A A
A A  A
jAܖ A A	 A
jA  ! 

   Aj6
 A AA× A  A
jAܖ A A	 A
jA  ! 

   Aj6
 AǗ AAϗ A
  A
jAܖ A A  AjAܖ A A	 A
jA  ! 

   Aj6
 Aڗ A
A A
  A
jAܖ A A  AjAܖ A A	 A
jA  ! 

   Aj6
 A AA A  AjA A A	 A
jA  ! 

   Aj6
 A A
A A  AjA A A	 A
jA  ! 

   Aj6
 A AA A  AjA A A	 A
jA  ! 
 Aj$   
N# Ak"$    6
 A A
A A	 A
jA  !  Aj$   
  A A􆀀 
a# Ak"$    Aj6
 A AA A
  AЙ Aϗ A
 A
jA  !  Aj$   
# Ak"$ @@@@@@@@@@@@  -  
 	
 
   Aj6 A A
A A AjA  ! 


 A A􆀀 ! 
	
 AЖ A
􆀀 ! 

 A A􆀀 ! 

 A A􆀀 ! 

 A˚ A􆀀 ! 

 Aޚ A􆀀 ! 

 A A
􆀀 ! 

 A A􆀀 ! 

   Aj6 A AA A AjA  ! 

   Aj6
 A A
A A
  AjAě A A	 A
jA  ! 
 Aj$   
# Ak"$ @@@@@  (   
 A A􆀀 ! 

 A A􆀀 ! 


-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7501-7650
 Aޚ A􆀀 ! 

   Aj6
 A A
A A
  AjAě A A	 A
jA  ! 
 Aj$   
# A k"$  A jA ( 6  A6$ A ) 7 Aj Aj  A4j ( (AA   Aj A4j   A$j A$jA  (
! (!@ (4"E
  (8 A 
  Aj  ā   A
:  @ (" AxF
   E
  (
  A 
 A j$ 
# Ak"$  A(jA ( 6  A )؜ 7  Aj A j  A,j  ( (
 (
  @@ (,"AxF
  A j (0" (4 @@ (pAF
    )p7  A,j Aj( 6   A$j Aj) 7   A
j Aj) 7   Aj Aj) 7   A
j A j) 7 A !

 A jAj A j( 6   )t7H  AjA A A j A!
   6  E
  A 

 Aj A j   )78 A6D A 6@ A B  A8j7h A B  A j7` AjA:   AjA(6  AjB7  A jA(jB 7  A6\ A6L Aܭ 6H A6T A6 A:  A 6 B 7 A6x A6p  A j6X  A j6P  Aj A j  AjA ل  (!   (
6   6
  A:   A6 
@ ( " AxF
   E
  ($  A 
 Aj$ 
# Ak"$  A jAjA ( 6  A ) 7  Aj A j  A,j  ( (
 (
  @@ (,AxF
  A jAj A,jAj( 6   ),7p   A j 

 Aj A j   )78 A
6D A 6@ A B  A8j7h A B  A j7` AjA:   AjA(6  AjB7  A jA(jB 7  A6\ A6L Aܭ 6H A6T A6 A:  A 6 B 7 A6x A6p  A j6X  A j6P  A
j A j  AjA ل  (!   (
6   6  A:  
@ ( " AxF
   E
  ($  A 
 Aj$ 
# Ak"$  A(jA ( 6  A ) 7  (
! Aj A j  A,j  ( (
   @@ (,"AxF
  A j (0" (4 @@ (pAxF
    )p7  A
:    A$j Aj( 6   A
j Aj) 7   Aj Aj) 7   A
j A j) 7 

 A j A j( 6   )t7H  A۷ A A j 
 E
  A 

 Aj A j   )78 A6D A 6@ A B  A8j7h A B  A j7` AjA:   AjA(6  AjB7  A jA(jB 7  A6\ A6L Aܭ 6H A6T A6 A:  A 6 B 7 A6x A6p  A j6X  A j6P  A
j A j  AjA ل  (!   (
6   6  A:  
@ ( " AxF
   E
  ($  A 
 Aj$ 
# A k"$  Aj A A	A  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$ @@@@@@@@ ( A|j"A AI  
   A A
A A A Aj 

   A A
AA A  

   A A
AA A
 Aj 

   A A
AA A Aj 

   A A
AA A  

   A A
AA A Aj 

 Aj A A
AA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  
 A j$ 
D  ( ! @ (
"Aq
 @ A q
    چ 
    
    
# Ak"$   (!  ( !  Aj  @ E
 @   6
 Aj A
jA 醀   Aj!  Aj"
 

 Ajꆀ !  Aj$   
   (   (  
   ( " (   (  
   (   (  

~@@@@@@@  ) "B||"A BT 
  - E
  (
"E

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7651-7800
  ( AlA 
  Aj!@@  (AxF
 @ ( "E
   (
 A 
  Aj!  (
"E
  (Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 


  ("E
   (
Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

 ( " E
 (  AtA 

@  ("E
   (
 A 
  ("E
  ( A 
@  ("E
   (
 A 
  ("E
  ( A 
A!@@@@ B~|"AjA  BT 
@  (H"E
   (L A 
@  (T"E
   (X A 
@  (8"E
   (< A 
A !  (`"AxF


A<!  (0"E
   (4 A 
   j( !
 E
   j( A 
@@@@@@  ( 
  (
"E
  ( A 
@  (
"E
   ( A 
@  ("E
   (
 A 
  ((!@  (,"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

  ($" E
   AtA 
@  (
"AxF
  E
   ( A 
@  ("E
   (
 A 
  ((!@  (,"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@  ($"E
   AtA 
  (0"E
  (4 A 
@  (
"AxF
  E
   ( A 
@  ("E
   (
 A 
@  ($"E
   (( A 
  (4!@  (8"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@  (0"E
   AtA 
  (<"E
  (@ A 
@  (
"E
   ( A 
  ("E
  (
 A 
@  (
"E
   ( A 
  ("E
   (
 A 

I@  (   ("k O
        (!
  ( j       j6
A !  A 6@  ( " ( "Aj"( "   I"O
   A    ( "   I!  ( !  (!
@  k O
       Aj( "   I!
@@ E
   (! ( ! Aj!@@  (  k O
        (!
  ( j       j"6 ( " I
   k"6   (  j"6    k"  I"
 


    
~# Ak"$ A !  A 6@  ( " ("O
   A     ( !  (!
 Aj Aj) "7   ) 7 @@@  k" "O
        (   ("k!

 
  (! 

 (!@  O
        (!
  ( j       j6 A 6   j" 6
 A
j  A  ( (
   Aj$ 

~# Ak"$ @@ ("
 A!

 A0l!A !@ AժK

-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7801-7950
  A H
  (!A - ΀ A! A "E
 A ! !@  F
Ax!	@@  j"Aj"
( AxG
 

 Aj 
  A(j( !	@@ A,j( "

 A!


A !
@ 
A H
 A - ΀ A!
 
A "

 
!

 
 
  
 
 	 
  )!
 (!	
 Aj) ! Aj( !
 ) !  j"A,j 
6  A(j 
6  A$j 
6  A
j 
7  Aj 	6  Aj 
6  Aj 7   7  A0j! Aj"E

 

    
   6   6   6  Aj$ 
@  ("E
   (! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
@  Aj( "E
   A
j(  A 
  A(j!  Aj"
 


@  ("E
   (!A !@@  Alj"( " E
  (  A 
@ ("E
  (! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  Aj"
 

@ (
" E
  (  AlA 
 Aj" G
 


l@  ("E
   (! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  Aj"
 


J@  ("E
   (! @@  ( "E
   Aj(  A 
  A
j!  Aj"
 


l@  ("E
   (! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  Aj"
 



~# A k"$ @  (   ("k (
" ("kAn"O
        (!
 (! ( !@@  F
   ( Alj! AjAj!	@ 	 Aj( 6   )7 ( !
A!
@ ("E
 A !
 A H
A - ΀ A!
 A "
E

 
 
  !
 Aj 	( "
6   )"
7  Aj 6  Aj 
6   6  A
j 
7  Aj 
6  Aj! Aj! Aj" G
 

   6@ E
   AlA 
 A j$ 
 
   
~# A k"$  Aj  (
"  @@@@@@ - "AF
  )! (! A
G
 AxG

  A 6  B 7 @ ( "E
     
 ("E
   ( 

 A8j  ("   (8Aj"A "	A 	AK"
A
l!A !
 	Aժ K
 A H

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:7951-8100
A - ΀ A!
 A "
E
 
 7 
 6  A6
  
6  
6 Aj    @ - "
AF
 A!	A!@ )! (! 
AqA
G
 AxF
@  (G
  A8j     Aj  (8Aj"
A 
  (!

 
 	j"
 7  
A|j 6   Aj"6
 Aj     	A
j!	 - "
AG
 

@ ( "E
     
@ ("E
    ( 
   )7   Aj AjAj( 6 
 A j$ 
 A8jAj AjAj) 7  A8jA j AjA j) 7   : 8  / ; 9  - : ;  7@  6<  ) 7HA A+ A8jA A ۆ  
 A8jAj AjAj) 7  A8jA j AjA j) 7   
: 8  / ; 9  - : ;  7@  6<  ) 7HA A+ A8jA A ۆ  
 
   
# A k"$ @@@@@@@@ (
Axs"A AI  
 Aj A AA A˟ AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A   (AxF
   )7   Aj AjAj( 6 

 Aj A AAA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A  @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A A
j  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A   (AxF
   )7   Aj AjAj( 6 

 Aj A AAA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A  @ (AxF
    )7   Aj AjAj( 6 

   (
 -  

   (
 -  

   (
 -  

   (
 -  
 A j$ 
# Ak"$  AjAj" Aj( 6  AjAj Aj( 6   ) 7 A jA
j ) 7  A jAj Aj) 7  A
6   ) 7$ (! ( ! A j  Aj A j A j @@@@ (AxG
  A jA
j A jAj( 6   )h7D

 AjAj ( 6   )7@ (h"E
  (l A 
 AjAj AjAj( 6   )7 A jA A! Aj  - @A
G

 (D! A j  (H" (L (
  @@@ (hAG
  (l
   )p7  A
:    A
j A j( 6  


 AjAj A jAj) 7  AjAj A jAj) 7  AjAj A jAj) 7   )h7 A6D A 6@ B7L A B  Aj7  Aj6H  A
j A j  AjAܡ ل  (!   (6   6  A:  A! @@@ (  
@ (" E
  (  A 
A! 
 Aj  j" ( "E
   ( A 
 


 A j A j( 6   )p7@ A6 A 6 B7 A B  A j7  Aj6  A
j Aj  AjAܡ ل  (!   (
6   6  A:  @ (@" E
  (D  A 
 E

  A 

 AjA j A jA j) 7  AjAj A jAj) 7  AjAj A jAj) 7  AjAj A jAj) 7   )@7 A6 A 6 B7 A B  Aj7  Aj6 A j Aj  AjAܡ ل   (
"6p  ("6l Ajȁ   Aj - k:     / i;    )x7  Aj A jAj) 7   A j A jA j) 7    (t6
   6   6  A:  
@@@@@@@@@@ ( "A|j" A  AI	 
@ ($" E
  ((  A 
 A0j! 

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8101-8250

 A(j! @ ($ 
@ ((" E
  (,  A 
 A4j! 

 (0Axs!@ ($" E
  ((  A 
 A0j!  AK
 AF


@ ($" E
  ((  A 
 A0j! 

@@ ($"Axs" A  AI 
@ E
  (( A 
 (0"AxF
 A0j! 

 (("AxF
 A(j! 

A! @@   
A!  ($"E
  (( A 
 A j  j! 

 (("AxN


  ( !
 E
   ( A 
 Aj$ 
   (  (  
	@@@@@@@@@@@@@@  -  
	


 
  (!@  (" ( "E
     
  ("E

    ( 
@  - 
A
I
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E

    ( 
@  (
AG
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
	    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (
" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
     ( 

 A AA Ȇ  
 A AA Ȇ  
 A AẠ Ȇ  
 A AAܣ Ȇ  
 A AA Ȇ  
 A AA Ȇ  
 A AA Ȇ  

# A k"$  Aj   (
! (! Aj   (!@@@ (
"

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8251-8400
     AA ӂ 

A !A - ΀  At"	A "
E
 !
 
! !
@  Alj!
@@@@@@@ 
-    
 
Aj( !
 
Aj( !

A!
 
Aj!

 
Aj!A!


 
Aj!A!


 
Aj!A!


 
Aj!A!

  6  Aj 
6  
Aj!
 Aj! Aj! 
Aj"

 
     
 ӂ  
 	A 
@ ("E
   AlA 
@ ( "E
  ( A 
 A j$ 
A 	  
# A k"$  Aj   Aj ( (
AA    Aj       (! ( !@ ("E
  ( A 
   6   6  A j$ 
@@@@@  -  "AtjA  AsjAqA
IAq 
  ȁ 
@  (" (
"AxF
  E
   ( A 
@  ( "E
   ( AtA 
  AA 
  ("E
  ( A 

  ("E
   ( A 

c@  (
"AxF
 @ E
   ( A 
  ("E
   (
 A 
@  ( "E
   ( A 

@  (
"AxF
 @ E
   ( A 
  ("E
   (
 A 
  (!@  ("E
  !@@ ( "E
  Aj(  A 
 A
j! Aj"
 

@  ( "E
   A
lA 

@  )0BQ
   (L!@  (P"E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj! Aj"
 

  (H"E
   AlA 
  (\!@  (`"E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj! Aj"
 

@  (X"E
   AlA 
  (h!@  (l"E
  !@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
 Aj! Aj"
 

@  (d"E
   AlA 

G@  ( "AxF
 @ E
   ( A 
  (
"E
   ( A 

# Ak"$  A 6
 B7@    AljA 킀 j" I
 @@ A H
 @ E
  Al!@A  Ajむ  Aj! Ahj"
 

   )7   Aj AjAj( 6 

  A6   6  Ax6 

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8401-8550
 Aj$ 
A̧   
# Ak"$ A ! A 6
 B7A !@@@@@@@ (
"AxF
 A !A !@ ("E
  ArgAsA	lA jAvAj" j" I

@ ( "E
  ArgAsA	lA jAvAj" j" I

  j" I
 ArgAsA	lA jAvAj" j" I

 (!@ ("E
  ArgAsA	lA jAvAj" j" I

  j" I
@@ A H
 @ AxF
 A A
j Ajむ 
@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
A   
A   
A   

# Ak"$ A ! A 6
 B7A !@@@@@@@@@ (
"AxF
 A !A !@ ("E
  ArgAsA	lA jAvAj"	 j" 	I

@ ( "E
  ArgAsA	lA jAvAj"	 j" 	I

  j" I
 ArgAsA	lA jAvAj" j" I

 (!
@ ("
E
  
Aj!A ! 
!@ ( "ArgAsA	lA jAv"	 j" 	I
  j" I
 A
j! ! Aj"
 

 
 j" 
I
  j" I
@@ A H
 @ AxF
 A A
j Ajむ 
@ 
E
  
A
l! 
Aj!@B Ajڂ  Aj( " Ajڂ  ( !	@ ( (
"k O
  Aj    (
!
 ( j 	     j6
 A
j! Atj"
 

   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
A   
A   
A   
A   
Aت   
~# A k"$   6
  6 A 6 B 7  Aj6
@@@@@@@ (
(E
 A j A
jہ  (P
  )X"7  BV
  B"78 BZ
@ "AO
 A A !

 !@@ Av"AG
 A !  Aj A
jA ߂ "E
  6P A jA AAͪ A
  (P!

   A
jA 끀 !
 E
 


   )7   Aj AjAj( 6 

 (T!

 A6T A 6P B7\ A B  A j7@  A j6X A,j A j  A,j !

 A6T A 6P B7\ A B  A8j7h  A j6X A j A j  A j !
   6  Ax6  (! (!@ ("E
  !@@ ( " E
  Aj(   A 
@ A
j( " E
  Aj(   A 
 Aj! Aj"
 

 E
   AlA 
 A j$ 
~@ ( "Aj( "
 A A !  A6    6
@@@@@@@@@@ ( ",  "AJ
 @@@@ A
K
   jAj,  A H

 Aq , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8551-8700
  , "AqAtjAj! AJ
 AI
 Aj!@ , "AJ
  Aq , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI
 , "! AjB
 |!@ AJ
  1 	"BV
@  B? B B8|" T
 A
!

A   
 BB8 |!A	!

 B
 |!A!

 B
 |!A!

 B
 |!A!


 BB
 |!A!


   쁀 
 !A!


A A !  A6    6
   B7  A 6  Aj Aj6   Aj6 
A   
 !A!

A   
 !A!

A̦   
Aܦ   
A   
A   
   7  A 6  Aj  k6    j6 
>~~	# Ak"$  (!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (Aij














 


 A A* 

 ) PE
  A:     ) 7   (6   )
7  A
j Aj( 6 @ ( "E
  ( A 
 ( "E
) ( A 
)
 Aݫ A, 

 Aj (" (倀  (! ("	AxF

 AjA j"
 AjA j( 6  AjAj AjAj) 7  AjAj AjAj) "
7   )7  6  	6 (!
 A:  
AxG
  A:  
#
 A A 
 (!  (6  6 B7 B7  Aj6 AjAj!	 Aj!@@ ((E
 Aj Ajہ @ (
   )"
7 
BV
  
B"
7 
BZ
@ 
"
AO
 A A !

$
 
!@@@@@@@@ 
Av"
Aj 
@ (AxG
  B7 B 7 B7
  :  A:  
BQ
 A6 A 6 B7 A B "
 Aj7  
 Aj7  Aj6 Aj Aj  Aj !

  Aj AjA  "

 Aj ( (ֆ @ (
 A !
A E

*
A A/ !
 A 6

A !
  AjA 遀 "E

  6 AjA AA A	  (!

'
 A 6
  
6 AjA AA A
  (!

%
  
 AjA 끀 !

 
E

#

 (!

-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8701-8850

!
 AjAj" 	Aj) 7  AjAj"
 	Aj) 7  AjAj" 	Aj( 6   	) 7 (!
 ("AxF
! Aj" ( 6  AjAj 
) 7  AjAj ) "
7   )7  
6  6 (!	 A:  	AxF"E
  A:  

 A A 
 (!  (6  6 B 7 B7  Aj6 AjAj!
 Aj!	@@ ((E
 Aj Ajہ @ (
   )"
7 
BV
  
B"
7 
BZ
@ 
"
AO
 A A !

 
!@@@@ 
Av"
Aj 
@ (AxG
  B7 B 7 B7
  :  A: @@ 
BQ
  A6 A 6 B7 A B "
 Aj7  
 Aj7  Aj6 Aj Aj  Aj !


A ! 	 AjA 遀 "
E

  
6 AjA AA A	  (!
!
A !  Aj AjA ݂ "
E
  
6 AjA AA A  (!
 
  
 AjA 끀 !
 E




 (!


 AjAj"
 
Aj) 7  AjAj" 
Aj) 7  AjAj"	 
Aj( 6   
) 7 (! ("
AxF

 Aj" 	( 6  AjAj ) 7  AjAj 
) "
7   )7  6  
6 (!
 A:  
AxF"E
  A:  

 A A' E


 A A 
 Aj (" (ځ  (!@ ("AxF
   ("6  6  6@@ E
  Al! Aj! AjAr! !
@ Aj 
  
(!
A!	@ 
("E
 A ! A H
A - ΀ A! A "	E

 	 
  !	 AjAj AjAj( 6   6,  	6(  6$  )7 Aj   Aj   Aj Aj Aj Aj ܁  - "AG
  )  7   Aj" Aj(  6   (!	 (!
@@ ("
 A!

A ! A H
A - ΀ A! A "E

  
  !@ 	E
  
 	A 
@ 
( "	E
  
( 	A 
@ 
(
"	E
  
( 	A 
 
 6 
 6 
 6
 
 )  7   
Aj (  6   
Aj!
 Ahj"
 

 Aj  ׁ  (! (! ("	AxF
 AjAj Aj( 6   ) 7 Aj  E
  AlA 

   )7
  A$j AjA$j( 6   ) 7  AjAj)  7  )!
 (!
  Aj ) 7     )7    
6   
7   :  

   6  A:  

 AjAj ( 6   )7 Ajҁ   
7  
6 AjAj Aj( 6   ) 7 Aj   Aj Aj Aj Aj ܁  - "
AG

 AjAj A$j) 7  Aj A,j) 7   )
7 Aj"
 Aj肀  Aj Ajف  (! (!@ ("	AxF
  AjAj Aj( 6   ) 7 Ajԁ A !


   6   6  A

-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:8851-9000
:   
ց 

 AjAj ( 6   )7 Ajҁ   
7  	6 AjAj Aj( 6   ) 7 Aj   Aj Aj Aj Aj ܁ @ - "AG
  AjAj A$j) 7  Aj A,j) 7   )
7 Aj" Aj肀  AjAj Aj( 6   ) 7@ ("
E
  ( 
A 
 AjAj AjAj( 6   )7 Aj Aj؁  (!
 (! ("AxF
 AjAj Aj( 6   ) 7 AjӁ 

   )47
 AjAj"	 AjAj(  6   Aj"
 AjAj)  7  AjAj AjA	j)  "
7   A$j AjA$j( 6   ) "
7  Aj 	(  6    Aj 
) 7    A	j 
7     
7    :  
 E
 
 A 

   
6   6  A
:   ց  (" E

 (  A 


 AjAj 
( 6   )7 Ajҁ   
7  
6 AjAj Aj( 6   ) 7 AjAj Aj( 6   ) 7 Aj Aj Aj Aj ܁ @ - "
AF
    )47
 AjAj" AjAj(  6   Aj" AjAj)  7  AjAj AjA	j)  "
7   A$j AjA$j( 6   ) "
7  Aj (  6    Aj ) 7    A	j 
7     
7    
:  

 AjAj A$j) 7  Aj A,j) 7   )
7 Aj" Aj肀  Aj Aj  (!
 (!@ ("AxF
  AjAj Aj( 6   ) 7 Ajԁ 


   
6   6  A
:   ց  Aj  (" E

 (  A
lA 


 Aj (" (瀀  (!
@ )"
BQ
  AjA
j AjA
jA    
6   
7@@@ )HBR
  A:    )7 

@@ (h"
 A!

 Al!
A !
 Aժ*K

 
A H

 (d!A - ΀ A!
 
A "E

 AjA
j!A !
 !	@ 
 
F
 Aj    A
j   
j"Aj AjAj) 7  Aj AjAj) 7   )7  
Aj!
 Aj! 	Aj"	
 

 A j!
 A:  Ajҁ  (!
 (! )!
@ )HBQ
  
  (`"E
  (d AlA 
  6h  6d  6`  
6\  6X  
7P B7H Aj Ajက  (! (! ("	AxG
   6   6  A
:   )HBQ
  
  (`" E
  (d  AlA 
@ (x"
E
  (t! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  
Aj"

 

@ (p" E
  (t  AlA 
@ ("
E
  (! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  
Aj"

 

 (|" E
 (  AlA 

 AjAj Aj( 6   ) 7 AjՁ 


   
6  A:  

@@@ ) P
  Aj (" (耀  )BQ
 AjA$j AjA$j( 6  AjA
j AjA

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9001-9150
j) 7  AjAj AjAj) 7   )7$ AjAj Aj) 7  AjAj Aj) 7   ) 7 Aj Aj   (! (! ("	AxF
 AjAj Aj( 6   ) 7@ (8"E
  (4!
@@ 
( "E
  
Aj(  A 
@ 
A
j( "E
  
Aj(  A 
 
Aj!
 Aj"
 

 (0"
E
 (4 
AlA 

  A:     ) 7   (6   ("6  A
j Aj) 7 A ! A!


   6   6  A
:  @ (8"
E
  (4! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
  Aj!  
Aj"

 

 (0" E
 (4  AlA 

   (6  A:  

   6  A:  

 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !


 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !


 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !

 A6 A 6 B7 A B  Aj7  Aj6 Aj Aj  Aj !


    
    
   )47
 AjAj" AjAj(  6   Aj" AjAj)  7  AjAj AjA	j)  "
7   A$j AjA$j( 6   ) "
7  Aj (  6    Aj ) 7    A	j 
7     
7    
:  

 
 
  
   )7   
6   6   6  A:    A
j Aj( 6 

 Aj  (" E
 (  A
lA 


A!

   )7   6   6   	6  A:    A
j Aj( 6 A! 
@ ( "E
  ( A 
@ 
E
 @ ( "
E
  ( 
A 
  


  E

 (
"E
  A 

   6   6  A
:  
 Aj  E
  AlA 

 Aj Aj(  6    A:    )  7    ) 7   Aj Aj)  7  @ ( " E
  (  A 
 ( " E
 (  A 


 (! (!
 (!	@ ("
AxF
  (! (!@ 
E
  ( 
A 
 E
   A 
@ E
  
!
@@ 
( "E
  
Aj(  A 
 
A
j!
 Aj"
 

 	E
  
 	A
lA 
   6  A:  
A!
@ ( " E
  (  A 
 


 (!	 (!@ ("AxF
  (!
 (!@ E
  ( A 
 E
  

-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9151-9300
 A 
 E
  	 A 
   
6  A:  

@ ("
E
  ! @@  ( "E
   Aj(  A 
  A
j!  
Aj"

 

@ 	E
   	A
lA 
 
AxG

 ( " E
  (  A 
 ( " E
  (  A 
 ( " E
    A 
 (
" E
  (  A 
 Aj$ 
=@ (
"Aq
 @ A q
    ̆ 
    
   ↀ 
# Ak"$  A j Aj) 7  A j Aj) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7  AjA j A j) 7  AjA(j A(j) 7  AjA0j A0j) 7   ) 7X  ) 7 A j Aj) 7  A j Aj) 7   ) 7@   AjA j Aj A j A j A  邀  Aj$ 
# Ak"$  A j Aj) 7  A j Aj) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7  AjA j A j) 7  AjA(j A(j) 7  AjA0j A0j) 7   ) 7X  ) 7 A j Aj) 7  A j Aj) 7   ) 7@   AjA j Aj A j A j A  邀  Aj$ 
# Ak"$  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X  ) 7@ A j A  ! AjA0j A0j) 7  AjA(j A(j) 7  AjA j A j) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7   AjA j Aj A j 邀  Aj$ 
 (
!@@@@@@ ( 
 
A!A !A!

 E

    
 ( "( !@ ("
 A!A !

A ! A H
A - ΀ A! A "E

    !   6   6   6 
    
~# A k"$ @@@ (" I
 A!@ E
 A ! A H
A - ΀ A! A "E

  6 A 6  6  A  A
vgk"A AIAtAr6
   悀  (! ( !@@ (
"Aq
    6
   6   6  À 6 

 Aj   ( Av"  A
j Aj   6, ($" I
 A
jAj"  k6   (  j6   Aj ) 7    )
7 
 A j$ 
    
    
 A64 A 60 B7<  6\ A B " A j7P   A,j7H  A j68 A0jA Æ  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av    "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~@ ( "Aj( "
 A̰ A !  A6    6
@@@@@@@@@@ ( ",  "AJ
 @@@@ A
K
   jAj,  A H

 Aq , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
 Aj!@ , "AJ
  Aq , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI
 , "! AjB
 |!@ AJ
  1 	"BV
@  B? B B8|" T
 A
!

A   
 BB8 |!A	!

 B
 |!A!

 B
 |!A!

 B
 |!A!



-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9301-9450
 BB
 |!A!


   쁀 
 !A!


A̰ A !  A6    6
   B7  A 6  Aj Aj6   Aj6 
A   
 !A!

A   
 !A!

A   
Aı   
AԱ   
A   
   7  A 6  Aj  k6    j6 
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av   ր "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av   삀 "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av   ꀀ "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av    "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9451-9600
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av   炀 "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$  A0j 䁀 @@@@ (0
 @@@ )8" ( Aj( "V
   "I
  k!

A A !

A   
@@ ( Aj( " K
 A !  F
A A !

 A0j 䁀  (0
  )8"7  BV
  B"7 BZ
@ "AI
    Av   ׀ "



A̮ A !

 (4!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

 A64 A 60 B7< A B  Aj7H  A j68 A j A0j  A j !
 A j$  
~~# A k"$ @@ 
 A A !

B!@@@@@@@@@@@  Aq	 
 Aj!@@@ A0j 䁀  (0
	  )8"7 @@@@ BV
   B"7 BV
A !@@@  
A!

A!

A!

 A64 A 60 B7< A B  7   A j68 A
j A0j  A
j !

A!
 " AI
   Av  끀 "E



 A64 A 60 B7< A B  Aj7H  A j68 A j A0j၀  A j !


 "AO

A̮ A !


A A !
	
 A0j 䁀  (0E
 (4!

B!

 A0j 䁀  (0E
 (4!

 Av F
 A A !

 ( "Aj"( !B !

 (4!

 )8!
  ( "Aj"( "X
 A A !

@  " I
     k6   (   j6 A !

     
 A j$  
~@ ( "Aj"( "E
   Aj6   ( "Aj6  ,  "A q!@@ AJ
  AF
 Aj A~j6   Aj6  , "A qB ! AJ
  AF
 Aj A}j6   Aj6  , "A qB ! AJ
  AF
 Aj A|j6   Aj6  , "A qB ! AJ
  AF
 Aj A{j6   Aj6  , "A qB
 ! AJ
  AF
 Aj Azj6   Aj6  , "A qB# ! AJ
  AF
 Aj Ayj6   Aj6  , "A qB* ! AJ
  AF
 Aj Axj6   Aj6  , "A qB1 ! AJ
  AF
 Aj Awj6   A	j6  , "A qB8 ! AJ
  A	F
 Aj Avj6   A
j6  , 	"A H
 AK
 BB? !
   7  A 6 
  A̰ A 6  A6 
  A̰ A 6  A6 
~# Ak"$ @  B X
   Ar!@ (  ("G
   A  (!
  Aj"6 (" j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ

-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9601-9750
  ! 

 Ar!@ (  G
   A  (!
  Aj"6 (" j :    B
!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj6  j :    B#!@  BZ
  ! 

  Ar:   AjA   B*!@  BZ
  ! 

  Ar:   AjA   B1!@  BZ
  ! 

  Ar:   AjA   B8!@  BW
  ! 

  <   AjA B! 
@ (  ("G
   A  (!
  Aj6 ( j  <   Aj$ 
*    -  At" A j(   A j( 􆀀 
t# A0k"$   6
  6 A6 A 6 B7
 A B  Aj7(  A(j6   Aj  A0j$ 
t# A0k"$   6
  6 A6 A 6 B7
 A B  Aj7(  A(j6   Aj  A0j$ 
# A k"$   6
  6@@ 
  A6 A 6 B7
 A B  Aj7(  A(j6   Aj 

 A6 A 6 B7
  6<  68 A B  A8j70 A B  Aj7(  A(j6   Aj 
 A j$ 
 AA      
# A k"$  Aj Aĵ AA  - 
! (!@@@@ ("AxG
   :   6
 Aj A
jAʵ A
   (AxG
 Aj A
jAյ A
 A
j  (AxG
 Aj A
jA A Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj   @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  ހ @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  ( ( @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj   @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   (! Aj A (" @@@@@ (AxG
  - 
! (!@ E
 @ Aq
 @ (" ( G
   
 ( jA,:    Aj6
 Aj  ـ  ("AxG
A ! AF
  Aj! AlAhj!@@ (" ( G
   
 ( jA,:    Aj6 Aj  ـ  ("AxG

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9751-9900
 Aj! Ahj"
 

 Aj  AqA G 

 AjAj AjAj( 6   )7
 (AxG
  Ax6 

  )7
  6
   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ( AxG
  Aj  

 Aj  ( ( 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ( AxG
  Aj  

 Aj  ͂ 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj   Aj  (" (
 @ ("E
   A 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  )  @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   (! Aj A (" @@@@@ (AxG
  - 
! (!@ E
 @ Aq
 @ (" ( G
   
 ( jA,:    Aj6
 Aj    ("AxG
A ! AF
  A j! AtA`j!@@ (" ( G
   
 ( jA,:    Aj6 Aj    ("AxG
 A j! A`j"
 

 Aj  AqA G 

 AjAj AjAj( 6   )7
 (AxG
  Ax6 

  )7
  6
   )7   Aj AjAj( 6 
 A j$ 
~# A k"$  A(j @@ ( AxF
  A4j A(j   A A  

 A4j A(j   A A Aj 
@@ (4AxG
  AjAj A(jAj( "6   )("7  A
j 6    7  A
:  

 AjAj" A4jAj( 6   )47@ (("E
  (, A 
 AjAj ( 6   )7  A A  Aj 
 A j$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  ҂ @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:9901-10050
   
 ( 	jA::    	Aj6 Aj  ( ( @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
~# A k"$  Aj! A(j @@ ( 
  A4j A(j   A A  

 A4j A(j   A A  
@@ (4AxG
  AjAj A(jAj( "6   )("7  A
j 6    7  A
:  

 AjAj" A4jAj( 6   )47@ (("E
  (, A 
 AjAj ( 6   )7  A A  Aj 
 A j$ 
# A k"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj   Aj  ("	 (
 @ ("E
  	 A 
@ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  A j  A j A j ( ( @@@@ (TAxG
  A
j A j( 6   )H7

 A(jAj" A jAj( 6   )T7(@ (H"E
  (L A 
 A8jAj ( 6   )(78 Aɶ A
 A8j  -  A
G

   )7  A
:    A
j A
j( 6 

   ) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
 A j$ 
# A k"$  A j  (!  A jA (" @@@@@@@ ( AxG
  - ! (!@ E
  Aj( ! Aj( !@ Aq
 @ (" ( G
   
 ( jA,:    Aj6
      ( "AxG
A ! AF
  Aj! A
lAtj!@ A|j( ! ( !@ (" ( G
   
 ( jA,:    Aj6      ( "AxG
 A
j! Atj"
 

 A j  AqA G 

 A jAj Aj( 6   ) 7P
 (PAxG
 A
j A j( 6   )D7

  )7T  6P
 A(jAj" A jAj( 6   )P7(@ (D"E
  (H A 
 A8jAj ( 6   )(78 A A& A8j  -  A
G

   )7  A
:    A
j A
j( 6 

   ) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
 A j$ 
# A0k"$  (! (! A: 
 A 6  6  6 A j AjA A  (,! ((! ($!@@@@ ( E
  ! !

 A j Aj  ( "AxF
 ((! ($! E
   A 
  6
  6  6  Aɶ A
 Aj 

   6
   6   6  A
:  
@ ( "E
   A 
 A0j$ 
# Ak"$  (! (! A: , A 6(  6$  6  A j A jA A
A A  A jAj" A jA
j( 6   )|7h@@@ (x"AF
  A0jA0j A jA0j) 7  A0jA(j A jA(j) 7  A0jA j A jA j) 7  A0jAj A jAj) 7  A0jA
j ( 6   )7@  )h74  60 A j A j @ (xAxF
  Aj A jAj( 6   )x7  A0j 

   A0jAj") 7 Aj A4j"Aj( "6   Aj Aj) 7   A j Aj) 7   A(j Aj) 7   A0j A j) 7   ) 7    6   A
j 6    ) 7

 Aj ( 6   )h7 
 AjAj Aj( 6   ) 7  AjA A Aj   A6 
@ ( " E
    A 
 Aj$ 
# Ak"$  (! (! A: , A 6(  6$  6  Aj A jA AA A  AjAj" AjA
j( 6   )7@@@ ("AF
  A0jA j AjA j) 7  A0jA j AjA j) 7  A0jA8j AjA8j) 7  A0jA0j AjA0j) 7  A0jA(j AjA(j) 7  A0jA j AjA j) 7  A0jAj AjAj) 7  A0jA
j ( 6   )7@  )74  60 Aj A j @ (AxF
  Aj AjAj( 6   )7  A0j 

   A0jAj") 7 Aj" A0jAj"Aj( 6   Aj Aj) 7   A j Aj) 7   A(j Aj) 7   A0j A j) 7   A8j A(j) 7   A j A0j) 7   A j A8j) 7   ) 7    6    ) 7  A
j ( 6 

 Aj ( 6   )7 
 AjAj Aj( 6   ) 7  AjA A
 Aj   A6 
@ ( " E
    A 
 Aj$ 
   (  ڄ 
# A k"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@@@@@@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6@@@ ( Axs"	A 	AI  
 Aj A AA A AA   - 
! (!	 ("AxF
 A

-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10051-10200
j AjA
j-  :    / 
; 	  :   	6  6 

 Aj A AAA A
A  - 
!	 (!@ ("AxF
  A
j AjA
j-  :    / 
; 	  	:   6  6 

  	:   6
 Aj A
jA A Aj  (AxF
 Aj AjAj( 6   )7 

 Aj A AAA AA  - 
!	 (!@ ("AxF
  A
j AjA
j-  :    / 
; 	  	:   6  6 

  	:   6
 Aj A
jA A
  @ (AxF
  Aj AjAj( 6   )7 

 Aj A
jA A A
j  (AxF
 Aj AjAj( 6   )7 

   )7   Aj AjAj( 6 

  (
 -  

  (
 -  

  	 AqA G 
 ( AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   ) 7   Aj Aj( 6 
 A j$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  ݀ @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  ܀ @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj   @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj   @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  ۀ @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj   @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  ڀ @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$ @ ("	 ( G

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10201-10350
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj  Ł @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@@@@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj AȺ AA   - 
!	 (! ("AxF
 AjA
j AjA
j-  :    / 
;   	:   6
  6

   )7   Aj AjAj( 6 

 Aj  	AqA G  (AxF

   )7   Aj AjAj( 6 

@ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6
 A j$ 
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj6 Aj   @ (AxG
 @ ("	 ( G
   
 ( 	jA :    Ax6   	Aj6

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,@  Aj 
  (
!   (" ( @ E
   A 
@@ ( AxG
   Ax6 

   ) 7   Aj Aj( 6 
 A j$ 
A A7 A?jA AЕ ۆ  
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,@  AjƄ 
  (
!   (" ( @ E
   A 
@@ ( AxG
   Ax6 

   ) 7   Aj Aj( 6 
 A j$ 
A A7 A?jA AЕ ۆ  
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ( 
  Aj  

 Aj  ( 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ( AxG
  Aj  

 Aj   Aj  (" (
  ("E
   A 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  -   @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 

-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10351-10500
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ) B R
  Aj  

 Aj Aj 񂀀 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   (! Aj A (" @@@@@ (AxG
  - 
! (!@ E
 @ Aq
 @ (" ( G
   
 ( jA,:    Aj6
 Aj  ΂  ("AxG
A ! AF
  Aj! AlAhj!@@ (" ( G
   
 ( jA,:    Aj6 Aj  ΂  ("AxG
 Aj! Ahj"
 

 Aj  AqA G 

 AjAj AjAj( 6   )7
 (AxG
  Ax6 

  )7
  6
   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  (  @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ( AxG
  Aj  

 Aj   
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj  ؀ @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   (! Aj A (" @@@@@ (AxG
  - 
! (!@ E
 @ Aq
 @ (" ( G
   
 ( jA,:    Aj6
 Aj    ("AxG
A ! AF
  Aj! AlA~j!@@ (" ( G
   
 ( jA,:    Aj6 Aj    ("AxG
 Aj! A~j"
 

 Aj  AqA G 

 AjAj AjAj( 6   )7
 (AxG
  Ax6 

  )7
  6
   )7   Aj AjAj( 6 
 A j$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   (! Aj A (" @@@@@ (AxG
  - 
! (!@ E

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10501-10650
 @ Aq
 @ (" ( G
   
 ( jA,:    Aj6
 Aj  ς  ("AxG
A ! AF
  Aj! AlAhj!@@ (" ( G
   
 ( jA,:    Aj6 Aj  ς  ("AxG
 Aj! Ahj"
 

 Aj  AqA G 

 AjAj AjAj( 6   )7
 (AxG
  Ax6 

  )7
  6
   )7   Aj AjAj( 6 
 A j$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj   @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@ ) B R
  Aj  

 Aj  ) 
@@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
# A k"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;  @@@ ) B R
    

 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6, Aj AjǄ 
 (
!   (" (  E
   A 
@@ ( AxG
   Ax6 

   ) 7   Aj Aj( 6 
 A j$ 
Aؼ A7 A?jA A ۆ  
# Ak"$  ( "(!@ - 
 @  ( G
   
 ( jA,:    Aj"6
 A : @  ( G
   
 ( jA":    Aj"6@ (  k O
      (!
 ( j      j"6@ (  kAK
   A  (!
  Aj6 ( jA ;   Aj   @@ (AxG
   Ax6 

   )7   Aj AjAj( 6 
 Aj$ 
~# A k"$  A
j (  ((
  @@@ (
AxG
   A:  

 AjAj A
jAj( "6   )
7 A j (
 ֆ @@@@ (H
  )! !

 )
! )L! ("AxG

 B ! ! !A
!

  74  7,  6( A 6D B7< A: h A 6X A 6d A 6` A 6P A 6H  A<j6\ A(j A j 
 )@! (<! A ل  (! ( !@ (("E
  (, A 
A!
   7   6
   6   6   :  
 A j$ 
A A7 A jA AЕ ۆ  
    (  ((  
# Ak"$ @@  ("  (
"G
  (!

 ( ("Alj! AjAj!@  A   B 7  Aj AjA   AjA:   AjA 6  AjB7  AjB 7  Aj! Aj! A j" G
 
  6   6
 (  6 @  ("E
   (  A lA 
 Aj$ 

# A k"$ @@@@@@@@@@ (   
 Aj Aͺ A	A Aֺ AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 
	
  :   6
 Aj A
jAܺ A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj Aͺ A	AA AA  - 
! (!@ ("AxF
    / 

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10651-10800
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A Aj @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jAܺ A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj Aͺ A	AA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj Aͺ A	AA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jAܺ A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj Aͺ A	AA AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  

   (
 -  

   (
 -  

   (
 -  

   (
 -  
 A j$ 
# Ak"$ @@ Aj"E
  At! A M
A    
A   
A - ΀ @ A "
 A   
  6  6   6A! A6
  6@@@ Aj O
  AjA   (! (
!

 E

  Atj!A ! !@  Alj!	@@@@@@@ -    
 Aj( !	 Aj( !


A!	 Aj!


 	Aj!
A!	

 	Aj!
A!	

 	Aj!
A!	

 	Aj!
A!	
  
6  Aj 	6  Aj! Aj! Aj! Aj! Aj"
 

     @ ("E
   AtA 
 Aj$ 
# A k"$  (! (!@@ ( AG
  A6

 A0jAj Aj) 7   ) 70 Aj A0jÂ  (4"E
  (8 A 
@@ ( AG
  A6 

 A0jAj Aj) 7   ) 70 A j A0jÂ  (4"E
  (8 A 
 Aj     Aj A j  A - ΀  (
! (!@AA "
 AA  
  6   6  A 6   6  A j$ 
D  ( !@  (" ( "E
     
@  ("E
     ( 

 @  ( "E
   ( A 

X@  ( "E
   ( A 
@  (
"E
   ( A 
@  ("E
   (
 A 

@  ( "E
   ( A 
  (!@  ("E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@  (
"E
   AtA 

	@@@@@@@@@@@@@@  -  
	


-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10801-10950

 
  (!@  (" ( "E
     
  ("E

    ( 
@  - 
A
I
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E

    ( 
@  (
AG
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
	    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (
" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
     ( 


~@@@@@@@  ) "B||"A BT 
  - E
  (
"E
  ( AlA 
  Aj!@@  (AxG
  !

  Aj! ( "E
   (
 A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

 ( " E
   AtA 

@  ("E
   (
 A 
  ("E
  ( A 
@  ("E
   (
 A 
  ("E
  ( A 
A!@@@@ B~|"AjA  BT 
@  (H"E
   (L A 
@  (T"E
   (X A 
@  (8"E
   (< A 
A !  (`"AxF


A<!  (0"E
   (4 A 
   j( !
 E
   j( A 
@@@@@@  ( 
  (
"E
  ( A 
@  (
"E

-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:10951-11100
   ( A 
@  ("E
   (
 A 
  ((!@  (,"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

  ($" E
   AtA 
@  (
"AxF
  E
   ( A 
@  ("E
   (
 A 
  ((!@  (,"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@  ($"E
   AtA 
  (0"E
  (4 A 
@  (
"AxF
  E
   ( A 
@  ("E
   (
 A 
@  ($"E
   (( A 
  (4!@  (8"E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

@  (0"E
   AtA 
  (<"E
  (@ A 
@  (
"E
   ( A 
  ("E
  (
 A 
@  (
"E
   ( A 
  ("E
   (
 A 

<@  ( "E
   ( A 
@  (
"E
   ( A 

~# Ak"$ @@ E
   ( !  ((
!@ A<j     (<AxF
 A jAj A<jAj( " 6   )<7H A j (L  ֆ @@@ (x
  )H!  !

 )L! )|! (H" AxF
   7d  7\   6X A 6t B7l A:  A 6 A 6 A 6 A 6 A 6x  A j6@ A j A j 
  )p! (l!  AjA ل  (
! (!	@ (X"
E
  (\ 
A 
  7    6
  6  	6 A:  Aj 

A A7 AjA AЕ ۆ  
  7   >
 A
:   " 6  B "6  E
    A 
 Aj"
 

A !
 Aj$  
~# A k"$ @@@   E
   A:  

 A
j (  ((
  @ (
AxG
   A:  

 AjAj A
jAj( "6   )
7 A j (
 ֆ @@@@ (H
  )! !

 )
! )L! ("AxG

 B ! ! !A
!

  74  7,  6( A 6D B7< A: h A 6X A 6d A 6` A 6P A 6H  A<j6\ A(j A j 
 )@! (<! A ل  (! ( !@ (("E
  (, A 
A!
   7   6
   6   6   :  
 A j$ 
A A7 A jA AЕ ۆ  
n@@@ 
 A!

A ! A H
A - ΀ A! A "E

    !   6   6   6 
    
  A A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
    
  ( j :     Aj6

  AvAr: 

-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11101-11250
A!A!
 A
j r A?qAr:  @  (   ("k O
        (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
        (!
  ( j       j6A 
~# A k"$ @@@@@@@ Aj 
    끀 !

 A : 
  : 
@ AqE
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j !

 Aj 䁀 @ (E
  (
!

   ) 7 

   Aj  ۂ "

A !

  6 AjA AA A  (!

  6 AjA AA A  (!
 A j$  
~# Ak"$  Aj   ( "AxF"Aj( 6   ) 7  A jAjA (̾ 6  A )ľ 7X Aj A j ( "	 ("
  @@@@@@@@@@ - A
G
 @ (X"AxF
  E
  (\ A 
 ("
 (G
@ 
E
  (! (!A ( !
 A j!
A ) ! 
!@ 
 
6   7p A j   A j A j A jЁ  Aj A j 	 
 Ղ @ (X"E
  (\ A 
 - A
G
@ (p"AxF
  E
  (t A 
 A
j! A(j! Aj"
 

 A jAjA ( 6  A )ܾ 7X Aj A j 	 
   - A
F
   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   Ax6 

   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   Ax6  (X"AxF
 E
 (\ A 

 B70 B 7( B7  B 7 B7A - ΀ AA "E
A - ΀  AjA )  7   AjA )  7   A )  7  AA "E
 A 6l  6h B7`  6\ A6XA - ΀ AA "E
  ) 7 A6 A 6  Aj Aj( 6   Aj6| A6x  6t  6p A j A jÁ  A jAj" A jAj) 7  A jAj" A jAj) 7   )X7@@ (0" ((G
  AjAj 
 (, Alj" )@7  Aj ) 7  Aj ) 7  AjA j" Aj6    )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   A(j AjA(j) 7   A j ) 7 @ ("E
  (
 A 
@ ("AxF
 @ E
  ( A 
 ( "E
  ($ A 
 (!@ 
E
  ! 
!@@ ( " E
  Aj(   A 
@ A
j( " E
  Aj(   A 
@ Aj( " E
  A
j(   A 
 A(j! Aj"
 

@ ( "E
   A(lA 
 (! @ 
E
   !@@ ( "E
  Aj(  A 
 A
j! 
Aj"

 

@ ( "E
    A
lA 
 AxF


  Ax6   A: 

   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj Aj) 7   Ax6  (p"AxF
 E
 (t A 

AA  
AA  
AA  
@ ( "E
  ( A 
@ ("E
  (
 A 
@ ("AxF
 @ E
  ( A 
 ( "E
  ($ A 
 (!@ ("E
  !@@ ( " E
  Aj(   A 
@ A
j( " E
  Aj(   A 
@ Aj( " E
  A
j(   A 
 A(j! Aj"
 

@ ( "E

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11251-11400
   A(lA 
 (!@ ("E
  !@@ ( " E
  Aj(   A 
 A
j! Aj"
 

@ ( "E
   A
lA 
 AxF

 ( "E
  ( A 
 (!@ ("E
  Aj!@@ A|j( " E
  (   A 
 A j! Aj"
 

@ (
"E
   AtA 
 Aj$ 
	~# A k"$  A jA (̾ 6  A )ľ 7H  A j ( " (" @@@@@@@@ -  "A
G
  (! (!@ (
" (G
   (  
  A jAjA (̾ 6  A )ľ 7H  A j     -  A
G
 B7  B 7 B7 B 7 B7 A - ΀ AA "E
A - ΀  AjA )  7   AjA )  7   A )  7  AA "E
 A 6\  6X B7P  6L A6HA - ΀ A(A "E
  6  6
  6 A 6 A	6 A 6  A
j ) 7  AjA	6  A$j Aj( 6   A(j6l A6h  6d  6` A j A jÁ  A0jAj" A jAj) 7  A0jAj" A jAj) 7   )H70 Aj  (
" )07  Aj ) 7  Aj ) 7  A j"A6    ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A(j A(j) 7   A j ) 7 

  Ax6   A: 

   / ; 	   )7  A
j - :    A j Aj) 7   A(j A j) 7  )!	   (
6   	7
   :   Ax6 

AA  
AA  
AA(  
   ) 7  A(j A j) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Ax6 
 E
   A 
 ( " E
  (  A 
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
 A j$ 

~# A k"$  A jA (̾ 6  A )ľ 7H  A j ( " (" @@@@@@@@@ -  "A
G
  (! (!@ (
"	 (G
   ( 	 
  A jA ( 6  A ) 7` A0j   A j A j A0jЁ    (L"
 (P (
  @ ( "	AxF
  	E
  ( 	A 
@ (H"
E
  
 
A 
 A jA ( 6  A ) 7` A0j   A j A j A0jЁ   A j   Ղ @ (H"E
  (L A 
 -  A
G
 B7  B 7 B7 B 7 B7 A - ΀ A
A "E
A - ΀  AjA ) ٿ 7   AjA ) Կ 7   AjA ) ̿ 7   A ) Ŀ 7  AA "E
 A 6\  6X B7P  6L A
6HA - ΀ A(A "E
 A0jAj" Aj( 6 A - ΀   ) 70AA 	AxF"	"A "
E
 
A A  	  !	 A
6 A 6  A$j 6  A j 	6  A
j 6  AjA
6  A 6  )07 Aj ( 6   A(j6l A6h  6d  6` A j A jÁ  A0jAj" A jAj) 7   A jAj) 7   )H70 Aj  (
" )07  Aj ) 7  Aj ) 7  A j"A6    ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A(j A(j) 7   A j ) 7 @ E
   A 
@ ( " E
  (  A 
@ (
" E
  (  A 
 Aj!
	
  Ax6   A: 

   / ; 	   )7  A
j - :    A j Aj) 7   A(j A j) 7  )!
   (
6   
7
   :   Ax6 

AA
  
AA  
AA(  
A   
   ) 7  A(j A j) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Ax6 
 E
   A 
@ ( " E
  (  A 
@ (
" E
  (  A 
 (" E
  (
  A 
@ ( " E
  (  A 
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
 A j$ 
	~# A k"$  A jA (̾ 6  A )ľ 7H  A j ( " (" @@@@@@ -  "A
G
  (! (!@ (

-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11401-11550
" (G
   (  
  A8jA ( 6  A ) 70 A j    A0j A jЁ   (" ( (   @ ( "E
   A 
 B7  B 7 B7 B 7 B7 A - ΀ A
A "E
A - ΀  AjA )  7   AjA )  7   AjA )  7   A )  7  AA "E
 A 6\  6X B7P  6L A
6HA - ΀ AA "E
 A
6 A 6   ) 7 Aj Aj( 6   Aj6l A6h  6d  6` A jA
j A jÁ  A0jAj" A jAj) 7  A0jAj" A jAj) 7   )H70 Aj  (
" )07  Aj ) 7  Aj ) 7  A j"A6    ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A(j A(j) 7   A j ) 7  E
  A 

  Ax6   A:  E
  A 

   / ; 	   )7  A
j - :    A j Aj) 7   A(j A j) 7  )!	   (
6   	7
   :   Ax6 
 ( " E
 (  A 

AA
  
AA  
AA  
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
 A j$ 
~# A k"$  AjA (̾ 6  A )ľ 7  Aj  ( " (" @@@@@@@@ - "A
G
  (! (!@ (
" (G
   (  
  AjA ( 6  A )ܾ 7  Aj      - A
G
A - ΀  B70 B 7( B7  B 7 B7AA "E
A - ΀  AjA (  6   AjA )  7   AjA )  7   A )  7  AA "E
 A(j  (,"B7  6 A6  A 6  6 AjA j"A6    )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   A(j AjA(j) 7   A j ) 7 @ E
   A 
@ (" E
  (
  A 
 (" AxF


  Ax6   A: 

   / ; 	   ) 7  A
j - :    A j A(j) 7   A(j AjA j) 7  )!	   (
6   	7
   :   Ax6 

AA  
AA  
   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   Ax6 
 E
   A 
@ (" E
  (
  A 
 (" AxF

@  E
  (  A 
 ( " E
  ($  A 
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
 A j$ 

~# Ak"$  A jA (̾ 6  A )ľ 7P Aj A j ( " (" @@@@@@@@ - "A
G
  (! (
!@ (" (G
   (  
  A 6| A 6t A 6l Aj A j ( (  (AF
@ ("E
  (
 A 
 Aj A j ( (  (AF
@ ("E
  (
 A 
 Aj A j (
 (   (AF
@ ("E
  (
 A 
 A jAj"A ( 6  A ) 7P Aj A j     - A
G
 AjA j"B7  AjAj"B 7  AjAj"	B7  AjAj"
B 7  B7 A jA AЂ    ($"
 )P7  
Aj A jAj) 7  
Aj ) 7  A6    )7   Aj 
) 7   Aj 	) 7   Aj ) 7   A(j AjA(j) 7   A j ) 7 @ E
   A 
    

  Ax6   A: 

   / 	; 	   )7  A
j - 
:    A j A j) 7   A(j AjA j) 7  )
!
   (6   
7
   :   Ax6 

   - 
: 	  A:   Ax6 

   - 
: 	  A:   Ax6 

   - 
: 	  A:   Ax6 

   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj AjAj) 7   Ax6 
 E
   A 
@ ( " E
  (  A 
@ (
" E
  (  A 
@ (" E
  (

-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11551-11700
  A 
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

 (
" E
    AtA 
 Aj$ 
~# A k"$  A jA (̾ 6  A )ľ 78 Aj A8j (  ( @@@ - "A
G
  (! (
!@ (" (G
   (  
  AjA j"B7  AjAj"B 7  AjAj"	B7  AjAj"B 7  B7 A8jAj"
 Aj( 6  A j Aj( 6   ) 78  ) 7D Aj  (
"B 7  B7  )87 A6  A j 
) 7  A(j A8jAj) 7  A:  A 6 B7 B 7   )7   Aj 	) 7   Aj ) 7   Aj ) 7   A j ) 7   A(j AjA(j) 7  E
  A 

  Ax6   A:  E
  A 

   / 	; 	   )7  A
j - 
:    A j A j) 7   A(j AjA j) 7  )
!
   (6   
7
   :   Ax6 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ ( " E
    AtA 
 ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
 A j$ 
=~ ~# Ak"$  AjAjA ( "6  A6 A ) "7 ( ! (!	 AjAj AjAj) 7   )7  Aj  	 Aj AjAс  Aj ( "
 ("
(
"
  @@ - "
AF
  Aj! Aj! Aj! Aj! AjA j! A(jAj! AjAj! AjAr"Aj!@@@@@@@@@  )  7(  )  7 /@@@@@@@@ 
AqA
G
  A8jAj Aj(  6   )  78 AjAj"
 6   7 A j A8j  Aj Aj A jЁ  Aj Aj  	Ԃ @ ("E
  ( A 
 (
 - ! (! (! (! (!
 (!
 (!
 (! (! @ ("AxF
  E
  ( A 
 A 6P B7H A:  A 6 A 6 A 6 A 6 A 6  A j6  Aj 
	 AjAj" A jAj"!( 6   )H7 A 6P B7H A:  A 6 A 6 A 6 A 6 A 6  A j6  Aj 
 
 !( 6   )H7 Aj A8j  Aj ( 6   )7   )7  Aj 
( 6   )7  Aj AjAj( 6  Ax6 Aj Aj  (! (!! (""AxF
@ ("
E
  ( 
A 
@ ("
E
  ( 
A 
@ ("
E
  ( 
A 
@ ("
AxF
  
E
  ( 
A 
A - ΀ A"A "
E

 
A jA /  ;   
AjA )  7   
AjA )  7   
AjA )  7   
A )  7   A"6P  
6L A"6H  6  !6  "6 Aj  A j AjƁ  - "
A
G
 (!" Aj ("# (  ("
AxF
 (!$ (!%  )7  
6 Aj Aj  (!&@ ("'E
  &A(j!
 '!@@ 
Apj( "!AxF
 @ !E
  
Atj(  !A 
 
A|j( "!E
  
(  !A 
 
A0j!
 Aj"
 

@ ("
E
  & 
A0lA 
 '
 Aq
 Aj A j( 6    A:   Ax6   )87    ) 7 	  Aj Aj)  7   ("E
 (A(j!
@@ 
Apj( "!AxF
 @ !E
  
Atj(  !A 
 
A|j( "!E
  
(  !A 
 
A0j!
 Aj"
 



-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11701-11850
   
:   Ax6    ) 7   )  7 	  A(j Aj) 7   A j Aj) 7   Aj Aj)  7  

 AjAj Aj-  "
:    /  "; (!! )! )!( )!) )!*   - : (   *7    )7   (7   7   ; )  A+j 
:     !6,  Ax6  ("
AxF

 
E

 ( 
A 


   6   !6
  A
:   Ax6 @ ("
E
  ( 
A 
@ ("
E
  ( 
A 
@ ("
E
  ( 
A 
@ ("
AxF
  
E
  ( 
A 
@  E
    A 
@ 
E
  
 
A 
 E

  A 


   / ; 	   )7  A
j - :    A j Aj) 7   A(j AjA j) 7  )!   (6   7
   
:   Ax6 @  E
    A 
@ 
E
  
 
A 
 E

  A 


   (6
  A:   Ax6 @ "E
  # "A 
@  E
    A 
@ 
E
  
 
A 
 E
  A 


 ("
 Aj A j( 6    A:   Ax6   )87    ) 7 	  Aj Aj)  7  
@ ("
E
  ( 
A0lA 
@ %AxrAxF
  $ %A 
@ "E
  # "A 
@  E
    A 
@ 
E
  
 
A 
 E
	  A 
	
@@ ("
(AxF
  Aj 
Aj  
((!@@ 
(,"

 A!!

A !' 
A H
A - ΀ A!' 
A "!E

 !  
 !! ("AxG
 (! (!

 Aj A j( 6    A:   Ax6   )87    ) 7 	  Aj Aj)  7  @ E
  
A(j!
@@ 
Apj( "!AxF
 @ !E
  
Atj(  !A 
 
A|j( "!E
  
(  !A 
 
A0j!
 Aj"
 

@ ("
E
  ( 
A0lA 
@ %AxrAxF
  $ %A 
@ "E
  # "A 
@  E
    A 
@ 
E
  
 
A 
 E
	  A 
	
 (!' 

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:11851-12000
 )"(B G
 
 ( 
 
  
G
  !  
@ E
  ' A 
@ 
E
  ! A 
@ ("E
  (A(j!
@@ 
Apj( "!AxF
 @ !E
  
Atj(  !A 
 
A|j( "!E
  
(  !A 
 
A0j!
 Aj"
 

@ ("
E
  ( 
A0lA 
@ %AxrAxF
  $ %A 
@ "E
  # "A 
@  E
    A 
@ 
E
  
 
A 
@ E
   A 
@ (8"
E
  (< 
A 
 Aj 
 
   - "
AG
 
	

Aؼ A7 AjA A ۆ  
Aؼ A7 AjA A ۆ  
AA"  
 ' 
  
 
!
@ E
  ' A 
@ 
E
  ! A 
  Ax6   A: @ ("E
  (A(j!
@@ 
Apj( "!AxF
 @ !E
  
Atj(  !A 
 
A|j( "!E
  
(  !A 
 
A0j!
 Aj"
 

@ ("
E
  ( 
A0lA 
@ %AxrAxF
  $ %A 
@ "E
  # "A 
@  E
    A 
@ 
E
  
 
A 
 E
   A 
 (8"
E
  (< 
A 
@ 
( "
E
  
 
  
@ 
("
E
  
 
 
( 
 ("
AxF
 
E
 (
 
A 

@ 
( "
E
  
 
  
@ 
("
E
  
 
 
( 
@ ("
AxF
  
E
  (
 
A 
 AjAjA ( 6  A )ܾ 7 Aj Aj  	  Aj!
 (!@@@ (
  AjAj 
Aj) "7  AjAj 

-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12001-12150
Aj( "!6  A jAj 7  A jAj !6   
) "7  7H (! (!
 5! (!@ ("!AxF
  !E
  ( !A 
 AxG
  B7   B 7  B7  B 7  B7 

 AjAj 
Aj) "7  AjAj 
Aj( "!6   
) "(7 )!) )!*   6   *7   )7   (7
  A$j 7   A,j !6   Ax6  ("
AxF
 
E
 ( 
A 

 A j A j) 7  A j A jAj( 6   6`  )H7d@@ 
 B !

 Aj B~ " B"(B~}!B!
 Aj A(j"!  Aj    6  (7  7 Aj A j Aj Aj Aj܁ @@@@@@@@@ - "AG
  A jAj"
 Aj( 6   )7x (! (!	 (! Aj !  Aj  @@@ 
 A!

A !
 A H
A - ΀ A!
 A "E

  	  ! Aj"
Aj 
( 6  
 )x7   6  6  6@ E
  	 A 
 AjAj AjAj( 6  Aj AjAj( 6   )7  )7 Aj Aj　  (! (!	@@@@ ("
AxF
 @ ("E
  ( A 
@ ("E
  ( A 
@ ("AxF
 @ E
  ( A 
 ("E
  ( A 
A - ΀ A*A "E
 A(jA /  ;   A jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7    6  	6  
6 A*6  6 A*6 B7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 ! Aj 
 AjAj AjAj( 6   )7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6  Aj 
 Aj AjAj( 6  AjAj AjAj( 6   )7  )7 Aj Aj߀  (! (! ("	AxF
 Aj  AjA A(   6  6  	6 Aj Aj Aj AjƁ  - A
F
 AjA j AjA j) 7  AjAj AjAj) 7  AjAj AjAj) 7  AjAj AjAj) 7   )7 Aj A ! A 6 B7A!	


   6   	6
  A
:   Ax6 @ ("E
  ( A 
@ ("E
  ( A 
 ("AxF
@ E
  ( A 
 ("E
 ( A 

 (! (!	 (! A 6 B7 E
	 Aj !  Aj   AjAj AjAj( 6   )7 Aj Aj䀀  (!! (!
@ ("AxF
  Aj  AjA A+  (" (G
	 Aj 
	
   !6   
6
  A
:   Ax6  Aj @ ("!E
  (!@   A j! !Aj"!
 

@ ("E
  ( A lA 
 E
 	 A 

   6   6
  A
:   Ax6  Aj 
 Aj 

 
   
   )7$  A,j Aj( 6   ) 7  Aj)  7  )! (!!  Aj ) 7     )7 	   !6    7   :   Ax6 

AA*  
Aؼ A7 AjA A ۆ  
Aؼ A7 AjA A ۆ  
 
E
  
A 

 ( A lj" )7 B7   !6
  
6  6 Aj Aj( 6   Aj"6 (!! Aj AjA    !G


 Aj AjA  A !
 Aj 
 ( A lj AjA   AjAj Aj"6  B7 B 7 B7 B 7 B7 AjAj 6   )7 Aj Aj Ajт   A(j AjA(j) 7   A j AjA j) 7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7    )7  E
  	 A 
 
E
   
A 
@ ( "
E
  ( 
A 
@ ( "
E
  ( 
A 
@ ("
E
  (
 
A 
@ (("
E
  (, 
A 
 Aj$ 

~# Ak"$  AjA (̾ 6  A )ľ 7 A8j Aj (  ( @@@@@@@ - 8"A
G
  (@! (<!@@ (D" (G
   ("  
  A j   A j A0j( 6   )(78 Aj A8j䀀  (!	 (
!
 ("
AxF
@ (8"E
  (< A 
@ (D"E
  (H A 

-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12151-12300
A - ΀ A+A "
E
 
A'jA (  6   
A jA )  7   
AjA )  7   
AjA )  7   
AjA )  7   
A )  7   A8jA j"
B7  A8jAj"B 7  A8jAj"B7  A8jAj"B 7  B78 A8j  (<"B 7   
6
 A+6 B7  
6$ A+6   	6,  
6( A6  A:  A 6 B7 B 7 AjA(j A8jA(j) 7  AjA j 
) 7  AjAj ) 7  AjAj ) 7  AjAj ) 7   )87A - ΀ AA "E
A - ΀  AjA /  ;   AjA )  7   AjA )  7   A )  7  AA "
E
 A 6L  
6H B7@  6< A68A - ΀ AA "E
 A6 A 6   ) 7 Aj Aj( 6   Aj6 A6  6  6 A j AjÁ  A jAj"	 A8jAj) 7  A jAj"
 A8jAj) 7   )87h AjAj!
@ ((" ( G
  
 
 ($ Alj" )h7  Aj 	) 7  Aj 
) 7  AjA j" Aj6    )7   Aj AjAj) 7   Aj AjAj) 7   Aj 
) 7   A(j AjA(j) 7   A j ) 7 @ E
   A 
@ ( " E
    A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

A!  (
"E
  AtA 

  Ax6   A:  E
  A 

   	6   
6
  A
:   Ax6 @ (8" E
  (<  A 
@ (D" E
  (H  A 
@ E
   A 
@ ( " E
  (  A 
@ ( " E
    A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

A!  (
"E
  AtA 

   / 9; 	   )H7  A
j - ;:    A j A j) 7   A(j A8jA j) 7  )<!   (D6   7
   :   Ax6 
@ ( " E
  (  A 
@ ( " E
  (  A 
 (!@ ("E
  Aj! @@  A|j( "E
   (  A 
  A j!  Aj"
 

@ (
" E
    AtA 
A(!  ("E
 (
 A 

AA+  
AA  
AA  
AA  
@   j" ( "E
   ( A 
 Aj$ 
# A k"$  Aj A AA  - 
! (!@@@@@@ ("AxG
   :   6
 Aj A
jA A Aj  (AxG
 Aj A
jA A Aj  (AxG
 Aj A
jA A Aj  (AxG
 Aj A
jA A	   (AxG
 Aj A
jA A Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
 @@@@ -    
   A AA A A 
   A AAA A 
   A AAA A 
   A AAA A 
  Aj! Aj!@@@@@@ (   
     A 6 
     A6 
 (!@@ (
"
 A!

A ! A H
A - ΀ A! A "E

    !   6
   6   6  A 6 
 (!A!@ (
"E
 A ! A H
A - ΀ A! A "E

    !   6
   6   6  A6 
    
    

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12301-12450
# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A j Aj) 7  Aj A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A jꂀ  Aj$ 
# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A j Aj) 7  Aj A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A jꂀ  Aj$ 
# Ak"$  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j) 7   ) 7P  ) 78  ) 7h A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7    A j  A8j A jꂀ  Aj$ 
 AA      
 @@@@@@@@ A{j	 
 A A	 
  A: 

 A A E


  Aj! A A
 
 A:  

 A A
 
   A: 

  Aj!
 A:  

  A : 
  Ax6 
 @@@@@@@@ Axj
 
@ A A E
  A A 
  Ax6   A: 
  Ax6   A: 
 A A 
  Ax6   A: 
@ A A E
  A A 
  Ax6   A: 
  Ax6   A: 
 A   
  Ax6   A: 
 A A
 E


 A   
   Ax6   A: 
    A A񁀀 
  Ax6   A : 
 # Ak"$  Aj   - !@@@@@@@@@@@@@@@@@@@ ("AxG
  Aj  @ ("AxF
  A j Aj-  :    / ;@ - !

 	
 A j Aj-  :    / ;@
 (!   /@; 	  A
j A j-  :     6
   :    6  A6 

 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@   @ -  
   B7  A j뀀 

@ - AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 

  B7  A j뀀 

 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ Aj  @ - 
   B7  A j뀀 

@ - 	AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 

  B7  A j뀀 

 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ Aj  @ - 
   B7  A j뀀 

@ - AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 

  B7  A j뀀 


 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ Aj  @ - 
   B7  A j뀀 


@ - AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 


  B7  A j뀀 


 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ A j  @ -  
   B7  A j뀀 


@ - !AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 


  B7  A j뀀 


 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ A(j  @ - (
   B7  A j뀀 


@ - )AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 


  B7  A j뀀 


 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ A0j  @ - 0
   B7  A j뀀 


@ - 1AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 


  B7  A j뀀 
	
 Aj   A jAj" AjA
j( 6   )7x ("AF
 A jA0j AjA0j) 7  A jA(j AjA(j) 7  A jA j AjA j) 7  A jAj AjAj) 7  A jA
j ( 6   )7P  )x7D  6@ A8j  @ - 8
   B7  A j뀀 

-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12451-12600
	
@ - 9AqA G
     A0j A jA0j) 7   A(j A jA(j) 7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7    )@7 
	
  B7  A j뀀 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 

   )x7  A6   A
j ( 6 
 Aj$ 
 @@@@@@@ A{j 
 A A 
  Ax6   A: 
 A A
 
  Ax6   A: 
 A A 
  Ax6   A: 
 A A E


 A A 
   Ax6   A: 
    A A񁀀 
  Ax6   A : 
# Ak"$  Aj À  - !@@@@@@@@ ("AxG
  Aj  @ ("AxF
  Aj A
j-  :    / 	;  - !

 
 Aj A
j-  :    / 	; 
 (
!   / ; 	  A
j Aj-  :     6
   :    6  A6 

   A A񀀀 

   AA 퀀 

   AA  

   AA  

   AA  
 Aj$ 
# A k"$  Aj A A
A  - 
! (!@@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j  (AxG
 Aj A
jA A Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A
 A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A A	A  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
@@@@ 
 A!

A ! A H
A - ΀ A! A "E

    !A - ΀ AA "
AA  
    
  A 6   6  A
6
   6   6   6 
# A k"$  Aj! (! ( !@ (  ("k ("O
      (!
 (!   A lj6  6
  6  6  6

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12601-12750
  6  6 Aj Aj   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7    ) 7  A j$ 
# A k"$  Aj A AA  - 
! (!@@@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A
 A
j  (AxG
 Aj A
jA A Aj  (AxG
 Aj A
jA A A$j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# Ak"$ @@ Aj"E
 @@ Aj"E
  At!@ A M
 A !	

A - ΀ A!	 A "E
  6  6

 A 6
 B 7 Aj  (!
  6  6 A! A6
@ E
 @ (Aj  Atj"Axj" k"Av"O
  AjA   (
!
 ( Atj      j"6
   (  (  A|j(  @ ("E
  ( AtA 
 Aj$ 
A   
A   
 	   
# Ak"$  A
j  (" (" (
  @@ (
"AxF
  A j (" ( @@ (PAxF
    )P7  A$j A j) 7   A
j A j) 7   Aj A j) 7   A
j A j) 7 A !

 A(jAj A j( 6   )T7(  AjA A
 A(j A!
   6  E
  A 

  6
  6 A
6$ A 6  A B  Aj7H A B  A j7@ AjA:   AjA(6  AjB7  A jA(jB 7  A6< A6, Aܭ 6( A64 A6p A: l A 6h B 7` A6X A6P  A j68  A j60  Aj A(j  A ل  ( !   (6   6
  A:   A6 
 Aj$ 
~# A k"$  (! (! A j  A j  A j @@@@ (TAxG
  A
j A j( 6   )H7

 A(jAj" A jAj( 6   )T7(@ (H"E
  (L A 
 A8jAj ( 6   )(78 A A
 A8j  -  "A
G

 (!    (" (
 (
  A
! E
  A 

   / ;    )7  Aj - :    Aj Aj) 7   A j A j) 7  )!	   (
6
   	7
   :   A j$ 
~# A k"$  A 6
 B7 Aj  @@@@ - 
 Ax!

 - ! A j!@@@@ Aq"A,F
  A F
 AqE
A !

   Aj  @ - 
 Ax!

 - 	!
@ AqA G
 Ax!

 A0j A AAĎ AԀ  )4! (0! (@"	AxF
 A jAj"
 Aj( 6   ) 7  (<!
@ (
" (G
  Aj 
 ( Atj" 	6  
6
  7  6   ) 7 A
j 
( 6   Aj6
    - ! -  
 
Ax!

Ax!
   7   6  A6 @ (
"E
  (Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

 ("E
 ( AtA 

   )7  A 6   A
j A
j( 6 
 A j$ 
~# A0k"$  A 6
 B 7 Aj  @@@@ - 
   B7 

 - !@@@@@ Aq"A,F
  A F
 AqE
A !

   Aj  @ - 
 Ax!

 - 	!

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12751-12900
@ AqA G
 Ax!

 A j   )(! ($! ( 
 AxF
@ (
" (G
  Aj 
 ( A
lj" 7  6   Aj6
    - ! -  
 
Ax!

Ax!
   7   6  A6  (
"E
  (!@@ ( "E
  Aj(  A 
 A
j! Aj"
 

 ("E
 ( A
lA 

   )7  A 6   A
j A
j( 6 
 A0j$ 
~# A k"$  A 6
 B 7 Aj  @@@@ - 
 Ax!

 - ! A8jAj!@@@@ Aq"A,F
  A F
 AqE
A !

   Aj  @ - 
 Ax!

 - 	!
@ AqA G
 Ax!

 A8j A A
A A  )@! (<! (8"	AxF
 A jAj"
 Aj) 7  A jAj"
 Aj) 7   ) 7 @ (
" (G
  Aj 
 ( A(lj" 7  6  	6   ) 7 Aj 
) 7  A j 
) 7   Aj6
    - ! -  
 
Ax!

Ax!
   7   6  A6 @ (
"E
  (!@@ ( "E
  Aj(  A 
@ A
j( "E
  Aj(  A 
@ Aj( "E
  A
j(  A 
 A(j! Aj"
 

 ("E
 ( A(lA 

   )7  A 6   A
j A
j( 6 
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
~# Ak"$ @  B X
   Ar!@ (  ("G
   A  (!
  Aj"6 (" j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (!
  Aj"6 (" j :    B
!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj6  j :    B#!@  BZ
  ! 

  Ar:   AjA   B*!@  BZ
  ! 

  Ar:   AjA   B1!@  BZ
  ! 

  Ar:   AjA   B8!@  BW
  ! 

  <   AjA B! 
@ (  ("G
   A  (!
  Aj6 ( j  <   Aj$ 
~~# A k"$  A : 
   : 
@@  AqE
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A

-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:12901-13050
j ! 

@@@@@@@@@@@@@ ( " Aj( "E
   ( ",  "AJ
@@ A
K
   jAj,  A H

 Aq , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
 Aj!@ , "AJ
  Aq , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI
 , "!	 AjB
 |!
@ AJ
  1 	"BV
@ 
 B? 	B B8|" 
T
 A
!

A   
 	BB8 
|!A	!

 B
 |!A!

 B
 |!A!

 B
 |!A!


 BB
 |!A!


 Aj 쁀 @ (E
  (
! 

 ) !


A A ! 


 B!  Aj Aj6    Aj6 


 !A!

A   
 !A!

A   
 !A!

A   
A   
A   
A   
  Aj  k6     j6 
  > A ! 
 A j$   
*    -  At" A j(   A j( 􆀀 
~# A k"$    : 
 A: 
@@  AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

 A 68 B70 Aj  @ (
 @ ) " ( Aj5 X
 A A ! 

 A0j    Aj (4 (8ֆ @ (
  AjAj" A0jAj( 6   )07@ ("  ( G
   
 (  A
lj" )7  Aj ( 6    Aj6A ! 

A A/ !  A 68 (0"E
 (4 A 

 (
! 
 A j$   
~# A k"$    :  A: @@  AqAF
  A6, A 6( B74 A B " Aj7   Aj7   60 A
j A(j  A
j ! 

 B7 B 7 B7 @@ 
 A A ! 

@   Aj灀 " 
  A(jAj" Aj) 7  A(jAj" Aj) 7   ) 7(@ ("  ( G
   
 (  Alj" )(7  Aj ) 7  Aj ) 7    Aj6A ! 

 ( "E
  ( A 
 (
"E
  ( A 
 A j$   
~# A k"$    :  A: @@  AqAF
  A6, A 6( B74 A B " Aj7   Aj7   60 A
j A(j  A
j ! 

 B7 B 7 B7 @@ 
 A A ! 

@   Aj遀 " 
  A(jAj" Aj) 7  A(jAj" Aj) 7   ) 7(@ ("  ( G
   
 (  Alj" )(7  Aj ) 7  Aj ) 7    Aj6A ! 

 ( "E
  ( A 
 (
"E
  ( A 
 A j$   
~# A k"$    : c A: b@@  AqAF
  A64 A 60 B7< A B " A j7   A j7   68 A j A0j  A j ! 

 B 7  Ax6@ 
 A A ! 


-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13051-13200
@   Aj聀 " 
  A0jA(j" A(j) 7  A0jA j" A j) 7  A0jAj" Aj) 7  A0jAj" Aj) 7  A0jAj"	 Aj) 7   ) 70@ (" ( G
   
 ( A0lj"  )07   A(j ) 7   A j ) 7   Aj ) 7   Aj ) 7   Aj 	) 7   Aj6A ! 

 ("AxF
 @ E
  (
 A 
 ($"E
  (( A 
 A j$   
~  AtAr ڂ  (! A !A !@ ) "P"
  ByA?sA	lA jAvAj!
@  E
   AryA?sA	lA jAvAj!
  j ڂ @ 
 B 큀   큀 
@  E
 @ (  ("G
   A  (!
  Aj6 ( jA:     ڂ 

  AtAr ڂ A !A ! @@@@ ("E
  ArgAsA	lA jAvAj" j"  I

@ ("E
  ArgAsA	lA jAvAj" j" I

   j"  I
  ڂ   退 
A   
A   
A   
  AtAr ڂ  (!A !A !@@@@ (" E
   ArgAsA	lA jAvAj"  j" I

 (!@ ("E
  ArgAsA	lA jAvAj" j" I

  j" I
  ڂ @  E
 @ (  ("G
   A  (!
  Aj6 ( jA
:     ڂ @ (  ("k  O
       (!
 ( j        j6
@ E
 B     @ (  (" k" O
       (  (" k!
@  O
       (! 
 (  j       j6

A   
A   
A   
~  AtAr ڂ  ( !A !@@  (
"    AljA  j" I
 @ ) P"
  (!A !A !@ )"	P
  	ByA?sA	lA jAvAj!
@ E
  AryA?sA	lA jAvAj!
  j" ArgAsA	lA jAvjAj!
  j" I
  ڂ @ E
  Al!@A   ₀   Aj!  Ahj"
 

@ 
 A Aj ႀ 

A   
A   
~  AtAr ڂ A !A ! @@@@@ ("E
  ArgAsA	lA jAvAj" j"  I

@ ) "P
  ByA?sA	lA jAvAj!
@@@   j"  I
  )"PE
A ! 

A   
 ByA?sA	lA jAvAj! 
   j"  I
   - 
Atj"  I
  - 
Atj"  I
   ڂ   Հ 
A   
A   
A   
A   
@@@@ ("   I"E
   (!  (! ( !@  I
@  k O
       (!  (!
@@  I
   (  j     ("  ("I
  k" I
  j" O
A   
A   
   6   k"6   j"6    k"  I"
 


A   
A   
    
# Ak"$ @@@@@@@@ Aj 
    끀 ! 

      "
 Aj  (  (ֆ @ (
 A ! 

A A/ !  A 6

   A
j   " 
A ! 

  A 6
  6 AjA AA A 

   6 AjA AA A 
 (! 
 Aj$   
 (!@@@ ("
 A!

A ! A H
A - ΀ A! A "E

    !   6   6   6
  Aj Aj( 6    ) 7 @ (
"E
   A 

    

# A k"$ A - ΀  (! ( !@@AA "E
  B䕋 7  A - ΀ AA "	E
 	AjA -  :   	A (  6   A6\  	6X B 7P  6L A6H A jAjA ( 6  A ) 7` Aj A j   A j @ (H"	E
  (L 	A 

-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13201-13350
@ (T"	E
  (X 	A 
@ (`"	AxF
  	E
  (d 	A 
 A j!	@@ - A
G
  A jAj Aj) 7  A jAj Aj) 7   ) 7H AjAj A4j( 6   ),7 A jAj A j( 6   )87` AjA(j A(j( 6  AjA j A j) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7    A j 	 Aj A j Aj 

   )7  A(j AjA j) 7   A j AjAj) 7   Aj AjAj) 7   Aj A j) 7   Ax6 @ 	( " AxF
   E
  (H  A 
 (0!@ (4"	E
  ! @@  ( "E
   Aj(  A 
  A
j!  	Aj"	
 

@ (," E
    A
lA 
 (<!@ (@"	E
  ! @@  ( "E
   Aj(  A 
@  A
j( "E
   Aj(  A 
@  Aj( "E
   A
j(  A 
  A(j!  	Aj"	
 

@ (8" E
    A(lA 
@ (" E
  (
  A 
@ (" AxF
 @  E
  (  A 
 ( " E
  ($  A 
@ ( " E
  (  A 
 (!@ ("	E
  Aj! @@  A|j( "E
   (  A 
  A j!  	Aj"	
 

 (
" E
    AtA 
@ (" E
  (
  A 
@ ((" E
  (,  A 
 A j$ 
AA  
AA  

# Ak"$  Aj!@@@@@@@@@@ (  
 A0jAj Aj( 6  A jAj Aj) 7  A jAj A j) 7  A jAj A(j) 7  A jA j A0j) 7   ) 70  )7@ AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj A0j A j 

 A jAj Aj( 6   ) 7h AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj A j 

 A jA(j A(j( 6  A jA j A j) 7  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7x AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj A j 

 Aj Aj( 6  AjAj Aj( 6   ) 7   )7 AjA0j A0j) 7  AjA(j A(j) 7  AjA j A j) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj  Aj @ ( "E
  ( A 
 (!@ ("E
  Aj!@@ A|j( "E
  (  A 
 A j! Aj"
 

 (
"E
  AtA 

 AjA j A j( 6  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7 AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj Aj 

 AjAj Aj( 6   ) 7 AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj Aj 

 AjAj Aj( 6   ) 7 AjA0j A0j) 7  AjA(j A(j) 7  AjA j A j) 7  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7 AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj Aj Aj 

 A jAj Aj( 6   ) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7    Aj A j 
@ ("E
  (
 A 
 (("E
  (, A 
 Aj$ 
~# Ak"$ @@@@@@@@@@@ ( "AxjA  AxH  
 AjAj Aj( 6   ) 7 (! ( ! AjAjA ( 6  A ) 7 Aj Aj AjЁ  A j Aj  Ԃ @ ("E
  ( A 
@ (x
  A jA j Aj) "7  A jAj Aj) "7  A jAj Aj) "7  A jAj Aj") "	7  AjAj 	7  AjAj 7  AjAj 7  AjA j 7   )|"7H  7 Aj  Aj Aj Aj @@@@ (AxG
   AjAj( 6   )7|

 AjAj AjAj( 6   )7@ ("E
  ( A 
 AjAj AjAj( 6   )7 A jA A
 Aj  - xA
G

   )|7  A
:    A
j A jA
j( 6 

   )x7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 
@ (" E
  (
  A 
@ ($" E
  ((  A 
 (0" E
	 (4  A 
	
 A j Aj) "7  A j A jA j) "7  A j A jAj) "7  A j A jAj) "	7   )"
7L  A j 7   Aj 7   Aj 7   Aj 	7    
7 

 A j (  (  - x"A
F
   )7  Aj A jAj) 7   A j A jA j) 7   ) y7H  A jAj)  7 O  Aj ) O7     )H7    :  

 A j (  (  (xE
 A j Aj) "7  A j A jA j) "7  A j A jAj) "7  A j A jAj) "	7   )"
7L  A j 7   Aj 7   Aj 7   Aj 	7    
7 

 A j (  (  - x"A
F
   )7  Aj A jAj) 7   A j A jA j) 7   ) y7H  A jAj)  7 O  Aj ) O7     )H7    :  

 A j (  ( @ - x"A
F
  A j" A jA j)  7   A j" A jAj)  7  A j A jAj)  "7  A j A jA	j)  "7   ) y"7H  A j )  7    Aj ) 7    Aj 7    A	j 7     7    :  

 A j Aj( "6   A j Aj) "7   A j Aj) "7   A j Aj") "7   AjAj 7  A(j 7  A0j 7  A8j 6   )|"7 K  7 Aj  Aj Aj Aj󁀀 @@@@ (AxG
   AjAj( 6   )7|

 AjAj AjAj( 6   )7@ ("E
  ( A 
 AjAj AjAj( 6   )7 A jA۷ A Aj  - xA

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13351-13500
G

   )|7  A
:    A
j A jA
j( 6 

   )x7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 
@ (" E
  (
  A 
@ ($" E
  ((  A 
 (0" E
 (4  A 

 A j Aj( "6   A j 6   )|"7 K  7   Aj  (" E
 (
  A 

 A jA(j Aj( "6  A jA j Aj) "7  A jAj Aj) "7  A jAj Aj) "7  A jAj Aj") "	7  AjAj 	7  AjAj 7  AjAj 7  AjA j 7  AjA(j 6   )|"7H  7 Aj  Aj Aj Aj @@@@ (AxG
   AjAj( 6   )7|

 AjAj AjAj( 6   )7@ ("E
  ( A 
 AjAj AjAj( 6   )7 A jA A Aj  - xA
G

   )|7  A
:    A
j A jA
j( 6 

   )x7   A j A jA j) 7   Aj A jAj) 7   Aj A jAj) 7   Aj A jAj) 7 
@ ( " E
  ($  A 
 (," AxF
@  E
  (0  A 
 (8" E
 (<  A 

 A j A jA
j( "6   A j" 6   )|"7 K  7   Aj @ ( "E
  (
! @@  ( "E
   Aj(  A 
  A
j!  Aj"
 

 (" E
 (
  A
lA 

@ (" E
  (
  A 
 ((" E
 (,  A 

@ (" E
  (
  A 
 ((" E
  (,  A 
 Aj$ 
~# A k"$ @@@@@@@ Aj 
    끀 !

 A : 
  : 
@ AqE
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j !

 Aj 䁀 @ (E
  (
!

   ) 7 

   Aj  ۂ "

A !

  6 AjA A	A A  (!

  6 AjA A	A A  (!
 A j$  
@   G
  
  Aj!   kAn!@@@@@@A ! A !@ Atj( "E
  ArgAsA	lA jAvAj" j" I

@ ( "E
  ArgAsA	lA jAvAj" j"  I

   j"  I
    ArgAsA	lA jAvj"  I
  j"  I
 Aj!  ! Aj"
 
  
A   
A   
A   
A   
A   
@   G
  
  Aj!   kAn!@@@@@@A ! A !@ Atj( "E
  ArgAsA	lA jAvAj" j" I

@ ( "E
  ArgAsA	lA jAvAj" j"  I

   j"  I
    ArgAsA	lA jAvj"  I
  j"  I
 Aj!  ! Aj"
 
  
A   
A   
A   
A   
A   
	~# A k"$ @@@@@@ ) B~|"AjA  BT  
 Aj A AA A AA  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 A j @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A
 A j @ (AxF

-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13501-13650
    )7   Aj AjAj( 6 

 Aj A
jA A A(j􁀀 @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A  @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A A j  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 A0j @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A A<j @ (AxF
    )7   Aj AjAj( 6 

 Aj A
jA A Aj  (AxF
   )7   Aj AjAj( 6 

 Aj A AAA A
A  - 
! (!@ ("AxF
    / 
; 	  A
j AjA
j-  :     :    6   6 

  :   6
 Aj A
jA A
 Aj @ (AxF
    )7   Aj AjAj( 6 

   (
 -  

   (
 -  

   (
 -  
 A j$ 
# A k"$  Aj A A
A  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A	 Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A Aj @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 78  ) 7  A j Aj( 6   ) 7P   A8j  A j낀  A j$ 
# A k"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 78  ) 7  A j Aj( 6   ) 7P   A8j  A j낀  A j$ 
# A k"$  A j Aj) 7  A j Aj) 7  A j Aj( 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 78  ) 7P  ) 7    A8j  A j낀  A j$ 

~# Ak"$ A ! A 6
 B7 ($!A !@@@@@@@@@@@ (("E
  ArgAsA	lA jAvAj" j" I

 (0!@ (4"E
  ArgAsA	lA jAvAj"	 j" 	I

@@@  j" I
  (<!
 (@"
A !	

A   
 ArgAsA	lA jAvAj"
 j"	 
I

  	j"	 I
A !@ ("
AxF
 A !
A !@ ("
E
  
ArgAsA	lA jAvAj" 
j" I

@ ) "P
  ByA?sA	lA jAvAj!

@@@  
j"
 I
  )"PE
A !

A   
 ByA?sA	lA jAvAj!
 
 j" 
I
  - 
Atj"
 I
 
 - 
Atj" 
I

-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13651-13800
 ArgAsA	lA jAvAj"
 j" 
I
	
 	 j" 	I
	@@ A H
 @ E
 B
 Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j      j6

@ E
 B Ajڂ   Ajڂ @ ( (
"k O
  Aj    (
!
 ( j 
     j6

@ 
AxF
 A  Aj傀 
   )7   Aj AjAj( 6 

  A6   6  Ax6 
 Aj$ 
A   
A   
A   
A   
A   
A   
A   
A   
A   
A   
~# Ak"$   6
  6 A 60 B7( Ax6  Aj6< A(j!@@@@@@@ (<(E
 A j A<j  (h
  )p"7@ BV
  B"7H BZ
@ "AO
 A A !

 !@@@@@@ Av"Aj 
@ (AxG
  A 6  B7 B 7
  : P A: H BQ
 A6l A 6h B7t A B " A j7   A j7  Aj6p A j A j  A j !

A !   A<jA  "E
  6h A jA AA A  (h!
	
A ! Aj A<jA ꁀ "E

  6h A jA AA A
  (h!

   A<jA 끀 !
 E
 


   )7   A j AjA j) 7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

 (l!

 A6l A 6h B7t A B  A j7  Aj6p A j A j  A j !

 A6l A 6h B7t A B  A j7P  A j6p Aj A j  Aj !
  Ax6   6  (,! ((!  (
! (!	@ (0"E
  A(j!@@ Apj( "AxF
 @ E
  Atj(  A 
 A|j( "E
  (  A 
 A0j! Aj"
 

@  E
    A0lA 
 	AxrAxF
   	A 
 Aj$ 
~@ ( "Aj( "
 A A !  A6    6
@@@@@@@@@@ ( ",  "AJ
 @@@@ A
K
   jAj,  A H

 Aq , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
  , "AqAtjAj! AJ
 AI
 Aj!@ , "AJ
  Aq , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI

  , "AqAtjAj!@ AJ
  AI
 , "! AjB
 |!@ AJ
  1 	"BV
@  B? B B8|" T
 A
!

A   
 BB8 |!A	!

 B
 |!A!

 B
 |!A!

 B
 |!A!


 BB
 |!A!


   쁀 
 !A!


A A !  A6    6
   B7  A 6  Aj Aj6   Aj6 
A   
 !A!


-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13801-13950
A   
 !A!

A   
A   
A   
A   
   7  A 6  Aj  k6    j6 
~# Ak"$ @  B X
   Ar!@ (  ("G
   A  (!
  Aj"6 (" j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj"6  j :    B!@  BZ
  ! 

 Ar!@ (  G
   A  (!
  Aj"6 (" j :    B
!@  BZ
  ! 

 Ar!@ (  G
   A  (! (!
  Aj6  j :    B#!@  BZ
  ! 

  Ar:   AjA   B*!@  BZ
  ! 

  Ar:   AjA   B1!@  BZ
  ! 

  Ar:   AjA   B8!@  BW
  ! 

  <   AjA B! 
@ (  ("G
   A  (!
  Aj6 ( j  <   Aj$ 
~# A k"$    : 
 A: 
@@  AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

 Aj  @ (
 @ ) " ( Aj5 V
     A ! 

A A ! 

 (
! 
 A j$   
*    -  At" A j(   A j( 􆀀 
~# A k"$    : 
 A: 
@@  AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

 Aj  @ (
 @ ) " ( " Aj5 V
  Aj   ⁀   Aj A ! 

A A ! 

 (
! 
 A j$   
~# A k"$ @@@@@@@ Aj 
    끀 ! 

@  (AxG
   B7(  B 7   B7
  : 
 A: 
@ AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

@ 
 A A ! 

  Aj  Aj遀 " 


@  ) B R
   A 6  B 7  B7 
  : 
 A: 
@ AqAF
  A6
 A 6 B7$ A B " A
j78   A
j70  A0j6  A
j Aj  A
j ! 

@ 
 A A ! 

  Aj  Aj恀 " 

A ! 

   6 AjA AA A
  (! 

   6 AjA AA A
  (! 
 A j$   
 AA     
# A k"$  Aj A A
A  - 
! (!@@@@ ("AxG
   :   6
 Aj A
jA A
   (AxG
 Aj A
jA A
 A
j  (AxG
 Aj A
jA A A$j @ (AxG
    (
 -  


-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:13951-14100
   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A A	A  - 
! (!@@@@ ("AxG
   :   6
 Aj A
jA A
 Aj  (AxG
 Aj A
jA A	 Aj  (AxG
 Aj A
jA A
  @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 

   )7   Aj AjAj( 6 
 A j$ 
# A k"$  Aj A AA  - 
! (!@@@ ("AxG
   :   6
 Aj A
jA A   (AxG
 Aj A
jA A A
j @ (AxG
    (
 -  

   )7   Aj AjAj( 6 

   / 
; 	  A
j AjA
j-  :     :    6   6 

   )7   Aj AjAj( 6 
 A j$ 
    ! 
      
      ! 
   񅀀 ! 

     
# Ak"$  Aj (
 ((
  @@ ("AxG
   Ax6 

@@ (
" ("I
  (!  k!A!  F
A !@ A H
 A - ΀ A! A "

    
  A Ć  
   j  !@ E
   A 
   6   6   6 
 Aj$ 
    (
 ((  
`  (
!@  ("( "E
     
@ ("E
    ( 
@  ( "E
   ( A 

# Ak"$ @@ E
   (!  (
!  ((
!@ Aj     ("AxF
@@ (
" I
  (!  k! A!	  F
A !@  A H
 A - ΀ A!  A "	

     
  A Ć  
 	  j   !@ E
   A 
@  E
   AxF
   A 
 Aj"
 

A !
 Aj$  
	# Ak"$  (
! ((
!@@@ E
  (!@ Aj     ("AxF
@@ (
" I
  (!	  k!
A!
  F
A !@ 
A H
 A - ΀ A! 
A "


  
  
  A Ć  
 
 	 j 
 !@ E
  	 A 
@ 
E
  
AxF
  
A 
 Aj"
 

 Aj    @ ("AxG
   Ax6 

@@ (
" ("I
  (!	  k!
A!
  F

-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14101-14250
A !@ 
A H
 A - ΀ A! 
A "


  
  
  A Ć  
 
 	 j 
 !@ E
  	 A 
   
6   6   
6 

  Ax6 
 Aj$ 
A!A !A!@ E
  A H
 @@@@@ (E
 @ ("
 @ 
 A!

A - ΀  A !

 (  A  !

@ 
 A!

A - ΀  A !
 E

   6A !

A!  A6
A! !
   j 6    6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# Ak"$ @@@@@@@@ (  
@@ 
 A!

A ! A H
A - ΀ A! A "E

    !   6   6   6 

 (
! (! (!@@ 
 A!

A ! A H
A - ΀ A! A "E

    !  6
  6  6@ E
  Aj    (! (
!
  j     Aj  j6    )7  E
  A 

 (! (!A!@ (
"E
 A ! A H
A - ΀ A! A "E

    !  6
  6  6 Aj A !	 (" jA :   (!A!
@ E
  A H
A - ΀ A!	 A "
E

 
   ! AjAj"
 6   6  6 Aj  Aj"  ( 
( "j     Aj  j6    )7 @ E
   A 
 E
  A 

    
    
    
 	   
 Aj$ 
# Ak"$ @@@@@@@@ (  
@@ 
 A!

A ! A H
A - ΀ A! A "E
    ! !@@ Aj" j"-  "AG
 A :   ! 
 


  jAj Aj:  
   6   6   6 

 (! (!A!@ (
"E
 A ! A H
A - ΀ A! A "E

    !  6
  6  6 Aj A !	 (" jA :   (!A!
@ E
  A H
A - ΀ A!	 A "
E

 
   ! AjAj"
 6   6  6 Aj  Aj"  ( 
( "j     Aj  j6    )7 @ E
   A 
 E
  A 

 (
! (! (!@@ 
 A!

-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14251-14400

A ! A H
A - ΀ A! A "E

    !  6
  6  6@ E
  Aj    (! (
!
  j     Aj  j6    )7  E
  A 

    
    
 	   
    
 Aj$ 
# A k"$ @@@@ 
 A!	

A !
 A H
A - ΀ A!
 A "	E

 	   !	 Aj     Aj       (
" ( (" (
  (   (! ( !@ ("E
   A 
@ ("E
   A 
A - ΀ AA "E
  6
  6  	6  6   6  A 6   6  A j$ 
 
   
AA  
PA - ΀ @AA "
 AA  
 A :    A6   6  A6   )7

    )7 
# A0k"$ @@@ 
 A!

A ! A H
A - ΀ A! A "E

 A : , A 6  6  6
  (
6(  (6$  (6   ( 6
  (6   A
j    A0j$ 
    
@@@@ ( 
 @ (E
  A
j!

 (! (!@@ (0"
  !

@  M
   j",  AJ


  G
  j!
  k!

 Aj!
 (! (!@ ( " (0"I
 @ E
 @  I
   F


  j,  A@H

@ E
 @  I
   G


  j,  A@H

  j!  k!

    A   
   6   6 
    A   
 @  ( "E
   ( A 

  A A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ΃ 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     ̃   (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
     ̃   (!
  ( j       j6A 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ΃ 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     ̃   (!
  ( j A
j      j6
 Aj$ 
S@@  (" I

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14401-14550
 @ E
   M
   ( j,  AL

   6

A A0A Ȇ  
# Ak"$  ( "( ! (!@@ ! !@A!	  F
  Aj"6 @ -  "AJ
   Aj"6  - A?q!
 Aq!
@ AK
  
At 
r!

  Aj"6  
At - A?qr!
@ AO
  
 
A
tr!

  Aj"6  
At - A?qr 
AtA qr"A F

@@ A
K
 A !	A tA q

 !	
 ! 	A F
 
@@@@ 	AI
  A 6
 	AI
@ 	AO
   	A
vAr: 
  	AvA?qAr: 
A!A!

  	AvAr: 
  	AvA?qAr:   	A
vA?qAr: 
A!A!

@ (" ( G
  ΃ 
 ( j 	:    Aj6

  	AvAr: 
A!A!
 A
j r 	A?qAr:  @ (  ("k O
    ̃  (!
 ( j A
j     j6
 Aj! 
 
A !A !	
   6   	6  Aj$ 
@  ( "  (G
 A 
   Aj6 @ -  "AJ
    Aj6  - A?q! Aq!@ AK
  At r
   Aj6  At - A?qr!@ AO
   A
tr
   Aj6  At - A?qr AtA qr!
 
 @@@@@@ A~j 
  (  AуG
A
AA  A A 
  /  AG
A
@  A A 
 A
AA  A A 
A
  A A A GAt
  (!@@@@@@  (A~j 
 (  AуG
A
AA A A 
 /  AG
A
@ A A 
 A
AA A A 
A
 A A A GAt
	   j! (! ( !A!@@ !   F
@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!	@ A_K
  	At r!  Aj! 

 At  - A?qr!@ ApO
   	A
tr!  Aj! 

 At  - A?qr 	AtA qr"A F
  Aj! 
@@@  G
 A !	 !

  Aj"6 @ -  "AJ
   Aj"6  - A?q!	 Aq!
@ AK
  
At 	r!

  Aj"6  	At - A?qr!
@ AO
  
 
A
tr!

  Aj"6 A !	 
At - A?qr 
AtA qr"A F

@@ A
K
 A !	A tA q

 !	
 ! 	A F
 

  	F
 
A !
 
~# Ak"$  (
! (! A j  Ѓ  ($! ( !@ E
 @  O
  A (  
  j!	 !@  	F
@@ ,  "AL
  Aj! Aq!

 - A?q!

-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14551-14700
 Aq!
@ A_K
  
At 
r! Aj!

 
At - A?qr!
@ ApO
  
 
A
tr! Aj!

 
At - A?qr 
AtA qr"A F
 Aj!
 A
K
 A tA qE
 
 A	 (  
 Aj    j"
 @@@@@@@@@@@ ("
E
  (
!	 A(jA j A j( 6  A(jAj Aj) 7  A(jAj Aj) 7  A(jAj Aj) "
7   ) 7(  !@ 
" ((G
  A(j΃ 
 (, jA::    Aj"60@@@@@@@ Aq  
@ (@"E
  (D!  	6  
6A A Aj 
  A (  
A ! (4"E
A ! ( "E
 (!  ("I
  F


A ! 
"!@@  	F
@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!@ A_K
  At 
r! Aj!

 
At - A?qr!
@ ApO
  
 A
tr! Aj!

 
At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 @ A F
  A/G

@ Aj"E
  !


A   
 AK

 (4"



 A jA j A(jA j"( 6  A jAj A(jAj") 7  A jAj A(jAj") 7  A jAj A(jAj"
) 7   )(7P  	6  
6A A Aj 
 A : w (X! 
!@@@@  	F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!
@ A_K
  
At r! Aj!

 At - A?qr!@ ApO
   
A
tr! Aj!

 At - A?qr 
AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
 A/F

 Aj A j 
 	  (
! (!

@  (PG
  A j΃ 
 (T jA/:    Aj6X A :  Aj A jA Aj   	  (! (!
 AjA j A jA j( 6  AjAj A jAj) 7  AjAj A jAj) 7  AjAj A jAj) 7   )P7   AjA     A jA      


  j,  AL


A ! AG
 A   A A !
 A(jAj"A 6  AjA j A(jA j( 6  AjAj A(jAj) 7  AjAj A(jAj) 7  AjAj ) 7   )(7   Aj 
 	  


 (!
@ ( "E
 @  ("I
   F

	
 
 j,  AL

 (,!@@ Aj 
  j,  AL

  G
 
   
 A(jAj"A 6  AjA j A(jA j( 6  AjAj A(jAj) 7  AjAj A(jAj) 7  AjAj ) 7   )(7   Aj 
 	A  
	
 (

-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14701-14850
"
A!

 (!	 (!
 AjA j ( 6  AjAj ) 7  AjAj ) 7  AjAj 
) 7   )(7   Aj 
 	A  

 !@@@@@  
F
@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!	@ A_K
  	At 
r! Aj!

 
At - A?qr!
@ ApO
  
 	A
tr! Aj!

 
At - A?qr 	AtA qr"A F
 Aj!
@@ A
K
 A !	A tA q

 !	
 	A F
 
 	A#F

@ ( "Aj"E
  (!
@@  ("	O
  
 j",  AJ


  	G
 
 j!
A! 	 F
 -  A/G
 E
  	I
  	F


A   
 AjA j A j( 6  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7   Aj   
 

 
 j,  AL

@ 
  "Aq
  AjA j A j( 6  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7   Aj  
  

 AjA j A j( 6  AjAj Aj) 7  AjAj Aj) 7  AjAj Aj) 7   ) 7   Aj  
   

  A  A   
 
 	A  A   
 
 	  	A   
  A6    :  ( "E
 ( A 

 
 A  A   
@ (@"
E
  (D!A ! A : X  	6T  
6P A 6 B7 Aj A jփ  (! (!@ (AG
  /  A F!
@ E
   A 
 
  
A (  
 AjA j A(jA j( 6  AjAj A(jAj) 7  AjAj A(jAj) 7  AjAj A(jAj) 7   )(7   Aj  	A  
 Aj$ 
  A  A   
 !@@A !  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
 !@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
 A qAjAK
  !@@@@  G
  !

@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 - ! Aj! At A?qr AtA qr"A F

@@ A
K

-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:14851-15000
 A !A tA q

 !
 A F
  Aj!@ AjAI
  AI
  APjA
I
  AUj   
 A r  AI!@ (" ( G
  ΃ 
 ( j :    Aj6
 

 -  AF

A ! A 6
   6   6 
# A k"$  !@  F
 @ "!@@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr! Aj!
 A
K
A tA qE
 !  G
 
 !

@@@@@@ A F
 A!@ AI
 A! AI
 AA AI!
@@   k"	I
   	F


  j,  AL

 A#F
 A?F
 A G

 !

 -  E


 -  E

 ( (
     A 6
  6  6 Aj Aj  ("E
 (
! (!@@ (  k O
    ̃  (!
 ( j      j"6  Aj  (! ( "E

 

  	A  A   
  G
 
 !
   6   6  A j$ 


# A k"$  Aj! -  !	 Aq!
@@@ (!
@@@@@@@@@@  F
 @ "
!
@@@ 
,  "AL
  
Aj! Aq!

 
- A?q! Aq!@ A_K
  At r! 
Aj!

 At 
- A?qr!@ ApO
   A
tr! 
Aj!

 At 
- A?qr AtA qr! 
Aj!
@ A
K
 A tA qE
  !
  G



 A F"
A!@ AI
 A! AI
 AA AI!
@@   
k"I
   F


 
 j,  AL

@@@@@@@ A]j
 
@ A F
  
	

 
AF
 -  AqAF
@ ("
E
  
A  (
(  
 (" ( F


 -  
 
!

 -  
 
!

 -  AF
 (" ( G

 ΃ 
 ( jA/:    Aj"
6@@@ 

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15001-15150
E
  (! 
 K
@@ 
E
  
 
I
 
 
G

 
A!
A !A!


  
j,  AJ


A   
A!
  j,  AJ

  
 
 A   
 ( (
    @ 

  (" M
  (" j!
@  M
  
,  AJ
     A   
  kAG
  
-  AqAjAqAK
  
- A:G
 @  ( G
  ΃  (!
  jA/:    Aj6 
Aj"
E

@@@ -  AG
  
AG
 A 6X  6T  
6P Aj A j  ("E
 (
!
@@ (  ("k 
O
    
̃  (!
 ( j  
    
j6 Aj A j  (!
 ("
 


 A 6d  6`  
6\ A8j A j  (8"E
 (<!
@@ (  ("k 
O
    
̃  (!
 ( j  
    
j6 A0j A j  (4!
 (0"
 


 A 6L  6H  
6D A(j A j  (("E
  (,!
@@ (  ("k 
O
    
̃  (!
 ( j  
    
j6 A j A j  ($!
 ( "
 

  G
 

 !
 (! 
 ("
K
A !
@ 
E
  
 
O
   
j,  AL

 
!
  
j!@@  
k"AG
  /  A F


@@@@ Aj 
 A A E
	 A A E
	 A A E
	 A A E
	

 (  AF
 (  AF
 (  AȩF
 (  AȩF


 -  A.F


 A   E
 A   E

 

 AF
 
 G
 AG
 -  AqAjAqAK
@ - "
A F
  
A:G

  6h  Aj6l A j "
A F

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15151-15300
     
  A:  
E
 A/ 

A   
  
 
 
A   
A   
@ 	Aq
 A !	

@ ("
E
  
A (
(  
A !	 A :  

@@@ 
 
O
  
!


@ 
E
  
 
M
  ,  AL

  
6
@ 
E
   
jAj-  A/F

 A/ 

A A0A Ȇ  
@@@@ 
 
O
  
!


@ 
E
  
 
M
  ,  AL

  
6
 
E
  
jAj-  A/G
 
Aj"!
@ AjA/  
 @@@ ("
AF
  
E!

 (
"
 O
  
j-  A/G
A !
 
 
 I
@@@ 

  !

@ 
 
M
   
j",  AJ


 
 
G
  
j!
@ 
 
F
 @@ -  "A]j"A
K
 A tAq

 A G

 
 
k"
AF
 @@@ , "AL
  
Aj"
AI
 AqAjAqAK
@ - "A F
  A:G

 
AF
 - "A]j"
A
M


  
A 
A   
A 
tAq

 A F

 ("
E
A!@ ( 
j"Aj,  "
AJ
 @@ A~j-  ""AL
  Aq!

@@ A}j-  ""AL
  Aq!

 A|j-  AqAt A?qr!
 At A?qr!
 At 
A?qr"A F
 AI

-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15301-15450
 A~! AI
 A}A| AI!
   
j6

  
 
 
A   
 
 K

 

A A0A Ȇ  
@@ ("
 F
 @ 

  (!@@ 
  !

 
 M
  j",  AL

 
 kAG
  -  AqAjAqAK
  - A:F

    
 
E
 (!@ ("
E
   
jAj-  A/F

@ 
 ( G
  ΃  (!
  
jA/:    
Aj6

  
  
A   
 

 

@@@@ Aq
  (!
 (!@ E
 @ 
 K
  
 F


  j,  AL

 
 I
@@ 
 k"

 A!


A ! 
A H
A - ΀ A! 
A "
E

  6 
  j 
 !
@ ("
 ( G
  ΃ 
 ( 
jA/:    
Aj"
6A !
@@@ 
" 
G
  
!

@@ 
 j"
,  "AL
  
Aj!
 Aq!

 
- A?q! Aq!@ A_K
  At r! 
Aj!


 At 
- A?qr!@ ApO
   A
tr! 
Aj!


@ At 
- A?qr AtA qr"A G
  
!

 
Aj!

 
 
k!
 A/F
 

 
 j!@ (  
k 
 k"
O
   
 
̃  (!

 ( 
j  
   
 
j6 
E
  
 
A 
   6   6  A j$ 
  
A   
  

-- Chunk 104 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15451-15600
  
A A+A Ȇ  
 
 A  A   
	~# A k"
$ @@@@@@@@@@@ Aj"E
 @@@@  
F
  Aj" I
  
F
 
!


 (!@@ (" 
M
   
j",  AJ


  
G
  
j!
  
kAI
 /  A G
  
j,  AL
  
A A  
Aj" 
I
 (! (!


A   
 (! (! 
 I
@ E
 @  K
   F

	
  j,  A@H

@@  
K
   
G
	

  
j,  AL

@ 
 kAF
  
!


@  jA A E
  
!


  
M
  
j"-  A/G
 
Aj" O
  j-  A/G
 
!

A   
A   
 
 A ņ  
 
A 6A  A  
AjA   
   
A AՃ  
A~j! (! (!

A A,A Ȇ  
@@@ 
  !


@  M
   j"
,  AJ


  G
  j!

  kAI
A  
A 
A A A Ȇ  
    A   
    
A   
 
!
@@@ 
  !


@  M
   j"
,  AJ


  G
  j!

  kAI
A  
A 
A A A Ȇ  
    A   
 
Aj    
 
 @@ 
("
AF
  
)
! 
(!   60   6,   6(   6$   6    	;
   ;
   6
   7  Aj Aj( 6    ) 7   )  7 4  A<j Aj)  7    A j Aj-  :  

   
- 
:  ( "E
  ( A 
   
6  
A j$ 
   
 A   

-- Chunk 105 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15601-15750
&
~# Ak"$  !@@@@@@@@@@@@@@@@@@@@@@@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!	@ A_K
  	At r! Aj!

 At - A?qr!@ ApO
   	A
tr! Aj!

 At - A?qr 	AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
@ A/F
  A F
  


@ ("E
  A G
  A  (
(  
 !@@@@@  F
@@ ,  "	AL
  Aj! 	Aq!	

 - A?q!
 	Aq!
@ 	A_K
  
At 
r!	 Aj!

 
At - A?qr!
@ 	ApO
  
 
A
tr!	 Aj!

 
At - A?qr 
AtA qr"	A F
 Aj!
@@ 	A
K
 A !
A 	tA q

 	!

 
A F
 
 
A/F
 
A F

@ (  ("kAK
   A̃  (!
A!
  Aj6A !	 ( j"A (  6   AjA (  6     ! E
 
 A(j  @ (,"E
  (("
-  A/F

A ކ  
@ ("E
  
A G
  A  (
(  
@ (  ("kAK
   A̃  (!
  Aj6A ! ( j"A (  6   AjA (  6   A j    - D!@@@@@@ (@"AxF
  A jAj-  At / EAtr r! (T!
 (P!A!	 (H"E
 A j    - A!@ - @"
AF
  (P! (L! (H! (D! /B!
@ 

  A	G
  A A	 E

  6x  6t  6p  6l  
;j  : i  
: h A 6@ B7L AӀ B  A j7  Aj6H A6D A  A jφ 
  A jAr"(  6@A!  Aj(  6 C (t!
 (p! - h
 E
   A 
  A6    : 


 E
A!	  A 

 
A G!@ ( C"
 

  A 

A! (@!

 (x! A j A j-  :    /D;d (@!
A !	

A !
 
Aj"!
 Aj"!	@@@@@@@ 	AI
  A jA/ 
 	  ($! ( !

A !A !  
F
 A !@@ 
 j-  A/G
 A!

 	 Aj"G
 
A ! 	!
@@ AF
  E


@ 
 j" O
   j-  A/G
  !

  Aj"
j!
  
k!	  
O

-- Chunk 106 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15751-15900


 AG

 -  AqAjAqAK
  
- A:F

 - 4"	E
 (!
 (!@ (,"
 (("I
 @ E
 @  
I
   
F


  j,  A@H

 
E
@ 
 
I
  
 
G


  
j,  AJ

  
  
A   
@ (" ( G
  ΃ 
 ( jA/:    Aj6  AÃ 
A !	

A A+ AjA A ۆ  
 E


 A#F
 A?F
 A F
    
 ( 
 (E
 A
j!

@@@ (
  (! (!

 Aj( !@ (
"
  (!A !

@  Aj( "I
   F


  j,  AL

 (  ("k O
    ̃  (!
 ( j    Aj  j"6   Aj 6   A 6   ) 7   )474  A<j A<j) 7   A j A j-  :     (060   ) 7    ) 7    )(7(   (
6


 A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7@   A j    

 ( E
 Aj!

 (! (!

 Aj!
 (!@ ( "
 A !

@@  ("I
   F


  j,  AJ

  A  A   
 A AÃ  A : @ Aj A  A jA    A j A A ( (
 @ (@"AF
  )D! (L!  A : 4  A60  B 7(  B 7   A ;
   6
   7   6   Aj Aj( 6    ) 7

 - D!  A6    : 


   Ã @@ (" (0"F
  (!@@ 
  !	

  M
  j"	,  AL

@  kAG
  	-  AqAjAqAK
  	- A:F

 A   
 A: @ Aj A  A j     (! (! A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7@   A jA  (  ($ (( (, A4j /
 /
    

    A   
 (E
 A
j!
 (! ( "
 (!A !

 (! (!

@@  ("I
   F


  j,  AJ

  A  A   
 (  ("k O
    ̃  (!
 ( j      j6 A j A  ( "   @ (@"AF
  )D! (L!   6    6
   6    7  Aj Aj( 6    ) 7   )474  A<j A<j) 7   A j A j-  :     ),7,   (
6
   )$7$

 - D!  A6    : 

  A  A   
  j!@ (  ("
k 
 k"O
   
 ̃  (!


-- Chunk 107 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:15901-16050
 ( 
j     
 j"
6 A j A=j)  7   ) 57h
@@@ A]j"A
K
 A tAq

 A G

 !
 A : @ Aj A  A j 
    A j A A ( (
 @ (@"AF
  )D! (L!   )h7 5   	: 4   
60   
6,  A6(  B 7   A ;
   6
   7   6   Aj Aj( 6    ) 7  A=j A jAj) 7  

 - D!  A6    : 


@ E
   A 
 (!  A G: h@@ 	E
 @  ( G
  ΃ 
 ( jA/:    Aj6 A0j A  A j   
  (4! (0!

 A8j A  A j  
  (<! (8!
@@@@@@@ - hE
  !	

 AI
 ("	 I
 (!@ 	AI
  , AL

@ 	 M
   j,  AL

A!	 A6L  6H  Aj6@  6P   j6D A j A !
 A j A A    (@"AF
 )D! (L!   6 5   /d; 9   : D   
6@   6<   : 4   	60   	6,  A6(  B 7   A ;
   6
   7   6   Aj Aj( 6    ) 7  A;j A jAj-  :  

A A ܆  
  	A Ɔ  
A A.A Ȇ  
A A,A Ȇ  
 - D!  A6    : 

@ (  ("kAK
   A̃  (!
  Aj6 ( jBұ˗/7   A : @  A  A jA    A j A A (  ( @ (@"AF
  )D! (L!  A : 4  A60  B 7(  B 7   A ;
   6
   7   6   Aj Aj( 6    ) 7

 - D!  A6    : 
 ( "E
  ( A 
 Aj$ 

~# A k"$  !@@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q!	 Aq!
@ A_K
  
At 	r! Aj!

 	At - A?qr!	@ ApO
  	 
A
tr! Aj!

 	At - A?qr 
AtA qr"A F
 Aj!
@@ A
K
 A !	A tA q

 !	
 	A F
 
@@@@@@@@@@@@@@ 	A]j

 
 	A G

A !
 "
!@  F
@@ ,  "	AL
  Aj! 	Aq!	

 - A?q!
 	Aq!
@ 	A_K
  
At 
r!	 Aj!

 
At - A?qr!
@ 	ApO
  
 
A
tr!	 Aj!

 
At - A?qr 
AtA qr"	A F
 Aj!
@@ 	A
K
 A !
A 	tA q

 	!

 
A F
 @ 
A F
  
A/G

@ 
Aj"
E
  !



A   
 ( E
 Aj!

@@@@ 
AK

-- Chunk 108 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16051-16200
  (!
 (0"E
  ("	I
  	F


@ ("
E
  (
!
A ! A : L  6H  6D A 6( B7  A j A jփ  ($!	 ( !@ ((AG
  	/  A F!
@ E
  	 A 
 
  
A 
(  
 ( "
Aj"
A   
 
 j,  AL

@ (  ("	k O
   	 ̃  (!	
 ( 	j 
    	 j"	6@ 	 ( G
  ΃ 
 ( 	jA/:   Aj"
 	Aj6  A:   Aj   A j     (
! (! A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj 
) 7   ) 7    A j  (  ($ (( (, A4j /
 /
    


 (!	@@  ("I
   F


 	 j,  AL

@ (  ("k O
    ̃  (!
 ( j 	     j6  6$  6 @A A A j 
  A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7    A j 
   
 


 ($! ( ! A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7    A j    
 


@@@@@@ ( E
  Aj!

 (E
 A
j!
 (!
 (!	 ( "
 (!A !

 (!	 ("
!

@@  
I
   
G
 !


 	 j,  AJ

 	 
A  A   
 (  ("k O
    ̃  (!
 ( j 	     j6   (0"
  !@@ 
 (G
 @ ( "E
 @  
I
   
F


 	 j,  AL

@@ 	  AqAG
  !@  F
@@ ,  "AL
  Aj! Aq!

 - A?q!	 Aq!
@ A_K
  
At 	r! Aj!

 	At - A?qr!	@ ApO
  	 
A
tr! Aj!

 	At - A?qr 
AtA qr"A F
 Aj!
@@ A
K
 A !	A tA q

 !	
 	A F
 

@ 
 ( G
  ΃ 
 ( 
jA/:    
Aj6
 !
@@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q!	 Aq!
@ A_K
  
At 	r! Aj!

 	At - A?qr!	@ ApO
  	 
A
tr! Aj!

 	At - A?qr 
AtA qr"A F
 Aj!
@@ A
K
 A !	A tA q

 !	
 	A F
 

-- Chunk 109 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16201-16350
 	A/F

 A:   Aj   A j 
    (
! (!

 A:   Aj   A j 
    (! (!
 A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7    A j  (  ($ (( (, A4j /
 /
 
   


 	 
A  A   
 	 A  A   
 
 	A  A   
 (E
 A
j!
 (!	 ( "
 (!A !

 (! (!	

@@  ("I
   F


 	 j,  AJ

 	 A  A   
 (  ("k O
    ̃  (!
 ( j 	     j6 A j   ( "   @ ( "AF
  )$! (,!   6    6
   6    7  Aj Aj( 6    ) 7   )474  A<j A<j) 7   A j A j-  :     ),7,   (
6
   )$7$

 - $!  A6    :  ( "E
 ( A 

 A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7    A j    

@@@ (
  (! (!

 (!@ (
"
  (!A !

@  ("I
   F


  j,  AL

 (  ("k O
    ̃  (!
 ( j    Aj  j"6   Aj 6   A 6   ) 7   )474  A<j A<j) 7   A j A j-  :     (060   ) 7    ) 7    )(7(   (
6

 A j$ 
  A  A   
# Ak"$ @ (" ( G
  ΃ 
 ( jA/:    Aj"6@  ( G
  ΃ 
 ( jA/:    Aj"	6A !
 !A !
@@@@  F
 @@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!
@ A_K
  
At 
r! Aj!

 
At - A?qr!
@ ApO
  
 
A
tr! Aj!

 
At - A?qr 
AtA qr"A F
 Aj!
@@ A
K
 A !
A tA q

 !

 
A F
@@@ 
A]j
 
 
A F


 ! 
! ("
E
 
A
A 
 (
(   ! 
!

 AqAF

@@@@@@@ 
E
 @@ E
 A ! A J
 (!


 
!@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!
@ A_K
  
At r! Aj!

 At - A?qr!@ ApO
   
A
tr! Aj!

 At - A?qr 
AtA qr"A F
 Aj!
@@ A

-- Chunk 110 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16351-16500
K
 A !A tA q

 !
 A F
 
@ A]j"A
K
 A tAq

 AqAF
  A F

  
6\  (6X

A !@@  F
 !@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!
@ A_K
  
At r! Aj!

 At - A?qr!@ ApO
   
A
tr! Aj!

 At - A?qr 
AtA qr! Aj!
@ A
K
 A tA qE
  !  G



 A F"

A!
@ AI
 A!
 AI
 AA AI!

@@ 
  k"I
  
 F


  
j,  AL

 

@@@ A:G
  AG

 ( (
     A 6(  
6$  6  Aj A j @ ("
E
  (!@@ (  ("k O
    ̃  (!
 ( j 
     j6 Aj A j  (
! ("

 

 As r!

 (!
@ AG
  
!  rAqE


@ 
 ( G
  ΃ 
 ( 
jA::  A!  
Aj6
 AJ! Aj! 
 
 
 (" !
  rAqE

@  ( G
  ΃ 
 ( jA :    Aj6

  6\  (6X

A ކ  
  A  
A   
A ! A : XA!

  
6\  
6X
A!
 A j j 6 @@@@@@@ (\"E
  (X! (!
 A j  (`   - !! -  "AF
 A jAj A jAj/ ;  A jA
j A jA
j) 7   )"7Z  : Y  : X (4! (8! A 6  B7, AӀ B  A j7p  A j6( A6$@@ A  A jφ 
  (! (d!
 - X"

 
E


A A+ A jA A ۆ  
  6$  6 A A A j !A ! AqAG
 E


 - X!

 A jAr! !@A !
  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
 A:G

-- Chunk 111 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16501-16650
 -  !A !A ! !@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!@ A_K
  At 
r! Aj!

 
At - A?qr!
@ ApO
  
 A
tr! Aj!

 
At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !
A tA q

 !

 
A F
 @ 
APj"A
O
 A! !  A
lj"AM



 Aq
 @ 
A]j"A
K
 A tAq

 
A G

A !
 AqE
@@ E
  (!@@  K
   F


  j,  AL

@@@@@@@ A~j 
 (  AуG


 /  AF


 A A 


 A A E
  A A E!A!

A!A!

A!A !
 E
   AqF

  ;nA!
 A6$ A 6  B7, AԀ B  A j7p  A j6(@ A  A jφ 
  (d!
 - X!


A A+ A jA A ۆ  
  A  A   
A! 


 (\"E
 (` A 

 !
  (  6 A!  Aj(  6 # (`!@@@@ 
Aq  
 
A G!@ ( #"
 

  A 

A! ( !

 (h! A
j A&j-  :    /$;
 ( !
 A j A
j-  :    6 E  : D  /
; I  : T  
6P  6L@ 	 
F
 A ! E

 Aj"( ! A:      A j    (! ( ! A jA j A j( 6  A jAj Aj) 7  A jAj Aj) 7  A jAj ) 7   ) 7    A j    
  A j 
     

  A6    :  ( "E
  ( A 
 Aj$ 
 
!
@ 
Aj"
 
H
  
!
 !



A   
@@@ (
  (! (!

 (!@ (
"
 A !

@  ("I
   F


  j,  A@H

@   kj" I
 @ ( "	 ("k"
 O
    ̃  ( "	 ("k!

@ 
 O
    ̃  ( !	 (!
 (" j      j"6@  	G

-- Chunk 112 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16651-16800
  ΃  (!
  jA#:    Aj6@@@  G
  !

@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 - ! Aj! At A?qr AtA qr"A F

@@ A
K
 A !A tA q

 !
 A F
 

      A6   6
  Aj Aj( 6    ) 7   )474  A<j A<j) 7   A j A j-  :     (060   ) 7    ) 7    )(7(   (
6

A   
  A  A   
@@@   G
  ! A !

@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

  - !A !  Aj!  At A?qr AtA qr"A F

@@ A
K
 A !A tA q

 !
 A F
 

@@@   G
  ! A !

@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

  - !A !  Aj!  At A?qr AtA qr"A F

@@ A
K
 A !A tA q

 !
 A F
 

@@@   G
 A !

@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

A ! At  - A?qr AtA qr"A F
  Aj! 
@@ A
K
 A !A tA q

 !
 A F
 

A ! @ A F
  A F
  A qAj!@ A G
  AO
 A:F A Fr
 AO
 @ A F
  A:G

 A]j"A:O
 B Aq! 
  

	# A0k"$ @@@@@@@@@@@@  F
   k!A !A !A ! !@@@@ ,  "	AL
  Aj! 	Aq!	

 - A?q!
 	Aq!
@ 	A_K
  
At 
r!	 Aj!

 
At - A?qr!
@ 	ApO
  
 
A
tr!	 Aj!

 
At - A?qr 
AtA qr!	 Aj!
A!
A!
@@@ 	Awj7 
 	A F
 	A F

 Aj"E
@ 	AI
 A!
 	AI
 AA 	AI!

 !

@  
j"	 I

-- Chunk 113 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16801-16950
  
! 	!  G



A   
A   
  6  6

  6  6A!@@@@ Aq
  ! E
 !@  F
@@@ ,  "	AL
  Aj! 	Aq!	

 - A?q!
 	Aq!
@ 	A_K
  
At 
r!	 Aj!

 
At - A?qr!
@ 	ApO
  
 
A
tr!	 Aj!

 - !	 Aj! 
At 	A?qr 
AtA qr"	A F

@@@ 	A
K
 A 	tA q

 	A G

  F



 Aj"
 


A ! A 6$ B7
A !	 E
  6,  Aj6( Aj A(j Aj A
j  ($! ( ! (
!	

 !
  6 E
@@  I
   G


  j,  AL
	 !
 !
 AF
 
A!A !

A!A !A !A A  

A !
 A H
A - ΀ A!
 A "E

    

@ -  AqAjAqAK
  - "A:F
 A F

A - ΀ A!AA "E
  /  ;  
  A: 
   6   6   6    / 
; 
   )7  Aj A
j-  :   AqE
 	E
  	A 

   6   6  A : 
  A 6  B7   	A GqAG
   	A 
 A0j$ 
  A  A   
 
   
AA  
# Ak"$ @@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!	@ A_K
  	At r! Aj!

 At - A?qr!@ ApO
   	A
tr! Aj!

 At - A?qr 	AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
@@ A#F
  A?G
@ (" ( G
  ΃ 
 ( jA?:  A!	  Aj6 Aj      @ ("E
  (
!

   6  A6 A !A!

A !	
@ (" ( G
  ΃ 
 ( jA#:    Aj6      A6   6   	6 A
!

A !  A 6 A!

A A A ǃ  
   j 6  Aj$ 
# Ak"$ @@  (" M
   ("!@@@ E
   j",  AL

  k"!@@ AjA/   @ ("	AF
  	E


@ (
" O
   j-  A/F


-- Chunk 114 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:16951-17100
  M
 

A ކ  
    A   
@@@  j" I
  Aj"E
@@ Aq
 @@  M
   j",  AJ


  G
  j!
  kAG
  -  AqAjAqAK
   j- A:G


  I

@ E
   M
   j,  AL

  I
   6

A   
A   
A A0A Ȇ  
 Aj$ 
    A   
# A k"$  (! !@@@  G
  !A !	

@@ ,  "
AL
  Aj! 
Aq!


 - A?q!	 
Aq!
@ 
A_K
  
At 	r!
 Aj!

 	At - A?qr!
@ 
ApO
  
 
A
tr!
 Aj!

 - !
A !	 Aj! 
At 
A?qr 
AtA qr"
A F

@@ 
A
K
 A !	A 
tA q

 
!	
 	A F
 

@@ AqAG
 @@@ 	A]j
 
 	A F

@  ( G
  ΃ 
 ( jA/:    Aj6
 Aj A      (
! (!

 !
@ 	A G
  !
 ("
E
  
A  (
(   (!

 (!
@@@ 
E
  
 
jAj-  A/F

@ 
 ( G
  ΃  (!

 
 
jA/:    
Aj6 	A/F
 	A F

 Aj        (! (!

 Aj        (
! (!
   6   6  A j$ 
@  E
 @@ A%G
 @@@  G
  !A !

@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 - !A ! Aj! At A?qr AtA qr"A F

@@ A
K
 A !A tA q

 !
 A F
 

@A!  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

-- Chunk 115 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17101-17250

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F
 
 A F
@ APjA
I
  A qAjAK

 APjA
I
 A qAjAO


 APjA
I
 A_qAjAI
@ A_j^                                                                            
 A@jAI
 ADjAI
 AGjAI
 A{q"APjAI
 Asq"A`jAI
 ApjAI
 AxjAI
 A|jAI
 A|jAI
 A~jAI
A! A|jA;I

    (  


# A0k"$   6
  6@@@@@@@@@@@ Aq
  Aj    - ! ("AxF
 ($! ( ! Aj Aj-  At / Atr r" (  - !@@ - "	AF
  ( ! (
!
 (!
 (! /!
 	E



  A:     :  E

  A 


 
A	G
@ 
A A	 E
  !
 
!A	!



A !
A!@ E
  
 A 
A !

	
  G
  6

  A:     : 

  k!
A !
A !
A !
A ! !@@@@ ,  "	AL
  Aj! 	Aq!	

 - A?q! 	Aq!@ 	A_K
  At r!	 Aj!

 At - A?qr!@ 	ApO
   A
tr!	 Aj!

 At - A?qr AtA qr!	 Aj!
A!A!@@@@@@@@ 	AwjU			 
 	A G


 AqAG


 
AqE

 
Aj"
E
@ 	AI
 A! 	AI
 AA 	AI!
 
!

@ 
Aj"
E
 A!
 
!A!

A   
@ 
Aj"
E
 A !
 
!

A   
A   
@  j"	 I
  !
 	!  G



A   
A!	@@@ 
Aq
  ! 
E
 !@  F
@@@ ,  "	AL
  Aj! 	Aq!	

 - A?q! 	Aq!@ 	A_K
  At r!	 Aj!

-- Chunk 116 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17251-17400

 At - A?qr!@ 	ApO
   A
tr!	 Aj!

 - !	 Aj! At 	A?qr AtA qr"	A F

@@@ 	A
K
 A 	tA q

 	A G

  F



 
Aj"

 


A !
 A 6 B7A !@ 
E
   
6,  Aj6(  A(j 
Aj Aj  (!
 (!	 (!
A!@ AqAF
  	!

@ 
E
  	!

  A; 

 !
  6 

 AqAF
A !A !


@@  
I
   
G
A !

  j,  AL
 A ! !


  
A  A   
  A; 

@ AqAG
  Aj  
  - !@ - "AF
    )7  Aj AjAj/ ;   A
j AjA
j) 7    )7   :    :   E


  A:     :  E


 Aj  
  - !@ - "AF
    )7  Aj AjAj/ ;   A
j AjA
j) 7    )7   :    :    A GqE
 	 A 

  A:     :  E

 E
 	 A 

 !
 
!
   6   6   6   
6
   6   
6   
;   :    	:   E
   A 
 A0j$ 

	# A k"$   k!A!@@@  F
 A !	 A H
A - ΀ A!	 A "E

 A 6$  6   6
 (
!
 (!
 -  Aq!
A !
@A !	@@@@@@@@@@@  F
 @@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
 A F

 A#G
 

 !	
 (! (! E
@@  K
   F


  j,  AL


 A}j
 
 
    @ AI
  A 6( AI
@ AO
   A
vAr: (  AvA?qAr: )A!A!	


  AvAr: (  AvA?qAr: *  A
vA?qAr: )A!A!	
	
@ ($" (

-- Chunk 117 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17401-17550
G
  A
j΃ 
 (  j :    Aj"
6$
	
 A A 


 (  AуF
 (  AұF


 A A E

 ( !

  AvAr: (A!A!	

 ( ! ("E
  A(j   
 ((   (0!
 (,!

  
60  6, Ax6(
  
68  64 A A  AqAF6< Aj A4j @ ("E
  (!@@ (  k O
    ̃  (! (!
  j      j"6 Aj A4j  (
! ("
 

@ (("AxrAxF
   A 
@ (
"E
  (  A 
   6   	6  A j$ 
 A(j 	r A?qAr:  @ (
 ($"k O
  A
j  ̃  ($!
 (  j A(j     j"
6$
 

 	   
  A  A   
# A k"$ @  F
 @@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr! Aj!
@ A
K
 A tA qE
  !  G


 A F
A!@ AI
 A! AI
 AA AI!
@@@@   k"I
   F


  j,  AL

@@@ E
  A G


  ("E
 A  (
(  

  (  (
    
 A 6
  6  6 Aj Aj  ("E
 (
!  (!@@  (  k O
     ̃   (!
  ( j       j"6  Aj  (! ( "E

 

  A  A   
 !  G
 

 A j$ 
 @@@@@@@@@@  -  
 	 
 A A
􆀀 
 A A!􆀀 
 A A􆀀 
 A A􆀀 
 A A􆀀 
 A A􆀀 
 A A􆀀 
 A A)􆀀 
 A A3􆀀 
 A A%􆀀 

~# A0k"$    / "At Avr;   / 
"At Avr;
   / 
"At Avr;
   / "At Avr;   / "At Avr;   / "At Avr;   / "	At 	Avr;   /  " At  Avr; @@@@@@  
  	
A !	

AA 	!	
 
A 	 	A H!	A! A!

AA !	A !A! 

AA !A 	kA 	AJ"!  	A !

@ E
 A! 	A H
A 	k"
   
  J"
!  	  
!

A 	 	A H!
@@ E
 A! A H
A k"	   	  J"	!    	!

A  A H!
@@ E
 A! A H
A k"     J"!    !


-- Chunk 118 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17551-17700
A  A H!
@@ E
 A! A H
A k"     J"!    !

A  A H!
@@ E
 A! A H
A k"     J"!    !

A  A H!
 Aj!
 A
j!
 A
j!
 Aj! Aj!
 Aj!	 Aj!A  A k"  J"  AJ""       " AH"!Aڀ B !@@@@@@@A~   j "AH
  
 A A􆀀 
 A A􆀀 E


@ 
 @ AK
 A ! @@  
  A A􆀀 
 A A􆀀 
 ! 
 A 6 B7
 A6     Atj7(  A(j6 ( ( Ajφ 
  AF
  Aj!  A A􆀀 E
 


 A A􆀀 
 A A􆀀 


@ AK
 A ! @@   G
  A A􆀀 
 ! 
 A 6 B7
 A6     Atj7(  A(j6 ( ( Ajφ 
  AF
  Aj!  A A􆀀 E
 


 A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   	7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
 A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 


 A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
@ AF
  A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   	7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   
7(  A(j6 ( ( Ajφ 
 A A􆀀 
 AF
  A6 A 6 B7
   
7(  A(j6 ( ( Ajφ E


 A A􆀀 

A !

 A A􆀀 E

A!
 A0j$  
 AA ņ  
 @  ( "E
   ( A 


# A k"$ A !@@ - %E
 

@ - $
  A: $ Aj   (
!@ ("E
  E
  !

 - %

 (!@ (
" ("K
   ("K

-- Chunk 119 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17701-17850
   j! - "	Aj!  	jAj!
@@@@ 	AK
  Aj!
@ Aj 
-     k  ("AG
@ ( j" I
   k"
 	j"
 
I
  
 K
   
j 
 	 
   
6

  6  K
  M
 


@ Aj 
-     k  ("AG
@ (
 j" I
   k"
 	j"
 
I
  
 M

  6  K
  K

 

  6 E

 ( !  
6   
k!  
j!

 	AA Ɔ  
 A: % (  (
"k!  j!
   6   6  A j$ 
  A A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ΃ 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     ̃   (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
     ̃   (!
  ( j       j6A 
	# A k"$ @@@@@@@@@@@@@@@@@@ E
  -  A F

 A$j   j  A<j ((" (,郀 @ - <E
 A!

 - D! (@"AxF
 / E A j-  AtrAt r!@ (H"
 A !

  j! !@@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q!	 Aq!
@ A_K
  
At 	r! Aj!

 	At - A?qr!	@ ApO
  	 
A
tr! Aj!

 	At - A?qr 
AtA qr"A F
 Aj!
 A I
 A`j`                                                                                  

 A;`  6\ A 6X A: T A.6P  6L A 6H  6D  6@ A.6< Aj A<j  ("	E
@@@ (
"
  Aj A<j  ("	E
 ("E

A !@  F
 	 j! Aj! -  APjAqA
I
 
 Aj 	   (AG

   6
   6   6  A :  

 A;`  6\A ! A 6X A: T A.6P  6L A 6H  6D  6@ A.6< A0j A<jƃ  (4!	@ (8"
  A 6l B 7d (0!


@ 	 Aj"AtjAj( 
   68 !
@@ AK
 A ! A 6l B 7d (0!
 E
 	 Atj! 	!@  (  (  ( AG
 (!@ (l" (dG
  A jσ 
 (h Atj 6   Aj"6l Aj" F

 

 (0"E

 	 AtA 


 
E
 	 
AtA 

-- Chunk 120 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:17851-18000

  A
; 


@  jAj-  A F
   A; 

 Aj"E
 , AL
 A<j Aj A~j @ - <
    A<jAj")  7   A	j Aj)  7    A:  

   - =:   A:  

A ކ  
  A A   
@ 
E
  	 
AtA  (l!
@ 
 A AA ߆  
  Aj"	6l 	AK
 	At"A O
 (h" 	Atj( "
A vK
  (d!
 AtA|j!A !@@  G
 @ 	
  
!

 
 ( Atj" 
O


  j! Aj! ( AM
 

 (d"E
 (h AtA A!

A   
A   
 	AF
  (Atj" I
  ! 	AF
  (Atj" I
  	AF
  (
j" I
  ! 	AF
A   
A   
  
AtA   Aj :     At AqAtr AvAqrAv;   Av:   A:  
 E
  A 

A!

 ($"AxrAxF
  A 

  A:     :  E
  A 

  A:     : 
 ($"AxrAxF
   A 
 A j$ 
# Ak"$ A!@@@@@@  
 /  AF
 /  AF
 -  A0G
  , AJ
  A A   
A !A
!@@  G
  !

  j! Aj! -  APjAqA
I
 
A !

 Aj! Aj! Aj"!@@ 
 A!

 Aj! -  !A ! Aj! AqA0F
 


A!A ! AI
@ , AL
  A~j! A~j! Aj"!@@ 
 A!

 Aj! -  ! Aj"! APjAqA
I
  ! A_qAjAqAI
 
A!

  A A   
 Aj     - As! (
!
   6   6  Aj$ 

# Ak"$  AjB 7  B 7 @@ AI
 A !A !@ -  A:G
  - A:G
A!A!
@@@@@@@  I
 A!A! !

 !A!@ A AK!@ AF
@  j-  A:G
  AF
	@ Aj"E
 A! ! Aj" I


A   
@@@ Aj"	 I
 A !
 !
   	  	I"
O
A !
 !
@@  
j-  "
APj"	A
I
 A 
A r"	Aj"
 
 	AjI"	AK

 
AqAK
 
At 	r!
 
 
Aj"
G

-- Chunk 121 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18001-18150
 
 
!


A   
A   
@@ 
 I
  
!

@  
j-  "	A:F
  	A.G
  O
 AK
 
 F
A !	@@@@ 	E
  	AO
  j-  A.G
 Aj!
  O

  j-  APj"Aq"
A	K

@@ Aj"
 G
  !

@  
j-  APj"
AqA	M
  
!

 Aj!
@@@@ 
Aq"
E
 
A
l"
Av
 
Aq 
Aqj"
Aq"
 
G
 
AK
  
F
  
j!
 
Aj"
!
 
-  APj"
AqA
I
 
 AqA
O
 
Aj!

 !

A   
A   
 AK
  Atj"
/ "
AK
 
 
At 
r; @@@ 	Aj"
 	H
  
A~j
A   
 Aj!
 
!	  I
 
 
AG



 AA ņ  
A   
 
Aj" F
	
  F
  Atj 
;  Aj!  I
 


  I
@ AG
 @  I
   F
   k"	j"
 I
 
E
 
Aj!
@ 
A	O
  /!
   
Atj"
/ ; 
 
;  	Aj"
E
  
j"
 I
 
E
 
Aj!
 
AK
  /
!
   
Atj"
/ ;
 
 
;  	A~j"
E
  
j"
 I
 
E
 

-- Chunk 122 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18151-18300
Aj!
 
AK
  /
!
   
Atj"
/ ;
 
 
;  	A}j"
E
  
j"
 I
 
E
 
Aj!
 
AK
  /!
   
Atj"
/ ; 
 
;  	A|j"
E
  
j"
 I
 
E
 
Aj!
 
AK
  /!
   
Atj"
/ ; 
 
;  	A{j"
E
  
j"
 I
 
E
 
Aj!
 
AK
  /!
   
Atj"
/ ; 
 
;  	Azj"
E
  
j"
 I
 
E
 
Aj!
 
AK
  /!
   
Atj"
/ ; 
 
;  	Ayj"
E
  
j"
 I
 
E
 
AM
 
Aj!

 
AA ņ  
A   
 AG

  A :     /"
At 
Avr;    /
"
At 
Avr; 
   /
"
At 
Avr; 
   /"
At 
Avr; 	   /"
At 
Avr;    /"
At 
Avr;    /"
At 
Avr;    / "
At 
Avr; 

A   
A   
A   
 AA ņ  
  A;  
 Aj$ 
# A k"$ @@@@@ E
  -  A F

  j! !@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@ }                 

  A
; 

 A 6,  6(  6$ A 68 B70 A: \ A 6L A 6X A 6T A 6D A 6<  A0j6P A$j A<j 
 Aj A0jAj( 6    )07 
  A :     ) 	7   Aj Aj)  7  

@  jAj-  A F
   A; 

 Aj"E
 , AL
 A<j Aj A~j @ - <

-- Chunk 123 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18301-18450
    A<jAj")  7   A	j Aj)  7    A:  

   - =:   A:  

A A7 A	jA A ۆ  
  A A   
 A j$ 
y@@@  -    
  (  (
  
  Aj ن 
A!@ A A􆀀 
 A!  Aj  
  A A􆀀 !
 

  B7 @  ("
 @  ("(  ("k  ("  ("k"O
    ̃  (!
@  F
  (!@@ Aq"
  !

 !@  j -  :   Aj! Aj! Aj"
 

@  kA|K
   j!	A !@ 	 j"  j"-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   Aj! Aj G
 
  j!
   6
  6
  (!@@@@  (
"
  ("("G
   (!

 
 k! ( j!  (!@  F
  -  :     Aj"6  (Aj6 Aj! Aj"
 

@@  G
  ! !

@ (  
 j"k  k"O
    ̃ 
 ("  
j"	j  
j     	6
@ (" 	G
  	!
 !

 ( j! 
 j k! !@  F
  -  :     Aj"6  (Aj6 Aj!  Aj"G
 
 	!

  F
 A !  k"
A H
A !A - ΀ A! 
A "E
  k"Aq!	@  kA|K
  A|q!
A !@  j"  j"-  :   Aj Aj-  :   Aj Aj-  :   Aj Aj-  :   
 Aj"G
 
  j!
@ 	E
 @  j -  :   Aj! Aj! 	Aj"	
 

   6@ E
 @ (  
 j"k O
    ̃ 
 (" 
 j"j  
j     6
 (" F
  Aj!  
k!  ( j! !@  -  :    (Aj6   F
 Aj! Aj! ! Aj! 
 

  
A 

  
  
"   Bͅ 7  BŹ7 

     
<# Ak"$    ) 7 AjA A   (AA   
F# Ak"$   6
  6   AjA  A
jA   ㆀ  
I@  (   ("k O
     ̃   (!
  ( j       j6
 (! (!A !@@@ (   
 ( !

 ( Aj"
 A   
 (
! !@@@ (  
 ( Aj"
A   
 ( !
@@  K
   I
  6   6
   6    k6   (" j6    j6 
  A ܆  
  A Ɔ  
# Ak"$ A !@@ - %E
 

 (!@@ (" ("K
   (
"I
   k!  j!	 Aj"
 - "
jAj-  !
@@ 
AK
  
Aq!
@@@ AI
  Aj 
 	   (
! (!

A !A !  F
 A !@@ 	 j-   
G
 A!

  Aj"G
 
A ! !
 AG
   jAj"6
@  
I

-- Chunk 124 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18451-18600
   K
    
k"j 
 
 E

  j!	  k!  O
 


 
Aq!
@@@ AI
   
 	   (! ( !

A !A !  F
 A !@@ 	 j-   
G
 A!

  Aj"G
 
A ! !
 AG
   jAj"6
@@  
I
   M

  j!	  k!  O



 
AA Ɔ  
  6
 

 A: %@@ - $E
  ( ! (
!

 ( " (
"F

  j!  k!

 (
!  6
  j!  k!
   6   6  Aj$ 
# A k"$  Aj Ń @@@ ("
   A 6  B 7 

 (!A - ΀ A A "E
  6  6  A6$  6  A6
 A(jA j A j) 7  A(jAj Aj) 7  A(jAj Aj) 7  A(jAj Aj) 7   ) 7( Aj A(jŃ @ ("E
  (
!A
!A!@@  (
G
  A
j A̓  ( !
  j" 6  A|j 6   Aj"6$ Aj!  A(jŃ  (! ( "
 

   )
7   Aj A
jAj( 6 
 A j$ 
AA   
6# Ak"$   6
  6   6 Aj  
D  ( ! @ (
"Aq
 @ A q
    چ 
    
    
% @ ( 
 ꅀ  
  A 6   6 
p ( ! A 6 @@ E
  (!A - ΀ AA "E
  6  6   A 6   6 
ꅀ  
AA  
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj˃ @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj˃ @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj˃ @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   

-- Chunk 125 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18601-18750
A! At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj˃ @ (E
  (
 (  
 (
!   6    6 A j$ 
	  j!A !A ! !@@ !@ " G
  ! !

@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!	@ ApO
  	 A
tr! Aj!

 Aj! 	At - A?qr AtA qr"A G
  !

  k j! A!I
 
A!
@@@  "F
@ Aj"-  ""	AJ
 @@ A~j"-  ""
A@H
  Aq!

@@ A}j"-  ""
AL
  Aq!

 A|j"-  AqAt 
A?qr!
 At 
A?qr!
 At 	A?qr"A F

 A M
 
 A  !  k j!

 A  ! A  !
    k6    j6 
   A  φ 
 @  ( "E
   ( A 

# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ΃ 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     ̃   (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
     ̃   (!
  ( j       j6A 
# A k"$   6  6
  (!  (!@@ E
 @  K
   F


  j,  A@H

@ E
 @@  K
   G


  j,  AJ

A A*A Ȇ  
  Aj6< A68 A 60  A
j64 Aj   A0jă   6(   j6, Aj  (
!@@@ ( (G
  ($"E
 ( " (" F
 ("  j  j  

 ($"E
@ ( " (" F
  ("  j  j  
    j6

    j6
 A j$ 
A A*A Ȇ  
@ - 
  ( ! (!@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ A
K
 A !A tA q

 !
@ A/F
  A F
 A G

@  ("  ( G
   ΃ 
  ( j :     Aj6
 


~# A k"$ @@@@ AI
 A - ΀ @ AtAq"A "E
 A - ΀ AA "E
  Axj!  Aj!A !	A !
A!
@@   	"

-- Chunk 126 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18751-18900
At"
j!@@@  
k"AI
 @ - " -  I
 A! AF
  
j!
A!@ Aq! 
-  " I
 
Aj!
  Aj"F

 

A!@ AF
   
j!A!@ Aq! -  " O
 Aj!  Aj"G
 
 !
@@@  
j"	 I
  	 K
@ AO
 A!

  Atj Av"Atk!A ! AF
 	At! Aq!A !@   j"Axj") ! A|j   
j"Aj( 6   -  :    7    AsjAtj") ! Aj A
j( 6   Aj"-  :    7  Apj! 
Aj!
  Aj"G
 


 
 	A ܆  
 	 A Ɔ  
 AqE
  Atj"-  ! (!    AsjAtj"
) 7  
 6 
 :  

 !
  
j!	
 	 
I
 	 K
@@@ 	 O
  A
I

 	 
k!

  
A
j"   I"
 
k"A  	 
F؃  
!	
@@ 
 
G
 A - ΀  
AtA "E
 
At!
   
At"
 !  
A  !
  
Atj" 
6  6  
Aj"!
@ AI
 @@@@@  "Aj"Atj"
( " 
(j F
  At j"
Apj( "
 M
 A!
 AF
  A}j"Atj( " 
 jM
A!
 AM
 
A`j(   
jM
 !


 AF
  A}j"Atj( !
  I

 A~j!
@@@@@@  M
   Aj"M
  Atj"( ( "j"
  Atj"("I
 
 K
   Atj" ( "At"
j! 
At!@ 
 k" k"
 O
    
At"
 " 
j!
 AH
 
AH
  j!
@ 
 AxA  
Axj-  "
 Axj-  "I"j" 
AxA  
 Oj"
 ) 7   M
 
Axj!
 
 M

 

   
 "
 
j!
@ AN
  
!


@  J
  
!


-- Chunk 127 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:18901-19050

   j! 
!
@   
 -  "
 
-  "I") 7  Aj! 
 
 OAtj"
 
O
  Atj" I
 


 A 6 A6
 A 6 B7 AjA Æ  
 A 6 A6
 A 6 B7 AjA Æ  
  
A ܆  
 
 A Ɔ  
 ! !

  
 
 
k   6   j6   Aj  AsjAt A!
 AK
 

 	 O



AȀ ކ  
A؀ A,A Ȇ  
A ކ  
 AM
   A؃ 

  
AtA   A 
 A j$ 
A ކ  
~@ Aj O
 @  O
   Apj! At  jAxj!@@   Atj"-  "  Aj"Atj"-  O
  !	 Aj5 !
  ) 7 @ AF
 A!
 !@  Axj"-  O
  ) 7  !  
Aj"
G
 
  !
  
B  	7 
 Aj! !  G
 


A A.Aā Ȇ  

~# A k"$ @@@@ AI
 A - ΀ @ AtAq"A "E
 A - ΀ AA "E
  Axj!  Aj!A !	A !
A!
@@   	"
At"
j!@@@  
k"AI
 @ (" ( I
 A! AF
  
j!
A!@ 
( " I
 
Aj!
 !  Aj"F

 

A!@ AF
   
j!A!@ ( " O
 Aj! !  Aj"G
 
 !
@@@  
j"	 I
  	 K
@ AO
 A!

  Atj Av"Atk!A ! AF
 	At! Aq!A !@   jAxj") !    
j") 7   7  Aj") !    AsjAtj") 7   7  Apj! 
Aj!
  Aj"G
 


 
 	A ܆  
 	 A Ɔ  
 AqE
  Atj"
) ! 
   AsjAtj") 7   7 

 !
  
j!	
 	 
I
 	 K
@@@ 	 O
  A
I

 	 
k!

  
A
j"   I"
 
k"A  	 
Fڃ  
!	
@@ 
 
G
 A - ΀  
AtA "E
 
At!
   
At"
 !  
A  !
  
Atj" 
6  6  
Aj"!

-- Chunk 128 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19051-19200
@ AI
 @@@@@  "Aj"Atj"
( " 
(j F
  At j"
Apj( "
 M
 A!
 AF
  A}j"Atj( " 
 jM
A!
 AM
 
A`j(   
jM
 !


 AF
  A}j"Atj( !
  I

 A~j!
@@@@@@  M
   Aj"M
  Atj"( ( "j"
  Atj"("I
 
 K
   Atj" ( "At"
j! 
At!@ 
 k" k"
 O
    
At"
 " 
j!
 AH
 
AH
  j!
@ 
 AxA  
Axj( "
 Axj( "I"j" 
AxA  
 Oj"
 ) 7   M
 
Axj!
 
 M

 

   
 "
 
j!
@ AN
  
!


@  J
  
!


   j! 
!
@   
 ( "
 
( "I") 7  Aj! 
 
 OAtj"
 
O
  Atj" I
 


 A 6 A6
 A 6 B7 AjA Æ  
 A 6 A6
 A 6 B7 AjA Æ  
  
A ܆  
 
 A Ɔ  
 ! !

  
 
 
k   6   j6   Aj  AsjAt A!
 AK
 

 	 O



AȀ ކ  
A؀ A,A Ȇ  
A ކ  
 AM
   Aڃ 

  
AtA   A 
 A j$ 
A ކ  
~@ Aj O
 @  O
   Apj! At  jAxj!@@   Atj"( "  Aj"Atj"( O
  Aj5 !	  ) 7 @ AF
 A!
 !@  Axj"( O
  ) 7  !  
Aj"
G
 
  !
  	B  7 
 Aj! !  G
 


A A.Aā Ȇ  

~# Ak"$  A 6 !@@@@@@@ A-   @@@@ ( "AF
  


 (" O
  j-  A-G
 
A ! !


@@@ Aj"E
 @  M
   j",  AJ


  G

-- Chunk 129 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19201-19350
  j!

A؂   
    A   
  k! AI
 (  Axq
@A AjA|q" k  F" A|j"O
 @  j( Axq
 Aj" I
 

  j(  AxqE


  M
 
A !
 !A!
 E
   Aj"j,  A H
 E
   A~j"j,  A H
 E
   A}j"j,  A H
 

@@ E
   j!	A!
 !
A !
A !
@ 
!A  
k! 
Aj" 
I!
A$!A! 
!@@@@@@@@@@@@@ -  "APjAqA
I
  Aj"AqAI
 Aj"AqAI


 Ajj!
 E
 As n Aq"I
  "~"B 
  j" I
A!@  
M
  

  jA  I!
  K
A$ k ~"B 
@ A$j" I
  Aj" 	F
 ! ! !


Aȃ   
  
I
@ 
Aj"
E
 A !@  
kAA 
n" 
n j"AO
  !



A !@ A M
 A"I
 A	I
	@ Aj" I
  AǸK! ! A n"
! E




AȂ   
A   
A Ɇ  
A   
A   
A   
A؃   
 A#n!
 A$j!

 A	n!
 A j!

 An!
 A j!
@  
A$lAq 
A&jAqnj"
 O
 A   
  
n" AsK
@@@  j"
 I
  
AsAjAI
   
lk!@ ("
 A !

 (! At!@@@ ( " I
  Aj"E
  6 
 Aj! Axj"E

 

A   
A   
 (!
@  ( G
  򃀀 
 ( Atj" 
6  6   Aj"6 Aj!
 Aj" 	G
 


 (!
 (!  Aj6   Ajك @  ("j" I
    6  B 7   6
   6    (6    j6

A   
  A 6 

  A 6 
 Aj$ 
  (!  (!  ( !@@@@@@@@@@@  ("  (
O
   ( Atj"(  F
@ ! !  F
  ,  "AJ
 Aq! - A?q! A`I
 At - A?qr! ApI
 Aj! At - A?qr AtA qr"A F

-- Chunk 130 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19351-19500
 
   6 
	
@  G
 A 
   Aj6  ,  "AJ
   Aj6  Aq! - A?q! A_M
   Aj6  At - A?qr! ApI
   Aj6 A ! At - A?qr AtA qr"A F


   Aj6 
 Aq!

   Aj6 Aj"E
   6 (!
 
   Aj6 
  Atr!

   Aj6 
  A
tr!
@ Aj"E
    6 
A   
A   

~@   G
 A 
A !A !  !@@@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

@ At - A?qr AtA qr"A G
  !	

 Aj!
A! Aj"	E
@ AO
 @ (" ( G
  󃀀 
 ( j :    Aj6 Aj"
 A   
 Aj!  G
 

@ E
 @ (" ( G
  󃀀 
 ( jA-:    Aj6
A !  	O
 A! !
A !
A !
@@@@  !@  F
@@ ,  "AL
  Aj! Aq!


 - A?q! Aq!@ A_K
  At r!
 Aj!

 At - A?qr!@ ApO
   A
tr!
 Aj!

 At - A?qr AtA qr"
A F
 Aj!
  
K
 
@  F
 @@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
 
 
  
 I  K!
  G
 

 
 I
A! 
 k" 
As 
Aj"nK"
  ~"B 
@ 
 j" 
I
   !@@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@  
O
 A! Aj"E

@  
G
 A  
k! 
Aj" 
I!A$! !@@@@@@@@@@@@@@@@@  
M
  
   jA  I"I
 A$K
 A$F
  k!A$ k!

 
A !A !

A ! AI
 A! A$O
	
  j!@ (" ( G
  󃀀 
 ( j :    Aj6 
Aj"

-- Chunk 131 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19501-19650
E
A ! AA 
 Fn" 
n j"AO
 !


A   
A   
 Aj!A#!A!
A !
@   n" lk j"AI
 A!
 A$O

 
 j!@ (" ( G
  󃀀 
 ( j :    Aj6@ A$j" I
  !


Aȅ   
A !@ A M
 A"I
 A	I
@ Aj" I
  AǸK! ! A n"! E
	


AȂ   
A؅   
A   
A AA Ȇ  
A AA Ȇ  
 A#n! A$j!

 A	n! A j!

 An! A j!
@  A$lAq A&jAqnj"
 O
 A   
A ! 
!

  G
 

@ Aj"

 A   
 
Aj! ! 
 	I



A   
A   
A؄   
AȄ ކ  
 
# Ak"$ A !@@ - %E
 

 (!@@ (
" ("K
   ("K
   - "jAj-  !	@@ AK
  Aj!
 	Aq!
@  j!
@@  k"
AI
  Aj 	 
 
  (
! (!

A !A !  F
 A !@@ 
 j-   
G
 A!

 
 Aj"G
 
A ! 
!
 AG
   jAj"6
@  I
   K
    k"j 
  E

  M
 


 	Aq!
@  j!
@@  k"
AI
   	 
 
  (! ( !

A !A !  F
 A !@@ 
 j-   
G
 A!

 
 Aj"G
 
A ! 
!
 AG
   jAj"6
@@  I
   M

  M



 AA Ɔ  
  6
 

 A: %@@ - $E
  ( !
 (
!

 ( "
 (
"F

  j! 
 k!

 (
!
  6

-- Chunk 132 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19651-19800
  
j!  
k!
   6   6  Aj$ 
A !A!A!@@@ Av j"AtA j( "  F
     K" Aj    I"k!  K
 
 E
 Aj!
 At"A j. "Aq!@@@@@ A H
   Aq A j( "AqI
    kAqj"Aq G
 Aq"A>I
 A>A ņ  
 A>O

 AtA j
A   
A   
 A>A ņ  
A   

	  (!  (!  - !  (!  ( !  (
!  - Aq!@@@@@@@@@@@@@@@@@@@@@@@ E
 @  F
    Aj6
 -  "AJ
   Aj6
 Aq! - A?q!	 AI
   Aj6
 	At - A?qr!	 AI
   Aj6
 	At - A?qr AtA qr"A G

  A 6

@  G
 A 
   Aj"6 @@ -  "AJ
    Aj"	6  - A?q! Aq!@ AO
  At r! 	!

   Aj"	6  At - A?qr!@ AO
   A
tr! 	!

   Aj"	6  At - A?qr AtA qr! 	!

 !
 ASjAI
 A F
 AjAI
 APjA
I
@ ߃ "-   


@@  G
 A 
   Aj"6 @ -  "AJ
    Aj"6  - A?q! Aq!	@ AK
  	At r!

   Aj"6  At - A?qr!@ AO
   	A
tr!

   Aj"6  At - A?qr 	AtA qr!
 ASjAI
 A F
 AjAI
 APjA
I
 ! ߃ "-  "	AF
 
 	

 At 	r
 	 A
tr!

 !
 / " - "j!@ E
 @ A I
  A F


 AÀ j,  A@H

@ E
 @ A I
  A G


 AÀ j,  AL

 AÀ j" j!


 !
 E
 / " - "j! E
 A I
 A F



 A:  
 AqE

 A:  
 !
 Aq


  - E
	 A: 
 
 AÀ j,  A@H

@ E
 @ A I
  A G


 AÀ j,  AL

 AÀ j" j!

 A: 
 / " - "j!@ E
 @ A I
  A F


 AÀ j,  A@H

@ E
 @ A I
  A G


 AÀ j,  AL

 AÀ j" j!
   6   6

 

AÀ A   A   

-- Chunk 133 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19801-19950
AÀ A   A   
AÀ A   A   
 
 
@ E
 @@  ,  "AL
  Aq!

  - A?q! Aq!@ A_K
  At r!

 At  - A?qr!@ ApO
   A
tr!

 At  - A?qr AtA qr"A F

   j!@@ - E
 A! A-F
 Aj-  A-F

A!  
  - ! -  !@@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

 At  - A?qr AtA qr"A F
  Aj! 
A! !@@@ ߃ -   
 !
 Aq

   G
 


  jA:  

# Ak"$ @@ 
 A !

   j!A !@ !@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

 At  - A?qr AtA qr!  Aj! 
A !A!@ A.F
  A F
A !@ 
  A-F

A!@ AK
  B7 B
7 @@ AF
    Atj( F


AAAȉ ņ  
 Aj"AF

 AjAI
  APjA	K

A!   G
 

 Aj$  
*# Ak"$ A ! A 6 A(jAjA 6  A4jAj" Aj-  :   B 7(  (  68 (!	 AjA :   A 6 A 6 A : | A 6x A : t A 6p A : l A 6h A : d A ;`  6   j6  A(j6 Aj -  :   B 7  )47 A ;L A 6@ A jB 7  B 7P A :  A 6H  A j샀  A 6 B 7 -  !
 (! (! A;  6 A 6 A:  A.6  6 A 6  6  6 A.6 A j Ajރ @ ( "E
  Aj!
 A jAj!
 A j!
 Aj! ($!A !A!@@ Aq
 @ (" ( G
  󃀀 
 ( jA.:    Aj6
@@@@@@@@ AI
  (  AܵG
  Aj Aj Aj A|jۃ  (E
 (!  Aj냀  (! (! 
 !

 Aq
A ! E
  j! !@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@ A_jA M
   Aq"AK
 A tAq

  G
 


A! A: (

A!
    A(jჀ @ (  ("k O
    񃀀  (!
 ( j      j6

@  M
   j",  AJ


  G
  j!
  k!@@ Aq
 A !  F
  j! !@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@ A_jA M
   Aq"AK
 A tAq

  G
 


-- Chunk 134 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:19951-20100

A!
 - ) - (r - *r - +r - ,r - -r - .r - /r - 0r - 1r - 2r - 3r
 @  F
   j!A !A ! !@@@ !@@@ ,  "AL
  Aj!

 - A?q! Aq!@@ A`O
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

@ At - A?qr AtA qr"A G
  !

 Aj!
 A K

@@  G
  !

@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

@ At - A?qr AtA qr"A G
  !

 Aj!
 AI
 
A !
@ Aq  "Aq"M
  

@ Ayj"AK
  AG

A!@@@@@@@@ AJ
 @ AJ
 @ AJ
  Ayj7						
 AF
 AF
 Ayj"AK
A tA qE



@ AJ
 @ AJ
 @ Alj	
							
 
 Akj


 Aij"AK
A tAqE


@ AJ
  AF
 AG


 AF
 AF
 AG


@ AJ
 @ A J
  Adj"AK
A tAqE


@ A>J
  A F
 A6G


@ AJ
 @ A J
 @ AAj
	
	
	
	
	
	
																																																													
		
										
	
							
							
							
							
													
	
	
 
 A G



 A|j"AM


 AF
@ A|j

 
 AG



@ AJ
  AF
 AF
 AצG


 A{j"A
K
A tA qE


 AF


A tAqE


 AF
 AG


 A׹jAI
 A G


-- Chunk 135 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20101-20250

 AF
 Aajw                                                                                                         
 AtjAI
 AxjAI
 AxjAI
 A|jA	I
 A|jAI
 A q"AF
 Aȉ|jAI
 A։|jA
I
 A|jA I
 A֋|jA I
 Aۋ|jAI
 A|jA
I
 A|jAI
 A F
 A F
 A?F
 AajAI
 AF
 AkjAI
 A qAF
 AF
 A\jAI
  A]jAI
  AfjAI
  AsjAI
  AF
  AyjAI
  AyjAI
  AyjAI
  AzjAI
  AyjAI
 A  AjAI!
  G
 

@ Aq 
 B 7  
B 7  AjA :   
AjB 7   6  6 A 6 A : | A 6x A : t A 6p A : l A 6h A : d A ;` A ;L A 6@ A :  A 6H   A j 

 A: -

 
 
/  ;   
Aj 
Aj-  :   A : A  
: @   A j A(jჀ 
 Aj Ajރ A ! (
! ("



    A   
 (! (!@@@ 	
  !

@  	M
   	j",  AJ


  	G
  	j!
 A;d A 6\ A: X A.6T A 6L  6D A.6@   	k"6`  6P  6H@@ E
  Aj A jރ  ("E
 (
!@@ E
 @@ ,  "AJ
  - A?q! Aq!@ A`O
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!

 Aj! Aq!
  j!@@@  Aq 
@  F
 @@@ ,  "AJ
  - A?q! Aq!@ A`O
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!

 Aj! Aq!
  Aq"AK
A tAqE
  G
 

@ Aj"-  ""AJ
 @@ A~j"-  ""AL
  Aq!

@@ A}j"-  ""AL
  Aq!

 A|j"-  AqAt A?qr!
 At A?qr!
 At A?qr"A F

@@  AqA
F
   AqA	F
  AqAG


  F
@@ Aj"-  ""AJ
 @@ A~j"-  ""AL
  Aq! !

@@ A}j"-  ""AL
  Aq! !

 A|j"-  AqAt A?qr!
 At A?qr!
 At A?qr!

 !
 A G
 


@@  G
 A !

A !A !@@@@ ,  "AJ
  - A?q! Aq!@ A`O
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!

-- Chunk 136 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20251-20400

 Aj! Aq!
  Aq"AK
@A tA	q
 @ AF
  AG
A!

A!
  G
 

  q!
@ Aj"-  ""AJ
 @@ A~j"-  ""AL
  Aq!

@@ A}j"-  ""AL
  Aq!

 A|j"-  AqAt A?qr!
 At A?qr!
 At A?qr"A F

@@  AqA
F
   Aq"AK
A tAqE
 AqE


  F
@@ Aj"-  ""AJ
 @@ A~j"-  ""AL
  Aq! !

@@ A}j"-  ""AL
  Aq! !

 A|j"-  AqAt A?qr!
 At A?qr!
 At A?qr!

 !
 A G
 

 A: *

  A jރ  (! ( "
 


@ Aj A jރ  (
 

   )(7    Aj A(jAj( 6  @ ("E
  ( AtA 
 Aj$ 
   	 A؉   
~# A k"$ @@@  ⃀ 
  A,j A
j-  :    ( 6( A
j   A(j  ダ @ ("
 A!

A !@ A H
 A - ΀ A! A "

    
@ (  ("k O
    񃀀  (!
 ( j     B 7     j6  AjA 6  

 ) !  6  6  A(jAj" Aj"( 6  A 6   7( A
j!@ (
"E
  ( A 
  )(7  Aj ( 6  (! (! A;L  6H A 6D A: @ A.6<  68 A 64  60  6, A.6( Aj A(jރ @ ("E
  (!A!@@ Aq
 @ (" ( G
  󃀀 
 ( jA.:    Aj6
@@@@@ AI
  (  Axq
@A AjA|q" k  F" A|j"O
 @  j( Axq
 Aj" I
 

  j(  Axq


 E
  Aj"j,  A H
  E
  A~j"j,  A H
  E
  A}j"j,  A H
  E

 ("!@ (  kAK
   A񃀀  (!
  Aj6 ( jAܵ6     j ݃ E
 A: 
 (" I
 E
  M
 ( j,  AJ
A A0A Ȇ  
@ (  ("k O
    񃀀  (!
 ( j     j!
  6
 Aj A(jރ A ! (
! ("
 

   ) 
7    Aj A
jAj(  6  
 A j$ 
# A k"$  A
j    䃀 @ - E
  (!A !@@ ("E
 @  jAj-  A.G
  Aj"E

 A;L  "6H A 6D A: @ A.6<  68 A 64  60  6, A.6(@@ Aj A(jރ  ("E
 (
 

 E

 A: &
@ AK
  A;L  6H A 6D A: @ A.6<  68 A 64  60  6, A.6(@@ Aj A(jރ  ("E
 (
A I
 

 E

 A: %
@@ - 
 - 
r - 
r - r -  r - !r - "r - #r - $r - %r - &r - 'r
   A:  


-- Chunk 137 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20401-20550
   ) 
7    Aj A
jAj(  6  
 A j$ 
# A k"$ @@@ 
 A!

A ! A H
A - ΀ A! A "E

A ! A 6  6
  6 A0j Aj-  :   B7$ B 7
 B7  (  6, A4j Aj   Aj僀 @@ - 4AG
    )7  A
j Aj( 6 

 (
! (!   ) 47   A	j A<j(  6  A! E
   A 
   :  @ ("E
  ( A 
@ ( "E
  ($ A 
 A j$ 
    
# Ak"$ @@@@ / "
 A!

A - ΀  At"A "E
 AO
 (! A 6 - ! A :   6  :   AF
  (! A 6 - 
! A : 
 A
j 6   :  AF
  (! A 6 - ! A :  Aj 6   :  AF
  ( ! A 6  - 
! A : 
 A
j 6   : 
 A ;   6
  6  At6@ 
  Aj򃀀  (!
  Atj" 6  :    Aj Aj6   A 6   )7
 Aj$ 
 AAĀ Ɔ  
A   
# Ak"$ @@@@ / "
 A!

A - ΀  At"A "E
 AO
  (6  A 6 AF
   (6 A 6 AF
   (
6 A 6
 AF
   (6
 A 6
 A ;   6
  6  At6@ 
  Aj􃀀  (!
  Atj 6   Aj Aj6   A 6   )7 Aj$ 
 AAĀ Ɔ  
A   
B# Ak"$  A
jA :   A 6   Aj  惀  Aj$ 
# A0k"$ @@@@  "Aq
   (D!@@  (A F
   / "AO
  Aj!

  (!  (!
  I
  A/j6  Atj  k Aj׃ @@@  (A F
   / "AK
   Aj;    Atj"Aj 6  AjA :  

@  ("  (
G
   A
j򃀀 
  ( Atj" 6 A :     Aj6

 Aj  A  烀 @  (A G
   (
"E
   ( AtA 
   )7   A j AjA j( 6   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 
    (  /   (A F6D

@@  (A F
   / "AK
   Aj;    Atj" Aj 6   Aj :  

@  ("  (
G
   A
j򃀀 
  ( Atj" 6  :     Aj6

 Aj    烀 @  (A G
   (
"E
   ( AtA 
   )7   A j AjA j( 6   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 
 A0j$ 
 AAĀ Ɔ  
  AĀ Ć  
# A k"$ @ (" ("I
 @  (   ("k  k"O
     񃀀 
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   ) 7 @ ܃ "A F
 @@@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvAr: 
  AvA?qAr: 
  A
vA?qAr: 
A!A!

@  ("  ( G
   󃀀 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     񃀀   (!
  ( j A
j      j6
 ܃ "A G
 

 A j$ 
A   

# Ak"$  Aj A   A<j! A j! A8j! A,j! A(j!@ (!@@@@@@@@@  
 (
!@@@@@ ((A F
  /$"AK


-- Chunk 138 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20551-20700
  O
 !

  (4O
 (0!
  Atj( ! A6  Aj6


 E
 A ;$

 A 64
 A 6
@@@@@@@@@@@@@@@@ (|"
 @ - pAF
   "A G
 A: p
@@ (@A G
  (L"E
	 (H!	

 /8"E
 AO
 !	
  (|"I
  Aj6 	 Atj  k Aj׃   (L /8 (@"	A F"6|

 (@!	
 (x!@@ 	A F"

 @ /8"
AO
  !


 
AAĀ Ɔ  
 (L!
 (H!

  
O
 
 Atj(!
 Aj" F
  6x


 - E
	 AI
@ A}j"A I
  Aj  @ ("E
  (!


 Aj   ("E

 (
!
	
  Aq"An"	A"rꃀ    	AlkAqA
nA"jꃀ  A
p"E

 A#j!


  
AĀ ņ  
 (L /8 
" I
  k!
  F
A !A!@@  (|j"	 O
 AĀ   
@@@@ (@A F
  /8"
AI
 
AAĀ Ɔ  
 	 (L"
O
 (H!


 !
 	 
I

 	 
AĀ ņ  
@  
O
  
 	Atj"	-  !
 
 j"
 	(6  
A|j 
:   Aj! 
 Aj"F



  
AĀ ņ  
 AAĀ Ɔ  
  AĀ Ć  
 B7A! ( "A F
 A 6 


 (@!	
@@ 	A F
  
 /8O
  
;8

 (L 
I
   
6L B 7x

 B 7x

AĀ   
 E
 At!@  ( ꃀ  Aj! A|j"
 


 AI
 @ A}j"A I
     ( "E
 ("E
 At!@  ( ꃀ  Aj! A|j"
 


  Aq"An"	A"rꃀ    	AlkAqA
nA"jꃀ  A
p"E
  A#jꃀ 

  ꃀ 

 
 !@ ( "A G
 @ AqE

-- Chunk 139 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20701-20850
  
!

  
6 

@@@@@@@@@@@@@ - E
  -  Aq"	O
  
 "A F
  6 


@  
 "	A F
   	6 


 AqE

@@ ((A F
  /$"AK
  Atj 
6   Aj;$


@ (4" (,G
  􃀀 
 (0 Atj 
6   Aj64


A - ΀  At"
A "	E
 AG
 At!
 	 )(7  	 )07 	 Atj 
6  B 7( B 70 A ;$@A E
  (,"E
  (0 AtA 
 A64  	60  
6,
	
@@ ((A F
  /$"AK
  Atj 
6   Aj;$


@ (4" (,G
  􃀀 
 (0 Atj 
6   Aj64


A - ΀  At"
A "	E
 AG
 At!
 	 )(7  	 )07 	 Atj 
6  B 7( B 70 A ;$@A E
  (,"E
  (0 AtA 
 A64  	60  
6,

 	E
@@ ((A F
  /$"AK
  Atj 
6   Aj;$


@ (4" (,G
  􃀀 
 (0 Atj 
6   Aj64
	
A - ΀  At"
A "	E
 AG
 At!
 	 )(7  	 )07 	 Atj 
6  B 7( B 70 A ;$@A E
  (,"E
  (0 AtA 
 A64  	60  
6,

 AAĀ Ɔ  
A 
  
 AAĀ Ɔ  
A 
  
 AAĀ Ɔ  
A 
  
 A :   
6  B7

 A 6(
  :  A: 



  
6 

 (
!@@@@@@ (("
A F
  /$"AI
 AAĀ Ɔ  
  (4O
 (0!	

 !	  O

 	 Atj( !  Aj6
 A6

 A 64

 E
  A ;$
 ( ! A 6  A F

@ AI
  A 6 AI
@ AO
   A
vAr:   AvA?qAr: A!A!	

  AvAr:   AvA?qAr:   A
vA?qAr: A!A!	

@  ("  ( G
   󃀀 
  ( j :     Aj6

@ (@A G
  (D"E
  (H AtA  ((!

@ 
A G
  (,"E
  (0 AtA 
 Aj$ 

-- Chunk 140 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:20851-21000
  AvAr: A!A!	
 Aj 	r A?qAr:  @  (   ("k O
     񃀀   (!
  ( j Aj      j6


 AAĀ Ɔ  

# A0k"$   A$j!  A j!  Aj!  Aj!  A
j!  ( !@@@@@@  
  (!@@@@  (A F
  / "AK
  I
 E
 A ; 

   (
O
  (!
  Atj( !   Aj6  A6 

  A 6

  A 6 
@@@@@@  (P"
 @  (D"E
    (HF
    Aj6D -  "AJ
   Aj6D - A?q!	 Aq!
@ AK
  
At 	r!

   Aj6D 	At - A?qr!	@ AO
  	 
A
tr!

   Aj6D 	At - A?qr 
AtA qr"A G

@  ((A G
   (4"E
  (0!

 / "E
@ AO
  !

 AAĀ Ɔ  
  ((!	

  B7 A!  ("A F
  A 6

  A/j6   Aj׃     (4  /   (("	A F"6P
  (L!@@ 	A F"

 @ / "
AO
  !


 
AAĀ Ɔ  
  (4!
  (0!

@@@  
O
  
 Atj(!
 Aj" F
   6L

  
AĀ ņ  
@  (4  /  
" I
   k!
@  F
 A !A!@@@   (Pj"	 O
 AĀ   
@@@@  ((A F
  / "
AI
 
AAĀ Ɔ  
 	  (4"
O
  (0!


 !
 	 
I

 	 
AĀ ņ  
@  
O
  
 	Atj"	-  !
 
 j"
 	(6  
A|j 
:   Aj! 
 Aj"F



  
AĀ ņ  
  ((!	
@@ 	A F
  
 / O
  
; 

  (4 
I
    
64  B 7L

  B 7L

AĀ   
 
 !@  ("A G
 @ AqE
  
!

   
6

@@@@@  - XE
   - Y Aq"	O
  
 "A F
   6

@  
 "	A F
    	6

 AqE
@@ ( A F

-- Chunk 141 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21001-21150
  / "AK
  Aj;   Atj 
6 

@  (
"  (G
  􃀀 
  ( Atj 
6    Aj6


 Aj  
胀 @ ( A G
  ( "E
   ( AtA 
  )7  Aj AjAj( 6  Aj AjAj) 7 

@@ ( A F
  / "AK
  Aj;   Atj 
6 

@  (
"  (G
  􃀀 
  ( Atj 
6    Aj6


 Aj  
胀 @ ( A G
  ( "E
   ( AtA 
  )7  Aj AjAj( 6  Aj AjAj) 7 

@ 	E
 @@ ( A F
  / "AK
  Aj;   Atj 
6 

@  (
"  (G
  􃀀 
  ( Atj 
6    Aj6


 Aj  
胀 @ ( A G
  ( "E
   ( AtA 
  )7  Aj AjAj( 6  Aj AjAj) 7 

  A : X   
6  B7 

   : Y  A: X

   
6

@@@  - T
  AI
@ A}j"A I
     ( "E
 ("E
 At!@  (   Aj! A|j"
 


  Aq"An"	A"r    	AlkAqA
nA"j  A
p"E
  A#j 

 AI
 @ A}j"A I
  Aj  @ ("E
  (!

 Aj   ("E
 (
!

  Aq"An"	A"r    	AlkAqA
nA"j  A
p"E
 A#j!
   

 E
  At!@  (   Aj! A|j"
 




  (!@@@@@  (A F
  / "AI
 AAĀ Ɔ  
@   (
O
   (!

  A 6


  O

  Atj( !   Aj6  A6 

 E
  A ; 
  (!  A 6
 A0j$  
 AAĀ Ɔ  
# A0k"$ @@@@  "Aq
   (0!@@  (A F
   / "AO
  Aj!

  (!  (!
  I
  A/j6  Atj  k Aj׃ @@@  (A F
   / "AK
   Aj;    Atj"Aj 6  AjA :  

@  ("  (
G
   A
j򃀀 
  ( Atj" 6 A :     Aj6

 A F
  Aj  A  烀 @  (A G
   (
"E
   ( AtA 
   )7   A j AjA j( 6   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 
    (  /   (A F60

@@  (A F
   / "AK
   Aj;    Atj" Aj 6   Aj :  

@  ("  (
G
   A
j򃀀 

-- Chunk 142 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21151-21300
  ( Atj" 6  :     Aj6

 A F
  Aj    烀 @  (A G
   (
"E
   ( AtA 
   )7   A j AjA j( 6   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 
 A0j$ 
 AAĀ Ɔ  
  AĀ Ć  
# A k"$  Aj A  @@@   F
@@  ,  "AL
   Aj!  Aq!

  - A?q! Aq!@ A_K
  At r!  Aj! 

 At  - A?qr!@ ApO
   A
tr!  Aj! 

 At  - A?qr AtA qr"A F
  Aj! 
A ! Aj타 "A F
  F
 


 Aj타 A F!
@ (,A G
  (0" E
  (4  AtA 
@ (A G
  (" E
  (
  AtA 
 A j$  
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"At! AIAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
_  Ayl  Al"sB~B AtAĀ j/   jAyl sB~B AtAĀ j( "A  Av  F
~@@ Ayl Al"sB~B AtAŀ j/  jAyl sB~B AtAŀ j) " F
 A !

@@ B Aq"AK
 A k" B0"O
  Aǀ Ɔ  
 AAǀ Ć  
 AtAƀ j!
   6   6 
~@@ Ayl Al"sB
~B AtAǀ j/  jAyl sB
~B AtAȀ j) " F
 A !

@@ B Aq"A,K
 A, k" B0"O
  Aˀ Ɔ  
 A,Aˀ Ć  
 AtAʀ j!
   6   6 
U  Ayl  Al"sB~B AtAˀ j/   jAyl sB~B AtAˀ j(   F
@@@  A^jAI
   A}j"AqA
p! A K
 A\jAK
 
   jA\j
 A]jAI

@@   rAI
 A !@@@@@@@@@@@@@  AƦJ
 @  A{j
 
  A{j
@  AJ
   AǦF
  AG
 A{j


-- Chunk 143 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21301-21450


  A{j
AA  AF
AA  AF
AA  AF
AA  AF
AA  AF
A˦A̦A  AצF AF
AA  AF
AA  AF
  AG
AA  AF
A
A
A
  At r"   Ayl  Al"sB~B AtAŀ j/ jAyl sB~B At"Aȟŀ j( A  Ağŀ j(   F!
 
  Al A
ljA~j
A !A
!A
!@@ Av j"A
l"À j( !@ À j( "  I
    M

     O"    K"  Aj "k!  K
 
A	
 A
lÀ j-  
A!A !A!@ E
  A H
 @@ (E
 @ ("
 A - ΀  A !

 (  A  !

A - ΀  A !
@@ E
    6A !

A!  A6
A! !
   j 6    6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 

# A k"$ @@ ("
 A !

 ( "Aj! ,  "Aq!@@ A H
  (" AvA
qj(  vAq
  Aj!	A !@@ 	 "G
  B7 

@  j"
,  "
A H
  Aj!  
Aq"
AvA
qj(  
vAqE


  O
  
6   As j6 Aj!

  6   Aj6A! AlA۾̀ j!

 A 6 A6
 À 6 B7 AjÀ Æ  
   6   6  A j$ 

# A k"$   (!  (!  ( !@@ "E
 Aj! ,  "Aq! @@@ A H
    AvA
qj(   vAq
  !	 Aj!
A !A !@@ 
 " G
 A! !

@   j",  "
A H
   Aj!  
Aq"
AvA
qj(  
vAqE


   O
  Aj!  As j!

 Aj!A!  AlA۾̀ j!	 !

 A 6 A6
 À 6 B7 AjÀ Æ  
  	 􆀀 E
 

 A j$  A G

# Ak"$  !@@@@@@@@@ " F
 Aj"! -  A%G
  !  F
 @ - "APj"A
I
  !A A r"Aj"  AjI"AK

 ! Aj" F
 @ -  "	APj"A
I
  !A 	A r"Aj"  AjI"AK


 Aj" I
  k  k"
j"AI
 A}j" 
K
@@ 
 A!	

-- Chunk 144 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21451-21600

A !
 A H
A - ΀ A!
 A "	E

 	   !	  6
  	6  6 Aj  ("	 j At r:    A~j"6
@  F
 @ Aj!@ -  "A%G
 A%!@  G
  !

@ - "
APj"A
I
 A 
A r"Aj"
 
 AjI"AK

 Aj F
 @ - "
APj"
A
I
 A 
A r"
Aj"
 
 
AjI"
AK

 Aj! At 
r!
@  (G
   k"Aj" I
	 Aj  AnAj  (!	
 	 j :    Aj"6
 !  G
 

 ("AxF
   )7   6 

  k!

   
6   6  Ax6 
 Aj$ 
À   
  
À Ɔ  
 
   
À   
À   
# A k"$  Aj    (! (
!@@ ("AxG
      

 Aj   @ (AxG
    6   6   6 

   )7   Aj AjAj( 6  E
   A 
 A j$ 
   (   (  
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$ @  ( "Aj"
 A A   
A! At"   K"A AK"At! A IAt!@@ 
 A !

  At6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
T@  ( " ("  ( G
    
   Aj6  ( Atj"  6
   6   6   6 
~# A k"$ A!@ À A#􆀀 
 @  ( "Aj( "E
  Aj( "  Atj!A怀 B " Aj!  Aj!@  ( !   (6
  6   )7 A6
 À 6 B7$  78  70  A0j6  ( ( Ajφ 
  Aj"  G
 

  ( (􆀀 !
 A j$  
~# A0k"$  A6
 À 6 B7 A瀀 B "  Aj7(    7   A j6 ( ( Ajφ !  A0j$   
  À A
􆀀 
 (!@@@ (" ( "F
 A - ΀ A
A "E
 A6  6  6 À !

@ 
 À !A !A!

À !@ AqE
  !

 Ar!À !
   6
   6   6   6 
AA
  
"   A 6
   6   6  À 6 
l@@ 
 A!

A !@ A H
 A - ΀ A! A "

    
    !   6   6   6 
 A 

-- Chunk 145 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21601-21750
 
k@ ( "AqE
      A~q   
  ("Aj6@ AL
    6
   6   6  À 6 
  
@@@@  I
   k" j" I
A - ΀ A
A "E
 A6  6  6    ( "  F"6 @ E
    6
   6   6  À 6 
  ("Aj6 AL
   6
   6   6  À 6  A
A 
À   
AA
  
À   
  
@@ ( "AqE
  A~q" K
@  k" j" I
     !   6   6   6 
À   
      
À   
# Ak"$ A! A  (" AF6@@@@ AG
  (! ( ! A
A     

@ E
 A ! A H
A - ΀ A! A "E

      ("Aj6 ! AG
  Aj( "AL
 (  A  A
A  !
   6   6   6  Aj$ 
    
À A+ AjÀ À ۆ  
# Ak"$ @@@@@@  ( " AqE
   A~q"  K
   k" j" I
 A H
   A 

    ("Aj6 AG
   Aj( "AL
  (  A   A
A 
 Aj$ 
À   
À   
À A+ AjÀ À ۆ  
À A+ AjÀ À ۆ  
h@ ( "AqE
         
  ("Aj6@ AL
    6
   6   6  À 6 
  
@@ ( "AqE
   K
@  k" j" I
     !   6   6   6 
À   
      
À   
# Ak"$ @@@@@@  ( " AqE
    K
   k" j" I
 A H
   A 

    ("Aj6 AG
   Aj( "AL
  (  A   A
A 
 Aj$ 
À   
À   
À A+ AjÀ À ۆ  
À A+ AjÀ À ۆ  
#A!@  ( " Aq
   (AF!
 
I ( " ("Aj6@ AJ
   
   6
   6   6  À 6 
    (    

   ( (AF
# Ak"$   ( "   ("Aj6@@ AG
   Aj( "AL
  (  A   A
A 
 Aj$ 
À A+ AjÀ À ۆ  
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
A!A !A!@ E
  A H
 @@@@@ (E
 @ ("
 @ 
 A!

A - ΀  A !

 (  A  !

@ 
 A!

A - ΀  A !
 E

   6A !

A!  A6
A! !
   j 6    6 
 À AÀ Ȇ  
}~# A0k"$   6   6  A6
 À 6 B7 A瀀 B " 7(   Aj7   A j6 AjÀ Æ  
# Ak"$   (!@@@@@@@@@@@@@@@@  (
"Aq
   j" I
@ (AF
 @@ (
"
 A !

 A	j" I

-- Chunk 146 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21751-21900
 A O
A t!
@@    K"
 A!

A ! A H
A - ΀ A! A "E

A ! A 6
  6  6  ( !@   ("O
  AjA    (! (
!
  j     ("Aj6   j6
@ AG
 @ ( "E
  ( A 
 AA 
   )7    (6   AtAr6


  ( "	 ("I
  	 k"j" I
 ( " O
@  I
   I
     	  6    ( 6

  j" I
  6 At"   K" I
	@  k  k"O
      ( ! (!
    j6 @  I
     k6

À   
  (" I
	  k" Av"j" I
@@  I
   O

  j" I

  j" I

  ( !  6
   k"6  6@  k O
  Aj    (
! (!
    j6   I
    k6@ (" I
     k6

À   
  ( " k   !   Aq6
   6 @  j" I
    6

À   
À AÀ ߆  
À   
À   
    
À   
À   
   6

À   
À   
À   
À   
À   
À   
À   
 Aj$ 
T@@  j" I
   j" O
À   
À   
   6   6     k6
I ( " ("Aj6@ AJ
   
   6
   6   6  À 6 
A!@@@ ( "(AF
 @ E
 A ! A H
A - ΀ A! A "E

      ("Aj6 ! AG
@ ( "E
  ( A 
 AA  !

 A 6 (! ( ! B7   ("Aj6@ AG
 @ ( "E
  ( A 
 AA 
    
   6   6   6 
    

   ( (AF
J  ( "   ("Aj6@ AG
 @  ( "E
   ( A 
  AA 

# A k"$  A 6 B7
 A: 8 A 6( A 64 À 60 A 6  A 6  A
j6,@  Ajᆀ 
  (
! (!  ("6   6
  6 Aj @ E
   A 
 A j$ 
À A7 A?jÀ À ۆ  
 @  ( "E
   ( A 

  À A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ӄ 
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     Ԅ   (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
     Ԅ   (!
  ( j       j6A 
 AÀ 򅀀 

-- Chunk 147 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:21901-22050
# A k"$  A 6 B7
 A: 8 A 6( A 64 À 60 A 6  A 6  A
j6,@  Ajᆀ 
  (
! (!  ("6   6
  6 Aj @ E
   A 
 A j$ 
À A7 A?jÀ À ۆ  
o# Ak"$ @@  ( " -  
  À A􆀀 ! 

   Aj6
 À A A
jÀ  ! 
 Aj$   
t# A0k"$   6
  6 A6 À 6 B7
 A B  Aj7(  A(j6   Aj  A0j$ 
t# A0k"$   6
  6 A6 À 6 B7
 A B  Aj7(  A(j6   Aj  A0j$ 
# A k"$   6
  6@@ 
  A6 À 6 B7
 A B  Aj7(  A(j6   Aj 

 A6 À 6 B7
  6<  68 A B  A8j70 A B  Aj7(  A(j6   Aj 
 A j$ 
y# A0k"$  A6
 À 6 B7   6, A B  A,j7   A j6 ( ( Ajφ ! A0j$  
j~# A k"$ @  ) " |" Z
  A 6 A6
 À 6 B7 AjÀ Æ  
 A j$  
# Ak"$   (!  (!  Aj  @ E
 @   6
 Aj A
jÀ 醀   Aj!  Aj"
 

 Ajꆀ !  Aj$   
@  ("E
   (!A !@@  A
lj"("E
  (A$j! @@  A|j( "AxF
  E
   (  A 
@  Alj( "AF
   Apj!@ 
  ( "E
  Atj(  A 

 ( "E
   Atj(  AtA 
  A,j!  Aj"
 

@ ( " E
  (  A,lA 
 Aj" G
 


# A k"$ @@@@@@@  (   
   Aj6 A
j  (  (  A B  A
j7 A B  Aj7 A6, À 6( B74  Aj60 ( ( A(jφ !  (
"AxF
 E
 (  A 

   Aj6 A
j  (  (  A B  A
j7 A B  Aj7 A6, À 6( B74  Aj60 ( ( A(jφ !  (
"AxF
 E
 (  A 

   Aj6
 A6, À 6( B74 A B  A
j7  Aj60 ( ( A(jφ ! 

   Aj6
 A6, À 6( B74 A B  A
j7  Aj60 ( ( A(jφ ! 

 (À A ((
  ! 

   Aj6
 A6, À 6( B74 A B  A
j7  Aj60 ( ( A(jφ ! 
 A j$   
 @@@@@@@ Ayj
 
@ À A E
  À A 
  Ax6   A: 
  Ax6   A: 
 À A
 
  Ax6   A: 
 À A 
  Ax6   A: 
 À A E


 À A 
   Ax6   A: 
    À A 
  Ax6   A : 
# Ak"$  Aj   - !@@@@@@@@ ("AxG
  (
! 
   / 	; 	  A
j A
j-  :     (
6
   :    6  A6 

   À A 

   À A 

   À A 

   À A 

   AA  

   À A 
 Aj$ 
| @@@@@@@ A{j 
 À A E

  Aj!

  Aj! À A E

 A:  

 A:  

  A : 
  Ax6 
} @@@@@@@ A{j 
 À A E


-- Chunk 148 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22051-22200
  Aj!

  Aj! )  B̓۹ Q

 A:  

 A:  

  A : 
  Ax6 
	@@@@@@@@@@@@@@  -  
	


 
  (!@  (" ( "E
     
  ("E

    ( 
@  - 
A
I
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E

    ( 
@  (
AG
   (!@  ("( "E
     
 ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
	    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (
" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
@  (
"E
   ( A 
@  ("E
   (
 A 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
    ( 
  (!@  (" ( "E
     
  ("E
     ( 

# A k"$ @@@@  -  
 A6 À 6 B 7  A
j6
 AjÀ Æ  
     ( "E
  ( A
lA 

     ( "E
   ( A
lA 
 A j$ 
~# A k"$  AjÀ   Ą @@@@ ("AxG
   )7 A 6$ B7
 A: H A 68 A 6D À 6@ A 60 A 6(  A
j6< Aj A(j 
A - ΀  ) ! (
!AA "
AA  
   )7   6  A
:  

 A6    7   6
  À 6   6  A:  
 A j$ 
À A7 A jÀ À ۆ  
   À  ( (ń 
~# A k"$   6
  6 A jÀ   Ą @@@@ (P"AxG
   )T7` A 6@ B78 A: 0 A 6  A 6, À 6( A 6 A 6  A8j6$ A j Aj 
A - ΀  )<! (8!AA "
AA  
 (T!  A
j (X"6   A 6   6  6   )7  6


 A6   7   6
 À 6  6 A:  A6< À 68 B7D A B  Aj7P  A j6@  Aj A8j   A6  Aj 


-- Chunk 149 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22201-22350
À A7 A jÀ À ۆ  
 A j$ 
# A k"$  Aj 􄀀  - !@@@@ ("AxG
  Aj   ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!   /
; 	A!  A
j A
jAj-  :     6
   :    6

@ AqE
  Aj   (
! (! (!A!@@@ (
  Aj  @ - 
 Ax! E


@ - 	AqA F
 Ax! 


  A!
 !

  A 
   6
   6   6

 Aj   (
! (! (!A!@@@ (
    @ -  
 Ax! E


@ - AqA F
 Ax! 


  A !
 !

  A 
   6
   6   6
   6  A j$ 
f# Ak"$    ( " Aj6
 À A	À A
  À À A	 A
jÀ  !  Aj$   
=@ (
"Aq
 @ A q
    ̆ 
    
   ↀ 
 @  ( "E
   ( A 

 @  ( "E
   ( A 

a# Ak"$    A
j6
 À A
À A  À À A A
jÀ  !  Aj$   
~# A k"$  Aj    (!@@@@ (
"
 A!

A ! A H
A! A "E

 Aj       
 @ (AF
  A
j( !   6   6       I6

@ 1 "	BQ
  Aj1  !
 A
j3  !
   5 "
B 	>  Ax6    
 
B0 
B B> E
  A 

 A6$ À 6  B7, A B À 78  A8j6( A jÀ Æ  
    
 A j$ 
# A k"$    -  " @@@@@ ( E
 @@ ("
 A!

A ! A H
A! A "E

      !@@ 
 A !

  I
   j  k !
  j I
 A
j  ֆ  (
E
  )7  6
  B  7À A
 A
jÀ À ۆ  
À A-À ߆  
    
  À Ć  
À A*À ߆  
   6   B  7  A j$ 

    솀 

     
# A0k"$  Aj   - !@@@@ ("AxG
  Aj   ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!   /
; 	  A
j Aj-  :     6
   :    6  A6 

@@ AqE
  Aj   (AF
   )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

 Aj  @ (AF
    )7  A
j Aj) 7   A6 

   )7  A
j AjA
j( 6   A6 


-- Chunk 150 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22351-22500
   )7  A6   A
j AjA
j( 6 
 A0j$ 
   (  ʄ 
# A0k"$ @@@@@  (   
 À A􆀀 ! 

 À A􆀀 ! 

 À A6􆀀 ! 

 A6
 À 6 B7   Aj6, A B  A,j7   A j6 ( ( Ajφ ! 
 A0j$   
 @  ( "E
   ( A 

 @  ( AI
   Aj 

# A k"$ @@ E
 @ Aj  ΄ @ ("E
  AxF
 (
 A 
@ ("E
  ( A 
 Aj"
 

A !
 A j$  
# A k"$ @ (  "E
   (6  ( 6  (6
 A(j A
j  AjAj A(jAj( 6   )(7 (4! (8! (<! A(j Aj  (<! (8! (4!@ (("	E
  (, 	A 
@@ 
   Ax6 @ E
   A 
 E
  A 

   6   6   6
   6   6   6 
 A
A  A j$ 
 A 68 A6, À 6( B70 A(jÀ Æ  
@@ E
   ( !@  - E
 A !@  " E
  (!  ( !  A
A @ E
  AxF
  A 
  Aj"G
 


A !@  " E
  (!  ( !  A
A @ E
  AxF
  A 
  Aj"G
 

A 
  k
	   B 7 
  À A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ӄ 
   Aj6  ( j :  

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     Ԅ   (!
  ( j A
j      j6
 Aj$ A 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Ajք @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Ajք @ (E
  (
 (  
 (
!   6    6 A j$ 
K@  (   ("k O
     Ԅ   (!
  ( j       j6A 
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
   (  (  

-- Chunk 151 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22501-22650
   (  (  
CA - ΀ @AA "
 AA  
 A6   À 6   6 
   (    ((
  
 
@@@@  
 A!

A !  A H
A - ΀ A!  A "E

A - ΀ A
A "E
 A 6   6  6  
     
AA
  
# A k"$ @@  E
   ( "E
@  ("E
   A 
  A
A  A j$ 
 A 6 A6
 À 6 B7 AjÀ Æ  
 A 6 A6
 À 6 B7 AjÀ Æ  
# Ak"$   6
  6  6@@ Aj "
 Ax!

   (6   ( 6 (! A
A 
   6  Aj$ 
# A0k"$ @ 
  A 6
 A6 À 6
 B7 A
jÀ Æ  
  6,  6(  6$  6  6  6
 A$j A
j  A0j$ 
@# Ak"$   6
  6  6 Aj  Aj$ 
# A k"$ A !A !	@ E
   6
  6  6A!	
  	6 @ E
   6
  6  6A!
  6 AjA   AjAjA   Aq !A - ΀ @AA "
 AA  
  6   À 6   6  A j$ 
# A k"$ A !A !	@ E
   6
  6  6A!	
  	6 @ E
   6
  6  6A!
  6 AjA   AjAjA   Aq !A - ΀ @AA "
 AA  
 A :   6   À 6   6  A j$ 
# A k"$ A !A !	@ E
   6
  6  6A!	
  	6 @ E
   6
  6  6A!
  6 AjA   AjAjA   Aq !A - ΀ @AA "
 AA  
 A:   6   À 6   6  A j$ 
# A k"$  ( !@@ E
 @  "E
 ( "E
@ ("E
   A 
 A
A  Aj"
 

@@ - 
   !

  !
@@ 
 Ax!

   (6   ( 6 (! A
A 
   6  A j$ 
 A 6 A6
 À 6 B7 AjÀ Æ  
o ( !@@ - 
   !

  !
@ 
   Ax6 
   (6   ( 6 (! A
A    6 
# A k"$ @@ E
  ( !@  "E
 ( "E
@ ("E
   A 
 A
A  Aj"
 

   ΄  A j$ 
 A 6 A6
 À 6 B7 AjÀ Æ  
# A k"$ @@@@@@@@@ AK
   6  6  6
 A
j "
 
A!

A - ΀ A A "E
A - ΀  AjA ) ̀ 7   AjA ) ̀ 7   AjA ) ̀ 7   A ) ̀ 7  AA "E
  A 6   6  A 6
  À 6   6  A:   A6 

A - ΀  A "E

    !   6
   6   6  A
:  

 (! ( !  (6   6
  6 A
A  A64 À 60 B7< A B  Aj7H  A j68 A$j A0j A - ΀ AA "E
 A6    )$7
  À 6   6  A:    Aj A,j( 6  (" E
  (
  A 
 A j$ 
AA   
AA  
A   
AA  
# A k"$ @@@@@@@@ AK
   6  6  6 A - ΀ A A "E
 B 7  6
  A
j "
   (6

-- Chunk 152 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22651-22800
   (
6   (6  A
:  

A - ΀ A$A "E
A - ΀  A jA ( ̀ 6   AjA ) ̀ 7   AjA ) ̀ 7   AjA ) ̀ 7   A ) ̀ 7  AA "E
  A$6   6  A$6
  À 6   6  A:   A6 

 (! ( !  (6   6
  6 A
A  A6< À 68 B7D A B  Aj70  A0j6@ A$j A8j A - ΀ AA "E
 A6    )$7
  À 6   6  A:    Aj A,j( 6 @ (" E
  (
  A 
 (
" E
 ("E
    A 
 A j$ 
AA   
AA$  
AA  
AA  
 A 6H A6< À 68 B7@ A8jÀ Æ  
# A k"$   ("6  6  (6 A - ΀ @@@A A "E
  B 7  6
@@  A
j "
    (6
   (
6   (6  A
:  

 (! ( !  (6   6
  6 A
A  A6< À 68 B7D A B  Aj70  A0j6@ A$j A8j A - ΀ AA "E
 A6    )$7
  À 6   6  A:    Aj A,j( 6 @ (" E
  (
  A 
 (
" E
 ("E
    A 
 A j$ 
AA   
AA  
 A 6H A6< À 68 B7@ A8jÀ Æ  
# A k"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j "
     
A - ΀ AA "E
  À 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, À 6( B70 A(jÀ Æ  
A!

A!

A!
   :   A j$ 
AA  
~# A0k"$   6  6  6   6  6  6
@@@@@@@@@  A
j Aq "B "   
A - ΀ AA "E
  À 6
   6   6  A6  A6 

 "E
   (6
   ( 6   (6 A
A   A6 

 A 6( A6
 À 6 B7  AjÀ Æ  
  A 6 

  A6 

  A6 
 A0j$ 
AA  
 A 6( A6
 À 6 B7  AjÀ Æ  
# A k"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j "
     
A - ΀ AA "E
  À 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, À 6( B70 A(jÀ Æ  
 A 68 A6, À 6( B70 A(jÀ Æ  
A!

A!
   :   A j$ 
AA  
# A k"$       (6  ( 6  (6
 Aj     ( 6,  (6(  (
6$ A0j     (86D  (06@  (46<A!@@@@@@@@@@@@ A
j A$j A<j "
     
A - ΀ AA "E
  À 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 6X A6L À 6H B7P A jÀ Æ  
 A 6X A6L À 6H B7P A jÀ Æ  
A!

A!
   :   (<"E
@ (@" E
    A 
 ($"E
@ ((" E
    A 
 (
"E
@ (" E

-- Chunk 153 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22801-22950
    A 
 A j$ 
AA  
 A 6X A6L À 6H B7P A jÀ Æ  
 A 6X A6L À 6H B7P A jÀ Æ  
 A 6X A6L À 6H B7P A jÀ Æ  
@# Ak"$   6
  6  6 Aj  Aj$ 
# Ak"$   6  6  6
@@ A
j "E
  (! (! ( ! A
A  A j   @@@@ (@AF
  A8j A jAj) 7  AjAj A jAj) 7  AjAj A j) 7   )@7 

 A jAj A jA
j( 6   )D7x AjÀ A A j  - A
G

   ) 7   Aj A8j) 7   Aj AjAj) 7   Aj AjAj) 7  E
  A 

 A jA j AjA j) 7  A jAj AjAj) 7  A jAj AjAj) 7  A jAj AjAj) 7   )7@ A 6t B7l A:  A 6 A 6 À 6 A 6 A 6x  A j6 A j A j 
   )l7  A
j A j( 6    6   6   6  A6 @@@@@@@@@@@@@ - @
	


 
 (T!@ (X" ( "E
     
  ("E

    ( 


@ - LA
I
  (T!@ (X" ( "E
     
  ("E
     ( 
 (D!@ (H" ( "E
     
  ("E

    ( 


@ (LAG
  (T!@ (X" ( "E
     
  ("E
     ( 
 (D!@ (H" ( "E
     
  ("E
    ( 


@ (L" E
  (P  A 
 (D!@ (H" ( "E
     
  ("E
	    ( 
	
@ (L" E
  (P  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

 (X!@ (\" ( "E
     
  ("E
    ( 

@ (L" E
  (P  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

@ (L" E
  (P  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

@ (L" E
  (P  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

@ (L" E
  (P  A 
@ (X" E
  (\  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

@ (L" E
  (P  A 
@ (X" E
  (\  A 
 (D!@ (H" ( "E
     
  ("E
    ( 

 (D!@ (H" ( "E
     
  ("E
    ( 

 (D!@ (H" ( "E
     
  ("E
     ( 
 Aj$ 
 A 6P A6D À 6@ B7H A jÀ Æ  
À A7 AjÀ À ۆ  
# A k"$  A: 
 A 6  6  6  A j     񄀀  A8j" A jA
j( 6   )D70@@ (@"AF
  AjAj" A jAj) 7  AjA
j ( 6   )P7   )07  6 A j  @ (@AxG
    )7   Aj ) 7   Aj AjAj) 7   Aj AjAj) 7 

   )@7A!  A
j A jAj( 6   A6 @@@   
A! (" E
 (  A 

A!
 Aj j" ( "E
  ( A 

   )07  A6   A
j ( 6 
 A j$ 
# A0k"$  Aj  Ax!@@@@ - E

-- Chunk 154 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:22951-23100
 @@ - 	Aq"A"F
  A F
  B7 

 Aj  @@ ("AxG
 Ax!

   / ; 	  A
j Aj-  :   - !   (6
   : 
  A6    6

 - 
"E
  Aj": 
 Aq
Ax!
  A6    6

À   
   Aj Ȅ @ - 
Aj"Aq G
   : 
   )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

À   
 A0j$ 
# A k"$  Aj  Ax!@@@@ - 
 

 - !A!@@@@@ Aq"A,F
 @ A F
  Aq
Ax!

 A~q!

@ AqE
 Ax!

   Aj  @ - 
 Ax!

 - !
@ Aq"A"F
 Ax! A G
Ax!

 Aj  @ - 
 Ax!

@ - 	AqA"F
 Ax!

   A0j   (8! (4!@@ (0
  AxrAxF
  A 

 AxF
  (<! ! !

 A~qAr!A !
@ Aq
   Ax6 

 A0j  @@ (0AxG
  A j 󄀀 

 A jAj A0jAj( 6   )07 
@ ( "AxG
     - ! -  



 / % - 'Atr! ((! - $! !


 Av!
   ;    6   :    6   Aj Av:  
 A j$ 

~# A k"$  A j  @@ - @
   Ax6 

Ax!@@@@@@@@@@@@@@@ - AAq"Aj# 
 A^j
          
 Aj  Ax! - E
  - !@ Aq"A,F
 A F
 A F
   Aj   - 	! - 
 

   6 


 Aj  @ - 
   Ax6 


 - AqA"G
   A j   (L! (H! (D
@ AxG
   Ax6 


  Ax6  E

  A 


 A0j  @ - 0
   Ax6 


Ax!@ - 1AqA G
  - 
"E
  Aj": 
@ Aq
   Ax6 


  A!@@@ A(j  @ - (
 Ax!

@@@@ - )"Aq"A,F
  A F
 Aq!A ! 
Ax!

   A j  @ -  
 Ax!

 - !!
@ AqA G
 Ax!

 A j 󄀀  (D"AxG
 B~B!

 B~!
 BPE
 
 - 
Aj"Aq G

  : 
 A j  Ax! (DAxF

-- Chunk 155 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23101-23250
   )D7   Aj A jAj( 6 


 )H!
 - 
Aj"Aq G
   7   6   : 



   6 


 A8j  @ - 8
   Ax6 


 - 9AqA G
 - 
"E
  Aj": 
@ Aq
   Ax6 


   A j 򄀀  - 
Aj"Aq G
  : 
 (T"AxG
 A j  @ (DAxG
   Ax6 


   )D7   Aj A jAj( 6 
	
  Ax6 

  Ax6 

   (P6   6   6 

À   
  Ax6 

À   
À   
   )X7   6 

À   
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@ A~j 
 /  A / ̀ F


 À A 
  Ax6   A: 

@@ A~j 
 /  A / ̀ F


 À A 
  Ax6   A: 

  Ax6 

   6   6   6 

    À A 

  Ax6   A : 
 E
  A 

    À A 

  Ax6   A : 
 A j$ 
# A k"$  Aj  @@ - 
   Ax6 

@@@@@@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG
 @@ A~j 
 /  A / ̀ F


 À A 
  Ax6   A: 

@@ A~j 
 /  A / ̀ F


 À A 
  Ax6   A: 

  Ax6 

   6   6   6 

    À A 

  Ax6   A : 
 E
  A 

    À A 

  Ax6   A : 
 A j$ 
# A k"$    @@@@ -  
 Ax!

@ - AqA"F
 Ax!

   Aj   (
! (! (!@@ (
 @@ AxG
  Aj   

 Aj    E
   A 
 - ! (!

  6
  6
Ax! AxF
 !
   ( 	6   Aj AjAj(  6  

   6
   6    :  A j$ 
# A k"$  Aj  @@ - 
   B7 

@@ - 	AqA"G
    Aj   (
! (! (! (
@ AxG

-- Chunk 156 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23251-23400
      

      E
  A 

  B7 

   6
   6   6  A6 
 A j$ 
# A k"$  Aj  Ax!@@@@ - E
 @@ - 	Aq"A"F
  A F
  B7 

 Aj 􄀀 @@ ("AxG
 Ax!

   / ; 	  A
j Aj-  :   - !   (6
   : 
  A6    6

 - 
"E
  Aj": 
 Aq
Ax!
  A6    6

À   
   Aj  @ - 
Aj"Aq G
   : 
   )7   Aj AjAj) 7 

À   
 A j$ 
# A0k"$  Aj  Ax!@@@@ - E
 @@ - 	Aq"A"F
  A F
  B7 

 Aj  @@ ("AxG
 Ax!

   / ; 	  A
j Aj-  :   - !   (6
   : 
  A6    6

 - 
"E
  Aj": 
 Aq
Ax!
  A6    6

À   
   Aj  @ - 
Aj"Aq G
   : 
   )7   Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7 

À   
 A0j$ 
# A k"$  Aj  A!Ax!A!@@ - E
 Ax! - 	AqA"G
    Aj   (
! (! (!A!@@ (E
  !

A !@ AxF
  !

@@ 
 A!

A ! A H
A - ΀ A! A "E

     !
   6   6A
!
   6    j 6  A j$ 
    
# A k"$    @@@@ -  
 Ax!

@ - AqA"F
 Ax!

   Aj   (
! (! (!@@ (
 @@ AxG
  Aj   

 Aj    E
   A 
 - ! (!

  6
  6
 AxG
 Aj  @ (AxG
    6   :   Ax6 

   )7   Aj AjAj( 6 


   ( 	6   Aj AjAj(  6     :    6 
 A j$ 

~~# Ak"$  A j  @@@@@ - X
 Ax!

@ - YAqA F
 Ax!

@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A j  Ax!@@@ - P
 

 - Q!B !A !@@@@@@ Aq"	A,F
  	A F
 AqE
Ax!

@ Aq
 Ax!

   A j  @ - H
 Ax!

 - I!
@ Aq"A"F
 Ax! A G
Ax!

 A8j  @ - 8
 Ax!

@ - 9AqA"F
 Ax!

-- Chunk 157 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23401-23550

   Aj   (! (!	 (!@ (
 @ AxG
 A!@ AG
  	À A A G!
 
A~q r!


A!
@ AG
  	À A A G!

 
A~q 
r!
 E
 	 A 

@ AxG
  	!


 	Av!
 ! 	!


@ E
  - 
Aj"Aq G
	  : 
 Aj  @ ("AxF
  )!


 A j  @ - @
   Ax6

@ - AAqA F
   Ax6

     
7A!

 A jArÀ A 

@@@ 
Aq
  AG
 A jArÀ A 

 Aj  @@ (AxG
  Aj 󄀀 

 AjAj AjAj( 6   )7
 (AxF
 A j Aj( 6   )7d

 Aj  @@@ ("AxG
  A0j  @ - 0
 Ax!

Ax!@ - 1"AqASj   
@ AOjAqA	I
 Ax!

   A(j   APjB!
B!@ - (
  
!


@ - )APj"AqA	M
  
!


@   Aj 
B B
B   ) B R
 )" B|"
 T
 Aj  @ - 
  
!


 - APj"AqA
I
 
 
!


 )!

  
7h  6d

  B!B !

 Aj  A! - 	! - 
 


  
; i A j 
Av:    6l  
: h  6d
 - 
Aj"Aq G
  : 
 )h!
 (d!
   
7   6
A!
   6  Aj$ 
À   

~# Ak"$  A j  @@@@ - @
 Ax!

@ - AAqA F
 Ax!

@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A8j  @@@@@@@@ - 8
 Ax!Ax!Ax!

Ax!@ - 9Aq"A"F
 Ax!Ax! A G


 A0j  Ax!@ - 0
 Ax!Ax!

@ - 1AqA"F
 Ax!Ax!

   A j   (|! (x!	 (t!@@ (pE
   6  	6  6

@@ AxF

-- Chunk 158 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23551-23700
  Aj 	   E
 	 A 

 Aj 	  
 - !	 (!
@@ AxF
 Ax!Ax! !

 A j!@@@@@@@@@ 	Aq 
 Aj  @ (AxF
 Ax!

 A j  @ (pE
 Ax!

 (|!
 (x!
 (t!Ax!

 Aj  @ (AxF
 Ax!

 A j  @ (pE
 Ax!

 (|!
 (x!
 (t!Ax!

 A j  @@ (pAxF
  AjAj A jAj( 6   )p7

 Aj 󄀀 
Ax!@ (AxF
 Ax!
	
Ax!

 A(j  @ - (
 Ax!

 - )!@@@@@@@@@ Aq"A,F
 Ax! A G
 AxF
 AxG
 A jÀ A   (|6T  )t7L E
 
 A 

   A j  @ -  
 Ax!

@ - !Aq"A"F
  A G
Ax!

 Aj  @ - 
 Ax! - !	

@ - AqA"F
 Ax! - !	

   A j   (|! (x!	 (t!@@ (p
 @ AxG
  Aj 	   (!

 Aj 	  @ E
  	 A 
 (!

  6  	6  6
 - !	 AxF
 !


  
6` - 
Aj"Aq G
  : 
 )`! A j  @ (p"AxF
  )t!@ E
  
 A 
 E
 
 A 

 Aj  @ - 
   B7 @ E
  
 A 
 E
 
 A 

 - 	AqA F
  B7 @ E
  
 A 
 E
 
 A 

 	
     7   
6   6   
6
   
6   6  A6 

@ AxF
  A jArÀ A 

 Aj   (AxG
 A j   (p
 (|!
 (x!
 (t!

@ AxF
  A jArÀ A 


 Aj   (AxG
 A j   (p
 (|!
 (x!
 (t!

 A j  @@ (pAxG
  Aj 󄀀 

 AjAj A jAj( 6   )p7
 (AxG

 Aj   - ! - 
 
Ax!

  )7  Aj AjAj( 6 
  (|6T  )t7L

  )7  Aj AjAj( 6 
  (|6T  )t7LAx!

  Aj"(  6h  Aj(  6 k
 A j ( k6    	: P  6L  (h6 Q

 A j Aj( 6   )7L


-- Chunk 159 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23701-23850
 A jArÀ A Ax!
 AxF

 E
  
 A 
 AxrAxF
  
 A 
 - 
Aj"Aq G
  : 
 )P! (L!
   7   6  A6 
 Aj$ 
À   
# A k"$  A(j  @@@@@ - (
 Ax!

@ - )AqA F
 Ax!

@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A j  Ax!@@@ -  
 

 - !!A!@@@@@@ Aq"	A,F
 @ 	A F
  Aq
Ax!

 A~q!

@ AqE
 Ax!

   Aj  @ - 
 Ax!

 - !
@ Aq"A"F
 Ax! A G
Ax!

 Aj  @ - 
 Ax!

@ - AqA"F
 Ax!

   A j   (H! (D!@@ (@
  AxrAxF
  A 

 AxF
  (L!	 ! !

 A~qAr!A !
@ Aq
  - 
Aj"Aq G
	  : 
 A j   (@"AxF
 / E A j-  Atr! (H!	 - D!

 A j  @@ (@AxG
  A0j 󄀀 

 A0jAj A jAj( 6   )@70
@ (0"
AxG
  Aj   - 	! - 



 / 5 - 7Atr! (8!	 - 4! 
!

   @ -  
   Ax6

@ - AqA F
   Ax6

  A!


 Av!
 - 
Aj"Aq G
  : 

   ; 	   	6
   :    6  A
j Av:  
A!
   6  A j$ 
À   

~# Ak"$  A8j  @@@@ - 8
 Ax!

@ - 9AqA F
 Ax!

@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A0j  Ax!Ax!@@@@@@@ - 0
 

@ - 1Aq"A"F
  A F
Ax!

 A(j  @ - (
 Ax!

@ - )AqA"F
 Ax!

   A j   (l! (h!	 (d!@@@@@@@ (`
 @ AxF
 A!
@ AG
  	(  A ( ̀ G!

 E
 	 A 

A!
 AG
 	(  A ( ̀ G!


 AxG
 	!

@@ 
AqE

-- Chunk 160 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:23851-24000
  A j  @@ (`AxF
  A jAj A jAj( 6   )`7p

 A j 󄀀 
Ax!@ (pAxF
 




 A j   (pAxG
 A j   (`
 (l!
 (h!
 (d!
 A j   -  E
 - !! 
!	@@@@ Aq"A,F
 Ax! A G
 AxG



   Aj  @ - 
  
!	Ax!
	
@@ - Aq"A"F
  A F
 
!	Ax!


 Aj  @ - 
 Ax!


@ - AqA"F
 Ax!


   A j   (l! (h!
 (d!@ (`
 @ AxG
 A!@ AG
  
(  A ( ̀ G!
 	A~q r!


A!
@ AG
  
(  A ( ̀ G!

 	A~q 
r!
 E
 
 A 

@ AxG
  
!


 
!	 !

Ax!

 - 
Aj"Aq G
  : 
 A j  @ (`"AxF
  )d! E
 
 A 

   @ -  
   B7  E
 
 A 

@ - AqA F
   B7  E
 
 A 

     
6
   
6   6  A6 

@@@ 
Aq
  AxF
 A jArÀ A 


 A j  @@ (`AxG
  A j 󄀀 

 A jAj A jAj( 6   )`7p
 (pAxG


 A j   (pAxG
 A j   (`
 (l!
 (h!
 (d!
 Aj   - 	! 
!	 - 
 


Ax! !

 A j" )p7  Aj A jAj( 6 
  (l6L  )d7D

 
!	

 	Av!
  ; I A j Av:    6L  	: H  6D

 A jArÀ A 

 A j A j( 6   )p7D
 AxF

 E
  
 A 
 - 
Aj"Aq G
  : 
 )H! (D!
   7   6  A6 
 Aj$ 
À   

~# Ak"$  A8j  @@@@ - 8
 Ax!

@ - 9AqA F
 Ax!


-- Chunk 161 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24001-24150
@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A0j  Ax!Ax!@@@@@@@ - 0
 

@ - 1Aq"A"F
  A F
Ax!

 A(j  @ - (
 Ax!

@ - )AqA"F
 Ax!

   A j   (l! (h!	 (d!@@@@@@@ (`
 @ AxF
 A!
@ AG
  	(  A ( ̀ G!

 E
 	 A 

A!
 AG
 	(  A ( ̀ G!


 AxG
 	!

@@ 
AqE
  A j  @@ (`AxF
  A jAj A jAj( 6   )`7p

 A j 󄀀 
Ax!@ (pAxF
 




 A j   (pAxG
 A j   (`
 (l!
 (h!
 (d!
 A j   -  E
 - !! 
!	@@@@ Aq"A,F
 Ax! A G
 AxG



   Aj  @ - 
  
!	Ax!
	
@@ - Aq"A"F
  A F
 
!	Ax!


 Aj  @ - 
 Ax!


@ - AqA"F
 Ax!


   A j   (l! (h!
 (d!@ (`
 @ AxG
 A!@ AG
  
(  A ( ̀ G!
 	A~q r!


A!
@ AG
  
(  A ( ̀ G!

 	A~q 
r!
 E
 
 A 

@ AxG
  
!


 
!	 !

Ax!

 - 
Aj"Aq G
  : 
 A j  @ (`"AxF
  )d! E
 
 A 

   @ -  
   B7  E
 
 A 

@ - AqA F
   B7  E
 
 A 

     
6
   
6   6  A6 

@@@ 
Aq
  AxF
 A jArÀ A 


 A j  @@ (`AxG
  A j 󄀀 

 A jAj A jAj( 6   )`7p
 (pAxG


 A j   (pAxG
 A j   (`
 (l!
 (h!

-- Chunk 162 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24151-24300
 (d!
 Aj   - 	! 
!	 - 
 


Ax! !

 A j" )p7  Aj A jAj( 6 
  (l6L  )d7D

 
!	

 	Av!
  ; I A j Av:    6L  	: H  6D

 A jArÀ A 

 A j A j( 6   )p7D
 AxF

 E
  
 A 
 - 
Aj"Aq G
  : 
 )H! (D!
   7   6  A6 
 Aj$ 
À   

~# Ak"$  A j  @@@@ - @
 Ax!

@ - AAqA F
 Ax!

@@ - 
"E
   Aj": 
 Aq
Ax!

À   
   A8j  @@@@@@@@ - 8
 Ax!Ax!Ax!

Ax!@ - 9Aq"A"F
 Ax!Ax! A G


 A0j  Ax!@ - 0
 Ax!Ax!

@ - 1AqA"F
 Ax!Ax!

   A j   (|! (x!	 (t!@@ (pE
   6  	6  6

@@ AxF
  Aj 	   E
 	 A 

 Aj 	  
 - !	 (!
@@ AxF
 Ax!Ax! !

 A j!@@@@@@@@@ 	Aq 
 Aj  @ (AxF
 Ax!

 A j  @ (pE
 Ax!

 (|!
 (x!
 (t!Ax!

 Aj  @ (AxF
 Ax!

 A j  @ (pE
 Ax!

 (|!
 (x!
 (t!Ax!

 A j  @@ (pAxF
  AjAj A jAj( 6   )p7

 Aj 󄀀 
Ax!@ (AxF
 Ax!
	
Ax!

 A(j  @ - (
 Ax!

 - )!@@@@@@@@@ Aq"A,F
 Ax! A G
 AxF
 AxG
 A jÀ A   (|6T  )t7L E
 
 A 

   A j  @ -  
 Ax!

@ - !Aq"A"F
  A G
Ax!

 Aj  @ - 
 Ax! - !	

@ - AqA"F
 Ax! - !	

   A j   (|! (x!	 (t!@@ (p
 @ AxG
  Aj 	   (!

 Aj 	  @ E
  	 A 
 (!

  6  	6  6
 - !	 AxF
 !


  
6` - 
Aj"Aq G
  : 
 )`! A j  @ (p"AxF
  )t!@ E
  
 A 
 E
 
 A 


-- Chunk 163 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24301-24450
 Aj  @ - 
   B7 @ E
  
 A 
 E
 
 A 

 - 	AqA F
  B7 @ E
  
 A 
 E
 
 A 

 	
     7   
6   6   
6
   
6   6  A 6 

@ AxF
  A jArÀ A 

 Aj   (AxG
 A j   (p
 (|!
 (x!
 (t!

@ AxF
  A jArÀ A 


 Aj   (AxG
 A j   (p
 (|!
 (x!
 (t!

 A j  @@ (pAxG
  Aj 󄀀 

 AjAj A jAj( 6   )p7
 (AxG

 Aj   - ! - 
 
Ax!

  )7  Aj AjAj( 6 
  (|6T  )t7L

  )7  Aj AjAj( 6 
  (|6T  )t7LAx!

  Aj"(  6h  Aj(  6 k
 A j ( k6    	: P  6L  (h6 Q

 A j Aj( 6   )7L

 A jArÀ A Ax!
 AxF

 E
  
 A 
 AxrAxF
  
 A 
 - 
Aj"Aq G
  : 
 )P! (L!
   7   6  A6 
 Aj$ 
À   
# A k"$  A j       A8j" A jA
j( 6   )D70@@@ (@"AF
  AjAj A jAj) 7  AjA
j ( 6   )P7   )07  6 Aj   - 
  B7 A! @@   
A!  ("E
  ( A 
 Aj  j" ( "E
  ( A 

   )07  A6   A
j ( 6 

@ - 	AqA F
   B7 A! @@   
A!  ("E
  ( A 
 Aj  j" ( "E
  ( A 

    Aj AjAj) 7   Aj AjAj) 7   Aj AjAj) 7    )7 
 A j$ 
# A k"$  Aj       (
! (! (!@@@ ("AF
  Aj   - 
  B7  E
  A 

   6
   6   6  A6 

@ - 	AqA F
   B7  E
  A 

     6
   6   6   6 
 A j$ 
# A k"$ @@@ ("AM
 @@@ A|j"  ("j(  "At AqAtr AvAq Avrr"I
  ( !  G
A ! ! !A !A!

À   
   k"I
@@  k"
 A!

A ! A H
A - ΀ A! A "E

   j   !
   6   6
   6   6   6       I6 A j$ 
 A 6 A6
 À 6 B7 AjÀ Æ  
  À   
    
# Ak"$ @@@@@ 
 A !

 Aj!A ! !@  ( j" I
 Aj! ! Aj"
 
 AK

  Atj" I
@@@ 
 A!

A ! A H

-- Chunk 164 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24451-24600
A - ΀ A! A "E

A ! A 6
  6  6@ E
   Atj!@ ("AvAq Avr! At AqAtr!	 ( !
@ (" k O
  Aj  Ԅ  (! (! (
!
 	 r!  j 
     j"6
@  kAK
  Aj AԄ  (! (
!
  j 6    Aj"6
 Aj" G
 

   )7   Aj AjAj( 6  Aj$ 
    
À   
À   
À   
D  ( ! @ (
"Aq
 @ A q
    چ 
    
    
!    ( -  AtÀ j( A􆀀 
   ( " (  (  
   (  ̆ 
# A0k"$   ( !  A6
 À 6 B7 A B  A,j7    6,  A j6 ( ( Ajφ ! A0j$  
|# A0k"$    ( 6
 A6 À 6 B7
 A B  A
j7(  A(j6 ( ( Ajφ ! A0j$  
~# Ak"$  Aj  ) "  Aj) "B֭
B    AjAj) "7(  )"7    B֭
B     Aj) }  ) "T}"78   }"70@@  B R
  A6 À 6| B7 A B  A j7P  A j6 ( ( A jφ ! 

 B7p A B  A0j7h A6d A6T À 6P A6\ A:  A 6 B07 B7 A6|  A j6`  A j6X A j A j  A 6X B7P A:  A 6 A 6 À 6 A 6 A 6|  A j6@ A j A j솀 
  (P!   (T" (X􆀀 !@  E
    A 
@ 
  A. 
  (L! (H!	@@A !
 " E
@ 	  j"
Aj"-  ""
AJ
 @@ 
A~j"-  ""
A@H
  Aq!

@@ 
A}j"-  ""AL
  Aq!

 
A|j"-  AqAt A?qr!
 At 
A?qr!
 At 
A?qr"A F

  	k!  !
 A0F
 

  	 
􆀀 
 @ (D" E
  	  A 
A ! 

@ (D" E
  (H  A 
A! 

À A7 A jÀ À ۆ  
 Aj$   
  À A􆀀 
   (   
K @@@  ( -    
 À A
􆀀 
 À A
􆀀 
 À A$􆀀 
   (   
# A0k"$ @@@@@@@@@@@@  -  
 	
 
 À 6 B7 A6
   Aj6, A B  A,j7   A j6 ( ( Ajφ !


 À A
􆀀 !
	
 À A
􆀀 !

 À A􆀀 !

 À A􆀀 !

 À A􆀀 !

 À A6􆀀 !

 À A
􆀀 !

 À A􆀀 !

 À 6 B7 A6
   Aj6, A B  A,j7   A j6 ( ( Ajφ !

 A6
 À 6 B7   Aj6, A B  A,j7   A j6 ( ( Ajφ !
 A0j$  
   (   (  
0 @  ( -  
  À A􆀀 
 À A 􆀀 
   À  φ 
 @  ( "E
   ( A 

  À A􆀀 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A
vAr: 
  AvA?qAr: 
A!A!

  AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!A!

@  ("  ( G
   ӄ 

-- Chunk 165 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24601-24750
  ( j :     Aj6

  AvAr: 
A!A!
 A
j r A?qAr:  @  (   ("k O
     Ԅ   (!
  ( j A
j      j6
 Aj$ A 
K@  (   ("k O
     Ԅ   (!
  ( j       j6A 
# A k"$ @@@@@ 
 A!

A ! A H
A - ΀ A! A "E

    ! A 6 B7
 A: 8 A 6( A 64 À 60 A 6  A 6  A
j6,  Aj 
   )
7  A j A
jAj( 6 A - ΀ AA "E
   6   6   6
 A6   À 6   6  A:  @ ( " AxH
   E
  (  A 
 A j$ 
    
À A7 A?jÀ À ۆ  
AA  
[# A k"$ @  
  A 6 A6
 À 6 B7 AjÀ Æ  
 A j$   
     (6   ( 6   (6 
	~# A0k"$ @@@@@@@@@@@@@@  -  
 	


 
 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 


 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 


 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 


 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 
	
   Aj6 A6 À 6 B7  A B " A,j7   Aj7    Aj6,  6
 ( ( Ajφ ! 

 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 

 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 

 A6 À 6 B7    A
j6, A B  A,j7   6
 ( ( Ajφ ! 

   A
j6 A6 À 6 B7  A B " A,j7   Aj7    Aj6,  6
 ( ( Ajφ ! 

   A
j6 A6 À 6 B7  A B " A,j7   Aj7    Aj6,  6
 ( ( Ajφ ! 

 À 6 B7  A6   Aj6, A B  A,j7   6
 ( ( Ajφ ! 

 À 6 B7  A6   Aj6, A B  A,j7   6
 ( ( Ajφ ! 

 À A􆀀 ! 
 A0j$   
# A0k"$ @@@@@ E
  At! Aj!A !@ ( "Aj" I
  j" I
 Aj! ! Axj"
 
A!@@ E
 A ! A H
A - ΀ A! A "E

A ! A 6  6  6
 At!@ ("AO
 At AqAvr! ( !@ (
 kAK
  A
j AԄ  (! (!
  j ;    Aj"6@ (
 k O
  A
j  Ԅ  (!
 Aj! (" j      j"6 Axj"
 


    
 A 6 B7

   )
7   Aj A
jAj( 6  A0j$ 
À   
À   
 A 6( A6
 À 6 B7  AjÀ Æ  
# A0k"$  !@@@@@ E
  At! Aj! !	@ ( "Aj"
 I
 	 
j" 	I
 Aj! !	 Axj"
 

@@ 
 A!

A ! A H
A - ΀ A! A "E

A !	 A 6  6  6
@ E
  At!A !	@ ("AO
 At AqAvr!
 ( !@ (
 	kAK
  A
j 	AԄ  (! (!	
  	j 
;    	Aj"	6@ (

-- Chunk 166 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24751-24900
 	k O
  A
j 	 Ԅ  (!	
 Aj! (" 	j     	 j"	6 Axj"
 
 (
!
@  	k O
  A
j 	 Ԅ  (! (!	
  	j     Aj 	 j6    )
7  A0j$ 
À   
À   
 A 6( A6
 À 6 B7  AjÀ Æ  
    
A!A !A!@ E
  A H
 @@@@@ (E
 @ ("
 @ 
 A!

A - ΀  A !

 (  A  !

@ 
 A!

A - ΀  A !
 E

   6A !

A!  A6
A! !
   j 6    6 
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
"   ( ( " Aj(   Aj(   
   (   (  
# A0k"$ @@@@@@@@@@@@@@@@@@@@@@@  ( Axs"A AI 	



 
 À 6(A"! 

 À 6(A! 

 À 6(A
! 

 À 6(A! 

 À 6(A! 

 À 6(A&! 

 À 6(A(! 

 À 6(A7! 

 À 6(A'! 


 À 6(A8! 


 A΀ 6(A8! 


 Aр΀ 6(A.! 


 A΀ 6(A! 
	
 A΀ 6(A! 

 A΀ 6(A
! 

 A΀ 6(A! 

 Á΀ 6(A! 

 A΀ 6(A ! 

 A΀ 6(A<! 

 A΀ 6(A9! 

 A΀ 6(A8! 

   (6(  (! 
   6, A6
 A΀ 6 B7 A B  A(j7   A j6 ( ( Ajφ ! A0j$  
)@  (Aj"E
    6
A΀   
@@ (" ("O
  ( !A!@@  j-  Awj"AK
A tAqE
  Aj"6  I!  G
 

Ax! Aq

Ax!
   6 
Ax!@@@ (" ("O
  ( !A!@@  j-  "Awj"AK
A tAqE
  Aj"6  I!  G
 
 !
 AqE
 Ax!@ A,F
  A G
 Aj"E
  6  Ax6 
 Aj"E
  6  O
 A!@@  j-  "Awj"AK
A tAqE
  Aj"6  I!  G

-- Chunk 167 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:24901-25050
 

AxAx AqAx A F!
   6 
A΀   
A΀   
Ax!@@ (" ("O
  ( !A!@@  j-  "Awj"AK
A tAqE
  Aj"6  I!  G
 
 !
 AqE
 @ A,F
 Ax! A G
 Aj"E
  6  Ax6 
Ax!
   6 
A΀   
 (" ("  K! ( !@@ 
   Ax6 
@  F
  -  !  Aj"6  j!	 Aj! Aj! ! Aq 	-  F


  Ax6 
Ax!@@ (" ("O
  ( !A!@@  j-  "Awj"AK
A tAqE
  Aj"6  I!  G
 
 !
 AqE
 Ax! A:G
  Aj"E
  6Ax!
   6 
A΀   

~# A0k"$ @@@ (" ("O
   k! (  j!A !A !A !@ !	  j!
@@  j-  "
A"F
 A ! 
A G
A! 	As!

@ 	AqE
 A !

  
Aj6@@@@@@@@@ Aq
   
K
 Aj  ֆ  (
   )
7  Ax6A !


@  
K
 @@ 
 A!

A !
 A H
A - ΀ A!
 A "E

A !
 A 6
  6  6 A 6 A 6 E
A !
A !A !	A !
A !@@ -  "A O
 B!


@@@@@@@@@@@@@@ 	Aq
  Aq
 A G
A!A !	


 APjAqA
I
	B!
 Aj&												
A!	B!
A! A^jT

@ AqAG
 B!


@ 
 (G
  Aj 
 ( 
j :   
Aj!
A !

@ 
 (G
  Aj 
 ( 
j :  

@ 
 (G
  Aj 
 ( 
jA:  

@ 
 (G
  Aj 
 ( 
jA
:  

@ 
 (G
  Aj 
 ( 
jA
:  

@ 
 (G
  Aj 
 ( 
jA
:  

@ 
 (G
  Aj 
 ( 
jA	:  
 
Aj!


@@@@@@ 
AK
  Aj 
j :  A!	 

-- Chunk 168 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25051-25200
Aj"
AG
@ ("APj"	AqA
I
 @ AjAqAI
  AjAqAO
 Aj!	

 AIj!	
@ Av"APj"
AqA
I
 @ AjAqAI
  AjAqAO
 Aj!


 AIj!

@ Av"APj"AqA
I
 @ AjAqAI
  AjAqAO
 Aj!

 AIj!
@ Av"APj"AqA
I
 @ AjAqAI
  AjAqAO
 Aj!

 AIj!
@ 
At 	A
tj AtAqr Aqj"AqAF
 @ Aq"	AsAO
 B!


@@@ 	AI
  	AI
  A?qAr:   AvA?qAr:   AqA
vAr: A!

  : A!

  A?qAr:   AvAr: A!
@ ( 
k O
  Aj 
   (
!

 ( 
j Aj   (
 j!
A !


 AqAF
@ AqAK
 A !
A! !

B!


 
AA΀ ņ  
 A 6( A6
 A΀ 6 B7  AjA΀ Æ  
 A 6( A6
 A΀ 6 B7  AjA΀ Æ  
 A 6( A6
 A΀ 6 B7  AjA΀ Æ  
 A 6( A6
 A΀ 6 B7  AjA΀ Æ  
@ AqAO
 B!



@ A jAqA
t A jAqr"
Aj"	AsAjAO
 B!



  A?qAr:   
AvA?qAr:   	A
vA?qAr:   	AvAqAr: @ ( 
kAK
  Aj 
A  (
!

 ( 
j (6   (
Aj!
A !A !

  
6

A !	A !
 Aj! Aj"E

 

  
A΀ ܆  
  
A΀ ܆  
  Ax6
	
 (!@  AqAFrAqE
 BB Aq!


 (!
 Aj  
ֆ @@ (
  
!
 !


@ AxG
  )
!
 !

@ E
   A 
B!


   
>
   
B  7A !

 
   
 (!
 E
  ( A    
7

-- Chunk 169 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25201-25350

   
7

  
Aj6  Aj"j
 

  Ax6
A!
   6  A0j$ 
|@@ (" ("I
 A !

 ( !A!@  j-  "Awj"AK
A tAqE
  Aj"6  I!  G
 

   :    Aq:  
6@ (" ("O
  (  j-  !
   :     I:  
A@ (" ( G
   
 ( jA :    Ax6   Aj6
A@ (" ( G
   
 ( jA :    Ax6   Aj6
p@ (" ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :    Ax6   Aj6
# A0k"$ @@  ( AxG
  (AȆ΀ A ((
  !

   6 A6
 A؆΀ 6 B7 A B  A,j7   A j6  Aj6, ( ( Ajφ !
 A0j$  
DA - ΀ @AA "E
   A 6   6  A6 
AA  
@@ 
 @ (  ("kAK
   A  (!
 ( j"A ( ·΀ 6   AjA - ҇΀ :   Aj!

@ (  ("kAK
   A  (!
 ( jAի6   Aj!
  Ax6   6
# Ak"$  AjA :   B 7    A
n"A
lkA0r: 	A	!@ A
I
   A
pA0r: A! A M
   A nA
pA0r: A! AI
   AnA
pA0r: A! A I
   A nA
pA0r: A! AI
   AnA
pA0r: A! A=I
   A=nA
pA0r: A! AI
   AnA
pA0r: A! A/I
   A/nA
pA0r: A! AI
   AnA0r:  A !
@ (  ("kA
 k"O
      (!
 ( j  j    Ax6    j6 Aj$ 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A!@@ B
T
 A!@ E
 Aj" Ajj B
"B
A0r:   B T! ! E
 

@ (  ("kA k"O
      (!
 ( j Aj j    Ax6    j6 A j$ 
Aԇ΀   


# Ak"$ @ (" ( G
   
 ( jA":    Aj"6 A 6
@ E
   j! A
jAr! A
jAr! A
jAr!	@@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!
@ A_K
  
At 
r! Aj!

 
At - A?qr!
@ ApO
  
 
A
tr! Aj!

 
At - A?qr 
AtA qr! Aj!
@@@@@@@@@@ Axj 
@ A F
  A G



@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA":  

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  

-- Chunk 170 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25351-25500

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  

@  ( G
   
 ( jA :    Aj"6@  ( G
   
 ( jA :  
 Aj!

@@ A I
  AO
@  ( G
   
 ( j :   Aj!

@  ( G
   
 ( jA :    Aj"
6@ 
 ( G
   
 ( 
jA :    Aj"
6@ 
 ( G
   
 ( 
jA0:    Aj"
6@ 
 ( G
   
 ( 
jA0:    Aj"
6 A0r!
 Aq"
A
I!
 
A7j!
 AqAvA0r!@ 
 ( G
   
 
 
 
!
 ( 
j :    Aj"6@  ( G
   
 ( j 
:   Aj!

@@ AI
 @ AO
   A
vAr: 
  AvA?qAr: 
A!
 !


  AvAr: 
  AvA?qAr:   A
vA?qAr: 
A!
 !


  AvAr: 
A!
 	!

 
 A?qAr:  @ (  k 
O
    
  (!
 ( j A
j 
   
j!
  6  G
 

@  ( G
   
 ( jA":    Ax6   Aj6 Aj$ 
R@ (  ("kAK
   A  (!
  Ax6   Aj6 ( jA6  
       
O@ (" ( G
   
 ( jA :    A:    6  Ax6   Aj6
O@ (" ( G
   
 ( jA :    A:    6  Ax6   Aj6
# Ak"$ @ ("	 ( G
   
 ( 	jA :    	Aj6 Aj    @@ (AxG
 @ ("	 ( G
   
 ( 	jA::    	Aj"6@  ( G
   
 ( jA :    A:    6  Ax6   	Aj6

   )7   Aj AjAj( 6 
 Aj$ 
# A0k"$ @@@@@  -    
   (6    - :  A6
 A΀ 6 B7 A瀀 B  7( A B  Aj7   A j6 ( ( Ajφ ! 

   (6  A6
 Aԍ΀ 6 B7 A瀀 B  7   A j6 ( ( Ajφ ! 

   (6    - :  A6
 A΀ 6 B7 A瀀 B  7( A B  Aj7   A j6 ( ( Ajφ ! 

 (A΀ A ((
  ! 
 A0j$   


@@@@@@@@@@@@@@@@@@@@@@@  K
 A !
A !
A !
A !
  F
A !
  j"-  "
A=F
  
j-  "
AG
A !

  A΀ Ć  
@ Aj  j"G

-- Chunk 171 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25501-25650
 A!



A!
 - "
A=F
 @  
j-  "AG
 A!

A !@ Aj"
 G
 A!
A !
A !

 Aj! - "A=G
  
k!
  F

A!
@ 
AF
  
j"-  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 
Aj!
A! Aj G
 
A!



@  
j" I
   A6    B B 7
A΀   
@  j-  "AG
 A! !


A !@  G
 A!
A !
A ! !



 Aj!
@ - "A=G
   k!
 
 F
A!
@@  
j"
-  A=F
 A!


 
Aj"
 F
@ 
-  A=F
 A!


 
Aj"
 F
@ 
-  A=F
 A!


 
Aj"
 F
 
A|F
@ 
-  A=F
 A!


 
Aj!
A! 
Aj G
 


@  j-  "AG
 A! !


@ 
 G
 A!
A !
A ! !



@ 
-  "
A=G
   
k!
A!
 Aj F
A!@ Aj"E
@  
j"
-  A=F
 A!


 
Aj"
 F
 Aj"E
@ 
-  A=F
 A!


 
Aj"
 F
 Aj"E
@ 
-  A=F
 A!


@ 
A|j"Aj I

-- Chunk 172 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25651-25800
  
Aj!
A! 
Aj G



A΀   
A!  
j-  AG

  j" I
  A6    B  
B7
AAA΀ ņ  
A΀   
A!
A!
 !


A!
A!
 !


A!
@  j" I
   A6    B B 7
AЋ΀   
A!A!


 
A !A !A !
A !
@@@@@ 	Aq 
 
 
j"	 
I
 	AqE
  A6   B7
 


 At Atr"	 At 
Atr"
r! 
Al!@@ 
   Aqt

 
AI
  K


  
j" I
@ E
   A6    AjB  
BB7
A΀   
  A6   B7
  j 
Av:  @ AF
  Aj!
@ 
AG
  
!

A   k"
 
 K"
AF
  
j Av:   A~F
  Aj!@ A8qAG
  !

 
AF
  j 	Av:   A}F
  Aj!

A΀   
@  
j" I
   A6    B B7
A΀   
A΀   
A΀   
@@ 

 A !

@  j" I
 A!

A΀   
   6   6   6 
  A6   A: 
A΀   
x An!@@ A{M
 A !

 At!@  Alk"
 A!

@ 
 A!AA AF r!

 Aj" O! !
   6   6 
_ @@A   kAq" E
  E
 A=:    AF
  AF
 A=:   AF
  AF
 A=: 
  
  A΀ ņ  
~A !@@ AO
 A !

A  Afj"  K!  Aj!A !	A !@@ Aj K
@@ 	A j" 	I
   M
  A΀ Ɔ  
A΀   
  	j"
   j"
)  "
B8"
B:j-  :   
Aj  
BB"B"j-  :   
Aj  
 
BB("
B4A?qj-  :   
Aj  
 
BB "
B.A?qj-  :   
Aj  
B(A?qj-  :   
Aj  

-- Chunk 173 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25801-25950
BB 
BB 
B(B 
B8"
"AvA?qj-  :   
Aj  AvA?qj-  :   
Aj  
 
B
A?qj-  :   
Aj  
Aj)  "
B8"
B:j-  :   
A	j  
 
BB("
B4A?qj-  :   
A
j  
 
BB 
BB""
B.A?qj-  :   
A
j  
B(A?qj-  :   
A
j  B"j-  :   
A
j  
 
BB 
BB 
B(B 
B8"
B
A?qj-  :   
Aj  
"AvA?qj-  :   
Aj  AvA?qj-  :   
Aj  
A
j)  "
B8"
B:j-  :   
Aj  
 
BB("
B4A?qj-  :   
Aj  
 
BB 
BB""
B.A?qj-  :   
Aj  
B(A?qj-  :   
Aj  B"j-  :   
Aj  
BB 
BB 
B(B 
B8"
"AvA?qj-  :   
Aj  AvA?qj-  :   
Aj  
 
B
A?qj-  :   
Aj  
Aj)  "
B8"
B:j-  :   
Aj  
 
BB("
B4A?qj-  :   
Aj  
 
BB 
BB""
B.A?qj-  :   
Aj  
B(A?qj-  :   
A
j  B"j-  :   
A
j  
 
BB 
BB 
B(B 
B8"
B
A?qj-  :   
A
j  
"
AvA?qj-  :   
Aj  
AvA?qj-  :   	A j!	 Aj" K

 

 Aj A΀ Ɔ  
@@   Ap"k"I
  !


  Aj!@@ Aj"
 O
 A΀   
@ 
 K
 @@ Aj"
 I
  
 M
 
 A΀ Ɔ  
A΀   
  j"	   j"-  "Avj-  :   	Aj  Aj-  "A?qj-  :   	Aj  Aj-  "At AvrA?qj-  :   	Aj  At AvAqrA?qj-  :   Aj! 
! 
 O



 
 A΀ Ɔ  
@@@@@@@@@@ Aj 	
 
 O
  
j  Aj"
  j-  "AqAvj-  :   Aj"E
  O
 
Aj" O
  j 
 At  j-  "AvAqrA?qj-  :   
Aj" O
 AtA<q!A!


 
 O
A!
  
j    j-  "AvjAj-  :  @ 
Aj" O

-- Chunk 174 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:25951-26100
  AtA0q!

  AБ΀ ņ  
 
 A΀ ņ  
A΀   
  A΀ ņ  
  A΀ ņ  
  A΀ ņ  
 
 A΀ ņ  
  j   jAj-  :   
 
j!

 

#   Aq"6    Av A GjAl6
~~ A j! - !	 - !
@@@@@@@@ AG
  E
  Aj"
j-  "A=F
   j-  AG
  B 
B !


B!
A A   k"  K" EAtk"  K"
Av"Al" K
 
A`q"
 K
 
E
A !A !@ Aj" K
@@   j"-  "j1  "
BQ
 @  Aj-  "j1  "BR
  Aj!

@  Aj-  "j1  "BR
  Aj!

@  Aj-  "j1  "BR
  Aj!

@  Aj-  "j1  "BR
  Aj!

@  Aj-  "j1  "BR
  Aj!

@  Aj-  "j1  "BR
  Aj!

  Aj-  "j1  "BR
 Aj!
  A6    B B 7
  j" B4 
B:"
 B." B( B"" B
"BB BB B(B 
B8>   Aj  B B"
BB 
BBB =  A!  Aj-  "j1  "
BQ
A	!  A	j-  "j1  "BQ
A
!  A
j-  "j1  "BQ
A
!  A
j-  "j1  "BQ
A
!  A
j-  "j1  "BQ
A
!  A
j-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
 Aj B4 
B:"
 B." B( B"" B
"BB BB B(B 
B8>   A
j  B B"
BB 
BBB =  A!  Aj-  "j1  "
BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
A!  Aj-  "j1  "BQ
 A
j B4 
B:"
 B." B( B"" B
"BB BB B(B 
B8>   Aj  B B"
BB 
BBB =  A!@  Aj-  "j1  "
BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A!  Aj-  "j1  "BQ
  Aj B4 
B:"
 B." B( B"" B
"BB BB B(B 
B8>   Aj  B B"
BB 
BBB =   ! 
 A j"G



  A6     jB  B7
Ả΀   
 Aj A΀ Ɔ  
  A6    B  jB 7
  A6    B  jB 7
 
Av"Al!@@@  K
  
 K
@ 
Aq 
Aqk"AI
   j!  k!
  
j!
 A|jAvAs!A !A!@  
K
@@ 

-- Chunk 175 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26101-26250
 j"
 
I
 @  
 j"-  "j-  "AF
 @  Aj-  "j-  "AG
  
Ar!


@  Aj-  "j-  "AG
  
Ar!


  Aj-  "j-  "AG
 
Ar!

  A6    
B  B7
Aԏ΀   
  jA}j"Aj At" AtrAv:    At" rAvAq  AtrAvr;   Aj! Aj! Aj"
 

     
     
AqA G 	 
  A΀ ܆  
 
 A΀ Ɔ  
  
Aď΀ Ɔ  
 
 A΀ Ɔ  
   
<   A6    
B >  Aj 
"Av:     Av; 
"   Bͅ 7  BŹ7 

   Ņ  
<# Ak"$    ) 7 AjAВ΀ A   (AA   
># Ak" $   A΀ 6
  A6  A΀ 6  Ają  
   ( " (   (  
   (   (  
% @ ( 
 ꅀ  
  A΀ 6   6 
p ( ! A 6 @@ E
  (!A - ΀ AA "E
  6  6   A΀ 6   6 
ꅀ  
AA  
~# A0k"$   ( !@@@@@@  (" 
A!  A΀ A􆀀 
  6 (!  (! A6
 A΀ 6 B7$ A B  Aj"7   6     Ajφ 
 Aj! AtAxj!@  6 A΀ A􆀀 
 A6
 A΀ 6 B7$  7   6  ( ( Ajφ 
 Aj!A !  Axj"
 


 A6
 A΀ 6 B7$ A B " Aj7   7   6  ( ( Ajφ ! 

 A6
 A΀ 6 B7$ A B  7   6  ( ( Ajφ ! 

ƅ  
A! 
 A0j$   
"   Bͅ 7  BŹ7 
!   B֩S7  Bܲ邇7 
    Bڐ.7  B᧗&7 
   (   
# A k"$ @@ 
 AA   !

  6
   6 Aj Aj @ ("E
 @ (! @ (

      !

A!    􆀀 
 A 
 Aj Aj  ("
 

A !
 A j$  
   (   (  
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj݅ @ (E
  (
 (  
 (
!   6    6 A j$ 
   AĔ΀  φ 
# Ak"$ @@ ( E
 A	!A΀ !

 Aj ( (ֆ A	 (
 ("!A΀  ( !
   Ѕ !@@  ( "AxF
  E
  ( A 

  - AG
   (" ( !@  Aj( "( "E
     
@ ("E
    ( 
  A
A 
 Aj$  
@@  ( "AxF
  E
  ( A 
  - AG
   (" ( !@  Aj( "( "E
     
@ ("E
    ( 
  A
A 

 @  ( "E
   ( A 

-@  ( "AxrAxF
   ( A 

N# Ak"$  A΀ 6
   6A  AjA΀  A
jA΀  A΀ ㆀ  
   (   
# Ak"$ @@@@ AI
  A 6
 AI

-- Chunk 176 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26251-26400
@ AO
   A?qAr:   A
vAr: 
  AvA?qAr: 
A!

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!

@  ("  ( G
   ۅ 
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A!
@  (   ("k O
     ҅   (!
  ( j A
j      j6
 Aj$ A 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj݅ @ (E
  (
 (  
 (
!   6    6 A j$ 
K@  (   ("k O
     ҅   (!
  ( j       j6A 
@@@ E
  A H
@@@ (E
 @ ("
 @ 
  !

A - ΀ 

 (     !

@ 
  !

A - ΀ 
   !
@ E
    6   6  A 6 
   6   6

  A 6

  A 6
  A6 
  (
!@@@ AI
   (!@@@   G
   AA  ("j( "
A !

  (" 6
  6

  Aj  Aj !@ ! "Aj Aj ("! AA j( "
 
 A 6 
 E
@  (
AtA΀ j"(   F
  AA (  Fj 6  E


  6  
A A (΀ A~  (
wq6΀ 

@   ("F
   6
  6
A A (΀ A~ Avwq6΀ 
  6@  ("E
   6  6
  ("E
   6  6

   j!@@  ("Aq
  AqE
  ( " j!@   k" A (΀ G
  (AqAG
A  6΀   (A~q6   Ar6  6 

   ޅ 
@@@@ ("Aq
  A (΀ F
 A (΀ F
  Axq"ޅ     j"Ar6   j 6   A (΀ G
A  6΀ 
  A~q6   Ar6   j 6 
@ AI
     
 AxqA΀ j!@@A (΀ "A Avt"q
 A   r6΀  !

 (!
   6   6
   6
   6
A   6΀ A A (΀  j"6΀    Ar6  A (΀ G
A A 6΀ A A 6΀ 
A   6΀ A A (΀  j"6΀    Ar6   j 6 

A !@ AI
 A! AK
  A Avg"kvAq AtkA>j!
  B 7   6
 AtA΀ j!@A (΀ A t"q
    6    6    6
    6A A (΀  r6΀ 
@@@ ( "(Axq G
  !

 A A Avk AFt!@  A
vAqjAj"( "E
 At! ! (Axq G
 

 ("  6
   6  A 6   6
   6
   6    6    6
    6
  Axj"  A|j( "Axq" j!@@@@ Aq
  AqE
 ( "  j! @  k"A (΀ G
  (AqAG
A   6΀   (A~q6   Ar6   6 
  ޅ 
@@@ ("Aq
  A (΀ F
 A (΀ F
  Axq"ޅ     j" Ar6   j  6  A (΀ G
A   6΀ 

-- Chunk 177 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26401-26550
  A~q6   Ar6   j  6 
  AI
    A !A A (΀ Aj" 6΀   
@A (΀ " E
 A !@ Aj!  (" 
 

A  A AK6΀ 
A  6΀ A A (΀   j" 6΀    Ar6@ A (΀ G
 A A 6΀ A A 6΀ 
  A (΀ "M
 A (΀ "E
 A !@A (΀ "A)I
 A΀ ! @@  ( " K
    (j K

  (" 
 

@A (΀ " E
 A !@ Aj!  (" 
 

A  A AK6΀   M
 A A6΀ 

  AxqA΀ j!@@A (΀ "A  Avt" q
 A    r6΀  ! 

 (! 
  6   6
  6
   6
A  6΀ A A (΀   j" 6΀    Ar6   j  6 
&	~# Ak"$ @@@@@@@@  AI
 A !  A{O
  A
j" Axq!A (΀ "E
A !@ AI
 A! AK
  A  Avg" kvAq  AtkA>j!
A  k!@ AtA΀ j( "
 A ! A !

A !  A A Avk AFt!A !@@ "(Axq"	 I
  	 k"	 O
  	! ! 	
 A ! ! ! 

 ("	   	  A
vAqjAj( "G   	!  At! E

 

@A (΀ "A  A
jAq  A
I"Av"v" AqE
 @@  AsAq j"At" A΀ j"  A΀ j( " ("F
   6
  6

A  A~ wq6΀ 
  Aj!   At"Ar6   j"   (Ar6

 A (΀ M
@@@  
 A (΀ " E
  hAtA΀ j( "(Axq k! !@@ (" 
  (" 
  (!@@@ (
"  G
  AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ !	 " Aj  Aj  ("!  AA j( "
 
 	A 6 
 E
@ (
AtA΀ j"(  F
  AA ( Fj  6   E


   6   
A A (΀ A~ (
wq6΀ 

  (Axq k"   I"!    !  !
 

@@   tA t" A   krqh"At" A΀ j"  A΀ j( " ("F
   6
  6

A  A~ wq6΀ 
   Ar6   j" At" k"Ar6   j 6 @A (΀ "E
  AxqA΀ j!A (΀ !@@A (΀ "	A Avt"q
 A  	 r6΀  !

 (!
  6  6
  6
  6
  Aj!A  6΀ A  6΀ 

   6@ ("E
    6   6
 ("E
    6   6
@@@ AI
   Ar6  j" Ar6  j 6 A (΀ "E
 AxqA΀ j!A (΀ ! @@A (΀ "	A Avt"q
 A  	 r6΀  !

 (!
   6   6
   6
   6

   j" Ar6   j"   (Ar6

A  6΀ A  6΀ 
 Aj!

@   r
 A !A t" A   kr q" E
  hAtA΀ j( ! 
  E

@     (Axq" k"	 I"!  I! 	  !	@  ("
   (!
   !  	 ! !  
 

 E
 @A (΀ "  I
     kO

 (!@@@ (
"  G
  AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ !	 " Aj  Aj  ("!  AA j( "

-- Chunk 178 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26551-26700
 
 	A 6 
 E
@ (
AtA΀ j"(  F
  AA ( Fj  6   E


   6   
A A (΀ A~ (
wq6΀ 

@@@@@@A (΀ "  O
 @A (΀ "  K
  AjA΀  AjA|q @ ("
 A !


 (
!A A (΀  ("	j" 6΀ A A (΀ "     K6΀ @@@A (΀ "E
 A΀ ! @   ( "  ("jF
  (" 
 


@@A (΀ " E
    O

A  6΀ 
A A6΀ A  6΀ A  	6΀ A  6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A A΀ 6΀ A  AjAxq" Axj"6΀ A A΀ 6΀ A    k 	AXj" jAj"6΀   Ar6   jA(6A A6΀ 

  O
   K
   (
"Aq
  Av F

A A (΀ "     K6΀   	j!A΀ ! @@@@  (  F
  (" 
 


  (
"Aq
  Av F

A΀ ! @@@  ( " K
    (j" K

  (! 
 

A  AjAxq" Axj"6΀ A    k 	AXj" jAj"6΀   Ar6   jA(6A A6΀   A`jAxqAxj"    AjI"A6A )΀ !
 AjA )΀ 7   
7A  6΀ A  	6΀ A  6΀ A  Aj6΀  A
j! @  A6   Aj"  I
 
  F
  (A~q6   k" Ar6   6 @  AI
     

  AxqA΀ j!@@A (΀ "A  Avt" q
 A    r6΀  ! 

 (! 
  6   6
  6
   6

   6     ( 	j6 AjAxqAxj" Ar6 AjAxqAxj"  j" k! A (΀ F
 A (΀ F
@ ("AqAG
   Axq"ޅ   j!  j"(!
  A~q6   Ar6   j 6 @ AI
     

 AxqA΀ j!@@A (΀ "A Avt"q
 A   r6΀  !

 (!
   6   6
   6
   6

A    k"6΀ A A (΀ "  j"6΀   Ar6   Ar6  Aj!

A (΀ !@@   k"AK
 A A 6΀ A A 6΀    Ar6   j"   (Ar6

A  6΀ A   j"6΀   Ar6   j 6   Ar6
 Aj!

    	j6A A (΀ " AjAxq"Axj"6΀ A    kA (΀  	j"jAj"6΀   Ar6   jA(6A A6΀ 

A   6΀ A A (΀  j"6΀    Ar6

A   6΀ A A (΀  j"6΀    Ar6   j 6 
 Aj!

A !A (΀ "  M
A    k"6΀ A A (΀ "  j"6΀   Ar6   Ar6  Aj!

   6@ ("E
    6   6
 ("E
    6   6
@@ AI
   Ar6  j"  Ar6   j 6 @ AI
     

 AxqA΀ j!@@A (΀ "A Avt"q
 A   r6΀  !

 (!
   6   6
   6
   6

   j" Ar6   j"   (Ar6
 Aj!
 Aj$  
A !@A{  A  AK" k M
   A A
jAxq A
I"jA
j⅀ "E
  Axj!@@  Aj" q
  ! 

 A|j"( "Axq  jA   kqAxj"A     kAKj"  k"k!@ AqE
      (AqrAr6   j" (Ar6   ( AqrAr6   j" (Ar6  ߅ 

 ( !   6    j6 
@  ("AqE
  Axq" AjM
     AqrAr6   j"  k"Ar6   j" (Ar6  ߅ 
  Aj!
 
# Ak"$ @@@@@  (   
 A΀ A
􆀀 ! 

 A΀ A
􆀀 ! 

@  - AF
    Aj6
  Aj A
j兀 
  ("  A

-- Chunk 179 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26701-26850
j( " K
A!  (A΀ A
 ((
  
  Aj   Ajꆀ ! 
 Aj$   
   A΀ Ć  
# A k"$ @@@@@@  -    
  A:   ( ! A 6  E
A - ΀ !A A: ΀   :  
A A : ΀   A:  
 A j$ 
 A 6 A6
 A΀ 6 B7 AjA΀ Æ  
A΀ ކ  
 B 7 B 7
 A΀ 6 Aj Aj؅  
 A 6 A6
 A؝΀ 6 B7 AjA΀ Æ  
# Ak"$ @@@  ( AF
     !

A !  ($"E
   ( ! @ Aj   ֆ @@@ (
  ( (
  


 - 
! - 
! (!A΀ A  E

A!

 AqE
   j"I
   j!   k"
 

 Aj$  
  A΀ Ć  
	
# Ak"$ @@@@  (   
 A΀ A􆀀 ! 

 A՗΀ A􆀀 ! 

@  - AF
    Aj68  Aj A8j兀 
  A
j( !@@@@@@@ - 
Aq
    ("I
  Aj(  A
lj!  k!A ! 

  Aj( !A! 
 Ax6
   :  A )΀ 7   : , A 6(  6
 A΀ 6$  A
j6  E
  A
lj! A8jAj! AjAj!@@@ (" 
  A 6d  A
j6` A68 A6 A j A8j AjA  A  腀 !  (`" (
Aj6
  E


  A,l! (!	A !@ A 64  A
j60@@ 	 j" A j( AxG
  A68

 Aj  A$j( "
  A(j( "
ֆ A!@ (
  Aj ( (  ("AF
  A jAj Aj( 6  A jAj Aj) 7  A jAj Aj) 7   ) 7`
  )`7  Aj A jAj( 6  Aj A jAj) 7  Aj A jAj) 7   
6\  
6X  68
@  Aj( "AF
    Aj) 7
  6 A0j A8j Aj  (   Aj(   Aj(   A
j( 腀 !  (0" (
Aj6
  
  A,j"G
 

 A
j" F

 

  A΀ Ć  
 (
" AxF
   E
 (  A 

 - AG
  (" ( !@  Aj( "( "E
     
@ ("E
    ( 
  A
A 
A ! 

@@ (
" AxF
   E
 (  A A! 

 - AG
  (" ( !@  Aj( "( "E
     
@ ("E
    ( 
  A
A 
A! 
 Aj$   

~# A k"$   (!  ( !	 A 6@@ 	- E
  	( !
@@@@ 
  A瀀 B  	A
j7 A: d A 6` B 7X B 7P A6H A6< A6, A΀ 6( A64 
Aj( !
 
Aj( !
  A j68  Aj60 
 
 A(jφ 
 	- AG
 	( !
 B
7 A B  Aj7 A: d A 6` B 7X B7P A6H A6< A6, A΀ 6( A64 
Aj( !
 
Aj( !
  A j68  Aj60 
 
 A(jφ 


 
Aj( A̜΀ A 

-- Chunk 180 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:26851-27000
Aj( (
  
 	- AG
  	( !
 B
7 A΀ 6( A B A΀ 7 A: d A 6` B 7X B7P A6H A6< A6, A64 
Aj( !
 
Aj( !
  A j68  Aj60 
 
 A(jφ 

@@ ( AF
 @@ 	-   
 A jA j A j) 7  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7H 	( !
 A B  A j7  A: D A6@ B 78 A60 A6( A6
 A6
 A΀ 6 A6 
Aj( ! 
Aj( !
  A(j6  A j6  
 Ajφ E


 A jA j A j) 7  A jAj Aj) 7  A jAj Aj) 7  A jAj Aj) 7   ) 7H 	( !
 A B  A j7 A6, A΀ 6( B74 
Aj( ! 
Aj( !
  Aj60  
 A(jφ 


 	( "
Aj( A΀ A	 
Aj( (
  

 	( A΀ A􆀀 
  AG
 ( AF
  6 @ 	- AG
  	( !
 B
7 A΀ 6( A B A΀ 7 A: d A 6` B 7X B7P A6H A6< A6, A64 
Aj( ! 
Aj( !
  A j68  Aj60  
 A(jφ 

 	( "
Aj( AҜ΀ A 
Aj( (
  
  	(!
 	(! A j Aj( 6   	( "6H  ) 7L 
  A j (  
  	( !
 A瀀 B "
 A j7( A6L A΀ 6H B7T 
Aj( ! 
Aj( !
  A(j6P  
 A jφ 
  AG
  6 	( !
  
 Aj7( A6L A΀ 6H B7T 
Aj( ! 
Aj( !
  A(j6P  
 A jφ E

A!


A!
 	( "	Aj( A΀ A 	Aj( (
  

   Aj6A !

 A j$  

# Ak"$ @@ ( E
 A	!A΀ !

 Aj ( (ֆ A	 (
 ("!A΀  ( !
   Ѕ ! Aj$  
   

   셀  
# Ak"$   ( "(
!@@@@ ( 
 
A!A !

 
  ( "(! ( !

  6
 Ax6  A΀   ("(  ( -  -   
  6  6  A΀   ("(  ( -  -   
# A0k"$ @A - ΀ E
  A6
 Aؙ΀ 6 B7  6, A瀀 B  A,j7   A j6 AjA΀ Æ  
 A0j$ 
 @ A	I
    ㅀ 
  ⅀ 
p@@  A|j( "Axq"AA Aq" jI
 @ E
   A'jK

  ᅀ 
A΀ A.A΀ Ȇ  
Aĕ΀ A.A΀ Ȇ  
@@@@@  A|j"( "Axq"AA Aq" jI
  A'j!@ E
   K

@@@ A	I
   ㅀ "
A 
A ! A{K
A A
jAxq A
I!@@ 
  AI
  ArI
  kAO
  
  Axj" j!@@@@@  O
  A (΀ F
 A (΀ F
 ("Aq
 Axq"	 j" I
  	ޅ   k"AI
   ( AqrAr6   j" Ar6  j" (Ar6  ߅   
  k"AK
  
   ( AqrAr6   j" (Ar6  
A (΀  j" I
@@  k"AK
   Aq rAr6   j" (Ar6A !A !

   AqrAr6   j" Ar6  j" 6   (A~q6
A  6΀ A  6΀   
   AqrAr6   j" Ar6  (Ar6  ߅   

-- Chunk 181 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27001-27150
A (΀  j" K

 ⅀ "E
   A|Ax ( "Aq Axqj"   I !  ᅀ  
       I  ( "Axq"AA Aq" jI
@ E
   K

  ᅀ 
 
A΀ A.A΀ Ȇ  
Aĕ΀ A.A΀ Ȇ  
A΀ A.A΀ Ȇ  
Aĕ΀ A.A΀ Ȇ  
   AqrAr6   j"  k"Ar6A  6΀ A  6΀   
L @@ A	I
    ㅀ !

  ⅀ !
@ E
  A|j-  AqE
  A    
 
# A k"$ @@@A (΀ AqE
 󅀀 E

A (΀ 
A (΀ !A  6΀ A (΀ !A   6΀ A A 6΀ @ E
 @ ( " E
      
 (" E
     ( 
 A j$ 
 A 6 A6
 AĚ΀ 6 B7 AjA΀ Æ  
  

 A (΀ E
R# Ak"$ @  ("
 A΀ ކ  
   (
6
   6  6 Aj녀  
~# A0k"$ @ ( AxG
  (
! A$jAj"A 6  B7$ A$jAĔ΀  φ  AjAj ( "6   )$"7 Aj 6   7 
 ) ! B7  AjAj" Aj"( 6  A 6 A - ΀   7@A
A "
 AA
  
  )7  Aj ( 6   A΀ 6   6  A0j$ 
~# A k"$ @ ( AxG
  (
! AjAj"A 6  B7 AjAĔ΀  φ  AjAj ( "6   )"7 Aj 6   7 
  A΀ 6   6  A j$ 
XA - ΀  (! ( !@AA "
 AA  
  6  6   A΀ 6   6 
   A΀ 6   6 
# A k"$ A A (΀ "Aj6΀ @@ A H
 A - ΀ Aq
 A A: ΀ A A (΀ Aj6΀   : 
  : 
  6  6 Aԛ΀ 6 A6
A (΀ "AL
 A  Aj6΀ @A (΀ E
     (    ) 7
A (΀  A
jA (΀ (  A (΀ Aj!
A  6΀ A A : ΀  

  
     
       
%   A (΀ "A      
   
9 Av@ !  A 6  A  A|q AF"6  A  At 6 


# A k"$ A !@@@@  ("  ("I
     k"6    ( " j"6  AG
 - !@ -  "APj"A
I
 A A r"Aj"  AjI"AO

@ APj"A
I
 A A r"Aj"  AjI"AO

@@@@@@@@@ At r"AJ
 A ! Aq"AI
	A !A! AI
 Aq"AO
A!A!

A! A6 A :  A ; 
  : 
  A
j6

A!A ! AO

  6 A :  A ; 
  : 
  A
j6 AI
   A~j"	6   Aj6  - !@ -  "
APj"A
I
 A 
A r"Aj"
 
 AjI"AK

@ APj"
A
I
 A A r"Aj"
 
 AjI"
AK

  At 
r: 
 AqAI
  	AI
   A|j"
6   Aj6  - !@ - "APj"A
I
 A A r"Aj"  AjI"AK

@ APj"A
I
 A A r"Aj"  AjI"AK

  At r:  
  
AI
   Azj6   Aj6  - ! @ - "APj"A
I
 A A r"Aj"  AjI"AK

@  APj"A
I
 A  A r" Aj"   AjI"AK

  At r: 
 A0j A
j ֆ  (0
  (8" 6  (4"6   j!  

-- Chunk 182 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27151-27300
A ! ! 

A΀ ކ  
A΀ ކ  
@ ,  "AL
  Aj!  Aq!

 - A?q!  Aq!@ A_K
  At  r! Aj! 

  At - A?qr! @ ApO
    A
tr! Aj! 

  At - A?qr AtA qr! Aj! 
@@@   G
 A! 

  ,  "AJ
 A`I
 ApI
  - A?qAt  - A?qA
tr  - A?qr AqAtA qrA F! 
 A F
   

   !  A瀀 B  A j7@ Aȁ B  Aj78 AɁ B  Aj70   6L A6
 A΀ 6 B7$  A0j6  AjA΀ Æ  
A !
 A j$  
A΀ A(Aԧ΀ Ȇ  
A΀ ކ  
A΀ ކ  
& @   k"AI
    򆀀 
    
   (   (  
# Ak"$   (!  ( !  Aj  @ E
 @   6
 Aj A
jA΀ 醀   Aj!  Aj"
 

 Ajꆀ !  Aj$   
-    ( -  At" A΀ j(   A΀ j( 􆀀 
D  ( ! @ (
"Aq
 @ A q
    چ 
    
    
q# A k"$ @@  ( " ( E
     ! 

 A 6
  6 B 7   )7 AjA ! 
 A j$   
# A0k"$   (!  (!  ( !A !@@@@@ " G
 A !

@@@@@@@@ E
   G!	 Aj! !  !@@@  ,  "
AL
  
Aq!


  - A?q!
 
Aq!
@ 
A_K
  
At 
r!


 
At  - A?qr!
@ 
ApO
  
 
A
tr!


 
At  - A?qr 
AtA qr"
A F

 
APjA	K
  Aj!
@@ AG
 A !

  , A@H
 Aj!
 
!  
 

A΀ ކ  
  k!
@  F
   
j,  AL

 Aj  
 @@@ - 
 @ ("

  !  !
	
  
M
   
j",  AL
 ,  AL
  
k!

  - : A΀ A+ AjA΀ A΀ ۆ  
  
G
   
j!A !
 
E
  G
 (
AqE
  -  A G
@ 
AF
   , AL

  Aj" 
jAj!
@@  
G
 A !
	
@@ ,  "
AL
  Aj! 
Aq!


-- Chunk 183 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27301-27450

 - A?q!
 
Aq!@ 
A_K
  At 
r!
 Aj!

 
At - A?qr!
@ 
ApO
  
 A
tr!
 Aj!

@ 
At - A?qr AtA qr"
A G
 A !


 Aj!
 
APjA
I
  
A rAjAO

 

   A A΀   
  A  
A΀   
    
 A΀   
   A  
A΀   
   
A 
A΀   
@ E
  Ạ΀ A􆀀 E
  	!

@ 
AI
   /  A G
   , AL
 
Aj!
  Aj! 
@@  !
@@@@@@@@@@@ 
"E
 @ 
-  A\j
 
 AF
 
, AJ
 
 A A̤΀   
 
 j!
A !  
!@  !
 "  
F

@@  ,  "
AL
   Aj! 
Aq!


  - A?q! 
Aq!@ 
A_K
  At r!
  Aj!

 At  - A?qr!@ 
ApO
   A
tr!
  Aj!

 At  - A?qr AtA qr"
A F

  Aj!
 
  k j!  
A\j
          

 
Aj!
 AF"

 
, AJ
 
 A A΀   
@@@ 
E
   
K
  
G
 
E
  
 
􆀀 E
A!

 !
 
!   
 
􆀀 E
A!


 
 
j,  AL
  
 
􆀀 E
 A!


@@  
M
  
 
j" ,  A@H
  
k!



 
 
j! A !

-- Chunk 184 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27451-27600
  
F
	
 
  
 A΀   
  Aj" 6$ A 6    6
  
6 A: , A$6 A$6( Aj Aj  (E
@@@@@@ (
"AF
  Aj! @ 

  
, A@H

@   I
    F


 
  j,  A@H
 Aj!


A΀   
 
!  !
 Aj"
E

@@  
M
  
 
j,  A@H
  
k!


A !
  
G

 
 
j! @ 
 
@ 
/  AӠG
 Aˤ΀ !


@ 
/  A G
 Aʤ΀ !


@ 
/  AҌG
 Aɤ΀ !


@ 
/  ĄG
 AȤ΀ !


@ 
/  AǨG
 AǤ΀ !


@ 
/  A̠G
 AƤ΀ !


 
/  AҠG
 AŤ΀ !


 
- A G
 AI
 
, AL


AĤ΀ !
 
- A G

A!  
A􆀀 E



@@ 
Aj" ,  "AL
  Aq!

 
- A?q!
 Aq!
@ A_K
  
At 
r!

 
At 
- A?qr!
@ ApO
  
 
A
tr!

 
At 
- A?qr 
AtA qr!
@ A.F
 A! A΀ A􆀀 
 Aj!
  ,  AJ
 
 A A΀   
@ Ạ΀ A􆀀 E
 A!


 
Aj! A !
 AI
 A~j!
 
, AJ
 
 A Aܤ΀   
 
Aj! A !
A! A΀ A􆀀 E


 
  
 A΀   

-- Chunk 185 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27601-27750
 
Aj A A΀   
 
 A  
A΀   
 
- A G

 
Aj" Aj"j! !@@A!
  F
@@ ,  "
AL
  Aj! 
Aq!


 - A?q! 
Aq!@ 
A_K
  At r!
 Aj!

 At - A?qr!@ 
ApO
   A
tr!
 Aj!

 At - A?qr AtA qr"
A F
 Aj!
 
APjA
I
  
AjAI
 
A !

 Aj  A  - 
 
AsA  (" AsAjAI"A Fr
  6  
 Aj  E
 
A!

 	!  
 􆀀 E
 

 A0j$  
 
 A  A΀   
   
A 
AУ΀   
~# A k"$ @@@@@@  ( "E
     (
Aj"6
 AM
@  ("E
 A!A΀ A  

  A: 

@  (" 
 A !

Aͪ΀ A   !

@@@@@@@@@@@@@  ("  ("O
 A!   Aj"6@@@@@@@@@  j-  "Aj                 
 
  ("E

A΀ A  E



    
 


 A0j  A   - 0
  )8"	7@  ( E
  A0j    (0E
 A jAj A0jAj) 7   )07   ("E
A! A j  
  ("E
 	P
 (
Aq
A! Aת΀ A􆀀 
 Aj  ( 
  (Aت΀ A􆀀 E


@  (" 
 A !

Aͪ΀ A   !

    


  (! - 4"E
 E
A!A΀ A  


  (! - 1"E

 E

A!A΀ A  



@  O
    Aj6@  j-  "AjAqAI
  Aj!A ! AqAO

@    E
 A!

@@@@@@@@@  ( 
 A !  ("E

@Ạ΀ A  E
 A!


  ( E

 A0j  A   - 0
  ( E
 )8!	 A0j    (0E
 A jAj A0jAj) 7   )07@ A G
 (D (LrE
  ("E
Ạ΀ A  E
A!

  (" E
Aͪ΀ A   !

@  (" 
 A !

-- Chunk 186 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27751-27900

Aͪ΀ A   !

@  ("
 A !

A٪΀ A  E
A!

  ("E
A! A j  E


  (!
@@@@ Aj                
  60 E
A! A0j  E


 E
A!Aܪ΀ A  E


 E
 A!A΀ A  

  (! (D (LrE

 E
A!A΀ A  
  ("E
 A j  
  (!


  (! - 4"E
 E

A!A΀ A  



  (! - 1"E
 E
A!A΀ A  


  ("E
A!A΀ A  


  O
  j-  A G
   Aj"6@@@@  O
   j-  A F

    K!B !	@@  O
   j-  A F

  F
@  j-  "APj"AqA
I
 @ AjAqAI
  AjAqAO
 Acj!

 Aj!
   Aj"6 Aj 	B B>B   )B R
 )"
 B|"	 
Z
 


   Aj6

   Aj6 	B}X

  ("E
A!A΀ A  E


  ("E
Ạ΀ A  E


  ("E
A!A΀ A  E


   
@  ("E
 A!AȤ΀ A  

A!   

@ A F
 @  ("E
 A΀ A  

  A  

  ("E

A!AǤ΀ A  E




A !  A :   A 6 


 E
 A!A΀ A  


   : 

 E
 A!A΀ A  
	
   : 

 E
A!A΀ A  
  (!  	70 E
 A0j  
  ("E
A!A΀ A  E


 E
 A!A΀ A  

   : 

 E
 A!A΀ A  

   : 
A !  A 6 

@  ("E
 A!AȤ΀ A  

A!   
  ("E
 A!AǤ΀ A  

A !  ( E

-- Chunk 187 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:27901-28050
     (
Aj6

 A j$  
  A΀ Aǆ 
# Ak"$  A 6
@@@@ AI
  AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A!

  : 
A!

  A?qAr: 
  AvAr: 
A!

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!
    (" k6    ( A G  Ir"6 A!@ 
   ( A
j 􆀀 !
 Aj$  
   AС΀  φ 
~@ Aj" ("j"	 O
 A  ("
k!
  ("
k!
 (
! ) !@@@@@@@@   	j1  BPE
    j"6

 
 
  
 K "   K!  j! !	@@  	G
 A   ! 
!	@@  	I
    j"	6@ 
  A 6

   	6   6  A6 
 	Aj"	 O
 	 j" O
  	j-    j-  F
 
  
 j"6 
!	 E


  	j O
  	j!  	j! 	Aj!	 -   -  F
 
 
 j 	j!
A !	 E


  A΀ ņ  
   j"	  	K Ağ΀ ņ  
 	 A΀ ņ  
  	6
 	!
  j"	 I
 

  6  A 6 
# Ak"$ @@@@@@@@@@@@ ( 
 A F

 AK


  A;
  B 7  A ; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

  A;
  B 7  A ; 

 Ԇ E
  AjAjA :   A ; A :   AqAԟ΀ j-  :   AvAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 
  A
vAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 	@ ArgAv"A~j"A
O
  Aj jA :    AjjAjA;     )7    Aj AjAj/ ;    A
: 
   : 


 A
A΀ ņ  
@ Ն E
    6  A:  

 AjAjA :   A ; A :   AqAԟ΀ j-  :   AvAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 
  A
vAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 
  AvAqAԟ΀ j-  : 	@ ArgAv"A~j"A
O
  Aj jA :    AjjAjA;     )7    Aj AjAj/ ;    A
: 
   : 


 A
A΀ ņ  
 Aj$ 
  A΀ A􆀀 
N# Ak"$    6
 A΀ A
A΀ A A
jA΀  !  Aj$   
~@@@@@ ( 
  - 
  - 
"As: 
 (4! (0!@@ ("
  !

@  O
   j",  AJ


-- Chunk 188 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28051-28200

  G
  j!
@@  F
 @@ ,  "AL
  Aq!

 - A?q! Aq!@ A_K
  At r!

 At - A?qr!@ ApO
   A
tr!

 At - A?qr AtA qr!
 Aq
 A F
A!@ AI
 A! AI
 AA AI!
   6  A6     j"6  6
 Aq

  A6  A: 
 (
" (4"F
 (0! !@  (<"	Aj"
j" O
  (8!  j!
  	j!
  ("
k! (" j! 	 k! )! ($"AF! ! !@  G
@@@   j1  Aq
   
6
A ! 
! 


 
 
  
 K " 	  	K! !@@@@@  G
 A   ! 
!@@  I
   
6
@ AF
  A 6$
   
6   6  A 6 
 Aj" 	O
  j" O
  j-    j-  F
 
  6
 ! ! E


  j O
 
 j!  j! Aj! -   -  F
 
  j!A ! E


  A΀ ņ  
   j"  K Ağ΀ ņ  
  	A΀ ņ  
  6$ !
  
j" I
 
 !
A !@ E
  !@@@  I
   G
 !

  j,  AL
  !

 Aj"
 

   6   6  A6      K6

  A6 
  A6 
   6   6  A 6 
    A΀   

# Ak"$ @@@@ (" (
"I
   ("K
   k! (" j! Aj"	 - "
jAj-  !
@ 
AK
  
Aq!
@@@ AI
  Aj 
    (
!
 (!

A !
A !  F
 A !
@@  
j-   
G
 A!

  
Aj"
G
 
A ! !

 AG
  
 jAj"6
@  
I
   K
    
k"
j 	 
 
    6   
6A!

  j!  k!  O
 


 
Aq!
@@@ AI
   
    (!
 ( !

A !
A !  F
 A !
@@  
j-   

-- Chunk 189 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28201-28350
G
 A!

  
Aj"
G
 
A ! !

 AG
  
 jAj"6
@  
I
   M

  j!  k!  O
 

A !

 
AA΀ Ɔ  
  6

   6  Aj$ 

~# Ak"$ A ! A
jA A @@  (
"
    (   (􆀀 ! 

  ( !  ("-  !@@  ("E
   j!	A ! A
j!
 ! @@@  ,  "
AL
   Aj!  
Aq!


  - A?q!
 
Aq!
@ 
A_K
  
At 
r!
  Aj! 

 
At  - A?qr!
@ 
ApO
  
 
A
tr!
  Aj! 

 
At  - A?qr 
AtA qr"
A F
  Aj! 
 AF
 
 
6  
Aj!
 Aj!   	G
 

  j! A AK! Aj! At" Aj!   A
jjA|j! A
jApj!A!A ! !
A!A !A !
@@@ Aj" AqAI
  APjAqA	K
 Ajj! 
 
Aj!
@@A A$ 
k"	 	A$K"	A 	AIA 
A$I"
  Aq"	K
  
 F
A A  
k"   A K" A  AIA 
A I!
A$ 
k!A ! @@ 
-  "Aj"
AqAI
  APjAqA	K
 Ajj!

 
Aq" "~"B 
 	 j"
 	I
@ 
 K
  A$ 
k~"B 
 !  A  
   
  IkjAj"	A 	AIA   
K!
  A$j!  
!	 
Aj"
 G



 
Aj!


 	!

  
j"  I
    Aj"n"
j" I
 AsAjAI
  F
@@    
 lk"
M
   j 
k! !
@  
kAq"	E
 A !
 ! @  Aj  ( 6   A|j!  	 
Aj"
G
 
  
k!

 AI
  
Atj! @  A
j  Aj) 7   Aj  ) 7   Apj!  
A|j"

-- Chunk 190 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28351-28500
 
K
 


 
AO

 A
j 
Atj 6 @ 
 F
  
-  !A !@@ 
 n"  n  j" AO
   !	

A !@ A$j!  A K!
  A#n"	!  

 

 
Aj!  	A$lAq 	A&jAqnj!
 Aj! Aj! Aj!A! ! !


@ AO
  A
j!@  ( 6 Aj  " 
 Aj! A|j"
 


 AA΀ Ɔ  
 
AA΀ ņ  
A!  A΀ A	􆀀 
 @ E
    􆀀 
A!  A΀ A􆀀 

A!    􆀀 
  A΀ A􆀀 ! 
 Aj$   
~# A k"$    A΀ A @ A j   (D"E
 
@@@ Aj  
 (H!

 !
@@  kAM
 B !

B!B !  F
   j!  j!B !@@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!@ A_K
  At r! Aj!

 At - A?qr!@ ApO
   A
tr! Aj!

 At - A?qr AtA qr"A F
 Aj!
@@ APj"A
I
 A A r"Aj"  AjI"AO

 B !  F



A΀ ކ  
   7   7  A j$ 
 (" ("  K! ( !A! !@@@  F
  Aj"6 Aj!  j!	 ! 	-  "	APjAqA
I
  ! 	AjAqAI
 
 	AqA G
   Aj"K
@@ E
 @  I
   G
  M


  j,  A@H
  K


  K

   6    j6 
  A 6   A : 
    Aԩ΀   
~~# Ak"$  ( !@@@@@@ (" ("O
   j-  A F

    K!B !@@@  O
   j-  A F

  F
@  j-  "APj"	AqA
I
 @ AjAqAI
  AjAqAO
 Acj!	

 Aj!	
  Aj"6  B B>B   )B R
 ) "
 	B|" 
Z
 
  A : 

A!	  Aj6@ B|"P
    7A !	

  A : 

  B 7  Aj6A !	

  A : 

  A : 
A!	
   	:   Aj$ 
~~# Ak"$ @@@@ (" ("O
  ( " j-   AqF

  B 7

  Aj"6@@@@@  O
   j-  A F

    K!B !@@  O
   j-  A F

  F
@  j-  "	APj"AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!


-- Chunk 191 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28501-28650
 	Aj!
  Aj"6  B B>B   )B R
 ) "
 B|" 
Z
 


  Aj6B !

  Aj6 B|"PE

  A : A!

@ B|"P
    7

  A : A!

A !
   :   Aj$ 
~A !@ (" ("O
  (  j-  A G
 A!  Aj"6
@@@@  O
  ( " j-  APj"Aq"A	K
   Aj"6@ 
 A !

 Aq!  O
@  j-  APjAq"A	K
  Aj"6 B
~"B 
 "	 j" 	I
  G
 
 !

  A 6   A : 
  A 6   A : 
  O
   j-  A G
   Aj"6
@@@@@@@  j" I
   6  K
 E
  I
  F


  A 6   A : 
  j,  A@H

@ E
   O
   j,  AL

  j!
  k!	@ 
   B7   	6   
6 
A !A  k!  j!A !@@@  G
 A! 
!

 Aj" j"-  A G
 
  j!@@A  k F
 @  	I
  
A ! 
! As G


 ,  AL

@ Aj" 	O
  Aj",  AJ


 AG
 Aj! 	!
 	 k!	 
!
@ 	
   A 6   A : 
   	6
   6   6   6 
  A 6   A : 
 
 	A  A΀   
 
 	  	A΀   
    A΀   
e# Ak"$   (!  A 6@  A  
    6 Aj$ 
A΀ A= AjAЦ΀ A΀ ۆ  
~~# A k"$ @@@@@@@@  ( "E
 @  ("  ("O
   j-  A F

    K! !B !@@  O
   j-  A F

  F
@  j-  "APj"	AqA
I
 @ AjAqAI
  AjAqAO
 Acj!	

 Aj!	
   Aj"6  B B>B   )B R
 ) "
 	B|" 
Z
 


@  ("
 A !

Aͪ΀ A  !

   Aj6 B|"PE


   Aj6B !
  AjZ
 A!	  (!@  (
Aj"AK
  
A !

 E
A!A!	A΀ A  


A !	  ("E
 A!A΀ A  

   	: A !  A 6 

 AjAj"  Aj"	) 7    6
 	 >    ) 7   ! 	 ) 7    )7 
 A j$  

~# A k"$ @@@@@@@@@@@@@  ( "E
   ("  (O
   Aj6  j-  "Aj"Aq"AK

-- Chunk 192 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28651-28800
A
 vAqE
  (" 
A !


@  (" 
 A !


Aͪ΀ A   !


 AqAt"A΀ j(  Aԭ΀ j(    !


    (
Aj"6
@ AK
 @@@@@@@@@@@@@@ Aj









  

@  ("E
 A!Aɤ΀ A  
  ( "E

  ("  (O
  j-  A G
   Aj6 Aj    - 
 )"PE


@  ("E
 A!Aʤ΀ A  

  (! A G
 E
A!A΀ A  E


@  ("E
 A!Aת΀ A  

A!   
@ A G
 @  ("E
 A΀ A  

A!  A 

  ("E
A!Aت΀ A  E


@  ("E
 A!AƤ΀ A  

 Aj   A! (
@ (
AG
   ("E
A!AĤ΀ A  

  ("E
A!AŤ΀ A  E


@  ("E
 A!A΀ A  

A!   
  ( "E
  ("  (O
  j-  A G
   Aj6 Aj    - 
 )"P
@  ("E
 A!A΀ A  

A!    E


A!   E


A!    
  ("E
A!A΀ A  E


A!   


  (! - "E
 E

A!A΀ A  



 E
 A!A΀ A  

A!   E




  ("E
A΀ A  



  (! - "E
 E
A!A΀ A  



   6A!  A  E
	


@  ("E
 A!A΀ A  

  A: 

  ("E
A!A΀ A  E


 E
 A!A΀ A  

   : 

A !  A :   A 6 

 E
 A!A΀ A  

-- Chunk 193 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28801-28950

   : 
A !  A 6 

@ A F
   ("E
 A!A΀ A  

A!   

A !  ( E
     (
Aj6

 A j$  
~~# A k"$ @@@@@@@@  ( "E
 @  ("  ("O
   j-  A F

    K! !B !@@  O
   j-  A F

  F
@  j-  "	APj"
AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!


 	Aj!

   Aj"6  B B>B   )B R
 ) "
 
B|" 
Z
 


@  ("
 A !

Aͪ΀ A  !

   Aj6 B|"PE


   Aj6B !
  AjZ
 A!
  (!	@  (
Aj"AK
  	
A !

 	E
A!A!
A΀ A 	 


A !
  ("	E
 A!A΀ A 	 

   
: A !  A 6 

 AjAj"	  Aj"
) 7    6
 
 >    ) 7   AqA G ! 
 	) 7    )7 
 A j$  
~~# A k"$ @@@@@@@@  ( "E
 @  ("  ("O
   j-  A F

    K! !B !@@  O
   j-  A F

  F
@  j-  "	APj"
AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!


 	Aj!

   Aj"6  B B>B   )B R
 ) "
 
B|" 
Z
 


@  ("
 A !

Aͪ΀ A  !

   Aj6 B|"PE


   Aj6B !
  AjZ
 A!
  (!	@  (
Aj"AK
  	
A !

 	E
A!A!
A΀ A 	 


A !
  ("	E
 A!A΀ A 	 

   
: A !  A 6 

 AjAj"	  Aj"
) 7    6
 
 >    ) 7   AqA G ! 
 	) 7    )7 
 A j$  
~# A0k"$ @@@@@@  ( "E
   ("  ("I
  ("E
A!A΀ A  E


@  (" 
 A !

Aͪ΀ A   !

   Aj"6  j-  !    (
Aj"6
@@@@@@@@@@ AK
 @@@@@@@@@@@@@@ Aj9

-- Chunk 194 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:28951-29100
              	 
 
             

 

  
   
 
  ("E
A!A΀ A  E


  ("E
A!AΩ΀ A  E


  O
  j-  A F


A!    E


   Aj6  ("E
A!A΀ A  E


 A(j   @ (("E
    (, @@@ ) AG
  )"	BV
  	
  ("E
A!A΀ A  


  ("E
A!A΀ A  E


  ("E
A!A΀ A  E


  (! - ,"E
 E
A!A΀ A  


 A(j   @ (("E
  Aj  (, @ )E
  )"	BV
  	"AsAjAK

  ("E
A!A΀ A  E


  (! - ,"E

 E

A!A΀ A  



@ 
   ("E
 A!A΀ A  

@  ("E
 A!Aʤ΀ A  

A!   E


  O
   j-  A F

@ 
   ("E
 A!A΀ A  

@  ("E
 A!Aɤ΀ A  

 A F
  ("E
A!A΀ A  E


@ 
   ("E
 A!A΀ A  

@  ("E
 A!Aת΀ A  

A!   
  ("E
A!Aت΀ A  E


@ 
   ("E
 A!A΀ A  

@  ("E
 A!AƤ΀ A  

 A j   A! ( 
@ ($AG
   ("E
A!AĤ΀ A  

  ("E
A!AŤ΀ A  E


@ 
   ("E
 A!A΀ A  

A!  A 
@@@@@  ( "E
   ("  (O
   Aj6  j-  Aj

@  (" 
 A !

Aͪ΀ A   !

  ("E
A!A΀ A  E


@  ("E
 A!AƤ΀ A  

A!   
  ("E
A!AŤ΀ A  E


@  ("E
 A!A΀ A  

A!   
  ("E

-- Chunk 195 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29101-29250
A΀ A  E


  ("E

A΀ A  E



A!    




@  ("E
 A!A΀ A  


  A: 

A!  (  E



   Aj6A!   E
	


A!  A 
	
 
  ("E
A!A΀ A  E


 E
 A!A΀ A  

   : 

 E
 A!A΀ A  

   : 
A !  A 6 

A !  A :   A 6 

A!    

A !  ( E
     (
Aj6

 A0j$  
# Ak"$ @@  
 A !

A!  A' 
  Aj!@@@@@ A"F
 @ A G
   A' !

    -  AG
A!@@@ AqAF
  - 
" - 
O
  Aj: 
  j-  !

A ! A 6  (! B 7 
    E
 


A !  A" E


 - 
" - 
"  K!@  F
  j! Aj!   -   E
 


A !
 

A!
 Aj$  
~# Ak"$ @@  ("
 A !

A!AΪ΀ A  
 @ B R
 AΩ΀ A  !

@@  5" T
   }"BT
A!AΩ΀ A  
  7 Aj  !

A΀ A  
A !  A :   A 6 

  A j6 Aj  !
 Aj$  
~~# Ak"$ @@@@@@@  ( "E
 B !  ("  ("O
  j-  A G
   Aj"6@  O
   j-  A F

    K!B !@@  O
   j-  A F

  F
@  j-  "	APj"AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!

 	Aj!
   Aj"6  B B>B   )B R
 ) " B|" Z
 


@  (" 
 A !

Aͪ΀ A   !

   Aj6 B|"PE


   Aj6B !
 B|"PE

@  ("E
 A!A΀ A  

A !  A :   A 6 

@  ("
 A !@@  ("  (O
   j-  A G
    Aj6A !

-- Chunk 196 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29251-29400

@ E
   ("E
 A΀ A  E
 A!

@   E
 A!

 Aj!  ( "
 
A !

@ P
 A!AϪ΀ A  
    (Aj6@  B E
 A!

B!@@  R
   ("E
A!AӪ΀ A  E


@ P
   ("E
 Aժ΀ A  E
 A!

A!    (Aj6 B|!  B E
 


@@  ( "
 A !

A !@@@  ("  (O
   j-  A G
    Aj6A !

@ E
   ("E
 A΀ A  

   
 Aj!  ( "
 
A !

A!
    ( k6
 Aj$  
# A k"$ A!@   "AqAF
 @@@  ( "E
   ("  (O
   j-  A G
    Aj6  (!@@ Aq
  E
A!AȤ΀ A  E


 E
 A!Aժ΀ A  

@@  ( E
      ( E
 AjAj Aj) 7   ) 7@  ("E
 A! Aj  
  ("E
 A΀ A  

A!   
@  ( "E
  ("  (O
  j-  A G
   Aj6@  ("E
 @Aժ΀ A  E
 A!

  ( E

     ( E
 AjAj Aj) 7   ) 7@  ("E
 A! Aj  
  ("E
 A΀ A  

A!   E
 


  (" E
Aͪ΀ A   !

  (!@@ - "E
  E
A!A΀ A  


 E
 A!A΀ A  

   : A !  A 6 

 AqE

  (" E
 A!AǤ΀ A   

A !
 A j$  
~~# Ak"$ @@@@@@@  ( "E
 B !  ("  ("O
  j-  A G
   Aj"6@  O
   j-  A F

    K!B !@@  O
   j-  A F

  F
@  j-  "	APj"AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!

 	Aj!
   Aj"6  B B>B   )B R
 ) " B|" Z
 


@  (" 
 A !

Aͪ΀ A   !

   Aj6 B|"PE


   Aj6B !
 B|"PE

@  ("E
 A!A΀ A  

A !  A :   A 6 

@@  ("E
  P

-- Chunk 197 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29401-29550
A!AϪ΀ A  
    (Aj6@  B E
 A!

B!@@  R
   ("E
A!AӪ΀ A  E


@ P
   ("E
 Aժ΀ A  E
 A!

A!    (Aj6 B|!  B E
 


   !

   !    ( k6
 Aj$  

# A k"$ @@  ( "E
 A !@  ("  ("O
   j-  A G
 A!   Aj"6
@@@@  O
   j-  A F

 E
A !

   Aj"6@@  O
   j-  A G
    Aj6A!A΀ !

 A(j   @ (("E
 @ (,"E
  (4E

@  ("E
 A!A΀ A  

A !  A :   A 6 

  (!@@ - ,"E
  E
A!A΀ A  


 E
 A!A΀ A  

   : A !  A 6 

 E

@  ("E
 A!A΀ A  

 E

@  ("E
 A!A΀ A  

 A;$  6  A 6
 A:  A 6  6 A 6
  6  6 A 6  A(j  @@ ((
 @ - %
  A: %@@ - $E
  ( ! (
!

 ( " (
"F

 ( j!  k!

A΀ ކ  
 (
!  (06
  j! (, k!
@@ E
     

 A(jA j A j) 7  A(jAj Aj) 7  A(jAj Aj) 7  A(jAj Aj) 7   ) 7(@ - M
  !@ (,! A j A(j @@ (T
  - M
 A: M@@ - LE
  (H! (D!

 (H" (D"F

 (, j!  k!

 (D!  (\6D  j! (X k!
@@ 
 A !

A΀ A  
@  ("
 A !A !

 !    

 - ME
 

 E
A΀ A  E

A!

@  ("E
 A!A΀ A  

@@@@  ( "
 A !

A !@@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 Aժ΀ A  E
 A!

   
 Aj!  ( "
 
A !
@  ("E
 A!AŤ΀ A  
  ( !
 E
  ("  (O
  j-  A G
   Aj6A !

A!

@  ("E
 A!A΀ A  

   !
 A j$  
@@  ( "E
 A !@@  ("  (O

-- Chunk 198 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29551-29700
   j-  A G
    Aj6

@ E
   ("E
 Aժ΀ A  E
 A
A!  A 
 Aj!  ( "
 

A !
 
@@@ ( "
 A !

A !@@ (" (O
   j-  A G
   Aj6

@ E
  ("E
 Aժ΀ A  E
 A!

A! A 
 Aj! ( "
 

A !
   6   6 
@  ( "E
 A !@@  ("  (O
   j-  A G
    Aj6A 
@ E
   ("E
 Aժ΀ A  E
 A
@   E
 A
 Aj!  ( "
 

A 
~~# Ak"$ @@  ( "E
   ("  ("O
 @  j"-  A G
    Aj"6@@@  O
   j-  A F

    K!B !@@@@  O
   j-  A F

  F
@  j-  "APj"AqA
I
 @ AjAqAI
  AjAqAO
 Acj!

 Aj!
   Aj"6  B B>B   )B R
 ) "	 B|" 	Z
 


   Aj6 B|"PE

@  ("E
 A!A΀ A  

A !  A :   A 6 

   Aj6B !
    !

 -  A G
    Aj6  A  !

   !
 Aj$  
~~# A0k"$ @@  ( "E
 A !@@  ("  (O
   j-  A G
    Aj6

@@@@@@@@ E
   ("E
 @Aժ΀ A  E
 A!


  ( "E

  ("  ("O
  j-  A G
   Aj"6@@@@  O
   j-  A F

    K!B !@@  O
   j-  A F

  F
@  j-  "	APj"AqA
I
 @ 	AjAqAI
  	AjAqAO
 	Acj!

 	Aj!
   Aj"6  B B>B   )B R
 ) "
 B|" 
Z
 


   Aj6

   Aj6 B}X

@  ("E
 A΀ A  

  A :   A 6 

  ("E
A!Aͪ΀ A  


 Aj   @ (E
  A jAj AjAj) 7   )7 @  ("E
  A j  
A΀ A  

A!  A E


  (! - "E
 E
A΀ A  E


A!

 E
 A΀ A  

   :   A 6 

-- Chunk 199 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29701-29850

A!

 Aj!  ( "
 

A !
 A0j$  
@@@ ( "
 A !

A !@@ (" (O
   j-  A G
   Aj6

@ E
  ("E
 Aժ΀ A  E
 A!

@  E
 A!

 Aj! ( "
 

A !
   6   6 
~~# A k"$ @@@  ( "E
   ("  ("O
 @  j"-  A G
    Aj"6@@@@@@@@  O
   j-  A F

    K!B !@@@  O
   j-  A F

  F
@  j-  "APj"	AqA
I
 @ AjAqAI
  AjAqAO
 Acj!	

 Aj!	
   Aj"6  B B>B   )B R
 ) "
 	B|" 
Z
 


   Aj6 B|"PE


   Aj6B !
  Z
 A!  (!  (
Aj"	AK
 E
 AjAj"  Aj") 7    	6
  >    ) 7   !  ) 7    )7 

A !  ("E
A΀ A  


 E
A΀ A  E

A!

   :   A 6 
A !

 -  A G
    Aj6  A  E
A!

AA   A  !

@  ("E
 AȤ΀ A  E
 A!

@  ( "
 A!

A !@@@  ("	  (O
   	j-  A G
 A!   	Aj6

@ E
   ("	E
 A!Aժ΀ A 	 

   
 Aj!  ( "
 
A!

A!
 A j$  
	# A0k"$ @@@@@@  ( "E
   ("   ("  Kk!A ! !@  jE
    jAj6 Aj!  j! Aj"	! -  "APjAqA
I
  	! AjAqAI
 
 AqA G
  jAj!@@ E
 @  I
   M


  K
  j,  A@H


  K

@ Aj"Aq
  B 7  	 jAj"	6  6   j"6
@ A
j "A I
 
 A F

  ("E
A!A΀ A  


@  ("
 A !

Aͪ΀ A  !

@  ("
 A !

A! A" 
 B 7  	6  6  6
@ A
j "A F
  A(j!	@@@@@@ A F
  A'F
 A j   -  AG
A!@@@ AqAF
  - *" - +O
  Aj: * A j j-  !

-- Chunk 200 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:29851-30000

A ! 	A 6  ($! B 7 
   E
 


A΀ A+ A jA΀ AĞ΀ ۆ  
 A' E


 - *" - +"  K!@  F
 A j j! Aj!  -   E
 

A!

 A
j "A G
 

 A" !

  ("E
 A!A΀ A  

A !  A :   A 6 
 A0j$  
    Aԩ΀   
	# A k"$ @@@@@@@@  ( "E
   ("  ("  K!A! !@  F
   Aj"	6 Aj!  j!
 	! 
-  "
APjAqA
I
  	! 
AjAqAI
 
 
AqA G
 	Aj!@@ E
 @  I
   M



  K
	  j,  A@H
	

  K

 Aj  j"
   )
  ("	
A !

@  ("
 A !

Aͪ΀ A  !

A!A΀ A 	 
 
  	 E


  (!	  )7@ 	
 A !

A! Aj 	 

A ! 	- 
Aq
 Aj"Aq"AO
A
 vAqE
 AtAq"A΀ j(  Aԭ΀ j(  	 !

@  ("	E
 A!A΀ A 	 

A !  A :   A 6 

A΀ ކ  
 A j$  
    Aԩ΀   

~# A k"$  Aj  AЫ΀ A @@@@@@@@@@@@@@@@@@ (
 @ A j Aj  (T"AF
 
 
 Aj Aj (@ (D (H (L (4AF  (!

  (X6A!

A !
 E
 !@ ("Aj"E
 @  M
   j",  AJ


  G
  j!
   kj!@@  F
@@ ,  "AL
  Aj! Aq!

 - A?q! Aq!	@ A_K
  	At r! Aj!

 At - A?qr!@ ApO
   	A
tr! Aj!

 At - A?qr 	AtA qr"A F
 Aj!
 A@jAI
  APjA
I
 


@ 
 A!A !A !	

@  I
   F


  j,  AL
 !

 
  A  A΀   
@@@@@@@@@@@@@@@@ AI
 A΀  A E
 /  AڜF
A! AF
 (  A߾F

	
 AG
 /  AڜG
A! Aj!A !

 Aj!A !@ AG
 A!


-- Chunk 201 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30001-30150
 ,  AL
 A}j!

 , AL
 A~j! Aj!

 Aj!A !@ AO
 A!

@ ,  AL
  A|j!

  A A΀   
  A A̢΀   
  A Aܢ΀   
  j!
A !@@@  F
  j! Aj! ,  AJ
 


 E
 @@ ,  "AL
  Aj! Aq!

 - A?q! Aq!	@ A_K
  	At r! Aj!

 At - A?qr!@ ApO
   	A
tr! Aj!

 At - A?qr 	AtA qr! Aj!
@@ A G
 A !	

 A F
A !	@ APjA	K
A !@@ APj"
A
I
 @ E
 @  
F
@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!
@ A_K
  
At 
r! Aj!

 
At - A?qr!
@ ApO
  
 
A
tr! Aj!

 
At - A?qr 
AtA qr"A F
 Aj!
 Aj"
 

 	Aj!	 A G


 B
~"
B 
 
" 
j" I
  
F
@@ ,  "AL
  Aj! Aq!

 - A?q!
 Aq!
@ A_K
  
At 
r! Aj!

 
At - A?qr!
@ ApO
  
 
A
tr! Aj!

 
At - A?qr 
AtA qr! Aj!
 A F

 


 
 k!


 AK
 AG

A! -  A F

A!A !	

 !
@ /  AߤG
  , "A@H
 A~j!	 Aj!

 -  A G
 !
@ , "A@H
  Aj!	 Aj!

  A A΀   
  A A΀   
A!A!A !	 AF
A !	@A΀  A E
  !

@ , "AL
  A}j!	 Aj!

  A AХ΀   
 !
A!A !@ AjAqAM
 A !	A !

A !@@ 	 F
  j! Aj! ,  AJ
 
A !	A !A !A !


 AjAjB 7  B 7  	6  6 AjA  
 - !@ ("
  !	

-- Chunk 202 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30151-30300

 (" /  Aj-  AtrAt r"
O
  j-  AjAqAO
 (
! B 7   6
  6  
6  6 AjA  
 - ! ("
 !	
A !A !
A !
A !


A΀ A= A jAЦ΀ A΀ ۆ  
A΀ A= A jAЦ΀ A΀ ۆ  
 (! /  Aj-  AtrAt r!

A !@ 
  !

@@ 
 M
   j",  A@H
 
 k!


 
 G
   j!A !A!
A !


  
  
A΀   
@ 

 A !
A!


A.!A !
 -  A.F

A !
A!

  
j!
 !@@@ AJ
  - A?q! Aq!@ Aq"AK
  At r! Aj!

 At - A?qr!@ AO
   A
tr! Aj!

@ At - A?qr AtA qr"A F
  Aj!

A!


 Aj! Aq!
@ A_jAI
  A qAjAI
 @ AFj'                           
 AjAM
 A!A !


@  
F
  -  !


A!

   
6
   6   6   6   	6
   6   6   
6  A j$ 
    A΀   
}# A k"$     @@ ( E
    ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

  A6 
 A j$ 
F    (" k6    ( A G  Ir"6 A!@ 
   (  􆀀 !
 
~# A k"$ @@@  ( 
 A!   (  (􆀀 


   Aj6 (
!  6 B7
Aʁ B  Aj!@@ AqE
   70 A6, A6
 A΀ 6 A6$ A: X A6T B 7L A6D A6<  A<j6(  A0j6  A
jAС΀  Ajφ !

 A6@ A΀ 6< B7H  7  Aj6D A
jAС΀  A<jφ !
 (
!@@@ E
  

 
 E
A΀ A7 A jA΀ A΀ ۆ  
 A΀ A􆀀 E

A!

   (  (
􆀀 !
 A j$  
  A΀ A􆀀 
   A΀  φ 
 @  ( "E
   ( A 

  A΀ A􆀀 
G# A k" $   A 6  A6
  Aد΀ 6  B7  AjA΀ Æ  
# A k"$ @  j" O
 A A   
A!  ( "At"   K"A AK"AsAv!@@ 
 A !

  6
   (6
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 
 @  
   
     
A!A !A!@ E
  A H
 @@@@@ (E
 @ ("
 @ 

-- Chunk 203 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30301-30450
 A!

A - ΀  A !

 (  A  !

@ 
 A!

A - ΀  A !
 E

   6A !

A!  A6
A! !
   j 6    6 
# A k"$ @  ( "Aj"
 A A   
 At"   K"A AK"AsAv!@@ 
 A !

  6
   (6A!
  6 Aj   Aj @ (E
  (
 (  
 (
!   6    6 A j$ 

      
# A0k"$   6  6 A j Aj @@@ ( "
 A !A!

 ($! (,E
 @@@ 
 A!

A ! A H
A - ΀ A! A "E

A ! A 6  6  6
@  M
  A
jA    (
! (! (!
  j      j"6@  kAK
  A
j A  (! (!
  j"A / ΀ ";   AjA - ΀ ":    Aj"6  )7 A j Aj @ ( "E
 @ (,!@ (
 k ($"O
  A
j    (!
 (" j      j"6@ E
 @ (
 kAK
  A
j A  (! (!
  j" ;   Aj :    Aj"6
 A j Aj  ( "
 

   )
7   Aj A
jAj( 6 

    
   6   6  Ax6 
 A0j$ 
# Ak"$ @@@@@ ("E
  ( ! Aq!@@ AO
 A !A !

 A
j! A|q!A !A !@ (  Axj(  Apj(  Ahj(  jjjj! A j!  Aj"G
 

@ E
  At jAj!@ (  j! Aj! Aj"
 

@ (
E
  A H
 AI (Eq
 At!
 

A!A !

A ! A H
A - ΀ A! A "E

 A 6  6  6  A΀  φ E
A΀ A  AjA΀ A΀ ۆ  
    
   ) 7   Aj Aj( 6  Aj$ 
# Ak"$ @@@@ AI
  A 6
 AI
@ AO
   A?qAr:   A
vAr: 
  AvA?qAr: 
A!

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!

@  ("  ( G
    
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A!
@  (   ("k O
        (!
  ( j A
j      j6
 Aj$ 
W@  (   ("k O
      
  ( j" j   k         j6
   A
j  
x (!@@ ("
 A!

A !@ A H
 A - ΀ A! A "

    
    !   6   6   6 
K@  (   ("k O
        (!
  ( j       j6A 
     A 
v@  (
"  ("K
   ("("  I
   6   k!@@  G
    F


   F
 ("  j   j  

-- Chunk 204 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30451-30600
   j6

y~# A0k"$   6   6  A6
 A̱΀ 6 B7 A瀀 B " Aj7(   7   A j6 Aj Æ  
H# A k"$  A;
  6   6 A̸΀ 6 A6
 A
j􅀀  
y~# A0k"$    6   6 A6
 A΀ 6 B7 A瀀 B " Aj7(   7   A j6 Aj Æ  
y~# A0k"$   6   6  A6
 A΀ 6 B7 A瀀 B " 7(   Aj7   A j6 Aj Æ  
y~# A0k"$    6   6 A6
 A΀ 6 B7 A瀀 B " Aj7(   7   A j6 Aj Æ  
@  ( "  ("rE
 @ E
   j!@@  (
"
 A ! !

A ! !@ " F
@@ ,  "AL
  Aj!

@ A`O
  Aj!

@ ApO
  Aj!

 - A?qAt - A?qA
tr - A?qr AqAtA qrA F
 Aj!
  k j! Aj"
 

  F
 @ ,  "AJ
  A`I
  ApI
  - A?qAt - A?qA
tr - A?qr AqAtA qrA F

@@ E
 @  I
 A !  F


A !  j,  A@H

 !
   !   !
@ 
   (    ((
  
  (!@@ AI
   򆀀 !

@ 
 A !

 Aq!@@ AO
 A !A !

 A
q!A !A !@   j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
   j!@  ,  AJj! Aj! Aj"
 

@@  M
   k!A !@@@  -   
 !A !

 Av! AjAv!
 Aj!  (!  (!  (!@ Aj"E
   (  E
 
A
  (    ((
  
A!@    (
  
 A !@@@  G
  !

 Aj!   (  E
 
 Aj!
  I!
 
  (    ((
  
M# A k"$  A 6 A6 B7  6
   6  Aj6   Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
*    -  At" A΀ j(   A΀ j( ǆ 
c# A0k"$    6
 A6 A΀ 6 B7
 A瀀 B  A
j7(  A(j6 Aj Æ  
   5 A  

    ˆ  
# Ak"$ @@@@@ (
"Aq
  A q
  5 A  ! 

  ( ! A !@  jA j  Aq"A0r A j A
I:   Aj!  AI!  Av!  E
 
 Aj" AK
 AA΀ A  jAjA  k ! 

  ( ! A !@  jA j  Aq"A0r A7j A
I:   Aj!  AI!  Av!  E
 
 Aj" AK
 AA΀ A  jAjA  k ! 
 Aj$   
  AA΀ Ć  
  AA΀ Ć  

# A0k"$  A: , A 6
A ! A 6(  6$   6  A 6 A 6
@@@@@ ("
  (
" E
 (!  At!  AjAqAj! ( ! @@  Aj( "E
  (   (   ($(
  

 (  A
j (  
 Aj!  Aj!  Axj"
 


 ("E
  At! AjA?qAj! (!	 ( ! A !@@  Aj( "E
  (   (   ($(
  

   j"Aj( 6
  A
j-  : ,  Aj( 6( A

-- Chunk 205 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30601-30750
j( !A !
A !
@@@ Aj(  
 At!
A !
 	 
j"
(
 
( !
A!

  6  
6
 Aj( !@@@ (  
 At!
 	 
j"
(
 
( !
A!

  6  
6 	 Aj( Atj"(  A
j (  
  Aj!   A j"G
 

  (O
 (  (  Atj"(  ( ($(
  E

A!

A !
 A0j$  
FA!@   Ά 
  (A΀ A ((
  
   Aj Ά !
 
!   B֩S7  Bܲ邇7 
# Ak"$   / !A ! @   jA j Aq"A0r A j A
I:    Aj!  Aq"Av! AO
 
@  Aj"AM
  AA΀ Ć  
 AA΀ A   jAjA   k !  Aj$   
# Ak"$ @@@@@@@@@@@@@@ ( 
 A F

 AI
 AqE
 Ԇ E
 AjAjA :   A ; A :   AqA΀ j-  :   AvAqA΀ j-  : 
  AvAqA΀ j-  : 
  A
vAqA΀ j-  : 
  AvAqA΀ j-  : 
  AvAqA΀ j-  : 	 ArgAv"A~j"A
O
 Aj jA :    AjjAjA;     )7    Aj AjAj/ ;    A
: 
   : 



  A;
  B 7  A; 


  A;
  B 7  A; 
	
  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

 AqE
  A;
  B 7  A ; 

 Aq

@ Ն E
    6  A:  

 AjAjA :   A ; A :   AqA΀ j-  :   AvAqA΀ j-  : 
  AvAqA΀ j-  : 
  A
vAqA΀ j-  : 
  AvAqA΀ j-  : 
  AvAqA΀ j-  : 	 ArgAv"A~j"A
O
 Aj jA :    AjjAjA;     )7    Aj AjAj/ ;    A
: 
   : 


 A
A΀ ņ  
 A
A΀ ņ  
  A;
  B 7  A ; 
 Aj$ 
  A
t!A !A!!A!!@@@ Av j"AtA΀ j( A
t" F
    K" Aj   I"k!  K
 


 Aj!
@@ A K
  At"A΀ j( !A!@ A F
  A΀ j"E
  ( Av!
 Av!@@ 
 A !

 AtA΀ j( A q!
@  AsjE
    k! A AK! Aj!A !@  F
  A΀ j-  j" K
  Aj"G
 
 !
 Aq
 A!A΀ ņ  
 AA΀ ņ  
@  A O
 A 
A!@@  A I
   AI
@@  AI
 @  AиsjAк+O
 A 
@  AsjAO
 A 
@  AtjA
O
 A 
@  AtjAO

-- Chunk 206 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30751-30900
 A 
@  AtjAO
 A 
@  AtjAO
 A 
@  A~qA
G
 A 
  A`qA
G
A 
  A΀ A,A΀ AA΀ A 
A !  AƑujAI
   AjAtI!
 
  A΀ A(A΀ AA΀ A 
~@ E
 A  Ayj"  K! AjA|q k!A !@@@@@  j-  ""A H
   kAq
  O
@  j"Aj(  ( rAxq
 Aj" I
 


B !B!	@@@@@@@@@@@@ A΀ j-  A~j 

 Aj" I
B !B !	
	
B ! Aj"
 I
B !	

B ! Aj"
 I
B !	

B !B!	  j,  AJ


  
j,  !
@@@ A~j 
 
A`qAF


 
AJ


@ AjAqA
I
  A~qAnG
 
A@H


 
A@H


  
j,  !
@@@@ A~j    
 AjAqAK
 
A@N


 
A jAqA0O


 
AJ

@ Aj" I
 B !	

  j,  AJ
B !	 Aj" O
  j,  AL
B !

B !

B !	 Aj" O
  j,  AL

B !
B!	
     	7  A6 
 Aj!

 Aj!

  O
 @  j,  A H
  Aj"G
 


  I
 

   6   6  A 6 
~# A k"$ A!@  - 
   - !@  ( "(
"	Aq
 A! (A΀ A΀  Aq"AA  ((
  
A! (   ((
  
A! (A΀ A ((
  
   (
  !

@ Aq
 A! (A΀ A ((
  
 (
!	
A! A:   )7
 Aĺ΀ 64  Aj6  )7$ ) !
  	68  (6,  -  : <  
7
  A
j60 A
j  憀 
  A
jA΀ A憀 
   A
j (
  
  (0A΀ A (4(
  !
  A:    :  A j$   
B@  ( " j" I AKr"
    jAj       (  j6 
 
~# A k"$    (  6@@@ ( ( rE
  A 6
 A΀ 6  B7, A B " AjAr7P   AjAr7H   AjAr7@   Aj78  A8j6( A6$@ A
jA΀  A jφ 
  (
" AO
  A

-- Chunk 207 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:30901-31050
jAj  ǆ !

A΀ A+ A jA΀ Aܷ΀ ۆ  
 A6$ A΀ 6  B7, A B " AjAr7P   AjAr7H   AjAr7@   Aj78  A8j6( ( ( A jφ !
 A j$  
  AA΀ Ɔ  
   1  A  
# A k"$   6
   6  6  6 A6
 A΀ 6 B7$ Aف B  Aj78 Aځ B  Aj70  A0j6  Aj Æ  
y~# A0k"$    6   6 A6
 A΀ 6 B7 A瀀 B " Aj7(   7   A j6 Aj Æ  
   3 A  
 A΀ A+  Ȇ  
j# A0k"$   6
   6 A6 A΀ 6 B7
 Aځ B  Aj7(  A(j6 Aj Æ  
    (   (ǆ 
~# A k"$ A!@ ("A΀ A
 ("(
"  
   (
! A6 A΀ 6 B7
 Aځ B  7( A瀀 B " A
j78   Aj70  A(j6   Ajφ 
 A! A΀ A   
 @@  ("E
 A! Aȸ΀ A   
 A(jAj Aj) 7  A(jAj Aj) 7   ) 7(   A(jφ E


   ( "  (A
j(    ) BŹR
  )Bͅ R
 A! Aȸ΀ A   
  (  (   

A !
 A j$  
# Ak"$   ( ! A !@  jA j  Aq"A0r A j A
I:   Aj!  AI!  Av!  E
 
@ Aj" AM
   AA΀ Ć  
 AA΀ A  jAjA  k !  Aj$   
~# A k"$   6
  6  6  6@@@@  Aq  
 A΀ 6A!

 A΀ 6A!

 A΀ 6A!
  6
@ ( 
  A6\ Aܹ΀ 6X B7d Aف B " Aj7H   Aj7@ Aځ B  Aj78  A8j6` A j Æ  
 A jAj Aj) 7  A jAj Aj) 7   ) 7  A6\ A΀ 6X B7d Aف B " Aj7P   Aj7H Aہ B  A j7@ Aځ B  Aj78  A8j6` A j Æ  
   (    ((
  
  ( (  φ 

 Aj!  (!  ( !  (!A !A !@@@  K
 @  j!	@@@  k"
AI
 @@ 	AjA|q"
 	k"
E
 A ! @ 	  j-  A
F
 
  Aj" G
 
 
 
Axj"
M


 
Axj!

@ 
Aj( " A sAwj  Asq 
( " A sAwj  AsqrAxq
 
Aj!
 
Aj"
 
M
 


@  G
  !

A ! @ 	  j-  A
F
 
  Aj" G
 
 !

@ 
 
G
  !

@@ 	 
j-  A
G
  
! 

 
 
Aj"
G
 
 !

   j"
Aj!@ 
 O
  	  j-  A
G
 A !	 !
 ! 

  M
 

A!	 !
 !   G
 A 
@ -  E
  Aܺ΀ A (
  E
 A
   k!
A !
@   F
    j-  A
F!

  j!   
:   
!    
 (
  "  	rE
 

-- Chunk 208 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31051-31200
  
X  (!  ( !@  (" -  E
  Aܺ΀ A (
  E
 A
   A
F:     (  
~# A k"$   ( !A!@  - 
 @  ("(
"Aq
 A! (A΀ A΀  AA  ((
  
   (
  !

@ 
 A! (A΀ A ((
  
 (
!
A! A:   )7
 Aĺ΀ 64  Aj6  )7$ ) !  68  (6,  -  : <  7
  A
j60  A
j (
  
  (0A΀ A (4(
  !
   :    Aj6  A j$   
~# A k"$ A!@  - 
   - !@@  ( "(
"Aq
  AqE
A! (A΀ A ((
  E


@ Aq
 A! (Aȸ΀ A ((
  
 (
!
A! A:   )7
 Aĺ΀ 64  Aj6  )7$ ) !  68  (6,  -  : <  7
  A
j60  A
j (
  
 (0A΀ A (4(
  !

   (
  !
  A:    :  A j$   
7A!@  - 
   ( " (A΀ A  ((
  !
 
~@ ( "AM
 @@@  BT
   Apj"6   j"    B"B~}" B郱AtA΀ j/  ;   A
j  B "B AtA΀ j/  ;   A
j  B B AtA΀ j/  ;   Aj  B=B AtA΀ j/  ;   Aj  B/A pAtA΀ j/  ;   Aj  Bȯ%A pAtA΀ j/  ;   Aj  B
AqA pAtA΀ j/  ;     B ~}! Aj!

@  B/Z
   !

  Axj"j"    B/"B/~}"A=nAtA΀ j/  ;   Aj A n"A pAtA΀ j/  ;   Aj A nAqA pAtA΀ j/  ;    A lk! Aj!
  AtA΀ j/  ;  
@@ "A O
  ! !

  A|j"j  A n"A lk"AqA n"	AtA΀ j/  ;    jA~j  	A lkAqAtA΀ j/  ;  
@@ Aq"A O
  !

  A~j"j  A n"A lkAqAtA΀ j/  ;  
@ AqA
I
   A~j"j AqAtA΀ j/  ;    6 
  Aj"j A0r:    6 
A΀ A
A΀ Ȇ  
   )   Aj) A 톀 
~# Ak"$  A'6@@ B T
  A0j  B B̕B   A j  B Bɇ B   A j B B̕B   A j B Bɇ B   A jAj)  A jAj)  A0jAj) " ) |" T|" )@|" T|  A jAj)   )P| T||" T|"B>! B> B!

  B B-B!B !
 Aj  Bష B   )  | A j Aj놀  (!@  B Q
  A jAjA0 Alj  A6  B B-"B"  Bష B   )  | A j Aj놀  (! BT
  A jA0 Aj    A0r: eA !
  AA  A j jA' k ! Aj$  
@@ 
  Aj!  (
!A-!

A+A   (
"Aq"!  j!
@@ Aq
 A !

@@ AI
   򆀀 !

@ 
 A !

 Aq!	@@ AO
 A !A !


 A
q!
A !A !
@   
j"
,  AJj 
Aj,  AJj 
Aj,  AJj 
Aj,  AJj! 
 
Aj"
G
 

 	E
   
j!
@  
,  AJj! 
Aj!
 	Aj"	
 

  j!
@@  ( 
 A!  ("
  ("
   󆀀 
 
   
(
  
@  ("	 K
 A!  ("
  ("
   󆀀 
 
   

-- Chunk 209 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31201-31350
(
  
@ AqE
   (!
  A06  -  !A!  A:    ("
  ("
   󆀀 
 	 kAj!@@ Aj"E
 
A0 
(  E
 
A
A! 
   
(
  
   :     
6A !

 	 k!@@@  -  "  
 !A !

 Av! AjAv!
 Aj!  (!	  (!
  (!
@@ Aj"E
 
 	 
(  E
 
A
A! 
 
   󆀀 
  
   
(
  
 A !@@  G
   I
 Aj! 
 	 
(  E
 
 Aj I
 
# Ak"$  A 6
@@@@ AI
  AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A!

  : 
A!

  A?qAr: 
  AvAr: 
A!

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A!
@  ( " j" I AKr"
    jAj A
j      (  j6 
 Aj$  
   Aĺ΀  φ 
   A΀  φ 
@@   AjA|q"  k"I
   k"AI
  Aq!A !A !@   F"
 A !@@   k"A|M
 A !	

A !	@    	j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj! 	Aj"	
 

 
    	j!@  ,  AJj! Aj! Aj"
 

   j!	@ E
  	 A|qj",  AJ! AF
   , AJj! AF
   , AJj!
 Av!  j!@ 	! E
 A AI"Aq! At!A !@ AI
   Aqj! A ! !@ (
"	AsAv 	AvrAq ("	AsAv 	AvrAq ("	AsAv 	AvrAq ( "	AsAv 	AvrAq jjjj! Aj"  G
 

  k!  j!	 AvAq AqjAlAv j! E
 
  AqAtj"( "AsAv AvrAq!@ AF
  ("	AsAv 	AvrAq j! AF
  ("AsAv AvrAq j!
 AvA
q AqjAlAv j
@ 
 A 
 Aq!	@@ AO
 A !A !

 A|q!A !A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 	E
    j!@  ,  AJj! Aj! 	Aj"	
 

 
J@@@ A F
 A!    (  

 
A !
 
     (
  
   (    ((
  
# Ak"$   (    ((
  ! A : 
  : 
   6 Aj    ׆ ! - 
!@@ - 

  AqA G! 

A!  Aq
 @ ( " - 
Aq
   (A΀ A  ((
  ! 

  (A΀ A  ((
  ! 
 Aj$   
# Ak"
$   (    ((
  ! 
A : 
 
 : 
 

-- Chunk 210 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31351-31500
  6 
Aj    ׆    	 
׆ ! 
- 
!@@ 
- 

  AqA G! 

A!  Aq
 @ ( " - 
Aq
   (A΀ A  ((
  ! 

  (A΀ A  ((
  ! 
 
Aj$   
# Ak"$   (    ((
  ! A : 
  : 
   6 Aj    ׆    	 
׆  
 
 
 ׆ ! - 
!@@ - 

  AqA G! 

A!  Aq
 @ ( " - 
Aq
   (A΀ A  ((
  ! 

  (A΀ A  ((
  ! 
 Aj$   
# Ak"$    (    ((
  : 
   6  E: 
 A 6 Aj  膀 !  - 
!@@  ( "
  AqA G! 

A!  Aq
  (!@ AG
  - 
AqE
  - 
Aq
 A!  (A΀ A ((
  

 (A΀ A ((
  ! 
 Aj$   
7 (A΀ A ((
  !  A :    :    6 
   (   ((  
- @  -  
  Aǽ΀ Aǆ 
 A̽΀ Aǆ 
# Ak"$ A!@ ("A" ("("  
 @@ 
 A !A !

A !	A  k!
A !  !
 !
@@ 
 
j!
A !@@ 
 j"-  "AjAqAI
 A"F
 A F
 
 Aj"G
 
  
j!

 Aj!
  j!
@@@@ ,  "AL
  Aq!

 
-  A?q! Aq! Aj!
@ A_K
  At r!

 At 
-  A?qr! Aj!
@ ApO
   A
tr!

 
-  ! Aj!
 At A?qr AtA qr"A G
  
!

 Aj Aӆ @@ - AF
  -  - kAqAF
  	 
K
@ 	E
 @ 	 I
  	 F


   	j,  A@H

@ 
E
 @ 
 I
  
 
j


   j j,  AL

    	j  	k j (
"  
@@ - AG
   (   E


  Aj - "
j -  
k   

A!@ AI
 A! AI
 AA AI!
  j j!	
A!@ AI
 A! AI
 AA AI!
  j j!

A!


-- Chunk 211 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31501-31650
 
 
k"




    	  jAн΀   
@ 	 K
 A !@ 	E
 @ 	 I
  	! 	 F


 	!   	j,  A@H

@ 
 A !

@  I
  !	  F


 !	   j,  AJ

    	 A΀   
    j  k (
  
  A"   !
 Aj$  
         
     ǆ 
# Ak"$ A!@ ("A' ("("  
  Aj  ( Aӆ @@ - AG
   (   E


  Aj - " j -   k (
  

 A'   !
 Aj$  
# Ak"$   ( ! @@ (  (rE
  A 6
@@@@  AI
   AI
  AO
   A?qAr:    A
vAr: 
   AvA?qAr: 
A! 

   : 
A! 

   A?qAr: 
   AvAr: 
A! 

   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A! 
  A
j  ǆ !

 (   ((  !
 Aj$  
# Ak"$  (! ( ! (
"!@ AqE
  Ar! 
  B7 
  Ar6
A !@  jA j  Aq"A0r A j A
I:   Aj!  AI!  Av!  E
 
@ Aj" AK
  AA΀ A  jAjA  k !   6
  6  6  Aj$   
  AA΀ Ć  
@@@@ AjA|q" F
   k"   I"E
 A ! Aq!A!@  j-   F
  Aj"G
 
  Axj"K


 Axj!A !
 AqAl!@  j"Aj(  s"Awj Asq (  s"Awj AsqrAxq
 Aj" M
 

@@@  k"
 A !

  j!A ! Aq!A!@@  j-   G
  !

  Aj"G
 

A !
  j!
   6   6 
A ! ! !@@@@@  AjA|q k"I
    kAq"k!  I
 !
@ E
 @@  j" j"Aj"	-   AqG
  Aj!

  	F
@ A~j"	-   AqG
  A~j!

  	F
@ A}j"	-   AqG
  A}j!

  	F
@ A|j"	-   AqG
  A|j!

  	F
@ A{j"	-   AqG
  A{j!

  	F
@ Azj"	-   AqG
  Azj!

  	F
@ Ayj"	-   AqG
  Ayj!

  	F
 Axr!
  j!

 AqAl!@@ " M
 Axj!  j"	A|j(  s"Awj Asq 	Axj(  s"	Awj 	AsqrAxqE
 

  K
 Aj! Aq!	@@ 
 A !

  j! Aj! -   	F


-- Chunk 212 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31651-31800
 

  A΀ Ć  
  A΀ Ɔ  
A!
   6   6 
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
@ 
 A 
 Aq!@@ AO
 A !A !

 A|q!A !A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

@ E
    j!@  ,  AJj! Aj! Aj"
 

 
# A0k"$ @@  - E
    - :  A6
 A΀ 6 B7$ A瀀 B   7 A B  Aj7  Aj6  ( ( Ajφ ! 

 A6
 A΀ 6 B7$ A瀀 B   7  Aj6  ( ( Ajφ ! 
 A0j$   
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  

	~@ 
   A 6<   68   64   60  A :   A;
   6  B 7 
A!A !@@@@@@@@@@@ AG
 A!A !

A!	A !
A!
A !A!@ 
!
  
j"
 O
@@  	j-  Aq"	  
j-  "
O
  
 jAj"
 
k!A !

@ 	 
F
 A! 
Aj!
A ! 
!


A  Aj"
 
 F"	! 
A  	 
j!

 
 j"	 I
 
A!	A !A!
A !A!@ 
!
  j"
 O
@@  	j-  Aq"	  
j-  "
M
  
 jAj"
 k!A !

@ 	 
F
 A! 
Aj!
A ! 
!

A  Aj"
 
 F"	! 
A  	 
j!

 
 j"	 I
 
 
!
     K"
"
I
   
"
 
j" 
I
  K
@@   
j 
 E
  
  
k"K!
 Aq!
@@ AjAO
 A !
B !

 A|q!	A !
B !@B  
j"Aj1  B Aj1  B Aj1  B 1   ! 	 
Aj"
G
 

 
  
!	@ 
E
   
j!@B 1   ! Aj! 
Aj"

 

 	Aj!
A!
 
!A!

A!A !A!	A !@@ 	"
 j" O
  k 
Asj"	 O
 As j k"
 O
	@@  	j-  Aq"	  

-- Chunk 213 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31801-31950
j-  "
O
  Aj"	 k!A !

@ 	 
F
  
Aj!	A !A! 
!

A  Aj"	 	 F"
! 	A  
 
j!	
  
G
 

A!A !A!	A !@@ 	"
 j" O
  k 
Asj"	 O
 As j k"
 O

@@  	j-  Aq"	  
j-  "
M
  Aj"	 k!A !

@ 	 
F
  
Aj!	A !A! 
!

A  Aj"	 	 F"
! 	A  
 
j!	
  
G
 

     Kk!@@ 

 B !A !
A !


 
Aq!	A !
@@ 
AO
 B !A !


 
A|q!A !
B !@B  
j"Aj1  B Aj1  B Aj1  B 1   !  
Aj"
G
 

 	E
   
j!@B 1   ! Aj! 	Aj"	
 

 !
   6<   68   64   60   6(   
6$   6   A 6
   
6   6   
6   7  A6 
 
 A΀ ņ  
 
 A΀ ņ  
 
 A΀ Ɔ  
 
 A΀ ܆  
  A΀ Ɔ  
 	 A΀ ņ  
 
 A΀ ņ  
 	 A΀ ņ  
 
 A΀ ņ  
@ ("E
  ( !A !@@ Aj!@@  j-  ""AL
  !

@@@@@@@@@@@ A΀ j-  A~j 

  jA΀   I-  AqAG

 Aj!


  jA΀   I,  ! A~j
  jA΀   I,  ! A~j
 A`qAG
	

 AJ


@ AjAqA
I
  A~qAnG
 A@N


 A@N


 AjAqAK
 A@N


 A jAqA0O


 AJ

  Aj"jA΀   I-  AqAG
  Aj"jA΀   I-  AqAG
 Aj!

  Aj"jA΀   I-  AqAG
 Aj!
 !  I
 

   6   6    k6   j6     k6
    j6
  A 6 
# Ak"$   -  !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Aq"Av! AO
 
@  Aj"AM
  AA΀ Ć  
 AA΀ A   jAjA   k !  Aj$   
	~# A k"$   6
  6@@@ AI
 A!@  , AJ
 A!  , AJ

-- Chunk 214 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:31951-32100
   , AJ!
   Aj"j,  AL
  6   6A!A΀ !

  6   6A !A!

   A     
  6
  6@@@@@  K
 @  K
   K
@@ E
   O
    j,  A@H

 !
  6  !@  O
 A  A}j"  K" Aj"K
@  F
    j   j"k!@   j"	,  AL
  Aj!

  F
 @ 	Aj",  AL
  A~j!

  F
 @ 	A~j",  AL
  A}j!

  F
 @ 	A}j",  AL
  A|j!

  F
  A{j!
  j!
@@ 
   !

@  O
    j",  AJ


  G
   j!
  F
@@@@ ,  "AJ
  - A?q!  Aq! A_K
 At  r!

  Aq6$A!

  At - A?qr! @ ApO
    A
tr!

  At - A?qr AtA qr"A F

  6$A! AI
 A! AI
 AA AI!
  6(   j6, A64 A΀ 60 B7< Aځ B "
 Aj7h  
 Aj7` A܁ B  A(j7X A݁ B  A$j7P A瀀 B  A j7H  A j68 A0j Æ  
 !
  6( A64 A΀ 60 B7< Aځ B "
 Aj7X  
 Aj7P A瀀 B  A(j7H  A j68 A0j Æ  
 A64 A΀ 60 B7< Aځ B "
 Aj7`  
 Aj7X A瀀 B "
 A
j7P  
 Aj7H  A j68 A0j Æ  
  A΀ ܆  
 ކ  
        
   ) A  
A!@@ E
   Atj!  AqAv!	A !
  Aq!
@ Aj!
 
 - "j!
@ -  " 	F
   	K
 
!
 
! 
 F


@@@ 
 
K
  
 K
  
j!@ E
 Aj! -  !
 Aj! 
 
G
 
A !

 
 
A΀ ܆  
 
 A΀ Ɔ  
 
!
 
! 
 G
 

 E
   j!
  Aq!A!@ Aj!
@@ -  ""
A H
  
!

@ 
 
F
  
A qAt - r! Aj!

A΀ ކ  
  k"A H
 As!  
G
 

 Aq
# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Aj!  Aq"Av! AO
 
@  Aj"AM
  AA΀ Ć  
 AA΀ A   jAjA   k !  Aj$   
~A !@@@@@@@  
A! -  AUj
@ -  A+G

-- Chunk 215 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32101-32250
  Aj! A
I! Aj"! 


 ! AK

A !@@ -  APj"A	M
 A!

 Aj!  A
lj! Aj"
 


A !@ -  APj! B
~"B 
@ A
I
 A!

@ " j" O
 A!

 Aj! Aj"
 

   6  A :  
AA A
I!
   :   A:  
~# A k"$ @@@@@@@@@ A[jA\M
 @@@@  
  A : 


 -  "AUj
 -  !
 AqA+G
 Aj! Aj!@ A	K
  AI

 
A !

 A΀ ͆  
 ! 
A !

@ AM
  !

 ! AI

@@@ A
K
 A ! !@  ~"B 
 -  APj" O
 " j" I
 Aj! Aj"
 


A ! !@  ~"B 
@ -  "APj"A
I
 A A r"Aj"  AjI" O

 " j" I
 Aj! Aj"
 


 -  "APj!@@@ A
I
  A%O
 A
I
A A r"Aj"  AjI!
  O

  A: 

 A 6 A6
 A΀ 6 B7 AjA΀ Æ  
  A: 

@ A
K
 A !@ -  APj" O
 Aj!   lj! Aj"
 


A !@@ -  "	APj"A
I
 A 	A r"Aj"	 	 AjI" O

 Aj!   lj! Aj"
 

   6A !

A!  A: 

A!
   :   A j$ 
     A
 
~# A k"$ @@@@@@@@@ A[jA\M
 @@@@  
  A : 


 -  "AUj
 -  !
 AqA+G
 Aj! Aj!@ AK
  AI

 
B !

 A΀ ͆  
 ! 
B !

@ AM
  !

 ! AI

 !@@@ A
K
 B !@ Aj B  B   ) B R
 -  APj" O
 )" |" T
 Aj! Aj"
 


B !@ Aj B  B   )B R
 )!@ -  "	APj"A
I
 A 	A r"Aj"	 	 AjI" O

  |" T
 Aj! Aj"
 



-- Chunk 216 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32251-32400
 -  "APj!@@@ A
I
  A%O
 A
I
A A r"Aj"  AjI!
  O

  A: 

 A 68 A6, A΀ 6( B70 A(jA΀ Æ  
  A: 

 !@ A
K
 B !@ -  APj" O
 Aj!  ~ |! Aj"
 


B !@@ -  "	APj"A
I
 A 	A r"Aj"	 	 AjI" O

 Aj!  ~ |! Aj"
 

   7A !

A!  A: 

A!
   :   A j$ 
     A
 
~~# Ak"$ @@@@@@@@@@ A[jA\M
 @@@@  
  A : 


 -  "AUj		
 -  !
 AqA+G
 Aj! Aj!@ A!K
  AI

 E


 A΀ ͆  
 ! 

B !B !

@ A M
  !

 ! AI

@@@ A
K
  A j!B !B !@ A j B  "	B   A j B  	B   )PB R ) " )H|"	 Tr
 -  APj" O
 )X"
 |" 
T" 	 |" 	T  
Z
 Aj! Aj"
 


 A j!
B !B !@ A(j B  "	B   A8j B  	B   )0B R 
) " )(|"
 Tr
 )8!	@ -  "APj"A
I
 A A r"Aj"  AjI" O

 	 |" 	T" 
 |" 
T  	Z
 Aj! Aj"
 


 -  "APj!@@@ A
I
  A%O
 A
I
A A r"Aj"  AjI!
  O

  A: 

 A 6x A6l A΀ 6h B7p A jA΀ Æ  
  A: 

@ A
K
  A j!B !B !@ -  APj" O
 Aj   B   Aj! )  )" |" T|! Aj"
 


 Aj!
B !B !@@ -  "APj"A
I
 A A r"Aj"  AjI" O

 Aj   B   Aj! 
)  )" |" T|! Aj"
 

   7  Aj 7 A !

A!  A: 

A!
   :   Aj$ 
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
C# A k"$  A 6 A6
 A΀ 6 B7 Aj  Æ  
~# A0k"$ A'!@@  B Z
   !

A'!@ A	j j"A|j    B "B ~}"AqA n"AtA΀ j/  ;   A~j  A lkAqAtA΀ j/  ;   A|j!  B/V! !  
 

@ "A M
  A	j A~j"j " AqA n"A lkAqAtA΀ j/  ;  
@@ A
I
  A	j A~j"j AtA΀ j/  ;  

 A	j Aj"j A0r:  
  AA  A	j jA' k ! A0j$  
# Ak"$   ( ! A !@  jA j  Aq"A0r A7j A
I:   Aj!  AI!  Av!  E
 

-- Chunk 217 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32401-32550
@ Aj" AM
   AA΀ Ć  
 AA΀ A  jAjA  k !  Aj$   
~# Ak"$   ) !A ! @   jA j Aq"A0r A j A
I:    Aj!  BT! B! E
 
@  Aj"AM
  AA΀ Ć  
 AA΀ A   jAjA   k !  Aj$   
~# Ak"$   ) !A ! @   jA j Aq"A0r A7j A
I:    Aj!  BT! B! E
 
@  Aj"AM
  AA΀ Ć  
 AA΀ A   jAjA   k !  Aj$   

  (A΀ A ((
  
3 @  A
tAxI
 AAA΀ ņ  
  A I  AjA!Ir
@@ AO
   !

  A   kAq"j!@ E
   ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@@  j"	AqE
  AH
 	At"Aq! 	A|q"
Aj!A  kAq! 
( !@   v ( " tr6  Aj! Aj" I
 


 AH
  	!@  ( 6  Aj! Aj" I
 

 Aq! 	 j!
@ E
   j!@  -  :   Aj! Aj" I
 

  
@@@@   k O
   j!   j!@ AO
   !

 A|q!A  Aq"k!@ E
   jAj!@ Aj" -  :   Aj!  I
 

   k"	A|q"k!@  j"AqE
  AH
 At"Aq! A|q"
A|j!A  kAq! 
( !@ A|j"  t ( " vr6  A|j!  I
 


 AH
 	 jA|j!@ A|j" ( 6  A|j!  I
 


@@ AO
   !

  A   kAq"j!@ E
   ! !@  -  :   Aj! Aj" I
 

   k"	A|q"j!@@  j"AqE
  AH
 At"Aq! A|q"
Aj!A  kAq! 
( !@   v ( " tr6  Aj! Aj" I
 


 AH
  !@  ( 6  Aj! Aj" I
 

 	Aq!  j!
 E
  j!@  -  :   Aj! Aj" I
 


 	Aq"E
 A  kj!  k!
 Aj!@ Aj" -  :   Aj!  I
 

  
@@ AO
   !

  A   kAq"j!@ E
   !@  :   Aj" I
 

   k"A|q"j!@ AH
  AqAl!@  6  Aj" I
 

 Aq!
@ E
   j!@  :   Aj" I
 

  
JA !@ E
 @@  -  " -  "G
  Aj!  Aj! Aj"E

 

  k!
 
      
~~# A k"$ @@@@@ P
  P

B !  T  T  Q
 P
 Aj   y yk"A q B A?q! Aj) !	 )!
B !@@  	}  
T}"
B S
   !  
}" T 
 T 
 Q
 
!
 
B 	B?!
 B! 	B!	
 

@@@@@ P
   T
  Q
   "
 ~}!

-- Chunk 218 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32551-32700
 BZ
 
B  B "	 	 "	 ~}B  B"  "
 ~}! 	B  
! 	B  
!
B !


   " ~}!B !


   " ~}!B !
B!


  T 
 T 
 Q
 B? B!	 B?!
B!B !@@@ 
 	}  
T}"B S
   
}!  ! P
 !

 
B 	B?!
 B! 	B!	
 

  "	 !  	 ~}!B !


   A? y"	 y"
kA j 
 	Q" B A?q!
 Aj) !	 ) !
B !@@@  	}  
T}"B S
   
}! 
 ! P
 !
 
B 	B?!
 
B!
 	B!	
 

  "	 !  	 ~}!B !


B !

 !

B !

   7   7   Aj 
7    
7 A j$ 
K# A k"$        ) !   Aj) 7   7  A j$ 
      
W~@@ A q
  E
  A?q" A  kA?q!  !

  A?q!B !
   7    7
n~   B" B"~" B " ~"  B "	~|"B |"
7     	~  TB  B | 
 T|  ~  ~||7
      
      

 A 
denomamountblocktransactioncontractheighttimechain_idsenderfundsaddressindex/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs   L  m   9  
   L  m        ruealse L  m   a     ulladmintype_urlsgrant_configsfee_confignew_adminmsg_type_urlgrant_configauthz_granterauthz_granteegranteeparamscoinsdisplay_urlredirect_urlicon_urldescriptionauthorizationoptionalallowanceexpirationtype_urlvalue/Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.feegrant.v1beta1.rs        
   BasicAllowancespend_limitexpirationPageResponsenext_keytotal       
          
   PeriodicAllowancebasicperiodperiod_spend_limitperiod_can_spendperiod_reset         
       +   
   AllowedMsgAllowanceallowanceallowed_messages    K   
   CosmosMsgbankcustomstargatetype_urlvalueanyibcwasmgovWeightedVoteOptionoptionweightAnyMsgGovMsgvoteproposal_idvote_weightedoptionsBankMsgsendto_addressamountburnWasmMsgexecutecontract_addrmsgfundsinstantiateadmincode_idlabelinstantiate2saltmigratenew_code_idupdate_adminclear_adminVoteOptionyesnoabstainno_with_veto/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/iter/traits/accum.rs U         invalid tag value: 0invalid key value:       invalid varint/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.1/src/encoding.rsJ f   \      J f   b      J f   h      J f   v      J f   |      J f         J f         J f        J f   *     J f   
  	   J f   $  	   invalid wire type value:    `    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tendermint-proto-0.39.1/src/google/protobuf/any.rs |   3       Coindenominvalid base64:        Coindenomamount 8    =    WasmQuerysmartcontract_addrmsgrawkeycontract_infocode_infocode_id/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/errors/std_error.rs    t          t          t         called `Result::unwrap()` on an `Err` value    (      	   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/exports.rs x k                    
   
   
   
                                                        
   
   
                 x k         x k        okerror  t         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/keys.rs 	 k   H          
      !   "   #   a Display implementation returned an error unexpectedly            $   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs 
 K   
     ErrorOverflowVerificationErrsource  %         &   backtrace             '   RecoverPubkeyErr(         )   GenericErr      
      *   InvalidBase64InvalidDataSizeexpected          +   actualInvalidHexInvalidUtf8NotFoundkindParseErrtarget_typeSerializeErrsource_type             ,   DivideByZero           -   ConversionOverflow            .   invalid Uint128 '' -    D
    U
    OverflowErroroperation            /   DivideByZeroErrorAddSubMulPowShrShlConversionOverflowError            0             1   EmptyNotMultipleAggregation           2   BatchErrInvalidHashFormatInvalidSignatureFormatInvalidPubkeyFormatInvalidRecoveryParamInvalidPointUnknownHashFunctionPairingEquality          3   UnknownErrerror_code          4   NotMultipleG1NotMultipleG2UnequalPointAmountgrant_configs        
   contracts/treasury/src/query.rs 
          fee_config     L 
   admin      d    params     x    authz grant not found, msg_type:     !   authz grant has no authorizationauthz grant did not match configinvalid allowance type:     allowance unsetconfig mismatchunauthorized  
 
 
 
 
 
 
   
      
 
 
 GrpcQuerypathdataQueryRequestbankcustomdistributionstargateibcwasmgrpcDistributionQuerydelegator_withdraw_addressdelegator_addressdelegation_rewardsvalidator_addressdelegation_total_rewardsdelegator_validatorsQuerier contract error:    E    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/errors/std_error.rsh t   l      Querier system error:       Serializing QueryRequest:   
    not implemented/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/traits.rs   ? j   
  	   ? j     	   ? j     	   ? j      	   ? j      	   ? j   +  	   ? j      	   Addr/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/iter/traits/accum.rs     U         invalid tag value: 0invalid key value:      invalid varint/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.1/src/encoding.rs f   \       f   b       f   h       f   v       f   |       f          f          f         f   *      f   
  	    f   $  	   invalid wire type value:        /Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/xion/xion.v1.rs     y      
   AuthzAllowanceallowanceauthz_grantee/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tendermint-proto-0.39.1/src/google/protobuf/any.rs |   3       MultiAnyAllowanceallowances   y      
   ContractsAllowancecontract_addresses/cosmos.feegrant.v1beta1.BasicAllowance/cosmos.feegrant.v1beta1.PeriodicAllowance/cosmos.feegrant.v1beta1.AllowedMsgAllowance/xion.v1.AuthzAllowance/xion.v1.ContractsAllowance/xion.v1.MultiAnyAllowanceblocktransactioncontractheighttimechain_idsenderfundsaddressTransactionInfoindex       cosmwasm_std::addresses::Addrtype: ; key:           treasury::grant::GrantConfigtreasury::grant::FeeConfigtreasury::state::Params             :   invalid tag value: 0invalid key value:  `    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.1/src/encoding.rs  | f   e     delimited length exceededbuffer underflowrecursion limit reachedunexpected end group taginvalid varintinvalid wire type:  (expected )   Z    m 
   x    | f   \      | f   b      | f   h      | f   v      | f   |      | f         | f         missing field ``        duplicate field `   $        unknown variant ``, there are no variants   H    Y    `, expected H     
   VarintSixtyFourBitLengthDelimitedStartGroupEndGroupThirtyTwoBitcannot advance past `remaining`:  <=  !        /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.1/src/bytes.rs   b   ;  	   invalid wire type value:                   ;   <   =   Paramsdisplay_urlredirect_urlicon_url      
      
      
         IbcQueryport_idlist_channelschannelchannel_idcosmwasm_std::addresses::Addrcw2::ContractVersioncosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>treasury::state::Paramsalloc::vec::Vec<alloc::string::String>treasury::grant::FeeConfigcosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>treasury::grant::GrantConfigcosmwasm_std::query::QueryRequestcosmwasm_std::types::MessageInfotreasury::msg::ExecuteMsgtreasury::msg::InstantiateMsgtreasury::msg::QueryMsgcosmwasm_std::types::EnvEmptyBankQuerysupplydenombalanceaddressall_balancesdenom_metadataall_denom_metadatapagination/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/prefix.rs  
 m   <   
   ?         @   A   B   C   D   
      E   F   #   a Display implementation returned an error unexpectedly            G   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs 
 K   
     Errorinvalid Uint64 '' -            Durationsecondsnanosadmin      <    fee_config     P 
   create_treasury_instancegrant_configs       
   updated_treasury_adminold adminnew adminupdated_treasury_grant_configmsg type urloverwrittenfalsetrueremoved_treasury_grant_configupdated_treasury_fee_configparams    9     updated_params/cosmos.feegrant.v1beta1.MsgGrantAllowance/cosmos.feegrant.v1beta1.Query/Allowance/cosmos.feegrant.v1beta1.MsgRevokeAllowance/cosmos.authz.v1beta1.Query/Grantsrevoked_treasury_allowancegranteeSubMsgidpayloadmsggas_limitreply_onReplyOnalwayserrorsuccessnever            H   I   J   InstantiateMsgadmintype_urlsgrant_configsfee_config !    ! 	   ! 
   ! 
   ExecuteMsgupdate_adminupdate_grant_configremove_grant_configupdate_fee_configdeploy_fee_grantrevoke_allowanceupdate_paramswithdraw  ! 
   !    !    "    "    %"    5" 
   B"    new_adminmsg_type_urlgrant_config   " 
   authz_granterauthz_granteegranteeparamscoinsgrant_config_by_type_urlgrant_config_type_urls  "    "    ! 
   !    "    /Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.base.query.v1beta1.rs   <#    
   
   /Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.feegrant.v1beta1.rs #       
   PageRequestkeylimitreverseEventtypeattributesAttributevalueResponsemessageseventsdata/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/path.rs$ k   )   
   $ k   ,   !   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/errors/std_error.rs`% t         ContractVersioncontractversioncontract_info    & 
   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.1/src/bytes_mut.rs  
& f   @     
& f        invalid varint/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.1/src/encoding.rsinvalid wire type:  (expected ) '    +' 
   6'    & f   \      & f   b      & f   h      & f   v      & f   |      & f         & f         & f        & f   *     invalid string value: data is not UTF-8 encoded & f   $  	   recursion limit reachedVarintSixtyFourBitLengthDelimitedStartGroupEndGroupThirtyTwoBit  
& f   >     
& f   C     /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tendermint-proto-0.39.1/src/google/protobuf/any.rs( |   3       Anytype_url/Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.base.v1beta1.rs  /)       
   0.1.0      
      

-- Chunk 219 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32701-32850
      
   7( =( I( X( b( j( Timestampsecondsnanos/Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.base.query.v1beta1.rs  *    
   
   /Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.authz.v1beta1.rs*    S   
   QueryGrantsResponsegrantspaginationIbcMsgtransferchannel_idto_addressamounttimeoutmemosend_packetdataclose_channelIbcTimeoutblocktimestampIbcTimeoutBlockrevisionheight/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/iter/traits/accum.rs+ U         invalid tag value: 0invalid key value:  x,    invalid varint/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.1/src/encoding.rsinvalid wire type:  (expected ) -    - 
   &-    , f   \      , f   b      , f   h      , f   v      , f   |      , f         , f         , f        buffer underflow, f   *     , f   
  	   , f   (  
   VarintSixtyFourBitLengthDelimitedStartGroupEndGroupThirtyTwoBitinvalid wire type value: ?.    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tendermint-proto-0.39.1/src/google/protobuf/any.rs`. |   3       /Users/kehindefaleye/.cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/cosmos-sdk/cosmos.base.v1beta1.rs .       
   Grantauthorizationexpiration           K   L   M   GrantConfigdescriptionoptional  / 
   / 
   /    FeeConfigallowanceAnytype_urlvalue  	0    0       
      
      
    . . . !. +. 3. /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/iter_helpers.rs X0 s   
      N         O   P   Q   R   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/url-2.5.2/src/lib.rs  0 ^   
  
   0 ^   
  
   Error/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/vec/mod.rs   }1 L   
	  
   assertion failed: self.is_char_boundary(idx)/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs 2 K     	   assertion failed: self.is_char_boundary(new_len)2 K     
   assertion failed: self.is_char_boundary(at) 2 K     	   U   
      V   W   X   httpswssftpfile/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/url-2.5.2/src/parser.rs3 a   
     3 a     .   3 a     D   //file://   3 a   1  F   3 a   c  ;   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/url-2.5.2/src/lib.rs  3 ^   
  
   file:///3 a     7   3 a     4   3 a   y  
   3 a     1   
   x         :   4    called `Result::unwrap()` on an `Err` value            Y   3 a     :   3 a     5   3 a     =   3 a     &   3 a        3 a        3 a        3 a     
   localhost   3 a      A   3 a   B  &   3 a   4     3 a   6  
   3 a     4   3 a     
   -       -      
        3 a     $   3 a     4   3 a     $   %2e%2e%2e%2E%2E%2e%2E%2E%2e%2E  3 a     -   3 a   
  I   3 a   *  F   3 a   5  4   3 a   5  N   3 a   7  !   3 a   :  J              3 a   i  #   3 a   r  *   3 a   s  #   :/. 3 a   w     3 a     (   ://assertion failed: !self.serialization[scheme_end_as_usize..].starts_with("://")  3 a     
   /   3 a   w  
   3 a   k  "   /.  3 a   o     3 a   q  (   3 a   q  
   Programming error. parse_query_and_fragment() called without ? or # 3 a        3 a     1   
  P         P       3 a          P      3 a   O  W   3 ^        3 ^   
  
   empty hostinvalid international domain nameinvalid port numberinvalid IPv4 addressinvalid IPv6 addressinvalid domain characterrelative URL without a baserelative URL with a cannot-be-a-base basea cannot-be-a-base URL doesn’t have a host to setURLs more than 4 GB are not supported  [   
      \   ]   X   a Display implementation returned an error unexpectedly            ^   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs (: K   
     /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/str/pattern.rsError: O     7   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/url-2.5.2/src/host.rs : _   R   )              : _      )   []: : _                : _     
   : _   #     : _         a non-empty list of numbers : _   M  "   : _   O     : _   O     : _   V     : _   V  	   : _   {  
   : _     !   : _     	   : _     
   : _     ,   : _        : _        : _        : _     
   : _     
   : _     
             _   `   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/slice/index.rs < O     4   < O     2             a   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/vec/mod.rst= L     $   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/str/pattern.rs = O     7             b   assertion failed: self.is_char_boundary(n)/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs   j> K     
   j> K     
   j> K   W  $   assertion failed: self.is_char_boundary(start)  j> K   X  	   assertion failed: self.is_char_boundary(end)j> K   Y  	   c   
      d   e   X   Index out of bounds |?    /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/slice/sort.rs  ? N   ;     ? N   H  
   ? N   I  
   ? N   J  %   ? N     @   ? N     N   ? N     V   assertion failed: end >= start && end <= len? N   -     assertion failed: offset != 0 && offset <= len  ? N         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/idna-0.5.0/src/punycode.rs@ d   '      @ d   %   	   @ d   K   
   @ d   K      @ d         @ d   n   
   @ d   q      @ d   q      @ d   t       @ d         @ d         @ d      *   @ d      
   @ d         @ d         @ d         @ d         @ d   
     @ d   
  
   @ d        @ d     	   @ d   2  	   @ d     $   @ d   '  0   @ d   '  %   @ d   *     @ d   -  %   @ d      
   explicit panic  @ d   =     /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/str/pattern.rsassertion failed: self.is_char_boundary(new_len)/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs  C K     
   C O     7   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/idna-0.5.0/src/uts46.rs   D a   '      D a   :      D a   F   "   D a   F      D a   F   
   D a   D   
   D a   T     D a        D a     0          -     /     0     :     A      [     a      {   !     "     #     $     %      (     )      ,     -      [     \     ]     ^   2    4     7    9     ?    A                                                             %    &    7    8    9  3  x  :  y  ?  ~  A    O                                                     @    F    O    P    p    x    z    {    ~      Á                            
  0  O  `  P    s    t    u          W  A  Y  B  Z  C  `  D    E    G    H    I    J    K    L    O    P    Q    R    T    U    V    W    X    Y    Z    [  
  \  
  ]     ^  @  _  A  `  j  a  n  b  u  c  y  g    h    i    j    l    m    n     o    p    q  K  r  M  s    t    u    v    w    x    y     z  .  {  0  |  ?  }  @  ~  \    ^    `    k                                X	    `	    d	    f	    p	    q	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    	    
    
    
    

    
    
    
    )
    *
    1
    8
  Ƀ  :
  ʃ  <
    >
  ̓  C
  ΃  G
  σ  I
  Ѓ  K
  у  N
  ҃  Q
  Ӄ  R
  ԃ  Y
    _
  ۃ  f
  ܃  v
  ݃  w
  ރ  
  ߃  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    
    
    
    

    
     
    
    )
    *
    1
    2
    4
    5
    :
  	  <
  
  E
  
  G
  
  I
  
  K
    N
    U
    X
    \
    _
    d

-- Chunk 220 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:32851-33000
    f
    p
    r
    x
    
  
  
  
  
  
  
    
     
  !  
  "  
  #  
  $  
  %  
  (  
  )  
  *  
  +  
  ,  
  -  
  .  
  /  
  0  
  1  
  2  
  3  
  4  
  5  
  6  
  7  
  8  
  9  
  :  
  ;  
  <   
  =  

  >  
  ?  
  @  
  A  )
  B  *
  C  :
  D  =
  E  E
  F  F
  G  I
  H  J
  I  N
  J  U
  K  W
  L  X
  M  [
  N  `
  O  d
  P  f
  Q  p
  R  w
  S  
  T  
  U  
  V  
  W  
  X  
  Y  
  Z  
  [  
  \  
  ]  
  ^  
  _  
  `  
  a  
  b  
  c  
  d  
  e  
  f  
  g  
  h  
  j  
  k  
  l  
  m  
  n  
  o   
  p  

  q  
  r  
  s  
  t  E
  u  F
  v  I
  w  J
  x  O
  y  P
  z  T
  {  X
  |  _
  }  d
  ~  f
    p
    z
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        3    4    ;    ?    @    O    P    Z    \                                                                                         
    
  Ą    ń    Ƅ     Ǆ  *  Ȅ  5    :  ΄  >  τ  C  Є  D  ф  H  ҄  I  ӄ  M  Ԅ  N  Մ  R  ք  S  ׄ  W  ؄  X  ل  \  ڄ  ]  ۄ  i  ܄  j  ݄  m  ބ  q  ߄  s    z                                                                                                              J    P                          	    
    
    
       _    a         I    J    N    P    W    Z    ^    `      
    
    
             !    "    #    $    '    (    )    *    +    ,    -    .    /  [  0  ]  1  `  2  }  3    4    5    6    7    8    9    ?     @    A  m  B  o  C    D    E    F    G    H    I    J    K     L  
  M    N    O     P  5  Q  7  R  @  S  T  T  `  U  m  V  n  W  q  X  r  Y  t  Z    [    \    ]    ^    _    `    a    b    c    d    e    f     g    h    i  
  j    k    l    m     n  y  o    p    q    r    s     t    u     v  ,  w  0  x  <  y  @  z  A  {  D  |  F  }  n  ~  p    u                                         
    
         _    `    }                                                         L    P    Z    k    t    }                 
    8
    ;
    @
    J
    M
    ~

-- Chunk 221 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33001-33150
    
    
    
    
    
    
    
    
    
    
    
    
    
     
    ,
    k
  +  x
  ,  y
  -  
  .  
  S  
  T  
  U   
  V  
    
    
    
    
  P    Q    Y    Z    [  
  a     b  (  c  0  k  8  l  @  t  F  u  H  v  N  |  P  }  X  ~  `    h    ~          ·                                                        
     
                              $   
  '   
  (   
  /     0      3   !  8   &  <   '  ?   *  G   +  J   .  W   /  X   0  _   1  a   3  d   4  e   5  p   6  r   8  t   9     b     c     d     e     f     g     h   !  i  
!  t  !  u  !  v  !  w  !  x  !  {  !  |  !  ~  
!     !    /!    1!    =!    ?!    A!    E!    G!    J!    N!    !  ׈  !    !  ڈ  !  ۈ  !  ܈  !  ݈  !  ވ  ,"    1"    `"    a"    n"    p"    )#    +#    '$    @$    K$    `$    $    $  	  $  g  
*  h  
*  i  t*  j	  w*  m  *  n  *  o  t+  p  v+  q  +  r  +  s   ,  t	  0,    _,  	  e,    g,  	  s,    u,    v,    |,  	  ,  "  ,  #  ,  $
  ,  '  ,  (
  ,  *  ,  +   -  ,  &-  -
  (-  /  --  0  .-  1  0-  2  h-  3  o-  4
  q-  6  -  7  -  8  -  9  -  :  -  ;  -  <  -  =  -  >  -  ?  -  @  -  A  -  B  -  C  -  D  -  E  -  F  -  G  -  H  -  I   .  J  /.  K  0.  L  S.  M  .  N  .  O  .  P  .  Q  .  R  .  S  .  T   /  U
  /  +   0  ,
  0  /  0  0  0  1  *0  2  .0  3  60  4
  =0  ;  @0  <  A0  =  0  >  0  ?  0  @
  0  B  0  C
  0  E  0  F   1  G  1  H  01  I
  1    1  
  1    1    1    1     2  
  H2    P2  
   4    M     N                     Ǥ    Ф             
        ,    @  
  m    p    t    ~  
                                    "    /  (  2  )  q  h  y  i    w    x    y    |    }              §    ˧                    (    ,    -    0    :    @    t    x      Î  ƨ  Ď  Ψ  Ŏ  Ш  Ǝ  ڨ  ǎ    Ȏ    Ɏ        ̎  .  ͎  0  Ύ  T  ώ  _  Ў  }  ю    Ҏ    ӎ  Ω  Ԏ  ϩ  Վ  ک  ֎  ީ  ׎    ؎    َ     ڎ  7  ێ  @  ܎  N  ݎ  P  ގ  Z  ߎ  \    `    w    z    ê    ۪    ު                            	                     '    (    /    0    [    `    i    j    l    p      O    P    Q    R    S    T     U    V    W    X    Y    Z     [    b  	  c    h    i    l    m  #  {  %  |  '  ~  *    ]    _    n    p      -     .    3    4    5    :  
  ;  P  n  R  o  V  p  Z  q  ^  r  b  s  f  t  j  u  n  v  r  w  v  x  z  y  ~  z    {    |    }    ~                                                                                                                                               <  ݒ  >  ޒ  @  ߒ  P    Q    S    X    Z    _    a    b    d    f    g    i    j    l    n    o    q    s    v    x    |    ~              	    
                        
    F    G    U     V    W    `     a  0  b  3  e  5  f  E  v  G  w  I  y  M  z  P  {  R  }  T  ~  l    p                                                                                                                  Ó    ē    œ    Ɠ    Ǔ    ȓ    ɓ    ʓ    ˓    ̓    ͓    Γ    ϓ                                                       
    
    '    (    ;    <    >    ?    N  Ô  P  Ĕ  ^  Ŕ    Ɣ    ǔ    Ȕ   ɔ   ʔ  4 ˔  7 ̔   ͔   Δ   ϔ   Д   є   Ҕ   Ӕ   Ԕ   Ք   ֔   ה   ؔ   ٔ   ڔ   ۔    ܔ    ݔ  $ ޔ  - ߔ  A   B   J   K   P   {                            (                >   ?   @    A  ( B  0 C  d D  o E  p F    G  7 H  @ I  V J  ` K  h L    M   N   O  
 Q  6 R  7 S  9 T  < U  = V  ? W  V X  W Y  ` Z  w [   \   ]   ^   _   `   a   b   c   d   	 e  	 f  
	 g  	 h   	 i  :	 j  ?	 k  @	 l  	 m  	 n  	 o  	 p  	 q  	 r  	 s   
 t  
 u  
 v  
 w  

 x  
 y  
 z  
 {  
 |  6
 }  8
 ~  ;
   ?
   @
   I
   P
   Y
   `
   }
   
   
   
   
   
   
   
   
   
    
   6
   9
   @
   V
   X
   `
   s
   x
   
   
   
   
   
   
    
   I
   
   
 ԕ  
 Օ  
 ֕  
 ו   
 ؕ  (
 ٕ  0
 ڕ  :
 ە  ` ܕ   ݕ   ޕ   ߕ                     
   '   (   0   Q   Z                      G   N   R   f   p                                   5   6   @   D   H   P   t   v   w 	   
   
   
   
                              8   >   ?       
          !   "   #   $   %   &   '   (   )    *   +   ,  
 -   .   /   0  ) 1  * 2  1 3  2 4  4 5  5 6  : 7  ; 8  E 9  G :  I ;  K <  N =  P >  Q ?  W @  X A  ] B  d C  f D  m E  p F  u G    H  K I  P J  Z K  \ L  ^ N  b O   P   Q   S   T   U   V   W   X   Y   Z   [    \  A ]  D ^  E _  P `  Z a  ` b  m c   d   e   f   g    h   i  
 j  , k  0 l  : m  @ n    o  ; p  < q   r                 	   
   
               6   7   9   ;   D   G   P   Z                               ?   G   H   P                      
   	
   

   7
   8
   A
   F
   P
   Z
   m
   p
 Ö  r
 Ė  
 Ŗ  
 Ɩ  
 ǖ  
 Ȗ  
 ɖ   
 ʖ  
 ˖  
 ̖  

 ͖  

-- Chunk 222 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33151-33300

 Ζ  7
 ϖ  :
   <
 Җ  >
 Ӗ  ?
 Ԗ  H
 Ֆ  P
 ֖  Z
 ז  `
 ؖ  f
 ٖ  g
 ږ  i
 ۖ  j
 ܖ  
 ݖ  
 ޖ  
 ߖ  
   
   
   
   
   
   
                       #    $   o$   p$   u$   $   D%    0   /4    D   GF    h   9j   @j   _j   `j   jj   nj   pj   j    j   j   j   j    k   7k   @k   Dk   Fk 	  Pk 
  Zk 
  [k 
  bk 
  ck   xk   }k   k   @n   `n 2  n 3  n 4   o 5  Ko 6  Oo 7  o 8  o 9  o :  o ;  o <  o =  o >  o ?  o @   p A   B    C  ֌ D    E  	 F    G   H  P I  S J  d K  h L  p M   N    O  k P  p Q  } R   S   T   U   V   W   X   Y   Z   [    \   ]    ^  ' _  ) `  ^ a  e h  s i  { j   k   q   r    s  F t   u   v    w  W x  ` y  y z    {      
   
   
       !  
   
   G   J       
   G   H  
      G   I          +   ,   9   :   ;    m    n  7 o  ; p  m q  u r  v s   t   u   v   w   x   y   z    {   |   }   ~     "   #   %   &   +       -   0   >   @   J   N   P                                    "   L   P   Z   ^   `   q         >       %   '   <   B   C    G 
  U   W 
  e 
  g 
   T   U
   p   q   r    s  , t  0 u   v   w   x   y   z   {   |   }   ~   
  
    
  P ʜ  j 
  m Μ   Ϝ   М   ќ   Ҝ    
   ֜   
  <   @ 
  I 
  P 
  R   `   f                          t       
   
   
      
     !  H "  P #  Z $  ` %   &   '   (   )   *    +  y ,  z -   .   /  T 0  ` 1  n 2  p 3  u 4  x 5  { 6   7   8   9   :   ;   <   =   >   ?   @    A   B   C   D   E
   O     P  ަ Q    R  5 S  @ T  
 U    V   W   X   Y    Z
  1   4 
  E   G 
  j   l 
            
  ,   . 
  F   H 
  ]   _ 
   O    P  
 n     o  K p    q   r                             	 
 
 
 
                                             
    ! " # &        ( +     , 1 6    ; = ? A C E G I K M O Q S U W Y [ ] _ a c e g    i k m o q s u w            y     {     }                                                                                                                                                                                                                                                                                                                          
    
        
    
     "$    &    (    *,    .    0    24    68:    <    >@    B    DGIK    M    O    Q    S    U    W    Y    [    ]    _    a    c    e    g    i    k    mo    qsu    w    y    {    }                                                                                                                                         	                     
                                                                  # 

          

 "$&(*& ,.024   68:<>@BDF    6    H&:F<2    J    L    N    P    R    T    V    X    Z    \    ^    `    (46    &    b    6d    fhjlnprtvxz|~                                                                                                                                           
    
                                
    
         "       $    &    (    *    ,    .    0    2    4    6    8    :    <    >    @    B    D    F    H    J    L    N    P    R    T    V    X    Z    \    ^    `    b    d    f    h    j    l    n    p    r    t    v    x    z    |    ~                                                                                                                                                                                                                                                                                       

                                                                                           "(   .                                                                   4       :                                             @FL       R                                                                                                                                                                                               X^                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             d                                                                  j                                   pv                  |                                                                                    		                                                                                                                                                                                                                                                           	
                                                                                                                                                                                                                                                                                                                                                                                         
!$'*-0369<?BEHKNQTWZ]`cfilorux{~                             G        
   	 
 
 
 
                     
 
      
 

<>    
4<>         [   ".68 >&                                                                       
                        
         #    &    )    ,    /    2    5    8    ;    >    A    D    G    J    M    P    S    V    Y    \    _    b    e    h    k    n    q    t    w    z    }                                                                                        n    w                                                                                                     
    
                    
        "    %    (    +    .    1    4    7    :    =    @    C    F    I    L    O    RUX[^adg       jmpsvy       |                                          
                         

#(-

#(-27<AFKPU27<AFKPU    Z_c       glor_uux{       
                                #                                  	   	
		   	   	   		
	   	
                +	    ,	-	.	/	0	1	2	3	6	7	8	
 +	+ ! " ,	-	.	/	0	1	2	3	6	7	8	         
 
 
 
          9	            ;	>	 A	   D	G	   J	    
    
 M	         O	Q	T	       B       
 E           
  V	X	Z	\	    ^	2
2a	      	           d	i	n	t	y	~											 			 				 		
   
  			 				 		
   
              	         			   			               		            + ! " ,	-	.	/	0	1							 














"
%
)
-
1
5
9
=
A
E

-- Chunk 223 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33301-33450
I
M
   Q
T
W
Z
]
`
c
f
i
l
o
r
u
x
{
~










          	 
 
 
 
                       	 
 
 
 
             +	   

   


   
               























 


	









!
$
'
*
-
0
3
6
9
<
?
B
          E
    H
J
M
    O
    R
    U
        X
    [
    	  ^
`
b
    e
    h
    k
    n
    q
    t
    w
    z
    }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

-- Chunk 224 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33451-33600
    
    
       
    
    
                                      
                                                                                               
   
   










"
%
(
+
.
1
4
7
:
=
@
C
F
I
L
O
R
U
X
[
^
a
d
g
j
m
p
s
v
y
|











































 


	









!
$
'
*
-
0
3
6
9
<
?
B
E
H
K
N
Q
T
W
Z
]
`
c
f
i
l
o
r
u
x
{
~













-- Chunk 225 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33601-33750

































 #&),/258;>ADGJMPSVY\_behknqtwz}                           O
                                             


"%(+.147:=@   CFILORUX[^adgjmpsvy|      




"
              
 %*/49>CHMRW\afkpx   
 %*/47
:   =@BDFHJLNPRTVXZ\^adgjmpsvy|   



+
O

	



g

y
	


!%)-159>CHJMORUX[^adgjmpsvy|


		

	'	0?
K	T	]	f
r
~			

	
 	)	2	;
GV
b	k	t	}			
	

	"17	@	I	R	[	d
p	y			
			


		!	*
6<	E
QWf	osw{ 


 "%')+-/268:=@BDFILORUWY[]_bdfhknpsvy{~
      f+   	

!%)-27<AFKPUZ_dinsx}                                                                                                                                                                                                                                             
    
                    
        "    %    (    +    .    1    4    7    :    =    @    C    F    I    L    O    R    U    X    [    ^    a    d    g    j    m    p    s    v    y    y    |                                                                                                                                                                                                                                                                                                                                                            H
          

 #&),/258;>ADGJMPSVY\_behknqtwz}                                        




"%(+.147:=@CFILORUX[^adgjm~
psvy|Y 


	










!
$
'
*
-
0
3
6
9
<
?
B
E
H
y
K
N
Q
T
W
Z
]
`
@
c
f
i
l
o
r
u
x

-- Chunk 226 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33751-33900
{
~
























































 
#
&
)
,
/
2
5
8
;
>
A
D
G
J
M
P
S
V
Y
\
_
b
e
h

k
n
q
t
w
z
}






f






















    
    
    








{
    
    
    

    














-- Chunk 227 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:33901-34050


"
%
(
+
.

1
4
7
:
=
@
C
F
I
L
O
R
U
X
[
^
a
d
g
j
m
p
s
v

y
|



















   
























7

:



O



O
R

"
%(+.1
47:=@Cv
FI
L
ORUX[
^
a
d
g
jmpsv

y
|
             V	\	2	  	 
       
 ! % )    -    1 5    9 =    A E I M Q U Y ] a e i k m o q s u w y { }                                                       !!	!
!!!!
!!!%!)!-!1!5!9!=!A!E!I!M!Q!U!Y!]!a!e!i!m!q!u!y!}!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!""	"
""""
"!"%")"-"1"5"9"="A"E"I"M"R"W"\"a"f"k"o" s"  w"{" "  ""
!"!!""
!"!!%!!!!!!!!!!!!!"!""
""""I"""5""9"="  " "    "!!	!
!"
!)!-!1!5!9!A!E!I!M!Q!U!"Y!]!a!e!i!m!u!y!}!!!!!!!!!!!!!!!!!!"!!!!""	"
"""
"")"-"1"5"" " "
!"
!"Q!"""!!!
""5""""""##	#
####
#!#%#)#-#1#5#9#=#A#E#I#M#Q#U#"Y#]#a#e#"##	#
####
#!#%#)#-#1#5#9#=#A#E#I#M#Q#U#"Y#]#a#e#M#Q#U#"""q!E!I!M!M#Q#U#q!u!i#      m#s#y#######################$	$$$$!$'$-$3$9$?$E$K$Q$W$]$c$i$o$u${$$$$   $$$$$$$$$$$$$$$$$$$%
%%%
%#%)%/%5%;%A%G%M%9$E$S%Y%_%e%k%q%k%_%w%}%%%%q%$#%%   %%%%%%%%%%%!
&&         #&$&   '& (&)&*&-&          0&3&6&7	8	7&8&9&<&?&B&E&H&		K&N&Q&T&   W&X&	6&#&$&    '&)&(&0&7	8	7&8&9&<&Y&Z&[&2	\&]&^&6	   _&`&a&b&   c&f&j&    m&   p&s&w&z&~&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& &&&&&         (&&Y&`&a&Z&&7	8	[&2	#&\&&+	+ ! " ,	-	.	/	0	1	'& ]&6	^&)&b&          	 
 
 
 
             W&_&X&&6&          	 
 
 
 
             7&&8&&&&K&N&$&&&&&'''
'
'''RUX[^adgjmpsvy|''
'      

   
"%   (+.147   :=@   '!'#'
 %''')'   ,'/'2'5'8';'>'                                                                                                                                                                                 A'E'I'M'Q'U'Y']'a'e'i'm'q'u'y'}'''''''''''''''''''''''''              ''''''''((	(
((((
(!(%()(-(1(5(9(=(A(E(I(M(Q(U(Y(](a(e(i(m(                                                                                                                                                                                                                                                                                                                                             q(u(y(}((((((((((((((((((((((((((((((((())	)
))))
)!)%)))-)1)5)9)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              =)A)E)I)M)Q)U)Y)])a)e)i)m)q)u)y)}))))))))))))))))                                                                                                                                                                                                                                                                                                                                                                                                                                                      )))))))))))))))))**	*
****

-- Chunk 228 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34051-34200
*!*%*)*-*1*5*9*                                                                                                                                                                =*E*M*
Y*
e*
q*
}*
         ***
*
*
*
                                        	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                         	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                           	 
    
                             	 
 
 
 
                         	 
 
 
 
                       	 
 
 
 
                          	 
 
 
 
                           	 
 
 
 
                           	 
 
 
                            	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
                       	 
 
 
 
             **   

 "$&(*& ,.024&68:<>@B*

 "$&(*& ,.02468:<>@B* &(<42

 "$&(*& ,.024&68:<>@B*

 "$&(*& ,.02468:<>@B* &(<42

 "$&(*& ,.024&68:<>@B*

 "$&(*& ,.02468:<>@B* &(<42

 "$&(*& ,.024&68:<>@B*

 "$&(*& ,.02468:<>@B* &(<42

 "$&(*& ,.024&68:<>@B*

 "$&(*& ,.02468:<>@B* &(<42N   +	+ ! " ,	-	.	/	0	1	+	+ ! " ,	-	.	/	0	1	+	+ ! " ,	-	.	/	0	1	+	+ ! " ,	-	.	/	0	1	+	+ ! " ,	-	.	/	0	1	                                                                                                                                                ************++
++++++#+'+++/+3+7+;+?+C+G+K+O+S+W+                                &&&&   &&&&&&&&&&&&&&&&&&&&&&&[+ ]+_+   &&   &   &   &&&&&&&&&&   &&&&   &   &   &   &   &   &   &&&   &&   &   &   &   &       _+   &&   &   &&&&   &&&&&&&   &&&&   &&&[+   ]+   &&&&&&&&&&   &&&&&&&&&&&&&&&&&   &&&   &&&&&   &&&&&&&&&&&&&&&&&                                             a+c+e+g+i+k+m+o+q+s+   Q
T
W
Z
]
`
c
f
i
l
o
r
u
x
{
~




-- Chunk 229 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34201-34350







u+  |+             	 
 
 
 
             ~++w ++   +++   +         ++p   
+++

+++++
++++++3
++++++

++
+++++
++++   +	,	
,	,	
,	%,	.,	7,	@,	   I,L,                                                                                                                                                               +	+ ! " ,	-	.	/	0	1	                                      O,R,U,X,\,

_,b,e,h,
k,n,q,
u,x,{,~,,,+,,,,,
,:
,,,,+,,



,,,

,,,,,,,,,,,,,,,,,,,,,,
,,--"
-
-
-
----
--"-%-(-,-/-2-+5-8-;-?-C-F-I-L-O-R-   U-X-[-_-b-e-h-l-o-   
r-u-
x-{-~-------------------L-
----------------1
----
--7
...
.:

.....
..#.&.).,./.2.6.9.<.?.B.E.H.K.N.=
Q.T.X.[.^.a.C
d.g.j.m.p.s.v.y.O
|........F
.................
...........I

..... ///	/
/////
/!/$/'/*/-/0/3/6/:/=/A/   D/G/J/N/Q/T/X/\/_/b/e/h/k/n/%q/t/w/z/}//////////7//////://///@//g
//
//p
////   ///////000
0
00000
0 0#0'0+0.0205090<0
?0C0G0J0N0Q0U0X0[0^0a0d0g0k0o0s0-w0z0}0000000000$
000000
00000000000000000000s00000 1U11	1   
1111
1
11"1%1(1+1/1316191dg
<1@1C1F1I1L1P1T1W1Z1]1a1jd1h1l1o1r1u1y1|11111111111111111111111|11111111111111111122_	2k
2222z2                abcdefghijklmnopqrstuvwxyz  ̈ ̄23 ́μ ̧11⁄41⁄23⁄4àáâãäåæçèéêëìíîïðñòóôõöøùúûüýþssāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįi̇ijĵķĺļľl·łńņňʼnŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷÿźżžɓƃƅɔƈɖɗƌǝəɛƒɠɣɩɨƙɯɲɵơƣƥʀƨʃƭʈưʊʋƴƶʒƹƽdžljnjǎǐǒǔǖǘǚǜǟǡǣǥǧǩǫǭǯdzǵƕƿǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟƞȣȥȧȩȫȭȯȱȳⱥȼƚⱦɂƀʉʌɇɉɋɍɏɦɹɻʁ ̆ ̇ ̊ ̨ ̃ ̋ʕ̀́̓̈́ιͱͳʹͷ ι;ϳ ̈́ά·έήίόύώαβγδεζηθκλνξοπρστυφχψωϊϋϗϙϛϝϟϡϣϥϧϩϫϭϯϸϻͻͼͽѐёђѓєѕіїјљњћќѝўџабвгдежзийклмнопрстуфхцчшщъыьэюяѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯաբգդեզէըթժիլխծկհձղճմյնշոչպջռսվտրցւփքօֆեւاٴوٴۇٴيٴक़ख़ग़ज़ड़ढ़फ़य़ড়ঢ়য়ਲ਼ਸ਼ਖ਼ਗ਼ਜ਼ਫ਼ଡ଼ଢ଼ําໍາຫນຫມ་གྷཌྷདྷབྷཛྷཀྵཱཱིུྲྀྲཱྀླྀླཱཱྀྀྒྷྜྷྡྷྦྷྫྷྐྵⴧⴭნᏰᏱᏲᏳᏴᏵꙋაბგდევზთიკლმოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶჷჸჹჺჽჾჿɐɑᴂɜᴖᴗᴝᴥɒɕɟɡɥɪᵻʝɭᶅʟɱɰɳɴɸʂƫᴜʐʑḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕaʾạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿἀἁἂἃἄἅἆἇἐἑἒἓἔἕἠἡἢἣἤἥἦἧἰἱἲἳἴἵἶἷὀὁὂὃὄὅὑὓὕὗὠὡὢὣὤὥὦὧἀιἁιἂιἃιἄιἅιἆιἇιἠιἡιἢιἣιἤιἥιἦιἧιὠιὡιὢιὣιὤιὥιὦιὧιὰιαιάιᾶιᾰᾱὰ ̓ ͂ ̈͂ὴιηιήιῆιὲὴ ̓̀ ̓́ ̓͂ΐῐῑὶ ̔̀ ̔́ ̔͂ΰῠῡὺῥ ̈̀`ὼιωιώιῶιὸὼ ̔‐ ̳′′′′′‵‵‵‵‵!! ̅???!!?′′′′0456789+−=()rsa/ca/s°cc/oc/u°fnosmteltmאבגדfax∑1⁄71⁄91⁄101⁄32⁄31⁄52⁄53⁄54⁄51⁄65⁄61⁄83⁄85⁄87⁄81⁄iiiiiivviviiviiiixxixii0⁄3∫∫∫∫∫∮∮∮∮∮〈〉1011121314151617181920(1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)(20)(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)(k)(l)(m)(n)(o)(p)(q)(r)(s)(t)(u)(v)(w)(x)(y)(z)∫∫∫∫::======⫝̸ⰰⰱⰲⰳⰴⰵⰶⰷⰸⰹⰺⰻⰼⰽⰾⰿⱀⱁⱂⱃⱄⱅⱆⱇⱈⱉⱊⱋⱌⱍⱎⱏⱐⱑⱒⱓⱔⱕⱖⱗⱘⱙⱚⱛⱜⱝⱞⱡɫᵽɽⱨⱪⱬⱳⱶȿɀⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳬⳮⳳⵡ母龟一丨丶丿乙亅二亠人儿入八冂冖冫几凵刀力勹匕匚匸十卜卩厂厶又口囗土士夂夊夕大女子宀寸小尢尸屮山巛工己巾干幺广廴廾弋弓彐彡彳心戈戶手支攴文斗斤方无日曰月木欠止歹殳毋比毛氏气水火爪父爻爿片牙牛犬玄玉瓜瓦甘生用田疋疒癶白皮皿目矛矢石示禸禾穴立竹米糸缶网羊羽老而耒耳聿肉臣自至臼舌舛舟艮色艸虍虫血行衣襾見角言谷豆豕豸貝赤走足身車辛辰辵邑酉釆里金長門阜隶隹雨靑非面革韋韭音頁風飛食首香馬骨高髟鬥鬯鬲鬼魚鳥鹵鹿麥麻黃黍黑黹黽鼎鼓鼠鼻齊齒龍龜龠.〒卄卅 ゙ ゚よりコトᄀᄁᆪᄂᆬᆭᄃᄄᄅᆰᆱᆲᆳᆴᆵᄚᄆᄇᄈᄡᄉᄊᄋᄌᄍᄎᄏᄐᄑ하ᅢᅣᅤᅥᅦᅧᅨᅩᅪᅫᅬᅭᅮᅯᅰᅱᅲᅳᅴᅵᄔᄕᇇᇈᇌᇎᇓᇗᇙᄜᇝᇟᄝᄞᄠᄢᄣᄧᄩᄫᄬᄭᄮᄯᄲᄶᅀᅇᅌᇱᇲᅗᅘᅙᆄᆅᆈᆑᆒᆔᆞᆡ三四上中下甲丙丁天地(ᄀ)(ᄂ)(ᄃ)(ᄅ)(ᄆ)(ᄇ)(ᄉ)(ᄋ)(ᄌ)(ᄎ)(ᄏ)(ᄐ)(ᄑ)(ᄒ)(가)(나)(다)(라)(마)(바)(사)(아)(자)(차)(카)(타)(파)(하)(주)(오전)(오후)(一)(二)(三)(四)(五)(六)(七)(八)(九)(十)(月)(火)(水)(木)(金)(土)(日)(株)(有)(社)(名)(特)(財)(祝)(労)(代)(呼)(学)(監)(企)(資)(協)(祭)(休)(自)(至)問幼箏pte212223242526272829303132333435가나다라마바사아자차카타파하참고주의우五六七九株有社名特財祝労秘男適優印注項休写正左右医宗学監企資協夜3637383940414243444546474849501月2月3月4月5月6月7月8月9月10月11月12月hgergevltdアイウエオカキクケコサシスセソタチツテトナニヌネノハヒフヘホマミムメモヤユヨラリルレロワヰヱヲ令和アパートアルファアンペアアールイニングインチウォンエスクードエーカーオンスオームカイリカラットカロリーガロンガンマギガギニーキュリーギルダーキロキログラムキロメートルキロワットグラムグラムトンクルゼイロクローネケースコルナコーポサイクルサンチームシリングセンチセントダースデシドルトンナノノットハイツパーセントパーツバーレルピアストルピクルピコビルファラッドフィートブッシェルフランヘクタールペソペニヒヘルツペンスページベータポイントボルトホンポンドホールホーンマイクロマイルマッハマルクマンションミクロンミリミリバールメガメガトンメートルヤードヤールユアンリットルリラルピールーブルレムレントゲンワット0点1点2点3点4点5点6点7点8点9点10点11点12点13点14点15点16点17点18点19点20点21点22点23点24点hpadaaubarovpcdmdm2dm3iu平成昭和大正明治株式会社panaμamakakbmbgbcalkcalpfnfμfμgmgkghzkhzmhzghzthzμlmldlklfmnmμmmmcmkmmm2cm2m2km2mm3cm3m3km3m∕sm∕s2kpampagparadrad∕srad∕s2psnsμsmspvnvμvmvkvpwnwμwmwkwkωmωbqcccdc∕kgdbgyhahpinkkktlmlnloglxmilmolphppmprsrsvwbv∕ma∕m1日2日3日4日5日6日7日8日9日10日11日12日13日14日15日16日17日18日19日20日21日22日23日24日25日26日27日28日29日30日31日galꙁꙃꙅꙇꙉꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝺꝼᵹꝿꞁꞃꞅꞇꞌꞑꞓꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩɬʞʇꭓꞵꞷꞹꞻꞽꞿꟃꞔᶎꟈꟊꟶꬷꭒʍᎠᎡᎢᎣᎤᎥᎦᎧᎨᎩᎪᎫᎬᎭᎮᎯᎰᎱᎲᎳᎴᎵᎶᎷᎸᎹᎺᎻᎼᎽᎾᎿᏀᏁᏂᏃᏄᏅᏆᏇᏈᏉᏊᏋᏌᏍᏎᏏᏐᏑᏒᏓᏔᏕᏖᏗᏘᏙᏚᏛᏜᏝᏞᏟᏠᏡᏢᏣᏤᏥᏦᏧᏨᏩᏪᏫᏬᏭᏮᏯ豈更賈滑串句契喇奈懶癩羅蘿螺裸邏樂洛烙珞落酪駱亂卵欄爛蘭鸞嵐濫藍襤拉臘蠟廊朗浪狼郎來冷勞擄櫓爐盧蘆虜路露魯鷺碌祿綠菉錄論壟弄籠聾牢磊賂雷壘屢樓淚漏累縷陋勒肋凜凌稜綾菱陵讀拏諾丹寧怒率異北磻便復不泌數索參塞省葉說殺沈拾若掠略亮兩凉梁糧良諒量勵呂廬旅濾礪閭驪麗黎曆歷轢年憐戀撚漣煉璉秊練聯輦蓮連鍊列劣咽烈裂廉念捻殮簾獵令囹嶺怜玲瑩羚聆鈴零靈領例禮醴隸惡了僚寮尿料燎療蓼遼暈阮劉杻柳流溜琉留硫紐類戮陸倫崙淪輪律慄栗隆利吏履易李梨泥理痢罹裏裡離匿溺吝燐璘藺隣鱗麟林淋臨笠粒狀炙識什茶刺切度拓糖宅洞暴輻降廓兀嗀塚晴凞猪益礼神祥福靖精蘒諸逸都飯飼館鶴郞隷侮僧免勉勤卑喝嘆器塀墨層悔慨憎懲敏既暑梅海渚漢煮爫琢碑祉祈祐祖禍禎穀突節縉繁署者臭艹著褐視謁謹賓贈辶難響頻恵𤋮舘並况全侀充冀勇勺啕喙嗢墳奄奔婢嬨廒廙彩徭惘慎愈慠戴揄搜摒敖望杖滛滋瀞瞧爵犯瑱甆画瘝瘟盛直睊着磌窱类絛缾荒華蝹襁覆調請諭變輸遲醙鉶陼韛頋鬒𢡊𢡄𣏕㮝䀘䀹𥉉𥳐𧻓齃龎fffiflffifflstմնմեմիվնմխיִײַעהכלםרתשׁשׂשּׁשּׂאַאָאּבּגּדּהּוּזּטּיּךּכּלּמּנּסּףּפּצּקּרּשּתּוֹבֿכֿפֿאלٱٻپڀٺٿٹڤڦڄڃچڇڍڌڎڈژڑکگڳڱںڻۀہھےۓڭۇۆۈۋۅۉېىئائەئوئۇئۆئۈئېئىیئجئحئمئيبجبحبخبمبىبيتجتحتختمتىتيثجثمثىثيجحجمحجحمخجخحخمسجسحسخسمصحصمضجضحضخضمطحطمظمعجعمغجغمفجفحفخفمفىفيقحقمقىقيكاكجكحكخكلكمكىكيلجلحلخلملىليمجمحمخمممىمينجنحنخنمنىنيهجهمهىهييجيحيخيميىييذٰرٰىٰ ٌّ ٍّ َّ ُّ ِّ ّٰئرئزئنبربزبنترتزتنثرثزثنمانرنزننيريزينئخئهبهتهصخلهنههٰيهثهسهشمشهـَّـُّـِّطىطيعىعيغىغيسىسيشىشيحىحيجىجيخىخيصىصيضىضيشجشحشخشرسرصرضراًتجمتحجتحمتخمتمجتمحتمخجمححميحمىسحجسجحسجىسمحسمجسممصححصممشحمشجيشمخشممضحىضخمطمحطممطميعجمعممعمىغممغميغمىفخمقمحقمملحملحيلحىلججلخملمحمحجمحممحيمجحمجممخجمخممجخهمجهممنحمنحىنجمنجىنمينمىيممبخيتجيتجىتخيتخىتميتمىجميجحىجمىسخىصحيشحيضحيلجيلمييحييجييميمميقمينحيعميكمينجحمخيلجمكممجحيحجيمجيفميبحيسخينجيصلےقلےاللهاكبرمحمدصلعمرسولعليهوسلمصلىصلى الله عليه وسلمجل جلالهریال,、:!?〖〗—–_{}〔〕【】《》「」『』[]#&*-<>\$%@ ًـً ٌ ٍ َـَ ُـُ ِـِ ّـّ ْـْءآأؤإئابةتثجحخدذرزسشصضطظعغفقكلمنهويلآلألإلا"'/^|~⦅⦆・ァィゥェォャュョッーン゙゚¢£¬¦¥₩│←↑→↓■○𐐨𐐩𐐪𐐫𐐬𐐭𐐮𐐯𐐰𐐱𐐲𐐳𐐴𐐵𐐶𐐷𐐸𐐹𐐺𐐻𐐼𐐽𐐾𐐿𐑀𐑁𐑂𐑃𐑄𐑅𐑆𐑇𐑈𐑉𐑊𐑋𐑌𐑍𐑎𐑏𐓘𐓙𐓚𐓛𐓜𐓝𐓞𐓟𐓠𐓡𐓢𐓣𐓤𐓥𐓦𐓧𐓨𐓩𐓪𐓫𐓬𐓭𐓮𐓯𐓰𐓱𐓲𐓳𐓴𐓵𐓶𐓷𐓸𐓹𐓺𐓻𐳀𐳁𐳂𐳃𐳄𐳅𐳆𐳇𐳈𐳉𐳊𐳋𐳌𐳍𐳎𐳏𐳐𐳑𐳒𐳓𐳔𐳕𐳖𐳗𐳘𐳙𐳚𐳛𐳜𐳝𐳞𐳟𐳠𐳡𐳢𐳣𐳤𐳥𐳦𐳧𐳨𐳩𐳪𐳫𐳬𐳭𐳮𐳯𐳰𐳱𐳲𑣀𑣁𑣂𑣃𑣄𑣅𑣆𑣇𑣈𑣉𑣊𑣋𑣌𑣍𑣎𑣏𑣐𑣑𑣒𑣓𑣔𑣕𑣖𑣗𑣘𑣙𑣚𑣛𑣜𑣝𑣞𑣟𖹠𖹡𖹢𖹣𖹤𖹥𖹦𖹧𖹨𖹩𖹪𖹫𖹬𖹭𖹮𖹯𖹰𖹱𖹲𖹳𖹴𖹵𖹶𖹷𖹸𖹹𖹺𖹻𖹼𖹽𖹾𖹿𝅗𝅥𝅘𝅥𝅘𝅥𝅮𝅘𝅥𝅯𝅘𝅥𝅰𝅘𝅥𝅱𝅘𝅥𝅲𝆹𝅥𝆺𝅥𝆹𝅥𝅮𝆺𝅥𝅮𝆹𝅥𝅯𝆺𝅥𝅯ıȷ∇∂𞤢𞤣𞤤𞤥𞤦𞤧𞤨𞤩𞤪𞤫𞤬𞤭𞤮𞤯𞤰𞤱𞤲𞤳𞤴𞤵𞤶𞤷𞤸𞤹𞤺𞤻𞤼𞤽𞤾𞤿𞥀𞥁𞥂𞥃ٮڡٯ0,1,2,3,4,5,6,7,8,9,〔s〕wzhvsdppvwcmcmdmrdjほかココ字双デ多解交映無前後再新初終販声吹演投捕遊指打禁空合満申割営配〔本〕〔三〕〔二〕〔安〕〔点〕〔打〕〔盗〕〔勝〕〔敗〕得可丽丸乁𠄢你侻倂偺備像㒞𠘺兔兤具𠔜㒹內𠕋冗冤仌冬𩇟刃㓟刻剆剷㔕包匆卉博即卽卿𠨬灰及叟𠭣叫叱吆咞吸呈周咢哶唐啓啣善喫喳嗂圖圗噑噴壮城埴堍型堲報墬𡓤売壷夆夢奢𡚨𡛪姬娛娧姘婦㛮嬈嬾𡧈寃寘寳𡬘寿将㞁屠峀岍𡷤嵃𡷦嵮嵫嵼巡巢㠯巽帨帽幩㡢𢆃㡼庰庳庶𪎒𢌱舁弢㣇𣊸𦇚形彫㣣徚忍志忹悁㤺㤜𢛔惇慈慌慺憲憤憯懞成戛扝抱拔捐𢬌挽拼捨掃揤𢯱搢揅掩㨮摩摾撝摷㩬敬𣀊旣書晉㬙㬈㫤冒冕最暜肭䏙朡杞杓𣏃㭉柺枅桒𣑭梎栟椔楂榣槪檨𣚣櫛㰘次𣢧歔㱎歲殟殻𣪍𡴋𣫺汎𣲼沿泍汧洖派浩浸涅𣴞洴港湮㴳滇𣻑淹潮𣽞𣾎濆瀹瀛㶖灊災灷炭𠔥煅𤉣熜爨牐𤘈犀犕𤜵𤠔獺王㺬玥㺸瑇瑜璅瓊㼛甤𤰶甾𤲒𢆟瘐𤾡𤾸𥁄㿼䀈𥃳𥃲𥄙𥄳眞真瞋䁆䂖𥐝硎䃣𥘦𥚚𥛅秫䄯穊穏𥥼𥪧䈂𥮫篆築䈧𥲀糒䊠糨糣紀𥾆絣䌁緇縂繅䌴𦈨𦉇䍙𦋙罺𦌾羕翺𦓚𦔣聠𦖨聰𣍟䏕育脃䐋脾媵𦞧𦞵𣎓𣎜舄辞䑫芑芋芝劳花芳芽苦𦬼茝荣莭茣莽菧荓菊菌菜𦰶𦵫𦳕䔫蓱蓳蔖𧏊蕤𦼬䕝䕡𦾱𧃒䕫虐虧虩蚩蚈蜎蛢蜨蝫螆蟡蠁䗹衠𧙧裗裞䘵裺㒻𧢮𧥦䚾䛇誠𧲨貫賁贛起𧼯𠠄跋趼跰𠣞軔𨗒𨗭邔郱鄑𨜮鄛鈸鋗鋘鉼鏹鐕𨯺開䦕閷𨵷䧦雃嶲霣𩅅𩈚䩮䩶韠𩐊䪲𩒖頩𩖶飢䬳餩馧駂駾䯎𩬰鱀鳽䳎䳭鵧𪃎䳸𪄅𪈎𪊑䵖黾鼅鼏鼖𪘀/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tinyvec-1.8.0/src/arrayvec.rs / g      "   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-normalization-0.1.23/src/decompose.rs (0 w      "   (0 w   T      (0 w   V   *   (0 w   V   )   (0 w   V      (0 w   M      /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tinyvec-1.8.0/src/arrayvec.rs  1 g          1 g      "   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-normalization-0.1.23/src/decompose.rs 1 w      "   1 w   T      1 w   V   *   1 w   V   )   1 w   V      1 w   M      /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tinyvec-1.8.0/src/arrayvec.rs `2 g         `2 g      "      $   o             
        
 F  
      E  6              W         :  #   
    G                    .     ,                 	               
           y                    
   5          
              	  	            	   9  	                  "      
                       
 
                    
 
 	     
                                    
       
          
                           
              
             	            
               A 	  
      
                                        	                      
                 
                                    	                                                                             
                                      
               	     	                                                	                                                            
                                                                                                              
                                                                                                                                                                                                                             	                                                                                                                                           J - 
 9 
 	M
    
 ܢ & 	E
  u N 2 	M
 A q- 
 
   
  { t   y ] 
   
 % Gu 	 *K  	
 	: T	 -     
(   氪 M%  澪     - 	A, 
 :
1	: ; X   p
  <    0kj	 
 
 k+ 	4 
  miL - 7 s   > q hF , 
    1k5 ~	4 

   	 
  ܂  O  	M
  	 z 0 9 W 	o3 ) 
 	 d   l 
 
  !Q 0  V 
 R	 E - ; Y  s , 
 | j  
 ! -  8   * ir  { ' 
 H	Fk  4A 
      6 
L X  -    濪  ܋	+- 9 - 
 	p, # 
 } F
  	Gv k ^ 
   n  &C   H 
 
 - 	
 
 ܑ 	D
	Ĩ 	  V 
 - 
M 	 	<
 E	  /0 h	?
 ܣ  ܖ (O	, r, I , 	;
  	  <
  


-- Chunk 230 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34351-34500
 o*   
 
  _ z  	B- ^= ] / 
 
  ! ܦ   -  j   B
ܺ  [ r  
  Gx 	4F&
  P }  	9   1  )   
 e  
5
 [V
 - { 
 m  < t  - + s	6    ܛ ' 4    
 
 - r  l- 	3] w g9 '
	
 -  -  - W + 	 0 _  - 3k ) 
 <	 G Y 6 8

 
 C F ܙ   
  D CU 
 o   = 
  B  g kJ % I # v- o 	 - @ 	>9   - 
 J 4 - y  _    - 	B: 
 

 ܷ nR  w |  2k
 
  f 
 
 ^ j K ; #p f %
	 ܴ 	
 
    <
 |2 & ;
 
 ܃ 
 g	` I
	9 
 	M
  - g 	 { 3   	
 $ + ' $
 
	S  TU
 	- 
  ޚ v -   
 ܁ S	 (     t 
 v 
  L   
^ o  
 ܪ 
 
    P   
 g8  q Z 
 柦 H  
    Fp	  ` ܿ  ,0 - v 2
 ?   - G 6 I     
  Q   
 U   \ ܽ ܹ x 	?
*  *0   
 +0     	  
 ޭ 
     '
  淪  -  9
S f a   7 	5n #h 
 D B  
 
  - z 	M	 
 <Y   
 泪 p  -  4k 
   BT j[ 
 > 	
  
 3 @  
  	?
܅\ 
 ܵ 	
 " K
 Z  	kK  . [ " 
 ܚ   o m  	M: 0   
 
  N 5kz	 
 8 |  :D	
 ܥ 
N 
 7 E <
 "R  : 
 
 	=   "  ! xܤ   
   
 0 e Q	 i H z   
 7   	 ܛ  -  . y
 , / 	D 	  l z   $ C!kI $   Z    	܀ 
 wb  5  ܊
  
 M z  ܍  j & 
 ܧ 
   
 j7
 .0 kH 
 ܸ  - 
 c J $   	   6kP
 沪  D -0 1  渪 S 
 ? 5 枦 #     q)4 ܶ   } 		  z T J        ] ]    	    5        x    )   $       1     m   3  L         |  L E *        
     Y     	    
        =     *        
       "   a                
   $        X     
              
       
    !        
   
    	  
      & 
                    $  
                
   
            	                            %    
 
                        	          
          
                                                                
 
    	                    
    
       
        	                                                                       
 
                                       
    
         
               
    
         
                                          
                         	       	            	       
                                                                           
     
        
                                                                                                                                                        
                                               
 
                                                         
                             
                                                                                                                                                                                                                                       TJ&  	i 
  e   
#  
G   W 
     8!!  C 

-- Chunk 231 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34501-34650
  z |  
I   r Y
  0K0L0  Ea  A &  #k 3
    IM  B  U j  000  En  1B 
  
  %A  
  1R ^
  E  8r"t"  8H"I"    000  #v 
  p W
  QU  (u s  0[0\0  
A    #
  U   S `
  
    O    o /  G   	a 
  
    3S  E   b 
  E  W 
  Z {  000  	
  U'%  A  g      
  
c 
  E     #K 2
  y    w 
  E  H &
  000   
  l :  	E 
  9=  i 
  #  
a       8]  #H $
  5  C   #T l
  I (  

  5Q  a '      m A
  v }
  's _  G  
  G 
  Em  o    1k 5
  1r _
   
  5

  -U v
  
a    0F00  5:;  
U n  <	(	)	  `  0e 
  Y 
  0E 
  1d 
    000  
C  >
G
K
  o 
  #n G
  i    -e 
  Zd
  
  	
  E'  z 
  Y    1L :
  Ed  

  E$   
  i 	  1t o
  HL  1z 
  E)   
       
r Y    	 
  'E (  o        E  m ?
  	
  o    
s a  u    im    8= `"  E   w 
  (

  1l ;
  000  

  U    


    i  't c  &S   
U p  0o0q0  'k 7  0u u
  s [  B06  G    


   ik  
  u   <	0	1	  0a0b0  #w 
   M
      I   i    E#    
  K  E.   e    I    (,     S'"   $  8""  y 3   9;  %a 
  	y 
  
  o    #d 

  0O0P0  E  	 
    PT     E  '  S \  R T  E   #S b
  g   8v"x"   5P  000  
o Q    c 
    8|""  a       1D 
  e      
u   'S ^  0W0X0  E  
i   'n F  x 
  B   
  'G "  	 
  -l =
  0M0N0  i )  #
  O    
  G  8""   z    -d 
   .
  a   

  #y 
  8!!  E%  O L  O N  000  'D 
  


  U    #e 
  0{0|0  
O   g !
  
j   #U 
  
  #Y 
   A    000  #  S Z  000  	u 
  0U t
  'R V  7    
  8!!    Bag  8<"A"  000  Ek  I 0  #A 
  	U 
  
u q  0S0T0  0]0^0  #L 6
  &  uw  (I .   !#  ae  B!'  g 
  N C  N             a  8""  000  Y  R   #N F
  E
  

  
    *     000  5  8
"
"   Y 
    
n H  
L =  iy
    
  A    r U  E 
  5
  
  J 4   x  0Y0Z0  
O P  (a   000  E+  @D  e   E  hx
  &t   B  Eo    E	   U    
A   'C    F 

-- Chunk 232 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34651-34800

    >
G
K
  a    N
   |  C^      y 
  Z
\
  u   			  5  0i -
  0{0}0  000  8""  
   y 
  W 
  (i /  #Z 
  B  	O 
  B)/   
  E*  MS
  8!!  (U r  1h 
  
h   L 9  8""  I    V
G
H
  0u0v0  [
]
  Ej  'T b  
  H  B	     MQ
  C  8!!  8a"b"   -  0  o    s a
  u   000  b
h
  A   )  c 	  j 5     &s   Et  	e 
  
Z }  8%"&"  h  'r W   	
  6  E  1b 
  8s"u"  #V ~
  #O 
  .0  T     O      e   #E 
  


  8e"q"  	   
  N D
  h '
  O   U h      U   8> o"  ag
  E   E    5	
  000  hl  e 
    			  +  'N E  Ec  89    &T   t k
    9  000  u    


  000   n   B9?  '  8"	"    
D   
u o  T'#  u m   t  Ef  Ei  [e
  B(.  Ep  E  1T n
  8{""  8""  B    Ee    
   +  


  B8>  8""  r   000    8""      
  Y 2  i    0_0`0  D 

  

  E!  A   r       Y[      PR  8M"m"  n D  -u w
   
  B    n E
  A    
    0x0z0  #W 
  C  -E 
    (O        
    e   Bhn  8   AC     O    'd 
  )

  z z  #b 
  E|  #
  `d  0f0g0  8d"p"   13  #a 
   HJ  U    V
F
H
     
  #r [
  B &  0  8""  Y]  B  #D 

  .%&    1K 4
   i    .H *
  c   Bio    000  
N G  W
G
L
    (e      B  E   8<  0u0w0  K 0
   
   
  A    e    X 
  
T d  P    5>@    0r0t0  E(  8w"y"  8z""  G 
  E    $U r
  E,  'K 6  I    h %  R X
  a    
K   	I 
  
l >  M @
  6
8
    
y 
  (  -T p
   IK  5BC      /
   	
  jz
   
   p  T  000  E/   r  $u s
    
e   W t  

  E     y w  -n K
  
o   E  C   y 
  #t m
  	 
   02  k 1
  8""    )-  (E   E   ,  0   O
  

   hj     E    i +  


  o M  O    


  
U   E  B  000  f 
   N   y    .h +
  
d   O .  BY_  000       w 
  1  #u 
  	Y 
  
  U l     k{
  O 
  @      
   QS  	
  -N J
  	o 
   
  8""  Eh  5<=   @B  E
    -D 
  


   
  #   
  

-- Chunk 233 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34801-34950
z ~  g !  E    o    000    0Q0R0  #l 7
  !  
w 
  #i 
  a    000  E  >
F
J
   v  8!!  Eb  w u     
  0h0i0  B`f  #h %
      
  B  8C"D"  0x0y0  8  0I ,
  w 
  e    'h )
  8""  B    M >
  	A 
  5  8< n"  Y x  
  'H (
  #m C
  0d0e0  VW  Y v  T  :\    
    'c    
  TH$  000  #
    1Z 
  
g      'e )  #I 
     BQW  #M B
  04  'l <  E   
    d 

  -L <
       
  e       p U
  E  	
  u i  E
    t 
     8}""  #z 
  o   (o     "     V |
  
k        B   6     u k  8E"G"  I *  8  W
F
L
   u    8""  u    Q  `f
    U   8""   LP
  B17  E&  8""  P T
  'L ;  Z y  B 
    AE  P V
  
C 
  #s c
  0U0V0  0o0p0  M  Eg  
   )+  5?A  E    o O     000  E-  LR
  a    E`  E
  a    `b   
  >  8#"$"    000  E"   L
  El  T j
  7
9
  


  
  
H 
  	 
  
R X   
  
E   000  H $  #R Z
    
  -t q
  -  


  A    tv     15   ac  


   
     
  BPV   a    I 
  'g #  Y 
  E  	 
  
  B  
  
t e      x 
     a    Z 
  <	3	4	  O   R   n    E   	
  E   !%  /1    1N H
   8:  I ,  i -  E  I     W 
  000  
S `   I    0r0s0   (*  H "
  	
    c
i
  #o 
  A    E  (A   h #
  1n I
  


  X 
  A    000  #B 
  s ]  
     Z?  (    L      q 
 M     E 
   !         
           g         G 2     < E                   ,   
          
     j     o    %   '    "      	                : '        !       &                              "         Z   
 N    	 d &       0         > F        7                   
 
     /     
 0   %       #      
      
                 	     	 ,                    0  
  	    
           
  
      %                	   	   
                                
       C     
  	     "         1      	   !                    
        
                      
                      
          	            "           
     
                                
          
                          
          
    
      ' 
                 
                                          
                       
       	             
         	      
                         $     
          
           
         
  
          
        
              
    
                          
     	                 
         
  	      	                                    

-- Chunk 234 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:34951-35100
            
                                                           	                                                                             	                      
       /            
                       	                   
           	  
         
          	                                                         
                      
                 
                                             	                                                	                
              
                                  	       
                                   	                                                                                 
                      	                                                                     
                  
                                                                                               
                                                                                                                                                     
                         	                                                               	    	                        
                                              
                                                                                                                                                                
                                                                                    
                                                                
                               	                                                                                                                                                                                  
                                        
                             	                                                                                                                                                           i 
 0   .  
           	 :
   e  F	 
   : j
   l    g	 W  ,
         ~ )     F f  ;
 9  ( z
  d l     {
  
 (    K   
  H
  
 t  U	 
   Q  ^ 3 c
  ,
   $ >  
 ^  3
 
  	  '
 _   5
   G  
 b 
   Y
 /  	  

 s  $ 
   
  &   	      C  
     
   
 0    
 s
  T [  <	 R 
 _  4
   > "  
 
      )       	    
    
 ! Q
  
 e  :
 q  R	 0   m  
     
 a 
   g
   J j   X	   " R
 =  
	 9
   p 
 
   5  
 /  
 ^   C
   B r
   	 ]  2
   	 
  >   
 
  J  -
 
 ;
 
   )#  i 
    
   	         y
  a       
   %    ,  
      	  %
 p  $ p"  9  
 m  B
   a	    W 
 
    
   	  
 K  ,	 ~ 
    	   	    Q  Z "  S  G
 a 
 
     i
    \  '
   H  L    
  d  
  
   	 
   *  
	 x  K
 l  A
 "
   
  p P 
  
 
   3
      @  
 ;
   d
 	   H x
 f  G	 6  
 W  8	  
 \0  }  
 "    ]  >	  
 j 
    *!   ~  @   	   
 
 N
   	 7 g
  
 B
   / 
   [        

  
  
   	 q  & R  3	   	   i              
 
 L
  
 
     
 C  
 D    
    
 |  ]	   f	      }  

      

-- Chunk 235 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35101-35250
 w  2 H x
        9   l
 B r
 v 
   i	    V    
    .
 F
   
 N
 ]  b    
  $ H
     	 F v
   
 	  |  "  _ R  
 L0  m   	 ,    i 
  
 z0    
    ]  w  
  !
   	   	    
  S /   4	    
      ~
 [  0
   t &"  %  3
   	 
  b    1  	   t
 6 f
       l 
  A
 _	        ^ 
   p	 
  b 0     z   	   c    ^  ?	 N  
    
  } 
 
  B  
 y 
  "
 
  " 
      t0   "  O   P 
   Q 
 ,     5  
   	  
   
 
     
 
  v  
 0      a  6
   <  
  >
       	      L  B
 O 
   j   T
   
   	 o  "     
      D  
 9    6 f
 H
   0   y  L
 X0  y q 
 ( X
    $"  #   
  
       
  z Z  /
    X
   d 
   
 
  r 8 h
 
      u	 G  (	   )   b	 0
        	   ^ b
  , ] 
 N  #
 "   8 h
  
 ?   	  #
   
 z 
 0 `
  
 
  ~  
   w     
  
   	 O 
 @  
 h 
   _
        
 b0      ^    y 
   & V
         0 m"  3 (   U 
 y"  C   
 5  	 9  V 8 

    N  {  : 

  l j
  B    W  
 % U
  
    j     Q 
  
  
 "  c k   ;     
  
 # S
  
 | 
 I  

 
    
 N0  o 
   J
  	 9  
 Z0  {   	  /
 0   w 
     
        j	    4  
  
 f 
 e 
 /     >
 a
  *     3
    D  
   S      K 
   O  $
  
 K
     u
 9 i
 U  i 2
     	    F   
 i  J	    `  3
   o
  L   	 8  	 & V
 <  
	    _
  &   l      & # S
   T  
 ;  H ` 
 
   $    5 e
 !    O

-- Chunk 236 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35251-35400
    Y  .
 J  
 7     I
 
    A
   s	   |	 o"  7  8
 
   0   \     
    I  
  
   
   R ~
  n       d   + [
 =  3    $     
   	 
   
  	  
 -  
  
 .  
 1  
 	    E
  
 U  *
  )
 b     v  
   8  &     e 
 ) Y
         G     
      1 %    
 w  J
 	"   v  ( V  7	      = <    
   Z
   5  
   	 
  	   O .    
  |   Z \       :    ^
 y0   8  
 U 
   q
 N    u
  X F  
 
 :
     
     0   G
    
 ~  Q
    
   g 
 
  
 }  ^	   
 F v
 }
  l   
   r      @
 u  V	 j  K	 +   
 s   W 
 
  M   / $ T
   
 { 
 S 
 ?  
   ]
 L  
 ;  -       
 A   

  n   ~   	 
    3
       
        e
  
   	   	 1
        D 	 9
 
  `   {  
 
  v    ^ 

 A q
 b  C	 
   
  V R0  s H    D  F 0 `
 

  j > n
 0   [
  
 T  )
   	   r 
  V  
   `	    
  
 G w
 - ]
 m   L
    
  R < l
  
 -        	
 
  	  
 
      
  _ > n
  

  
 T  f 
   j  ?
 y  6 -  
 
   >  
  
 2  	 
  f ^ 
  
 @
   "  g C  C      x
   G g 
   t	  
    L   6
   k
  1
    \	   `  5
   8 b  7
  
 
   P  1	 s  *  
 p 
 Z 
  C
   l	  C
   8    
    
 S  4	 
        o   + N  /	  
    0   ^0   
     	 + [
 
 M
  
  4
 :  
     
 
 =

-- Chunk 237 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35401-35550
 g  H	   
    
  ~ -  	 
     \
 t 
 R 
   	 T 
 %
   
   
  G    C s
  
    
   L |
 0  
 	   X 
 [  t    P 
 \
   M  "
   
 t  G
 Y  r 
 M
 p  C
   	  
  
   ~	   	 @  !	       
  t   x	 V 
  
 A
   
 <
 b 
 f
  6 
   I y
  
 
  p )   
  	 
   t   
  m    b  
         j
 $ T
 3  
 "  W      R
 J z
  
  G
 1	   0    5    v0     2    '   c  D	 M  .	 @    
 
  T 
  /   p      |  < ,  
	 
  x 3  
   f
    Z  0         V   4
  
    

   
       L  !
 [	   E  
   
 . ^
 \  1
   	         :   	 +   .  	 
  \  
 L |
   W
  
   	 ]   $
   \ 
 
   
   0   w  X	   
 ;  
  4
   	       	  7
 
    5
  
 ?
   "  K C     	  7
  E
        {   !   z      >  }0    D
  
  
  
    
  |    $  "  Y   1  
   	   }	    
    
      	  
   {   0
 T       
     	  
 R
   $    
  
      	 &  	 V
     	 Q  &
 
    

 6
       /
  
 
    
   	 z 
 f 
 
  r   T c     m 
     s
 c 
 0   ^  d  J
 
  \     a    K
  
 =    2  
 
   
             ? o
  
   	 p  Q	 ~ 
 r  S	 6    
  @ s0      "  ] ! Q
 `"  / f    ?
    
      y
   q   w
 :  *   
   b
 ]	     	 A  N H  )	 <
     
    F m  N	 |
  j   B r  ( 
     r
 n"  5 " R
 u  & q 
  B
 u"  ? ?  9 0      *   
 z  M
    

       8
  
 S  (
   	 

-- Chunk 238 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35551-35700
 <
  %
  2
 
  t 0  	 `0        
 \ 
    o 
 
 :
  2
 5 e
 M    b 
 #  	  
 -     	 0   0   ~  _	       J  I  N   `
  
 
    
 +       h   V  l  
 R  '
 = m
    ,  
  
 
   g    
   	 = m
   	   
 W  ^ 
  	   
  *
 I
      P
   J  +	   c
 "  I 
   i       
  s   	  
  
  (
 
    &
 h  I	 l
  F  
 
    
        H    c
  .       P
   	  	
 8
      @ p
 } 
 N ~
   	 	      d  
  v   B  
 
   4 d
 
 ;
   
 0     	 K {
 ^
  $  
 ; k
 Q       9  
 	
  e   z	  
  
 v 
 #    <  
   w	 
   
     

 	   J  
  
  6
 0    
 u 
  H
  
   h	 
 :
   y	 y  Z	 
   "  	    7  # H  
 g0   2 b
 
  ,    
  (
   x  4  
 a  
   
   H A"  '   	   
 E
     	   |
 5  

   r 4
   '  	 
    
  
 C  $	 
     	   c	 P  \      ,   Z
 N ~
   e =  
   f  
 
   X  -
    a 
 D   4     	 c   K  
 	   q
  P    8    	  
  
 M  Y 
   / _
 .  
  D
   
 
  
 	    
 9  	 (    
  $
    h 
 *    
 Z
      "  	      	  
  
   
   ] 1  
 F    
     @ 
     n
   S
   
 z  8 ;
   t
  V k 
 #
   u  . >
     | !   
  z   	 D
   
   e   )  
	 G"  +    | 
 /
   J z
  
  
 
   W     
 A  
     

-- Chunk 239 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35701-35850
 .      	 
   !
   A q
     S  \  
 d 

  
 u  H
        G
 _  @	 ; k
        "  i0   e
  3 C  
 0     ) l  
    
  k 
   	 X    c 
 
   "  M   
       	 9
  
 
  p I  *	    B  <  
  

  

    e0   |  O
    
   	       *
 0      \
  
 k  @
  
   	   i    {  \	   	     E  &	  .
 
  8 %    
 I"  -   X   
 1 a
 * Z
    {  N
  
  
 O  0	   . E u
 V0  w Y	   "  Q     1
 !  	 A  
   	   v
  
 
     	     
  5
 
  P y   [ 
 r
  R  K
   	  
 M }
  
    0  
   	    P   -
  I
      !   .
   0    
 2 b
   l    [ 
     
 h
  < 
   M  
  $
   5     
   %   [
  *
 q0   i  >
 &  :   	 
  X (  		 t 
 K
   
   e     
   
  
  ?
  
       
 j 
  +
  
   
 K {
  A
 Z	   0   x  * 	 9
 "  U   	   a
 *
     z   
 {
  g  
   
 _ 
 $  	 o  P	 
  P  
 r   
  2  
 B  
 &     p
  
  I
   	 q  D
 /  
 
  A /  
  

 
   %  	 m 
    
         
 : j
 
  N :  	   	 &
           
  
 E u
   "   n 0   2    8
 }  > =
   ,  
 _ 
  
 o   7  	 4  	
 *   i  "    4  x 
  
    C  P U       
   w0   
    
 
     	   	   o	 M    5
 Y       X  @  <    	  &
   
   	 +!    6
    &  -
      q"  ; q   G  

 K
  
 
 L
    &  	    4      r	 ` 
   	 ( X
     
  
  
   	 *  	 |0      x   r  E

-- Chunk 240 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:35851-36000
 "  E  H
    <   2
  
      
 
    X  9	 
   
      L
   W  o 
  ^ 
  )    +
   
   u 
 B  #	 j     x M }
 H
    @
 6     #
    f  a  B	 s 
 ~        
  
 ` 
   U
 o 
 3   _  z g
  9 0     {	 "  e       0  % U
 h  =
 @ p
   > 
   u   
   ? o
 v  W	 n 
 P    
     R  F
 ) Y
      W   u D  
 
    :        
 
   T  5	   0
 0   0   i     	 w
  \ 7  

 4  	   
 "  a  
 '   +   y 
 T 
 

     	  
   3 L  V A  "	 4 d
   	 )	    
  
 
  x  

 `  } #   n
  J . 
 ]
       
 v  0 
    
 d 
 1   / _
   P
    , \
 E  I |   S
  
 r 
  J
 `  A	   ` 
  j 
   B  @ ] 
     
 M
      (          	  +
 `
  (   F   	  
 d
  0 +  
     E
  K
     
 
     	             
     R   
  
  
 Z 
  
   D   	 F  
   	 v  f   J   	 
     t   
 [      	     F  '	 T0  u 
 <
   N }  P
 D  %	 
  	  
 d  E	      	    b"  1   	   	 P0  q    0   0   Z  ;	   k	 v  I
  F
 @  L    
     	        
 
 M
   -    .  2  
   v	   	 #   
     	 
  y 
   
 L
 0     q	 h       
 k  L	 	  	     @
  $
  
 Y
    
 l  M	   6    
 =
 ' W
 7 g
 0        	 T
   n     
 ;  
  !
 6
      
  
 X 
 k   D t
  )
   L 
    
  
 L 
  J
  

 d  9
  
  

   	  
 O    z  [	 I y
 [
   6  	 ^
    
 K  S   e	 m
  H  >
 *#  j 
 =
   

-- Chunk 241 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36001-36150
 P  X    2  
 v   m 
  
 
     	      u `   c 
 %  	   	 0   
     o
 :  
    t   *  k  O
 
   
       
       4   	 
   G w
 J  P  
 n  O	   	   	 D t
  C
   
   a      k
  D     7
 _ 
 ;  
	    i
  ?    W
         
     -
 !       T    m
  
 x 
 Y  :	 K 
    V  +
  '
  
  
 
   - ]
 ,      6   
   n	      	   
 Z    t"  = L  -	     
  
  1
  
 
    
  

   "    
   8  
 S 
  '
 A  > 
    F
 Y 
 Y 
  
 L     
 >    *     
      
 s  F
  	
 C     
 ' W
 c  8
   -    
   C s
 g  <
   v       7
    ?
    w  h   n    0
   
       H  
  D }   Y
    "
 0   0   . ^
 3  	 n 
 U
   "  G N
   r 
  ,
  "
 P  %
 , \
 p0     	 < l
  (
 R  `   
 
     
    3  
   	   	 ,
      w 
           l 
 Q
        	 @  
 "     <  
 +  
	 "  [ t  , J
   9 i
   @   z
   X
   	   x    h
 s  T	 3 c
   	 
  Y   V   
 *  
    b  O
   &      2  &   1 a
  

 U  6	 n     
     v
  Z L
  
 <  0 

  h x
  ^ * Z
 -     
 >  6 \  =	 !    
 p    D
   V
 
  5 
  h x"  A   	 
  ;  
 =  J  
 ^	   
"  !    H  

 
  Z   x    p
  N V 
    D  Q  2	 1   S  c 
  |   d	   	 s 
  
   m	     
   }
 \  ` 0   D"  )    h    p &!  
 
    E    x  Y	     B
 6  

  
         
 ]
  ! C   )
   >  	  
 !   { 
  
 
   !   d        	 A      A     A     A     A     A   

-- Chunk 242 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36151-36300
  C   '  E      E     E     E     I      I     I     I     N     O      O     O     O     O     U      U     U     U     Y     a      a     a     a     a     a   
  c   '  e      e     e     e     i      i     i     i     n     o      o     o     o     o     u      u     u     u     y     y     A     a     A     a     A   (  a   (  C     c     C     c     C     c     C   
  c   
  D   
  d   
  E     e     E     e     E     e     E   (  e   (  E   
  e   
  G     g     G     g     G     g     G   '  g   '  H     h     I     i     I     i     I     i     I   (  i   (  I     J     j     K   '  k   '  L     l     L   '  l   '  L   
  l   
  N     n     N   '  n   '  N   
  n   
  O     o     O     o     O   
  o   
  R     r     R   '  r   '  R   
  r   
  S     s     S     s     S   '  s   '  S   
  s   
  T   '  t   '  T   
  t   
  U     u     U     u     U     u     U   
  u   
  U   
  u   
  U   (  u   (  W     w     Y     y     Y     Z     z     Z     z     Z   
  z   
  O     o     U     u     A   
  a   
  I   
  i   
  O   
  o   
  U   
  u   
  U       u       U       u       U     
  u     
  U        u        A       a       A       a                 G   
  g   
  K   
  k   
  O   (  o   (  O   (    o   (      
    
  j   
  G     g     N      n      A   
    a   
                        A     a     A     a     E     e     E     e     I     i     I     i     O     o     O     o     R     r     R     r     U     u     U     u     S   &  s   &  T   &  t   &  H   
  h   
  A     a     E   '  e   '  O       o       O       o       O     o     O       o       Y     y                  ;                                                                                                                                 #        8    5     5    3    V    :    8     C    t    u        6        0        0        5                6        7        8        8    
    >            -    M    #    C    #    C    #  
  C  
  '    G    +    K    '  S  '  T  H  T  '  U  J  T    T    T    T  (	  <	  0	  <	  3	  <	  	  <	  	  <	  	  <	  
	  <	  !	  <	  "	  <	  +	  <	  /	  <	  	  	  	  	  	  	  	  	  	  	  2
  <
  8
  <
  
  <
  
  <
  

  <
  +
  <
  G
  V
  G
  >
  G
  W
  !
  <
  "
  <
  
  
  
  
  
  
  
  
  F
  V
  
  
  
  
  
  
  
  
  
  
  
  F
  >
  G
  >
  F
  W
  
  
  
  
  
  
  
  
  
  B    L    Q    V    [    @    q  r  q  t          q                            %  .    5    5  	  5  
  5  
  5    5  :  5  <  5  >  5  ?  5  B  5  A   %  a   %  B     b     B   #  b   #  B   1  b   1  C   '    c   '    D     d     D   #  d   #  D   1  d   1  D   '  d   '  D   -  d   -  E        e        E       e       E   -  e   -  E   0  e   0  E   '    e   '    F     f     G     g     H     h     H   #  h   #  H     h     H   '  h   '  H   .  h   .  I   0  i   0  I       i       K     k     K   #  k   #  K   1  k   1  L   #  l   #  L   #    l   #    L   1  l   1  L   -  l   -  M     m     M     m     M   #  m   #  N     n     N   #  n   #  N   1  n   1  N   -  n   -  O       o       O       o       O        o        O       o       P     p     P     p     R     r     R   #  r   #  R   #    r   #    R   1  r   1  S     s     S   #  s   #  S       s       S   
    s   
    S   #    s   #    T     t     T   #  t   #  T   1  t   1  T   -  t   -  U   $  u   $  U   0  u   0  U   -  u   -  U       u       U       u       V     v     V   #  v   #  W      w      W     w     W     w     W     w     W   #  w   #  X     x     X     x     Y     y     Z     z     Z   #  z   #  Z   1  z   1  h   1  t     w   
  y   
      A   #  a   #  A   	  a   	  A       a       A        a        A     	  a     	  A       a       A   #    a   #    A       a       A        a        A     	  a     	  A       a       A   #    a   #    E   #  e   #  E   	  e   	  E     e     E       e       E        e        E     	  e     	  E       e       E   #    e   #    I   	  i   	  I   #  i   #  O   #  o   #  O   	  o   	  O       o       O        o        O     	  o     	  O       o       O   #    o   #    O       o       O        o        O     	  o     	  O       o       O     #  o     #  U   #  u   #  U   	  u   	  U       u       U        u        U     	  u     	  U       u       U     #  u     #  Y      y      Y   #  y   #  Y   	  y   	  Y     y                                           B      B                                        B      B                                                                                                            B      B                                        B      B                                        B      B                                        B      B                                                                                                            B      B                       B                                        B      B                                        B      B                                                                     E      E         E         E        E        E      B  E      B  E      E      E         E         E        E        E      B  E      B  E      E      E         E         E        E        E      B  E      B  E      E      E         E         E        E        E      B  E      B  E      E      E         E         E        E        E      B  E      B  E      E      E         E         E        E        E      B  E      B  E               E    E      E    B    B  E                     E       B       E    E      E    B    B  E                      E             B                         B      B                              B                                 B      B                                  `        E    E      E    B    B  E                      E             K   A   
  !  8  !  8  !  8  !  8  !  8  !  8  "  8  "  8  
"  8  #"  8  %"  8  <"  8  C"  8  E"  8  H"  8  =   8  a"  8  M"  8  <   8  >   8  d"  8  e"  8  r"  8  s"  8  v"  8  w"  8  z"  8  {"  8  "  8  "  8  "  8  "  8  "  8  "  8  "  8  "  8  |"  8  }"  8  "  8  "  8  "  8  "  8  "  8  "  8  0  	0  *  8  K0  0  M0  0  O0  0  Q0  0  S0  0  U0  0  W0  0  Y0  0  [0  0  ]0  0  _0  0  a0  0  d0  0  f0  0  h0  0  o0  0  o0  0  r0  0  r0  0  u0  0  u0  0  x0  0  x0  0  {0  0  {0  0  F0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  H  f  ʎ  Ȍ  n  2N  S      QY  ё  U  HY  a  iv    ?        j  m  p  s  =  j    N  uS  k  r  -  
  P]  o  ͅ  d  b  ؁    ^  g  jm  r  ΐ  O  Q  R  d  j  r  v      \    2  o    x  y  }  Ƀ      ֊  X  _  `|  ~  br  x      X  b\  j  m  o  /}  7~  K  R    Q  Q  
z  }    u    b  j    9N  [  `  s  pu  S  x  O  _  
N  l  xe  "}  S  ^X  w  I    k    l  b    c  eu  N  iQ  Q  h  |  o  Ҋ  ϑ  R  BT  sY  ^  e  o  *y    j    Ξ  R  f  wk  b  t^  a   b  d  #o  Iq  t  y  }  o  &    #  J  R  R  T  p      ^  _  {c  k  >|  us  N  V  [  ]  
`  s  it    F  4    H    O  y      `  N  P  [  ?\  e  j  q  Bv    |    f  .  R  {g  g  Am  n  	t  Yu  kx  }  ^  mQ  .b  x  +P  ]  m  *  _  Da  h  s    )R  T  e\  f  Ng  h  l  t  u  y  ψ    ̑    ?S  n  
T  q  t      W    g  m    z   {  |  r  p  X  N  6  :R  R  ^  b  |  [  
m  f  ;  L  M    ^  @Q  U  ZX  tf  Q  *s  v  <y  ^y  ey  y  V  |        8        (    ސ    O  P  MQ  R  R  QS  U  V  hV  @X  X  d\  n\  `  ha  a  a  Oe  e  f  h  wm  n  "o  nq  +r  "t  x  >y  Iy  Hy  Py  Vy  ]y  y  y  @z  z  {  }  	~  A~  r      y  y  W        9  ӌ      8      ;  u`  B   &N  Q  hQ  O  EQ  Q  R  R  U  UU  U  U  ZX  X  DY  TY  bZ  ([  ^  ^  i_  _  `  Na  a  a  `a  a  4b  c  
d  Rd  Ve  tf  g  g  Vg  yk  k  Am  n  n  "o  
p  nq  w  5r  r  *s  qt  u  ;u  
v  v  v  v  v  Jw  @w  x  z  {  {|  [}  }  >    R    y  A          ˊ        9      8  r    v  |    V  ۗ    
  ;      J( D( 3 ;  @  9@  IR \ ~ C                                                                                                                                                      1 ' 2 ' G > G W           5 0 W e X e X e n X e o X e p X e q X e r  e  e  e n  e n  e o  e o =N  8N  AN  " `O  O  O  P  zP  P  P  P  4  : MQ  TQ  dQ  wQ  
 4  gQ  Q  K Q  Q  N  Q  Q  ߑ Q  R  4  ;R  FR  rR  wR  5  R  R  R  R  S  S  S  IS  QS  ZS  sS  }S  S  S  S  ,
 pp  S  S  c
 S  S  T  T  8T  HT  hT  T  T  U  SU  cU  U  U  U  U  U  U  W  V  W  QV  tV  R  X  W  W  
X  W  2X  1X  X   X  X  Y  Y  "Y  bY    Y  Z  'Z  Y  fZ  6  6  [  >[  >[   [  [  [  [   [  \  S_  "\  7  `\  n\  \  \  
 C]  
 n]  k]  |]  ]  ]  /8  ]  (^  =^  i^  b8  ! |8  ^  ^  ^  ^   ^  1# 1#   "_  "_  8  2 a b_  k_  8  _  _  _  _  `  :9  
9  `  & `  Ha  La  Na  La  za  a  a  a  a  a  a  a  b  b  ]b  b  b  Pc  
+ =c  b  hc  c  c  + "d  c  c  .:  id  ~d  d  wd  l:  Oe  le  
0 e  f  If  ;  f  ;  :  Q  Q   g  f    C  g  g  !g  ^g  Sg  3 I;  g  g  Rh  h  m4 h  h  i  ;  Bi  i  i  j  6 j  <  !k  8 Tk  N<  rk  k  k  k  : 

 : Nl  < l  l  gl  m  >m  wm  Am  im  xm  m  
= 4m  /n  nn  3=  n  n  > m  no  ^? ? o  9p  
p  p  =  Jp  }p  wp  p  % Eq  cB q  C (r  5r  Pr  F r  r  5G H zs  s  >  s  >  >  Gt  \t  qt  t  t  ?  $u  6L >u  L pu  ! v  O O DP ?  @  v  P P Q 3Q 
w  w  w  Jw  9@  w  F@  @  
T Nx  x  x  @  &V Vy  V V y  y  /A  @z  Jz  Oz  |Y Z Z z  B  [ {  {  'B  \ |  B  |  |   }  _ c}  C  }  ~  E~  4C  (b Gb YC  b z  >c       d #e `  e p  _3 C      
D  >  Z  g g 3 3       kD        R          <k   
  c    #      W  S  ʃ  ̃  ܃  6l km l +E        s d  ,o ]E  aE  o p kE  P  \  g  i          y  (  k    E      E  `  c  gv ׈  ވ  5F    4  x fy F  F        U  |       w  /  ˍ       Ԏ  8  ҅        .   8  ג  ؒ  |         I    w I  Ö  ]  #  E  nJ  vJ    
 J   
  
  )     3K  )        K  0   @    L  L  g  Π L       VM            ;    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-normalization-0.1.23/src/lookups.rs    u   6   F    u   6   4               l              e                       l  
           
       2    

-- Chunk 243 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36301-36450
 t      
      T 2L   H       
                         }   
         D       
    O     2     | ,         _   g    4             
 L              
            
 ) U   Q     z f                  ! V 
        |    b      O     2 /  
    $       E   a   
         
       
       =                      ,      $               % 
  f 
    
          #       
 # =        %    1                 &                     
    
 
       =      
          	 ,   	 7 -    #     
   &      
        
  6                  
         /      
 
        
 (            !       #          
       k               *  
   	     +             D        
  %    
   
   8   
 %                	           b           =            )  ,          "    (          
 *     D        
           
              (  
 
  .     
    /      
              
       & &  
                  	                          	   	   	       
 &         
 
    6                  
                
                               
                       
          &                  
  	                             	 	      #           "     
   
        
       #          
     8             	   !              
                 
    	              $    	     
                           	             
                         
                             	        
               
       	                                   
            
              
              	      	 
                 
                            	                             
         	                    !            " 
                                           !    
     
    $         
                $      
                                
                         
                 
                             2  
               	          
            
        
          
                                                              
                                            
               	         
                  
              
   
 
                          	   
                     
     
      	                                                  
                 
    
      
        
      
   
   "                   
                               
                                        
                          
                                            
            
   
                        	       	  
          	    
        
       
                  
                
   	      
          
 
    
 
     
  
     
                                   
      
                
                                              
                   
            
                                      
            
 
            	                                                                
                                 
              
                                                                                      
                  
         
                            	                        
    
  
                  
                                                                      	    	         
                               	        	                     
                                      
           
                                                   	            	                                          	             
                                               
                                      	             
            
       	          	                                          	                              
                                                                              	                                  
                          
 
                                                                                                                                                                                                                                                                                                                                                          

-- Chunk 244 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36451-36600
             
                                 
     
  	        
                                                                                                                                                            
                                                                                                                                                                                                                                                                                    
                                                                                                          	                                                                                                                                                         
                                                                   
                   
                                                                                                                                                                                                                                                                                                                                                  
                                                                                                                                
                               0    
 i  U   r  n
      ;3  u   
 '  m$  = ,3  6  C   
    k  /  
   1     =
   w!     
  K   v 2      	   3  /	 U    T 
        U    T H!     <  
      X  P l . (   z 0!   l    ] 
    a  $2  ' )2  6   W     2  {   
 n 0 r$  G  c   
 3  	   
 p!   
  
 3  K d 
  R $/  } 2  j 	  C
     B /   J  

    J t  
 }  % $  ~ #3   Y  X  7  
 d/   X   2  s j  V
 f ( ~   M P      
  :  f M1  X 3   
  
 G/   02  K   d   2   1     x   Z2   /     
 $      b     
  I   Y  t   C !     1
 /  _     	 $  
  ^ <  2     $   2  Z   a
 I  
 p   E/   3     U  /   2  <  E   [ q  	 
   &  
 c  A
 11  < o   $   2     
 .  M    	 <  9  
   
     	   l 
  < 7  2        },  U   f   
 }3  ? 2   
/  f  g  q 8     
  ; -  $    l   :  Z ^  2
    3  ?	   /     ~ )    [     
        M 2    o \     "     j  i 3  
	 2  l     U   
   ;
   
 b/   
2     m    U r/   m1  x +2  < W!   Y  <
    >3   ~!  
   t 5 X    g
   Q _  	 /  " Z1  e  d 1  
 91  D 
        %
   	 n  ^
 h    D  :3  q  r <   M     E  c 
   A2  ~ J   m2    k }  
 p3     d  8        	   	  y     [
  ) 8  
   1   H   ^   
   3   ?2  x /  \ f    p
  ,   G  3   /   $   p    
 A    [
 2  M 
  a  	 $     3  j V  J  k  X
 P  
 r 
   q /  k   =   
 F     7 V!   R   A C   @    i  x   G l  >  $  
   4 ` "  r 03  I /   
  
    &  
 
  
 E!   {2     
 9     
 b   
   <  J O 
   =  U  
   
 2     1   2  W /     
 2  k  e $  3    r 4  ~ 
  
 k  Z   W   j  	 L  t$  K   +   	    f  T $   &  i  	 0  l  	 o  U1  `   5 
    3   L  $!   3  
	 62  ]   7
    2    2   Z       \  q/   a ' =   S1  ^   
 2   ?   P    u     k  >  \1  g 2  
 $  *    f1  q m / $  0    w   U      > + 
  H q  k
    j2   3  	 E3     I    1
 I1  T 
  5 9   w  t  V  =
      4    G v   
      &  9  3  7	       
   k &  Q  ,  
   ;  
   W
 3   a!     # ?   t f2      
 L
      +    
 3     
 I 
   ~ /"  ' b  >
 
  /  
 9 = 2  a  V 3   $   h1  s   j   3  l 2   E      H Z3   2  3  G	  !   $  7 (     H /      k 3  _	 2  g 3   5   x _2   e3   O
    $  D v  n
   {   
    Z N   G }!  
 p   r   
   S2     , V  "
 i + 3  u   /
 H   8   ~
   z  /    v3  /    V   (  Z A  3    .   @ !      w  } & * 
  %   " G U   . 
3   Z  	 /    3   
    Q   > $   L  
  D   O
  f /     ,  x    z % ,  h   z1     2  B   ~     z $     B q 
   r 
/  d 2  K       	      >   a         

   
 /   B/   '  
  ^ -!   5
    \    
 ~  ~
 /   3  q	   [  /  /   
    ;   2  ] h  3  9	 /     E ]   g $   7  
 /     s  	   g H
      
    C [/   4    @  
    #
 3      p 2  
 2        
 i   1       C
 t2     
   =   !

-- Chunk 245 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36601-36750
 /   !  	   
  3  d 6  
 D  
 s 
 |2    0 
/  v   2/   C    c 7 ;   
 .3  ? $  ) b!     ^   
     1   2   2  `    A     3  h	  0   
 [
      z3  9   [   c  
   } \  ,
 C  { =     n   &
  H X  j!    A 7  "  
 q1  | f  J
  Z   	  ] 2  h    ] #2  $ 71  B ,"  " /     O  
 +    
 e ' P   +   `  8
 n2   x  	    O 7   C I   	 2         2   0  z  	 u1   6!   U3   2   ;   *  
 $   q 3 r2   { $ h  P
 ]  8  f  |!    1  . =  S  
    [ &3  #   o 1   
    %  	 <     
  + G   a3     1    %        t j1  u j   X +  
 
   /   l  \
 !   '3  & !  
 0
      <  
   ^
 n  6      2  8   e
   F  v ]   - $     z   
/  w  H U   
  T  j    N  j 8  
 
         [!     ?   E   
   /    ^  M     	  R C  j/   f3     3  _3   2  	 3  	     N   b    m D   e  @ 13  L     I
     _   !  | _   @ 8  O  	  W <  2   h * 1   b1  m i/          C 2  $ 2  u    x   A 
2    p     3           2  e !  
   =  80  1 3   %  
     e  I   3     2  . $   3     y!   "2  !  +   3   :   1  1     u    j G2     
   a l . 6  _1  j   	    
      s  s 3   A   X 2   T!     + 
    &   X  N  
 d3     /     ^  2
 6   $  "  2    _ P  $   "  93  n T    53  _   R @ @   S   U      b  
 $  ;   j   o/   Y  #
   8  3
      6  
/  c D2   n$  ?   
 2  x  a C    	
 
    W   ~ r1  } 3     /  o 1  %    U
 3  e	 3     
 
  
    m  
  3   r   ) "!    h 
 !  A W        !       g  B   
 a1  l ?!   
         k {/   
  F    _
      s
 z   \!       
 <  
 j , c!   d )  = H   D v !   0   2 6 w  p
 h  F!          	     n
   c  p 2 V3    |   4
 $  G   T  m/     9  R  
  H u 
 q3  # H   u e  
 3   >1  I 
   < M   p z2   h
    q   .  z # D   2    | % o      5
 1    I   2
   5   N  (  /  
 $   !       "   
 
3   k1  v   /   3  Q 
    :  2     2  [ 3  ` J1  U M  
    J      	 a 
    e     3  5	  \  _   
 *  
 j   5 9    6
     m!      ` =     Q/   Y  (
 )  72  ` 2   e$  1 5      q <   2 /   f/   u  w
 4  3  x  
    Z  &
 $   ]1  h 	   @ O3     c$  /    a  	 3  J	   3     
 8  0  * . K/   3   M
      M  
   B  63  b /   /       
     

 
      
 |  	 1       k P1  [ v2   2   2  ( 3    E O >!   f  	 /   .      
 S   3   s$  I 
      
 3   2   2  4 $  ' 3  3  n	 D         m      .
 2  
 %  @  
    I  |  Q ]  	  2   $    m   3   6/   t  j
  P /  
 l  2  ^ D  !2  
     l   z
   	  a 1      2  m $    ^   m
      $  # I    
  o   |   H/      ] /   $   b 
 !  s   v1   `
     C   w   j - 	  
 a 
     h/    i b  /   G   6 #   w    [   s 3   $  z   X d1  o $  . $  8  g 3  z  ;   T  $  4!    N V  2  | r   L     /  h /     K   c          r    
 42  W   %   w  A O   E s   
   3  \	 {!        O o2   W  $
 2  w F    $   '  
3   \  .
 F/   
  $  5 ~ ' :   
 d
    ^1  i 1   ;  &  	   $  r n!   ;   _      B
    $   3  ,	   ] B    
     
 X   
 d$  0 <   F2   
*  H   .   
   W2   z   I   f  k3   2  U  d    c /  s   ~ /    h   X
 g  t1     -
 Q  ?   e1  p =2  r -   D  p T  

 /  	 (2  3 :
    2   e    4   4   	 /   9  
 L    y $   $    S  /   a  ;
   
  a    D   
     
   O  s!   Z/    5 g     /  Z ?  
 3    i   
 Q1  \ 	    
 M   )    R   
  b  y 1   
      !      1     3  C `2    c {  	 R  P/     ] X     n3   Q     
 ]
    $   ]  	   h  	  x S/   R3      V ,  $  C /   2  2   A    _ G    Z  $     / i  5        P
       E2    3 u  	  N 3  A	 9!   X2   2   }1   $     @  A  Y i  , 0 B     c 
         
 `   ] %     g  ~ ) 3  M	 h     3     3  S	 P  
 $     /
   6 2     Q r!   Z
    '   
    f  $  <   L 5    N P  *    [   d & 4  

-- Chunk 246 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36751-36900
  e 
  (!   t  	   c
   	 t*  L    :    
 5  i , 6   -        d W  

 1     | |  
   
   
   g * 3  ^ @   P  	  ~      
   2    | d     	   
 X  	 \  h!   E  N 
 /  %  * <1  G    /          
 3     2  V   
  K   w   

 $    o    \   	 1   
          e  G
   
   @   	 P3    q w "   
    Q
    a2   x  r
 c3   </   '/   2    b   B  2   /  p  w 0 4   	 $  + 0/   `  8
 #  2  
 " S3   
     z   R   ;  
 a/      q
 q 3   h    ]  0
 p  3   } ( k   32  T !/  z   
 _ 
 d  D
  \ {   b 
     S k - 
    A1  L   :  F 2   0  2  
 _  5
 { ; 
    o   S 3  %	 $  @ . 2  q  |  O N/    W   j  2   >
      F
  v T   c2     C  / Q3   V1  a   O
   	 {1   L1  W   )  ?  M 
 S
    3  		  5   
 x!   Q  w  }
 y ; ]!     
 1   ?  /  &   Y
    _ 
 3  r  O p  	 
  
    Y      
  
 J   D   0 L   S  K   c Z 
 [3    2   	  [ |  $ v!  
   N W   y 9  Y o 1   K  M/     a 3  O $  
 | '  Y  v  ,    9 
   D  $  ! R/    9 
  k  	 /  $ 2     S l1  w p   A   
 t   1!   d  
 3   j  $ (   I   7   u   D   \      	  g 
      y/       E
  L   
   3     	 1       < 9   3  S o  e
  6   _
    0  
 3  t	 [ $ x$  W G    |
 g   ?    
 D  =  
 p2   l2    s  7      4    c 2   $   R     O  !    y  2      a   
/  e 1   *  {$  `         h r  	 3  3	 u  l
 $  / [  ,!   $  n ^      /  r 
2   /  ^   	 B1  M         
 \   m /   C  /   $  & 2  : $     , $3  
   
 A  $  6   
 Q2     
   -   ^ 
/  u + /   A/     
 2   P [ !3   @/   /  #    4 61  A }  |
   	   
  ~ e/   V     
       { ]  ` 
        	 o  `
   
    K    6 .   k/     3
     2   \
    j$  7   
   "
 3  k	   
 2  >  /  Y x  
  > % )  l 
  \  	 \  	 .2  E K  

 $  $ `3   7  3  	   
  f   
 u3  -  /  Y   
 *2  9 2  
 r 4   ! % {  # F
      Y 6  2   C  
 1  
 y $ [1  f     7   o 3    c   !
 
!     	 /    R ^  	   V/   }   L ' +   
   g  M
 	    O m  9
    2   !    9 -   i   0    
    /   j  w$  T &  u$  N   B F   n   \ v   E     F $   3  	   
2   { &   $   I!     a
 /  ]  u W
    "    6  ^      W @3     ]2     |1   G  3    /   
 D  2  v R1  ]    8     ~  
 o3  
   _    Q \ 
      3  w	   L
   
  ` 2   $     \3     -  u   1   p        {  x
 1   u2      
   g     .  
     g 3   g3   R  ~3  A 
      _/     D f
     M #  ~$  j k!   L   8 2    (   . /  q G3   r  f
  X )  
!       q 
 
   
 =     g u*  O @     [ K  2  X f    
 ~/   w   %    >   T  @   v  S Y3    *   x 2  g2   0  
   @
   
 x2     ?  1   ,/     )
 h$  4 >   f      M  2  z 3  	 i$  5 2   [    U!   
      t  h E    t   	  {   F  e  /  .  i   m
 B  1   l    
  m T   x  v    C
 @  3     K 
  #  	      I t  6
    !  y 12  N Y # 83  j  l     >  6  
 4 8 s 5 ?1  J {  
 T1  _ 1    V K
    K  r 
 ;1  F  W 5  
  2      8   | :/   -     /  
   
 '  	 1/   v*  Q U   ~ @ o$  A /  l 3 7  J $   .  W 2  b (  
  d  y 2  f  F     
 4/   $   n  	 -    

  O ( , q$  E Y  	   a 2   3   
    t 6 s 
   }  { I    p 2   7    9
 @1  K 0  8 X        ^/   2    L  
       )  ]/   F3   3   v ! /         ]  /
  R 3     

-- Chunk 247 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:36901-37050
    y s2   !   $  , 23  O   $   0   h +  [   #
 31  > 3  
   
 J3    Q    ?  
  2  @ c     3  ;	  4   g!   
     _ i1  t        
   :
 a     w2   2   (  
 
    : 3  x   "  /   3     g  $  E /!       ^ } ( 3     
 /   z  X  2  R      W  ^   b   n i2   ^ 	 9   ` d  D
   N   $
 G1  R   0
 !   _  h3   N    R m  	 +3  0 L3   R  	 &  _  	 ]    h  ^   
       
 m  \
      V   \2   B   3  M "  	   >  z  v
     
 1   !  !  
 82  c 8    L $        y  t
 [     2     G  2  _ 3  b +  
   
 2   >  /   
!     3
 d!     + $  
 /   2  r 22  Q Y/   3   b2   3   $   /      /  ! ^!      /   
    Y  *   1   m   j
   R!   
    J    (
  ? X!   =  !  p 7!     R  L T
      h2     3     w
 /3  E =!   2   /  n S    3/        2  E   |      s e2   3  Z   
 i  S
 2   u/   |,  T /   ,     m   s  h
  W     	        ^ 	  o !  t    R 3  
 =3  ~   g
   V 2   K  |$  c   R    }/     
 :2  i W1  b 3     <  Q  
    2   3  |   2  P i  	   2     8 
       ^   %
 x !    h   
 3  l [  ,
 g$  3   1   /  i     S
 Z    	  +  ] Q!   ; ?   
 2  
  z  9  v   o 3     /  ` $  2  K   	      a$  - R  p  	  J  ? q2   W  @
    '  4  
    i x # V   !!   H1  S =/   $  f!   /  t     
 j3   $    3  
  @ D3   
!   ` 
 0  $  B    6 : 7   / Z         m   60  0          \  Q b3     ` &/   3  	 4   *   6  3  1	   
 3  )	  e } ? v  
   M
 z!   )  
   9  /    K  0  /  [     i 	/  b     !  m i3  
 "3     
   S   l G!   z %        Y2   E
        Q l  o1  z /  j    2   2  0   ` 
  
   }
 Q    %3    S  /   >     g  	 B2    j    C    h C    x c   # 
  
 |/     * P2      j   
 Q  

 Y1  d "    	 :1  E 8  3      T `$  ,   t3  * 2  )  	   #  
3      1  * 	 /   $  F   i
   /  , b  >
   
    ( /  
   g ,2  ?   )   2      8
    
3   \  v  	 
    
 ,   3 3  P	 $   	2   2   *  0"  ) !  w1   ^3      3   3  o 
   S k      2     
  E 2  6 2     
 l!    V   L /   ` 	 3     
   <  2  H )  
 (  
      = q!   k  N  2  3   d  	 2   W3   5  
 /   o!    3   4   y   I  f 4   u 5    
 V  3      	 e  H     S J 
 b
    1   I   : 2  i R  F  $   o     2  @2  {   
   { %2  *  B "  (  	 :0  3   Z  = {   J *    
   u     k
 n  b
 $  :   /  '  
 .  (  6  2  p x #   	        
 p  8/   J/   :   A   1 
2   K    ?  3   t 
 ,  
 	!  }   r   z
 a
        
   O d    A
  v 3  !	 g
    `/   $   V  	 $     ,
   _ } & 2    b : > n1  y m3   ~  & 4  2   | < - 
 [  )
 3   2  y 2  & C3   /  -   +
 !       t -/   V  
 !  v   p
   7
 
  B     3  	 u  p    4  k  Y
 *3  -  P Q  	 3  }	 W "       +/        P y       /  
 R
    A    X 3!    T c % q     
 6  ^
      V    B 5  T3   !     ' _ & O  x
    ?    l K1  V  Q 
  
 v$  Q 7  c
    b  	    z  
   J   #    3  W  M /   2    l     
 
    
   
    d     u   4 w/        X 2     
  ` 4  Y    }     N      
 /   5/     	 i  1   q  d
 [ 
 K     '
 C2     C  d  p1  {   )
 /  ' Z!   u!  
   
 3  G L    t      j 2   i   52  Z $   /     K 3   +    
 D/     
 ;    
 F  2   0  6 
    2  *   

 '    
 -3  : Z   
  $  v N   E   2  t -
    51  @ B3     +  A
    ]     
   j /  #  
 "  2  } C1  N P    M    

 $     -   ; /   2   "/  { /  m 0  4  ` t  t
 j
    ^        
 S!   !   \ g/     d    
  U /  x  z 3   ^2   t/   l3   $   f          
  M $   O  }  
 |  

-- Chunk 248 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37051-37200
   	
  a >   4  C <2  o z$  ]   
 )      
 )/    L   ,
     a 2  q E1  P   O M  1   g  M
 4     p  h
       E   s 
   
 _   t!  	   b #  |   K /    I U/    -    S _!   J   w 9 %    
   <   6 ;  	  m  3  D	 w 8  b M3    P 3   a 
   
  }       
 '2  0 G 
 $   K    
    	   3   j  V
   
 >  
 d    `    W 3    o
     I
 3  '	   v
   U
 T        Q   M =     0  `  )   3   W  	   P     $  >   2   I   7 ]3   90  2 m / I/   " & 2    E y1    B   .  8!    U    
 ~2   $  
 2  d S  

   W n  x3  3   G      B 
  
 0  : c  	 :  <3  z   
 \ 
   G    q N    i #    ?
  : V    
  m   C | '  f W    Q
 /2  H 3   ~   O  J  g1  r   
 n     8    1  Y  ;!   y " F  
 K3   A  
 y2   2       (/     5
 $   Y    
 .
       
 $   
    3  	   x   /    d ~ = 1     
 >2  u l$  ;   v  z
 (3  (   `   X
      
 
2   /     7
   -
 F 	 3   j  3  	 w     `   	 //   r3  & y$  Z $  %  G v 8 3   z/     +  u 7 Q   
    1   '  /  a :  3  I ^   _    :  9    C/   
  
   
 }$  f >   v  
      V2   z  " )  T ! Y    x   3    b   s X3   */     T  h  P
 )3  *   K
 2  T  	   -"  $   %  =   !  q C      =  
   
    /  )   d
 ;2  l  0    V ]  G
    B  
 ?/       n  F 2  n M  R  
 
2  
   
 H 
 I3       92  f     
  8 < ;/           ,  &2  -   ; 3   y   H   7 s1  ~  .  f        X 2
        ' 3  2   c  A
 q  3     E    k  w  	    a # 2  o U   
      Z  Z ~1    \   3 3   
  b 
       
   
 U  41  ? 3   A      J ) - F  $    &   $ I     3  =	 
!   X/       9 /  
   e
    
  
   
 w   F $  (  p    ~  	 73  g $     
 e  G
  U 
  2   z : k  G   7  d2   X  &
   x : 
     
 D
    $  - ^  	   
   | 
  =1  H 3  ~   '
 n/   /   '   
 :  #  
 .  X _   /      U m  _
 $   $   e b $ M   ;  I    T 21  =  k   
 /   3  b	 <!       0  F $  
 $  =  n p  b
 l  Z
 /       R
 x/   U2   ./   $  	 2   J
    %/  ~ n 0 -  
 j   f$  2 y $ 1 5 a  ;
   _  5
   H3     
 _ ! m    Y
 [  	 b ( F1  Q 3   I  2   33  U   
   2 3  U v  r    p   
   @  
 
  
   /    a   P 2   y  
  3   U
    $   L/   c1  n     W/     =
  `  3    T/    C /  * 3   S  	 1   /  (   2     
    P!   	    ; !   2   @  
3     E   
 H   G  
   i!   $  9   U  	    "  r  3  V	  k   A .  
 Y!    8 '     43  Y &  D1  O 6  
          d L    
 3   ( 	   
 w3  1 `1  k  N $  
     n     H   O   ]
 v/   2  ,  Z   s  q
      
 !    ] `  	 . 
 q   B  t 3  z	      (    
   5  4
    e!   , 
   @!   -2  B  S   f  k 3     
 2  \ /     k$  9 $       d   
 !       
   
 f  J
 o-  V  G   t
 I  !   $  4 B  3   1     r l/     
  3  	      t   $   /   O       e -  
 $     	  ~ /  
   
 X1  c      	 e  	  P 2   2     2 O/   /   u 6 W   <        /  g 
!   
3   /    n s3  ( ;  $   e    H
   b    @  $   9/   @  o  	   
  } H X 1   .  H    	  ? %  
 # ' N3   /  + T  
    @   e 
    >    
 "  
 #/  | N1  Y   %    2     x
 ?
    
    h   i
      3        z |  z

-- Chunk 249 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37201-37350
    A3   $   2   >/     D    	   [2      G   ?3   2  Y - 1   
        
 n  9   L  w    
     
  p/     \/   2  
   

 /  [   i  S
 $  1 $   k2     
  [ 3  	   	  ] R2      W   	 c/       
 Z  *
 u  
   x y  ! b$  . 	  
 !   1   Q   /  y  K w "  _    D  
    _ :  
 {3  ;   :   h 3  #	 
   *   X $  ?   F 2  c t  v 7  I D L 7    > *   O1  Z | > g ) O     ? 3       $    A   
   
       /   ,   , $    - B  3   E  p 2   |3  = B  2   1
    81  C $      { 5  	3     P    J   
 { &   6  / 3   2  ~ 2  
 3   $  A       
 N   F 2    7 y3  6     U p$  C     n T  F R `!   /  O   z <     }2   3  f 3     
 7/   1   \   5!   ;  x1     
 /     
    }  	 H  
 V
    G  e     
 3  Y	 2   2  " y  	   3  h c  3   Z    
 T2     +
 s/    Y   1             a         2   3               '  1   o   1   D   4   1   D   2   3   D   4   I   J   i   j   L      l        n   s   D   Z   
  D   z   
  d   z   
  L   J   L   j   l   j   N   J   N   j   n   j   D   Z   D   z   d   z   h   f  j   r   y  {    w   y                   
      (            
  c  l   s   x         E                                              e    '  t  H  t    t  J  t  M  2              
    q      q      A      B   D   E     G   H   I   J   K   L   M   N   O   "  P   R   T   U   W   a   P  Q  
  b   d   e   Y  [  \  g   k   m   K  o   T  
  
  p   t   u   

  o  v   %
            i   r   u   v             =  R  c   U     \  f   _  a  e  h  i  j  {
    m  
    q  p  r  s  t  u  x            

      z           a     s                     B        B                         B                         B                                                                                  3  .   .   .   .   .   .       2   2   2   2   2   5   5   5   5   5   !   !         ?   ?   ?   !   !   ?   2   2   2   2       0   i   4   5   6   7   8   9   +   "  =   (   )   n   0   1   2   3   4   5   6   7   8   9   +   "  =   (   )   a   e   o   x   Y  h   k   l   m   n   p   s   t   R   s   a   /   c   a   /   s   C      C   c   /   o   c   /   u        F   g   H   H   H   h   '  I   I   L   l   N   N   o   P   Q   R   R   R   S   M   T   E   L   T   M   Z   Z   B   C   e   E   F   M   o           i   F   A   X           "  D   d   e   i   j   1   D   7   1   D   9   1   D   1   0   1   D   3   2   D   3   1   D   5   2   D   5   3   D   5   4   D   5   1   D   6   5   D   6   1   D   8   3   D   8   5   D   8   7   D   8   1   D   I   I   I   I   I   I   I   V   V   V   I   V   I   I   V   I   I   I   I   X   X   X   I   X   I   I   L   C   D   M   i   i   i   i   i   i   i   v   v   v   i   v   i   i   v   i   i   i   i   x   x   x   i   x   i   i   l   c   d   m   0   D   3   +"  +"  +"  +"  +"  ."  ."  ."  ."  ."  1   2   3   4   5   6   7   8   9   1   0   1   1   1   2   1   3   1   4   1   5   1   6   1   7   1   8   1   9   2   0   (   1   )   (   2   )   (   3   )   (   4   )   (   5   )   (   6   )   (   7   )   (   8   )   (   9   )   (   1   0   )   (   1   1   )   (   1   2   )   (   1   3   )   (   1   4   )   (   1   5   )   (   1   6   )   (   1   7   )   (   1   8   )   (   1   9   )   (   2   0   )   1   .   2   .   3   .   4   .   5   .   6   .   7   .   8   .   9   .   1   0   .   1   1   .   1   2   .   1   3   .   1   4   .   1   5   .   1   6   .   1   7   .   1   8   .   1   9   .   2   0   .   (   a   )   (   b   )   (   c   )   (   d   )   (   e   )   (   f   )   (   g   )   (   h   )   (   i   )   (   j   )   (   k   )   (   l   )   (   m   )   (   n   )   (   o   )   (   p   )   (   q   )   (   r   )   (   s   )   (   t   )   (   u   )   (   v   )   (   w   )   (   x   )   (   y   )   (   z   )   A   B   C   D   E   F   G   H   I   J   K   L   M   N   O   P   Q   R   S   T   U   V   W   X   Y   Z   a   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p   q   r   s   t   u   v   w   x   y   z   0   +"  +"  +"  +"  :   :   =   =   =   =   =   =   j   V   a-  k     N  (N  6N  ?N  YN  N  N  N  N  ?Q  eQ  kQ  Q  Q  Q  Q  Q   R  R  R  S  S  8S  AS  \S  iS  S  S  S  S  V  W  X  Y  
Y  Y  'Y  sY  P[  [  [  \  "\  8\  n\  q\  ]  ]  ]  ]  r^  z^  ^  ^  ^  
_  _  P_  a_  s_  _  b  6b  Kb  /e  4e  e  e  e  e  e  e  f  g  (g   k  bk  yk  k  k  k  k  l  l  4l  kp  *r  6r  ;r  ?r  Gr  Yr  [r  r  s  s  t  t  u  u  (u  0u  u  u  vv  }v  v  v  v  w  w  w  :y  y  y  tz  z  z  s|  |  6  Q        
    3              
      n  r  x  M  k  @  L  c  ~    ҉     7  F  U  x    d  p      ʎ          I  Ƒ  ̑  ё  w    
        Q  ^  b  i  ˗          ۘ  ߘ          ؚ  ߚ  %  /  2  <  Z    u        Þ  ͞  ў             ;  J  R            0  AS  DS  ES      0      0  0  0  0  0                                         !  	  
  
  
  
            a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  `                    
      
  
     "  #  '  )  +  ,  -  .  /  2  6  @  G  L      W  X  Y                   N  N  	N  V  
N  -N  
N  2u  YN  N  N  )Y  0W  N  (      )   (     )   (     )   (     )   (     )   (     )   (   	  )   (   
  )   (   
  )   (     )   (     )   (     )   (     )   (     )   (      a  )   (     a  )   (     a  )   (     a  )   (     a  )   (     a  )   (   	  a  )   (   
  a  )   (   
  a  )   (     a  )   (     a  )   (     a  )   (     a  )   (     a  )   (   
  n  )   (   
  i  
  e    )   (   
  i    n  )   (    N  )   (   N  )   (   	N  )   (   V  )   (   N  )   (   mQ  )   (   N  )   (   kQ  )   (   ]N  )   (   AS  )   (   g  )   (   kp  )   (   4l  )   (   (g  )   (   ё  )   (   W  )   (   e  )   (   *h  )   (   	g  )   (   >y  )   (   
T  )   (   yr  )   (     )   (   ]y  )   (   R  )   (   N  )   (   |T  )   (   f[  )   (   v  )   (   O  )   (   ǌ  )   (   TS  )   (   my  )   (   O  )   (     )   (     )   OU  |^  e  {  P   T   E   2   1   2   2   2   3   2   4   2   5   2   6   2   7   2   8   2   9   3   0   3   1   3   2   3   3   3   4   3   5                	  
  
               a    a    a    a    a    a  	  a  
  a  
  a    a    a    a    a    a    a       i  
  n  
  t  
  n   N  N  	N  V  N  mQ  N  kQ  ]N  AS  g  kp  4l  (g  ё  W  e  *h  	g  >y  
T  yr    ]y  R  y  7u  sY  i  *Q  pS  l    O  Q  ck  
N  -N  
N  ]  S  ;S  [  f[  v  O  ǌ  TS  
Y  3   6   3   7   3   8   3   9   4   0   4   1   4   2   4   3   4   4   4   5   4   6   4   7   4   8   4   9   5   0   1   g  2   g  3   g  4   g  5   g  6   g  7   g  8   g  9   g  1   0   g  1   1   g  1   2   g  H   g   e   r   g   e   V   L   T   D   0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  N  T  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0   p  1   p  2   p  3   p  4   p  5   p  6   p  7   p  8   p  9   p  1   0   p  1   1   p  1   2   p  1   3   p  1   4   p  1   5   p  1   6   p  1   7   p  1   8   p  1   9   p  2   0   p  2   1   p  2   2   p  2   3   p  2   4   p  h   P   a   d   a   A   U   b   a   r   o   V   p   c   d   m   d   m   2   d   m   3   I   U   s^  b  -f  T  'Y  ck  f  l  *h  _  O  >y  p   A   n   A     A   m   A   k   A   K   B   M   B   G   B   c   a   l   k   c   a   l   p   F   n   F     F     g   m   g   k   g   H   z   k   H   z   M   H   z   G   H   z   T   H   z     l   m   l   d   l   k   l   f   m   n   m     m   m   m   c   m   k   m   m   m   2   c   m   2   m   2   k   m   2   m   m   3   c   m   3   m   3   k   m   3   m   "  s   m   "  s   2   P   a   k   P   a   M   P   a   G   P   a   r   a   d   r   a   d   "  s   r   a   d   "  s   2   p   s   n   s     s   m   s   p   V   n   V     V   m   V   k   V   M   V   p   W   n   W     W   m   W   k   W   M   W   k     M     a   .   m   .   B   q   c   c   c   d   C   "  k   g   C   o   .   d   B   G   y   h   a   H   P   i   n   K   K   K   M   k   t   l   m   l   n   l   o   g   l   x   m   b   m   i   l   m   o   l   P   H   p   .   m   .   P   P   M   P   R   s   r   S   v   W   b   V   "  m   A   "  m   1   e  2   e  3   e  4   e  5   e  6   e  7   e  8   e  9   e  1   0   e  1   1   e  1   2   e  1   3   e  1   4   e  1   5   e  1   6   e  1   7   e  1   8   e  1   9   e  2   0   e  2   1   e  2   2   e  2   3   e  2   4   e  2   5   e  2   6   e  2   7   e  2   8   e  2   9   e  3   0   e  3   1   e  g   a   l   J  L  o  C   F   Q   &  S  '  7  k  R    f   f   f   i   f   l   f   f   i   f   f   l   s   t   s   t   t  v  t  e  t  k  ~  v  t  m                    +       q  q  {  {  {  {  ~  ~  ~  ~          z  z  z  z          y  y  y  y                                                                                                                        T    T                        T    T                        t                      I  I  J  T  '  J  T  '  J  T    J  T    J  T  H  J  T  H  J  T    J  T    J  T    J  T    J  T    J  T    J  T    J  T    J  T    J  T  I  J  T  I  J  T  I          J  T  ,  J  T  -  J  T  E  J  T  I  J  T  J  (  ,  (  -  (  .  (  E  (  I  (  J  *  ,  *  -  *  .  *  E  *  I  *  J  +  ,  +  E  +  I  +  J  ,  -  ,  E  -  ,  -  E  .  ,  .  -  .  E  3  ,  3  -  3  .  3  E  5  -  5  E  6  ,  6  -  6  .  6  E  7  -  7  E  8  E  9  ,  9  E  :  ,  :  E  A  ,  A  -  A  .  A  E  A  I  A  J  B  -  B  E  B  I  B  J  C  '  C  ,  C  -  C  .  C  D  C  E  C  I  C  J  D  ,  D  -  D  .  D  E  D  I  D  J  E  ,  E  -  E  .  E  E  E  I  E  J  F  ,  F  -  F  .  F  E  F  I  F  J  G  ,  G  E  G  I  G  J  J  ,  J  -  J  .  J  E  J  I  J  J  0  p  1  p  I  p      L  Q      M  Q      N  Q      O  Q      P  Q      Q  p  J  T  1  J  T  2  J  T  E  J  T  F  J  T  I  J  T  J  (  1  (  2  (  E  (  F  (  I  (  J  *  1  *  2  *  E  *  F  *  I  *  J  +  1  +  2  +  E  +  F  +  I  +  J  A  I  A  J  B  I  B  J  C  '  C  D  C  E  C  I  C  J  D  E  D  I  D  J  E  '  E  E  F  1  F  2  F  E  F  F  F  I  F  J  I  p  J  1  J  2  J  E  J  F  J  I  J  J  J  T  ,  J  T  -  J  T  .  J  T  E  J  T  G  (  ,  (  -  (  .  (  E  (  G  *  ,  *  -  *  .  *  E  *  G  +  E  ,  -  ,  E  -  ,  -  E  .  ,  .  E  3  ,  3  -  3  .  3  E  5  -  5  .  5  E  6  ,  6  -  6  .  6  E  7  -  8  E  9  ,  9  E  :  ,  :  E  A  ,  A  -  A  .  A  E  B  -  B  E  C  ,  C  -  C  .  C  D  C  E  D  ,  D  -  D  .  D  E  D  G  E  ,  E  -  E  .  E  E  F  ,  F  -  F  .  F  E  F  G  G  ,  G  E  G  p  J  ,  J  -  J  .  J  E  J  G  J  T  E  J  T  G  (  E  (  G  *  E  *  G  +  E  +  G  3  E  3  G  4  E  4  G  C  D  C  E  D  E  F  E  F  G  J  E  J  G  @  N  Q  @  O  Q  @  P  Q  7  I  7  J  9  I  9  J  :  I  :  J  3  I  3  J  4  I  4  J  -  I  -  J  ,  I  ,  J  .  I  .  J  5  I  5  J  6  I  6  J  4  ,  4  -  4  .  4  E  4  1  3  1  5  1  6  1  7  I  7  J  9  I  9  J  :  I  :  J  3  I  3  J  4  I  4  J  -  I  -  J  ,  I  ,  J  .  I  .  J  5  I  5  J  6  I  6  J  4  ,  4  -  4  .  4  E  4  1  3  1  5  1  6  1  4  ,  4  -  4  .  4  E  3  G  4  G  7  E  3  ,  3  -  3  .  4  ,  4  -  4  .  7  E  8  E  '  K  '  K  *  ,  E  *  -  ,  *  -  ,  *  -  E  *  .  E  *  E  ,  *  E  -  *  E  .  ,  E  -  ,  E  -  -  E  J  -  E  I  3  -  ,  3  ,  -  3  ,  I  3  E  -  3  E  -  3  E  ,  3  E  E  3  E  E  5  -  -  5  -  -  5  E  E  4  -  E  4  -  E  4  ,  J  4  E  .  4  E  .  4  E  E  4  E  E  6  -  I  6  .  E  6  .  E  7  E  -  7  E  -  7  E  E  7  E  J  9  ,  E  9  E  E  9  E  E  9  E  I  :  E  E  :  E  J  :  E  I  A  .  E  A  .  E  B  E  -  B  E  E  D  -  E  D  -  J  D  -  I  D  ,  ,  D  ,  ,  D  .  E  D  .  E  D  E  -  D  E  -  E  -  ,  E  -  E  E  -  J  E  ,  -  E  ,  E  E  .  ,  E  .  E  E  ,  .  G  E  ,  G  E  E  F  -  E  F  -  I  F  ,  E  F  ,  E  F  ,  I  F  E  J  F  E  I  J  E  E  J  E  E  (  .  J  *  ,  J  *  ,  I  *  .  J  *  .  I  *  E  J  *  E  I  ,  E  J  ,  -  I  ,  E  I  3  .  I  5  -  J  4  -  J  6  -  J  D  ,  J  D  E  J  J  -  J  J  ,  J  J  E  J  E  E  J  B  E  J  F  -  J  B  E  -  D  -  E  9  E  J  C  E  J  F  ,  -  E  .  J  D  ,  E  C  E  E  D  ,  E  F  ,  -  ,  -  J  -  ,  J  E  ,  J  A  E  J  (  -  J  C  E  E  9  ,  E  5  E  E  3  .  J  F  ,  J  5  D    B  D    '  D  D  G  '  C  (  1  E  -  E  /  5  D  9  E  1  3  H  D  9  D  J  G  H  3  D  E  5  D  I  5  D  I      '  D  D  G      9  D  J  G      H  3  D  E  ,  D      ,  D  '  D  G  1    '  D  ,   0  0  :   ;   !   ?   0  0  .   .   .   .   .         _   _   (   )   {   }   0  0  0  0  
0  
0  0  	0  
0  
0  0  0  [   ]                           _   _   _   ,   0  .   ;   :   ?   !      (   )   {   }   0  0  #   &   *   +   -   <   >   =   \   $   %   @       K  @  K      L      M      N  @  N      O  @  O      P  @  P      Q  @  Q      R  @  R  !  '  S  '  S  '  T  '  T  H  T  H  T  '  U  '  U  J  T  J  T  J  T  J  T  '  '  (  (  (  (  )  )  *  *  *  *  +  + 

-- Chunk 250 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37351-37500
 
           	    
            
 
                                   
                           
             
     	                                
                                                                	                                                  
         	                                              
                 
                                                                            
                    
 
                                                                            	 
         
                  
                                                       	                           
                                                                                                                                          	                                                                                   
                                                
                                 
                                                                
  
                                       
                       
                                             
                     
     
                                                                                   
                                                                      
           	                                                                                                                                                                                                                                                                                                                       	                                                                                                                                                                                                                                    
                          
                                                                     :  A 4 
      4 t #  |  M
  R   I    t  -           
     &  A
      
  
    z   ko u  E / O ;
 -       t    ,0  M
  O  ^  A  D D
  $  
 	  -  0     "   
  (        ro  4      A {  W  P m  
    >        ,  s f   n  4  
  9    A 6  %  6k W  I        !    ]o  A     Y 
      8  
  Q  	  
    o  no 
  
  
    
  Ũ    l d  )
   0    L  
  =      &  
  M     	  B , 
    !  
 >  S	  [   D 3k   X &  A   X   
    2 
  d  5
  ?
  Z  S4 U 
  B  L
   2   c
    5 i    d 3  
  >
     
 q  6
  q    <      T       & 
    [ 
        2
  
  z  
     }     D   so 2 8  
  7   @    F 
 I . >  
 	  - 
  O	  s I4 8 6  
     
    U4 
  < ' o 
 
 h  2 
   H ' x   
  8  :	  
  L	  do    3   5 M    /  (      T  B 4   
  2
  
 % 
       !     P4 -  
  
  [    Y   p  K       ?    M 
  
  c
  5  
 
   F  
  u    
  4  wo 	     
  
  0      8
  W  *  v   r    r    
  
 c po 
  G    1  
  
  7 
    
  +
    Z  5 l    ;  
   \    f    
      $  &  $  -     
  
  Z  R	  ] V	  
  3 g   >
     >  g   
    " ,    0  4 &  2    	  W j  y 
  )  4  
  Q  K4 -  	  9 4 [o 
    
 I   @  m 
  L ?  ?
 
  E X      4  
 5
  7
          ;  ; K	  H <
  
  F &    U
  <
     	 4 ,      
    <  <	  T 
          _  o '          
        *  p  	          A
  X  
  \  0   $
             ^ =  Q         -     
  
 
  { h   0
     * = k   c     = 
  @ ?    
  5  v     F yo Y   < :   A G 3  ` @ r    s  '     0 F -  
        Q	  
  )  1   m  # J 
   C  
     >   . 
  >  -  
   |o    H  z  # 5    U  Wo 
 * w   

-- Chunk 251 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37501-37650
   u
  uo E
 <  7    3 T	  
  oo  N     
  )  	  5  
    J
    
    
  l  
  o 3  O  7  
  q   2      w     
     
  { 
  h   
  L
  7 =     p   b    ?     ` 
 O ao     9  6  /
 >
  : I   A
  U  4 ,    ;
  # 
  
    <     ( 9    ) 
     <
  
      
    ? 
    6
 ;  *    H     7 
  b :   7 -   
  s _    s    j    	   ' , C
  
  S      
  
      
 
     
    b
  B  X  5  i      i      Y -  
 X  (    j <   i p  b  N       B
 *  
   k  , 6   g   
   o * ) ( p      G	  q   a  4
 
  > 5 0 [  4 I F c   
  5
          9 p @
  _    H
  4  C ,     # `o   M      Ĩ  L  < )  B  ) W	   
       
   	 }  
 
 5         fo >
  2 U       c	      
    
  7 
  @
    8   P        	   
    %       
 | 
  ?     <
  W W        +   
  K  h        2k     M  
   %  ;   d    w  b
  E 
  /  
        V 
  L  z 
  
  .0  9   j  
   
 9    4
    0 
  6  H	    1
  ?
   
   
    1 B (
  2 E *0  5 
  
     7  o  C
  
    
  	   
 
   /  
   _   Z s '
       ]  
   C 	 A	  R  
  )      j   q  Qo   -  
 -  *   
  
   8
 v        .  
 $ 1  
  } {o 4
     vo 
    I    
 ?  D -  
  r 
 -     to G
 C 0k  K
  {  "  G4 
 
 -   $   R     " 0      2 3 B 
    q    ^  $ 
  ^  =
 e g   t 8 7 
  
  @ r  J  v 
   c
  L    |  Uo 
   
     +  n 8    M4   G m  
  G
  J
  L
  
    V
   G
  

 
    
 
  
  '       -  a            
         ( 
     <  H
  N	  K        
  
  
  ; o  e      < 
        ;   -  ,        xo       1
 3
     Q  
  
    >       -  Xo  mo J M
  
 
 
  `  
 ^     j  	  
 * 
 ;  ]  5  	     
   J  
   
  
     "  
       	  N    

-- Chunk 252 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37651-37800
    @
  & S Q4 Y  a  | x  0  eo 1 &  =
 
    V  
 
    ) 8    E      C     
   2  T4 K *  y  `  Y  :  
  4  F  S   ; s  g  r  1 
     ho    -       V      {  D       +      B   f l   )     $         6 P =   
  3     C    
  I  2
  S     G 1 -  G
    ,  $     $ b  	    L
  '    -   
  0             
  	   
     F
     :
 % 
    y           U       o 
  c +        M  L 
  ,    g  k  u  H 
  p ^   {  y     J  ,  6 K    F    9   & &
 
 ,  o . D   6  G
  
  T  
   lo D    
   w 
  ^ U
  
  
  ;    
   >  <    ^   O  = h    +  G N    @    3
 o 
   ~ E	    Z   B	  0   P o   @ `  -  ?  x  	      Ro .  /
  .  -   1   
   
  >   
  -         E   G  b
  	  ;    >  H M
  
  
  E   t  C      0
   2  j 
  zo 
    b 
 +   p
  e [   
   3    "    3  u   N * >  l  ;	  -        8 6  ) 
  
  
 9   
    +0   1 +  ~   P  -    .  L  
        w  8     D 3
      
  D
 9  9     K     G      5    ]  
  }  e 
 =    o Z 
  =   6  0 D	    :
 1 0   	 L  B
  F	  @ 
  	        
  A      
  
  '  - x -  4k 
  9         :
      6 7    1  
  	  ? ! 
     j  
    j jo o ' 1 A V  a F  : 
  I	  &
   6  g  
   %   e  	     K
  t D O4 -  8  :         U	  io    @ 
  (  (      N    f 2   C C   B
  ?
  -0   
 -  A  
 H # 
 r  6  c  V
  9     B Y  > 9 s  R  j [  
    
 J	  >  r H
  
     T 9
 8 -  :       è      3   R 7   W 6  >
     D @	  
    2 C    & S ?
    4     0  @4 
  F %
  
   #  
 C	    
  %
 -     +   1  #       = '  .
    o  % z    
 G   A
 h    6 A /  V  7 L4   k 
  - 
  ;    @    3  H4   
    < M  :      Vo 0  '  +    
  _     p  i   4  < 
 (    l V     
 3 Y  B
  -
  8    o  U  
  q  
   N4   D
  
  Oo   ! 
      B  C  @
  l      5 J4   9
 o  ?	           So E  S  <
    To      o     K
     
   #  + 
  )  /0  M  
  	        ¨  1k       M	  K  >  >	  !  
  *
  5  #    ! \ y     G  ^o 
    W
  bo    5  }o   F
  D -  .     
 i _  @  
  - -  H    c  \ 5  
  ,    "  -        W /  7  R  
            R      r 5 C
  j     
 n        2 ;    k  k ,
  :   d   E 6
        
    ,   P  R4 
  -  -  J  co   M    1
 @  !   f 4    b	          ~   7  m 
  (  [  J  
  
  o    u    ~o 7  /   i   ?
  A
  o   h D
  N      
    ,    ?
  +   \  go  o  -    = C
  6             +      
    v    _o       1     K
  W
  ]         -  B
  
  Yo       8  Z   n   !  Q    :  V    

-- Chunk 253 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37801-37950
  G    $
 
 B 
    s  S    3   3 -  3  q
   
       
 
  O   9    n  :  o '
 x  ]  / 6       
  B 
  /   |  ;  H
      
   "  X k  1  qo >  .     C   t  -  b   =  <
 K 2  Q o f 
  
         8  
     L   5k Q
  %  q  ? H   	   4  m    
  5    ? 	 ?   \o      *   @
   }  Zo  	        |  
 	    %  : '  J             	   	      
   
      
   
      
   
      
   
               
   
                          !   "      #   %      &   *      +   +      ,   ,      -   -      .   /      0   9      :   :      ;   @      A   Z   	   [   `      a   z   	   {   ~                                                                           	                                                               	                           	                  	                  	                 	              	              	              	              	             o  
   p  s  	   t  u     v  w  	   z  }  	   ~  ~         	              	              	       	       	       	              	       
     /  	   1  V  	   Y    	                                   
              
              
              
              
                                 	  
     
  
      
  
     
  
                 
     J      K  _  
   `  i     j  j     k  l     m  o      p  p  
   q            
                     
               
              
                              
     /      0  J  
   K            
                      
                            
              
            #  
   $  $     %  '  
   (  (     )  -  
   .  X     Y  [  
   \  _     `  j      k  o     p                                 
               
            	  
   	  9	  	   :	  :	  
   ;	  ;	  	   <	  <	  
   =	  @	  	   A	  H	  
   I	  L	  	   M	  M	  
   N	  P	  	   Q	  W	  
   X	  a	  	   b	  c	  
   d	  	  	   	  	  
   	  	  	   	  	  	   	  	  	   	  	  	   	  	  	   	  	  	   	  	  	   	  	  
   	  	  	   	  	  
   	  	  	   	  	  	   	  	  
   	  	  	   	  	  	   	  	  	   	  	  	   	  	  
   	  	  	   	  	     	  	  	   	  	     	  	  	   	  	  
   
  
  
   
  
  	   
  

  	   
  
  	   
  (
  	   *
  0
  	   2
  3
  	   5
  6
  	   8
  9
  	   <
  <
  
   >
  @
  	   A
  B
  
   G
  H
  
   K
  M
  
   Q
  Q
  
   Y
  \
  	   ^
  ^
  	   f
  o
  	   p
  q
  
   r
  t
  	   u
  u
  
   v
  v
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  
   

-- Chunk 254 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:37951-38100
  
  	   
  
  
   
  
  
   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	   
  
  
   
  
  	   
  
     
  
  	   
  
  
   
  
  
   
  
  	   
  

  	   
  
  	   
  (
  	   *
  0
  	   2
  3
  	   5
  9
  	   <
  <
  
   =
  >
  	   ?
  ?
  
   @
  @
  	   A
  D
  
   G
  H
  	   K
  L
  	   M
  M
  
   U
  V
  
   W
  W
  	   \
  ]
  	   _
  a
  	   b
  c
  
   f
  w
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
     
  
     
  
      
   
  
   
  
  	   
  
  
   
  

  	   
  
  	   
  (
  	   *
  9
  	   <
  <

-- Chunk 255 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38101-38250
  
   =
  =
  	   >
  @
  
   A
  D
  	   F
  H
  
   J
  M
  
   U
  V
  
   X
  Z
  	   ]
  ]
  	   `
  a
  	   b
  c
  
   f
  o
  	   w
  w
  	   x
  ~
     
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  	    
  
  
   
  

  	   
  
  	   
  :
  	   ;
  <
  
   =
  @
  	   A
  D
  
   F
  H
  	   J
  L
  	   M
  M
  
   N
  O
  	   T
  a
  	   b
  c
  
   f
  
  	   
  
  
   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  
   
  
  
   
  
  	   
  
  	   
  
  	     0  	   1  1  
   2  3  	   4  :  
   ?  ?     @  F  	   G  N  
   O  [  	       	       	       	       	       	       	       
       	       
       	       	       	       
       	       	        	       
     4  	   5  5  
   6  6  	   7  7  
   8  8  	   9  9  
   :  =     >  G  	   I  l  	   q  ~  
       	       

-- Chunk 256 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38251-38400
       	       
       	       
       
       	       
       	       	      ,  	   -  0  
   1  1  	   2  7  
   8  8  	   9  :  
   ;  <  	   =  >  
   ?  W  	   X  Y  
   Z  ]  	   ^  `  
   a  p  	   q  t  
   u    	       
       	       
       	       
       	       
       	       	       	     H  	   J  M  	   P  V  	   X  X  	   Z  ]  	   `    	       	       	       	       	       	       	       	       	       	     Z  	   ]  _  
   `  |  	       	              	       	                	              	              	        	       
       	     1  	   2  3  
   4  6  	   @  Q  	   R  S  
   `  l  	   n  p  	   r  s  
       	       
       	       
       	       
       	       
       	              	       
       	             
     
  
  
              
       	      x  	       	       
       	       
       	       	      
  	      "  
   #  &  	   '  (  
   )  +  	   0  1  	   2  2  
   3  8  	   9  ;  
   @  @     D  E     F  m  	   p  t  	       	       	       	               	       
       	       
   
  U  	   V  V  
   W  W  	   X  ^  
   `  `  
   a  a  	   b  b  
   c  d  	   e  l  
   m  r  	   s  |  
       
       	       	       	       
        
     3  	   4  4  
   5  5  	   6  :  
   ;  ;  	   <  <  
   =  A  	   B  B  
   C  L  	   P  j  	   k  s  
   t  ~  	       
       	       
       	       
       	       
       	       
       	       
       	       
       	       
       	     +
  	   ,
  3
  
   4
  5
  	   6
  7
  
   ;
  I
  	   M
  
  	   
  
  	   
  
  	   
  
  
   
  
  	   
  
  
   
  
  	   
  
  
   
  
  	   
  
  
   
  
  	   
  
  
   
  
  	   
  
  
   
  
  	    
  
  	   
  
  
    
    	     
  	      E  	   H  M  	   P  W  	   Y  Y  	   [  [  	   ]  ]  	   _  }  	       	       	              	              	       	              	       	              	              	       	              
      
   
            	               '      (   (      )   )      *   *   
   +   +      ,   ,      -   -   
   .   .      /   /      0   4      5   C      D   D      E   ^      _   _      `   d      f   f   
   g   g      h   h      i   i      j   o      p   p      q   q   	   t   y      z   {      |   ~            	                                    	                  
    !  !     !  !  	   !  !     !  !  	   !  	!     
!  !  	   !  !     !  !  	   !  !     !  
!  	   
!  #!     $!  $!  	   %!  %!     &!  &!  	   '!  '!     (!  (!  	   )!  )!     *!  -!  	   .!  .!     /!  9!  	   :!  ;!     <!  ?!  	   @!  D!     E!  I!  	   J!  M!     N!  O!  	   P!  _!     `!  !  	   !  !     !  "     "  "     "  "     "  5#     6#  z#  	   {#  #     #  #  	   #  &$     @$  J$     `$  $     $  $     $  $  	   $  &     &  &  	   &  '      (  (  	    )  s+     v+  +     +  +      ,  ,  	   ,  ,     ,  ,  	   ,  ,  
   ,  ,  	   ,  ,      -  %-  	   '-  '-  	   --  --  	   0-  g-  	   o-  p-  	   -  -  
   -  -  	   -  -  	   -  -  	   -  -  	   -  -  	   -  -  	   -  -  	   -  -  	   -  -  	   -  -  
    .  ].     .  .     .  .      /  /     /  /      0   0     0  0     0  0  	   0   0     !0  )0  	   *0  -0  
   .0  /0  	   00  00     10  50  	   60  70     80  <0  	   =0  ?0     A0  0  	   0  0  
   0  0     0  0  	   0  0     0  0  	   0  0     0  0  	   1  /1  	   11  1  	   1  1  	   1  1     1  
2  	   
2  
2      2  O2  	   P2  _2     `2  {2  	   |2  ~2     2  2  	   2  2     2  2  	   2  2     2  v3  	   w3  z3     {3  3  	   3  3     3  3  	   3  3      4  M  	   M  M      N    	     Ƥ     Ф  
  	   
         +  	   @  n  	   o  r  
   s  s     t  }  
   ~           	       
       	       
       	      !     "    	            ʧ  	   Ч  ѧ  	   ӧ  ӧ  	   է  ٧  	       	       
       	       
     
  	   
  
  
   
  $  	   %  &  
   '  '  	   (  +     ,  ,  
   0  7  	   8  9     @  s  	   t  w       è  	   Ĩ  Ũ  

-- Chunk 257 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38401-38550
   Ψ  ٨  	       
       	       
      %  	   &  -  
   .  F  	   G  Q  
   R  S  	   _  |  	       
       	       
       	       
       	       
     ͩ  	   ϩ  ٩  	   ީ    	       
       	      (  	   )  .  
   /  0  	   1  2  
   3  4  	   5  6  
   @  B  	   C  C  
   D  K  	   L  L  
   M  M  	   P  Y  	   \  {  	   |  |  
   }    	       
       	       
       	       
       	       
       	       
   ª  ª  	   ۪    	       
       	       
       	   	    	       	      &  	   (  .  	   0  i  	   j  k     p    	       
       	       
       	       
       	        	       	       	      m  	   p    	        	       	   
  
     
  
  
     (     )  )     *  O     P  =      >  O     P                                   
             /  
   0  O     P  P     Q  Q     R  R     T  T     U  U     V  ^     _  _     `  a     b  c     d  f     h  h     i  j     k  k     p                               
     
  
     
  
     
  
                                  !  :  	   ;  @     A  Z  	   [  e     f    	       	       	       	       	                                         
  	   
  &  	   (  :  	   <  =  	   ?  M  	   P  ]  	       	       	          	    3 	   7 ? 	   @       	               	     
     	     	     
          # 	   - J 	   P u 	   v z 
     	     	     	      	     	     	     	     ' 	   0 c 	   o z 	   |  	     	     	     	     	     	     	     6 	   @ U 	   ` g 	     	     	     	     
	    	 	     	  
    
 
 
   
 
    
 
 
   
 

    

 
 
   
 7
    8
 :
 
   ;
 >
    ?
 ?
 
   @
 
    
 
 
   
 8
    9
 ?
    @
 
     
 #
     $
 '
 
   (
 /
    0
 9
    :
 _    ` ~           
          
     /    0 E     F P 
   Q Y     Z       
            	     
    7 	   8 F 
   G M 	   R e    f o 	   p p 
   q r 	   s t 
   u u 	     
     	     
     	     
     	     
     	     	     	      
    & 	   ' + 
   , , 	   - 4 
   6 G 	   P r 	   s s 
   t v 	     
     	     
     	     
     	     
     	     	      	    . 	   / 1 
   2 3 	   4 4 
   5 5 	   6 7 
   8 = 	   > > 
   ? @ 	   A A 
     	     	     	     	     	     	     
     	     
     	      
     	    
 	     	    ( 	   * 0 	   2 3 	   5 9 	   ; < 
   = ? 	   @ @ 
   A D 	   G H 	   K M 	   P P 	   W W 	   ] c 	   f l 
   p t 
     7 	   8 ? 
   @ A 	   B D 
   E E 	   F F 
   G [ 	   ] ] 	   ^ ^ 
   _ a 	     	     
     	     
     	     
     	     
     	     	     	     
     	     
     	     
     	     
     2 	   3 : 
   ; < 	   = = 
   > > 	   ? @ 
   A D 	   P Y 	   ` l      	     
     	     
     	     
     	     
     	     	      	   
  
     ! 	   " % 
   & & 	   ' + 
   0 F 	     . 	   / 7 
   8 8 	   9 : 

-- Chunk 258 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38551-38700
   ; ; 	     	     	   	 	 	   
  	     	    5 	   7 8 	   ; < 
   = = 	   > > 
   ? B 	   C C 
   D F 	   P Y 	     	     	     
     
     	     
     	       	     
     	   	 
 
   
 2 	   3 8 
   9 : 	   ; > 
   ? F 	   G G 
   P P 	   Q V 
   W X 	   Y [ 
   \  	     
     	     
     	     	     	 	    
 
 	   

 /
 	   0
 6
 
   8
 =
 
   >
 E
 	   P
 l
 	   p
 
 	   
 
 
   
 
 	   
 
 
   
 
 	   
 
 
   
 
 	   
 
 
    
 
 	   
 	
 	   

 0
 	   1
 6
 
   :
 :
 
   <
 =
 
   ?
 E
 
   F
 F
 	   G
 G
 
   P
 Y
 	   `
 e
 	   g
 h
 	   j
 
 	   
 
 
   
 
 	   
 
 
   
 
 	   
 
 
   
 
 	   
 
 	   
 
 	   
 
 
   
 
 	      
     	    5 	   6 : 
   > ? 	   @ @ 
   A A 	   B B 
   C Y 	     	     	                   # 	    $ n$ 	   p$ t$ 	   $ C% 	   / / 	    0 ?4 	   @4 @4 
   A4 F4 	   G4 U4 
    D FF 	    h 8j 	   @j ^j 	   `j ij 	   nj j 	   j j 	   j j 	   j j 
   j j 	    k /k 	   0k 6k 
   7k Ek 	   Pk Yk 	   [k ak 	   ck wk 	   }k k 	   @n n 	    o Jo 	   Oo Oo 
   Po o 	   o o 
   o o 	   o o 	   o o    o o 	   o o 
   o o 	    p  	     Ռ 	      	     	     	     	     " 	   2 2 	   P R 	   U U 	   d g 	   p  	     j 	   p | 	     	     	     	     
     	          - 
   0 F 
   P  	      	     & 	   ) f 	   g i 
   j r 	   s z    {  
     	     
     	     
     	          A    B D 
   E E      	     	     V    ` x 	     T 	   V  	     	     	     	     	     	     	     	     	    
 	   
  	    
 	   
 9 	   ; > 	   @ D 	   F F 	   J P 	   R  	     	          	         N 	   O O    P  	          	          	           	     6 
   7 : 	   ; l 
   m t 	   u u 
   v  	     
     	     
     
     
 	   % * 	      
     
    ! 
   # $ 
   & * 
   0 m 	     
     , 	   0 6 
   7 = 	   @ I 	   N O 	     	     
     	     
     	          	     
     	     	     	     	     	           

-- Chunk 259 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38701-38850
    C    D J 
   K p    q             =     >                               +    0                           
    
      . 	   / /    0 i 	   j o    p  	          	    ; 	   @ H 	   P Q 	   ` e                      v    {                 
     G    P Y    `                 S    ` m    p |                                                     ߦ 	     9 	   @ 
 	      	     	     
 	      J 	   P # 	                     
       	       	   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/percent-encoding-2.3.1/src/lib.rs%00%01%02%03%04%05%06%07%08%09%0A%0B%0C%0D%0E%0F%10%11%12%13%14%15%16%17%18%19%1A%1B%1C%1D%1E%1F%20%21%22%23%24%25%26%27%28%29%2A%2B%2C%2D%2E%2F%30%31%32%33%34%35%36%37%38%39%3A%3B%3C%3D%3E%3F%40%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A%5B%5C%5D%5E%5F%60%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A%7B%7C%7D%7E%7F%80%81%82%83%84%85%86%87%88%89%8A%8B%8C%8D%8E%8F%90%91%92%93%94%95%96%97%98%99%9A%9B%9C%9D%9E%9F%A0%A1%A2%A3%A4%A5%A6%A7%A8%A9%AA%AB%AC%AD%AE%AF%B0%B1%B2%B3%B4%B5%B6%B7%B8%B9%BA%BB%BC%BD%BE%BF%C0%C1%C2%C3%C4%C5%C6%C7%C8%C9%CA%CB%CC%CD%CE%CF%D0%D1%D2%D3%D4%D5%D6%D7%D8%D9%DA%DB%DC%DD%DE%DF%E0%E1%E2%E3%E4%E5%E6%E7%E8%E9%EA%EB%EC%ED%EE%EF%F0%F1%F2%F3%F4%F5%F6%F7%F8%F9%FA%FB%FC%FD%FE%FFmid > len[b 	   ^ k     G   ^ k     
   ^ k     +   ^ k     0   failed to decode Protobuf message: .:          b    b    failed to encode Protobuf message; insufficient buffer capacity (required: , remaining: )   b K   7c 
   Dc    LayoutError/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.1/src/bytes.rs   h   i   j   k   l   m   n   o   p   q   n   r   kc b        kc b   *     called `Result::unwrap()` on an `Err` value            s   kc b   +  2   kc b   9  I   t   u   v   w   kc b        abort/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.1/src/lib.rs   d `   n   	   advance out of bounds: the len is  but advancing by e "   6e    d `         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.1/src/bytes_mut.rs  he f        he f     "   he f        he f        he f         overflowhe f     7   he f   j     he f         he f         he f   x     he f   w  
   he f   w     he f        he f        x   y   z   {   |   
      }   ~      a Display implementation returned an error unexpectedly               /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs (g K   
     Error                       NoneSome                          missing field ``g    g    duplicate field `   g    g    unknown variant ``, there are no variants   h    !h    `, expected h    Lh 
          Cannot parse request:  in:  ph    h    Cannot parse response:  h    h    No such contract:   h    No such code:   h    Unknown system errorUnsupported query type: 
i    invalid_requestinvalid_responseno_such_contractno_such_codeunknownunsupported_request   ,i    ;i    Ki    [i 
   gi    ni    errorrequesti    i    responsei    i    addri    code_id i    kindj    internal error: entered unreachable code: invalid Once statej <   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/std/src/sys/sync/once/no_threads.rs Tj [   6      invalid base64: j      ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>okerror  l    l    Utf8Errorvalid_up_to             error_len                FromUtf8Errorbytes     
         error                Vec is sized conservatively 8m    internal error: entered unreachable code:   \m *   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/mod.rs   m i        integer overflow when calculating buffer size   m i   y      Invalid UTF8            m i      $   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/math/uint64.rsattempt to add with overflow n 
   xn o        okerror 
o    
o       
               a Display implementation returned an error unexpectedly               /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs o K   
     Error                              o TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other. p   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/imports.rs 0r k      
                                               addr_validate errored:  r    input too long for addr_validateaddr_canonicalize errored:  $s    input too long for addr_canonicalizeaddr_humanize errored:  ls    MessageTooLong must not happen. This is a bug in the VM.s 8   0r k   '     0r k   E     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   s A   0r k        InvalidHashFormat must not happen. This is a bug in the VM. Ht ;   0r k        0r k        0r k        Invalid hash formatInvalid signature formatInvalid recovery parameter. Supported values: 0 and 1.Unknown error: 
u    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rs   4u e   P   3   usize overflow when calculating b64 length  4u e   W   
   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/iter/traits/accum.rs   u U         /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/vec/mod.rsPv L   
	  
   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs   v m   9  
   v m        v m   a     /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/sections.rsLw l         Lw l         Cannot read section length  w    Lw l   8   	   Lw l   :      errorrequestresponseaddrcode_idkind    
               a Display implementation returned an error unexpectedly               /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/alloc/src/string.rs x K   
     Error          Region pointer is null  
y    /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/memory.rs  ,y j   >   	   Region starts at null pointer   y 
   ,y j      
   Verification error: y    Recover pubkey error:   y    Generic error:  
z    Invalid Base64 string:  4z    Invalid data size: expected= actual=Tz 
   pz    Invalid hex string: z    Cannot decode UTF8 bytes into string:   z &    not found         z 
   Error parsing into type :   z    {    Error serializing type  
{    {    Overflow:   D{ 
   Divide by zero: X{    Conversion error: AddSubMulPowShrShlCannot  with given operands {    {    Cannot divide by zeroList of points is emptyList is not an expected multipleList is not a multiple of 48List is not a multiple of 96Not the same amount of points passedAggregation error:  h|    Batch errorGeneric errorInvalid hash formatInvalid signature formatInvalid public key formatInvalid recovery parameter. Supported values: 0 and 1.Invalid pointUnknown hash functionAggregation pairing equality error: 8} $   Unknown error:  d}    { { { { { { /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.3/src/storage_keys/length_prefixed.rs}          }       	   only supports namespace components up to length 0xFFFF  4~ 6   }    &   	   }    6      }    6   	   Control character found in string.EOF while parsing a list.EOF while parsing an object.EOF while parsing a string.EOF while parsing a JSON value.Expected this character to be a `':'`.Expected a high surrogate (D800–DBFF).Expected this character to be either a `','` ora `']'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` or a `'}'`.Expected to parse either a `true`, `false`, or a `null`.Expected this character to start a JSON value.Invalid escape sequence.Invalid number.Invalid typeInvalid unicode code point.Object key is not a string.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.JSON has non-whitespace trailing characters after the value.JSON has a comma after the last value in an array or map.JSON is nested too deeply, exceeded the recursion limit.       /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/unescape.rs   r   '      Non-hex ASCII character found   p 
    r         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs    m   ,   	    m      A    m      ,   Buffer is full         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/ser/mod.rsfalse ` n      	   /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/iter/adapters/enumerate.rs  [   2   	   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rsP |         /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode_suffix.rs ܄    b      ܄       
   ܄          ܄       	   ܄    [   /   ܄    T   	   ܄    Q   1   ܄    G   *   ܄    =   
   ܄    5   )   ܄       &   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rs    e      	   Invalid symbol , offset .        	       Invalid input length:       Invalid last symbol ܆     	       Invalid padding/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rs  |   8   &    |   ^   .    |   a   
    |   e   8    |   i       |   =   '   /Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/mod.rs    y      
    y      F    y      @    y      
    y      
    y      
    y      
    y      3    y      %    y      :    y      +    y   @       y   B   /    y   B                                    `explicit panic/Users/kehindefaleye/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.204/src/de/mod.rs e        t    t    ` or `  t        t    one of ,                    
               /rust/deps/dlmalloc-0.2.6/src/dlmalloc.rsassertion failed: psize >= size + min_overhead \ )     	   assertion failed: psize <= size + max_overhead  \ )     
   <unsupported><disabled>library/std/src/sync/lazy_lock.rs !         library/std/src/backtrace.rsL 
      %   Backtrace operation not supported on this platform   (   $       unsupported backtracedisabled backtrace L 
     
                         : cannot recursively acquire mutex       library/std/src/sys/sync/mutex/no_threads.rs@ ,      	   library/std/src/sync/once.rs| 
      2   <unknown>�memory allocation of  bytes failed      Ɍ 
   library/std/src/alloc.rs    b  	   cannot modify the panic hook from a panicking thread 4   library/std/src/panicking.rsL 
      	   
   L 
     
      
                                                                   library/std/src/../../backtrace/src/symbolize/mod.rs 4   g  0               -         8                       at : b    Once instance has previously been poisoned  l *   one-time initialization may not be performed recursively 8   ()               /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/ops/function.rs P         /rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/str/pattern.rs T O        T O     !   T O     !   0123456789abcdef/rustc/051478957371ee0084a7c0913941d2a8c4757bb9/library/core/src/escape.rs   J   M      called `Result::unwrap()` on an `Err` value               ErrorEmptyInvalidDigitPosOverflowNegOverflowZeroParseIntErrorkind                    
               T O   G  $   T O     7   _ZN/rust/deps/rustc-demangle-0.1.24/src/legacy.rs   
 .   =   
   
 .   :   
   
 .   6   
   
 .   f   
   
 .   o   '   
 .   p   
   
 .   r   !   
 .   s      
 .   t      ::  
 .   ~   
   
 .      &   
 .      !   
 .      I   
 .         
 .      /   C   
 .      5   ,)(><&*@
 .      ,   
 .      %   .   
 .      %                
 .   r   H   __R/rust/deps/rustc-demangle-0.1.24/src/v0.rs    *   2       *   /       *   +       *   Z   (   `fmt::Error`s should be impossible without a `fmt::Formatter`                  *   K       *          *      
   punycode{-}0 *   
  1   internal error: entered unreachable code *   1      *   4  G   internal error: entered unreachable code: str::from_utf8() =  was expected to have 1 char, but  chars were found 9   -    1 "   S     *   \     boolcharstri8i16i32i64i128isizeu8u16u32u64u128usizef32f64!_...   *         *   
  
    *   #  "    *   $  %    *        {invalid syntax}{recursion limit reached}?'for<> , []::{closureshim:# as  mut const ; dyn  + unsafe extern " *     -   " fn( ->  = falsetrue{ {  }: 0x  *     -   .llvm./rust/deps/rustc-demangle-0.1.24/src/lib.rs   ֕ +   b      ֕ +   i             {size limit reached}`fmt::Error` from `SizeLimitedFmtAdapter` was discarded               ֕ +   S  
   SizeLimitExhausted     
   
   
                                                                                            ʔ  ǔ          Δ      ϔ    ͔ Error      
               capacity overflow   ė    library/alloc/src/raw_vec.rs 
         a formatting trait implementation returned an error when the underlying stream did not                library/alloc/src/fmt.rst    {     �)) should be <= len (is `at` split index (is             .cannot parse integer from empty stringinvalid digit found in stringnumber too large to fit in target typenumber too small to fit in target typenumber would be zero for non-zero typeattempt to add with overflow   
   attempt to subtract with overflow    !   attempt to multiply with overflow    !   attempt to shift right with overflow $   attempt to shift left with overflow D #   from_str_radix_int: must lie in the range `[2, 36]` - found p <   )..0123456789abcdefto_digit: radix is too high (maximum 36) ǚ (   library/core/src/char/methods.rs       
                      library/core/src/net/display_buffer.rs  H &      A   called `Result::unwrap()` on an `Err` value               library/core/src/net/ip_addr.rs     .  T          :[called `Option::unwrap()` on a `None` value                  panicked at 
                 index out of bounds: the len is  but the index is   \     |    ==!=matchesassertion `left  right` failed
  left: 
 right:          Ҝ 	    right` failed: 
  left:         

-- Chunk 260 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:38851-39000


:
6,<dS
H	
FEHS
I
F

GI7
9
6;
V2
fu
ĊLc
0G9*\&
F
([eK9@
*	3
k
	`G	t<
spFz

W	GBP+>!p-@:*)L
DL=<U4,d
V
8

,	
w_

8
("NT

	6		%
 	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ @0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t

7	\
;
8F
t

ZY	

	L
1&
 *L
library/core/src/unicode/unicode_data.rs  (   P   (    (   \      library/core/src/escape.rs  h    M      library/core/src/num/mod.rs     
     attempt to divide by zero       attempt to calculate the remainder with a divisor of zero    9   Error        ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90
aH
L@4aPjQOo!RR aSeѡS !T UaW!YY  YZ p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  PF
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH 
4  ; ?Q  . 
 72 d =  m `  &   
   &   &   &    
 ( N t  name 
treasury.wasm abort
db_next_value
db_next_keydb_readdb_write	db_removedb_scandb_next
addr_validate	addr_canonicalize

addr_humanize
secp256k1_verify
secp256k1_recover_pubkey
ed25519_verifyed25519_batch_verifydebug
query_chain_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$26deserialize_newtype_struct17h71081e22a4b69618E7_ZN15serde_json_wasm2de10from_slice17h1a386393df9bfbc2E_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h81f9a994237a6062E7_ZN15serde_json_wasm2de10from_slice17h25b76b9d23a4f6e4E_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h1c3b6a0bf28e09d1E7_ZN15serde_json_wasm2de10from_slice17h3dc95cec2d4d6a3fE_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h75d1a8a521abeeabE_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17hd9dba6da1ac13ebdEm_ZN4core3ptr50drop_in_place$LT$treasury..msg..InstantiateMsg$GT$17h5046316204996e27E.llvm.47624040533541111507_ZN15serde_json_wasm2de10from_slice17h8dbcb880b80974bbE_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h6e0a69116725f8e9E
7_ZN15serde_json_wasm2de10from_slice17hb7c96f86dc12e959E
_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$16deserialize_enum17h7463c564026e285fE
7_ZN15serde_json_wasm2de10from_slice17hc251c01a9c409daaE_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17ha97763a009c85402E _ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$16deserialize_enum17h3a725f2255d0d051E!i_ZN4core3ptr46drop_in_place$LT$treasury..msg..ExecuteMsg$GT$17h1286573916896569E.llvm.4762404053354111150"K_ZN4core3ptr41drop_in_place$LT$treasury..grant..Any$GT$17h6e2ff0505dab8900E#_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h15ec1cea54034bf2E$_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$23deserialize_ignored_any17h57a848bd03ff3124E%_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h1b9f0a9d073d56f9E&_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h47cd94f4bd5d53aeE'_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_seq17h51037041b695b3abE(_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h398c6b51480c9d6eE)_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h3a959107a457e909E*_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h907d42df325c33bcE+_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h3afbc981039d63e4E,_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h0d88be56b811f64fE-_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h9c9400cfd39bc249E._ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h59d7f068715ebd97E/_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h2c1603684b5cb68aE0_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h8a3d10b7ddcf9162E1_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h517dc40ad5fdaec8E2_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h8f4e5848aee85e6cE3_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h2094fedcb6070045E4_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h91917e1806dac455E5_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h4d9bc14ce9cfd4e6E6_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17h984a700034a34732E7_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17hadcfe98b9ded7631E8_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17hdfcb21baf14419c0E9_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_map17he4a80eb80c1ee14eE:_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h0863ef8525f34947E;_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_seq17h49eced2f0c8563d1E<_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_seq17h9f9eccb5b6f93165E=_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_str17h1393c5fb5f434bd9E>_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_str17h2f7b0345581ed79eE?_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_u3217hd29000974f48a952E@_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$15deserialize_u6417h5c1f4669626819f2EA_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$16deserialize_bool17hb6239aebe6d8022cEB_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$22deserialize_identifier17h71a4d0a67244ad78EC_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$22deserialize_identifier17haf9b2c02f3ea87e6ED_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17he5f49ed80c0d8190EE_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h87c39eb16380b023EF_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h0ca0a9765e69aadfEG_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h1dec05969312574fEH_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h2c54e65433b47725EI_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h391cb4433c735095EJ_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h42e2cf2a44593d74EK_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h71f002bc97f8033cEL_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h74bda4dff9326abbEM_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h7b30765df53eed42EN_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h7ee70c921d53de99EO_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17h865a665bde8045deEP_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_string17hf67a8b553704901aEQ_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h2e6fc282e7418489ER_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h31e5c6875258e90cES_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$26deserialize_newtype_struct17h17edaf2c00c4c5b5ET_ZN89_$LT$$RF$mut$u20$serde_json_wasm..de..Deserializer$u20$as$u20$serde..de..Deserializer$GT$18deserialize_struct17h5bebbdffc4579185EU_ZN103_$LT$cosmos_sdk_proto..cosmos..base..query..v1beta1..PageRequest$u20$as$u20$prost..message..Message$GT$10encode_raw17h2081cd2a9beab18dEV_ZN103_$LT$cosmos_sdk_proto..cosmos..feegrant..v1beta1..BasicAllowance$u20$as$u20$prost..message..Message$GT$11merge_field17h96e87407143af204EW_ZN104_$LT$cosmos_sdk_proto..cosmos..base..query..v1beta1..PageResponse$u20$as$u20$prost..message..Message$GT$11merge_field17hbf683825de705855EX_ZN12cosmwasm_std7results10cosmos_msg1_105_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..CosmosMsg$LT$T$GT$$GT$9serialize17ha552f5f115cc7355EY_ZN12cosmwasm_std7results10cosmos_msg1_105_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..WeightedVoteOption$GT$9serialize17hcef889589198e473EZ_ZN12cosmwasm_std7results10cosmos_msg1_93_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..AnyMsg$GT$9serialize17he8e5bc63d2aaeba9E[_ZN12cosmwasm_std7results10cosmos_msg1_93_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..GovMsg$GT$9serialize17hf12724c444cf1410E\_ZN12cosmwasm_std7results10cosmos_msg1_94_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..BankMsg$GT$9serialize17ha531da3e6e225f85E]_ZN12cosmwasm_std7results10cosmos_msg1_94_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..WasmMsg$GT$9serialize17h4d88b51ab190225fE^_ZN12cosmwasm_std7results10cosmos_msg1_97_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$cosmwasm_std..results..cosmos_msg..VoteOption$GT$9serialize17hccc16bb98d9a8640E_\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17h40a5783f74964a48E`\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17h56656e87686f8760Ea\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17h6188708fc2c671e9Eb\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17h92139f21789ad19dEc\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17heb590371eb59a285Ed\_ZN58_$LT$M$u20$as$u20$cosmos_sdk_proto..traits..MessageExt$GT$8to_bytes17hfac1bf7b500241b5Ee4_ZN5prost7message7Message6decode17h0722f720f19018acEf5_ZN5prost8encoding13decode_varint17h6ce8c94a03b68356Eg4_ZN5prost7message7Message6decode17h46ea4a3b3630fa0fEh4_ZN5prost7message7Message6decode17hf2a030741946a3c6Ei~_ZN89_$LT$cosmos_sdk_proto..cosmos..base..v1beta1..Coin$u20$as$u20$prost..message..Message$GT$10encode_raw17h50453863ebd42223Ej_ZN89_$LT$cosmos_sdk_proto..cosmos..base..v1beta1..Coin$u20$as$u20$prost..message..Message$GT$11merge_field17h796503fe19b24f52Ekh_ZN4core3ptr46drop_in_place$LT$treasury..msg..ExecuteMsg$GT$17h1286573916896569E.llvm.916320375687580761lm_ZN74_$LT$cosmwasm_std..binary..Base64Visitor$u20$as$u20$serde..de..Visitor$GT$9visit_str17h02daa40a0ffd2788Em_ZN92_$LT$serde_json_wasm..de..enum_..StructVariantAccess$u20$as$u20$serde..de..VariantAccess$GT$14struct_variant17h2eb64efe1d1f8430En_ZN92_$LT$serde_json_wasm..de..enum_..StructVariantAccess$u20$as$u20$serde..de..VariantAccess$GT$14struct_variant17h77b96590684c829dEo_ZN92_$LT$serde_json_wasm..de..enum_..StructVariantAccess$u20$as$u20$serde..de..VariantAccess$GT$14struct_variant17h97fdeb92c7962b76Ep_ZN92_$LT$serde_json_wasm..de..enum_..StructVariantAccess$u20$as$u20$serde..de..VariantAccess$GT$14struct_variant17hb1f638c1d38ef588Eq_ZN92_$LT$serde_json_wasm..de..enum_..StructVariantAccess$u20$as$u20$serde..de..VariantAccess$GT$14struct_variant17hff8bc1f04e3d0313Ert_ZN76_$LT$serde_json_wasm..de..map..MapAccess$u20$as$u20$serde..de..MapAccess$GT$13next_key_seed17h2ba9cd873e8f3893Esv_ZN76_$LT$serde_json_wasm..de..map..MapAccess$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17h1f6fa81cbe2d4f94Etv_ZN76_$LT$serde_json_wasm..de..map..MapAccess$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17ha35f04515b7c17f8Euv_ZN76_$LT$serde_json_wasm..de..map..MapAccess$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17he9eee92ae3703412Evv_ZN76_$LT$serde_json_wasm..de..map..MapAccess$u20$as$u20$serde..de..MapAccess$GT$15next_value_seed17hff6563e68f74749bEwK_ZN5alloc7raw_vec11finish_grow17he4e27f45669cc4bcE.llvm.9069900047415908074xY_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h87382d607651766eEyY_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17h877622799d9ca688EzY_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hdfb4029adbb9c0eeE{Y_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17he6eed5a94404edf5E|Y_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$7reserve21do_reserve_and_handle17hf9b8f67a6f68146dE}C_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h0705df1a0713306aE~C_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h24ae2dba56154b15EC_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17h8598b31cf745c59bEC_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17haf27850f7412defcEC_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17hbb1158491ed6ffccEC_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17he20fd4682f9854d3EC_ZN5alloc7raw_vec19RawVec$LT$T$C$A$GT$8grow_one17he3b20a1156a4012bEC_ZN5

-- Chunk 261 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/treasury-aarch64.wasm:39001-39003
 .rodata M	producerslanguageRust 
processed-byrustc
1.80.0 (051478957 2024-07-21) ,target_features+mutable-globals+sign-ext

=== File: integration_tests/testdata/contracts/tokenfactory_core.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1-150
 asm   `` `` ` `` ` ` ` `~`  ` ```~``~ ` `~ `
``~`~~~ envdb_read envdb_write env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize  env
addr_humanize  envsecp256k1_verify envsecp256k1_recover_pubkey enved25519_verify enved25519_batch_verify envdebug env
query_chain envabort         		     	

	

       
                     
   
        
      

     
     
        p A 
 A 
 A 

memory execute 2
instantiate jquery }interface_version_8 allocate 
deallocate requires_iterator 
__data_end
__heap_base	 A
)$('=#$('#///)$('#-$('#@>?)dZ\fh[gi#cccw#^_$('xxx<;$('#w)$(##$('#@>;#$('www###$##

@  ( "E
   Aj( E
  
  Aj( "@  (
! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( @  (

@  ("E
   A j( "@ A
l!@ Aj( @ ( 
 A
j! A
k"
 

  A
j( E
   (
@  ($E
   A$j"t  A(j( E
  ( 

~# A0k"$  Aj"
   Aj!A !# Ak"$  A(j 
@@@@@@@@ - (Aq@ - )A G
 
 A j 
 - $! Aj ( "	A! - AqE
 A jAr! - ! Aq!@@@@@@@@@@ Aq"
A,G@ 
A F
 Aq
A	!

 Aq@A!

 	 Aj 	 - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 Aj!# A k"$  Aj 	@@@@@@@ - Aq@ - 	A"G
 	 Aj 	 ("AG
 A
j( ! Aj( !
 ("E@@@@@@ Ak 
 
A AE

 Aj!

 Aj! 
A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

 Aj!

 Aj! A AE

 A:  

 A:  

 A6 

 A6 

 )!  (
6
  7  6 

 A : 

 A : 
 A6  
E
 

 A6 
 A j$  - ! ("AG@  ) 7p  Aj(  6 w !

 
 !@@ 
"E@ AjA Av ("AG
 Aj( ! Aj( ! (!
 
E@ AjA Av ("AG
 Aj( ! Aj( ! (!

  6h  
6d  6`  6\  6X E
 A<j A j"Ar"Aj) 7   6D  60  ) 74  
 (X"AG
  )07  Aj A@k) 7  Aj A8j) 7 

 A j (6  A j )7   6\ A 6X


 A j (6  A j )7   6\ A 6X E

 


 Aj 	@ ("AG@ A j Aj( 6   )7t

 A j 	! (p"AF

 A j )t7  A j A j( 6   6\
	
 

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:151-300
E
 A jArA Az A 6X


 
E
 A jArA Az

 Aj )\7  Aj A j( 6  A 6   6 (4@ 
 A<js A@k( E

 (<


 Aj 	 ("AF@ Aj 	 (! (! ("
 ("AG
 !

 (! (! (
! A j 6  A j 6  A j 6   6\A !
 
E
	

 Aj 	@@ ("AG@  )7  Aj Aj( 6 

 A j 	 (p"AF

 A j (|6  A j )t7   6\
	
 (|! (x! (t!

 Aj 	A ! - 	! - Aq
 


 B 7 

 B7 

 
E


 
A G! 
E


 A j ( w6   A j :    )p7 a  6\ 
E

 @ At! 
Aj!@ Aj( @ ( 
 A j! A k"
 

 E
  

 E 
E rr
  

 A j A j) "7   )\"7H A
j 7   7 A 6 
 Aj$ @@ ("@ (,! ((! ($! ( ! (
!
 Aj Aj ("AG
   6   6   6
   6   
6   6 

 )
!  A
j A$j) 7    7  A 6 

  Aj )
7   Aj A$j( 6   A 6    6 
@ 
 @ At! Aj! @  Aj( @  ( 
  A j!  A k"
 

 E
  
 A0j$ 
~# A@j"$  Aj"   Aj!# Ak"$  A(j @@@@@@@@ - (Aq@ - )A G
  A j  - $! Aj ( "A!A! - AqE
 AjAr!
 - ! Aq!
@@@@@@@@@@@@ Aq"A,G@ A F
 

A	!

 
@A!

  Aj  - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 Aj!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("
AG
 A
j( !
 Aj( ! ("E@   
N

   
N E
 

 A6 

 A6 

 )!  (
6
  7  
6 
 A j$  - ! ("AG@  ) 7  Aj(  6  !

 Ak
 
!@@@@@@ 
"E@ AjA Av ("AG
 Aj( ! Aj( ! (!
 	
 AjA Av ("AG
 Aj Aj( 6   )7 E


 A j (6  A j )7   6l A 6h

 A j )7  A j Aj( 6   6l A 6h

  6  6  	6 

 AjA Av ("AG
 Aj( ! Aj( ! (!
 A j Aj( 6   6p  6l  6h  )7t  6  6  6 E
 A j Aj) 7  A<j A j"Ar"Aj) 7   )|7D  60  ) 74   (h"AG
  )07  A j A j( 6  Aj A j) 7  Aj A@k) 7  Aj A8j) 7 

 A j (6  A j )7   6l A 6h Aju (E

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:301-450

 (


 
 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 Aj  ("AF

 A j (6  A j )7   6l

 (! (! (!

 	E
 A jArA Az

 
E
 A jArA Az

 A jArA Az A 6h


 Aj )l7  Aj A j( 6  A 6   6 (4@ 
 A<ju A@k( @ (<
 A ju A j( E

 (H


 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 Aj  ("AF

 A j (6  A j )7   6lA !
 A 6h E




 (! (!
 (!


 A 6h E
	

 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 Aj  ("AF

 A j (6  A j )7   6lA !	 A 6h E
	

 (! (! (!	
 Aj A !
 - 	! - Aq
 


 B 7 

 B7 

 	E! E
  
 
A G! E


 A j ( 6   A j :    )7 q  6l A 6h E

 @ A
l! !@ Aj( @ ( 
 A
j! A
k"
 

 E
  
@ 	E Er
  @ A
l! 	!@ Aj( @ ( 
 A
j! A
k"
 

 E
  	
 
E 
E rr
  

 A j A j) "7   )l"7X A
j 7   7 A 6 
 Aj$ @@ ("
@ (8!	 (4!
 (0! (,! ((! ($! ( ! (
! Aj Aj ("AG
   	6    
6
   6   6   6   6
   6   6   
6 

 )
!  A
j A$j) 7    7  A 6 

  Aj )
7   Aj A$j( 6   A 6    6 @ 

 @ A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 @ 
 	@ 	A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 
E
  
 A@k$ 
7~# A k"$  Aj"   A8j!A !# Ak"$  A0j @@@@@@ - 0Aq@ - 1A G
  A(j  - ,! A j (("
 -  AqE@A!

 AjAr! - !! Aq! AjAr!A!@@@@@@@@@@@@@ Aq"A,G@ A F
 
A	!

 @A!


-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:451-600
 
 Aj 
 - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 Aj!# A k"$  Aj 
@@@ - Aq@ - 	A"G
 
 Aj 
 ("AG
 A
j( !	 Aj( ! ("E@A!@@@@ 	Ak 
AA  A܈ A!

AA A A
!

AA A A!
 A6   : 

A!@@@@ 	Ak 
AA  A܈ A!

AA A A
!

AA A A!
 A6   :  E
 

 A6 

 A6 

 )!
  (
6
  
7  6 
 A j$  - ! ("AG@  ) 7  Aj(  6 

 
@ @ E@ AjA Av ("AG
 Aj( ! Aj( ! (!
 A j Aj) "
7  A@k" 
7   )"
7X  6  6  6  
78 )!
 A j  (X"AG
  )87   
70  6,  6(  6$ A   AF6   7  6  6 Aj ) 7 

 AjA Av A j Aj) 7   )7X

  (6d  )7\ A6x  6X E

 


 Aj 
@ ("AG@ Aj Aj( 6   )7

 Aj 
! ("AF
	
 A j Aj( 6   )7\  6X

 E
 A jA Az A6x


 AF
 A jA A
z A6x

 E
 A jA Az

  )\7 A
j A j( 6  A6   6  @ 
 E

 


 Aj 
@@ ("AG@  ) 7  Aj Aj( 6  Aj Aj) 7   6  )7

 Aj!B !
A !B !A !	B ! B !!A !# Ak"$  A(j 
@@@@@@@ - (Aq@ - )A G
 
 A j 
 - $!
 Aj ( "A! - AqE
 A jAr!
 - ! 
Aq!
@@@@@@@@@@@ Aq"
A,G@ 
A F
 

A	!

 
@A!

  Aj  - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 Aj!
# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("
AG
 A
j( ! Aj( !
 ("
E@A!
@@@@ Ak 
AA  
A A!


AA 
(  A (  F!


AA 
A A!

 
A6  
 
: 

A!@@@@ Ak 
AA  
A A!

AA 
(  A (  F!


-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:601-750
AA 
A A!
 
A6  
 :  
E
 


 
A6 

 
A6 

 )!" 
 (
6
 
 "7 
 
6 
 A j$  - !
 ("AG@  ) 7p  Aj(  6 w !

 

@  P@ AjA Av ("AG
 )!

@@ !P@ AjA Av ("AG
 )!
 E
  6h  	6d  6`  7X  
7P

  )7X  (6T  6P

 AjA Av ("AF
  (6\  )7T  6P

  )7X  (6T  6P


 Aj @ ("AG@ A j Aj( 6   )7t

 A j ! (p"AF

 A j A j( 6   )t7T  6P


 E
 A jA Az 	E




@ !P@ Aj  ("AF@ Aj!
# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("
AG
 A
j( !
 Aj( ! ("E@ 
  
|

 
  
| E
 

 
A6 

 
A6 

 )! 
 (
6
 
 7 
 
6 
 A j$  ("AF

 )! (! A 6`  7X  6T  6P


 A jA Az A 6`


 )!B!!

@@  P@ Aj  ("AF
 A j Aj( 6   )7t

 A jA Az


 A j 
 (p"AF

  )x7X  (t6T  6P
	
  ("6`  7X  
7P  Aj( 6h  Aj( "	6d 



 )x!
B! 

 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 A j  (p"AF

  (|6\  )t7T  6P
	
 (|! (x!	 (t!
 Aj A !
 - 	! - Aq
 


 A 6 A6 

 A 6 A6 

 A8j" A j) 7   )P70 )h! A j 
 (P"AF@  )07   7  	6  6 Aj ) 7 

  )T7 A
j A j( 6  A 6  6  	E
 

 A j ( w6    )p7 U A 6`  
: T  6P
 E 	Er

 
 A j A j) "7   )P"
7@ Aj 7   
7  A 6
 Aj$  Aj" Aj) 7   )7 ("

 A j Aj) 7   )7XA ! 

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:751-900



 Aj ) 7   )7 )! (!

 Aj 
@ ("AG
  Aj 
 - AqE@A! 

 - A F@ 
 Aj 
 ("AG
A !

 Aj!A !A !# A k"$  A(j 
@@@@ - (Aq@ - )A F@ 
 A j 
 - $! Aj ( " - AqE@A!

 A@kAr!
 - ! Aq!	@@@@@@@ Aq"
A,G@ 
A F@ 
 A jA Av (P"AG
 (T!

 	
A	!


 	@A!


  Aj  - AqE@A!


 - !
 Aq"	A"G@A! 	A G
	A!
	
 A j!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("	AG
 A
j( !	 Aj( !
 ("
E@A!
 	AF@ 
A AA G!

 A6   
: 

A! 	AF@ 
A AA G!
 A6   :  
E
 


 A6 

 A6 

 )!
  (
6
  
7  	6 
 A j$  - T! (P"AG@  ) U7@  A j(  6 G
	
 @ A j @ (P"AG@ A j A j( 6   )T7D

 A@k ! (@"AF

 A<j A j( 6   )D74


 E@ A j  (P"AG@ 
 )T7  
Aj A j( 6 

 A@k  (@"AG
 (D!A!

 A0jA Az (0"AG
 (4!
 A j 
 (P"AG
 A6   6


  )X78  (T64

  )T7 A
j A j( 6   6 

  )H78  (D64

 Aj A !	 - 	! - Aq
 
A!

 A6 

 A6 

 A<j ( G6    )@7 5  : 4
  60
 (4!  )87  6  6 
 A j$  (! ("AF@A!

 (!
 ! (

 (!
 (! (
! A6x  
6d  6`  6\  6X
 


 Aj 
@@ ("AG@  )7  Aj Aj( 6 

 Aj!	A !A !A !# A k"$  A(j 
@@@@@@@ - (Aq@ - )A F@ 
 A j 
 - $!
 Aj ( "A! - AqE
 - ! 
Aq!
@@@ Aq"
A,G@ 
A F@ 

 A jA Av (P"AG
 A j( ! A j( ! (T!


 

A	!

 
@A!

  Aj  - AqE@A!

 - !

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:901-1050
 Aq"A"G@A! A G
A!

 A j!
# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("
AG
 A
j( !
 Aj( !
 ("E@A! 
AF@ 
A AA G!
 
A6  
 : 

A! 
AF@ A AA G!
 
A6  
 :  
E
 

 
A6 

 
A6 

 )!
 
 (
6
 
 
7 
 
6 
 A j$  - T!
 (P"AG@  ) U7@  A j(  6 G !

@ 
@ A j @ (P"AG@ A j A j( 6   )T7D

 A@k ! (@"AF

 A<j A j( 6   )D74  60

 @ A0jA Az E

	
 A j  (P"AG
 A j  (\! (X! (T" (P"AG

 Aj A !
 - 	! - Aq



 (\! (X! (T
!  68  64

 	A6 

 	A6 

 A<j ( G6    )@7 5  
: 4  60
 E Er

 
 (0"AF@ A<j( ! A8j( ! (4!

 (<! (8! (4!
 	 6
 	 6 	 6 	 6 

 A j 
 (P"AF@ 	 6 	A6  	A
j 6  	Aj 6 

 	 )T7 	A
j A j( 6  	 6  E
  
 A j$  ("AF

  (6d  )7\  6X

 (! (! (!
 Aj 
A ! - 	! - Aq
 
A!

 A6  A6 

 A6  A6 

 A G!
 


 A j ( 6    )7 ] A6x  : \  6X E

 E
  
 E E 
rrE@ 
 A j A j) "7   )X"
7H Aj 7   
7  A6 
 Aj$  A0j" A@k) 7   )87(@@ (X"AG@ A j ) 7   )(7 )h! (d! (`! (\! )P!
 (L! (H! A8j Aj (8"AG
   )7    70   6,   6(   6$   6    
7   6   6  Aj A j) 7 

   )(7   A6   Aj ) 7 

   )<7  A
j A j( 6   A6    6  @ 
 E
  
 A j$ 
@@@@@@@@@@@  ( 		 
  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E
  (

  Aj( @  (
  Aj( "@ At!  (Aj!@ Aj( @ ( 
 A j! A k"
 

  Aj( E
  (
  Aj( @  (
  A$j( E
  A j( 
  Aj( @  (
  Aj( E
  (

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1051-1200
  Aj( @  (
  Aj( @  (
  A4j( E
  A0j( 
  Aj( @  (
  Aj
  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E


  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E


  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E
   (

  (
@  ( "E
   Aj( E
  
  Aj( "@  (
" A
lj!@ Aj( @ ( 
 Aj( "@ (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

 Aj( @ (
 A
j" G
 

  Aj( @  (

@  ("E
   A
j( E
  
@  ($"E
   A(j( E
  
@  (0"E
   A4j( E
  
@  (<"E
   A@k( E
  

~# A k"$  Aj @@@ - Aq@ - 	A G
    Aj! ( ! - Aq!	# A@j"$  A 6( B7  Aj A!@@@ - AqE
  - !@@@ Aq"A,G@ A F
 	E
A !	

  Aj  - AqE@A!

 - !

A!

 AqA F@A!

 A0j  )8!
 (4! (0"AG
 E
 ((" ($F@ A j V ((!
 (  A
lj" 
7  6 A!  ((Aj6( Aj  - 	! - Aq
 

  
7  6  6  (("@ ( ! A
l!@ Aj( @ ( 
 A
j! A
k"
 

 ($E
 ( 

  ) 7 A6  A
j A(j( 6 
 A@k$  ("AG
 A
j"( ! Aj( ! (! Aj  ("AF@   6  A6   A
j 6   Aj 6 

   )7  A
j ( 6    6  @ A
l!  !@ Aj( @ ( 
 A
j!  A
k" 
 

 E
 

  A6 

  A6 

 )!
   (
6
   
7   6 
 A j$ 

~# A k"$  Aj @@@ - Aq@ - 	A G
    Aj! ( ! - Aq!# A k"$  A 6  B7 Aj @@ - Aq@ - ! A j!	 A j!
@@@@ Aq"A,G@ A F
 E
A !

  Aj  - Aq@ - 	!

 A68

  )7 A6  A
j A j( 6 


-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1201-1350
 A68

 AqA F@ A68

 A j   
) !
 )P!
 (`"E@  
78  
7@

 A0j"
 	Aj( 6   	) 7( ( " (
F@ Aj U ( !
 ( Atj" 6  )(7 A
j 
( 6   
7  
7   ( Aj6    - ! -  Aq
 

 A68
  )87  Aj A@k) 7  ( "@ At! (Aj!@ Aj( @ ( 
 A j! A k"
 

 (
E
  (
 A j$  ("AG
 A
j"( ! Aj( ! (! Aj  ("AF@   6  A6   A
j 6   Aj 6 

   )7  A
j ( 6    6  @ At!  Aj!@ Aj( @ ( 
 A j!  A k" 
 

 E
 

  A6 

  A6 

 )!
   (
6
   
7   6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@ A	F@ Ađ A	E

    AБ Ay

  A6 

@@ A	F@ Ađ A	E

    AБ Ay

  A6 
 E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@ AF@ A AE

    A Ay

  A6 

@@ AF@ A AE

    A Ay

  A6 
 E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    

     E
 

  B 7 

  B7 

 )!  Aj (
6   Aj 7    6  A6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@A! AF@ A AA G!
  A6    : 

A! AF@ A AA G!
  A6    :  E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj A!@ - AqE
 A
!@@@ - "A-k   
A! A1kAqA	O
  Aj  A0kAq! - AqE
 - "A0I A9Kr
@  B
~"B PE@A
!

 " A0kAqj" I@A
!

 Aj  - AqE
 - 	"A0I

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1351-1500
 A:I
 


 A !
   6A!
   6  A j$ 
~# A0k"$  A(j A!@ - (AqE
 A
!@@@ - )"A-k   
A! A1kAqA	O
  A j  A0kB! -  AqE
 - !"A0I A9Kr
@  Aj B B
 )PE@A
!

 )" A0kB|" T@A
!

 Aj  - AqE
 - 	"A0I
 A:I
 


 
   7A!
   6  A0j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    I

    I E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    ,

    , E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@@ - Aq@ - 	A"G
  Aj @@@ ("AF@ A
j( ! Aj( ! ("
 
A!

 )!   (
6
   7   6 

 A N"E
  "E

   !  A
j 6   Aj 6    6  A6 

   6  A6   A
j 6   Aj 6 

  A6 

  A6 

 
   
 A j$ 

~# A k"$  A j @@@@@ -  Aq@ - !A F@  Aj  - 
! Aj ("A! - AqE
 A jAr!
 A j!
 - ! Aq! A j!@@@@@@@@@@ Aq"A,G@ A F
 
A	!


 @A!


  Aj  - AqE@A!


 - 	!
 Aq"A"G@A! A G

A!


 A j!# A k"$  Aj @@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("
E@@@@@@ Ak 
 A AE

 Aj!

 Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 
A AE

 Aj!

 Aj! 
A AE

 A:  

 A:  

 A6 

 A6 

 )!  (
6
  7  6 

 A : 

 A : 
 A6  E
 

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1501-1650


 A6 
 A j$  - L! (H"AG@  ) M7`  A j(  6 g !


 
 
!@@ 	"E@ A jA Av (H"AG
 A j( ! A j( ! (L!
 
 A jArA Av A4j A j5 >  A 68  A j) 7,  (L6( E
 

  (T64  )L7,  6(
 	A G!


 A j @ (H"AG@ A j A j( 6   )L7d

 A j ! (`"AF

 A4j A j( 6   )d7,  6(


@@ P@ A j  (`"AF
 
 )d7  
Aj A j( 6 

 A(jA Az


 A j  (HE
 (L!
 A4j A j5 >   )P7,  6(
	
 	E
 A(jA Az

  6@  6<  68 E
	 )@! A(j  (("AF@   7    7   6   6   7


   ),7  A
j A4j( 6   A 6   6  E
 


 A j @@ (H"AG@ 
 )L7  
Aj A j( 6 

 A j  (`"AF

  (l64  )d7,  6(

 (l! (h!
 (d!	

 ) ! )P!B!
  A ! - ! -  Aq
 


  A 6  A6 

  A 6  A6 

 A4j ( g6    )`7 -  : ,  6(
 
E 	E rr
  	
 A0j) ! )(!
   7   A 6   7
 A j$ 

~# Ak"$  A j @@@@@@@@@@ - PAq@@@ - Q"A k#	
	 
 A"k
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 


  A6 
	
 Aj  - AqE
 - A"G
  Aj  ("AG
 ("E@  A6 
	
 Aj(   A6 E
 

 A8j  - 8Aq@A! - 9A G
  A0j  - 4! A(j (0"A!A!@ - (AqE
  - )! Aq!@@@@ Aq"A,G@ A F
 E
A !

  A j A! -  AqE@A!

 - !!

A!A!

 Aj A! ("AF
   )7  A
j Aj( 6    6 


 AqA F@A!A!

 Aj ! ("AG@  ) 7  Aj(  6  - !

 Aj A! - ! - Aq
 
A!
   :    )7   A
j ( 6     6 

  A6 

 )!   (6
   7   6 

  A6 

  A6 

  A6 

  A
6 

 A j @@ - HAq@@ - IA F@  A@k  (@!  - DAq: \  6X A j A jO (p"AF@@ - tE
 Aj (X"@@ ("AG@ Aj Aj( 6   )7

 Aj ! ("AF

  ) 7`  Aj(  6 g - !

 A j A jO (p"AF
 

  ) u7`  A j(  6 g - t!

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1651-1800

  A6 

 Aj  ("AF
   )7  A
j Aj( 6    6 

  A6 

  A6 

   )`7   A
j ( g6     :    6 

   6 
 Aj$ 
# A@j"$   ( ( ! A 6 B7  Aj"  A  ( "(  Aj(   E@A!  ( ! (" ( "Aj( F@  (  A G! 
 (@ 
 A@k$   
A A7 A8jAЂ A  
 
   Aj( @  ( 

  Aj( @  ( 
  Aj( "@  (
! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( @  (

  A j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  A
j( @  (

@@@@  ( "Ak"A AI 
@@@  
  Aj!

  Aj( @  (
  Aj!

  Aj( @  (
  Aj!

  Aj"(   Aj( @  (
E

 Aj( E
  ( 

# Ak"$ @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  (F   W  ( 
  ( j :      (Aj6

 AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!   (  ("kK@    X  (!
  (  j A
j     j6
 Aj$ A 
B   (  ("kK@    X  (!
  (  j      j6A 
   (   Aj(  
 @@@@@@ Ak 
 A A
  A6   A: 
 A A
  A6   A: 
 A AE


 AƆ A

   A6   A: 
    AІ Ay
  A6   A : 
 @@@@@@@ Ak
 
 A A

  A6   A: 
 A A
  A6   A: 
 )  Bʍ֭ R
  A6   A: 
 (  AµF


 A A
   A6   A: 
    A Ay
  A6   A : 
 @@@@@ A
k 
 A A

  A6   A: 
 A A
E


 A A
   A6   A: 
    A A{
  A6   A : 
 @@@@@@@@@@@  ( 



	 
  Aj
	
  Aj

  Aj

  Aj

  Aj

  Aj

  Aj( @  (
  Aj

  Aj( @  (
  Aj


-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1801-1950
  Aj( @  (
  Aj

  Aj
" Aj( E
   ( 

# A k"$ @@ ( @   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )7  A 6( B7  A0j" A jA # A0k"$ @@@@@ ( "A
kA  A
kAIAk 
 A,jA6  B7
 Aԩ 6 A 6
  6  Aj6(  Aj6  Aj

 A,jA 6  A 6( B7
 A̩ 6  Aj

  Aj6   Aj6 A,jA6  AjA 6  B7
 A 6 A 6
  Aj6(  Aj6  6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj
 A0j$ 
   ) 7  A 6   A
j A(j( 6 @@ ( " A
kA   A
kAI 
 -

 Aj( @ (
 Aj( E
  (
 A j$ 
Aĉ A7 A jA A؊  
~# Ak"$  A j Aj) 7  A@k Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 78  ) 7  A j Aj) 7  A j Aj) 7   ) 7P A8j! A j!	 A j A !A !# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@ ( Ak	 	
 Aj Aj) 7  A j Aj) 7   ) 7p Aj 	Aj) 7  Aj 	Aj) 7   	) 7 Aj A
j( 6   )7 A j Aj( 6   )7@  ! Aj!
 Aj! A@k!
# Ak"$  A j A j" (   (@@@@@@ (`E@ A j Aj( " 6  Aj A j) "7  Aj A j) "
7  A j A j) "
7  A(j  6   )d"
7 Aj  6  A j 
7  A j 
7  A j 7   
7` Aj 
Aj( 6   
) 7 A0j!# A@j"$  A j"Aj( !	 A
j( ! A 6 B7  Aj"  A @ Aj"
  E@A
!
 ( !@ 	E
  (! 	A
l! ! @@  Aj(  G
   (   
 A!


  A
j!  A
k"
 

 (@ 
  
6  
Aj( @ 
( 
 Aj( @ ( 
 	@ 	A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 Aj( @ 
 (! A j( " @  A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 A
j( @ 
 A@k$ 

A̋ A7 A8jA A  
 (0" AF
 A
j )47  A$j A j( 6  A
j A j) 7  Aj A<j) 7  A 6    6 
(" E
  At!  
( Aj!@ Aj( @ ( 
 A j!  A k" 
 


 A j Aj) "7  A j A j) "
7  A<j A j) "
7   )h"
74 A j 7  Aj 
7  Aj 
7   
7 A 6  
(" @  At!  
( Aj!@ Aj( @ ( 
 A j!  A k" 
 

 
Aj( @ 
( 
 
 Aj( E
 (  


  6  
6 
Aj( " @  
( "  Atj64  60  Aj6<  Aj68 A j"Ar!# A k"
$ @@@@@ A0j""( "  ("F
  ("( "Aj( "E
  (
! At! ( Aj!	@  Aj!
  A j!  Aj( ! ! 	!@  Aj( F@ (  
(  E

 A j! A k"
 
 "  G
 

 A 6 B7 

 
AjAr 
  Aj) !  ) !
 
A(j (  
A@k 7  
 

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:1951-2100
78 
A6AA"E
  
AjA !  
B7
 
  6@  F
  
A(j! 
AjAr! 
A@k!A!
@ ( " Aj( "E
 At!  ( Aj!	 ! @  Aj!  A j!  Aj( ! ! 	!@@  Aj( F@ (  (  E

 A j! A k"
 
 "  G



    Aj) !  ) !
  (   7  
 
78 
A6 
(
 
F@ 
Aj!# A k" $ @@ 
 
Aj"K
  Aj( "At"	   	I"A AK"A l!	 A
IAt!@ @  A6   A l6   ( 6

  A 6
   	   AjQ  (!  ( E@  6  Aj 6 

  Aj( "AxF
 E
    
 
  A j$  
(!
  
A lj 
AjA  
 
Aj"
6  G
 

  
)7  Aj 
Aj( 6 
 
A j$ 

AA 
 A j( ! A j( !	 (d!
 AjB 7  A jB 7  B7x B 7h B7`  A A
9 Aj Aj( 6   ) 7A
A"E
 AjA /  ;   A )  7   A j( "  A@k( F@ A<j  R (D! 
 (<  Alj" B7   6    )7
  Aj Aj( 6  A j A8j) 7  A j A j) 7  Aj A j) 7  Aj A j) 7   (DAj6D A j" A@k) 7   )07` Aj!
 
( ! 
Aj( !# A@j"$ @@@ E@ 
AA o

 A
l"A" E
  Atj! AkA?q!  !@ A6$ A6
  6  Aj6  A6< B7, AШ 6(  Aj68 Aj A(j Aj Aj( 6   )7  A
j! A j" G
 
 
   Ajo A
lA
j!A !@   j"
Aj( @ 
( 
  A
j"G
 
 E
   
 A@k$ 

 A 
AA"E
 AjA /  ;   A (  6   A j( "  ( F@ A j  R (t! 
 (l  Alj" B 7   6    )7
  Aj Aj( 6  A8j"  A j") 7  A j" A j") 7  A j" Aj") 7  A j" Aj") 7   (tAj6t A@k" A j"
) 7   )`70  ) 7   ) 7   ) 7  
 ) 7    ) "7   )07` 	 (d " kK@ A j   	Y (h! 
 (`!  
6  6  
6  
 	A lj6  6   6    A lj6 Aj Aj~ A(j ) 7  A j ) 7  Aj ) 7  Aj 
) 7  Aj ) 7   )`7  
Aj( " @  At!  
( Aj!@ Aj( @ ( 
 A j!  A k" 
 

 
Aj( E
 
( 

 A 6  A6
 
Aj( @ 
( 
 
" Aj( E
   ( 
 
(
! 
Aj( " @  At!  Aj!@ Aj( @ ( 
 A j!  A k" 
 

 
Aj( @ 
 Aj$ 

A
A 
AA 


 Aj Aj) 7  A j Aj) 7   ) 7p Aj 	Aj) 7  Aj 	Aj) 7   	) 7 Aj A
j( 6   )7 A j Aj( 6   )7@  ! Aj! Aj!	 A@k!
# Ak"$  A j A j" ( "  ("@@@@@@@@@ (pE@ Aj Aj( " 6  Aj A j") 7  Aj Aj) 7  Aj" Aj) 7  A j"  6   )t7  A j"    A
jr Aj r A j Aj( 6   ) 7@ Aj   A@k3 (" AG
 ( "E
 (!  A
l! 	Aj( ! 	( !
@ A 6 B7 A j" AjA   (   Aj(  
A ! (!
  (F@ 
 
 E!
 (@ 

 
  A

-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2101-2250
j!  A
k"
 


 Aj Aj) "7  Aj Aj) "
7  Aj Aj) "
7   )x"
7 A j 7  Aj 
7  Aj 
7   
7 A 6  
Aj( @ 
( 
 	Aj( @ 	( 
 Aj( E
 ( 

 A
j )7  A$j Aj( 6  A
j Aj) 7  Aj Aj) 7  A 6    6

   64  ("  ( A
lj6t   6p  A4j6x A@k!
# A k" $   Aj" A j""Aj( 6    ) "7   6L@@@@@ "  (
"F
 @@   6(  A j  A(j"
 A
j" G
 
   6

   A
j6  A8j  ((  (8

 
A 6 
B7 

A0A"E
   )87  Aj  A@k"( 6   B7
   6  A0j"
  Aj( 6     )"7(   
6H@ "  (,"
F
 A!@   6L  A j  A j"E@ A
j" 
G


   A
j6(  A8j  (L  (8E
  (
 F@  Aj!# A k"$ @@  Aj"
K
  Aj( "At" 
 
 I"
A 
AK"
A
l! 
Aժ IAt!@ @ A6  A
l6  ( 6

 A 6
    AjQ (! ( E@  6  Aj 
6 

 Aj( "AxF
 E
    
 
 A j$   (!
  A
lj"  )87  Aj ( 6    Aj"6    
6H  (("  (,"
G
 

 
  )7  
Aj  A j( 6 
  A j$ 

A0A 
 Aj A j( 6   )@7    Aj (pE
 Aj) ! Aj) !
 )x!
 A j Aj) 7  Aj 
7  Aj 7   
7 A 6 

A A7 A@kAЂ A  
 Aj( !
 Aj(  Aj( ! Aj( !  Aj(  Aj( ! A j( @ (t
  @  A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

@ 
 
@ 
A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

E
 

 (@ ( 
 Aj( "@ (
!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 Aj( @ (

 A j( "@ (!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A
j( @ (
 
Aj( @ 
( 
 	Aj( E
 	( 

 A4j 	 A(j 
 AjB 7  AjB 7  B7 B 7x B7p Aj A jA҃ A9 A j 
Aj( 6   
) 7pA	A" E
  AjA -  :    A )  7   Aj( " Aj( F@ Aj R (!
 ( Alj"B7   6   )p7
 Aj A j"( 6  A j"  Aj) 7  A j" Aj") 7  A j"
 Aj) 7  A j"

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2251-2400
 Aj) 7   (Aj6 A j"
 Aj) 7   )7@ A6 Aj A<j( 6   )47  A0j( 6   )(7  Aj A:  B 7 B 7p  ( " (DF@ A@k S (H!
 (@ A lj A jA    Aj6  A(j 
) 7  A j 
) 7  Aj ) 7  Aj 
) 7  Aj  ) 7   )@7  (@ ( 
 Aj( "@ (
!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 Aj( @ (

 ( "@ (!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A
j( @ (
 	Aj( E
  	( 
 (
! Aj( " @  At! Aj! @  Aj( @  ( 
  A j!  A k"
 

 Aj( @ 
 Aj$ 

A	A 


 Aj A
j( 6   )7 Aj ( " (" (
 Aj Aj( "6  Aj Aj") 7  Aj Aj) 7  Aj" Aj) 7  Aj 6   )7 Aj" Aj  Aj"r Aj r A j 	Aj( 6   	) 7@ A j  A@k3 (p"AG
 Aj"
 Aj( 6   ) 7 (!  (" ("
A
l"j6  6  6  6 
E
@  A
j"6 ( "
E
  )7t  
6p Aj A jq (t@ (p
 ! A
k"
 


 Aj A
j( 6   )7 Aj ( "
 (" (@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (!  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 (E
  

 Aj Aj( "6  Aj Aj") 7  Aj Aj) 7  Aj" Aj) 7  Aj 6   )7 Aj" Aj  Aj"r Aj r A j 	Aj( 6   	) 7@ A j  A@k3 (p"AF
  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6 (@ (
 u Aj( @ (
 u Aj( @ (
 Aju (E
 (

 Aj A
j( 6   )7 Aj ( "
 ("
 (@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (!  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 (E
  

 Aj Aj( "6  Aj Aj") 7  Aj Aj) 7  Aj" Aj) 7  Aj 6   )7 Aj" Aj  Aj"r Aj r A j 	Aj( 6   	) 7@ A j  A@k3 (p"AF

  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6


 Aj A
j( 6   )7 Aj ( " (" (@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (!  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 (E
  

 Aj Aj( "6  Aj Aj") 7  Aj Aj) 7  Aj" Aj) 7  Aj 6   )7 Aj" Aj  Aj"
r Aj r A j 	Aj( 6   	) 7@ A j  A@k3 (p"
AF
	  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    
6


 Aj A
j( 6   )7 Aj( !
 Aj( ! A
j( ! A j( !
 A$j( ! A(j( ! A,j( ! A0j( ! A4j( ! A8j( ! A<j( ! A@k( !
 A j( ! A j( ! A j( !
 A j( ! A j( ! (! Aj (  ( ("@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6 

 Aj Aj( "6  Aj Aj) "7  Aj Aj) "

-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2401-2550
7  Aj Aj) "
7  Aj 6   )"
7 Aj 6  Aj 
7  Aj" 
7  Aj 7   
7 A j 	Aj( 6   	) 7@ A j Aj A@k3 (p"AF
  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6

 Aj( !
 Aj( ! A
j( !
 Aj( ! (! (! A8j A8j) 7  A0j A0j) 7  A(j A(j) 7   ) 7  Aj (  ( ("@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6 

 Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  Aj Aj) "
7  Aj 6   )"
7 Aj"
 6  Aj 
7  Aj 
7  Aj 7   
7 A j 	Aj( 6   	) 7@ A j Aj A@k3 (p"AF
  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6

 Aj A
j( 6   )7  A8j A(j) 7  A0j A j) 7  A(j Aj) 7   )7  Aj (  ( (@ Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  A4j( @ (0
 (E
 ( 

 Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  Aj Aj) "
7  Aj 6   )"
7 Aj 6  Aj 
7  Aj 
7  Aj 7   
7 A j 	Aj( 6   	) 7@ A j Aj A@k3 (p"AG@  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6 A4j( @ (0
 (E
 ( 

 A j"  Aj!# A k"$  AjA 6  A
j Aj( 6  A6   ) 7 A@k Aj ]@ (@"A
F@ A(j A j( "6   )D"7  A
j 6   7 A
6 

  )P7 A8j A j( "6  Aj A j) 7   )D"70 A
j 6   7  6 
 & A j$  ("A
F
  Aj )7  A j Aj( "6   A j Aj) 7   )"7@  Aj 6   A
j 7    6  A 6  A4j( @ (0
 (E
 ( 

 A j Aj) 7  A j Aj) 7   ) 7@ Aj A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 Aj 	Aj) 7  A j 	Aj) 7   	) 7p  ! A@k!  Aj!# Ak"$ @@@@@ A j"	Aj( @ Aj  (   ( (E
 Aj Aj) "7  Aj Aj) "
7  Aj Aj) "
7   )"
7 A j 7  Aj 
7  Aj 
7   
7 A 6 

 A 6  A6
 	Aj( @ 	( 
 	Aj( " @  At!  	(
Aj!@ Aj( @ ( 
 A j!  A k" 
 

 	Aj( @ 	(

 Aj( @ (
 A,j( E
 ((

 Aj Aj( " 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j  6   )7  	Aj( ! 	(
!
 A 6h B7` Aj"A 6  B7  Aj"6  A j6  6 Aj"
! # A k"
$  
 Atj" 
G@  (!  (!  ( ! 
Aj!@  
Aj 
 
Aj) "7 
 
) "
7  
A j!
 
(
! 
(!
 
(! 
(!@@ A j( " @ (!  A
l! @ 
 Aj( F@ (   
E

 A
j!  A
k" 
 

 (" (G@ ! 

  U 

 (" (G@ ! 

  U 
" (!
  (  Atj" 7  
7   6
  
6  6  6    (Aj6 
 G
 

 
A j$  A j" ( " 6   )"7H (d (`!
 (h!
 A0j"  6   7(  6  
 
Atj6  
6 A8j!# A k"$  
(" 
( "k"Av! 
(!A! @@@  G@ AŮK
 A l"

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2551-2700
A H
 AŮIAt! 
 
  
" E

 A 6  6   6   6  6  6  A 6  Aj6   6# A k" $  Aj"(!
 (!@@ ( " ("G@ (A(j! ( !@  A(j Aj Aj) ! ) !
  A 6@  B78  A j"  A8jA   
  A j  A0j( "6   Aj  A@k( "6     )("
7    )8"
7 A(j 7   
7  A6   
7 A
j 6   
7 Aj 6  A j! 
Aj!
 A j" G
 

  
6   A j$ 

A A7  AjA A  
 A j$ 

 
 
  
 A 6 B7 
 A  	 

 A j ( 6   ( 6   )(7T  )7H AjB 7  AjB 7  B7 B 7 B7 Aj AjA A
9 ("  (F@ Aj  S (! 
 (  A lj" A6  B 7    )H7
  A: p  B 7`  Aj A j) 7   A
j A j) 7  Aj"   ( Aj6  A j" Aj) 7  A j"
 Aj) 7  Aj"
 Aj) 7  Aj" Aj) 7  A j"  ) 7   )7` (<! (8! (@! Aj" ) 7  Aj" 
) 7  Aj"
 
) 7  Aj"
 ) 7  Aj" ) "7   )`7  ( " kK@ Aj   Y (! 
 (!  6  6  6   A lj6  6   6    A lj6 Aj Aj~ A(j ) 7  A j ) 7  Aj 
) 7  Aj 
) 7  Aj ) 7   )7  
@ 
At!  
Aj!@ Aj( @ ( 
 A j!  A k" 
 

@ 

 (@ ( 
 Aj( " @ (
!  A
l! @ Aj( @ ( 
 A
j!  A
k" 
 

 Aj( @ (

 A j( " @ (!  A
l! @ Aj( @ ( 
 A
j!  A
k" 
 

 A
j( @ (
 	Aj( @ 	( 
 	Aj( " @  At!  	(
Aj!@ Aj( @ ( 
 A j!  A k" 
 

 	Aj( @ 	(

 Aj( @ (
 A,j( E
  ((
 Aj$ 

A A7 A jAЂ A  


 A j Aj AjB 7  B 7  B7 B 7 B7 A j" Aj"A A9 Aj Aj( 6   )7 A@k"  : Aj A(j( 6  A6  ) 7  6  6  
6  6  6  
6  6  6  6  6  6  6  6  
6  6  6  
6  6    8

 Aj Aj( "6   )"7 !@ E
  At! A8j( !A ! (0!@    j"
Aj( F 
Aj(   A
Er!  A j"G
 
 AqE
  Aj A0j" Aj" Aj( 6   ) 7 A(j) ! ) !
 AjB 7  AjB 7  B7 B 7 B7 A j" Aj"A A9 Aj Aj( 6   ) 7 A@k"  : Aj 7  Aj Aj( 6  Aj ( 6   
7 A6  )7  )7    8 Ajs (E
 

 Aj" A8j( 6   )07  Aj!@AA"@ A6  6  A A A6

AA 
  A6  A 6   A
j )7   Aj ( 6  Ajs (@ 
 (E

 ( 


 Aj A0j A(j) ! ) !
 
B 7  AjB 7  B7 B 7 B7 A j" Aj"Aʅ A9 Aj A8j( 6   )07 A@k"
  : Aj 7  Aj Aj( 6   
7 A6  )7  
6  6  6  
6  6  6   
 8


 A4j( @ (0
 @ 
 @ 
 E


 E 
ErE@ 
 @  A
lj!  !@ Aj( @ ( 
 Aj( "@ (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

 Aj( @ (
 A
j"!   G
 


-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2701-2850
 
@ 
 E ErE@ 
 E ErE@ 
 
E ErE@ 

 
E ErE@ 

 (@ (
 

	
 Aj" 
Aj( 6   
) 7 (!  (" ("A
lj"6  6  6  6@ E
 @  A
j"
6 ( "
E
 )! (!@ ("@ B ! A
l! !@  Aj( F@ (  
 E

 A
j! A
k"
 

 ( F@ Aj V (! (!
  A
lj" 7  
6   (Aj6 (! (

 
 E
  
 

" G
 

 Aj"B A(j ( 6   )7     A j (E@ Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7  A j 
7  A j 
7  A j 7  A j 6   )"7p  7@ A@k% AjB 7  AjB 7  B7 B 7 B7   AjA A
9 (@ (
 u Aj( E
 (


 Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6 
 (@ (
 
AF@ u Aj( E
 (

 
u Aj( @ (
 u Aj( @ (
 Aju (E
 (

 Aj"
 Aj( 6   ) 7 (!  (" ("
A
l"j6  6  6  6@ 
E
 @  A
j"6 ( "
E
  )7t  
6p Aj A jq (t@ (p
 ! A
k"
 

 Aj"B A(j 
( 6   )7   
 
 A j (E@ Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7  A j 
7  A j 
7  A j 7  A j 6   )"7p  7@ A@k% AjB 7  AjB 7  B7 B 7 B7   AjA A9 (@ (
 u Aj( E
 (

 Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6 
 (@ (
 AF@ u Aj( E
 (

 u Aj( @ (
 u Aj( @ (
 Aju (E
 (

 Aj" Aj( 6   ) 7 (!  (" ("A
lj"6  6  6  6@ E
 @  A
j"
6 ( "
E
 )! (!@ ("@ B !
 A
l! !@ 
 Aj( F@ (  
 
E

 A
j! A
k"
 

 ( F@ Aj V (! (!
  A
lj" 7  
6   (Aj6 (! (

 
 E
  
 

" G
 

 Aj"B A(j ( 6   )7   
  A j (E@ Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7  A j 
7  A j 
7  A j 7  A j 6   )"7p  7@ A@k% AjB 7  AjB 7  B7 B 7 B7   AjA A	9 (@ (

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:2851-3000
 u Aj( E
 (

 Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (@ (
 u Aj( E
 (

  A
j )t7   A$j Aj( 6   A
j Aj) 7   Aj A j) 7   A 6    6 (@ (
 u Aj( @ (
 u Aj( @ (
 Aju (E
 (

 Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (!  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 (E
   
 	Aj( E
 	( 

 Aj"B A(j 
( 6   )7     A j (E@ Aj Aj( "6  Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7  A j 
7  A j 
7  A j 7  A j 6   )"7p  7@ A@k% AjB 7  AjB 7  B7 B 7 B7   AjA A
9 (@ (
 u Aj( E
 (

 Aj Aj) "7  Aj Aj) "
7  A j Aj) "
7   )"
7t  A j 7   Aj 
7   Aj 
7    
7  A 6  (@ (
 u Aj( E
  (
 	(
!  	Aj( "@ At!  Aj!@ Aj( @ ( 
 A j! A k"
 

 	Aj( @  
 Aj( @ (
 A,j( E
 ((

 	(
!  	Aj( "@ At!  Aj!@ Aj( @ ( 
 A j! A k"
 

 	Aj( E
   
 Aj( @ (
 A,j( E
  ((
 Aj$  Aj$ 
~# A@j"$  Aj ( "@@ - Aq@ - 	"A,G@@ A G@ - 
  B 7 

  B 7 

 A : 

    -  Aq@ - !

  B 7 

  B7 

 A F@  B7 

 A j!A !# Ak"$  A(j "@@@@@@@@ - (Aq@ - )A G
  A j  - $! Aj ( "A! - AqE
 AjAr!
 - ! Aq!	@@@@@@@@@@@@ Aq"A,G@ A F
 	
A	!

 	@A!

  Aj  - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 Aj!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("	AG
 A
j( !	 Aj( ! ("E@   	b

   	b E
 

 A6 

 A6 

 )!  (
6
  7  	6 
 A j$  - ! ("AG@  ) 7  Aj(  6  !

 Ak
 !@@@ 
"E@ AjA Av ("AG
 Aj( ! Aj( ! (!
 E@ AjA Av ("
AG
 (!
 E@ AjA Av ("
AG
 Aj( !
 Aj( ! (!
  
6x  6t  6p  6l  6h  6d  6` E
 A<j A j"Ar"Aj) 7   )t"7D  60  ) 74   (`"AG
  )07  Aj A j( 6  Aj A@k) 7  Aj A8j) 7 

 A j (6  A j )7   6d A 6`

 A j )7  A j (6 


 A j (6  A j )7 



-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3001-3150
 
 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 Aj  ("AF

 A j (6  A j )7   6d

 (!
 (! (!

@@ E@ Aj  ("AF
 
 )7  
Aj Aj( 6 

 A jArA Az

 Aj  ("AF

 A j )7  A j (6   6d

 
E
 A jArA Az

 A jArA Az A 6`


 Aj )d7  Aj A j( 6  A 6   6 (4@ 
 A@ku E

 (@


 Aj @@ ("AG@ 
 )7  
Aj Aj( 6 

 Aj  ("AF

 A j (6  A j )7   6dA !
 



 (! (! (!


 E
	

 (!A!
 Aj A !	 - 	! - Aq
 


 B 7 

 B7 

  
6d A 6` E
  
 
A G!
 E


 A j ( 6   A j :    )7 i  6d E

 
@ 
A
l! !@ Aj( @ ( 
 A
j! A
k"
 

 E
  
 E 
E 
rr
  

 A j A j) "7   )d"7P A
j 7   7 A 6 
 Aj$  ( "@ Aj A,j) "7   )$"7 )4!  Aj 7   Aj 7   Aj 7    6  A 6 

 Aj A,j) "7   )$"7  A
j 7    7  A6 
 A@k$ 
.5~# A k"$  Aj ( "@@ - Aq@ - "A,G@@ A G@ - 
  B 7 

  B 7 

 A : 

  Aj  - Aq@ - 	!

  B 7 

  B7 

 A F@  B7 

 A(j!
# Ak"$  A j @@@@@@@@ -  Aq@ - !A G
  Aj A!/ (!  - 
Aq"-:   6 Aj A! - AqE
 AjAr!" - ! -!@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 -
A	!


 Aq
   Aj  - AqE@A!


 - 	!

A !- A : 
 Aq"A"G@A! A G
A!

 Aj!	# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@ 	  +

 	  + E
 

 	A6 

 	A6 

 )!7 	 (
6
 	 77 	 6 
 A j$  - ! ("AG@  ) 7  Aj(  6  !

 Ak
 &!@@@ 
"E@ AjA Av ("AG
 Aj( !' Aj( ! (!

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3151-3300
 A  !	 (! 
"E@ AjA Av ("AG
 Aj( !) (! Aj( !
 *E@ AjA Av ("AG
 (!$
   6  %6  $6  )6  6  6  +6  6  	6|  '6x  6t  6p  A  !6 E

 A j Aj"Aj) 7  A j Aj) 7  A j Aj) 7  A4j A j"Ar"Aj) 7   ) 7<  6(  ) 7,   (p"AG
	 
 )(7  
A0j A j( 6  
A(j A j) 7  
A j A j) 7  
Aj A@k) 7  
Aj A8j) 7  
Aj A0j) 7 

 Aj (6  A j )7   6t A 6pA!

 Aj (6  A j )7   6t A 6p

 A j )7  A j (6   6t A 6p E
 

 !
 Aj!# A k"
$  
Aj Aj( "
@@ 
("AF@ 
Aj 
 
- AqE
@ 
- 	A F@ 
 
Aj 
 
("AG
 B7 

 
Aj!# A k"
$  
Aj 
@@@ 
- Aq@ 
- 	A G
 
 
 
 
Aj!# 
( ! 
- Aq!0# A k"$  A 6  B7 Aj @@ - Aq@ - ! A j!1 A j!5@@@@ Aq"A,G@ A F
 0E
A !0

  Aj  - Aq@ - 	!

 A68

 # )7 #A6  #A
j A j( 6 

 A68

 AqA F@ A68

 A j!
A !B !8B !9B !:A !	A !.A !2# A k"$  A j @@@@@ -  Aq@ - !A F@  Aj  - 
! Aj ("A! - AqE
 A j!3 A jAr!4 - ! Aq! A j!6@@@@@@@@ Aq"A,G@ A F@ 	! "E@ A jA Av (H"AG
 A j( !. A j( ! (L!
 8
 A jArA Av A4j A j5 >  A 68  A j) 7,  (L6( E
 

 
A	!


 @A!


  Aj  - AqE@A!


 - 	!
 Aq"A"G@A! A G
A!


 A j!# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 	
 Aއ AE
	

 A A
 A6  A: 
	
@@ Ak 
 Aއ AE


 A A
 A6  A: 

 A6 

 A6 

 )!7  (
6
  77  6 

   A Ay

 A6  A : 
 E
 

   A Ay

 A6  A : 
 A j$  - L! (H"AF
  ) M7`  A j(  6 g !
	
  (T64  )L7,  6(
 A G!2

 @@@@ 8P@ A j  (`"AF
 3 )d7  3Aj A j( 6 

 A(jA Az


 A j  (HE
 (L!
 A4j A j5 >   )P7,  6(
	
 6) !9 )P!:B!8

 E
 A(jA Az

  .6@  6<  68 E
 )@!7 A(j  (("AF@ 

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3301-3450
 :7  
 77 
 6 
 6 
 97


 
 ),7 
A
j A4j( 6  
A 6 
 6  E
	 
	
 A j @@ (H"AG@ 4 )L7  4Aj A j( 6 

 A j  (`"AF

  (l64  )d7,  6(

 (l!. (h!	 (d!
  A ! - ! -  Aq
 


 
A 6 
A6 

 
A 6 
A6 

 A4j ( g6    )`7 -  : ,  6(
 	E E 2rr
  
 A0j) !9 )(!:
 
 :7  
A 6 
 97
 A j$  5) !8 )P!7 (`"E@  778  87@

 A0j" 1Aj( 6   1) 7( ( " (
F@ Aj U ( !
 ( Atj" 6  )(7 A
j ( 6   87  77   ( Aj6    - ! -  Aq
 

 A68
 # )87  #Aj A@k) 7  ( "@ At! (Aj!@ Aj( @ ( 
 A j! A k"
 

 (
E
  (
 A j$  
("AG
 
A
j"( ! 
Aj( !	 
(! 
Aj 
 
("AF@  6 A6  A
j 6  Aj 	6 

  
)7 A
j ( 6   6  @ At! Aj!@ Aj( @ ( 
 A j! A k"
 

 	E
 

 A6 

 A6 

 
)!7  
(
6
  77  6 
 
A j$  
(AF@  
)7 A6  A
j 
A
j( 6 

  
)7  Aj 
Aj) 7 

  
)7 A
j 
A
j( 6   6 

  
)7 A
j 
A
j( 6   6 

 A6 
 
A j$  (! (!	 (! ("AG
 !E Er
  @  At! Aj!@ Aj( @ ( 
 A j! A k"
 

 %E
 

@@ *E@ Aj  ("AF
 " )7  "Aj Aj( 6 

 A jArA Az

 Aj  ("AF

 A j )7  A j (6   6t


 
E
 A jArA Az


 
 Aj AjP (!+ (! (! ("AF@ E E Err
A!  ! !

 Aj +6  A j 6  A j 6   6t


 
E
 A jArA Az
	
 Aj 6  A j 	6  A j 6   6t A 6pA!

-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3451-3600

 
Aj )t7  
Aj A j( 6  
A 6  
 6 (,@ 
@ (4"E
  A8j( E
  
 A j( @ (@
 (P"E
 A js A j( E
 

 A jArA Az A 6pA!!A 

 A jArAǀ A
z A 6pA!A 

 Aj @@ ("AG@ " )7  "Aj Aj( 6 

 Aj  ("AF

 Aj (6  A j )7   6tA !


 (!' (!& (!


 ! !A!

 Aj @ ("AG@ " )7  "Aj Aj( 6 

 Aj  ("AF

 Aj (6  A j )7   6tA !

 A 6pA!


 (!) (!( (!


 A 6pA 
!,A!
	
 (!$A!*

 !  	!% !A!!
  A ! - ! -  Aq
 


 
B 7 

 
B7 

 	E ErE@ 	
 
E!/ E! E
  
 
A G!,

 Aj ( 6   A j :    )7 y  6t A 6pA!
 !E Er
   @  At! Aj!@ Aj( @ ( 
 A j! A k"
 

 %E
  
 (E 
E /ErrE@ 

 E  qE ErrE@ 
 &E 
E ,rr
  

 A j A j) "87   )t"77` 
A
j 87  
 77 
A 6 
 Aj$  (("@  Aj )<7  A j A4j) "87   A j A j) 7   A(j A j) 7   A0j A j) 7   ),"77  Aj 87   Aj 77    6  A 6 

 A j A4j) "87   ),"77  A
j 87    77  A6 
 A j$ 
K~# Ak"$  A8j   A j  A j  Aj (8"@ (@@@@@ (AF@ Aj Aj) 7   )7 AjA A Aj6

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) 7  Aj"  Aj) "N7   )7 NAF
  Aj ) 7  A j  ) 7   )7x  )7h (!A (!B (!C (!D )!R Aj (H"K (P@@@@@@ (@ Aj Aj) 7  Aj Aj) 7   )7

 Aj"  Aj) 7   )7 AjA A  Aj6 (A
G

 Aj( !< Aj( !E Aj( != Aj( !L Aj( !F (!G Aj!) (X"M! (`! A !# Ak"$      A j!# A k"%$  %Aj @@@ %- Aq@ %- 	" A"F
  A F
 B7 

 B 7 

 %Aj 
@ %("AF@A!

  %/ ; 	 A
j %- :   %- !  A
j %)7  Aj  :  
 A
6   6

 # A k" $   Aj 
@@  ("
AF@  - !   Aj   ("
AF

  Aj"	  - :      / ;
  - !  (!  (
!    /
; 	 A
j 	-  :   Aj  6  A
j 6  Aj :    
6 A
6 

@@@@@@@@@@  Ak	 	
# Ak"
$  
A j!# Ak"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $ Aj ( " - AqE@ AjA:   A6

 AjAr!	 - !Aq!
A ! @@@@@@@ Aq"A,G@ A F
 

A!A	!


 
@A!A!


  Aj A! - AqE@A!


 - !

-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3601-3750
 Aq"A"G@A!A! A G
	A!
	
 Aj  ("AF
  ) 7  Aj(  6  - !

  E@ AjA Av (" AG
 Aj( ! Aj( ! (! 
 Aj" 6  A<j ) 7   6   6 A	60  )74 Aj  (" AG
  A0jA 


  E
 AjArA Az

 Aj (6  Aj )7    6

 Aj )7  Aj ( 6  A
6    6 A0j

 Aj @@ ("AG@ 	 )7  	Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6

 (! (! (!  Aj A!A !
 - 	! - Aq
 
A!

 B 7 

 B7 

 Aj ( 6   Aj :    )7   6  E

 @ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 E
   
 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ 
(x"A
G@ 
A j"  
Aj) 7  
 
)|7h 
A$j 
AjA  
A
j  ) 7  
 6 
 
)h7 
Aj  
- AqE
 
- 	A G
   
AjA 

 
A j 
Aj) "O7  
 
)|"N7h A
j O7   N7 A
6 

 B 7  
Aje

 B7  
Aje
 
Aj$ 
	
# Ak"
$  
A j!# Ak"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $ Aj ( " - AqE@ AjA:   A6

 AjAr!	 - !Aq!
A ! @@@@@@@ Aq"A,G@ A F
 

A!A	!


 
@A!A!


  Aj A! - AqE@A!


 - !
 Aq"A"G@A!A! A G
	A!
	
 Aj  ("AF
  ) 7  Aj(  6  - !

  E@ AjA Av (" AG
 Aj( ! Aj( ! (! 
 Aj" 6  A<j ) 7   6   6 A60  )74 Aj  (" AG
  A0jA 


  E
 AjArA Az

 Aj (6  Aj )7    6

 Aj )7  Aj ( 6  A
6    6 A0j

 Aj @@ ("AG@ 	 )7  	Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6

 (! (! (!  Aj A!A !
 - 	! - Aq
 
A!

 B 7 

 B7 

 Aj ( 6   Aj :    )7   6  E

 @ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 


-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3751-3900
 E
   
 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ 
(x"A
G@ 
A j"  
Aj) 7  
 
)|7h 
A$j 
AjA  
A
j  ) 7  
 6 
 
)h7 
Aj  
- AqE
 
- 	A G
   
AjA 

 
A j 
Aj) "O7  
 
)|"N7h A
j O7   N7 A
6 

 B 7  
Aje

 B7  
Aje
 
Aj$ 

# Ak"
$  
A j!# Ak"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $ Aj ( " - AqE@ AjA:   A6

 AjAr!	 - !Aq!
A ! @@@@@@@ Aq"A,G@ A F
 

A!A	!


 
@A!A!


  Aj A! - AqE@A!


 - !
 Aq"A"G@A!A! A G
	A!
	
 Aj  ("AF
  ) 7  Aj(  6  - !

  E@ AjA A	v (" AG
 Aj( ! Aj( ! (! 
 Aj" 6  A<j ) 7   6   6 A60  )74 Aj  (" AG
  A0jA 


  E
 AjArA A	z

 Aj (6  Aj )7    6

 Aj )7  Aj ( 6  A
6    6 A0j

 Aj @@ ("AG@ 	 )7  	Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6

 (! (! (!  Aj A!A !
 - 	! - Aq
 
A!

 B 7 

 B7 

 Aj ( 6   Aj :    )7   6  E

 @ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 E
   
 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ 
(x"A
G@ 
A j"  
Aj) 7  
 
)|7h 
A$j 
AjA  
A
j  ) 7  
 6 
 
)h7 
Aj  
- AqE
 
- 	A G
   
AjA 

 
A j 
Aj) "O7  
 
)|"N7h A
j O7   N7 A
6 

 B 7  
Aje

 B7  
Aje
 
Aj$ 

# Ak"
$  

-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:3901-4050
A j!# Ak"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $ Aj ( " - AqE@ AjA:   A6

 AjAr!	 - !Aq!
A ! @@@@@@@ Aq"A,G@ A F
 

A!A	!


 
@A!A!


  Aj A! - AqE@A!


 - !
 Aq"A"G@A!A! A G
	A!
	
 Aj  ("AF
  ) 7  Aj(  6  - !

  E@ AjA A	v (" AG
 Aj( ! Aj( ! (! 
 Aj" 6  A<j ) 7   6   6 A60  )74 Aj  (" AG
  A0jA 


  E
 AjArA A	z

 Aj (6  Aj )7    6

 Aj )7  Aj ( 6  A
6    6 A0j

 Aj @@ ("AG@ 	 )7  	Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6

 (! (! (!  Aj A!A !
 - 	! - Aq
 
A!

 B 7 

 B7 

 Aj ( 6   Aj :    )7   6  E

 @ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 E
   
 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ 
(x"A
G@ 
A j"  
Aj) 7  
 
)|7h 
A$j 
AjA  
A
j  ) 7  
 6 
 
)h7 
Aj  
- AqE
 
- 	A G
   
AjA 

 
A j 
Aj) "O7  
 
)|"N7h A
j O7   N7 A
6 

 B 7  
Aje

 B7  
Aje
 
Aj$ 

# Ak"
$  
A j!&A !# Ak"
$  
A(j @@@@@@@ 
- (Aq@ 
- )A G
  
A j  
- $ 
Aj 
( ""A! 
- AqE
 
Aj!' 
Aj!8 
Aj!6 
Aj!9 
AjAr!H 
- ! Aq!@@@@@@@@  Aq"	A,G@ 	A F@ 
 6 !  "E@ 
AjA Av 
(" AG
 
Aj( !> 
(! 
Aj( ! 
 
 
AjA Av 
Aj 
Aj) 7  
 
)7 
A
6  E
 

 
A	! 
 6


 @A! 
 6


-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4051-4200

 " 
Aj " 
- AqE@A! 
 6


 
- ! 
  Aq" A"G@A!  A G
 
 6A!


 
Aj!# A k"
$  
Aj "@@@@@@@@ 
- Aq@ 
- 	A"G
 " 
Aj " 
(" AG
 
A
j( !	 
Aj( ! 
(" E@@@ 	Ak 			
 Aؑ AE
	

 )  Aݑ )  R
 A6  A: 
	
@@ 	Ak 
  Aؑ AE


  )  Aݑ )  R
 A6  A: 

 A6 

 A6 

 
)!N  
(
6
  N7   6 

    	A Ay

 A6  A : 
 E
  

   	A Ay

 A6  A : 
 
A j$  
(" AF
 
 6 
 
) 7 
 
Aj(  6  
- !?  !


 
Aj 
(6  
Aj 
)7  
  6
 A G!  E




@ 
- "?@ 
 
Aj "@ 
(" AG@ 
Aj 
)7  
Aj 
Aj( 6  
A 6 
  6

 
Aj!!A !	A !A ! A !A !
A !A !A !A !
A !+A !,A !-A !.A !/A !1A !
A !2A !A !3A !4A !A !5A !
A !A !
A !# Ak"$  A(j "@@@@@@@ - (Aq@ - )A G
 " A j " ( !#  - $Aq": |  #6x Aj # - AqE@A!A!7

 AjAr!I - !	 !@  !@@@@@@@@@@@ 	" A,G@  A F
 
A!7A	!

 Aq
  # Aj #A!7 - AqE@A!

 - !	

A ! A : |
A!7 	A"G@AA 	A F!


 Aj!# A k"$  Aj #@@@ - Aq@ - 	A"G
 # Aj # (" AG
 A
j( !	 Aj( ! (" E@   	a

    	a E
  

 A6 

 A6 

 )!N  (
6
  N7   6 
 A j$  - ! ("AG@ /  - Atr! (!
 (! 


 Ak
 1A  +!	 @ ,A  -!  Av!

 AjAҀ A
v ("AF@ ,A  -!  ("Av! (!
 ("
 !
 
! !	

 +E!7 /  - Atr! (!
 (!  - !A ! 	E 
Er


-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4201-4350
 	


@ .E@ Aj A jP /  - Atr! (!
 (!  - !	 ("AF



 AjA Az /  - Atr! (!
 (!  - ! (!A!.


 E .E /ErrE@ /
 At 	r!/A!.

@ 2E@ Aj A jP /  - Atr! (!
 (!	 - ! ("AF
 
!
 	!  !


 AjA Az /  - Atr! (!
 (!  - ! (!A!2


 E 2E 3ErrE@ 3
 At r!3A!2 !  	!

@ 4E@ Aj A jP /  - Atr! (! (!	 - ! ("AF
 !
 	!  !


 AjA Az /  - Atr! (!
 (!  - ! (!A!4
	
 E 4E 5ErrE@ 5
 At r!5A!4 !  	!

@ -E@ Aj A jP /  - Atr! (!
 (!	 - ! ("AF
 
!
 	!  !
	
 AjA݀ Az /  - Atr! (!
 (!  - ! (!A!-

 E -E ,ErrE@ ,
 At r!,A!- !  	!

 E
 AjAҀ A
z /  - Atr! (!
 (!  - ! (!

@ +E@ Aj A jP /  - Atr! (! (!	 - ! ("AF
 !
 	!  !

 AjAǀ A
z /  - Atr! (!
 (!  - ! (!A!+

 
E +E 1ErrE@ 1
 At r!1A!+ !  	!


 Aj #@@ ("AG@ I )7  IAj Aj( 6 

 Aj!$# A k"$  Aj #@@@ - Aq@ - 	A G
 #  # Aj!0 ( !	 - Aq! # A@j"$    : 
  	6 A 6 B7 A j" Ar!:   Aj0@@ ( E@ A(j"JAj! JAj!@@ ($"E
 (" (F@ Aj!;# A k"($ @@ Aj"	E
  ;Aj( "*At"  	   	K" A  AK"A
l!	 A$IAt! @ *@ (A6 ( *A
l6 ( ;( 6

 (A 6
 ( 	   (AjQ ((!	 (( E@ ; 	6  ;Aj 6 

 (Aj( " AxF
  E
  	   
 
 (A j$  (!
 ( A
lj"  J) 7   6   A
j ) 7   Aj ) 7   (Aj6 A j Aj0 ( E
 
 0 :) 7  0Aj :Aj) 7  (" E
 ("	  A
lj!@ 	Aj( @ 	( 
 	Aj( " @ 	(!  A
l!*@ Aj( @ ( 
 A
j! *A
k"*
 

 	Aj( @ 	(
 	A
j"	 G
 


 0 )7 0A6  0A
j Aj( 6 

 0 :) 7  0Aj :Aj) 7 
 (E
  (
 A@k$  (" AG
 A
j"( ! Aj( ! (!	 Aj # (" AF@ $ 	6 $A6  $A
j 6  $Aj 6 

 $ )7 $A
j ( 6  $  6  @ 	 A
lj! 	! @  Aj( @  ( 
  Aj( "@  (! A
l!*@ Aj( @ ( 
 A
j! *A
k"*
 

  Aj( @  (
  A
j"  G
 

 E
 	

 $A6 

 $A6 

 )!N $ (
6
 $ N7 $  6 
 A j$  ("AF

 /  - Atr! (!
 (!  - !A !

 (! (!

-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4351-4500
 (! ! 
 Aj #A ! - 	!	 - Aq
 
A!  !

 !B 7


 !B7


 .E@ !	

 /E@ !	

 E@ !	

 / !	
 E 2E 3ErrE@ 3
 E 4E 5ErrE@ 5
 E -E ,ErrE@ ,
 E
 @  A
lj! !@ Aj( @ ( 
 Aj( "@ (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

 Aj( @ (
 A
j" G
 

 
E
 

  ; E A j Av:    /AvA  ."; m A j Av:    
6t  6p  
6h  6d  6\  6X  
6P  68  
64  	60  6L   6H  : D  
6@  6<  3A  26`  5A  46T  /A  .: l Aj " (" AF@ ! A0jA 

 !Aj )7  !A
j Aj( 6  !A 6
 !  6 A0j

 +E 7Er 1E 
Err
  1
 ! ;  ! 
6
 !  6 ! 6 !A 6
 !Aj Av:   !Aj 	:  
 Aj$  
("@ ' 6) 7  
Aj 
Aj( 6  
Aj"  9Aj) 7  'Aj 6Aj) 7  'Aj 6Aj) 7  'Aj 6Aj) 7  'A j 6A j) 7  
 
)7 
 9) 7 8Aj  ) 7  8 
)7 

 
A 6
 
Aj 9Aj) 7  
 9) 7A ! 


 E
 
 6 
AjArA Az
	
 
 6 
AjArA AzA ! 
	
 
Aj 
Aj( 6  
Aj 8Aj) 7  
Aj 'Aj) 7  
Aj 'Aj) 7  
Aj 'Aj) 7  
Aj 'A j) 7  
 
)7 
 8) 7 
 ') 7 
Aj"	 >6  
Aj" 	) 7  
  6 
 6 
A6 
 6 
 
)7 
A j 
AjA  
A<j ) 7  
A60 
 
)74 
Aj  
(" AG@ &Aj 
)7  &Aj 	( 6  &A
6  &  6 
A0j


 & 
A0jA 


 
Aj "@@ 
(" AG@ H 
)7  HAj 
Aj( 6 

 
Aj " 
(" AF

 
 6 
Aj 
(6  
Aj 
)7  
  6A !

 
(!> 
(! 
(!
 
Aj "A ! 
- 	!  
- Aq
 



-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4501-4650
 &B 7 

 &B7 

 
 6
 
Aj 
( 6   
Aj ?:   
 
)7  
 6
A !  E

 
Aj
 E E  rrE@ 
 
Aj 
Aj) "O7  
 
)"N7 &A
j O7  & N7 &A
6 
 
Aj$ @@@ 
(x"A
G@ 
A j"  
Aj) 7  
 
)|7h 
A$j 
AjA  
A
j  ) 7  
 6 
 
)h7 
Aj  
- AqE
 
- 	A G
   
AjA 

 
A j 
Aj) "O7  
 
)|"N7h A
j O7   N7 A
6 

 B 7  
Aje

 B7  
Aje
 
Aj$ 

# Ak"$  A j!A !
# Ak"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $! Aj ( "A!A!  - AqE
 AjAr! - ! Aq! AjAr!
 Aj!@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	! 

 Aq@A! 

  Aj  - AqE@A! 

 - !
 Aq"A"G@A!  A G
A! 

 Aj!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@   J

   J E
 

 A6 

 A6 

 )!N  (
6
  N7  6 
 A j$  - ! ("AG@  ) 7  Aj(  6  ! 

 Ak
 	!@@@ "E@ AjA Av (" AG
 Aj( ! Aj( ! (!
 ! 
" E@ AjA Av (" AG
 Aj( ! Aj( ! (! 
 

 AjA Av Aj Aj) 7  A
6  )7 E
  

 Aj (6  Aj )7    6 A
6

 Aj (6  Aj )7    6 A
6
 
E! E
 

 

 Aj  ("AG@ 
 ) 7  
Aj Aj( 6   6 Aj) !P )!Q

 Aj   ) !P )!Q ("
E

 )!O (!

	
 
E
 AjArA Az

 E
 AjArA Az
 
E


 AjArA Az A
6


 Aj" 6  Aj P7    6 Aj"  ) 7   6  6  Q7  O7  
6  6  6 A6  
6  )7 A j AjA  A<j  ) 7  A60  )74 Aj  (" AG@ Aj )7  Aj ( 6  A
6    6 A0j

  A0jA 


-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4651-4800
 Aj @@ ("AG@  )7  Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6A !

 (! (!	 (!

 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj  ("AF

 Aj (6  Aj )7   6A !

A 
E

	
 (! (! (!

 Aj A ! - 	! - Aq
 


 B 7 

 B7 

 Aj P7   Q7A
!

 A G!
 
E


 Aj ( 6   Aj :    )7    6 A
6 
E

 
E
  

 E 
E ErrE@ 

 	E E 
rrE@ 
 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ (x"A
G@ A j"  Aj) 7   )|7h A$j AjA  A
j  ) 7   6  )h7 Aj  - AqE
 - 	A G
   AjA 

 A j Aj) "O7   )|"N7h A
j O7   N7 A
6 

 B 7  Aje

 B7  Aje
 Aj$ 

# Ak"$  A j!A !
A !# Ak"$  A(j @@@@@@ - (Aq@ - )A G
  A j  - $!	 Aj ( "
A! - AqE
 AjAr! - !  	Aq!@@@@@@@@  Aq"A,G@ A F@ !  
"	E@ AjA Av (" AG
 Aj( ! (!	 Aj( ! 
 
E@ AjA A
v ("AG
 (!
 Aj( !
 Aj( !
 Aj" 6   
6 Aj" ) 7    6  	6  6  
6 A6  )7 A j AjA  A<j ) 7  A60  )74 Aj  (" AG
  A0jA 

 
A	!


 @A!


 
 Aj 
 - AqE@A!


 - ! 
  Aq" A"G@A!  A G

A!


 Aj!# A k"$  Aj 
@@@@@@@@ - Aq@ - 	A"G
 
 Aj 
 (" AG
 A
j( ! Aj( !	 (" E@@@ Ak 						
 	Aؑ AE
	

 	A A

 A6  A: 
	
@@ Ak 
  Aؑ AE


  A A

 A6  A: 

 A6 

 A6 

 )!N  (
6
  N7   6 

    A Ay

 A6  A : 
 	E
  

  	 A Ay

 A6  A : 
 A j$  - !	 (" AF
  ) 7  Aj(  6   !


 Aj (6  Aj )7    6

 Aj (6  Aj )7   6 A
6  E

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4801-4950
 	

@ 	Aq@ 

 Aj 
@@ (" AG@  )7  Aj Aj( 6 

 Aj 
 (" AF

 Aj (6  Aj )7    6


 (! (!
 (!


 
E
 AjArA Az 
E

	
 AjArA A
z

 Aj )7  Aj ( 6  A
6    6 A0j
	
 Aj 
@@ (" AG@  )7  Aj Aj( 6 

 Aj 
 (" AF

 Aj (6  Aj )7    6A !
 



 (! (! (!

 Aj 
A ! - 	!  - Aq
 


 B 7 

 B7 

 
A G! 
E


 Aj ( 6   Aj 	:    )7   6 
E

 
E
  

 E 
E rrE@ 

 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ (x"A
G@ A j"  Aj) 7   )|7h A$j AjA  A
j  ) 7   6  )h7 Aj  - AqE
 - 	A G
   AjA 

 A j Aj) "O7   )|"N7h A
j O7   N7 A
6 

 B 7  Aje

 B7  Aje
 Aj$ 

# Ak"$  A j!A !
A !# Ak"
$  
A(j @@@@@@ 
- (Aq@ 
- )A G
  
A j  
- $!	 
Aj 
( "
A! 
- AqE
 
AjAr! 
- !  	Aq! 
AjAr! 
Aj!@@@@@@@@  Aq"A,G@ A F@ !  
"	E@ 
AjA Av 
(" AG
 
Aj( !
 
(!	 
Aj( ! 
 
 
AjA Av 
Aj 
Aj) 7  
A
6 
 
)7  E
 	

 
A	!


 @A!


 
 
Aj 
 
- AqE@A!


 
- ! 
  Aq" A"G@A!  A G

A!


 
Aj!# A k"$  Aj 
@@@@@@@@ - Aq@ - 	A"G
 
 Aj 
 (" AG
 A
j( ! Aj( !	 (" E@@@ Ak 	

-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:4951-5100
 	(  A (  F
	

 	Aؑ A
 A6  A: 
	
@@ Ak 
  (  A (  F


  Aؑ A
 A6  A: 

 A6 

 A6 

 )!N  (
6
  N7   6 

    A Ay

 A6  A : 
 	E
  

  	 A Ay

 A6  A : 
 A j$  
- !	 
(" AF
 
 
) 7 
 
Aj(  6   !


 
Aj 
(6  
Aj 
)7  
  6
 
A G! E

	
@ 	Aq@ 
 
Aj 
 
(" AG@  ) 7  Aj Aj( 6  
  6 
Aj) !Q 
)!P
	
 
Aj 
  ) !Q 
)!P 
("E
 
)!O 
(!

 
E
 
AjArA Az E

	
 
AjArA Az

 
Aj" 
6  
Aj Q7  
 P7 
Aj" ) 7  
  6 
 	6 
 O7 
 6 
A6 
 6 
 
)7 
A j 
AjA  
A<j ) 7  
A60 
 
)74 
Aj  
(" AG@ Aj 
)7  Aj ( 6  A
6    6 
A0j


  
A0jA 
	
 
Aj 
@@ 
(" AG@  
)7  Aj 
Aj( 6 

 
Aj 
 
(" AF

 
Aj 
(6  
Aj 
)7  
  6A !
 E


 
(!
 
(! 
(!

 
Aj 
A ! 
- 	!  
- Aq
 


 B 7 

 B7 

 
Aj Q7  
 P7


-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5101-5250
 
Aj 
( 6   
Aj 	:   
 
)7  
 6 E

 E
  
 E 
E rrE@ 

 
Aj 
Aj) "O7  
 
)"N7 A
j O7   N7 A
6 
 
Aj$ @@@ (x"A
G@ A j"  Aj) 7   )|7h A$j AjA  A
j  ) 7   6  )h7 Aj  - AqE
 - 	A G
   AjA 

 A j Aj) "O7   )|"N7h A
j O7   N7 A
6 

 B 7  Aje

 B7  Aje
 Aj$ 

# Ak"$  A j!A !
A !# Ak"$  A(j @@@@@@ - (Aq@ - )A G
  A j  - $!	 Aj ( "
A! - AqE
 AjAr! - !  	Aq!@@@@@@@@  Aq"A,G@ A F@ !  
"	E@ AjA Av (" AG
 Aj( ! (!	 Aj( ! 
 E@ AjA Av ("AG
 Aj( !
 (! Aj( !
 Aj" 6   6 Aj" ) 7    6  	6  
6  6 A6  )7 A j AjA  A<j ) 7  A60  )74 Aj  (" AG
  A0jA 

 
A	!


 @A!


 
 Aj 
 - AqE@A!


 - ! 
  Aq" A"G@A!  A G

A!


 Aj!# A k"$  Aj 
@@@@@@@@ - Aq@ - 	A"G
 
 Aj 
 (" AG
 A
j( ! Aj( !	 (" E@@@ Ak	 	
 	AĒ AE
	

 	Aؑ A
 A6  A: 
	
@@ Ak 
  AĒ AE


  Aؑ A
 A6  A: 

 A6 

 A6 

 )!N  (
6
  N7   6 

    A̒ Ay

 A6  A : 
 	E
  

  	 A̒ Ay

 A6  A : 
 A j$  - !	 (" AF
  ) 7  Aj(  6   !


 Aj (6  Aj )7    6

 Aj (6  Aj )7   6 A
6  E
 	

@ 	Aq@ 
 Aj 
@@ (" AG@  )7  Aj Aj( 6 

 Aj 
 (" AF

 Aj (6  Aj )7    6


 (!
 (! (!

 
E
 AjArA Az E

	
 AjArA Az

 Aj )7  Aj ( 6  A
6    6 A0j
	
 Aj 
@@ (" AG@  )7  Aj Aj( 6 

 Aj 
 (" AF

 Aj (6  Aj )7    6A !
 


 (! (! (!


-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5251-5400
 Aj 
A ! - 	!  - Aq
 


 B 7 

 B7 

 
A G! E


 Aj ( 6   Aj 	:    )7   6 E

 
@ 
At! Aj! @  Aj( @  ( 
  A j!  A k"
 

 E
  
 E 
E rrE@ 

 Aj Aj) "O7   )"N7 A
j O7   N7 A
6 
 Aj$ @@@ (x"A
G@ A j"  Aj) 7   )|7h A$j AjA  A
j  ) 7   6  )h7 Aj  - AqE
 - 	A G
   AjA 

 A j Aj) "O7   )|"N7h A
j O7   N7 A
6 

 B 7  Aje

 B7  Aje
 Aj$ 

# Ak"$  A j!# Ak"$  A j @@ -  Aq@@@@ - !A F@  Aj  - 
 Aj ("A!	 - AqE
Aq! @ - "A,G@ A F
A	!	  


A!	  
  Aj A!	 - AqE
 - 	!
 A"F
A!	 A G
A!	

 B7 

 Aj!	# A k"
$  
Aj @@@ 
- Aq@ 
- 	A"G
  
Aj  
(" AG
 
A
j( ! 
Aj( ! 
(" E@ 	  Aܒ A y

 	   Aܒ A y E
  

 	A6 

 	A6 

 
)!N 	 
(
6
 	 N7 	  6 
 
A j$  ("	AF

 Aj Aj( " 6   )"N7 Aj  6  Aj N7   	6 A
6 

 B7( Aj  (" AF
 Aj )7  Aj Aj( 6  A
6    6 A(j

 B 7 

  A(jA 
 Aj$ @@@ (x"A
G@ A j"  Aj) 7   )|7h A$j AjA  A
j  ) 7   6  )h7 Aj  - AqE
 - 	A G
   AjA 

 A j Aj) "O7   )|"N7h A
j O7   N7 A
6 

 B 7  Aje

 B7  Aje
 Aj$ 
  A j$ 
 %A j$ @ (x"A
G@ A j"  Aj") 7   )|7h A$j AjA  A
j  ) 7   6  )h7 A j  (x" AF@ ) AjA 

 )Aj )|7  )Aj ( 6  )A
6  )  6 Aj

 A j Aj) "O7   )|"N7h )A
j O7  ) N7 )A
6 
 Aj$  (A
G
 Aj Aj) 7   )7 AjA A( Aj6

 Aj Aj) 7  Aj Aj) 7    Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj-

 Aj AjA  (A
G

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj- F@ G
 <@ <At! =Aj! @  Aj( @  ( 
  A j!  A k"
 

 EE
 =

 Aj"	 Aj" A  AjA 6  AjA 6  AjAؚ 6  Aj" Aj) 7  Aj" A j) 7  Aj <6  Aj E6  Aj =6  Aj L6  Aj F6  Aj Aj"
6  Aj 
6   )x7  B6  A6  )h7  G6  R7  D6  C6  
6  A  Aj Aj"  Aj Aj 	A A (   Aj Aj) 7   Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj) 7   )7 Aj  . (\@ M
 (L@ K
 (<E

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5401-5550
 @

 B@ A
 DE
 C

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj-
 (\@ (X
 (L@ (H
 (<E
  @
 Aj Ajn@ (E@ Aj Aj( 6   )7

 Aj Aj( 6   )7 AjA A Aj5 (A
F
  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7A A+ AjAЍ A  
 Aj Aj( " 6   )"N7 Aj  6   N7 Aj Aj7 Aj$ 

A A7 AjA A  

# A@j"$  A 6 B7  Aj" A   E@ ( !A
! ( ! Aj( " (F@A
A   !
 (@ 
   6  Aj( @ ( 
 Aj( @ 
 (
!  Aj( "@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 Aj( @  
 (!  A j( "@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 A
j( @  
 A@k$ 
A̋ A7 A8jA A  
# A k"$  Aj @@@@ (E@  (6  Aj-  : 
 Aj AjA A AjG (
 Aj AjA  H (
   ( - 


   ( 6 	  A
j A
j(  6   (!  Aj Aj-  :     6

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 
  A6 
 A j$ 
# A@j"$ @@@@ E@A!

 A N"E
  "E

   ! A 6 B7  Aj" A # A0k"$  ( E@ A
jA 6  A 6 B7
 A 6  Aj

  6 A
jA6  B7
 A 6 A 6$  A j6  A,j6   Aj6,  Aj
 A0j$ 
  A
j 6   Aj 6    6   ) 7  A	6   Aj Aj( 6 @ ( " E
  Aj( E
   
 A@k$ 
 
   
A A7 A8jA A  
# A@j"$ @@@@ E@A!

 A N"E
  "E

   ! A 6 B7  Aj" A   
  A
j 6   Aj 6    6   ) 7  A6   Aj Aj( 6 @ ( AI
  Aj( E
  (
 A@k$ 
 
   
A A7 A8jA A  
@  ( @  ("@  ( " A lj!@ "A j!@@@@ (Ak"A AI 
@@@@@ Aj(  
 Aj( E
 Aj( 

 Aj( @ Aj( 
 A$j( @ A j( 
 A4j( "@ At! A,j( Aj!@ ( @ Ak( 
 A j! A k"
 

 A0j( E
 (,

@ Aj( "E
  Aj( E
  
 A$j( @ A j( 
 A4j( "@ At! A,j( Aj!@ ( @ Ak( 
 A j! A k"
 

 A0j( @ (,
 A<j( E
 A8j( 

 Aj( @ Aj( 
 A$j( E
 A j( 

 Aj( @ Aj( 
 A$j( E
 A j( 

 A
j!@ Aj"( "@ Aj( @ (  ( !
 A j( "E
 At! Aj!@ ( @ Ak( 
 A j! A k"
 


 Aj( "@ At! (
Aj!@ ( @ Ak( 
 A j! A k"
 

 !

-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5551-5700
 Aj( E
 ( 

 Ajp
  G
 

  Aj( @  ( 
  Aj( "@  (
! Al!@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 

  Aj( @  (

  Aj""("@ ( " Alj!@ Aj( @ ( 
 Aj( "@ (
! Al!@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 

 Aj( @ (

 Aj" G
 

  A
j( @ ( 
  ($E
  A$j

  Aj
" Aj( E
   ( 

# Ak"$  A j" A  Aj  A: p B 7` B 7  (" (F@  S (!
 (  A lj A  Aj" ( Aj6   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7    ) 7  Aj$ 
A!@@@AA"E
 Ã A! @ A N"E
  "E

   ! Aj( " Aj"( F@ A
j R (!
 (
 Alj" 6  6  6
 A6 A6  6   (Aj6   ) 7   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7   Aj ) 7 
 
AA 
   
@AA"E
  AŅ A! Aj( " Aj"( F@ A
j R (!
 (
 Alj"A6 A6  6   ) 7
 Aj Aj( 6   (Aj6   ) 7   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7   Aj ) 7 
AA 
   ( " (   Aj(  

   (  
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
# Ak"$   ( ! @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  (F   W  ( 
  ( j :      (Aj6

 AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!   (  ("kK@    X  (!
  (  j A
j     j6
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
G   ( " (  ("kK@    X  (!
  (  j      j6A 
  A
j( "  Aj( "kA4n!  G@  A4lj!@ "Aj( @ ( 
@ (
"E
  Aj( E
  
 A
j( @ (
 A4j!@ (("E
  A0j( "@ At! Aj!@ Aj( @ ( 
 A j! A k"
 

 A,j( E
  ((
  G
 

  (@  ( 

c  A
j( "  Aj( "kA
n!  G@ A
l!@ Aj( @ ( 
 A
j! A
k"
 

  (@  ( 

~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6  ( kK@   X (!
 (  j     j"6 ( kAM@  AX (!
 (  jA ;    Aj6@ ( "E@ Aj 

 Aj   Aj( 
@ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6  ( kK@   X (!
 (  j     j"6 ( kAM@  AX (!
 (  jA ;    Aj6 Aj  ) @ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6  ( kK@   X (!
 (  j     j"6 ( kAM@  AX (!

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5701-5850
 (  jA ;    Aj6 Aj  k@ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
~# A0k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  j A  Aj"6 ( kAM@  AX (!
 (  jA ;    Aj6 A j  Aj  ( " (( ($@ 
@ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A0j$ 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6  ( kK@   X (!
 (  j     j"6 ( kAM@  AX (!
 (  jA ;    Aj6 Aj  (  Aj( @ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  j A  Aj"6 ( kAM@  AX (!
 (  jA ;    Aj6 Aj!# A@j"$  A 6 B7  Aj" A @  E@   (  ( (@ ( 
 A@k$ 

A A7 A8jA A  
@ (E@  A 6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
 @@@@@@@@@ Ak
 
 (  AG@ (  AҹG
  A6   A: 
  A6   A : 
 A A@ A A
  A6   A: 
  A6   A: 
 A A
@ A A

  A6   A	: 
  A6   A: 
 A A	E
 A A	
  A6   A: 
 A A
  A6   A: 
 A A
E

    Aȓ A
{
  A6   A: 
  A6   A: 
 @@@@@ Ak 
 /  AG
  A6   A: 
 (  AF


 Aؑ A
   A6   A: 
    A Ay
  A6   A : 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6  ( kK@   X (!
 (  j     j"6 ( kAM@  AX (!
 (  jA ;    Aj6 Aj!# A k"$  ( ! Aj  Aj( "@ (E@ Aj-  !@  ("   A
lj! E!@ @ (" (F  W ( 
 ( jA,:    (Aj6
 Aj  (  Aj(  (
A! A
j" G
 
A  
AqA G

 Aj A
j( "6   )"	7  A
j 6   	7 A6 

  )7 A6  A
j A
j( 6 
 A j$ @ (E@  A 6 

 Aj A
j( "6   )"	7   A
j 6    	7  A6 
 A j$ 
~# A k"$  ( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kA
I@  A
X (!
 (  jA A
  A
j"6 ( kAM@  AX (!
 (  jA ;    Aj6 Aj!# A k"$  ( ! Aj  Aj( "@ (E@ Aj-  !@  ("  Al! E!@ @ (" (F  W ( 
 ( jA,:    (Aj6
 Aj!# A k"$  Aj @@@@ (E@  (6  Aj-  : 
 Aj AjA A G (
 Aj AjA A A
jG (
  ( - 


  ( 6 	 A
j A
j(  6   (!	 Aj Aj-  :    	6

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 
 A6 
 A j$  (
 Aj!A! Ak"
 
A  
AqA G

 Aj A
j( "6   )"
7  A
j 6   
7 A6 

  )7 A6  A

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:5851-6000
j A
j( 6 
 A j$ @ (E@  A 6 

 Aj A
j( "6   )"
7   A
j 6    
7  A6 
 A j$ 
# A k"$  Aj @@@@@ (E@  (6  Aj-  : 
 Aj AjA A G (
 Aj AjA A A
jK (
 Aj AjA A AjK (
   ( - 


   ( 6 	  A
j A
j(  6   (!  Aj Aj-  :     6

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 
  A6 
 A j$ 
 @@@@@ Ak 
 A A
  A6   A: 
 A AE


 A A
   A6   A: 
    A Ay
  A6   A : 
# A0k"$  Aj ( "@@ - Aq@@@ - ""A,G@ A G@ - 
  A	6 

  A6   A : 

 - 
   Aj  - AqE
 - !

 A : 
@ Aq"A"G@ A F
  A6 

 Aj @ - AqE@A!

 - 	A"G@A!

  A j  ( "AF@@ ($"E
  A(j( E
  
  A6   A: 

 (,! ((! ($!
   6
   6   6   6 

  A6 

  A6 

  A6 
 A0j$ 
# A k"$  Aj ( "@@ ("AF@ Aj  - AqE
@ - 	A F@  Aj  ("AG
  B7 

 Aj  (AF@   )7  A6   A
j A
j( 6 

   )7   Aj Aj) 7 

   )7  A
j A
j( 6    6 

   )7  A
j A
j( 6    6 

  A6 
 A j$ 
@ @@@@ A N@ (E
 ("
 
 

  AjA 6 

 (    

 
  

  
"@   6  Aj 6   A 6 
   6  Aj 6 

   6  AjA 6 
  A6 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"Al! A֪*IAt!@ @ A6  Al6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"A l! AIAt!@ @ A6  A l6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"A l! A
IAt!@ @ A6  A l6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@ Aj"E

-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6001-6150
   Aj( "At"   I"A AK"At! A IAt!@ @ A6  At6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"A
l! Aժ IAt!@ @ A6  A
l6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"AsAv!@ @ A6  6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@   j"K
   Aj( "At"   I"A AK"AsAv!@ @ A6  6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@   j"K
   Aj( "At"   I"A AK"A l! AIAt!@ @ A6  A l6   ( 6

 A 6
    AjQ (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
h# A k"$  Aj (  ((
 @ (E@  A 6 

   )7   Aj Aj( 6  (E
  (
 A j$ 
# A0k"$   (  ((
 @ ( "E@  A 6 

 A(j Aj) 7  A j Aj) 7    )$7   Aj A,j( 6   ) 7 (E
  
 A0j$ 
    (  (( 
~# Ak"$  A0j m@@@@@@ (0E@ A
j A<j( 6   )47

 A j A<j( 6   )47h AjA A  A j5 (A
G

 Aj"( ! Aj (  (" A
j(  Aj( (
  (AG
 (E
 A j A j( 6   Aj) 7h A6T  A j6P A6D B74 A 60  A j6@  Aj A0j  A6  (lE
 (h

 A j A(j) 7  A@k A j) 7  A8j Aj) 7   )70 A 6d  A0j"6` A6| B7l A 6h  A j6x A j A j )P! (X! -   6
   7  A6 

 A j A(j) 7  A@k A j) 7  A8j ) 7   )70 A!6T  A0j6P A6| B7l A 6h  A j6x  Aj A j  A6 @@@@ (0 
 A0jAr

 A8j( @ (4
 A@k

 A8j( @ (4
 A@k

 A0jAr
" Aj( E
  ( 

 A j A j( 6   Aj) 7P Aj A j A j! (! (
!# A k"$     Aj!# A k"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "
A! - AqE
 A@kAr! - ! 
Aq!
@@@@@@@@ Aq"A,G@ A F@ E


 

A	!


 
@A!


 
 Aj 
 - AqE@A!


 - !
 Aq"A"G@A! A G

A!


 A j 
 - T!
 (P"AF
  ) U7@  A j(  6 G !


 A jA Av (P"AG
 A j( !	 A j( !
 (T!


 
Aq@ A j 
@ (P"AG@ A j A j( 6   )T7D

 A@k 
! (@"AF

 A<j A j( 6   )D74  60 




-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6151-6300
 E
 A0jA Az
	
 (\!
 (T! (X

 A j 
@ (P"AG@  )T7  Aj A j( 6 

 A@k 
 (@"AF

 (L!
 (D! (H
!  64

 (L!	 (H!
 (D!
 Aj 
A !
 - 	! - Aq
 


 A6 

 A6 

 A<j ( G6    )@7 5  
: 4  60 E

 	@ 	At! Aj!@ Aj( @ ( 
 A j! A k"
 

 
E
  
 (0"AF@ A<j( !	 A8j( !
 (4!

 (<!
 (8! (4!
  
6
  6  6  6 

 A j  (P"AF@  6 A6  A
j 	6  Aj 
6 

  )T7 A
j A j( 6   6  	@ 	At! Aj!@ Aj( @ ( 
 A j! A k"
 

 
E
  
 A j$ @@ ("AF@ A
j"( ! Aj( ! (! Aj  ("AG
  6 A6  A
j 6  Aj 6 

 )!  (
6
  7  6 

  )7 A
j ( 6   6  @ At! Aj!@ Aj( @ ( 
 A j! A k"
 

 E
  
 A j$ @ (hAF@   )l7  A
6   A
j A j( 6 

 A8j A j) 7   )h70  A A- A0j6
 (TE
  (P
 E
  
 Aj$ 
j# Ak"$  Aj       (
! (!AA"E@AA 
  6   6  A 6   6  Aj$ 
j# Ak"$  Aj       (
! (!AA"E@AA 
  6   6  Aԕ 6   6  Aj$ 
~# A k"$  Aj @@@@@@@@ (E@  (6  Aj-  : 
 Aj AjA A
 C (
 Aj! A
j!# A k"
$  Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kA
I@  A
X (!
 (  jA A
  A
j"6 ( kAM@  AX (!
 (  jA ;    Aj6 
Aj!
# A k"	$  ( ! 	Aj  Aj( "@ 	(E@ 	Aj-  !@ 
 	("
  A
l! E!@ @ 
(" 
(F 
 W 
( 
 
( jA,:   
 
(Aj6
 	Aj!
# A k"$  Aj 
@@@@@ (E@  (6  Aj-  : 
 Aj AjAݖ A G (
# A k"$  Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA A  Aj"6 Aj! ( kAM@  AX (!
 (  jA ;    Aj6 Aj! A
j( !# Ak"$ A! AjA :   B 7    A
n"A
lkA0r: 	A	!@@ A
O@  A
pA0r: @ A M
   A nA
pA0r: A! AI
   AnA
pA0r: A! A I
   A nA
pA0r: A! AI
   AnA
pA0r: A! A=I
   A=nA
pA0r: A! AI
   AnA
pA0r: A! A/I
   A/nA
pA0r: A! AI
   AnA0r:  A !
 A

-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6301-6450
O
 !
A
 k" ( ("kK@    (!
 (  j  j  A 6    j6 Aj$ 

 A
A  
@ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$  (
 Aj AjA A AjK (
 
 ( - 


 
 ( 6 	 
A
j A
j(  6   (! 
Aj Aj-  :   
 6

 
 )7 
A
j A
j( 6 

 
 )7 
A
j A
j( 6 

 
 )7 
A
j A
j( 6 
 
A6 
 A j$  	(
 A
j!A! A
k"
 
A  
AqA G

 	Aj 	A
j( "6  	 	)"7  
A
j 6  
 7 
A6 

 
 	)7 
A6  
A
j 	A
j( 6 
 	A j$ @ 
(E@ A 6 

 
Aj 
A
j( "6  
 
)"7  A
j 6   7 A6 
 
A j$  (
 Aj AjA A AjC (
 Aj AjA A A$jC (
 Aj AjA A A0jC (
 Aj AjA A A<jC (
   ( - 


   ( 6 	  A
j A
j(  6   (!  Aj Aj-  :     6

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 

   )7  A
j A
j( 6 
  A6 
 A j$ 
 @@@@@@@ Ak 
 A A
@ A A

  A6   A: 
  A6   A : 
 (  AͫF
 (  AµG
  A6   A: 
 A AE


 A A
   A6   A: 
    A Ay
  A6   A: 
  A6   A: 
 @@@@@ Ak 
 )  B歙 R
  A6   A: 
 Aݖ AE


 A A
   A6   A: 
    A Ay
  A6   A : 
D
~# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j Aj) 7  A j Aj) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7   ) 7X  ) 7p  ! Aj! A j! A j!
A !# Ak"$  Aj!	 A@k"( "
!
 (!# A k"$ @@AA" @  A A! AA"E
 A A! A
jA6  AjA6   6 A6 A6
   6 Aj!# A k" $ A܏ ( !

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6451-6600
A؏ ( !  A0j"  A@k!# A k"$  Aj @@@@ (E@  (6  Aj-  : 
 Aj AjA A G (
 Aj AjA A A
jG (
  ( - 


  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 
 A6 
 A j$ @@  (@@  A(j"  A j( 6     )D7   (4@  (0
  A j ( 6     ) 7@  A A  A@k5  ( "A
F
 	  )7 	Aj  Aj) 7   )!$ 	  (
6
 	 $7

  A
j  A8j( 6     )07
  Aj(  
  
  ("  A
j(  (
 A
!E
  
 	 6   A j$  (
@ (
 (@ (
 A j$ 

AA 
AA 
@@@@@@@@@ ("A
F@ 
(" 
 A 6 B7A! A 

 A
j )7  A$j Aj( 6  A
j Aj) 7  Aj Aj) 7  A 6   6A!A!

   6  
A
j) ""7
 "B 
"A
l!@@@@@@@@  F@ A 6  B7 A 60 B7( 
($
A

   j"Aj( AO@ A
j! ( )  Bܼ/Q


 A
j A!A A"E
 A6 A 6  Aj 6  A )  7   AjAɄ )  7   AjAф )  7   AjAل )  7   A
jB7 A!

 A@k 
A$j" Aj( "6    ) 78 E
 (8!   (<6   6    A4lj6 A(j!
 Aj! Aj! Aj! Aj! Aj!  Aj!! A jAr! A j! A j!
@   A
j) 7  A j"  Aj) 7  A j"  A
j) 7  
  A$j) 7  A j"  A,j) 7    A4j6   )7H  ( " E
  )H7  A(j ) 7  A j 
) 7  Aj ) 7  Aj ) 7  Aj ) 7    6x Aj!
 (! (! A !# Ak"$ @@@@@@  E@A!	

  A H
  A"	E
  AI
 @  j"Aj(  " (  "rAxq
  	j"Aj A kAqAIAt r:    A kAqAIAt r:   Aj Av"
A kAqAIAt 
r:   Aj Av"
A kAqAIAt 
r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj! Aj!   O
 

 
 6 
  6 
 	6    F
   j!   k!
A !	  j"!@ ,  " A N@  Aq!  Aj

 - A?q!  Aq!  A_M@ At r!  Aj

 - A?q Atr!  ApI@  A
tr!  Aj

 AtA q - A?q Atrr" A F
 Aj
!@@  AG@  A G


@ 	E
  	 
O@ 	 
F


 	 j,  AL

 	 j! A !@@@@@   F
  Ak"-  "AtAu"
A H@ 
A?q  Ak"-  "AtAu"
A@N@ Aq

 
A?q  Ak"-  "AtAu"
A@N@ Aq

 
A?q  Ak"-  AqAtr
Atr
Atr"A F

@ Aq
  E
 A !A 

A
! !  A F
 
 E
 @ 	Aj" E
    
O@   
F



   j,  AL

   j! A !@   F

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6601-6750
  ,  "A N@ Aq!  Aj

  - A?q!
 Aq! A_M@ At 
r!  Aj

  - A?q 
Atr!
 ApI@ 
 A
tr!  Aj

 AtA q  - A?q 
Atrr"A F
  Aj
! @ Aq
  E
 A !A 

A
! A F
 
 E

Aχ! 
( 
(" kAI


Aυ! 
( 
(" kAK

 
  A 
(! 
 
  Aj6 
(   j ;  

 Aj!A !
@@  AO@A
!A
!@@A Av 
j"AtA j( "  G   K"AF@ !

 AqAG
 Aj!

  
k!  
K
 
 B 7   6 

 B 7   A kAqAIAt  r6 

 Aj At" AȬ j( 6    A j) 7 
@ ("E@ (! 

 (
!  
 ( 
   E

 
  
 	 k j!	  "G
 


  A 
 
  
   
A  
  
A  	A  
 Aj$  A6 A6  
6  
6 A6 B7 A 6  Aj6 Aj Aj Aj" Aj"
( 6   )7 Aj 
 Aj Aj Aj A jA ! A ! (@ Aj   )!" (!
 Aj ! (!
 (@ Aj!# A k"
$ @@@@@ Aj( " E@ B7 

  AK
  At"	A H
 ( !  A IAt! 	 	  
"E
   6  6   At!	 
Aj!  !@ 	E
 E
  Aj Aj) !#  ) 7  Aj #7  Aj ) 7  Aj 
Aj) 7  A j! 	A k!	 A j! Ak"
 

   6 
A j$ 

 
 	  
    AȚ  
 )!# (! 
  )7  Aj"
 Aj"( 6  Aj 
( 6   )7  "7  6  #7   6  
6 Aj! Aj!	 Aj!# Ak" $   A j" Aj"Aj( 6    ) 7P  A j"
 Aj( 6    )
7`@A8A"@  A j   Aj Aj" B 7 B 7
 A4jA 6  A,jB7    )p7  Aj  A j( 6    )7
 A$j  Aj"( 6  A(j ($6   AjB 7    6  Aj( 6    ) 7  A,j   Aj 
( 6   A(j ( 6   A@k ( 6   A j A j( 6     )`7    )7     )P78   )7D Aj  AjA  A 6  A
j 	Aj( 6   	) 7@ (("E
  A0j( "@ At! Aj!@ Aj( @ ( 
 A j! A k"
 

 A,j( E
  ((
  Aj$ 

A8A 
 ( "  (
F@ Aj  T ( ! 
 (  A lj AjA    Aj6 @ ("E
  (!@ ("E
   At"j!
 (! (
(
!	A ! @@ Aj    j"Aj(  Aj(  	  ("A
G
 (@ (
   A j" G
 
 A0j! A j! A k!	@ 
 A k"Aj) 7  Aj"  A
j( 6   ) 7  Aj) 7 Aj( "E@ 	E
 	A`q! @ Aj( @ ( 
 A j!  A k" 
 


  )7  Aj" 
) 7  Aj  ( 6   )7  6 Aj  Aj Aj ) !" )!# (0" (,F@ A(j T (0!
 (( A lj"  )7   )7  A6   Aj ( 6   A
j 
( 6    #7   A(j "7   Aj60 (@ (
 A j! 	A k!	 A j! A j 

-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6751-6900
G
 


 Aj )7  A j Aj) 7  )!" Aj Aj( 6  A
j "7   6A !  A 6  At!@   j"Aj( @ Aj( 
   A j" G
 
 @ 
 (@ (
 (@ (
 (|@ (x
@ (" E
  (E
   
 (@ (
 AjAA !A

 E
  
 Aj" ( 6   )7 ("  (
F@ Aj  V (! 
 (  A
lj"  )7   Aj ( 6   (Aj6 (@ (
 (|@ (x
@ (" E
  (E
   
 (@ (
@ (" E r
  ("@ At!  Aj! @  Aj( @  ( 
  A j!  A k"
 

 (E
  (
 ("  (G
 


A A 
 A8jt (<E
 (8

 AjA
 (!A 
! @ A
j( ! (! 
( " @   6x  
)""7| "B 

 A 6 B7x Aj"  A jA    

 (x!  (
! Aj     (
 @@ ("A
F@ A j Aj( " 6  Aj  6   )""7H  "7 (|@ (x
 A 6 B7 Aj"  AjA  Aj  
 A j 
Aj( 6  A j Aj( 6  A j Aj"( 6   )7`  )7H  
)
7T Aj!# A k" $ Aȃ ( !	Aă ( !
  A0j"  A@k A j M@@  (@@  A(j"  A j( 6     )D7   (4@  (0
  A j ( 6     ) 7@  A A%  A@k5  ( "A
F
   )7 Aj  Aj) 7   )!"   (
6
  "7

  A
j  A8j( 6     )07
  Aj(  
 
 	  ("	  A
j(  (
 A
!E
  	
  6   A j$  (" A
G
 Aj"B 7  Aj" B 7  B7 B 7 B7 Aj AjA A
9 (! (
!
 ( ! Aj" Aj) 7   Aj) 7  Aj"	 Aj) 7    Aj) 7  Aj"
 ) ""7   )7  ( ""kK@ Aj  Y (!
 (!  6  
6  6   A lj6  
6  6   A lj6 Aj Aj~ Aj"
 Aj") 7  Aj"
  ) 7  Aj"
 	) 7  Aj" Aj") 7  Aj" ) 7   )7x ((! (,! (0!  ) 7   ) 7  	 
) 7    
) 7   
) ""7   )x7  ( "" kK@ Aj   Y (! 
 (!  6  6  6   A lj6  6   6    A lj6 Aj Aj~ A(j Aj) 7  A j ) 7  Aj Aj) 7  Aj Aj) 7  Aj ) 7   )7  (L@ (H
 A j( "@ (T!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A j( @ (T
 A j( "@ (`!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A j( @ (`
 (E

 (


 Aj )7  A j Aj( " 6  A j Aj) 7   )""7H Aj  6  A
j "7   6 A 6  (|E
 (x

 A
j )7  A$j Aj( 6  A
j Aj) 7  Aj Aj) 7  A 6    6 (L@ (H
 A j( "@ (T!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A j( @ (T
 A j( "@ (`!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A j( @ (`
 (E
  (
 A
G!A 

 A 6  A6A
!A
! (0"@ ((!  A l!@  p  A j!  A k"
 

 (,@ ((

-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:6901-7050
 ( "@ (!  A l!@  p  A j!  A k"
 

 (
@ (
 E
 (! (! 
 @ A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 (
@ (
 A G!A! 


A ! A G! E

@ 
( " E
  
Aj( E
   
 E
 A
F!
 
(
! 
Aj( " @  A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 
Aj( @ 
 


 A
F

 
("E
  
A j( " @  A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 
A
j( E
  
 E
  
($E
  
A$j" t 
A(j( E
   ( 
 Aj( @ ( 
 Aj( " @  At! (
Aj! @  Aj( @  ( 
  A j!  A k"
 

 Aj( @ (

 Aj( @ (
 A,j( @ ((
 Aj$ 

A A7 AjAЂ A  
 Aj$ 
5  (   ((    ("Aj( @ Aj(   ( 

@@@@@@@@@@@  ( 		 
  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E
  (

  Aj( @  (
  Aj( "@ At!  (Aj!@ Aj( @ ( 
 A j! A k"
 

  Aj( E
  (
  Aj( @  (
  A$j( E
  A j( 
  Aj( @  (
  Aj( E
  (
  Aj( @  (
  Aj( @  (
  A4j( E
  A0j( 
  Aj( @  (
@  ("E
   Aj( E
  
  A$j( "@  A
j( " A
lj!@ Aj( @ ( 
 Aj( "@ (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

 Aj( @ (
 A
j"!  G
 

  A j( @  (

@  A(j( "E
   A,j( E
  
@  A4j( "E
   A8j( E
  
@  A@k( "E
   A j( E
  
  A j( "E
  A j( E
 
  A
j( "@  (! A
l!@ Aj( @ ( 
 A

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7051-7200
j! A
k"
 

  Aj( E


  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E


  A
j( "@  (! A
l!@ Aj( @ ( 
 A
j! A
k"
 

  Aj( E
   (

  (
# A k"$  E@A !A 

 ( ! ((
!A !@@ Aj    ("E
 (
 (@ (
 Aj!@ 
  G
 
A 

 !A
!   6   6  A j$ 
# A k"$  E@A !A 

 ( ! ((
!A !@ Aj   A ("E
 ( (! (
@ 
A E
 Aj!@ 
  G
 
 !A 
!   6   6  A j$ 
# A k"$ @ E
  ( ! ((
!@@ Aj    ("E
  (
 (@ (
@ 
 Ak"



A!
@ E@ Aj (  ((
  (E@  A 6 

   )7   Aj Aj( 6  (E
 (

  A 6 
 A j$ 
# A0k"$ @ E
  ( ! ((
!@ Aj    ("E@A!

 (( ($! (
@ 
 E@A!

@ 
 Ak"
 

@ E@  (  ((
  ( "E@  A 6 

 A(j Aj) 7  A j Aj) 7    )$7   Aj A,j( 6   ) 7 (E
 

  A 6 
 A0j$ 
1:~# Ak"$  A8j   A j  A j  Aj (8"% (@@@@@ (AF@ Aj Aj) 7   )7 AjA A Aj6

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"  Aj) 7  Aj" Aj) ">7   )7 >AF
  Aj  ) 7  A j ) 7   )7x  )7h (!& (!' (!( (!) )!> Aj (H"3 (P@@@@ (@ Aj Aj) 7  Aj Aj) 7   )7

 Aj"  Aj) 7   )7 AjA A  Aj6 (A
G

 Aj"*( !
 Aj( !+ Aj",( ! Aj( !4 Aj"-( !. (!/ Aj! (X"5!  (`!# Ak"$  Aj"    A j!
A !A !# Ak"$  A j @@@@@@ -  Aq@ - !A G
  Aj A!0 (!  - 
Aq"":   6 A 6 Aj  AjAr!#A! - AqE
 AjAr!1 AjAr!2 - !  "!@@@@@@@@@@@@@@@@@  Aq"A,G@ A F
 "
A	!

 Aq
   Aj  - AqE@A!

 - 	! 

A !" A : 
  Aq" A"G@A!  A G
A!

 Aj!# A k" $   Aj @@@  - Aq@  - 	A"G
   Aj   ("AG
  A
j( !  Aj( !	  ("
E@  	 *

  
 * 	E
 


 A6 

 A6 

  )!=   (
6
  =7  6 
  A j$  - !  (" AG@  ) 7  Aj(  6   !

  Ak
 A  ! @ 
E@ AjA Av ("AG
 Aj( ! Aj( !
 (!

  6  
6  6|  
6x  
6t  !6p  6l   6h  (A  6  A  6  Aj) 7 

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7201-7350
E
 A0j A j( 6  A j"  Aj) 7  A@k" Aj) 7   )h7(  )7H  )x78  
64 A j  (h"AG
 
 )(7  
A(j  ) 7  
A j A j) 7  
Aj ) 7  
Aj A8j) 7  
Aj A0j) 7 

 E!0 Aj (6  A j )7   6xA !
 A 6t  E Er
  

 
 Aj!	# A k"$  Aj Aj( "@@ (" AF@ Aj  - AqE
@ - 	A F@  Aj  (" AG
 	B7 

 Aj!
# A@j"$  Aj @@ - Aq@ - 	A G
    A0j! ( ! - Aq!# A k" $    :    6   A 6  B7  Aj  1@@  (E@  A j"Aj!6 Aj!7 Aj!8 A j!9 A(j!:@  (
";E
  ("
  (
F@  Aj!# A k"$ @@ 
Aj"
E
  Aj( "At"$ 
 
 $I"
A 
AK"
A4l!$ 
AIAt!<@ @ A6  A4l6  ( 6

 A 6
  $ < AjQ (! ( E@  6  Aj 
6 

 Aj( "AxF
 E
    
 
 A j$   (!

  ( 
A4lj" ) 7  ;6  A
j 6) 7  Aj 7) 7  A
j 8) 7  A$j 9) 7  A,j :) 7     (Aj6  Aj  1  (E
 

   AjAr") 7  Aj Aj) 7   Ajt  (
E
  (

   )7 A6  A
j  Aj( 6 
  A j$ @ (0" AF@ Aj"  A<j"( 6   )47 A0j  (0"AG
 
 )7 
A6  
A
j  ( 6 

 A(j A<j( "6   )4"=7  
A
j 6  
 =7 
  6 

 
 )47 
A
j ( 6  
 6  Ajt (E
 (

 
A6 

 
A6 
 A@k$  (AF@ 	 )7 	A6  	A
j A
j( 6 

 	 )7  	Aj Aj) 7 

 	 )7 	A
j A
j( 6  	  6 

 	 )7 	A
j A
j( 6  	  6 

 	A6 
 A j$  Aj"  2Aj( 6   2) 7 ("AG
 # )7  #Aj  ( 6 A! A6


 
 Aj!# A k" $   Aj Aj( "@@  ("	AF@  Aj   - AqE
@  - 	A F@   Aj   ("AG
 B7 

  Aj   (AF@   )7 A6  A
j  A
j( 6 

   )7  Aj  Aj) 7 

   )7 A
j  A
j( 6   6 

   )7 A
j  A
j( 6   	6 

 A6 
  A j$  (! (!	 (!
 (" AF@ E Er
 @ A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 
E
 


 Aj 6  Aj 	6  A j 
6    6x A 6t

 
E
 A jA Az A 6t

 
 Aj AjP (!! (!  (! ("AF@ E E Err
A!   ! !
	
 Aj !6  Aj  6  A j 6   6x A 6t


-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7351-7500

 A j )7  Aj Aj( 6   6x A 6t


 
Aj )l7  
A
j A j( 6  
A 6
 
 6 A(j

 A jA݁ A
z A 6tA!


 A jA΁ Az A 6tA!
	
 A jA Az A 6tA!

  ! !A!

 Aj @@ (" AG@ 1 )7  1Aj Aj( 6 

 Aj  (" AF

 Aj (6  A j )7    6xA !
 A 6t

 (! (!
 (!


 ! 	!
 
!A!
  A ! - !  -  Aq
 


 
B 7


 
B7


 Aj ( 6   A j  :    )7 }  6x A 6t
 E
  (" E
  #t Aj( E
   
@ E Er
  @ A
l! ! @  Aj( @  ( 
  A
j!  A
k"
 

 
E
  
@ 
E
  @ A
l! 
! @  Aj( @  ( 
  A
j!  A
k"
 

 
E
  

 E  0qE Err
  
 A j Aj) "=7   )x"?7X 
Aj =7  
 ?7 
A 6

 Aj$ @@ (l" @ A(j" A j( 6  A j A j( "6  A j Aj) 7  A<j 6   )`7   )t"=7P  )7@  (p"60  =74   6, A j Aj (`"AG@ Aj A j( 6   )d7  A j

  ) 7   A@k") 7  Aj ( 6  Aj A4j"Aj( "6  A(j Aj) 7   ) "=7   6   6
  =7 A
j 6 

 Aj A j( 6   A j) 7  (p!
 A j Aj( 6   6`  ) 7d AjAˢ A+ A j6 A 6

 Aj$  (E
 Aj" Aj") 7  Aj"
 Aj" ) 7  * Aj") 7  , Aj") 7  - Aj") 7   )7 AjA 6  AjA 6  AjAؚ 6   Aj) 7    A j) 7  Aj 
6  Aj +6  Aj 6  Aj 46  Aj .6  Aj Aj"6  Aj 6   )x7  '6  &6  )h7  /6  >7  )6  (6  6 Aj ) 7  Aj 
) 7  Aj *) 7  Aj ,) 7  Aj -) 7   )7 AjA  Aj Aj" Aj AjA (    Aj) 7    Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7 Aj . (\@ 5
 (L@ 3
 (<E
 %

 Aj Aj) 7  Aj Aj) 7    Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj-

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj- .@ /
 
@ 
At! Aj! @  Aj( @  ( 
  A j!  A k"
 

 +E
  
 '@ &
 )E
 (

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7
 A 6 Aj-
 (\@ (X
 (L@ (H
 (<E
  %
 Aj Ajn@ (E@ Aj Aj( 6   )7

 Aj Aj( 6   )7 AjA A Aj5 (A
F
  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7A A+ AjAЍ A̎  
 Aj Aj( " 6   )">7 Aj  6   >7 Aj Aj7 Aj$ 

A A7 AjA A  

~# A k"$  ( ! Aj  Aj( "@ (E@ Aj-  !@   ("  At! AqE!@ Aq@ (" (F  W ( 
 ( jA,:    (Aj6
 Aj  4 (
 A j!A! A k"
 
A  
AqA G

 Aj A
j( "6   )"7   A
j 6    7  A6 


-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7501-7650
   )7  A6   A
j A
j( 6 
 A j$ 
~# A k"$  (" (F  W ( 
 ( jA :    (Aj6 Aj A A@@ (E@ (" (F  W ( 
 ( jA::    (Aj6 Aj  (  Aj(  (
 (" (F  W ( 
 ( jA :    A 6   (Aj6

 Aj A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
~# A0k"$  @@@@ ( Ak"A AIAk 
 A j! Aj!# A k"$  (" (F  W ( 
 ( jA :    (Aj6 Aj A A@@ (E@ (" (F  W ( 
 ( jA::    (Aj6 Aj!# A k"$ @@@@@@@ (
@ Aj Aԛ A (
  (6  Aj-  : 
 Aj AjA͛ A G (
 Aj AjAۛ A A
jG (
  ( - 


 Aj A A
 (E@  (6  Aj-  : 
 Aj AjA͛ A G (
  ( - 


  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 

 A6 

 A6 
 A j$  (
 (" (F  W ( 
 ( jA :   A 6   (Aj6

 Aj A
j( "6   )"7  A
j 6   7 A6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$ 

 A j!# A0k"$  (" (F  W ( 
 ( jA :    (Aj6 A j A A@@@@ ( E@ (" (F  W ( 
 ( jA::    (Aj6 A j  ( E
 A
j A,j(  6   Aj A(j-  :    ( )6   ($6

 Aj A,j( "6   )$"7 A
j 6   7 A6 

 Aj ($ A(j-   (E

 Aj A
j( "6   )"7  A
j 6   7 A6 

 (" (F  W ( 
 ( jA :   A 6   (Aj6
 A0j$ 

 A j!# A k"$  (" (F  W ( 
 ( jA :    (Aj6 Aj A A@@ (E@ (" (F  W ( 
 ( jA::    (Aj6 Aj!# A k"$ @@@@@@@@@@ ( Ak 
 Aj A A
 (E@  (6  Aj-  : 
 Aj AjA A
 AjG (
  ( - 

	
  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

 Aj A A (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  (6  Aj-  : 
 Aj AjA A
 AjG (@  )7 A
j A
j( 6 

 Aj AjA  AjF (E
  )7 A
j A
j( 6 

 Aj A A (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  (6  Aj-  : 
 Aj AjA A
 AjG (@  )7 A
j A
j( 6 

 Aj AjA  AjF (E
  )7 A
j A
j( 6 

  )7 A
j A
j( 6 

  ( - 


 A6 

  ( - 


 A6 

 A6 

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7651-7800
 A j$  (
 (" (F  W ( 
 ( jA :   A 6   (Aj6

 Aj A
j( "6   )"7  A
j 6   7 A6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$ 
@ ( E@   ) 7  A 6   A
j Aj( 6 

 Aj A,j( "6   )$"7  A
j 6    7  A6  (E
  ( 
 A0j$ 
N~# A0k"
$  
@ ( @ 
A j!# A k"$  
(" 
(F 
 W 
( 
 
( jA :   
 
(Aj6 Aj 
A A@@ (E@ 
(" 
(F 
 W 
( 
 
( jA::   
 
(Aj6 Aj!# A k"
$  
Aj 
@@@@@@ 
(E@ 
 
(6 
 
Aj-  : 
# A@j"
$  
Aj"( "(!
 - E@ ( 
F  
W ( 

 ( jA,:    (Aj"
6
 A :  ( 
F  
W ( 

 ( jA":    (Aj"
6 ( 
kAI@  
AX (!

 (  
jA A  
Aj"
6 
Aj! ( 
kAM@  
AX (!

 (  
jA ;    
Aj6 ( !
 
A(j  Aj( "@@@ 
((E@ 
 
(,"6  
 
A0j-  ": $ 
Aj  A l!@ 
 
6<# A@j"$  
A j"( ! - E@ (" (F  W ( 
 ( jA,:    (Aj6
 
A(j! A :  
A<j( ! A0j @@@@@ (0E@  (46(  A8j-  : , A0j A(jA A D (0
# A k"$  A(j"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA A  Aj"6 A0j! ( kAM@  AX (!
 (  jA ;    Aj6 Aj!# A@j"$ @@@@@@@@@@@@@ Aj"	( Ak"A AIAk 
 (" (F  W ( 
 ( jA :    (Aj6 A0j A A (0
 	Aj! (" (F  W ( 
 ( jA::    (Aj6@@@@@@ 	Aj"( @ A0j A× A (0
  (46(  A8j-  : , A0j A(jAǗ A
 G (0
 A0j A(jA A E (0
 Aj (( - ,

 A0j A A (0
  (46(  A8j-  : , A0j A(jA A E (0E@ Aj (( - ,

 A$j A<j( 6   )47


 A$j A<j(  6   A j A8j-  :    ( 96 !  (46
 A6

 A$j A<j( 6   )47
 A6

 A$j A<j( 6   )47
 A6
 (
 (" (F  W ( 
 ( jA :   A 6   (Aj6


 A$j A<j(  6   A j A8j-  :    ( 96 !  (46

 Aj A$j( "6   )
"7 A
j 6   7 A6 


 (" (F  W ( 
 ( jA :    (Aj6 A0j A A (0
 (" (F  W ( 
 ( jA::    (Aj6 A0j!# A k"$ @@@@@@@@@@@@@@@@ 	( Ak 
 Aj Aɜ A
@@ (E@  (6  Aj-  : 
 Aj AjAۛ A 	AjG (
# A k"$  Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA՜ A  Aj"6 Aj! ( kAM@  AX (!
 (  jA ;    Aj6 Aj 	Aj `@ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 

-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7801-7950
 A j$  (
  ( - 


  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 


 Aj Aݜ A (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6


  (6  Aj-  : 
 Aj AjAۛ A 	AjG (@  )7 A
j A
j( 6 


 Aj AjA  	A(jH (@  )7 A
j A
j( 6 


 Aj AjA A
 	AjG (@  )7 A
j A
j( 6 


 Aj AjA A
 	A
jG (E
  )7 A
j A
j( 6 


 Aj A A
 (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6
	
  (6  Aj-  : 
 Aj AjAۛ A 	AjG (@  )7 A
j A
j( 6 
	
 Aj AjA  	A jH (@  )7 A
j A
j( 6 
	
 Aj AjA A 	AjG (E
  )7 A
j A
j( 6 

 Aj A A
 (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  (6  Aj-  : 
 Aj AjAۛ A 	AjG (@  )7 A
j A
j( 6 

 Aj AjA  	A jH (@  )7 A
j A
j( 6 

 Aj AjA A 	AjG (E
  )7 A
j A
j( 6 

 Aj A A
 (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  (6  Aj-  : 
 Aj AjAۛ A 	AjG (@  )7 A
j A
j( 6 

 Aj AjAÝ A 	AjG (E
  )7 A
j A
j( 6 

 Aj Aԝ A
@ (@  ( 6 	 A
j A
j(  6   (! Aj Aj-  :    6

  (6  Aj-  : 
 Aj AjA A 	AjG (@  )7 A
j A
j( 6 

# A k"$  Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA՜ A  Aj"6 Aj! ( kAM@  AX (!
 (  jA ;    Aj6@ 	Aj"(
E@ Aj 

 Aj  `
@ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$  (@  )7 A
j A
j( 6 

  ( - 



 A6 
	
  ( - 


 A6 

  ( - 


 A6 

  ( - 


 A6 

  ( - 

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:7951-8100


 A6 

 A6 
 A j$  (0E@ (" (F  W ( 
 ( jA :   A 6   (Aj6


 A j A<j( "6   )4"7 A
j 6   7 A6 


 (" (F  W ( 
 ( jA :    (Aj6 A0j A A (0
 (" (F  W ( 
 ( jA::    (Aj6@@@@@@ 	(Ak 
 A0j Aؗ A
 (0
  (46(  A8j-  : , A0j A(jA A
 	A
jG (0E@ Aj (( - ,


 A$j A<j( 6   )47



 A0j A A
 (0@ A$j A<j(  6   A j A8j-  :    ( 96 !  (46
 A6


  (46(  A8j-  : , A0j A(jA A
 	A
jG (0@ A$j A<j( 6   )47
 A6


 A0j A(jA A 	AjG (0E
 A$j A<j( 6   )47
 A6


 A0j A A (0@ A$j A<j(  6   A j A8j-  :    ( 96 !  (46
 A6


  (46(  A8j-  : , A0j A(jA A
 	A
jG (0@ A$j A<j( 6   )47
 A6


 A0j A(jA A
 	A(jD (0@ A$j A<j( 6   )47
 A6


 A0j A(jA  	AjF (0E
 A$j A<j( 6   )47
 A6


 A0j A A
 (0@ A$j A<j(  6   A j A8j-  :    ( 96 !  (46
 A6


  (46(  A8j-  : , A0j A(jA A 	A
jC (0@ A$j A<j( 6   )47
 A6


 A0j A(jA A 	A@kD (0@ A$j A<j( 6   )47
 A6


 A0j A(jA  	AjF (0@ A$j A<j( 6   )47
 A6


 A0j A(jA A 	A$jE (0@ A$j A<j( 6   )47
 A6


 A0j A(jA A 	A0jG (0E
 A$j A<j( 6   )47
 A6
	
 A0j A A (0@ A$j A<j(  6   A j A8j-  :    ( 96 !  (46
 A6
	
  (46(  A8j-  : , A0j A(jA A
 	A
jG (0@ A$j A<j( 6   )47
 A6
	
 A0j A(jA  	AjF (0@ A$j A<j( 6   )47
 A6
	
 A0j A(jA A 	A$jE (0E
 A$j A<j( 6   )47
 A6

 A$j A<j(  6   A j A8j-  :    ( 96 !  (46


 A j A<j( "6   )4"7 A
j 6   7 A6 

 A j A<j( "6   )4"7 A
j 6   7 A6 

 A j A<j( "6   )4"7 A
j 6   7 A6 

 Aj (( - ,

 Aj (( - ,

 Aj (( - ,

 Aj (( - ,
 (
  (" (F  W ( 
 ( jA :   A 6   (Aj6

 Aj A$j( "6   )
"7 A
j 6   7 A6 
 A@k$ @ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$  (0
# A k"$  A(j"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kA	I@  A	X (!
 (  jA A	  A	j"6 A0j! ( kAM@  AX (!
 (  jA ;    Aj6@ A j") P@ Aj 

 Aj  )
@ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8101-8250
 A j$  (0
# A k"$  A(j"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA A  Aj"6 A0j! ( kAM@  AX (!
 (  jA ;    Aj6 Aj!@@@@@ A j-  Ak 
  A A

  A A

  A A

  A A
@ (E@ A 6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$  (0@ A$j A<j( 6   )47


 Aj (( - , (
 A 6 

 A$j A<j(  6   A j A8j-  :    ( 96 !  (46


 A$j A<j( 6   )47


 A$j A<j( 6   )47


 A$j A<j( 6   )47

 Aj A$j( "6   )
"7 A
j 6   7 A6 
 A@k$  
((
 
A j!
 A k"
 
 
- $! 
(  
 A G 
(
 A 6 

 
A
j 
A4j( 6  
 
),7

 
A
j 
A4j( 6  
 
),7
 
Aj 
A
j( "6  
 
)"7  A
j 6   7 A6 
 
A@k$  
(
 
Aj 
Aj A
jL 
(
# A k"$  
Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA A  Aj"6 
Aj!	 ( kAM@  AX (!
 (  jA ;    Aj6 Aj!# A k"$  Aj"( !
 Aj  Aj( "@ (E@ Aj-  !@  ("  Al! E!@ @ (" (F  W ( 
 ( jA,:    (Aj6
 Aj!# A k"$  Aj @@@@ (E@  (6  Aj-  : 
 Aj AjA A 
G (
 Aj Aj 
A
jL (
  ( - 


  ( 6 	 A
j A
j(  6   (!
 Aj Aj-  :    
6

  )7 A
j A
j( 6 

  )7 A
j A
j( 6 
 A6 
 A j$  (
 
Aj!
A! Ak"
 
A  
AqA G

 Aj A
j( "6   )"7  A
j 6   7 A6 

  )7 A6  A
j A
j( 6 
 A j$ @ (E@ 	A 6 

 Aj A
j( "6   )"7  	A
j 6  	 7 	A6 
 A j$  
(
# A0k"$  
Aj"( "(! - E@ ( F  W ( 
 ( jA,:    (Aj"6
 A :  ( F  W ( 
 ( jA":    (Aj"6 ( kAI@  AX (!
 (  jA A  Aj"6 
Aj! ( kAM@  AX (!
 (  jA ;    Aj6@ A$j"( E@ Aj 

 A j  Aj  ( " (( ($E
  
@ (E@ A 6 

 Aj A
j( "6   )"7  A

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8251-8400
j 6   7 A6 
 A0j$  
(
  
( 
- 


  
( 6 	 A
j 
A
j(  6   
(! Aj 
Aj-  :    6

  
)7 A
j 
A
j( 6 

  
)7 A
j 
A
j( 6 

  
)7 A
j 
A
j( 6 

  
)7 A
j 
A
j( 6 
 A6 
 
A j$  (
 
(" 
(F 
 W 
( 
 
( jA :   A 6  
 
(Aj6

 Aj A
j( "6   )"7  A
j 6   7 A6 

 Aj A
j( "6   )"7  A
j 6   7 A6 
 A j$ 

 
A j 
 Ajl
@ 
( E@   
) 7  A 6   A
j 
Aj( 6 

 
Aj 
A,j( "6  
 
)$"7  A
j 6    7  A6  
(E
  
( 
 
A0j$ 
~# Ak"$ @@@@ E@  A 6  B7 

@ A
l"A
kA
nB"	B P@ A
j! 	! !@ E
 A
k!   Aj( j"M A
j!
 

Aܘ A5A  
@ E@A!

 A N"E
  "E

A ! A 6  6  Aj( !  6 ( !  K@ A  X (! ( !
  j     j"k!  j! AG@ A
lA
k!@ AM
 Aj( ! ( ! A /  ;   Ak" I
 A
j!  k! Aj   j! A
k"
 

   ) 7   Aj  k6 
 Aj$ 
 
   
A A#Aܙ  
 @@@@@@@@  (  
  Aj( @  (
  Aj
  Aj( @  (
  A
j( E
  Aj
  Aj( @  (
  Aj( E


  Aj( @  (
  Aj( E


  Aj( @  (
  Aj( E


  Aj( @  (
  Aj( @  (
  A j( E
   (


  (
@@  ("E
  Aj( ! ( !  ( !@@ Aj(  G
  ( "  
 A! Aj! Aj( E
 

 A
j!  Aj"G
 
A !

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8401-8550

  F
   k!  (  A
lj! Aj( ! ( !@@@ Aj"(  G
  ( "  
  Aj! Aj( E
 

  Atlj" ) 7  Aj ( 6 
 A
j! Ak"
 

    k6
# Ak"$ @@@@ Aj( "E@  B7 

 Aժ K
 A
l"A H
 ( ! Aժ IAt!    
"E
   6   6  A
l! !@ E
 E
   Aj Aj( 6   ) 7  A
j! A
k! A
j! Ak"
 

   6 Aj$ 
 
   
  AȚ  
E  ("@ At!  ( Aj! @  ( @  Ak( 
  A j!  A k"
 


  ("@  ( " A4lj!@ "Aj( @ ( 
@ (
" E
  Aj( E
   
 A
j( @ (
 A4j!@ (("E
  A0j( " @  At! Aj! @  ( @  Ak( 
  A j!  A k"
 

 A,j( E
  ((
  G
 


B  ("@  ( !  A
l!@  Aj( @  ( 
  A
j!  A
k"
 


# A k"$   6
  6 A$jA6  B7 Aؤ 6 A.6,  A(j6   Aj6( A 68 B70 A@k" A0jA  Aj @A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
   (   ( 
!~# A k"$  A j Aj) 7  A@k Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 78  ) 7  A j Aj( 6  A j Aj) 7  A j Aj) 7   ) 7P A8j!# Ak"$ @@@@@@@@@ A j"( Ak 
 A8jA 6  A4j A
j( 6  A6(  )7, A j Aj A(j] (h"A
F@ Aj" A j( "6  A j 6   )l"7   7P A(j"&    A jk ((E
 Aj A4j( 6   ),7 (@ ( 
 A0j Aj( 6   )7( A jA A) A(j5 (hA
F
   )h7   Aj Aj) 7   Aj A j) 7   Aj A j) 7 

   )x7 Aj A j( "6   Aj Aj) 7   )l"7   A
j 6    7   6  A(j&

 A j" A
j( 6  A j Aj( 6   )"7P  )7\ Aj A j) 7  Aj ) 7   7 A6 A j! Aj!# A k"$  A j Ajm@@@@@@ ( E@ A
j A,j( 6   )$7

 A j A,j( 6   )$7X A A  A j5 ( A
G

 Aj"( !  (  (" A
j(  Aj( (
  ( AG
 (
 A(j Aj( 6   Aj) 7 # A@j"$  Aj A j Aj"
 ( (
 A j!	B !# Ak"$  A(j 
@@@@@@@ - (Aq@ - )A G
 
 A j 
 - $! Aj ( "
A! - AqE
 - ! Aq! A jAr! A jAr! A j!@@@@@ Aq"A,G@ A F@ 

 A jA Av  A j) 78  )P70


 
A	!
	
 @A!
	
 
 Aj 
 - AqE@A!
	
 - !
 Aq"A"G@A! A G
A!

 A j 
 - T! (P"AG@  ) U7p  A j(  6 w !

 @ A j 
@ (P"AG@ A j A j( 6   )T7t

 A j 
! (p"AF

 A<j A j( 6   )t74  60
	
 
E
 A0jA Az 
E

	
 A j 
 (P"AG@ 	 )T7 	A
j A j( 6  	A 6 	 6  
E

 



 	 7  	 7 	 
6 	 
6 	 7



-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8551-8700
 A j 
 (p"AG@  ) 7  Aj Aj( 6   6P A j) ! )P!

 A j 
  ) ! )P! (`"
E
 )h! (d!

 Aj 
A ! - 	! - Aq
 


 	A 6 	A6 

 	A 6 	A6 

  70  78

 A<j ( w6    )p7 5  : 4  60
 
E 
Er

 

 )0! 	 A8j) 7 	 7  	A 6
 Aj$  A(j) ! ) ! ~@ (0"@ )8! (4! A j Aj ( "AG@ A,j5 ! )$! E
 

 Aj 7   7 A j 7  A
j 6  Aj 6 B 

 B  B ! B ! !
   B 7   B  B 7( AjA̡ A* A j6B
7  A@k$  ($E
 ( 

 A8j Aj) 7  A0j Aj) 7  A(j Aj) 7   ) 7  A 6T  A j"6P A6l B7\ A 6X  A j6h A@k A j )@! (H! - Aj 6  A
j 7  A6 B7 

 A8j Aj) 7  A0j Aj) 7  A(j ) 7   ) 7  A!6D  A j6@ A6l B7\ A 6X  A@k6h A
j A j B7  A6@@@@ (  
 A jAr

 A(j( @ ($
 A0j

 A(j( @ ($
 A0j

 A jAr
"Aj( E
 ( 

 A j Aj( 6   Aj) 7X A6D  A j6@ A64 B7$ A 6   A@k60 A
j A j B7  A6 (\E
  (X
 E
  
 A j$  )hP
 A@k Aj) "7  A8j Aj) "7  A0j A j) "7   )p"7(  Aj 7   Aj 7   Aj 7    7  Aj&

 A j (  ( (hE
 A j Aj) "7  A<j Aj) "7  A4j A j) "7   )p"7,  Aj 7   Aj 7   Aj 7    7 

 A j ( 6   ) 7l

 A j Aj( "6  Aj A j") 7  Aj A j) 7  Aj Aj) 7  A j 6   )l7  Aj" A(j  M@@ ((@ A j A4j( 6   ),7P (@ (
 A0j A j( 6   )P7( A jA A% A(j5 (hA
F
   )h7   Aj Aj) 7   Aj A j) 7   Aj A j) 7 

  Aj( 6   )7l
   )l7  A
6   A
j A j( 6 
 (@ ( 
 Aj( "@ (
!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 Aj( @ (

 A j( "@ (!  A
l!@  Aj( @  ( 
  A
j!  A
k"
 

 A
j( E
 (

 A@k Aj) "7  A8j Aj) "7  A0j A j) "7  Aj 7  Aj 7  Aj 7   )p"7(  7  Aj"&  A(j  4@@ ((@ Aj" A4j( 6   ),7 (@ (
 A0j ( 6   )7( A jA A A(j5 (hA
F
   )h7   Aj Aj) 7   Aj A j) 7   Aj A j) 7 

 A j Aj( 6   )7l
   )l7  A
6   A
j A j( 6 
 Aj( E
 (

   )l7  A
6   A
j A j( 6 
 (X" @  At! (PAj! @  Aj( @  ( 
  A j!  A k"
 

 (TE
  (P
 Aj( @ (
 A,j( @ ((
 Aj$  A j$ 
# Ak"$   6
  6@@ E@ A$jA6  B7 A 6 A.6D  A@k6   Aj6@ A 60 B7( A j" A(jA  Aj 
   )(7  A6   A
j A0j( 6 

 A4jA/6  A$jA6  B7 A 6 A.6,  6<  68  A(j6   A8j60  Aj6( A 6H B7@ A j" A@kA  Aj 
   )@7  A6   A
j A j( 6 
 Aj$ 
A A7 A jA A  
# A k"$   6
  6 A$jA6  B7 AХ 6 A.6,  A(j6   Aj6( A 68 B70 A@k" A0jA  Aj @A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# Ak"$   6
  6@@ E@ A$jA6  B7 A 6 A.6D  A@k6   Aj6@ A 60 B7( A j" A(jA  Aj 
   )(7  A6   A
j A0j( 6 

 A4jA/6  A$jA6  B7 A 6 A.6,  6<  68  A(j6   A8j60  Aj6( A 6H B7@ A j" A@kA  Aj 
   )@7  A6   A
j A j( 6 
 Aj$ 
A A7 A jA A  
~# A k"$   6
  6# Ak"$  Aj"@@ E@ A : 


-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8701-8850
@@@ -  A+k 
 AF


 Ak"E
 Aj!
@@@ AO@@  B B
 -  A0k"A	K
 )B R
 ) "	   A
I|" 	T
 Aj! ! Ak"
 


@ -  A0k"A	K
 Aj!  B
~|! Ak"
 

  7A 

 A: 

 A: 
A

 A: A
:   Aj$ @ - E@   )7  A6 

  - : ' A jA06  A.6<  A'j6@  Aj68 A6\ B7L A 6H  A8j6X A(j" A j" Ar  A6H (,@ ((
   )H7   Aj A j) 7 
 A j$ 
<
~# Ak"$  Aj   A j  Aj (" (@@@@ (AF@ Aj Aj) 7   )7 A jA A Aj6

 Aj Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j"  Aj) 7  A j" Aj) "
7   )7P 
AF
  A j  ) 7  A8j ) 7   )P7@  )h70 (`! (d! (x! (|! )!  Aj! ( "
!  ((!# A k"$      A@k!# A k"$  Aj @@@ - Aq@ - 	" A"F
  A F
 B7 

 B 7 

 Aj 
@ ("AF@A!

  / ; 	 A
j - :   - !  A
j )7  Aj  :  
 A6   6

 # A k"$  Aj 
@@ ("AF@ - !  Aj  ("AF

 Aj"  - :    / ;
 - ! (! (
!  /
; 	 A
j  -  :   Aj 6  A
j 6  Aj :    6 A6 

@@@  Ak 
# A k"$  A@k!# A k"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $ Aj ( "
A!	A!  - AqE@A !

 A jAr! - !Aq!
A !@@@@@@@ Aq"	A,G@ 	A F
 

A!	A	! 


 
@A!	A! 


 
 Aj 
A!	 - AqE@A! 


 - !
 Aq"A"G@A!	A!  A G
	A! 
	
 A j!	# A k"$  Aj 
@@@ - Aq@ - 	A"G
 
 Aj 
 ("
AG
 A
j( !
 Aj( !
 ("E@@ 
AF@ 
Aއ AE

 	 
 
A Ay

 	A6 

@@ 
AF@ Aއ AE

 	  
A Ay

 	A6 
 
E
 

 	A6 

 	A6 

 )!
 	 (
6
 	 
7 	 
6 
 A j$  (`"AF
  ) e7P  A j(  6 W - d!	 ! 

 E@ A jA Av (`" AG
 A j( ! A j( !
 (d!
  6< )<!
 A0j  (0" AG
  
7
  
6  6 A6 


 E
 A0jArA Az 
E


 A@k (l6  A8j )d7    64


-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:8851-9000
 Aj )47  Aj A<j( 6  A6    6 
E
 

 A j 
@@ (`"AG@  )d7  Aj A j( 6 

 A j 
 (P"AF

 A@k (\6  A8j )T7   64

 (\! (X!
 (T! Aj 
A!	A !
 - 	! - Aq
 


 B 7 

 B7 

 A@k ( W6   A8j 	:    )P7 9   64 E 
Er

 
 )4!
 A
j A<j) 7   
7 A6 
 A j$ @@@@ (@" AG@ A
j A j) 7   )D7  )T7$   6 Aj  AjAr! - AqE
 - 	A G
  Aj A(j( 6  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 B 7 @   
 (@ (
 A j!

 B7 @@   
 (@ (
 A j!
 Aj( E
 ( 

 Aj( E
  ( 
 A j$ 

# A k"$  A@k!	# A k"$  A(j @@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "
A!  - AqE
 A jAr! - ! 
Aq!
@@@@@@@@ Aq"A,G@ A F@ !  "E@ A jA Av (`" AG
 A j( ! (d! A j( ! 
  
  A jA Av (`"
AG
 A j( ! (d!
 A j( 
6H  6D )D!
 A0j  (0"AG
 	 
7 	 
6 	 6
 	  6 	 6 	A6 

 

A	! 


 
@A! 


 
 Aj 
 - AqE@A! 


 - !
 Aq"A"G@A!  A G

A! 


 A j!# A k"
$  
Aj 
@@@@@@@@ 
- Aq@ 
- 	A"G
 
 
Aj 
 
("
AG
 
A
j( !
 
Aj( ! 
("E@@@ 
Ak	 	
 Aއ AE
	

 AĈ A
 A6  A: 
	
@@ 
Ak 
 Aއ AE


 AĈ A
 A6  A: 

 A6 

 A6 

 
)!
  
(
6
  
7  
6 

   
Ä Ay

 A6  A : 
 E
 

   
Ä Ay

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9001-9150

 A6  A : 
 
A j$  - d!
 (`"AF
  ) e7P  A j(  6 W ! 


 A@k (l6  A8j )d7    64

 A@k (l6  A8j )d7   
64 A60  E
 

@ 
@ 

 A j 
@@ (`"AG@  )d7  Aj A j( 6 

 A j 
 (P"AF

 A@k (\6  A8j )T7   64


 (\! (X! (T!


 E
 A0jArA Az 
E

	
 A0jArA Az

 	Aj )47  	Aj A<j( 6  	A6  	 6  @ 
 
E
	 

	
 A j 
@@ (`"AG@  )d7  Aj A j( 6 

 A j 
 (P"AF

 A@k (\6  A8j )T7   64A ! 



 (\! (X! (T!
 Aj 
A !
 - 	! - Aq
 


 	B 7 

 	B7 

 A G!
 
E


 A@k ( W6   A8j 
:    )P7 9   64 
E

 E
  

 E E 
rrE@ 
 )4!
 	A
j A<j) 7  	 
7 	A6 
 A j$ @@@@ (@" AG@ A
j A j) 7   )D7  )T7$   6 Aj  AjAr! - AqE
 - 	A G
  Aj A(j( 6  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 B 7 @   
 (@ (
 A j!

 B7 @@   
 (@ (
 A j!
 Aj( E
 ( 

 Aj( E
  ( 
 A j$ 

# A k" $   A@k!# A0k"$  Aj @@@ - Aq@@@ - A F@  Aj  -  Aj ("A! - AqE
Aq!
@ - 	"A,G@ A F
A	! 



A! 

   A! -  AqE
 - !
 A"F
A! A G
A!

 B7 

 A j!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( !
 ("	E@  
 A A y

  	 A A y 
E
 	

 A6 

 A6 

 )!
  (
6
  
7  6 
 A j$  ( "AF
 

 A j  ( "AF


 B 7 


-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9151-9300
 B7 

 Aj )$7  Aj A,j( 6  A6   6
 A0j$ @@@@  (@"AG@  A
j  A j) 7     )D7    )T7$   6  Aj   AjAr!  - AqE
  - 	A G
  Aj  A(j( 6  Aj  A j) 7  Aj  Aj) 7    )7 

  A8j  A j) "
7     )D"70 A
j 
7   7 A6 

 B 7 @  
  (@  (
  A j!

 B7 @@  
  (@  (
  A j!
 Aj( E
 ( 

 Aj( E
  ( 
  A j$ 
 A j$ 
 A j$ @@ (@"AG@ A
j A j") 7   )D7  )T7$  6 A@k  (@"AG
  )7  Aj A(j( 6  Aj A j) 7  Aj Aj) 7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 AjAr!  Aj )D7  Aj ( 6  A6   6@@  
 (@ (
 A j! 
  Aj( E
   ( 
 A j$ @@@@ (AG@ Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   )7

 A j"  Aj) 7   )7P AjA A% A j6 (A
G

 Aj" Aj( 6  Aj" Aj) 7  Aj" Aj) 7   )7 AjA 6  AjA 6  AjAؚ 6  Aj A j) 7  Aj A8j) 7  Aj Aj" 6  Aj  6   )@7  6  6  )07   7  6  6   6 Aj ( 6  Aj ) 7  Aj ) 7   )7 Aj" AȤ  Aj Aj AjA (    Ar! @ ("A
F@ A
j  Aj( 6  A 6    ) 7

 A j  Aj( 6  A j Aj) 7   6P  )7`   ) 7T A 6 B7 Aj"  AjA  A j  
 A
j Aj( 6   )7 A6  A j-
 ($@ 

 (E
 

 A j Aj) 7  A j Aj) 7    Aj) 7   )7P A 6 B7 Aj"  AjA  A j  
 A
j Aj( 6   )7 A6  A j- @ 
 E
 

Aĉ A7 AjA A؊  


 Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 Aj"  AjA  Aj  
 A
j Aj( 6   )7 A6  Aj-
 ($@ ( 
 (E
  
 Aj!# A0k" $  Aj!  @ ( E@  A j!# A0k"$   ("  (F   W  ( 
  ( jA :      (Aj6 Aj  A A@@ (E@  ("  (F   W  ( 
  ( jA::      (Aj6 A j  Aj   ( " (( ($@ 
 (
  ("  (F   W  ( 
  ( jA :   A 6     (Aj6

 A(j A
j( "6   )"
7  A
j 6   
7 A6 

 Aj A
j( "6   )"
7  A
j 6   
7 A6 
 A0j$ 

  A j   l
@  ( E@   ) 7 A 6  A
j  Aj( 6 

  Aj  A,j( "6     )$"
7 A
j 6   
7 A6   (E
   ( 
  A0j$ @@ (E@ A j Aj( 6   )7T

 Aj Aj( 6   )7 A jA A  Aj5 (PA
G

 Aj A j( " 6   )T"
7 Aj  6   
7 Aj Aj( @ (
 Aj$ 

 Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7A A+ AjAЍ A܎  
A A7 AjA A  

~# Ak"$  Aj  Aj) "	7    ) 7  (! ( 	"  (
"G@ ( ! Aj! AjAr!@@  ( "AG@  6   AjA   Aj A:  B 7p B 7 Aj!  AjA A j!  A j"  G



  A j!
  6
 6  A
j( "  Aj( "kA n!   G@ A l!A !@@@@@@@@  j" (  
  Aj( @  Aj( 
  Aj

  Aj( @  Aj( 
  A
j( E
  Aj

  Aj( @  Aj( 
  Aj( E
  Aj( 

  Aj( @  Aj( 
  Aj( E
  Aj( 

  Aj( @  Aj( 
  Aj( E
  Aj( 

  Aj( @  Aj( 
  Aj( @  Aj( 
  A j( E
   A
j( 
  A j"G

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9301-9450
 

 (@ ( 
 Aj$ 
# A k"$  Aj Aă ( Aȃ (  (
 @@ ("E@A%A"E
  A6  A6  A
jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7    AjB7   A
j 6 

 Aj  (   (@   )7  A$j A8j( 6   A
j A0j) 7   Aj A(j) 7   A
j A j) 7 A 

 A j A$j) 7   )
7@  AjA A% A@k6A
6  (
E
  
 A j$ 
A%A 

	~# Ak"$  Aj Aă ( "Aȃ ( "	 (
 @@@@ ("E@A%A"E
 A
jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   A@kB7  A<j 6  A68

 A j  (@ (X"@ A j A j( 6  A j A j) 7  A j A j) 7  A<j A j) 7   )X74

 Aj A j) 7   )\7 A8jA A% Aj6
 (@ 
 
 A j( ! A j( ! A j( !
 A,j A j( "6  A$j A@k) "
7   )8"7
  Aj 6   Aj 
7    7  A$j 6   A j 6   A
j 6   A6  ( !  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 Aj( E
  

 A(j A j) "
7  Aj A<j) 7  Aj 
7   )47  A j( ! A j(  (!
 (!
 ( ! A j( "@ A
l! !@ Aj( @ ( 
 A
j! A
k"
 

@ 
 A@k Aj) 7  A8j Aj) 7   ) 70  
6P  
6L  6H Aj" Aj A0j M@ (@ Aj A$j( 6   )
7 (@ (
 A j Aj( 6   )7 A jA A% Aj5 (X"A
F
 Aj A j) "
7   )h"7 )\!  Aj (d6   A
j 7   Aj 7   A j 
7    6  A6  (4@ (0
 A j( " @ (<!  A
l!@ Aj( @ ( 
 A
j! A
k"
 

 A@k( @ (<
 (P" @ (H!  A
l!@ Aj( @ ( 
 A
j! A
k"
 

 (LE
 (H

 A j Aj( 6   )7\
 A j(    	 (\" A j(  (
 @ 
   )07  A 6   A$j A j( 6   A
j A j) 7   Aj A@k) 7   A
j A8j) 7 
 Aj$ 
A%A 


~# Ak"$  A8j Aă ( "Aȃ ( "	 (
 @@@ (8"E@A%!A%A"E
 A
jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   A jB7  A
j 6  A6A%

 A j  (@@ (H"@ A4j A j( 6  A,j A j) 7  A$j A j) 7  A
j A j) 7   )H7

 Aj A j) 7   )L7 AjA A% Aj6
 (<@ 
 
 A(j( ! A$j( ! A j( 
! Aj A4j( "6   A,j) "7 )!  Aj 6   Aj 6   Aj 6    7  A
j 7   A$j 6   A6  ( !  ("@ A
l!  !@ Aj( @ ( 
 A
j! A
k"
 

 Aj( E
  

 Aj A4j( 6   A,j) 7  A$j(  A j( ! Aj) ! (!
 (!
 (!
 ( ! A(j( "@ A
l! !@ Aj( @ ( 
 A
j! A
k"
 

@ 
 A0j Aj( 6   
6$  
6   6
  7  
6  ) 7( Aj" Aj Aj M@ (@ A j Aj( 6   )7p (@ (
 Aj A j( 6   )p7 A jA A% Aj5 (H"A
F
 A@k A j) "7   )X"78 )L!  Aj (T6   A
j 7   Aj 7   A j 7    6  A6  (@ (
 ($" @ (
!  A
l!@ Aj( @ ( 
 A
j! A
k"
 

 ( @ (

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9451-9600

 A0j( " @ ((!  A
l!@ Aj( @ ( 
 A
j! A
k"
 

 A,j( E
 ((

 A j Aj( 6   )7L
 A j(    	 (L" A j(  (
 @ 
   )7  A 6   A$j A0j( 6   A
j A(j) 7   Aj A j) 7   A
j Aj) 7 
 Aj$ 
A%A 
~# A k"$   6  6 # A0k"$  Aj"@@ E@ A : 

@@@ -  A+k 
 AF


 Ak"E
 Aj!
@@@ A!O@ A(j!@ Aj 
B B
 A j 	B B
 -  A0k"A	K
 )B R ) "	 )|"
 	Tr
 ) "
   A
I|"	 
T" 
 
 |"
V 	 
Z
 Aj! ! Ak"
 


 Aj!@ -  A0k"A	K
  	 
B
 Aj! )  ) "
 |"	 
T|!
 Ak"
 

  	7 Aj 
7 A 

 A: 

 A: 
A

 A: A
:   A0j$ @ - E@   )7  A 6   Aj Aj) 7 

  - 	: ' A jA06  A.6<  A'j6@  68 A6\ B7L A 6H  A8j6X A(j" A j  Aj   A6 (,@ ((
  A6 
 A j$ 
	    
@@@ A	O@  "
A 

AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K M
A AjAAAk KA!  " "!@@@@@@@ E@  M
 A ( F
 A ( F
 
 " j" I
  k! AI
 

 ! AI
  kAI Aj Mq
 ( " jAj! AjA!A "E
  j"  k" Ak"6  A6   A
kA 6A A (   kj" 6 A A ( "   K6 A A ( "     I6 
	
AA  k"K
  !      

A (  j" M
  !     k"Ar6A  6 A  6 

A (  j" I
@AA  k"K@  A !A !

  " !      (A~q6
A  6 A  6 

 A
j( "	 Aj( "G@  	6
 	 6

A A ( A~ Avwq6 
AA M@  !      

  
 

 "E
    AxA| j"   I  

       I  
 

  


    A 
# A@j"$ @@@@@@@  ( Ak 
   Aj6 Aj"  Aj(   Aj(  AjA 6  A<jA6  A 6
 B7, A 6(  6  Aj6  Aj68  A(j!  ("E
 (
E
 

   Aj6 Aj"  Aj(   Aj(  AjA 6  A<jA6  A 6
 B7, A 6(  6  Aj6  Aj68  A(j!  ("E
 (
E
 

   Aj6 A<jA6  B7, AĪ 6( A 6
  Aj68  Aj6  A(j! 

   Aj6 A<jA6  B7, A 6( A 6
  Aj68  Aj6  A(j! 

 A<jA 6  Aܩ 68 B7, A 6(  A(j! 

   Aj6 A<jA6  B7, A 6( A 6
  Aj68  Aj6  A(j! 
 A@k$   
 @@@@@@@ Ak
 
 A A@ A A
  A6   A: 
  A6   A: 
 Aϫ A


-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9601-9750
  A6   A: 
 A۫ A
  A6   A: 
 A AE


 A A
   A6   A: 
    A A
  A6   A : 

~@# A k"$  ( !
 Aj( "An"Aq G! At!  Alk@   Aj"Kr!
  6  As6 @@@ ( @@ ("E@A!	

 A N"E
@  "E
  
  A  
 "	E

A !A ( !@ AI
 A  Ak"  K!
@  AjO@@  A j"M@  M
  A  
A A
A  
  	j"   
j")  "B8"B:j-  :   Aj   B(B "B4A?qj-  :   Aj   BB? BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   A	j   B(B "B4A?qj-  :   A
j   BB? BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"A?qj-  :   A
j   BB BB B(B B8"B
A?qj-  :   Aj  "
AvA?qj-  :   Aj  
AvA?qj-  :   Aj  A
j)  "B8"B:j-  :   Aj   B(B "B4A?qj-  :   Aj   BB? BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   Aj   B(B "B4A?qj-  :   Aj   BB? BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"A?qj-  :   A
j   BB BB B(B B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   ! 
 Aj"O



 Aj A  
@@   Ap"
k"
O@  
I
 !

A A!A  
@@ Aj" I
  M@@  Aj"M@  M
  A  
A A
A  
  	j"   
j"-  "
Avj-  :   Aj  Aj-  "A?qj-  :   Aj  Aj-  "At AvrA?qj-  :   Aj  
At AvrA?qj-  :   ! " 
O



  A  
A A
A  
@@@@@@@@@@@@@@ 
Ak 
  
M
  O
A!  	j  
 
j-  "Avj-  :   AtA0q  Aj"K
  A  
  
M
  O
	  	j  
 
j-  "Avj-  :   
Aj" O
 Aj" O

  	j  At  
j-  "AvrA?qj-  :   Aj" O
A! AtA<q
!  	j  j-  :    j!
A !  K
@ 
AsAp"E
   k!  F
  	j"A=:  A! AI
  AF
 A=: A!
  j I



 
 A  
  A  
  A  
  A  
  A  
A A*A  
 
 A  
  A  
  A  
  A  
 Aj 	  (@ )
"BB R

   6   6   	6  A j$ 

# Ak" $   A 6  A-6  A 6 # Ak"$  Aj  Aj( 6    ) 7 # Ak" $    ) 7  AjA A  (A 
 
   
  7  6  6
  	6A A
 AjA A  

    Aj( 6   ( 6 
*	~# Ak"$   6
  6 A j! !
# Ak"$ @@@@@@@@@  "
Aj"M@ AvAl!A! AO@ A N"E
  "E

  6  6  A 6 
 
Aj"K@A A3A  
 Av"
B~"B 
 "@  K@ A  X ( ! (!
  jA  Ak"   jjA :    j! ( !
  6A ( !@@@@@@@@ 
Aq" 
A!


-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9751-9900
B! 




A
!

A
!

A
!
A  
 k"  
K"
A k" 
M
A ! 
!

 
 
Ak"j-  "A=F
  j-  AG
B !

@@@  A j"M@  
M
  
A  
A A
Aؽ  
 	Aj K
   
j"-  "j1  "BQ
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
 	 j" B4 B: B. B( B" B
 B" B"BB? BB BB BB B(B B87    Aj-  "j1  "BQ
  A	j-  "j1  "BQ@ A	j!
	
  A
j-  "j1  "BQ@ A
j!
	
  A
j-  "j1  "BQ@ A
j!
	
  A
j-  "j1  "BQ@ A
j!
	
  A
j-  "j1  "BQ@ A
j!
	
  Aj-  "j1  "BQ@ Aj!
	
  Aj-  "j1  "BQ@ Aj!
	
 Aj B4 B: B. B( B" B
 B" B"BB? BB BB BB B(B B87  @  Aj-  "j1  "BR@  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BR
 Aj!


 Aj!
	
 A
j B4 B: B. B( B" B
 B" B"BB? BB BB BB B(B B87  @  Aj-  "j1  "BR@  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  Aj-  "j1  "BR
 Aj!


 Aj!
	
 Aj B4 B: B. B( B" B
 B" B"BB? BB BB BB B(B B87   
 
Ak"O@ 	Aj!	 !
  "I



A A!A  
 Aj!

Aм A#AȽ  
 
   
A A.A  
 	Aj A  
@ 
Ak" 
K  MrE@@@@@@ Aj" I

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:9901-10050
  
K
 	Aj"
 	I
@ 
 
Aj"M@  	I
  M
  Aؾ  
A A
AȾ  
   
j"
-  "j1  "BQ@ !

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

 	 j B4 B: B. B( B" B
 B" B"BB? BB BB BB B(B B87    Ak"O@ 
!	 !  "M



A A!A  
  
A  
A A
A  
A A
A  
 	 Aؾ  
 	!
 ! !
 A AK!
A  k! 
Aj!@@@@@@@@@@@ 
Ak"
E@  
K
  
G
A !A !
A !A !
A !	A !A !A !
B !


  
K
@ Ak"Aj" O@  K
  
F
   
j"	-  "j1  "BQ@ !

  
j"AI
@@@@@@@@@@@  	Aj-  "j1  "BR@ AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
	  	Aj-  "j1  "BQ
 AM

  	Aj-  "j1  "BR

 Aj" O



 Aj"


AAA  
 Aj" O


AAA  
 Aj" O


AAA  
 Aj" O


AAA  
 Aj" O


AAA  
 Aj" O


AAA  
A A
A  
 Ak!  jAk"Aj B4 B: B. B( B" B
 B" B"BB? BBB =    BB BB B(B B8>   Aj!  Aj"M
 
A A
A  
 
 
j!
  
j!A !A !A !	A !
A !
@ 
Aj"
E
@@@@@ -  "A=G@ 	A L
  j" O
A A
A  
 
Aq@ 	Aj" 	H
  
 	! 
!
 !	 Aj" 
G
 !

   
 	A Jj" I


-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10051-10200
A=!B !

A A
Aȿ  
A A
Aؿ  
 
A
F
  j1  "BQ@   
j"M@B !

A A
A  
  
Aj"
A:lA>q ! ! 
!
 Aj" 
G


B !A !
A !A !
A !	A !A !@@@@@@@ 
	   
# A k" $   AjA6   B7  Aȼ 6   A 6
  A 6    Aj6  A  
B!A!


B!A!A!



B!A!A!
A


B !A!A!
A!	A!


B(!A!A!
A!	A!A!


B0!A!A!
A!	A!A!A!

	
  
A  
  
A  
  A  
A A A  
AAA  
A A!A  
A A
Aܺ  
A 
!	
@@ @  P@ Ak" E
  O
  j"Ak B8<   Ak" 
E
  O
 Ak B0<   Ak" 	E
  O
 Ak B(<   
 

  
j" I
  Ak"O@B!

A A!A  
  O@ !

  B <   Aj" E
   O
 Aj B<   Aj" 
E
   O
 Aj B<   Aj
"O@  6
  ) 7  Aj Aj( 6 

A A
A  
  A  
 A 6   B  BB 7 (E
  
 Aj$ 

A A
A  
@@ (PE@  )T7` A 6p B7h A j" A jA # A0k"$ @@@ A j"-  Ak 
  (6   - :  A
jA6  A,jA6  B7
 A 6 A6$  A j6  6(  Aj6   Aj

 A
jA 6  A 6 B7
 A 6  Aj

  (6   - :  A
jA6  A,jA6  B7
 A 6 A6$  A j6  6(  Aj6   Aj
 A0j$ E
A A7 AjA A  
 A
j A j( "6   )P"7   7  A
j 6   A6  A
6

 A
j A j( 6   )h7 A6 A 6T  Aj6P A6 B7| A 6x  A j6 A j" A j  Aj   A6  (l@ (h
 Aj-
 Aj$ 
# A k"$  E@A !A 

@@ Aj  ("E
 ( (! (
@ 
 Aj!@ 
  G
 
A 

 !A
!   6   6  A j$ 
~# A@j"$ @ ( "@ ( "E
 )!
   
74  60 Aj" A0j" Aj A j( "6   )"
7 A(j"( ! A,j"( !	 ($! A8j 6   
70   ( ! ( ! ($! (
@ (
@ E@  A 6  @ 
 E
 

   	6   6   6
   6   6   6 
 A@k$ 
 A,jA 6  A 6( B7
 A 6 AjA  
 A,jA 6  A 6( B7

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10201-10350
 A 6 AjA  
# A k"$ @ E
 @@ Aj  ("E
  ( (! (
@ 
@ 
 Ak"



A!
@ E@   

  A 6 
 A j$ 
	   B 7 
# Ak"$ @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  (F@   W  (!
   Aj6  (  j :  

 AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!   (  ("kK@    X  (!
  (  j A
j     j6
 Aj$ A 
# A k"$ @A
A"@  6  6  6 @  "E@  A 6 

 ( "E
   6    )7 
  A j$ 
A
A 
 A
jA 6  A 6 B7
 A 6 AjA  
# A k" $ @@ @A
A"E
  6  6  6 A
A"E
  6  6  6       A j$ 
  A
jA 6   Aܮ 6  B7
  A 6  AjAȳ  
A
A 
A
A 
5 A
A" E@A
A 
   6   6   6     
A !@@@ @A
A"E
  6  6  6 
 @A
A"E
  6  6  6 
   Aq!AA"E
  6  @ 
 @ 
  Aس 6   6 
A
A 
A
A 
AA 
 
# A0k"$ @@@@@@@@ AM@A
A"E
  6  6  6  "
 
A!

A A"E
   6  A6  A )  7   AjA )  7   AjA )  7   AjA )  7    AjB7 

 A"E

   6  Aj 6      A
6   A
j 6  

 ( "E
  6   )7  A 6  6 A6, B7
 A 6  Aj6(  Aj Aj  A6  (@ ( 
 
 A0j$ 
A
A 
A A 
 A 
 A,jA 6  A 6( B7
 A 6 AjA  
~# A0k"$ @@@@@@@ AM@A
A"E
  6  6  6 A A"E
A
A"E
 B 7  6   "
 ( "E
 )!   Aj 7    6  A
6  

A$A"E
   6  A6  A )  7   AjA )  7   AjAĴ )  7   AjA̴ )  7   A jAԴ (  6    AjB7 

 ( "E
  6   )7  A 6  6 A6, B7
 A 6  Aj6(  Aj Aj  A6  (@ ( 
 
 A0j$ 
A
A 
A A 
A
A 
A$A 
 A,jA 6  A 6( B7
 A 6 AjA  
~# A0k"$  Aj( ! ( !@@@A
A"@  6  6  6 A A"E
A
A"E
 B 7  6 @  "E@ ( "E
 )!   Aj 7    6  A
6 

 ( "E
  6   )7  A 6  6 A6, B7
 A 6  Aj6(  Aj Aj  A6  (@ ( 

  A0j$ 
A
A 
A A 
A

-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10351-10500
A 
 A,jA 6  A 6( B7
 A 6 AjA  
# A k"$ A
A"@@  6  6  6 A
A"E
   6  6  6 A
A"E
   6  6  6 @@@@@@@@@   "
     
   6  A6 

  A6   A: 

  A6   A : 

 A
jA 6  Aܮ 6 B7
 AԵ 6 AjAܵ  
  A6 

  A6 

  A6 

  A6 
    A j$ 

A
A 
~# A k"$ @@@A
A"@  6  6  6 A
A"E
  6  6  6 @@@@@@@   Aq	"B "   
  B07   Aj 6 

 "E
 ( "E
   6    )7 

 A
jA 6  Aܮ 6 B7
 AԵ 6 AjA  
  B 7 

  B7 

  B 7 
   A j$ 
A
A 
A
A 
 A
jA 6  A 6 B7
 A 6 AjA  
 A
jA 6  A 6 B7
 A 6 AjA  
# A k"$ A
A"@@  6  6  6 A
A"E
   6  6  6 A
A"E
   6  6  6 @@@@@@@@@   
"
     
   6  A6 

  A6   A: 

  A6   A : 

 A
jA 6  Aܮ 6 B7
 A 6 AjA  
 A
jA 6  Aܮ 6 B7
 A 6 AjA  
  A6 

  A6 

  A6 
    A j$ 

A
A 
# A k"$  Aj   (! (!A
A"@@  6  6  6  Aj   ( ! (!A
A"E
   6  6  6  A(j   (0! ((!A
A"E
   6  6  6 @@@@@@@@@   
"
     
   6  A6 

  A6   A: 

  A6   A : 

 A jA 6  Aܮ 6H B7< A 68 A8jA  
 A jA 6  Aܮ 6H B7< A 68 A8jA  
  A6 

  A6 

  A6 
  (,@ 
  (
@ 
  (
@ 
 A j$ 

A
A 
5 A
A" E@A
A 
   6   6   6   
  
u
~# Ak"$ @@@@@A
A"
@ 
 6 
 6 
 6  

"E
 ( "
E
 (! (!   A j!# A k"$   
   A@k!# A k"$  Aj @@@ - Aq@ - 	"A"F
 A F
 B7 

 B 7 

 Aj @ ("AF@ A6

  / ; 	 A
j - :   - ! A
j )7  Aj :    6
 A6 

 A !# A0k"$  Aj @@ ("AF@ - ! Aj  ("AF


-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10501-10650
 Aj" - :    / ;
 - ! (! (
!  /
; 	 A
j -  :   Aj 6  A
j 6  Aj :    6 A6 

 @ Aj!# A k"
$  
Aj A!@@@@@ 
- AqE
 @ 
- 	"A G@A
! A"G
 
A@k!# Ak"$   @ ( "AF@ A6

  / ; 	 A
j - :   - ! A
j )7  Aj :    6
 A6  Aj$ 

  
A@k!	A !# A k"$  Aj @@ ("AF@ - ! Aj  ("AF

 Aj" - :    / ;
 - ! (! (
! 	 /
; 	 	A
j -  :   	Aj 6  	A
j 6  	Aj :   	 6 	A6 

@@@@@@ Ak 
# A k"$  A@k!# A k"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "
A! - AqE
 A jAr! - ! 
Aq!
@@@@@@@ Aq"A,G@ A F@ E


 

A	!


 
@A!


 
 Aj 
 - AqE@A!


 - !
 Aq"A"G@A! A G
	A!
	
 A j!
# A k"$  Aj 
@@@ - Aq@ - 	A"G
 
 Aj 
 ("
AG
 A
j( ! Aj( ! ("E@A!
 AF@ (  A (  G!

 
A6  
 
: 

A!
 AF@ (  A (  G!

 
A6  
 
:  E
 

 
A6 

 
A6 

 )!! 
 (
6
 
 !7 
 
6 
 A j$  - d!
 (`"AF
  ) e7P  A j(  6 W !

 A jA A (`"AG
 A j( ! A j( ! (d!


 
@ A j 
@ (`"AG@ A j A j( 6   )d7T

 A j 
 (P"AF

 A8j )T7  A@k A j( 6   64

 E
 A0jArA A E
	

 A@k (l6  A8j )d7   64

 A j 
@@ (`"AG@  )d7  Aj A j( 6 

 A j 
 (P"AF

 A@k (\6  A8j )T7   64

 (\! (X! (T!
 Aj 
A !
 - 	! - Aq
 


 B 7 

 B7 

 A@k ( W6   A8j 
:    )P7 9  64
 E Er

 
 )4!! A
j A<j) 7   !7 A6 

  6< )<!! A0j  (0"AF@  !7
  6  6 A6 

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10651-10800

 Aj )47  Aj A<j( 6  A6   6 E
  
 A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$ # A k"$  Aj  A@k"@@@ - Aq@@ - A F@  Aj  (!  - 
Aq: ,  6( A@k A(jO (@"AF@@ - DE
 A@k ((" (@"AG@ A<j A j( 6   )D74

 A0j  (0"AG
 A@k A(jO (@"AF
 

  ) E7  A j(  6  - D

 A6

 A@k  (@"AF
 Aj )D7  Aj A j( 6   6

 A6

A

  ) 57  A<j(  6  - 4
!  )7 	 Aj ( 6   Aj :    6
A
6  A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!# Ak"$  A(j @@@@@ - (Aq@ - )A G
  A j  - $! Aj ( " - AqE@A!

 - ! Aq!@@@@@@@ Aq"
A,G@ 
A F@ !P



 
A	!


 @A!


  Aj  - AqE@A!


 - !
 Aq"A"G@A! A G
	A!
	
 Aj!# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("
E@A!
 AF@ A AA G!

 A6   
: 

A!
 AF@ 
A AA G!

 A6   
:  E
 


 A6 

 A6 

 )!#  (
6
  #7  6 
 A j$  - ! ("AF
  ) 7p  Aj(  6 w

 AjA A ("AG
 )!"
	
 @ Aj @ ("AG@ A j Aj( 6   )7t

 A j  (p"AF

 A j )t7  A j A j( 6   6T

@@ !P@ Aj  ("AF
 A j Aj( 6   )7t

 A jArA A
	
 A j 
 (p"AF

 A j )x7  A j (t6   6T


-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10801-10950
 A j )7  A j (6   6T

 )x!"B!!
 Aj A ! - 	! - Aq
 
A!

 B 7 

 B7 

 A j ( w6   A j :    )p7 Y  6T
 A j A j) "!7   )T""7@ A
j !7   "7 A6 

  "7X A8j" A j") 7   )T70 A j  (P"AF@ A6   )07 A
j ) 7 

 Aj )T7  Aj ( 6  A6   6
 Aj$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!# A k"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "
A! - AqE
 A jAr! - ! 
Aq!
@@@@@@@ Aq"A,G@ A F@ E


 

A	!


 
@A!


 
 Aj 
 - AqE@A!


 - !
 Aq"A"G@A! A G
	A!
	
 A j!
# A k"$  Aj 
@@@ - Aq@ - 	A"G
 
 Aj 
 ("
AG
 A
j( ! Aj( ! ("E@A!
 AF@ (  AĬ (  G!

 
A6  
 
: 

A!
 AF@ (  AĬ (  G!

 
A6  
 
:  E
 

 
A6 

 
A6 

 )!! 
 (
6
 
 !7 
 
6 
 A j$  - d!
 (`"AF
  ) e7P  A j(  6 W !

 A jA A (`"AG
 A j( ! A j( ! (d!


 
@ A j 
@ (`"AG@ A j A j( 6   )d7T

 A j 
 (P"AF

 A8j )T7  A@k A j( 6   64

 E
 A0jArA A E
	

 A@k (l6  A8j )d7   64

 A j 
@@ (`"AG@  )d7  Aj A j( 6 

 A j 
 (P"AF

 A@k (\6  A8j )T7   64

 (\! (X! (T!
 Aj 
A !
 - 	! - Aq
 


 B 7 

-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:10951-11100

 B7 

 A@k ( W6   A8j 
:    )P7 9  64
 E Er

 
 )4!! A
j A<j) 7   !7 A6 

  6< )<!! A0j  (0"AF@  !7
  6  6 A6 

 Aj )47  Aj A<j( 6  A6   6 E
  
 A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!
# A k"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "A! - AqE
 A jAr! - ! 
Aq!
@@@@@@@@@@ Aq"A,G@ A F
 

A	!

 
@A!

  Aj  - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 A j!# A k"
$  
Aj @@@@@@@ 
- Aq@ 
- 	A"G
  
Aj  
("
AG
 
A
j( !
 
Aj( ! 
("
E@@@@@@ 
Ak 
 AЬ AE

 Aj!


 Aj!
 )  Aլ )  Q

 
A:  

 
A:  

@@@@@ 
Ak 
 
AЬ AE

 Aj!


 Aj!
 
)  Aլ )  Q

 
A:  

 
A:  

 A6 

 A6 

 
)!!  
(
6
  !7  
6 

 A : 

 A : 
 A6  E
 


 A6 
 
A j$  - d!
 (`"AG@  ) e7P  A j(  6 W !

 

 !@@ "E@ A jA A (`"AG
 A j( ! (d! A j( !
    A jA A (`"
AG
 A j( ! (d! A j( 
6H )H!! A0j  (0"AG
 
 !7 
 6 
 6 
 6
 
 6 

-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11101-11250
 6 
A6 

 A@k (l6  A8j )d7   64


 A@k (l6  A8j )d7   
64 A60 E

 


 A j @ (`"AG@ A j A j( 6   )d7T

 A j  (P"AF

 A8j )T7  A@k A j( 6   64
	
 E
 A0jArA A A60


 E
 A0jArA A

 
Aj )47  
Aj A<j( 6  
A6  
 6 @ 
 E

 


 A j @@ (`"AG@  )d7  Aj A j( 6 

 A j  (P"AF

 A@k (\6  A8j )T7   64A ! 
	


 (\! (X! (T!

 A j @@ (`"AG@  )d7  Aj A j( 6 

 A j  (P"AF

 A@k (\6  A8j )T7   64
	
 (\! (X! (T!
 Aj A !
 - 	! - Aq
 


 
B 7 

 
B7 

 


 A G! 


 A@k ( W6   A8j 
:    )P7 9  64 A60 E

 E
  
 E E rrE@ 
 )4!! 
A
j A<j) 7  
 !7 
A6 
 A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!
# A k"$  A(j @@@@@@@ - (Aq@ - )A G
  A j  - $!
 Aj ( "A! - AqE
 A jAr! - ! 
Aq!
@@@@@@@@@@ Aq"A,G@ A F
 

A	!

 
@A!

  Aj  - AqE@A!

 - !
 Aq"A"G@A! A G
A!

 A j!# A k"
$  
Aj @@@@@@@ 
- Aq@ 
- 	A"G
  
Aj  
("
AG
 
A
j( !
 
Aj( ! 
("
E@@@@@@ 
Ak 
 AЬ AE

 Aj!


 Aj!

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11251-11400
 A AE

 
A:  

 
A:  

@@@@@ 
Ak 
 
AЬ AE

 Aj!


 Aj!
 
A AE

 
A:  

 
A:  

 A6 

 A6 

 
)!!  
(
6
  !7  
6 

 A : 

 A : 
 A6  E
 


 A6 
 
A j$  - d!
 (`"AG@  ) e7P  A j(  6 W !

 

 !@@ "E@ A jA A (`"AG
 A j( ! (d! A j( !
    A jA A (`"
AG
 A j( ! (d! A j( 
6H )H!! A0j  (0"AG
 
 !7 
 6 
 6 
 6
 
 6 
 6 
A 6 

 A@k (l6  A8j )d7   64


 A@k (l6  A8j )d7   
64 A60 E

 


 A j @ (`"AG@ A j A j( 6   )d7T

 A j  (P"AF

 A8j )T7  A@k A j( 6   64
	
 E
 A0jArA A A60


 E
 A0jArA A

 
Aj )47  
Aj A<j( 6  
A6  
 6 @ 
 E

 


 A j @@ (`"AG@  )d7  Aj A j( 6 

 A j  (P"AF

 A@k (\6  A8j )T7   64A ! 
	


 (\! (X! (T!

 A j @@ (`"AG@  )d7  Aj A j( 6 

 A j  (P"AF

 A@k (\6  A8j )T7   64
	
 (\! (X! (T!
 Aj A !
 - 	! - Aq
 


 
B 7 

 
B7 

 


 A G! 


 A@k ( W6   A8j 
:    )P7 9  64 A60 E

 E
  
 E E rrE@ 
 )4!! 
A
j A<j) 7  
 !7 
A6 
 A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj  AjAr! - AqE
 - 	A G
  	Aj A(j) 7  	Aj A j) 7  	Aj Aj) 7  	 )7 

 A8j A j) "!7   )D""70 	A

-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11401-11550
j !7  	 "7 	A6 

 	B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 	B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 
 A j$ 
 
(@"AF
 
A,j 
A j( 6  
A
j 
A j) 7  
 
)T7$ 
 
)D7 
 6 
  
AjAr! 
-  AqE
 
- A G
  Aj 
A(j) 7  Aj 
A j) 7  Aj 
Aj) 7   
)7 

 
 6D
 
A8j 
A j) "!7  
 
)D""70 A
j !7   "7 A6 

 B 7 @@@  
 
(@ 
(
 
A j!

 
(@ 
(
 
A j!
 Aj( E
 ( 

 B7 @@@  
 
(@ 
(
 
A j!

 
(@ 
(
 
A j!
 Aj( E
  ( 
 
A j$  (AG@  )7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

  )7 A6  A
j A
j) 7 

# A0k"$  Aj @@ Aj"A - AqE
 @ - "A G@A
 A"G
 Aj!# Ak"$   @ ( "AF@ A6

  / ; 	 A
j - :   - !	 A
j )7  Aj 	:    6
 A6  Aj$ 

  Aj!# A k"$  Aj @@ ("AF@ - !	 Aj  ("AF

 Aj"	 - :    / ;
 - !
 (! (
!  /
; 	 A
j 	-  :   Aj 6  A
j 6  Aj 
:    6 A6 

 	@ Aj!	# A k"$  Aj @@@ ("
AF@ A
j( ! Aj( !
 (! Aj  - AqE
 - 	A G
  	A
j 6  	Aj 
6  	 6 	A6 

 )!! 	 (
6
 	 !7 	 
6 

 	A6  
E
 

 	A
6  
E
  
 A j$  (AF@ A6 Aj )7  Aj A
j( 6  A 6 

  )7 A
j Aj) 7  A6 

 Aj!	# A k"$  Aj @@@ ("
AF@ A
j( ! Aj( !
 (! Aj  - AqE
 - 	A G
  	A
j 6  	Aj 
6  	 6 	A6 

 )!! 	 (
6

-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11551-11700
 	 !7 	 
6 

 	A6  
E
 

 	A
6  
E
  
 A j$  (AF@ A 6 Aj )7  Aj A
j( 6  A 6 

  )7 A
j Aj) 7  A6 
 A j$ 
 (E
 A(j( ! A$j( ! A j( !	 (

6 A6  Aj 6  A
j 6  Aj 	6 

 A(j( ! A$j( ! A j( ! (
!	 Aj @ - Aq@ - 	A G
  Aj 6  A
j 6  Aj 6   	6 A 6 

 B 7  E
 

 B7  E
  
 A0j$  (E@ A6   )7 A
j A
j) 7 

  )7 A6  A
j A
j) 7 
 A0j$ 
 A j$ @@ (@"AG@ A,j A j( 6  A
j A j") 7   )T7$  )D7  6 A@k  (@"AG
  )7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

 A8j A j) "!7   )D""70 A
j !7   "7 A6 

 AjAr! Aj )D7  Aj ( 6  A6   6@@@@  
 Aj!

 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$  (`AF@ A8j" A j) 7   )d70 Aj! A0j!# A@j"$ @@AA"@ A A! A 6 B7  Aj" A   
 A
jA6  AjA6   6  ) 7 A6  Aj Aj( 6 @ ( AI
  Aj( E
  (
 A@k$ 

AA 
A A7 A8jA A  
 B7 A j A(j) 7  A@k A j) 7   Aj) 7   )70 A 6X B7P A j" A jA   
    6   6   
6   )P7  A
j A j( 6   A6 @@@@@@@@@@ (0
	 
 A j( E
 A j!

 A8j( E
 A0jAr!


 A8j( E

 A0jAr!


 A8j( E

 A0jAr!


 A8j( E

 A0jAr!


 A8j( E
 A0jAr!
	
 A8j( @ (4
 A j( E
	 A@k!

 A8j( @ (4
 A j( E
 A@k!

 A8j( @ (4
 A j( E
 A@k!

 A8j( E
 A0jAr!

 A(j A j) "!7  A j A j) ""7  Aj A j) "#7   )`"$7  Aj !7   Aj "7   Aj #7    $7  E
 


A
A 
 A
jA 6  A 6 B7
 A 6 AjA  
 A
jA 6  A 6 B7
 A 6 AjA  
A A7 AjA A̮  
 ( 
 
 Aj$ 
~  ( !  E@ E@   
# Ak"$   ) !A!  Aj!@@@  E@A ! 

 AkA0A7 "Aq"A
I j:   BZ@ Ak"A0A7 Aq"AI Avj:    Ak!  BT B!E



  Ak! 
  AI
   AA  
 A A   jA  k Aj$ 
# Ak"$   ) !A!  Aj!@@@  E@A ! 

 AkA0A  "Aq"A
I j:   BZ@ Ak"A0A  Aq"AI Avj:    Ak!  BT B!E



  Ak! 
  AI
   AA  

-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11701-11850
 A A   jA  k Aj$ 
  ( ! E@ E@  
A ! # Ak"$  ( !@   jA jA0A7 Aq"A
I j:    Ak!  AK Av!
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 
A ! # Ak"$  ( !@   jA jA0A  Aq"A
I j:    Ak!  AK Av!
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 
   ( " (   Aj(  

   (  

   (  
# Ak"$ @@@@  ( " ( Ak 
 Aƹ A

 A A

 A A

   Aj6
 A A
A A
 A
jA 
 Aj$ 
  ( !# A0k" $ @@@@ ( Ak 
  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  AԸ 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

  A
jA6   B7
  A 6  A 6$   Aj6,    A j6    A,j6    Aj
  A0j$ 
j@@@@  E@A!

  A N"E
   "E

A
A"E
 A 6   6  6  
 
    
A
A 
# A k"$ @  @  ( "E
  (  @ 
 A j$ 
 A
jA 6  A 6 B7
 A 6 AjA  
 A
jA 6  A 6 B7
 A 6 AjA  

 B둓س 
   ( "  (   Aj(  
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    

     E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 			
 /  A̷ /  F
	

 Aη A
  A6   A: 
	
@@ Ak 
 /  A̷ /  F


 Aη A
  A6   A: 

  A6 

  A6 

 )!   (
6
   7   6 

    AԷ A

  A6   A : 
 E
 

    AԷ A

  A6   A : 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    

     E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 

~# Ak"$  A j @@@@@@@@@@ - PAq@@@ - Q"A k#	
	 
 A"k
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 



-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:11851-12000
  A6 
	
 Aj  - AqE
 - A"G
  Aj  ("AG
 ("E@  A6 
	
 Aj(   A6 E
 

 A8j  - 8Aq@A! - 9A G
  A0j  - 4! A(j (0"A!A!@ - (AqE
  - )! Aq!@@@@ Aq"A,G@ A F
 E
A !

  A j A! -  AqE@A!

 - !!

A!A!

 Aj A! ("AF
   )7  A
j Aj( 6    6 


 AqA F@A!A!

 Aj  ("AG@  ) 7  Aj(  6  - !

 Aj A! - ! - Aq
 
A!
   :    )7   A
j ( 6     6 

  A6 

 )!   (6
   7   6 

  A6 

  A6 

  A6 

  A
6 

 A j @@ - HAq@@ - IA F@  A@k  (@!  - DAq: \  6X A j A jO (p"AF@@ - tE
 Aj (X"@@ ("AG@ Aj Aj( 6   )7

 Aj  ("AF

  ) 7`  Aj(  6 g - !

 A j A jO (p"AF
 

  ) u7`  A j(  6 g - t!

  A6 

 Aj  ("AF
   )7  A
j Aj( 6    6 

  A6 

  A6 

   )`7   A
j ( g6     :    6 

   6 
 Aj$ 
\# A0k"$  A
jA6  B7
 A 6 A 6$   6,  A j6  A,j6   Aj A0j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A 6,  A(j6   Aj6( A 68 B70 A@k" A0jA  Aj @A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
n# Ak"$    ( " Aj6   6   A
j6
 A A
A A	 AjA A A AjA A A A
j Aj$ 
n# Ak"$    ( " 6   Aj6   Aj6
 A AA A
 AjA A A
 AjA A A A
j Aj$ 
;# Ak"$    ( 6
 A AA A A
jA  Aj$ 

    ( -  AtA j( A
# A@j"$   ( !  AjA6  A,jA 6  A$jA 6    Aj64   68 B7 A 6  A 6
   A
j6<  Aj6  A<j6(  A8j6   A4j6   A@k$ 
   ( " (   Aj(  
_# A0k"$    ( 6
 A$jA6  B7 A 6 A 6,  A(j6   A
j6(  Aj A0j$ 
c# A0k"$   ( !  A
jA6  B7
 A 6 A 6$   6,  A j6  A,j6   Aj A0j$ 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A 6,  A(j6   Aj6( A 68 B70 A@k" A0jA  Aj @A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# Ak"$   6
  6@@ E@ A$jA6  B7 A 6 A 6D  A@k6   Aj6@ A 60 B7( A j" A(jA  Aj 
   )(7  A6   A
j A0j( 6 

 A4jA/6  A$jA6  B7 A 6 A 6,  6<  68  A(j6   A8j60  Aj6( A 6H B7@ A j" A@kA  Aj 
   )@7  A6   A
j A j( 6 
 Aj$ 
A A7 A jA A  
# A0k"$ @@@@@@@@@@@@@  ( Ak
	


 
 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj
	
 A
jA 6  A,jA6    Aj6 B7
 A 6 A 6   Aj6  6(  Aj6  Aj6   Aj


-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12001-12150
 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A
jA 6  A,jA6    Aj6 B7
 A 6 A 6   Aj6  6(  Aj6  Aj6   Aj

 A
jA 6  A,jA6    Aj6 B7
 A 6 A 6   Aj6  6(  Aj6  Aj6   Aj

 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A,jA 6  A 6( B7
 A 6  Aj
 A0j$ 
# Ak"$ @@@@@@@@@@@@@  ( Ak
	


 
   Aj6
 A AA A A
jA 


   Aj6
 A AA A A
jA 


   Aj6
 A A
A A A
jA 


   Aj6
 A A
A A A
jA 
	
   Aj6   Aj6
 A AA A AjA A A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A AA A A
jA 

   Aj6   Aj6
 A AA A
 AjA A A A
jA 

   Aj6   Aj6
 A A
A A
 AjA A A A
jA 

   Aj6
 A AA A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A AA A A
jA 
 Aj$ 
A  Aj( !  ( !A
A" E@A
A 
   6   6   6   
# A k"$ @ @ ( "
 A
jA 6  A 6 B7
 A 6 AjA  
 A
jA 6  A 6 B7
 A 6 AjA  
   6    )7  A j$ 
  ( !# Ak" $ @@@@@@@ ( Ak 
 A A

 A A


 A A

 A A

 A A

 A A

   Aj6
 A A
A A
  A
jA 
  Aj$ 
  ( !# A0k" $ @@@@@@@ ( Ak 
  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

  A
jA 6   A 6  B7
  A 6   Aj

-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12151-12300

  A
jA6   B7
  A 6  A 6$   Aj6,    A j6    A,j6    Aj
  A0j$ 
# A@j" $   A 6  B7   Aj"  A # A@j"$ A!@ ("AȄ A
 A
j( "(
 
 @ ("@  6
 A6  A
j6A! A6< B7, A؄ 6(  Aj68   A(jE


 ( " (A
j( 
 B둓س R
   6
 A6  A
j6A! A6< B7, A؄ 6(  Aj68   A(j

 (
! A$jA6  A
jA6   A
j6   Aj6 A6  6 A6< B7, A 6(  Aj68   A(j!
 A@k$ @ E@  (!  ( !A
A"E
  6  6  6     (@  ( 
  A@k$ 
A A7  A8jA A  
A
A 

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 
~  ) !  Aj) !# Ak" $   A'6  Aj~ B Z@  A0j B B̕  A j B Bɇ   A j B B̕  A@k B Bɇ   A j)   A(j)   A8j) "  ) |" T|"  )@|" T|   A j)    )P| T||" T|"B>! B B>

 B- BB
" Bష   ) |  A j  Aj@  P
   A jA0  (Ak  A6   B- B"B" Bష   )  |  A j  Aj BT
   A jA0  (Ak   A0r: e  A 6
 A A   ("  A jjA' k  Aj$ 
# A k"$ @@@ Aj( "AK@@@ Ak"  ( "j(  "At AtAqr AvAq Avrr"k" M@ (! 
 ! !A!A !

A A!A  
  I
@  k"E@A!

 A N"E
  "E

   j  !
   6
   6   6   6   Aj 6   Aj    I6  A j$ 
 A
jA 6  A 6 B7
 A 6 AjA  
# A0k" $    6   6   A
jA6   A,jA6   B7
  A 6  A6$    A j6    Aj6(    6   AjA  
 
   
 At!@@@@@ E@

 Aj! !@   ( j"K
 Aj! Ak"
 

 Aq G
   Atj"M@@ E@A!

 A N"E
  "E

A !  A 6   6   6  @  j!@ Aj( "AvAq Avr! ( !   ( kK    X  (!  (  
 j      j"6  ( kAM@   AX  (!
   Aj"6   ( "j AtAq Atr r6   Aj" G
 


A A
A  
A A
A  
A A!A  
 
   
*AA"E@AA 
  B7   6 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A!@@ B
Z@A!@ Ak" K
 Aj j B
"B
A0r:   B T ! !E
 
 AO

A k" ( ("kK@    (!
 (  j Aj j   A 6    j6 A j$ 
A A!A  
 AA  

# Ak"$  (" (F   ( 
 ( jA":    (Aj"6 A 6
@ E
   j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
! @@@@@@@@ Ak 
 A G@ A G



 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA":   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12301-12450
 ( jA :   (Aj

@@ A O@ AI
 AO
  A?qAr: 
  AvAr: 
A

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA0:    (Aj"6 ( F   ( 
 ( jA0:    (Aj"6 Aq"A
I! ( F   ( 
 ( j AqAvA0r:    (Aj"6 ( F   ( 
 ( j A0r A7j :   (Aj

 ( F   ( 
 ( j :   (Aj

 AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!  ( kK@    (!
 (  j A
j   j
"6  G
 

 ( F   ( 
 ( jA":    A 6   (Aj6 Aj$ 
I ( ("kAM@  A (!
  A 6   Aj6 (  jA6  

      
R  (" (F   ( 
 ( jA :     6  A 6   AjA:    (Aj6
T (" (F   ( 
 ( jA :     6  A 6   AjA:    (Aj6
~# A k"$  (" (F   ( 
 ( jA :    (Aj6 Aj   @ (E@ (" (F   ( 
 ( jA::    (Aj"6 ( F   ( 
 ( jA :     6  A 6   AjA:    (Aj6

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
A  (" (F   ( 
 ( jA :    A 6   (Aj6
v  (" (F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :    A 6   (Aj6
   A:    6 
 @ @@@@@ A N@ (
 
A!



 ("E@ E@A!

 A

 (  A 

 A
"E

   6  Aj 6   A 6 
   6  AjA6   A6 
   6
  AjA 6   A6 
# A k"$ @@ Aj"E
   Aj( "At"   I"A AK"AsAv!@ @ A6  6   ( 6

 A 6
    Aj (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
# A k"$ @@   j"K
   Aj( "At"   I"A AK"AsAv!@ @ A6  6   ( 6

 A 6
    Aj (! ( E@   6   Aj 6 

 Aj( " AxF
  E
     
 
 A j$ 
   A 6   6   6 
)  (Aj"@   6
A A
A  
_   ("  ("I@ ( !@A   j-  A	k"AKA tAqEr
   Aj" 6   G
 

A
6 
A!@ (" ("O
  ( !@@@@@@A!@  j-  "A	k$    
A!  Aj"6  G



 A G
 Aj"E
  6  A6 
 Aj"E
  6  O
@  j-  "A	k"AKA tAqEr
  Aj"6  I
 


A A
A  
A A
A  
 A G
   A6 
   6 
@@@@ (" ("I@ ( !@A!@  j-  "A	k$    
  Aj"6  G
 

A!

 A G
 Aj"E
  6  A6 
  A6 
A A
A  
   6 
A!A ! (! (!@ ( "@@ E@  A6 
  O
 -    Aj"6  j Ak! Aj! !-  F

-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12451-12600
 

 
  O
   Aj6  A
6 
  A
6 
@@ (" ("I@ ( !@A!@  j-  A	k2    
  Aj"6  G
 

A!
   6 
 Aj"E@A A
A  
  6  A6 

~# A k"$ @@@@@@ ("	 ("I@ (  	j!
@  
j-  "A G@A  A"G
 AqE
A 

A! As
!   	jAj6 	 Aj"j I
 

  A6 

   	j"Aj6@ E@  	I
  K
 Aj 
  (
  Aj )7   B7 

  	I
  K
 Aj!
A !A !A !A !	# A0k"$ @@@@@@@@@@ Aj "E@ A 6  6 A6  A 6 A 6A

 A H
 A"E
 A 6  6  6  A 6 A 6@ 
-  "A I@A !

@@@@@@@@ AqE@ 

 A G
A!
A !

@ A0kAqA
I
 A
! A k&      

























      

 AK
 Aj j :  A! Aj"AG
 ("A0k"AqA
I
 A kAqAI
 A kAqAO
 A k!

A!A
!A!
@@@@@@ A"kT   

 ( F   ( 
 ( j :   (Aj!
	
 ( F   ( 
 ( jA:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA	:   (Aj!

 
@A!


 ( F   ( 
 ( j :   (Aj!A !


 AA  
 A7k!
@ Av"A0k"
AqA
I
 @ A kAqAO@ A kAqAO
 A k!


 A7k!




@ Av"A0k"AqA
I
 @ A kAqAO@ A kAqAO
 A k!

 A7k!



@ Av"A0k"AqA
I
 @ A kAqAO@ A kAqAO

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12601-12750
 A k!

 A7k!



 
At A
tr AqAtr" Aqr!@ AqAG@ Aq"AsAI"E
A
!
	
@ 
@ AqAO
A!


 AqAK
A !A!
 !	

 	AqAk"Aq" G

A! A jAq A
trAj"AsA kAI A Fr
  A?qAr:   AvA?qAr:   A
vA?qAr:   AvAqAr:  ( kAM@  A (!
 (  j (6  A !
 Aj

A   "AO@ AO@  A?qAr:   A
vAr:   AvA?qAr: A

  A?qAr:   AvAr: A

  : A
!  ( kK@    (!
 (  j Aj   j
!A !
  6
A !A !

 
Aj!
 Ak"
 
A
! 

A! 

 (! ( 
"  (@ A j1  B B R

 
 6 
A
j 6  
Aj 6 A!

A!
 
 6  (E
 ( 

A! E
  
 
 6 
 A0j$ 

A A!A  
 A 
 
 A,jA 6  A 6( B7
 A 6 AjA  
 ("AF@ Aj A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7   6 

  A6 
 A j$ 
 	 A  
  A  
 	 A  
  A  
m@ (" ("I@ ( !A!@  j-  "A	k"AKA tAqEr
  Aj"6  G
 

A !
   :    :  
3   (" ("I (  j-   
:     I:  
# A0k"$ @@@@@@@@@@@@@@@@@@@@@  ( Ak	



 
 A 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A 6(A7


 A 6(A'


 A 6(A8


 A 6(A8


 A 6(A.
	
 A 6(A

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

   Aj( 6(  A

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12751-12900
j( 
!  A
jA6  A 6$   6, B7
 A 6  A(j6   A j6  Aj A0j$ 
A  (" (F   ( 
 ( jA :    A 6   (Aj6

   ( ( " (   Aj(  
# A0k"$ @@@@  (" 
# Ak" $   A 6  A6  A 6 # Ak"$  Aj  Aj( 6    ) 7 # Ak" $    ) 7  AjA A  (A 
 A,jA 6  A 6( B7
 A 6A  Aj
 At!  ( ! @@   6 @ A 6, A 6( B7
 A 6  Aj

 A6, B7
 A 6 A6  6(  Aj6   Aj
  Aj!  Ak! Ak"
 
A 

A

 A,jA6  B7
 A 6 A6   ( 6   6(  Aj

 A
jA6  A,jA6  B7
 A 6 A6   ( " 6    Aj6  6(  Aj
 A0j$ 
   ( " (   ( 

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 

 Bȅ
!@  ("E
   Aj( E
  

# Ak"$   ( ! @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  (F@   W  (!
   Aj6  (  j :  

 AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!   Aj(   ("kK@    X  (!
  (  j A
j     j6
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
J   ( " Aj(   ("kK@    X  (!
  (  j      j6A 
@@@@ A	O@AA K


  !

AA!
AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K k  M
  A  AjAAAk  KA"jAAjAk"E
  ! @ Ak" qE@  !

  jA  kq!AA!   A     k Kj"  k"k!  E@        

  ( !   6    j6 
 
 "AA jM
  !       k"   

 
  
!~# Ak"$ @@  AO@AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K  M
  AjA!A ( E
A  k!@@A  AI
 A AK
  A Avg" kvAq  AtkA>j
"AtA j( " @  t!A !A !@@  " I
   k" O
   ! "
 A !

  Aj( "     A
vAqjAj( " G  ! At!  
 
 @ ! 

 

A !A tA ( q" E
  hAtA j( " E

@     " O  k" Iq"!   !  " 
 
 E

 A ( " M    kOq
  !  @AA M@      AO@   

 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6

   j
 "E


A  AjAAAk  KA!@@@@@A ( " Av"v" AqE@ A ( M
  
A ( " E
  hAtA j( " k! " @@   k"   K"!    !  " 
 

  ! AA K
    A ( "E
 AxqA j! A ( !A ( "A Avt"qE
  (

@  AsAq j" At"A j( "Aj( " A j"G@  6
  6

A  A~  wq6 
   At !

@A Aq"t   tqh" At"A j( "Aj( " A j"G@  6
  6

A A ( A~  wq6 
    "  At k"A ( "@ AxqA j! A ( !A ( "A Avt"q@  (

A   r6   

-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:12901-13050
!   6  6
   6
  6
A  6 A  6  !

A   r6   
!   6  6
   6
  6
A  6 A  6 

   j
 "

@@@@@@@@ A ( "K@A ( "  K
AA jAAjAAjA"Av@ !  A 6 A  A|q  AF"6 A   At 6  ( "
A !
	
A ( ! AA  k"K@A A 6 A ( !A A 6      !
	
   !A  6 A  6        !

 (!A  ("A ( j" 6 A A ( "     I6 @@A ( @A ! @   F
  (" 
 


A ( " E   Kr


  
    G
   ( "A ( "M   (j KA 


A A ( "     I6   j!A ! @@@   ( G@  (" 



  
    F

A ( !A ! @@   ( O@   K

  (" 
 
A ! 
   "AA"kAk" "A k  j"   AA jI"!  ! AA!	AA!
AA!
A   "
A 
k"
"
6 A  Aj 
 	 
jj 
jk"	6  
 	Ar6AA!
AA!
AA!
 
 	 
 
 
Akjj6A A6   A ) ! AjA ) 7   7 A  6 A  6 A  6 A  6 @  A  A6" Aj I
 
  F
   k"      AO@   

  AxqA j!A ( "A  Avt" q@ (

A    r6  
!   6   6
  6
   6

  ( !   6     ( j6 " A! "A!    kj" !     kj"   jk!A (   G@  A ( F
  (AqAG
@  "AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
  j!   ! 

A  6 A A (  j" 6    Ar6 !

A    k"6 A A ( "  "6   Ar6     !

A  6 

    ( j6A (  j!A ( "   " A  k"! A   k"6 A   6    Ar6AA!AA!AA!      Akjj6A A6 

A  6 A A (  j" 6     !

     AO@   !

 AxqA j! A ( "A Avt"q@  (

A   r6   
!   6  6
   6
  6 !

A A6 A  6 A  6 A  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 AA!AA!AA!A   " A  k"" 6 A  Aj   jj jk"6    Ar6AA!AA!AA!      Akjj6A A6 
A !A ( "  M
 A    k"6 A A ( "  "6   Ar6     !
 Aj$  
   !@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
 @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

 AO@   
 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
  (!@@    (
F@  AA  Aj"( "j( "
A !


-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13051-13200
  ("  (
"6
  6

   Aj !@ ! "Aj"( "E@ Aj! (!
 
 
 A 6 
@ E
 @    (
AtA j"( G@ AA (  Fj 6  


  6  
 A A ( A~  (
wq6 
  6  ("@  6  6
  Aj( " E
  Aj  6    6

  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtA j!@@@@A ( "A t"q@ ( ! !  G
 !

A   r6    6 

  t!@  A
vAqjAj"( "E
 At! " G
 

 ("  6
   6   6
   6  A 6
   6 
   6    6    6

`
A ( "@A !@ "(! (! ( ! A
j(  ! Aj! 
 

A  A AK6  
  "   "!@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
@ @    

@@@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( F


 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

A A 6 A A 6 
A (  O
AA! AA!AA!A AAAtk"A|    jjkAwqAk"    KE
A ( E
AA! AA!AA!A @A ( "    Akjj"M
 A ( !A ! @@   ( O@   K

  (" 
 
A ! 
  
   A
j( 
 
A kG
A ( A ( M
A A6 
 AI
   A A ( Ak" 6   
 

 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
i # A0k"$ A -  @ A
jA6  B7
 A 6 A6$   6,  A j6  A,j6  AjA  
 A0j$ 
# A k" $ @A ( Aq@A ( 

A ( A A6 E@A ( !A A 6 A ( !A A6 A A 6 @ E
   (   Aj( E
  Aj(  
  A j$ 
 
  A
jA 6   A 6  B7
  A 6  AjA  
~# A0k"$  Aj! (E@ ( ! Aj"A 6  B7  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj ( 6   )7 
 A j" Aj( 6  A
jA 6  ) ! B7  7A
A"E@A
A 
  )7  Aj ( 6   A 6   6  A0j$ 
# A0k"$  Aj! (E@ ( ! Aj"A 6  B7  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj ( 6   )7 
  A 6   6  A0j$ 
F (! ( !AA"E@AA 
  6  6   A 6   6 
   A 6   6 
# A k"$ A A ( "Aj6 A A ( Aj"6 @@ A H AKr
   :   6  6A ( "A H
 A  Aj"6 A A ( "A (     (   ) 7 Aj ( A (  
Ak6  AK
  

 
# Ak"$   6
   6 
    jAkA  kq
   At" A   kr

 A   k  q
 A A  Avk  AF

   (Axq

   - AqAv

   (Aq

   - AqE

-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13201-13350
'     (Aq rAr6   j"   (Ar6

    Ar6   j"   (Ar6

    Ar6
    Ar6   j 6 
#   (A~q6   Ar6   j 6 
    j
    k
   Aj
   Ak
  ("   Aj( 


   (
Aq

   (
Av

   (   (j
  ( !# Ak" $    6    Aj6 (A A	 A
j( (
 !  A : 
   : 
   6  AjA A
  A A A	  AjAȚ !  - 
"  - 
E
 A 
  ( "-  AqE@ (A A A
j( (
 

 (A A A
j( (
 
  Aj$ AqA G
~# Ak"$   ( " Aj( !  ( !  (A
 A A
j( (
 ! A :   :   6  @@   6
 A
j!# A@j"$ A!@ - 
  - !@@@ ( "( "AqE@ 


 
A! (A A A
j( (
 
 ( !

A! (A A A
j( (
 E


A! A:  A4jA 6   6  )7  Aj6 )! )!	  -  : 8  (6
  	7(  7   Aj60  AjA (   
 (0A A (4(
 !

  A (   !
 A:   :  A@k$   Aj!  Ak"
 

 - A ( " Aj( Aԅ A  A
j( (
 
 Aj$ 
  ( !  E@ E@   
# Ak"$   -  ! @  jA jA0A7  Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO@  AA  
 A A  jAjA  k Aj$ 
# Ak"$   -  ! @  jA jA0A   Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO@  AA  
 A A  jAjA  k Aj$ 
   (  A 
# Ak"$ @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  (F@     (!
   Aj6  (  j :  

 AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!   Aj(   ("kK@      (!
  (  j A
j     j6
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
K   ( " Aj(   ("kK@      (!
  (  j      j6A 
    A ( " A    
@# A k" $   A
jA 6   A 6  B7
  A 6  AjA  
# A k"$  A(j" 6  6   )(70 A j A0j@ (P@ A j A j) 7   )P7` A j A j" ($! ( ! Aj  (
E@   6  A 6   Aj 6 

@@@ E@A!

 A H
 A"E

 A 6@  68  6<  I A8jA   (@! (8 
 j     j"6@ (< kAM@ A8j A (@!
 (8" j"À /  ";   AjA΀ -  ":    Aj"6@  )07H A j A j (P@@ A j A j) 7   )P7` Aj A j (! (" (< kK@ A8j   (@! (8!
  j     j"6@ Aj A j (
@ (< kAM@ A8j A (@!
 (8" j" ;   Aj :    Aj"6@
 A j A j (P
 

   )87   Aj A@k( 6 

 A 
 
  A 6  A 6   AjA 6 
 A j$ 
# A0k"$ @@@@@ ("@ ( ! AkAq"Aj"Aq! AI@A ! 

 A<j! Aq!A !@ (  Ak(  Ak(  Ak(  A k(  A(k(  A0k(  A8k(  jjjjjjjj! A@k! Ak"
 
 A<k
! @ Aj!@ (  j! Aj! Ak"
 

 Aj( 
 !

A ! Aj( 
A!

 (

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13351-13500
  AI

  j" I

 E
 @ A N@ A"E
 !

 
 A 
A!A !
  A 6   6   6    6
 A j Aj) 7  Aj Aj) 7   ) 7 A
jA  Aj@A A3 A(jA A  
 A0j$ 
h ( !@@@ Aj( "E@A!

 A H
 A"E

   !   6   6   6 
 
 A 
S# Ak"$    6   A
j6
 A A
AЁ A AjA AՁ A A
jA܁  Aj$ 
   ( @
 
 
# A k"$  A:   6   6 A 6
 A 6# Ak"$ @ Aj" (
"@  ("E
  6   6  6 # Ak" $   Aj Aj( 6    ) 7 # Ak"$   ( "Aj( !@@@ ( 
 
A !A 

 
 ( "(! ( 
!  6  6  A   ("(  ( -  
 A 6  6  A   ("(  ( -  
A A+A  
A A+A  
o# A0k"$   6   6  A
jA6  A,jA6  B7
 A 6 A6$  A j6  6(  Aj6  Aj  
o# A0k"$   6   6  A
jA6  A,jA6  B7
 A 6 A6$  A j6  Aj6(  6  Aj  
o# A0k"$   6   6  A
jA6  A,jA6  B7
 AЉ 6 A6$  A j6  Aj6(  6  Aj  
@@  ("
AG  ("AGqE@@ AG
   j!	  Aj( Aj! !@@ ! Ak"E
   	F
 ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F
 Aj
"  kj! A G



  	F
  ,  "A N A`Ir ApIrE@ AqAtA q - A?q - A?qAt - A?qA
trrrA F

@@ E
   M@A !  F


A !  j,  A@H

 !
   !   !
 
E
  A
j( !@ AO@  !

 E@A !

 Aq!@ AkAI@A ! !

 A|q!A ! !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

  I@  k"!@@@A   -  " AFAq"Ak 
A ! !

 Av! AjAv!
 Aj!  A
j( !  Aj( !  (! @@ Ak"E
    (  E
 
A
A!  A F
    (
 
A !@  F@A 
 Aj!    (  E
 
 Ak I


  (    A
j( (
 !
 
  (    A
j( (
 
H# A k"$  AjA 6  A 6 B7  6
   6  Aj6    
o# A0k"$   6   6  A
jA6  A,jA6  B7
 A 6 A6$  A j6  Aj6(  6  Aj  
%    -  At" A j(   A j( 

   5  
# Ak"$ @@@@ ( "AqE@ A q
  5  ! 

  ( ! A !@  jA jA0A   Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO
 A A  jAjA  k! 

  ( ! A !@  jA jA0A7  Aq"A
I j:   Ak!  AK  Av! 
 
 Aj" AO
 A A  jAjA  k! 

  AA  
  AA  
 Aj$   


-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13501-13650
# A0k"$  A$j 6  A: ( B7   6  A 6 A 6@@ ("
E@ Aj( " E
 (!  At!  AkAqAj! ( ! @  Aj( "@ (   (   ($(
 

 (  Aj Aj(   
 Aj!  Aj!  Ak"
 


 A
j( " E
   At!
  AkA?qAj! ( ! @  Aj( "@ (   (   ($(
 

   
j"A
j-  : (  Aj) B 7 Aj( ! (!A !	A !@@@ Aj( Ak 
 At j"
Aj( AG
 
( ( !
A!
  6  6 Aj( !@@@ A
j( Ak 
 At j"Aj( AG
 ( ( !
A!	
  6
  	6  ( Atj"(  Aj (  
  Aj!  
 A j"G
 

 ( K@ (  (  Atj" (   ( ($(
 

A 

A
 A0j$ 
o# A k"$ A!@   
  A
j( ! ( A 6
 A 6 B7
 A 6  Aj
   Aj !
 A j$  

 BϗL
@ E
 A  Ak"  I!	 AjA|q k!
A !@@@@@@@@@@  j-  "AtAu"A N@ 
 kAq 
AFr
  	I


A!A!@@@@@@@@ A j-  Ak 
 Aj" I
A !


A ! Aj" O

  j,  ! Ak"E
 A
F


  Aj"M@A !


  j,  !@@@ Ak    
 AjAqAK@A!

 A H
	A!


 A jAqA0I
	


 AJ


 A`qAG
	

 AN


@ AjAqA
O@ A~qAnG@A!


 A H
A!


 AJ


A! A@O

A ! Aj" O
  j,  AL
A!A!

  j,  AJ


 Aj!

@  j"( Axq
 Aj( Axq
 	 Aj"K
 


A! A@O

  Aj"M@A !

  j,  AJ@A!A!

A ! Aj" O
  j,  AL
 A!A!

 Aj!

A!
   6  A	j :    Aj :    A6 
  M
 @  j,  A H
  Aj"G
 


  K
 

   6  Aj 6   A 6 
~# A@j"$ A!@  - 
   - !	  ( "( "AqE@ (A A  	AA 	 A
j( (
 

-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13651-13800
 (   (
(
 
 (A A (
(
 
   (
  !

 	E@ (A A A
j( (
 
 ( !
 A:  A4jA 6   6  )7  Aj6 )!
 )!
  -  : 8  (6
  
7(  
7   Aj"60   
  AjA A
   Aj (
  
  (0A A (4(
 !
  A:    :  A@k$   
c# Ak"$   6
   6# A k" $   AjA6   B7  A 6   A6
   Aj6    Aj6    
    (   (
\# A k"$  A
j( ! ( Aj  ( " Aj) 7  Aj  Aj) 7    ) 7  Aj A j$ 
    ( " (   (
   (    ((
  
W# A k"$  A
j( ! ( Aj  Aj) 7  Aj  Aj) 7    ) 7  Aj A j$ 
# A@j"$   6
   6  6  6 A,jA6  A<jA6  B7
 A 6 A64  A0j6(  Aj68  Aj60 Aj  

# A0k"$  A
6( B7   6
 A 6  6  6  6
 A 6  (!
  ( !
  (!
@@ E@@  I
 @  j!  k"AO@@@@@ AjA|q"  F
    k"     I"E
 A ! A!@   j-  A
F
   Aj" G
 
  Ak" K


 Ak! A !
@@  j"
( A s"As AkqAxq
  
Aj( A s"As AkqAxq
  Aj"  M


  M
   A  
A !  G@@  j-  A
F@ ! A!

  Aj"G
 

 ! 
   6  6  (!  ( 

A ! A  E
 @A   j-  A
F
   Aj" G
 
 ! A 
AG@ !

@   j" Aj"E  Ir
    j-  A
G
 A ! "! 

  O
 

A! "  	"G

A 

@ 
-  @ 
A A 
(
 

  	j!   	k! 
   	G  jAk-  A
FA 
:   !	 
   
(
 E


A
 A0j$ 
~@@ ( "AN@  BX@  B/V
 !

  Ak"6   j"Ak    B" B~}"B "	B AtA j/  ;   Ak B B AtA j/  ;   Ak B=B AtA j/  ;   A
k B/A pAtA j/  ;   A
k Bȯ%A pAtA j/  ;   Ak B
AqA pAtA j/  ;    j B郱AqA pAtA j/  ;    	B ~}

Aʇ A
A  
  j"Ak    B/" B/~}"A n"A pAtA j/  ;   Ak A nAqA pAtA j/  ;    Ak"j A=nAqA pAtA j/  ;    A lk
!  jAk AtA j/  ;  
@  "A M@ !

  Ak"j  A n"A lk"AqA n"AtA j/  ;    jAk  A lkAqAtA j/  ;  
@ Aq"A M@ !

  Ak"j  A n"A lkAqAtA j/  ;  
 AqA
O@  Ak"6   j AqAtA j/  ;  
  Ak"6   j A0j:  
A+A   ( "	Aq"!
  j!@ 	AqE@A !

@ AO@  !

 E
  Aq!@ AkAI@ !

 A|q!
 !@  ,  AJj , AJj , AJj , AJj! Aj! 
Ak"

 

 E
 @  ,  AJj! Aj! Ak"
 

-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13801-13950

  j!
@@  (E@A!  Aj( "  A
j( "  
  


@@@@   A
j( "I@ 	Aq
  k"!A  -  " AFAq"Ak
A!  Aj( "  A
j( "  
  


A ! !

 Av! AjAv!
 Aj!  A
j( !  Aj( !  (! @@ Ak"E
    (  E
 
A
A!  A F
   
  
    (
 
A !@   F
 Aj!    (  E
 
 Ak
 I!

  (!
  A06  -  !
A!  A:    Aj( "  A
j( "	 
  
   kAj!@@ Ak"E
 A0 	(  E
 
A
A!    	(
 
    
:     
6A 
 
     (
 
# Ak"$  A 6
   A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
 Aj$ 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
   (   
# Ak"$   (  A 6
 A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
4   A:    B7    6  A 6  A 6  A
j 6 
@@  AjA|q"  k" K AKr
   k"AI
  Aq!A !@   F
  Aq!@   AsjAI@  !

 A|q!  !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

   j! @ E
    A|qj",  AJ! AF
   , AJj! AF
   , AJj!
 Av!  j!@  ! E
 A AI"Aq! At!@ Aq"E@A !

  Atj!	A !@  E
   ( "AsAv AvrAqj  Aj( "AsAv AvrAqj  Aj( "AsAv AvrAqj  A
j( "AsAv AvrAqj!  Aj"  	G
 

  k!  j!  AvAq AqjAlAv j! E
 
A  E
   Atj"( " AsAv  AvrAq"  AF
    (" AsAv  AvrAqj"  AF
    (" AsAv  AvrAqj
" AvA
q  AqjAlAv j
 E@A 
 Aq!@ AkAI@

 A|q!@   ,  AJj  , AJj  , AJj  , AJj!  Aj!  Ak"
 

 E
 @   ,  AJj!  Aj!  Ak"
 

 
9 @ A G@A    (  

 
A 

     (
 
# A k"$   6
  6@@@@ @@ AO@@   j Ak!Aj,  AL
 
 Aj" I
 Ak G
  6

-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:13951-14100

  6
   6A !A 

   jAj,  AL
  6   6A !A
6
  6@  I"  IrE@@@  M@@@ E
   M@  F


   j,  A@H

 !
  6   "I@ Aj"A  Ak"  I"I
   j   jk!@ Ak!   j Ak!,  A@H
 
 Aj!
@ E
   M@  F



   j,  AL
	
  F
@   j",  "A H@ - A?q!  Aq! A_K
 At  r! 

  Aq6$A

 - A?q  Atr!  ApO
   A
tr! 

 A jA6  A jA6  A jA6  A jA6  B74 A 60 A6L  A j6@  Aj6`  Aj6X  A
j6P  Aj6H

 AtA q - A?q  Atrr" A F

   6$A  AI
 A  AI
 AA  AI
!   6(    j6, A jA6  A jA6  A jA6  A jA6  A jA6  B74 A̍ 60 A6L  A j6@  Aj6h  Aj6`  A(j6X  A$j6P  A j6H

    6( A jA6  A jA6  A jA6  B74 A 60 A6L  A j6@  Aj6X  Aj6P  A(j6H

  A  
   A    
A A+  
       
 A0j  
   (    A
j( (
 
W# A k"$   A
j( !  ( Aj Aj) 7  Aj Aj) 7   ) 7  Aj A j$ 

   -  AqAv

   -  A qAv
# Ak"$   (    A
j( (
 ! A : 
  : 
   6 Aj    ! - 
"  - 
E
   Aq!A 
  ( " -  AqE@  (A A  A
j( (
 

  (A A  A
j( (
 
 Aj$ AqA G
# Ak"
$   (    A
j( (
 ! 
A : 
 
 : 
 
  6 
Aj       	 
! 
- 
"  
- 
E
   Aq!A 
  ( " -  AqE@  (A A  A
j( (
 

  (A A  A
j( (
 
 
Aj$ AqA G
# Ak"$   (    A
j( (
 ! A : 
  : 
   6 Aj       	 
 
 
 
A !  - 
" - 
E
 A 
   ( " -  AqE@  (A A  A
j( (
 

  (A A  A
j( (
 
 Aj$ AqA G
@@ ("
A" A
j( "
("  E@@ E@

   j!  !@@@ ,  "A N@ Aj!	 Aq!

 - A?q! Aq! A_M@ At r! Aj!	

 - A?q Atr! Aj!	 ApI@  A
tr!

 AtA q 	-  A?q Atrr"A F
 Aj!	
A0!A !@@@@@@@@ # 
 A F

 E
 ArgAvAs

A !

A !

A !

 !


-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14101-14250
A ! ! 
 ArgAvAs
! !
@@ A k"
A 
AIAF
   K
@ E
   M@  F


   j,  A@H

@ E
   M@  G


   j,  AL

 
   j  k 
(
 @A
A!@ !
 !
A !A !@@@@@@ 
A k"A AIAk 
A !A ! 
!@@@ 
AqAk 
A!A !

A!A !

A!A !

A ! "A G

A AI
 A AI
 AA AI
 j!

 
A !A0A  
 AtvAq"A
I j! AkA  !
 
!
 
    E
 
A
  k 	j! 	" G



     A  
 E@A !

  M@  F


   j,  AL

 
   j  k 
(
 E

A
 
A"   
     A  
  A
t!A !A !@@@@A Av j"AtA j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@@ AM@ At!A! AG@ A j( Av!
A !  Ak"O@ A O
 AtA j( A q!
  A j( Av"AsjE
   k! A AK! Ak! A !@@  G@  A j-  j" M


 AA  
   Aj"G
 
  !

 A A  
 A A  
 Aq
 @  A I
 @A  A I
   AI
@  AO@  A˦
kA+I  A
kA
Ir
  A
kAI  A
kAIr
  A~qA
F
  A`qA
G


  A A*A۔ AA A
A   A
kAI
   A kAtI

  A A(A AAؑ A
A 

     
A!@ ("A' A
j( ("  
 A !A0!@@@@@@@@  ( " ( 
  A F

  E
  ArgAvAs

A !

A !

A !

  !

A !  @  !

  ArgAvAs
!  !
A!@ ! ! A !A !@@@@@@  A k"A AIAk 
A !A !  !@@@ AqAk 
A!A !

A!A !

-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14251-14400

A!A !

A ! ! A G

 A'   !

 A !A0A    AtvAq"A
I j! AkA  !
  !
     E
 
A
 

   1   

    ) 7 

    )7 
 ("@ ( !@@ Aj!   j-  "AtAu"A N
 @@@@@@@ A j-  Ak 
  jA   I-  AqAG
 Aj

  jA   I,  ! Ak"E
 A
F


  jA   I,  !@@@@ Ak    
 AjAqAK A Nr A@Or


 A jAqA0O


 AJ

  Aj"jA   I-  AqAG
  Aj"jA   I-  AqAG
 Aj

 A`qAG


 AN


 AjAqA
O@ A~qAnG A Nr A@Or


 AJ

  Aj"jA   I-  AqAG
 Aj
"" I


   6   6    k6   j6     k6
    j6
  A 6 

   )  
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -   Aj! 
G
 
A !	

  AȎ  
  AȎ  
 ! 
" 
G
 

 E
   j!  Aq!@@ Aj!  -  "AtAu"A N     F
 -  A qAtr! Aj
!  k"A H
 	As!	  G



A A+A؎  
 	Aq
~# A0k"$ A'!@  B T@  !

@ A	j j"Ak    B "B ~}"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  B/V ! 
 

 "A K@ Ak" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
O@ Ak" A	jj AtA j/  ;  

 Ak" A	jj A0j:  
 A A  A	j jA' k A0j$ 

  (A A A
j( (
 
  ( -  !# Ak"$ @@@@ ( " AqE@  A q
 B !

A ! @   jA jA0A  Aq"A
I j:    Ak!  Aq"Av! AK
 
  Aj"AO
 A A   jAjA   k!

A ! @   jA jA0A7 Aq"A
I j:    Ak!  Aq"Av! AK
 
  Aj"AO
 A A   jAjA   k!

 AA  
 AA  
 Aj$  

   (  
~# A k"$   ( "-  E@ (A A A
j( (
 

A!   Aj6
  (A A A
j( (
 :   6 A :  A 6 A
j!# A@j"$  Aj" - @ (!A

 (! ( "( "AqE@A (A A  AA  A
j( (
 

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14401-14550
  AЅ (   

 E@ (A A A
j( (
 @A !A

 ( !
 A:  A4jA 6   6  )7  Aj6 )! )!	  -  : 8  (6
  	7(  7   Aj60A  AjAЅ (   
  (0A A (4(
 
:   Aj6 A@k$  ! - !@ ("E@ ! 

 
  ( !@ AG
  - E
  -  Aq
  (A A A
j( (
 

 (A܃ A A
j( (
 ! 
  AqA G
 A j$ 
  A
t!A#!A#!@@@@A Av j"AtAؚ j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@@ A"M@ At!A! A"G@ Aܚ j( Av!
A !  Ak"O@ A#O
 AtAؚ j( A q!
  Aؚ j( Av"AsjE
   k! A AK! Ak! A !@@  G@  A j-  j" M


 AA  
   Aj"G
 
  !

 A#A  
 A#A  
 Aq
  A
t!A!A!@@@@A Av j"AtA̢ j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@@ AM@ At!A! AG@ AТ j( Av!
A !  Ak"O@ AO
 AtA̢ j( A q!
  A̢ j( Av"AsjE
   k! A AK! Ak! A !@@  G@  A j-  j" M


 AAإ  
   Aj"G
 
  !

 AAإ  
 AA  
 Aq
 AK@  A   kAq"j! @@   :    Aj"  I
 

   k"A|q"j!  A J@ AqAl!@  6  Aj"  I
 

 Aq!
 @   j!@   :    Aj"  I
 


@ "AM@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq"@ A L
 A|q"Aj!A  At"	kAq! ( !@   	v ( " tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 @  j!@  -  :   Aj! Aj" I
 

  
h~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||  ~|7
C@ E
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 


 A 
:denomamountblocktransactioncontractheighttimechain_idsenderfundsaddressdescriptiondenom_unitsbasedisplaynamesymbolexponentaliasesindexfromdenomsnew_addressaddressestometadataullmanagerallowed_mint_addressesexisting_denomsnew_denomsdecimalsinitial_balances    
               a Display implementation returned an error unexpectedly              /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs ` K   	  	   config      methodexecute_transfer_adminnew_adminexecute_mintto_addressdenomsexecute_burncrates.io:tokenfactory-core0.0.4factory/Denom must start with 'factory/'/  9    a    instantiateremove_denomadd_denomremove_whitelistadd_whitelistexecute_set_metadatadenomexecute_force_transferDenom not found in balanceexecute_burn_from InstantiateMsgmanagerallowed_mint_addressesexisting_denomsnew_denoms    !    7    F 
   NewDenomnamedescriptionsymboldecimalsinitial_balances   x    | 
               InitialBalanceaddressamount         get_configget_balanceget_all_balances    
    
           denom       D    blocktransactioncontractheighttimechain_idsenderfundsaddressindexerrorokEmpty   	   
      
   
      a Display implementation returned an error unexpectedly 
             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs 
 K   	  	   
          
         WasmQuerycontract_infocontract_addrrawkeysmartmsg      
               a Display implementation returned an error unexpectedly              /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs  K   	  	   , Coindenomamount   v    {    wasmcustombankcalled `Result::unwrap()` on an `Err` value                /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.3.3/src/exports.rs  [      
    [   w   
    [      
   EventtypeattributesAttributekeyvalueResponsemessageseventsdataContractVersioncontractversioncontract_info    
      
               a Display implementation returned an error unexpectedly              /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs @ K   	  	            
   
   
   denoms      addresses    	   denommetadata           fromto              new_address     	 
           address D	        burnmintburn_fromtransfer_adminforce_transferset_metadataadd_whitelistremove_whitelistadd_denomremove_denom \	    `	    d	 	   m	    {	    	 
   	 
   	    	 	   	 
   Configmanagerallowed_mint_addresses 

    %
        Querier system error:   T
    Querier contract error: t
    Serializing QueryRequest:   

-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14551-14700
    "         #   $   %   &   "         '   $   (   )   Metadatadescriptiondenom_unitsbasedisplaynamesymbol 
 
   
 
   
    
    
    

    DenomUnitdenomexponentaliases   ]
    b
    j
    *          +   ,   -   wasmcustombankBankMsgburnamountsendto_addressWasmMsgclear_admincontract_addrupdate_adminadminmigratenew_code_idmsginstantiatecode_idfundslabelexecuteassertion failed: mid <= self.len()attempt to join into collection with len > usize::MAX/rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/str.rs   
 H         
 H         /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/slice.rs  
 J         1          2   3   4   5   6   7   1          8   9   :   ;   <   =   >   ?   1          @   BankQueryall_balancesaddressbalancedenomBalanceResponseamount   
    SubMsgidmsggas_limitreply_onReplyOnneversuccesserroralwaysTokenFactoryMsgset_metadatametadataforce_transferfrom_addressto_addressburn_tokensburn_from_addressmint_tokensmint_to_addresschange_adminnew_admin_addresscreate_denomsubdenomA   
      B   C      a Display implementation returned an error unexpectedly 1             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs H K   	  	   cw2::ContractVersioncosmwasm_std::query::QueryRequest<cosmwasm_std::results::empty::Empty>juno_tokenfactory_core::state::Configcosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>cosmwasm_std::types::Envcosmwasm_std::coin::Coinjuno_tokenfactory_core::msg::QueryMsgcosmwasm_std::query::bank::BalanceResponsecosmwasm_std::query::bank::AllBalanceResponsejuno_tokenfactory_types::msg::ExecuteMsgjuno_tokenfactory_core::msg::InstantiateMsgalloc::vec::Vec<cosmwasm_std::coin::Coin>cosmwasm_std::types::MessageInfocosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response<token_bindings::msg::TokenFactoryMsg>>  missing field ``H    W    unknown field ``, expected  h    w 
   `, there are no fields  h        duplicate field `       W    unknown variant `       w 
   `, there are no variants        invalid Uint64 '' - ,    <    1          D   E   F   I   
      J   K      a Display implementation returned an error unexpectedly L             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs  K   	  	   invalid Uint128 '' -    $    5    :   $     L    Invalid funds   ` 
   You did not specify any denoms. x    Invalid denom:          Unauthorized 
   $     Unsupported query type:     Unknown system error    No such code:       No such contract:   0    Cannot parse response:  in: L    c    Cannot parse request:   x    c    invalid_requestinvalid_responseno_such_contractno_such_codeunknownunsupported_request                
           kind(    code_id 4    addrD    errorresponse   P    U    request P    p    invalid base64:     R   
      S   T   U   a Display implementation returned an error unexpectedly V             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs   K   	  	   TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other.\   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.3.3/src/imports.rs l [   k   
   V         W   X   Y   Z   input too long for addr_validateaddr_validate errored:      input too long for addr_canonicalizeaddr_canonicalize errored:  X    addr_humanize errored:  |    MessageTooLong must not happen. This is a bug in the VM. 8   l [        l [   %     InvalidHashFormat must not happen. This is a bug in the VM.  ;   l [   ?     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   P A   l [   >     l [   _     l [   ^     okerror         Unknown error:      Invalid recovery parameter. Supported values: 0 and 1.   6   Invalid signature format<
    Invalid hash format \
    UnknownErrerror_code\         ]   InvalidRecoveryParamInvalidSignatureFormatInvalidHashFormat/rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/iter/adapters/enumerate.rs A 
attempt to add with overflow
 [   0   	       attempt to subtract with overflow   cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>internal error: entered unreachable code:   

 *   decoded length calculation overflow/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.1/src/decode.rss
 U   n   #   s
 U   
  7   s
 U   
  $   s
 U   
  )   s
 U   (     s
 U   1  )   s
 U   1     s
 U   5  )   s
 U   5  (   s
 U   4     s
 U   :     s
 U   H     s
 U   K  '   s
 U   K     s
 U   N  	   s
 U   _     s
 U   m  )   s
 U     
   s
 U        s
 U        s
 U     1   Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengths  T   s
 U        s
 U     
   s
 U     	   Overflow when calculating output buffer length  s
 U          s
 U   .     
     errorrequestresponseaddrcode_idkind d   
      e   f   U   a Display implementation returned an error unexpectedly g             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs ! K   	  	   !     g         h   i   j   missing field ``!    
"    duplicate field `   
"    
"    unknown variant ``, expected    @"    Q" 
   `, there are no variants@"    p"    Invalid UTF8d         k   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.1/src/encode.rs   " U   4      integer overflow when calculating buffer size   " U   /      Conversion error:   \#    Divide by zero: x#    Overflow:   # 
   Error serializing type :    #    #    Error parsing into type #    #     not found  !     # 
   Cannot decode UTF8 bytes into string:   $ &   Invalid hex string: D$    Invalid data size: expected= actual=`$ 
   |$    Invalid Base64 string:  $    Generic error:  $    Recover pubkey error:   $    Verification error: $    ConversionOverflowsourceg         l   DivideByZerog         m   Overflowg         n   SerializeErrsource_type g         o   msgParseErrtarget_typeNotFoundkindInvalidUtf8InvalidHexInvalidDataSizeexpected  g         p   actualInvalidBase64GenericErrRecoverPubkeyErr   g         q   VerificationErr g         r   ShlShrPowMulSubAddCannot  with  and ^&    e&    k&    OverflowErroroperation  g         _   operand1operand2ConversionOverflowError g         s   valueCannot divide  by zero &    &    DivideByZeroErroroperand[& X& U& R& O& L& A 
attempt to add with overflow/rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/iter/traits/accum.rs   l' U         Region pointer is null  '    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.3.3/src/memory.rs  ' Z   9      Region starts at null pointer   `( 
   ' Z   ?      t         u   v   w   
      x   y   U   a Display implementation returned an error unexpectedly t             /rustc/897e37553bba8b42751c67658967889d11ecd120/library/alloc/src/string.rs 
) K   	  	 A 
!attempt to subtract with overflow A 
attempt to add with overflow    attempt to multiply with overflow   t         z   t          {   |   |   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.3.3/src/sections.rs
* \         
* \         
* \   9      Cannot read section length  *    
* \   7   	   Unknown error:  *    Invalid recovery parameter. Supported values: 0 and 1.  * 6   Invalid public key format   $+    Invalid signature formatH+    Invalid hash format h+    Generic error   + 
   Batch error + 
   UnknownErrerror_codet         ]   InvalidRecoveryParamInvalidPubkeyFormatInvalidSignatureFormatInvalidHashFormatGenericErrBatchErr4,     Buffer is full  <,    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.5.1/src/ser/mod.rs A 
attempt to subtract with overflow   T, ^      	   T, ^      	   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.5.1/src/de/unescape.rs  - b   %      - b   3   ) A 
attempt to subtract with overflowNon-hex ASCII character found  - 
   - b         /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.5.1/src/de/mod.rs   - ]   $   	 A 
.attempt to add with overflow- ]   }   "   - ]      ,   .     JSON has a comma after the last value in an array or map.JSON has non-whitespace trailing characters after the value.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.Object key is not a string.Invalid unicode code point.Invalid typeInvalid number.Invalid escape sequence.Expected this character to start a JSON value.Expected to parse either a `true`, `false`, or a `null`.Expected this character to be either a `','` or a `'}'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` ora `']'`.Expected a high surrogate (D800–DBFF).Expected this character to be a `':'`.EOF while parsing a JSON value.EOF while parsing a string.EOF while parsing an object.EOF while parsing a list.Control character found in string.!"#$%&'()*+,-0123456789@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdehijklmpqrABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+,./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ 	






 !"#$%&'()*+,-./0123456789:;<=>?>?456789:;<= 	






 !"#$%&'()*+,-./0123 6789:;<=>?	






 !"#$%&'()*+,-./012345 	






 !"#$%&'()*+,-./0123456789:;<=>?>456789:;<= 	



?


 !"#$%&'()*+,-./0123>?456789:;<= 	






 !"#$%&'()*+,-./0123,8 ,7 ,6 ,5 ,4 ,3 internal error: entered unreachable code:   D9 *   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.1/src/encode.rs   x9 U      '   usize overflow when calculating b64 length  x9 U             attempt to add with overflowx9 U          x9 U      :   x9 U      %   x9 U             attempt to subtract with overflow   x9 U      /   x9 U      
   x9 U      6   x9 U      !   x9 U     .   x9 U     	   x9 U     	   x9 U   
  .   x9 U   
  	   x9 U   
     x9 U   
  	   x9 U     	   Impossible remainderd;    x9 U   *     x9 U   ;  	   2 2 l2 ,2 1 1 Invalid last symbol , offset .  ;    ; 	   ;    Encoded text cannot have a 6-bit remainder. ; +   Invalid byte    $< 
   ; 	   ;    Overflow when calculating number of chunks in input/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.1/src/decode.rs< U         `one of <    ,   <    <    <    ` or `  <    =    <    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.185/src/de/mod.rsexplicit panic 0= U                                                     called `Option::unwrap()` on a `None` valuememory allocation of  bytes failed
  
>     >    library/std/src/alloc.rs@>    U  	   cannot modify the panic hook from a panicking threadh> 4   library/std/src/panicking.rs> 
   }   	   > 
   G     > 
   F        
                                                                                 library/alloc/src/raw_vec.rscapacity overflow   |?    `? 
        a formatting trait implementation returned an error              library/alloc/src/fmt.rs?    d  	   library/alloc/src/str.rs@      <   @      0   �)library/alloc/src/vec/mod.rs) should be <= len (is `at` split index (is @    l@    O@    P@ 
     
               byteserror              FromUtf8Error   called `Option::unwrap()` on a `None` valuenumber would be zero for non-zero typenumber too small to fit in target typenumber too large to fit in target typeinvalid digit found in stringcannot parse integer from empty string).. A     index out of bounds: the len is  but the index is  A     	B    :   @     ,B    ,B    panicked at '', TB    UB    @                  `:  @     B       
                    {
,
,  { } }(
(,
[             ]library/core/src/fmt/num.rsB    e      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899assertion failed: *curr > 19  B                           library/core/src/fmt/mod.rs D    t	  

-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14701-14850
   D    {	     library/core/src/slice/memchr.rsLD     h   '   range start index  out of range for slice of length |D    D "   range end index D    D "   slice index starts at  but ends at  D    D 
    A֋ 
3 A 
 [...]byte index  is out of bounds of `  F 
   $F    B    begin <= end ( <= ) when slicing `  TF    bF    fF    B     is not a char boundary; it is inside  (bytes ) of `F 
   F &   F    F    B    library/core/src/str/mod.rs F      
   library/core/src/unicode/printable.rs    G %   
   
    G %      (    	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ@0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t


7	\
;
8F
t

ZY	

	L
1&
 *L
 	




$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_Zb./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юno^"{-f/.
1
$	
+D*$$(4
NC7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&RN(*&
	N$	D

H'	u
?A*;
Qb
H
^"E


:
6,<dS
H	
FEHS
IF

GI7
9
62
fu
ĊLc
/тG9*\&
F
([eK9@
*	3-k
	`G	t<
spF
W	GBP+-@:)L
DL=<U4,d
V
8

,	
t
Y

8
("NT
	



	%
library/core/src/unicode/unicode_data.rs   L (   W   >   SomeNone            ErrorUtf8Errorvalid_up_toerror_len                ] "`"|, 00`45`7
7
7 CaD!H
H$
I!K/aK;X0
aY
\04`j`Oo!aab ϡcg!d ڡd e0aghhai i?j'
#G 	1-,


#
e
!
[
:
+,):7

:9

9:

=
27

:
9
HZ
	b		J7
$	f

-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:14851-15000
^  


@
-3A"v	:
'10(	
 8:@R
2?
"e 





1


3! q}` / $]]   b

P"Ng
&
.0B
#
3d	y  
"
#/-C  *	 (  
1{6)
1
2$>
4	
_9%TUje 	  
(	.
 RzH  	 ;	 ?@   . 	
 72   = m  
`  L (      	     
 $	 , @`0 `!  !

@na
 ԡ

 ߁" a%0%2&A/
$
`*S&	) &+ V 	+@@ &5
t

e
  4 
& .
f; +
P 
  P`$$t

 *	 3
3 @ @ UG
A
  
 D   L (      	        ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90
G
!LjOOo!PP aQeѡQ !R S0aUVV  nWW p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
J7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH  ; ?Q  . 
 72   = m `  L (   <  	   A   a A̬ 
B   b Aܬ 
C   c A 
D   d A 
E   e A 
F   f A 
G   g A 
H   h A 
I   i A̭ 
J   j Aܭ 
K   k A 
L   l A 
M   m A 
N   n A 
O   o A 
P   p A 
Q   q A̮ 
R   r Aܮ 
S   s A 
T   t A 
U   u A 
V   v A 
W   w A 
X   x A 
Y   y A̯ 
Z   z Aܯ 
    A 
    A 
    A 
    A 
    A 
    A 
    A̰ 
    Aܰ 
    A 
    A 
    A 
    A 
    A 
    A 
    A̱ 
    Aܱ 
    A 
    A 
    A 
    A 
    A 
    A 

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15001-15150
    A̲ 
    Aܲ 
    A 
    A 
    A 
    A 
    A 
    A 
   A̳ 
   Aܳ 
   A 
   A 
  	 A 

  
 A 

  
 A 
   A 
   A̴ 
   Aܴ 
   A 
   A 
   A 
   A 

  
 A 

   A 
   ! A̵ 
"  # Aܵ 
$  % A 
&  ' A 
(  ) A 
*  + A 
,  - A 
.  / A 
0  i         2  3 Aܶ 
4  5 A 
6  7 A 
9  : A 
;  < A 
=  > A 
?  @ A 
A  B A̷ 
C  D Aܷ 
E  F A 
G  H A 
J  K A 
L  M A 
N  O A 
P  Q A 
R  S A̸ 
T  U Aܸ 
V  W A 
X  Y A 
Z  [ A 
\  ] A 
^  _ A 
`  a A 
b  c A̹ 
d  e Aܹ 
f  g A 
h  i A 
j  k A 
l  m A 
n  o A 
p  q A 
r  s A̺ 
t  u Aܺ 
v  w A 
x   A 
y  z A 
{  | A 
}  ~ A 
  S A 
   A̻ 
   Aܻ 
  T A 
   A 
  V A 
  W A 
   A 
   A 
  Y A̼ 
  [ Aܼ 
   A 
  ` A 
  c A 
  i A 
  h A 
   A 
  o A̽ 
  r Aܽ 
  u A 
   A 
   A 
   A 
   A 
   A 
   A̾ 
   Aܾ 
   A 
   A 
   A 
   A 
   A 
   A 
   A̿ 
   Aܿ 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
  	 A 

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15151-15300

  
 A 

  
 A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 

  
 A 

   A 
    A 
"  # A 
$  % A 
&  ' A 
(  ) A 
*  + A 
,  - A 
.  / A 
0  1 A 
2  3 A 
:  e, A 
;  < A 
=   A 
>  f, A 
A  B A 
C   A 
D   A 
E   A 
F  G A 
H  I A 
J  K A 
L  M A 
N  O A 
p  q A 
r  s A 
v  w A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
  { A 
  | A 
  } A 
  P A 
  Q A 
  R A 
  S A 
  T A 
  U A 
  V A 
  W A 
  X A 
	  Y A 

  Z A 

  [ A 

  \ A 

  ] A 
  ^ A 
  _ A 
  0 A 
  1 A 
  2 A 
  3 A 
  4 A 
  5 A 
  6 A 
  7 A 
  8 A 
  9 A 
  : A 
  ; A 

  < A 

  = A 

  > A 
  ? A 
   @ A 
!  A A 
"  B A 
#  C A 
$  D A 
%  E A 
&  F A 
'  G A 
(  H A 
)  I A 
*  J A 
+  K A 
,  L A 

-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15301-15450
-  M A 
.  N A 
/  O A 
`  a A 
b  c A 
d  e A 
f  g A 
h  i A 
j  k A 
l  m A 
n  o A 
p  q A 
r  s A 
t  u A 
v  w A 
x  y A 
z  { A 
|  } A 
~   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
  	 A 

  
 A 

  
 A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 

  
 A 

   A 
   ! A 
"  # A 
$  % A 
&  ' A 
(  ) A 
*  + A 
,  - A 
.  / A 
1  a A 
2  b A 
3  c A 
4  d A 
5  e A 
6  f A 
7  g A 
8  h A 
9  i A 
:  j A 
;  k A 
<  l A 
=  m A 
>  n A 
?  o A 
@  p A 
A  q A 
B  r A 
C  s A 
D  t A 
E  u A 
F  v A 
G  w A 
H  x A 
I  y A 
J  z A 
K  { A 
L  | A 
M  } A 
N  ~ A 
O   A 
P   A 
Q   A 
R   A 
S   A 
T   A 
U   A 
V   A 
   - A 
  - A 

-- Chunk 104 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15451-15600
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  	- A 
  
- A 
  
- A 
  
- A 
  
- A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  - A 
  
- A 
  
- A 
  
- A 
  - A 
   - A 
  !- A 
  "- A 
  #- A 
  $- A 
  %- A 
  '- A 
  -- A 
  p A 
  q A 
  r A 
  s A 
  t A 
  u A 
  v A 
  w A 
  x A 
  y A 
  z A 
  { A 
  | A 
  } A 
  ~ A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 
   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 


-- Chunk 105 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15601-15750
   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

   A 

  
 A 

  
 A 

  
 A 

  
 A 

  	
 A 


  

 A 


  

 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 


  

 A 


  
 A 
 
  !
 A 
"
  #
 A 
$
  %
 A 
&
  '
 A 
(
  )
 A 
*
  +
 A 
,
  -
 A 
.

-- Chunk 106 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15751-15900
  /
 A 
0
  1
 A 
2
  3
 A 
4
  5
 A 
6
  7
 A 
8
  9
 A 
:
  ;
 A 
<
  =
 A 
>
  ?
 À 
@
  A
 A܀ 
B
  C
 A 
D
  E
 A 
F
  G
 A 
H
  I
 A 
J
  K
 A 
L
  M
 A 
N
  O
 Á 
P
  Q
 A܁ 
R
  S
 A 
T
  U
 A 
V
  W
 A 
X
  Y
 A 
Z
  [
 A 
\
  ]
 A 
^
  _
 Â 
`
  a
 A܂ 
b
  c
 A 
d
  e
 A 
f
  g
 A 
h
  i
 A 
j
  k
 A 
l
  m
 A 
n
  o
 Ã 
p
  q
 A܃ 
r
  s
 A 
t
  u
 A 
v
  w
 A 
x
  y
 A 
z
  {
 A 
|
  }
 A 
~
  
 Ā 

  
 A܄ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A̅ 

  
 A܅ 


-- Chunk 107 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:15901-16050
  
 A 

  
 A 

   A 

  
 A 

  
 A 

  
 A 

  
 Ă 

  
 A܆ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 Ȧ 

  
 A܇ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 Ä 

  
 A܈ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 Ả 

  
 A܉ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 Å 

  
 A܊ 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A 

  
 A̋ 

  
 A܋ 

  
 A 

  
 A 

  

-- Chunk 108 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16051-16200
 A 
    A 
	   A 

   A 

   Ǎ 

   A܌ 

   A 
   A 
   A 
   A 
   A 
   A 
   A̍ 

   A܍ 

   A 
(    A 
)  ! A 
*  " A 
+  # A 
,  $ A 
-  % A̎ 
.  & A܎ 
/  ' A 
8  0 A 
9  1 A 
:  2 A 
;  3 A 
<  4 A 
=  5 Ȁ 
>  6 A܏ 
?  7 A 
H  @ A 
I  A A 
J  B A 
K  C A 
L  D A 
M  E A̐ 
Y  Q Aܐ 
[  S A 
]  U A 
_  W A 
h  ` A 
i  a A 
j  b A 
k  c Ȃ 
l  d Aܑ 
m  e A 
n  f A 
o  g A 
   A 
   A 
   A 
   A̒ 
   Aܒ 
   A 
   A 
   A 
   A 
   A 
   A 
   A̓ 
   Aܓ 
   A 
   A 
   A 
   A 
   A 
   A 
   A̔ 
   Aܔ 
   A 
   A 
   A 
   A 
   A 
  p A 
  q A̕ 
   Aܕ 
  r A 
  s A 
  t A 
  u A 
   A 
   A 
   A̖ 
  v Aܖ 
  w A 
   A 
   A 
  z A 
  { A 
   A 
  x A̗ 
  y Aܗ 
  | A 
  } A 
   A 
&!   A 
*!  k A 
+!   A 
2!  N! A̘ 
`!  p! Aܘ 
a!  q! A 
b!  r! A 
c!  s! A 
d!  t! A 
e!  u! A 
f!  v! A 
g!  w! A̙ 
h!  x! Aܙ 
i!  y! A 
j!  z! A 
k!  {! A 
l!  |! A 
m!  }! A 
n!  ~! A 
o!  ! A̚ 
!  ! Aܚ 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A̛ 
$  $ Aܛ 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A̜ 
$  $ Aܜ 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A 
$  $ A̝ 
$  $ Aܝ 
$  $ A 
$  $ A 

-- Chunk 109 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16201-16350
,  0, A 
,  1, A 
,  2, A 
,  3, A 
,  4, A̞ 
,  5, Aܞ 
,  6, A 
,  7, A 
,  8, A 
	,  9, A 

,  :, A 

,  ;, A 

,  <, A̟ 

,  =, Aܟ 
,  >, A 
,  ?, A 
,  @, A 
,  A, A 
,  B, A 
,  C, A 
,  D, A̠ 
,  E, Aܠ 
,  F, A 
,  G, A 
,  H, A 
,  I, A 
,  J, A 
,  K, A 

,  L, A̡ 

,  M, Aܡ 

,  N, A 
,  O, A 
 ,  P, A 
!,  Q, A 
",  R, A 
#,  S, A 
$,  T, A̢ 
%,  U, Aܢ 
&,  V, A 
',  W, A 
(,  X, A 
),  Y, A 
*,  Z, A 
+,  [, A 
,,  \, Ạ 
-,  ], Aܣ 
.,  ^, A 
/,  _, A 
`,  a, A 
b,  k A 
c,  }
 A 
d,  } A 
g,  h, A̤ 
i,  j, Aܤ 
k,  l, A 
m,  Q A 
n,  q A 
o,  P A 
p,  R A 
r,  s, A 
u,  v, Ḁ 
~,  ? Aܥ 
,  @ A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A̦ 
,  , Aܦ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A̧ 
,  , Aܧ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , Ą 
,  , Aܨ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A̩ 
,  , Aܩ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A̪ 
,  , Aܪ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A̫ 
,  , Aܫ 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
,  , A 
@  A A̬ 
B  C Aܬ 
D  E A 
F  G A 
H  I A 
J  K A 
L  M A 
N  O A 
P  Q A̭ 
R  S Aܭ 
T  U A 
V  W A 
X  Y A 
Z  [ A 
\  ] A 
^  _ A 
`  a A̮ 
b  c Aܮ 
d  e A 
f  g A 
h  i A 
j  k A 
l  m A 
   A 
   A̯ 
   Aܯ 

-- Chunk 110 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16351-16500
   A 
   A 
   A 
   A 
   A 
   A 
   A̰ 
   Aܰ 
   A 
   A 
   A 
"  # A 
$  % A 
&  ' A 
(  ) A̱ 
*  + Aܱ 
,  - A 
.  / A 
2  3 A 
4  5 A 
6  7 A 
8  9 A 
:  ; A̲ 
<  = Aܲ 
>  ? A 
@  A A 
B  C A 
D  E A 
F  G A 
H  I A 
J  K A̳ 
L  M Aܳ 
N  O A 
P  Q A 
R  S A 
T  U A 
V  W A 
X  Y A 
Z  [ A̴ 
\  ] Aܴ 
^  _ A 
`  a A 
b  c A 
d  e A 
f  g A 
h  i A 
j  k A̵ 
l  m Aܵ 
n  o A 
y  z A 
{  | A 
}  y
 A 
~   A 
   A 
   A̶ 
   Aܶ 
   A 
   A 
  e A 
   A 
   A 
   A 
   A̷ 
   Aܷ 
   A 
   A 
   A 
   A 
   A 
   A 
   A̸ 
  f Aܸ 
  \ A 
  a A 
  l A 
  j A 
   A 
   A 
   A̹ 
  S Aܹ 
   A 
   A 
   A 
   A 
   A 
   A 
   A̺ 
§  ç Aܺ 
ħ   A 
ŧ   A 
Ƨ  
 A 
ǧ  ȧ A 
ɧ  ʧ A 
Ч  ѧ A 
֧  ק A̻ 
ا  ٧ Aܻ 
   A 
!  A A 
"  B A 
#  C A 
$  D A 
%  E A 
&  F A̼ 
'  G Aܼ 
(  H A 
)  I A 
*  J A 
+  K A 
,  L A 
-  M A 
.  N A̽ 
/  O Aܽ 
0  P A 
1  Q A 
2  R A 
3  S A 
4  T A 
5  U A 
6  V A̾ 
7  W Aܾ 
8  X A 
9  Y A 
:  Z A 
 ( A 
 ) A 
 * A 
 + A̿ 
 , Aܿ 
 - A 
 . A 
 / A 
 0 A 
	 1 A 

 2 A 

 3 A 

 4 A 

 5 A 
 6 A 
 7 A 
 8 A 
 9 A 
 : A 
 ; A 
 < A 

-- Chunk 111 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16501-16650
 = A 
 > A 
 ? A 
 @ A 
 A A 
 B A 
 C A 

 D A 

 E A 

 F A 
 G A 
  H A 
! I A 
" J A 
# K A 
$ L A 
% M A 
& N A 
' O A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
p  A 
q  A 
r  A 
s  A 
t  A 
u  A 
v  A 
w  A 
x  A 
y  A 
z  A 
|  A 
}  A 
~  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

-- Chunk 112 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16651-16800

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 

 
 A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
  A 
@n `n A 
An an A 
Bn bn A 
Cn cn A 
Dn dn A 
En en A 
Fn fn A 
Gn gn A 
Hn hn A 
In in A 
Jn jn A 
Kn kn A 
Ln ln A 
Mn mn A 
Nn nn A 
On on A 
Pn pn A 
Qn qn A 
Rn rn A 
Sn sn A 
Tn tn A 
Un un A 

-- Chunk 113 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/tokenfactory_core.wasm:16801-16853
Vn vn A 
Wn wn A 
Xn xn A 
Yn yn A 
Zn zn A 
[n {n A 
\n |n A 
]n }n A 
^n ~n A 
_n n A 
 " A 
 # A 
 $ A 
 % A 
 & A 
 ' A 
 ( A 
 ) A 
 * A 
	 + A 

 , A 

 - A 

 . A 

 / A 
 0 A 
 1 A 
 2 A 
 3 A 
 4 A 
 5 A 
 6 A 
 7 A 
 8 A 
 9 A 
 : A 
 ; A 
 < A 
 = A 

 > A 

 ? A 

 @ A 
 A A 
  B A 
! C A 
'&   
   &   &   &   A A sA MA 'A

=== File: integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1-150
 asm   `` `` ` ` `` ` ` ` `  ````~`
 `~ `	 `~ `~`~ ``
``~`~~~ envabort env
db_next_value env
db_next_key envdb_read envdb_write env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize  env
addr_humanize  envsecp256k1_verify envsecp256k1_recover_pubkey enved25519_verify enved25519_batch_verify envdebug env
query_chain    	
                                      
               

          
                       
        



	
		                 
                  
                  
            
     
 
   p A 
 A 
 Aм 
memory execute usudo __getrandom_custom 
instantiate query migrate interface_version_8 allocate 
deallocate requires_stargate requires_iterator requires_cosmwasm_1_2 requires_cosmwasm_1_3 requires_cosmwasm_1_4 requires_cosmwasm_2_0 requires_cosmwasm_1_1 
__data_end
__heap_base	 A
NSQPkXYlmNSpnogfjhh}NSpy{z~a~NNa]^`[\Z_NSp|~NS~NSQNNNSpNSpNSpNSN

# A0k"	$  	A:  	A 6 	 6
 	 6 	Aj!
A !A !# A k"$  A j 	Aj"@ -  E@ 
BȀ7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ 
BȂ7 

  Aj Ax!Ax! - E@Ax!


 - "
A"G@ 
A F
Ax!Ax!


 A(j 4 (("AxG@Ax!
	
 A,j!@@@@ - ,"Ak 
 A@k  (@AxG
 A(j ( (4!
 (0!
 (,! ((


 A@k  (@AxG@Ax!
	
 A(j ; (4!
 (0! (,!Ax! ((E

	
 A(j @ ((AxG@ A j A0j( 6   )(7@

 A@k 
 (@AxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A(j 4 (("AxG@ !

 - ,"Ak
 !Ax!

 A(j @ ((AxF@ A@k 

 A j A0j( 6   )(7@
 (@AxF
 !

 AxG@ A,jA A !

 A@k  (@AxG@ !


 A(j ; (4!
 (,! ! (0! ((E



 AxG@ A,jA A !

 A@k  (@AxG
 A(j ( (4!
 (0!
 (,! ((E


 AxF@ A,jA AAx! E
  A

  
6<  
68  64  
60  6, !

   - ! -  
 
 !
	
A  
 
B聀7 


Ax!
 A,jA AAx!

  )@7  Aj A j( 6  (,! (0!
 (4!

  
64  
60  6, !

  )@7  Aj A j( 6  (,! (0! (4!

  
64  60  6,Ax!


-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:151-300
 !  ( -6@  A0j(  6 C - ,!
 A4j ( C6    (@6 1  : 0  6,

 A4j A j( 6   )@7,
 AxF

 
@ 
Aj!@ Ak( "@ (  A
 A j! 
Ak"

 

 E
  
 AtA
Ax! AxrAxF
   A
@ - 
Aj"Aq F@  : 
 AxF
 (4! (0! (,! (<!
 (8! A@k  (@AxF@ 
 
6 
 6 
 6
 
 6 
 6 
 6 

 
 )@7 
A
j A j( 6  
Ax6  @  A
 
@ Aj!@ Ak( "@ (  A
 A j! 
Ak"

 

 E
  AtA

A  
 
Ax6  
 A,j") 7 
A
j Aj( 6 
 A j$  	($! 	( ! 	(
!@ 	("AxG@ 	(,! 	((! 
  	(AxF@   6   6   6
   6   6   6 

   	)7  A
j 	A j( 6   Ax6  @  A
 @ Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 E
  AtA

   6
   6   6  Ax6 
 	A0j$ 

~# A k"$  A:  A 6  6
  6 A8j!A !# Ak"$  A(j Aj"@ - (E@ B7 

@@@@@@@@@@@@@ @ - )A F@ - 
"@  Ak": 
 AqE@ B7 

  A: l  6h A j Ax! -  E@Ax!Ax!
	
 - !"	A F@A!
Ax!Ax!


 A : l 	A"G@Ax!Ax!Ax!
	
 A0j 6 - 4!
 (0"AxG@Ax!Ax! !

@@@@@ 
 
 A0j A j> (8! (4!
Ax! (0"	AxG@Ax!


Ax!

 A0j  (0AxG@Ax!


 Aj 9Ax! ("AxF
 Aj Aj) "7  A j 7   )"7  7p (!
 )!A

 Aj  (AxG@Ax!

 A0j : (8!
 (4!Ax! (<" (0
A!


 A0j @ (0AxG@ Aj A8j( 6   )07

 Aj 
 (AxG@Ax!Ax!


Ax!A
!
Ax!
 Aj  - E
 - !	@ 	Aq"	A,G@Ax! 	A G



  Aj  - E@Ax!


 - "	A"G@Ax! 	A F
Ax!


 A0j 6 - 4!
 (0"	AxG@ 	!
	
@@@@@ 
 
 A0j @ (0AxF@ Aj 

 Aj A8j( 6   )07
 (AxG


 AxG@ A0jArA A

 A0j  (0AxG
	 Aj 9 ("AxF
 Aj Aj) "7  A j 7   )"7  7p (!
 )!

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:301-450

 
AG@ A0jArA A


 A0j A j> (8! (4!
 (0"	AxF


 AxG@ A0jArA A

 Aj  (AxG
 A0j : (8!
 (4! (<" (0

 Aj  - 	!	 - 
 


A  
 B7 

 A4j" )7  Aj Aj( 6  (4! (8!
 (<
6<  
68  64
	
  6<  
68  	64

 Aj A8j( 6   )07
 Aj Aj( "6  A<j 6   )"7  74Ax!

  ( 56  A8j(  6 
 A<j ( 6    (6 9  
: 8  64

 AxF@ AjA A A<j Aj( 6   )74Ax!

 AxF@ A0jArA A E
 
 A

 A@k A j) 7   6`  )p78  64 - 
Aj"Aq G
  : 
 )@! )`! Aj  (AxF@  70  
6,  6(  7   
6
  6  7  A0jAr") 7  
A  
AG6  A
j Aj( 6 

  )7 A
j Aj( 6  A6  @ 
 A
 E
 
 A

 A<j Aj( 6   )74
 AxF

 E
  
 A
 AxrAxF
  
 A
 - 
Aj"Aq F

A  
  : 
  )47 A6  A
j A<j( 6 
 Aj$  A0j" A j( 6   )<7(@ (8"AG@ A j" ( 6   )(7 )h! (d!	 (`! )X! (T! (P! )H!   (8AxF@   6    )7   70   	6,   6(   7    6
   6   7  A
j ( 6 

   )87  A
j A@k( 6   A6  @  A
 E
 	 A

   )(7  A6   A
j ( 6 
 A j$ 
A!@@@  -  "AkA  AqAFAq 
  ("@  ( A
  ("@  ( A
A
! AG

   j" ( "E
   ( A

# Ak"$  Aj Ax!@ - E
 Ax!@@@ - 	"A-k 
 A !

Ax! A1kAqA	O
 A0k!  (" (O
 @ (  j-  A0k"Aq"A	K
  AqA
l"Av@Ax!

 Aq j"Aq G@Ax!

  j! (" (I
 

   : Ax!
   6  Aj$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 






 /  A /  F


	
  Aj" A A	
	 A:  


 A A
  A: 


@@@ Ak 
 /  A /  F


  Aj" A A	
 A:  

 A A
  A: 

  Ax6 
	

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:451-600
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  B7 

@ - 	A"F@  Aj"  ($! ( ! (
! (
 AxF@  6  6    - A
F@   )
7  A
j A$j( 6   A 6 

 A6D A 6@ B7L  AjB7X  A j6H  Aj A@k Aja  A6 

  6  6 Aj     - A
F@   )
7  A
j A$j( 6 A 

 A6D A 6@ B7L  AjB7X  A j6H  Aj A@k AjaA
6  E
  A

  B7 

   6
   6   6  A6 
 A j$ 

~# A k"$  A(j @ - (E@  Ax6 

Ax!@@@@@@@@@@@@@@ - )"A k# 
 A"k
          
Ax! (" (O
 @ (  j-  "A,F A Fr A Fr
  (" (I
 

   6 


   -  E@  Ax6 


 - A"G
  A j  (X! (T! (P
 AxF@  Ax6 


  Ax6  E
  A


 Aj  - E@  Ax6 


Ax!@ - A G
  - 
"E
  Ak": 
 AqE@  Ax6 


 A!@@@ Aj  - E@Ax!

~@@ - ""A,G@ A F
 !A ! 
Ax!

  Aj  - E@Ax!

 - 	!
 AqA F@Ax!

 A j  (P"AxG
 B~B

 B~
"BPE
 
 - 
Aj"Aq G

  : 
 A j Ax! (PAxF
   )P7   Aj A j( 6 


 )T!
 - 
Aj"Aq G
	   7   6   : 



   6 
	
 A j  -  E@  Ax6 
	
 - !A G
 - 
"E
  Ak": 
 AqE@  Ax6 
	
  A: 0  6, A4j A,j=@ (4"AxF@@ - 8E
 A j (,"@ (PAxF@ A@k 

 A j A j( 6   )P7@
 (@"AxG@ 5 E A j1  B0 A j3  B ! - D

 A4j A,j= (4"AxF
 

 5 9 A?j1  B0 A=j3  B ! - 8
! - 
Aj"Aq G
   6   : 
   B B7
	
 - 
Aj"Aq G
  : 
 A j  (PAxF@  Ax6 
	
   )P7   Aj A j( 6 

  Ax6 

  Ax6 

   (\6   6   6 

Á  
  Ax6 

A  

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:601-750
A  
Á  
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj A!Ax!A!@@ - E
 Ax! - 	A"G
   Aj  (
! (! (!@ (@ !

A ! AxG@ !

@ E@A!

A ! A H
A -  A! A"E

    !
   6   6A
!
   6    j 6  A j$ 
   
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ (  Aě (  G!
  Ax6    : 

A! AF@ (  Aě (  G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 






 /  A /  F


	
  Aj" A A	
	 A:  


 A A
  A: 


@@@ Ak 
 /  A /  F


  Aj" A A	
 A:  

 A A
  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ )  A )  R!
  Ax6    : 

A! AF@ )  A )  R!
  Ax6    :  E
  A

  Ax6 

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:751-900

   6   6   6 
 A j$ 
# Ak"$   @ -  E@  Ax6 

@ - A k"@ AG@  Ax6 

  Aj A܁ A (AxF
   )7   Aj A
j( 6 

  Aj A߁ A (AxG@   )7   Aj A
j( 6 

  Ax6   A : 

  Ax6   A: 
 Aj$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ /  A /  G!
  Ax6    : 

A! AF@ /  A /  G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak	 







 /  A /  F


	
  Aj" A A

	 A:  


 A A
  A: 


@@@ Ak	 
 /  A /  F


  Aj" A A

 A:  

 A A
  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    s

    s E
  A

  Ax6 

   6   6   6 
 A j$ 
~# A k"
$  
 @ 
-  E@  B7 

@@@ 
- A F@ - 
"E
  Ak": 
 AqE@  B7 

  
Aj!
A!# A@j"$  A 6$ B 7
 Aj @@ - E@Ax!

 - !@@@ Aq"A,G@ A F
 @A !

Ax!

  Aj  - E@Ax!


-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:901-1050
 - !
 AqA F@Ax!

 A(j!
A !A !A !A !
A !A !# A k"$  A j @ -  E@ 
BȀ7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ 
BȂ7 

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A8j 7 (8"AxG@Ax!
	
 A<j!@@@@ - <"Ak 
 A(j  ((AxG
 A8j  (D! (@!
 (<! (8


 A(j  ((AxG@Ax!
	
 A8j  (D! (@! (<!	Ax! (8E

	
 A8j @ (8AxG@ A0j A@k( 6   )87(

 A(j 
 ((AxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 	AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A8j 7 (8"AxG@ !

 - <"Ak
 !Ax!

 A8j @ (8AxF@ A(j 

 A0j A@k( 6   )87(
 ((AxF
 !

 	AxG@ A<jÀ A !

 A(j  ((AxG@ !


 A8j  (D! (<!	 ! (@! (8E



 AxG@ A<jAԀ A ! 


 A(j  ((AxG
 A8j  (D! (@!
 (<! (8E


 AxF@ A,jAԀ A  (46D  ),7<Ax! 	E
  	A

  6L  
6H  6D  6@  6< 	!

   - ! -  
 
 !
	
A  
 
B聀7 


Ax!
 A<jÀ AAx!	

  )(7  Aj A0j( 6  (<! (@!
 (D!
  6D  
6@  6< !

  )(7  Aj A0j( 6  (<!	 (@! (D!
  6D  6@  	6<Ax!	

 !  ( =6(  A@k(  6 + - <!
 A j ( +6    ((6 A  : @  6<

 A j A0j( 6   )(7<
 AxrAxF

 
 A
Ax! 	AxrAxF
   	A
@ - 
Aj"Aq F@  : 
 AxF
 (D!	 (@! (<! (L! (H! A(j  ((AxF@ 
 6 
 6 
 	6
 
 6 
 6 
 6 

 
 )(7 
A
j A0j( 6  
Ax6  @  A
 	E
  	A

A  
 
Ax6  
 A<j") 7 
A
j Aj( 6 
 A j$  )0! (,! (("AxF
 )8! ($" (
F@ A
j
 (  Alj" 7  7  6  6   Aj6$ Aj  - 	! - 
 

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1051-1200
Ax!

 
 )
7 
A 6  
A
j A$j( 6 

 
 7 
 6 
A6  ($"@ ( !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

 (
"E
  (  AlA
 A@k$  - 
Aj"Aq G
  : 
 
(
 
(! 
(
! 
(! 
Aj  
(AxF@   6
   6   6  A 6 

   
)7  A
j 
A
j( 6   A6  @ !@ ( " @ Aj(   A
 A
j( " @ Aj(   A
 Aj! Ak"
 

 E
  AlA

  B7 

Á  
Á  
  A6    
Aj") 7  A
j Aj( 6 
 
A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@@ AF@ A A@  Aj" A A
 A:  

  A : 

  Aj
A:  
  Ax6 

@ AF@ A A@  Aj" A A
 A:  

  A : 

  Aj
A:  
  Ax6  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
~# A0k"$   Ax!@@@@@ -  @@ - "A"G@ A F
  A:    Ax6

 Aj .@ ("AxF@Ax!

   / 
; 	  A
j Aj-  :   - 
!   (6
   : 
  A:     6

 - 
"E
  Ak": 
 Aq
Ax!
  A:     6

A  
  Aj!# Ak"$  Aj" . - !
@@@@@@@@ ("AxF@   ("AxG@ Aj A
j-  :    / 	;  - !


 
Ak
 Aj A
j-  :    / 	; 
 (
!  / ; 	 A
j Aj-  :    6
  
:   6 A:  

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1201-1350
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G

  : 
 A j  (PAxF@ A :    
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
  : 
  ),7 A:   A

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1351-1500
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1501-1650
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
	  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j 
 (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG@Ax!


 A j  (\!
 (X! (T!	Ax! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG
 A j  (\! (X!
 (T! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1651-1800
	 	AxG
 A,jA AAx!	

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j 
 (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 	AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T!	 (PE



 AxG@ A,jA A	 E


 A j  (`AxG
	 A j  (\! (X!
 (T! 
! (PE



 AxG
 A jA A	  (\64  )T7, 	E
 
 	A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  6  
6
  
6  	6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   	@ 
 	A
 E
 
 A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T! (X!
 (\!
  64  
60  6,

  )`7  Aj A j( 6  (T!	 (X! (\!

  
64  60  	6,Ax!	

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 AxrAxF

 
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1801-1950
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !A !
# A0k"
$  
Aj!
# Ak"$  A(j @@ - (E@ 
A:   
Ax6

@@@@@@@@@@@@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@ 
A:   
Ax6

  A j Ax!Ax! -  E@Ax!Ax!	

 - !"A"G@ A F
Ax!Ax!	Ax!

 A j   (T"AxG@Ax!	Ax! !


 A j!@@@@@ - X" 
 A j  (pAxG@Ax!	


 A j  (`! (\! (X! (T@Ax!	

Ax!	A 

 A j  (pAxG@Ax!	Ax!

 A j  (`! (\! (X!Ax! (T@Ax!	

Ax!	A 

 A j @ (TAxG@ A j A j( 6   )T7p

 A j 
 (p"AxG@Ax!	Ax!

 - t!Ax!Ax!	A

 A j  (pAxG@Ax!

 A j  (`! (\! (X!	 (T@Ax!
	
Ax!A 

 A j @ (TAxG@ A j A j( 6   )T7p

 A j 
Ax!	 (p"AxG@ )t!Ax!

Ax!A 
! Aj  - E
 - !@ !
 !
 A,G@Ax! A G
 E


  Aj  - E@Ax!

 - "A"G@Ax! A F
Ax!

 A j   (T"AxG@ !


@@@@@@@@ - X" 
 A j @ (TAxF@ A j 

 A j A j( 6   )T7p
 (p"AxG


 
 A j @ (TAxF@ A j 

 A j A j( 6   )T7p
 (p"AxG
 - t!A!

 AxG@ A0jA A

 A j  (pAxG
 A j  (`! (\! (X! 
 (TE


 AxG@ A0jA A

 A j  (pAxG

 A j  (`! (X! (\" (TE


 )t!
	
 	AxG@ A0jA AA ! 	E
  	A

 A j  (pAxG
	 A j  (`! (\! (X!	 
 (TE



 A0jA A

 
! 

! Aj  - 	! - 
 





 
A:   
Ax6

Ax!Ax!	
 A jA A - h! (d"AxF
 A8j A j(  6    ( i6 5  : 4  60

  74  60


  )p7  Aj A j( 6  (X!	 (\! (`!
  68  64  	60A !


  )p7  Aj A j( 6  (X! (\! (`!
  68  64  60A !Ax!A !


  )p7  Aj A j( 6  (X! (\! (`!
  68  64  60

  ( Y6p  A j(  6 s - X!

 AxG
 A0jA A

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:1951-2100
A !Ax!A !

@ AxG"E@ A0jA A

 	AxG@  : - - 
Aj"Aq G
  : 
 A j  (TAxF@ 
A:   
 6$ 
 6  
 	6
 
 6 
 
6 
 6 
 6
 
 
6 
 6 
 A,jAr"/  ;  
Aj Aj-  :  


 
 )T7 
A
j A j( 6  
A:   @ 
 A
 @ 
 A
 	E

  	A


 A jA A  (`68  )X70 E
  
 A
A! E@A !

 
 A

 !
 !

 A8j ( s6    (p6 5  : 4  60

 A8j A j(  6    ( u6 5  - t: 4  60
A !A !
 	AxrAxF@ 


  	A 

 AxrAxF
  
 A E


 

 AxrAxF
  
 A
 - 
Aj"Aq G
  : 
 
 )07 
A:   
A
j A8j( 6 
 Aj$ 
 
@@ 
- "AG@ 
Aj 
- 
:   
 
/ 	; 
(
! 
(!
 
(! 
(!
 
(
! 
( !	 
($! 
((! 
(,!
 
  
-  
 A:   Ax6 @ 
 A
 
@  
A
 E AGr
  A

 
)
!  
(6
  7 A:  

 
- A G@ A:   Ax6 @ 
 A
 
@  
A
 E AGr
  A

   :    
6$  6   6
  	6  6  
6  6
  
6  6  
/;  Aj 
Aj-  :  
 
A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!



-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2101-2250
 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
  : 

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2251-2400
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j " (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG@Ax!


 A j  (\!
 (X! (T!	Ax! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG
 A j  (\! (X!
 (T! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 	AxG
 A,jA AAx!	

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j " (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 	AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T!	 (PE



 AxG@ A,jA A
 E


 A j  (`AxG
	 A j  (\! (X!
 (T! 
! (PE



 AxG
 A jA A
  (\64  )T7, 	E
 
 	A

 A,jA A


-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2401-2550
  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  6  
6
  
6  	6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   	@ 
 	A
 E
 
 A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T! (X!
 (\!
  64  
60  6,

  )`7  Aj A j( 6  (T!	 (X! (\!

  
64  60  	6,Ax!	

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 AxrAxF

 
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 
 Aj$  - 
Aj"Aq F@  : 
   )7   Aj Aj) 7   Aj Aj) 7   Aj A j) 7   A j A(j) 7 

A  
 A0j$ 
A  
A  
~# A k"$   @ -  E@  B7 

@@@ - A F@ - 
"E
  Ak": 
 AqE@  B7 

  Aj!
A!# A k"$  A 6
 B7 Aj @@ - E@Ax!

 A j! - !@@@ Aq"A,G@ A F
 @A !

Ax!

  Aj  - E@Ax!

 - 	!
 AqA F@Ax!

 A0j!A !	A !
A !
B !B !# A k"$  A j @ -  E@ Ax6 Ax6 

@@@@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ Ax6 Ax6 


  Aj Ax!Ax! - E
 - "
A"G@ 
A F
	Ax!

 A(j 0 (("AxG
~@@@ - ,"
Ak 
 A(j  ((AxG
 A j ) (H
 A j) ! )P!B


-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2551-2700
 A j  (HAxG
 A(j  (4!
 (0!	 (,! ((
B 

 A(j @ ((AxG@ A j A0j( 6   )(7H

 A j 
 (HAxG
B 
! Aj  - E
 - ! A j!
@@@ A,G@Ax! A G

 AxG



  Aj  - E@Ax!


 - 	"A"G@Ax! A F

Ax!


 A(j 0 (("AxG
	@@@@ - ,"
Ak 
 A(j @ ((AxF@ A j 

 A j A0j( 6   )(7H
 (HAxG


 AxG@ A(jA A

 A j  (HAxG
	 A(j  (4!
 (0!	 (,! ((E



 
 A(j  ((AxG
 A j ) (H
 
) ! )P!B!
   - ! -  




 P@ A(jA AAx! E

 	 A


  7(  
6@  	6<  70 !


 A(jA A


 Ax6 Ax6 


A  
 A j A0j( 6   )(7L
  )P7,  (L6(

 A,j" )H7  Aj A j( 6  (,! (0!	 (4!

  
60  	6,  6(Ax!

 !  ( -6H  A0j(  6 K - ,!

 A0j ( K6    (H6 -  
: ,  6(

 A(jA AAx!

 A0j A j( 6   )H7(
Ax! AxrAxF
  	 A
@ - 
Aj"Aq F@  : 
 AxF
 )@! (<! A j  (HAxF@  )(7   7  6  6 Aj A0j) 7 

  )H7  Aj A j( 6  Ax6 E
  A

A  
  )(7  Ax6 Aj A0j( 6 
 A j$  )4! (0! (@"
AxF
 A(j"
 Aj( 6   ) 7  (<!
 (
" (F@# A k"$  Aj"( "AF@A A  
A At Aj A J"	 	AM"At!    At6
  (6AA 
6 Aj 	A IAt  Aj (@ (
 ( 
 (
!  6   6 A j$ 
 ( Atj" 
6  
6
  7  6   ) 7 A
j 
( 6   Aj6
   - ! -  
 
Ax!

 
 )7 
A 6  
A
j A
j( 6 

 
 7 
 6 
A6  (
"@ (Aj!@ Ak( "@ (  A
 A j! Ak"
 

 ("E
  ( AtA
 A j$  - 
Aj"Aq G
  : 
 (
 (! (
! (! Aj  (AxF@   6
   6   6  A 6 

   )7  A
j A
j( 6   A6  @ Aj!@ Ak( " @ (   A
 A j! Ak"
 


-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2701-2850
 E
  AtA

  B7 

Á  
Á  
  A6    Aj") 7  A
j Aj( 6 
 A j$ 
# A k"$  Aj @ - E@  B7 

@ - 	A"F@  A8j  (D! (@! (<! (8
 AxF@  6  6 Aj   - E@   ) 7  Aj A(j) 7   A 6 

  - : 7 A6< A 68 B7D  A7jB 7X  AjB7P  A j6@  Aj A8j  A6 

  6  6 Aj     - E@   ) 7  Aj A(j) 7 A 

  - : 7 A6< A 68 B7D  A7jB 7X  AjB7P  A j6@  Aj A8jA
6  E
  A

  B7 

   6
   6   6  A6 
 A j$ 
~# Ak"$  Aj Ax!@ - E
 Ax!@@@ - 	"A-k 
 A !

Ax! A1kAqA	O
 A0kAq!  (" (O
 @ (  j-  A0kAq"A	K
  B
~"B PE@Ax!

  "j" I@Ax!

 (" (I
 

   6Ax!
   6  Aj$ 
~# A k"$  Aj    - E@  Ax6A

@@@@ - "A-k 
  Ax6A

   B 7

 A1kAqA	O@  Ax6A

 A0kB! @ (" (O
 @ (  j-  A0k"AqA
O
  Aj B B
@ )B R
  )" B|" T
  (" (I



  Ax6A

   7
A 
6  A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    v

    v E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 A̙ A	E


 )  Aՙ )  R
  Ax6   A: 

@@ Ak 
 A̙ A	E


 )  Aՙ )  R
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 A؛ AE


 A A
  Ax6   A: 

@@ Ak 
 A؛ AE


 A A
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:2851-3000

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak
 


 A AE


	
  Aj" )  A )  R
	 A:  


 (  A (  G
  A: 


@@@ Ak 
 A AE


  Aj" )  A )  R
 A:  

 (  A (  G
  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! A
F@ AК A
A G!
  Ax6    : 

A! A
F@ AК A
A G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE


-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3001-3150
 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 





 A AE


	
  Aj" )  A )  R
	 A:  


 A A

  A: 


@@@ Ak 
 A AE


  Aj" )  A )  R
 A:  

 A A

  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 )  A )  Q

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 )  A )  Q

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
~# A k"$  A(j @ - (E@  Ax6  Ax6 

@@@@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@  Ax6  Ax6 

  A j Ax!Ax! -  E
 - !"A"G@ A F
Ax!


 A0j 2 (0"AxG
	~~@@@@ - 4" 
 A0j  (0AxG
 A j < (P

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3151-3300

 )X!
B!	B 

 A0j  (0AxG

 A j + (P

 )X!
B

 A j  (PAxG
 A0j  (<! (8! (4! (0
B 

 A0j @ (0AxG@ A j A8j( 6   )07P

 A j 
 (PAxG

B 
!	B 
!
 Aj  - E
 - !@@@@@ A,G@Ax! A G
 
P
 	
 A jA A  )T74  (P60

  Aj  - E@Ax!

 - "A"G@Ax! A F
Ax!

 A0j 2 (0"AxG
@@@@ - 4" 
 A0j @ (0AxF@ A j 

 A j A8j( 6   )07P
 (PAxG


 

 A0j  (0AxG
 A j + (P
 )X!
B!


 	
 A0j  (0AxG

 A j < (P

 )X!
B!	

 AxG@ A0jA A 


 A j  (PAxG
 A0j  (<! (8! (4! (0E

	
Ax! AxF@ A0jA A

  6H  6D  
78  
70 !

 A0jA A

 A0jA A

 Aj  - 	! - 
 



A  
  Ax6  Ax6 

 A jA A  )T74  (P60
	
 A4j" )P7  Aj A j( 6  (4! (8! (<!
  68  64  60
	
 A j A8j( 6   )07T
  )X74  (T60

 A j A8j( 6   )07T
  )X74  (T60

 !  ( 56P  A8j(  6 S - 4!
 A8j ( S6    (P6 5  : 4  60

 A8j A j( 6   )P70
Ax! AxrAxF

  A
Ax!
@ - 
Aj"Aq F@  : 
 AxF
 )H!	 (D! A j  (PAxF@   )07    	7   6   6  Aj A8j) 7 

   )P7   Aj A j( 6   Ax6 E
  A

A  
   )07   Ax6  Aj A8j( 6 
 A j$ 
	# A k"$  A(j @ - (E@  B7 

@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@  B7 

  A j Ax!Ax! -  E
 - !"A"G@ A F
Ax!

 A0j"	 8 (0"AxG
@ - 4"@ 	 @ (0AxG@ A j A8j( 6   )07@

 A@k 
 (@AxG
	

 A@k  (@AxG
 A0j ; (<! (8! (4! (0

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG



  Aj  - E@Ax!
	
 - "A"G@Ax! A F
	Ax!
	
 A0j"	 8 (0"AxG
 - 4"@ 	 @ (0AxF@ A@k 

 A j A8j( 6   )07@
 (@AxG

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3301-3450



 AxG@ A4jA A E



 A@k  (@AxG
 A0j ; (<! (8! (4! (0E


 - 
Aj"Aq G

  : 
 A0j  (0AxF@   6
   6   6  A 6 

   )07  A
j A8j( 6   A6  E
  A

 Aj  - 	! - 
 


A  
  B7 


 A4j" )@7  Aj A j( 6  (4! (8! (<!
  6<  68  64

 !  ( 56@  A8j(  6 C - 4!
 A<j ( C6    (@6 9  : 8  64

 A4jA A

 A<j A j( 6   )@74
 AxrAxF

  A
 - 
Aj"Aq F

A  
  : 
   )47  A6   A
j A<j( 6 
 A j$ 
~# A@j"$  Aj Ax!A!@  @ - E
 Ax! - 	A"G
   A0j  (<! (8! (4! (0E@@ AxG@ !

@ E@A!

A ! A H
A -  A! A"E

    !
 Aj 6   6(  6$  )$"7  A
j 6    7A 

  6(  6$A
!
 A j j 6  Aj A,j( "6   )$"7  A
j 6    7A
6  A@k$ 
   
~# A k"$   Ax!A!  @@@@ -  E
 Ax! - A"G
   A8j  (D! (@! (<! (8E@ AxF@  6
  6 A j   -  
  )(7A !

  6
  6 A j   -  E@  )(7A 

  - !: 7 A6< A 68 B7D  A7jB 7X  AjB7P  A j6@ AjAr A8jA
! E
  A

  6  6
A
!
 Aj j 6 

  - !: 7 A6< A 68 B7D  A7jB 7X  AjB7P  A j6@ AjAr A8jA!
 
  )!A 

 )!   (
6A
6    7 A j$ 
# A0k"$  Aj ( "@ - E@  Ax6 

@@@@ - "A,G@ A F
 - 
  Ax6 

 - 
   Aj  - E
 - !

 A : 

  Ax6   A : 

  Ax6 

 A"G@Ax!  Ax  A F6 

 Aj @@ - E@Ax!

 - 	A"G@Ax!

  A j  ((! ($! ( E@ AxrAxF
  A

 AxF
 (,!
   6   6   6 

  Ax6   A: 
 A0j$ 

	# Ak"$  Aj ( "@ (AxF@   -  E@  Ax6 

@ - A F@  Aj A A (AxG
  B7 

 Aj!# A k"$  A j @ -  E@ Ax6 

@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ Ax6 


  Aj  - E@Ax!

Ax! - "A"G@ A F


 A j" 1 (D"AxG
 - H"@  @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8AxG
A 

-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3451-3600

 A j @ (DAxG@ A@k A j( 6   )D78

 A8j *
 (8"AxG
 (<!	A
! Aj  - E@Ax!

 - !@@ Aq"A,G@Ax! A G
	 



  Aj  - E@Ax!
	
 - 	"A"G@ A G
	Ax!
	
 A j"
 1 (D"AxG
@ - H"@ 
 @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8AxF


 
 A j @ (DAxF@ A8j *

 A@k A j( 6   )D78
 (8"AxG
 (<!	A!
   - ! -  
 
Ax!

 Ax6(  	6,

 Ax6 

A  
  )<7,  6(

 A(jAǀ A

 A0j A@k( 6   )87(

  ( I68  A j(  6 ; - H! !
 A0j ( ;6    (86 -  : ,  6(

 A(jAǀ A
@ - 
Aj"Aq F@  : 
 (,! (("AxG
 A j  (DAxF@ Ax6   6

  )D7  Aj A j( 6 

A  
  (06  6  6 
 A j$  (AxF@   (6  B7 

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 
 Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  ( (@ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  ) @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# A k"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  Aj  (" (
 ("@  A
@ (AxF@  Ax6 

   )7   Aj Aj( 6 
 A j$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ Aj 

 Aj  ( (
@ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 


# Ak"	$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 	Aj!# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
# Ak"$  A
j"
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj! Aj!
# A k"$  Aj"
  - 
! (!
@@ ("AxF@  :   
6
 
 A
j"A A 
@ (AxG
 
 AƇ A 
Aj@ (AxF@  (
 - 

-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3601-3750

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  6 

  )7  Aj A
j( 6 
 A j$ 
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxG
 Aj!# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 ( jA":    Aj"6 (  kA	I  A	 ( 
 (jA A	  (A	j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj!# A@j"$  A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,@ Aj AjE@ (
!   (" ( @  A
 A@k$ 

AČ A7 A?jA Aȍ  

@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   6  6 

  )7  Aj A
j( 6 
 A j$ @ 	(AxF@  Ax6 

   	)7   Aj 	A
j( 6 
 	Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!# Ak"$  (! Aj  ("@ (AxF@ - 
! (!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj   ("AxG
 AF
  A j! AtA k!@ (" ( F@ 
 ( jA,:    Aj6 Aj   ("AxG
 A j! A k"
 

  

  )7  6 

  )7  Aj A
j( 6 
 Aj$ @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 

~# A@j"$  Aj  -  ! (
!@@@@@ ("AxF@ (! - ! E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"A (  6   AjA /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  F ("AxG
 (" ( F


   / !; 	  A
j A#j-  :     :    6   6 

 

   )
7   6 

 ( jA,:    Aj"6 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"Aă (  6   AjAȃ /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6, Aj!# Ak"$  ) ! Aj) !# A k"$  !
# A k"$ @ "
PE@ 
B֭
Z@ 
B֭
R@ 
 
B֭
"B֭
~}"P 
B֭
Tq
Bȝ!B!
@@  } 
 T}"
B Y@ 
 }!
 
 ! 
P
 
!
 B? B! 
B!
 B!


 
B֭
"
 !
 
 
B֭
~}!
B !

 
 
 
"
 

-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3751-3900
~}!
B!

B֭
!
@A?A  
y"k BQ"A qE@ E
B  A?q"
B֭
A  kA?q!B֭
 
!


B֭
 A?q!B !

  
7   7B A?q! Aj) ! ) !@@ 
 } 
 T}"
B Y@ 
 }!
  ! 
P
 
!

 B? B! B! B!


 
B֭
"
 !
 
 
B֭
~}!
B !

 
 
B֭
"
B֭
~}!

  
7  
7  Aj 7   7 A j$  ) !
 Aj" Aj) 7  
7  A j$   Aj) "
7(  )"
7   
 
B֭
   Aj) }  ) "
T}"
78   
}"
70@ 
 
P@ A6| A 6x B7  A jB
7P  A j6 ( ( A j!

 B7p  A0jB
7h A6d A6T A 6P A6\ A:  A 6 B07 B7 A6x  A j"6`  A j6X A j A j" A 6X B7P A:  A 6 A 6 A 6 A 6 A 6x  6 A j E@ (P!  (T" (X! @  A
@ 
  A.
  (L! (H!@ "@  j"
Ak"-  "AtAu"	A H@ 	A?q 
Ak"-  "AtAu"	A@N@ Aq

 	A?q 
Ak"-  "AtAu"	A@N@ Aq

 	A?q 
Ak"-  AqAtr
Atr
Atr!
  k! A0F


   
  (D"@  A
A !

 (D"@ (H A
A!

A A7 AjA A  
 Aj$  
 (
!   (" ( @  A
 ( "AxF@   A 

   )7   6 
 A@k$ 
A A7 A?jA A  
X @@@@ AqAk 
   A A
   A A
   A A
   A A

# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kA
I  A
 ( 
 (jA A
  (A
j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!# Ak"$  (! Aj  ("@ (AxF@ - 
! (!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj  J ("AxG
 AF
  Aj! AlAk!@ (" ( F@ 
 ( jA,:    Aj6 Aj  J ("AxG
 Aj! Ak"
 

  

  )7  6 

  )7  Aj A
j( 6 
 Aj$ @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# A k"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ Aj 

 Aj  Aj  (" (
 ("E
   A
@ (AxF@  Ax6 

   )7   Aj Aj( 6 

-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:3901-4050
 A j$ 
# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"A A ? (AxG
   A
jG (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"AԈ A ? (AxG
  A׈ A A
j? (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
	A -  A!@AA"@ AjA /  ;   A (  6   @ A H
A -  A! A"E

   !
 ("	 (
F@# A k"$  A
j"( "AF@A A  
A!
A At" Aj"  K" AM"Al!
 A֪*IAt!@ E@A !


  Al6
  (6
  
6 Aj  
 Aj (@ (
 ( 
 (
!  6   6 A j$ 
 Aj"(  	Alj" 6  
6  6
 A6  6 A6   	Aj6   ) 7   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7   Aj ) 7 
AA 
   
_# A k"$  (! (!
  :  Aj Aj (!@@ (
"E@ Aj 
 AA c

A -   At"A"E
 ! ! !	@  
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! 
Aj!
 	Ak"	
 
 Aj 
   c  AtA
 ("@  AlA
# Ak"$  A
j  Aj"(" (" (
 @ (
"AxG@ A j! ("! (!A !	A !A !
A !# A0k"$  A:  A 6
  6  6 Aj!# A k"$   Aj"Ax!@@@@@@ -  @@ - "A"G@ A F
 B7 

 Aj .@ ("AxF@Ax!

  / 	; 	 A
j A
j-  :   - !  (
6
  : 
 A6   6

 - 
"E
  Ak": 
 Aq
Ax!
 A6   6

A  
  Aj!
# Ak"$  Aj" . - !@@@@@@@@ ("AxF@   ("AxG@ Aj A
j-  :    / 	;  - !

 Ak
 Aj A
j-  :    / 	; 
 (
! 
 / ; 	 
A
j Aj-  :   
 6
 
 :  
 6 
A6 

# A k"
$  
Aj!A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax! - E
 - "A"G@ A F
Ax!

 A@k"  (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4051-4200

 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k"  (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 AxG@ A(jA A E



 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  	6  6 A 6 

  )@7 A
j A j( 6  A6  E

 	 A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D! (H!	 (L!

  
60  	6,  6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 AxrAxF

 	 A
 - 
Aj"Aq G
	  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 

# A k"
$  
Aj!A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax! - E
 - "A"G@ A F
Ax!

 A@k"  (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG


-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4201-4350


  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k"  (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 AxG@ A(jA A E



 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  	6  6 A6 

  )@7 A
j A j( 6  A6  E

 	 A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D! (H!	 (L!

  
60  	6,  6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 AxrAxF

 	 A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 

# A k"
$  
Aj!A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax! - E
 - "A"G@ A F
Ax!

 A@k"  (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k"  (@"AxG
 - D"@  @ (@AxF@ A j 

-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4351-4500

 A j A j( 6   )@7P
 (PAxG



 AxG@ A(jA A E



 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  	6  6 A6 

  )@7 A
j A j( 6  A6  E

 	 A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D! (H!	 (L!

  
60  	6,  6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A(jA A

 A0j A j( 6   )P7(
 AxrAxF

 	 A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 

# A k"
$  
Aj!A !A !A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 

  Aj Ax!Ax!
 - E@Ax!


 - "	A"G@ 	A F
Ax!Ax!


 A@k % (@"AxG@Ax!
	
 A j!	@@@@ - D"Ak 
 A j  (PAxG
 A@k  (L!
 (H! (D! (@


 A j  (PAxG@Ax!
	
 A@k  (L! (H! (D!
Ax! (@E

	
 A@k @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 
AxG
 !


-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4501-4650
  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A@k % (@"AxG@ !

 - D"Ak
 !Ax!

 A@k @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxF
 !

 
AxG@ A(jA A !

 A j  (PAxG@ !


 A@k  (L! (D!
 ! (H! (@E



 AxG@ A(jA A ! 


 A j  (PAxG
 A@k  (L!
 (H! (D! (@E


 AxF@ A(jA A 
E
  
A

 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6  6  6  6
  6  
6 A6 

  )@7 A
j A j( 6  A6  
@  
A
 E
  A

   - ! -  
 
 !
	


 B7 


Ax!
 A(jA AAx!


 	 )P7  	Aj A j( 6  (D! (H! (L!

  
60  6,  6( !

 	 )P7  	Aj A j( 6  (D!
 (H! (L!
  60  6,  
6(Ax!


 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A0j A j( 6   )P7(
 AxrAxF

  A
 
AxrAxF
   
A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 

# A k"
$  
Aj!A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 

-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4651-4800
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax! - E
 - "A"G@ A F
Ax!

 A@k"  (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k"  (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 AxG@ A(jA A E



 A j  (PAxG
 A@k  (L!
 (H!	 (D! (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  	6  6 A6 

  )@7 A
j A j( 6  A6  E

 	 A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D! (H!	 (L!

  
60  	6,  6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 AxrAxF

 	 A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 

# A k"
$  
Aj!A !A !A !# A k"$  A j @ -  E@ B7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 

  Aj Ax!Ax!
 - E@Ax!


 - "	A"G@ 	A F
Ax!Ax!

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4801-4950


 A@k  (@"AxG@Ax!
	
 A j!	@@@@ - D"Ak 
 A j  (PAxG
 A@k  (L!
 (H! (D! (@


 A j  (PAxG@Ax!
	
 A@k  (L! (H! (D!
Ax! (@E

	
 A@k @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 
AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A@k  (@"AxG@ !

 - D"Ak
 !Ax!

 A@k @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxF
 !

 
AxG@ A(jA A !

 A j  (PAxG@ !


 A@k  (L! (D!
 ! (H! (@E



 AxG@ A(jA A ! 


 A j  (PAxG
 A@k  (L!
 (H! (D! (@E


 AxF@ A jA A  (L60  )D7( 
E
  
A

 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6  6  6  6
  6  
6 A6 

  )@7 A
j A j( 6  A6  
@  
A
 E
  A

   - ! -  
 
 !
	


 B7 


Ax!
 A(jA AAx!


 	 )P7  	Aj A j( 6  (D! (H! (L!

  
60  6,  6( !

 	 )P7  	Aj A j( 6  (D!
 (H! (L!
  60  6,  
6(Ax!


 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A0j A j( 6   )P7(
 AxrAxF

  A
 
AxrAxF
   
A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!	 
  
-  
 
B7  
@  
A
 	E AG AMqr
  	A

 
 6

-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:4951-5100
 
 6 
 
6 
A6 

 
- A G@ 
B7  
@  
A
 	E AG AMqr
  	A

  
 6 
 6 
 	6 
 6
 
 6 
 
6 
 6 
 
A j$ 
 Aj$  - 
Aj"Aq F@  : 
  )7  Aj A
j) 7  Aj Aj) 7  Aj A
j( 6 

A  
 A j$  ( ! (
! (!
@ ("	AG@ (,! ((! ($!   (AxF@  6  6  6  6
  6  
6  	6 

  )7 A
j A
j( 6  A6  
@  
A
 E 	AG 	AMqr
  A

  6
  6  
6 A6 
 A0j$ 

A  
A  
@ (PAG@   )P7  A
:    A
j A j( 6   Aj A j) 7   A
j A j) 7 

 A0j A j( 6   )T7(  A A
 A(jx
 E
  A

  6
  6 A
6$ A 6   AjB7H  A jB7@ AjA:   AjA(6  AjB7  A jB 7  A6< A6, A 6( A64 A6p A: l A 6h B 7` A6X A6P  A j68  A@k60  A
j A(j  ( !   (6   6  A:  
 Aj$  (" @ (  A
 A j$ 
A  
	~# A k"$   :  Aj Aj (!	@@ (
"E@ AjA AAA c

A -   At"A"
E
 	! 
! !
@ 	 
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!
  6  Aj 
6  Aj! Aj! 
Aj!
 
Ak"

 
 AjA A 
 c 
 AtA
 ("@ 	 AlA
# A k"$  Aj"(! (!	 A j" A j  @@@ (TAxF@ A
j A j( 6   )H7

 A0j" A j( 6   )T7( (H"@ (L A
 A@k ( 6   )(78 A A
 A8jw -  "A
G

 (!  	  (" (
 (
 A
! E
  A

   / ;    )7  Aj - :    Aj Aj) 7   A j A j) 7  )!   (
6
   7
   :   A j$  (" @ (  A
 A j$ 
A  
  ( "@  ( A

    ( "@  ( AlA
  ("@  (!@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

  (
"@  ( AlA
  Aj  ("@  (
 AlA
  ($"AxF ErE@  (( A

  A A

    RA 
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5101-5250
  AvAqAr: 
A

  ("  ( F@  
  ( j :     Aj6

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ 
C   (   ("kK@      (!
  ( j      j6A 
NA -  AA"@  6   6 B7 B 7  
AA 
QA -  AA"@ A 6 B 7    ) 7
 Aj  Aj( 6  
AA 
\
~# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -  Ak
 
 (!@ (
"
E@A!

 
A H
"A -  A! 
A"E
"
   
!  
6  6  
6 A 6  )7h  )7`  ) 7X A@k" (, (0  Aj A j   Aj - ! ( "A1G
 (@"@ (D A
 
A!!


 (!A!
 (
"@ A H
A -  A! A"
E

 
  !  6  6  6 A6  )7h  )7`  ) 7X A@k" (, (0  Aj A j   Aj - ! ( "A1G
 (@"@ (D A
 
A!!

  Aj Aj Aj Aj Aj( 6  A6  ) 7  )7h  )7`  ) 7X A@k (, (0 (D!@ (H"
E@A!

 
A H
 A -  A! 
A"E
 
   
!  
6  6  
6|  A j A j (  ($ ( (
 ( ( ( "A1G
	 (|"@ ( A
 (@"@  A
   -  AjW ( "A1G
 (! ("@ ( A
 AG AMq

 ("E

 ( A


 (!@ (
"
E@A!

 
A H
A -  A! 
A"E

   
!  
6  6  
6 A6  )7h  )7`  ("6\  ( "6X A@k" (, (0  Aj A j   Aj - !	 ( "A1G

 (@"@ (D A
 	

A!!

  )7  )7  ) 7 A j A(j A@k Aj"  (!@ ("E@A!

 A H
A -  A!
 A"E

   !  6`  6\  6X Aj! A@k!A !# Ak"
$  
A j A j"
 
A0j" 
( 
( 
A j  A j"
(!@@@@@@ 
("E@A!

 A H
A -  A! A"E

   ! 
Aj 
A j( 6  
Aj 
A j( 6  
A j Aj( 6  
 6, 
 6( 
 6$ 
 
)t7  
 
)h7
 
 ) 7 
(0"@ 
(4 A
 
A0j!# Ak"$  A 6
 B7 
(!
@@@@@@@@@ 
("@ ArgAsA	lA jAvAj" j"	 I

 
(! 
("@ ArgAsA	lA jAvAj" j" I

@@ 	 	 j"M@ 
(
! 
( "

A !	

-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5251-5400

A  
 
ArgAsA	lA jAvAj" 
j"	 I

@@   	j"	M@ 
((! 
(,"
A !

A  
 ArgAsA	lA jAvAj" j" I

 	 j" 	I
 A N@ @B
 Aj"    ( (
"kK@    (
!
 ( j 
    j6

 @B Aj"    ( (
"	kK@  	  (
!	
 ( 	j    	 j6

 
@B Aj" 
  
 ( (
"	kK@  	 
 (
!	
 ( 	j  
  	 
j6

 E
B" Aj"   ( (
"	k" I


 A6  6 Ax6 

A  
A  
A  
A  
A  
 Aj 	  ( (
"	k!
  I@ Aj 	  (
!	
 ( 	j    	 j6

  )7  Aj A
j( 6 
 Aj$  
(8!	 
(4! 
(0"AxG@A -  A%A"E
 A
jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   
A%6d 
 6` 
A%6\ 
 	6p 
 6l 
 6h  Aj 
A j 
A j 
- 0"A
G
 
(4! 
(8"! 
(<!# A k"$   6
  6 A 6 B7  Aj6
@@@@@@@@@@@@@@@@ (
"("	@ ( ",  "A H@@ 	A
M@  	jAk,  A H

 Aq , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
	 Ak!" , "A H@ Aq , "AqAtjAk! A H@ AI

  , "AqAtjAk! A H@ AI
  , "AqAtjAk! A H@ AI
 , "!! AkB
 "|!# A H@ 1 	""BV
 # # "B? !B B8|"!X@A
!

A  
 !BB8 #|!!A	!

 B
 "|!!A!

 B
 "|!!A!

 B
 "|!!A!

 BB
 "|!!A!


 A j A
j (PE@ )X!!

 (T!

 B!!  	Ak6  Aj6 


  )7  Aj Aj( 6 

AТ AT!


 !!A!

A  
 !!A!

A  
 !!A!

A  
A  
A  
A  
  	 k6   j6 
  !7  !BX
  A6T A 6P B7\  A jB7@  A@k6X A,j" A j U!

  !B""78 "BT@ !"AI@A AT!

 "!	 Av"AF@ Aj! A
j!# A@j"$   	: 
 A: 
 	AqAG@ A6
 A 6 B7$  A

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5401-5550
jB78  A
jB70  A0j6  A
j" Aj U

@@@ ( "	Aj( "E
 @@@@@@@@@ 	( "
,  "A H@@ A
M@  
jAk,  A H

 Aq 
, "AqAtjAk! A N
 AI
  
, "AqAtjAk! A N
 AI
  
, "AqAtjAk! A N
 AI
 Ak!" 
, "A H@ Aq 
, "AqAtjAk! A H@ AI
  
, "AqAtjAk! A H@ AI

  
, "AqAtjAk! A H@ AI
 
, "!! AkB
 "|!# A H@ 
1 	""BV
 # # "B? !B B8|"!X@A
!


A  
 !BB8 #|!!A	!


 B
 "|!!A!


 B
 "|!!A!


 B
 "|!!A!



 BB
 "|!!A!



 Aj  (@ (


 ( "	Aj( ! ) !!


 B!! 	Aj Ak"6  	 
Aj6 


 !!A!

	
A  
 !!A!


A  
 !!A!


A  
A  
A  
A  
A AT

 	Aj  
k"6  	 
 
j6 
  !Z@ Aj!A !# A k"
$ @@@ 	(" !"O@ 
 E@A!A

 A H
A -  A! A"E
A
A A
vgAtk AK
6
 
 6 
A 6 
 6 @@@@ 	("
   
K@ 
(! 
(! 	( !@  K
 
   
K"  kK@# Ak"$  
(!@@@@@@@@@@@@@@@@@@ 
(
"AqE@  j" I
 (AG@@  (
"
 
A	j" 
I
 A O
A tA 
"  I"E@A!

A ! A H
A -  A! A"E

A ! A 6
  6  6 
( !  
("
I@ AjA  
 (
! (!
  j  
  ("Ak6  
 j6
 AF@ ( "@ ( A
 AA
 
 )7  
 (6 
 
AtAr6


 
( " ("I
   k"j"
 I
 ( " 
O
  I  IrE@ 

-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5551-5700
   6  
 ( 6

  j"
 I
  
6 At" 
  
K" 
I
	  
k"  
kK


 
("
 I
 
 k"
 Av"j" 
I

  O  OqE@  j" I

 
 j"
 
I
 
( !  6
   k"6  
6 
 k I


 
( " k  ! 
 Aq6
 
 6  
 
 j"M@ 
 6

Aإ  
A AAȤ  
A  
# A k" $   A 6  A6
  A 6  B7  AjA  
   
Aؤ  
A  
 
 6


A  
A  
  
  ( ! (!

A  
A  
A  
A  
 Aj   (
! (!
 
  j6   M@ 
  k6  ("M@ 
  k6

Aȥ  
A  
 
  j6   O@ 
  k6

A  
 Aj$  
(! 
(!
@  M@ 
(  j   
(" 
("
I
  
k" I
 
 
 j"M
A  
A  
 
 6 	 
 k"
6 	  j"6  
  k"  
K
 



A  
A  
   
 
(!
 
( !
@ 
(
"	AqE@  	6
  
6  
6 A 6 

 
Aj! 
(!@ 
 
 	Av"j"M@   j"	M
A  
A  
  6  	6   
 k6 
A
j!
 (!	@@@ ("
 ( "G@A -  A
A"E
 A6  6  	6 Aģ !

 
E@A !A !A!	

A ! 	AqE
 	!

AA
 
 	Ar!A !
 
 6
 
 
6 
 	6 

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5701-5850
 6  
 6, 
($" I
 
A$j"	  k6  
 
(  j6  Aj 	) 7   
)
7 
 
A j$ 

   
   
 
A64 
A 60 
B7< 
 6\ 
 
A jB7P 
 
A,jB7H 
 
A j68 
A0jA  
A !# Ak"
$  A 6 ("	 ( "K@ A  	 (! ( !
 
Aj Aj) ""7  
 ) 7 @@ ""	  k"M@ 	
 
(!

   	 (  ("k!
 
(!  	I@   	 (!
 ( j  	   	j6 
A 6 
  	j"6
 
A
j A  
( (
  
Aj$ A 

A AT
! A@k$ A  E
  6P A j( "(" ( F@# A k"
$  ( "
AF@A A  
A 
At 
Aj 
A J" AM"	At! 
 
 
 
At6
 
 (6AA 
6 
Aj A IAt  
Aj 
(@ 
(
 
( 
 
(
!  	6   6 
A j$ 
 ( Atj"A
6
 Aǝ 6 A#6 A 6   Aj6 (P!

 	  A
jA 
"E



 A6T A 6P B7\  A8jB7h  A j6X A@k" A j U!
  6 Ax6  ("E
  ( A
 A j$  
(4! 
(0"AxG@  
(86
  6  6 A16  @  A
 
( "@ 
( A
 
(
"@ 
( A
 
("@ 
(
 A
 
($"E
 
(( A

  6 A6  E
  A

  	6  6 A6 

   
AA% 
  
/ 1; 	  
)@7 A
j 
- 3:   A j 
A j) 7  A(j 
A j) 7  
)4!"  
(<6  "7
  :  A6 
 
( "@ 
( A
 
(
"@ 
( A
 
("@ 
(
 A
 
($"E
  
(( A
 
( "@  A
 
( "@ 
( A
 
Aj$  (
! (!	 (! ( "A1G
    

A!

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:5851-6000

   ) 7   A<j A<j(  6    A5j A5j)  7    A-j A-j)  7    A%j A%j)  7    A
j A
j)  7    Aj Aj)  7    A
j A
j)  7     :    6  (@" E
 (D  A

   -  AjWA1! ( "A1F
   )7  A<j A<j( 6   A4j A4j) 7   A,j A,j) 7   A$j A$j) 7   A
j A
j) 7   Aj Aj) 7   A
j A
j) 7    6 
 (! (" @ (  A
 AG AMq
 (" E
 (  A

   ) 7   A<j A<j(  6    A5j A5j)  7    A-j A-j)  7    A%j A%j)  7    A
j A
j)  7    Aj Aj)  7    A
j A
j)  7     :    6  (@" E
 (D  A

   -  AjWA1! ( "A1F
   )7  A<j A<j( 6   A4j A4j) 7   A,j A,j) 7   A$j A$j) 7   A
j A
j) 7   Aj Aj) 7   A
j A
j) 7    6 
 (! (" @ (  A
 AG AMq
 (" E
 (  A

  Aj Aj Aj( 6  A6  ) 7  )7h  )7`  ) 7X A@k" (, (0  Aj A j   Aj - ! ( "A1F

   ) 7   A<j A<j(  6    A5j A5j)  7    A-j A-j)  7    A%j A%j)  7    A
j A
j)  7    Aj Aj)  7    A
j A
j)  7     :    6  (@" E
 (D  A

   ) 7   A
j A
j)  7    Aj Aj)  7    A
j A
j)  7    A%j A%j)  7    A-j A-j)  7    A5j A5j)  7    A<j A<j(  6     - :    6  (|" @ (  A
 (@" E
   A

   )7  A<j A<j( 6   A4j A4j) 7   A,j A,j) 7   A$j A$j) 7   A
j A
j) 7   Aj Aj) 7   A
j A
j) 7    6 
 (! (" @ (  A
 AG AMq
 (" E
 (  A

   ) 7   A<j A<j(  6    A5j A5j)  7    A-j A-j)  7    A%j A%j)  7    A
j A
j)  7    Aj Aj)  7    A
j A
j)  7     	:    6  (@" E
 (D  A

    -  AjM -  "A
F
   ) 7 	  A(j A j)  7    A!j Aj)  7    Aj Aj)  7    Aj A	j)  7     :   A6 
 (! (" @ (  A
 AG AMq
 (" E
 (  A

A !
 A H
A -  A!
 A"E

  	 ! Aj Aj( 6   6  6  6 A6  ) 7   -  AjW ( "A1F@ ("@ ( A
  6  	6  6 (! ("@ ( A
 AG AMq

 ("E

 ( A


   )7  A<j A<j( 6   A4j A4j) 7   A,j A,j) 7   A$j A$j) 7   A
j A
j) 7   Aj Aj) 7   A
j A
j) 7    6  (" @ (  A
 (" @ (  A
 E

 	 A


   
 
  
 
  
   )7  A8j A8j) 7   A0j A0j) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7    6
   	6   6   6 
	
A1!

 (@"@ (D A
 E@A!!

   -  AjWA1! ( "A1F
   )7  A<j A<j( 6   A4j A4j) 7   A,j A,j) 7   A$j A$j) 7   A
j A
j) 7   Aj Aj) 7   A
j A
j) 7    6 
 (! (" @ (  A
 AG AMq
 (" E
 (  A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

 (! ("@ ( A
 AG AMq
  ("E
  ( A
 A1F
    6 


-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6001-6150
 B7  B 7 B7 B 7 B7 A -  @@@@@AA"
@A -   
AjA )  7   
A )  7  AA"E
 A 6l  6h B7`  
6\ A6XA -  A(A"E
 A j" A(j A 6 B7| A:  A 6 A 6 A 6 A 6 A 6  A j"6  Aj"
A -   (! (!	 (|!AA"E
 A 6  6 A6  6|  "@ ("E
 ( A

 (! ("AxF
 (! Aǎ 6  6  	6
  6 A6 A 6  A$j 6  A j 6  A
j 6  AjA
6   A(j6 A6  6  6 A j Aj A j" A j) 7  A j" A j) 7   )X7@ ( " (F@ Aj
 (
 Alj" )@7  Aj ) 7  Aj ) 7  A j" Aj6    ) 7  A
j Aj) 7   Aj Aj) 7   A
j Aj) 7   A,j A(j) 7   A$j ) 7   A16  (p" E
 (t  A

AA 
AA 
AA( 
AA 
AČ A7 AjA Aȍ  
    @ 	 A
 A(A 
AA AA O (p" E
  (t  A
 Aj$ 
  
 

~# A k"$  (!
 ( !
  : _ A0j A j (4!	@@@@ (8"E@ AjA AAA c

A -   At"A"
E
 	! 
! !@ 	 
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! 
Aj!
 Ak"
 
 AjA A 
 c 
 AtA
 (0"@ 	 AlA
 A0j 
 (
" ( 
(
  (0"AxF ErE@ (4 A
 ("@  A
 AxG
 A0j 
 
  M - 0A
F@  A16 

 A(j A j") "7  A j A j") "7  Aj A@k") "7  Aj A8j") "7   )0"7 A<j 7  A j 7  A j 7  A j 7   A6   74   )07  A
j ) 7   Aj ) 7   A
j ) 7   A$j ) 7   A,j A j( 6 

A  
   :   A-6 
 A j$ 
# A k"$  Aj (  ((
 @@ ("AxF@  A:  

 (! (
AF@ -  !A


 A 68 B70 A: \ A 6L A 6X A 6T A 6D A 6<  A0j6PA A  A<j
 A(j A8j( 6   )07  Aj (
! (!A
! @  A
   6   6   :    :     ) 7
  Aj A(j( 6 
 A j$ 
A A7 A jA A  
    (  (( 
 A AA  
 A AA  
 A AA  
 A AA  
 A AA  
 A AȂ  
 A AAܑ  
@@@@@@@@@@@@@@@  -  
	


 
  (!  (" ( "@   
  ("E




@  - 
A
I
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E




@  (
AG
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E



  (
"@  ( A
  (!  (" ( "@   
  ("E
	


  (
"@  ( A
  (!  (" ( "@   
  ("E


-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6151-6300
	
  (!  (
" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E
     (

    (
@@@@@@@@@@@@A	  ( Ak" A
O
																				 
  ("E

	
  Aja

  (" (
"AxF ErE@  ( A
  ( "@  ( AtA
  AA
  - A
I
  (
!  (" ( "@   
  ("E


  (AG
  (
!  (" ( "@   
  ("E


  ("E


  ("@  ( A
  ("E
  ( A
  ("E


  ("E
   ( A

  ( A
    (
	# Ak"$ @ Aj"@@ Ak"@ At! A K
A -  A!
 A"E
  6  6

 A 6
 B 7# A k"$  Aj"( "AF@A A  
A!
A At"	 Aj"
 	 
K"	 	AM"
At!
 	AIAt!	@ E@A !


  At6
  (6
  
6 Aj 	 
 Aj (@ (
 ( 
 (
!  
6   6 A j$  (!
  6  6 A! A6
 @  Atj"
Ak"	 k"
Av" (AkK@ Aj!# A k"$  Aj"E@A A  
A!A ( "At"
   
I" AM"
At!
 AIAt!@ E@A !

  At6
  (6
  6 Aj  
 Aj (@ (
 ( 
 (
!  
6   6 A j$  (
!
 ( Atj  
   j"6
   (  	(  
Ak(  (" @ (  AtA
 Aj$ 
A  
AԒ  
 
  
# Ak"	$ A -  AA"E@AA 
  6  6  	 6 	A6
 	A6# A0k"$ A" "j!
 Aj!@@@@@ ( "Aj" I
  j" I
 Aj! ! Ak"
 
A!@@ @A ! A H
A -  A! A"E


-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6301-6450
A ! A 6  6  6
@ ("AO
 ( ! (
 kAM A
j A (! ( 
 j At AqAvr;    (Aj"6  (
 kK@ A
j   (!
 (" j     j"6 Aj" 
G
 


   
   )
7   Aj Aj( 6  A0j$ 

A  
A  
 A 6( A6
 A 6 B7  AjA  
 	(" @   AtA
 	Aj$ 
~# A@j"$  (! (!@@@@@@ -  AF@ A6

 A8j Aj) 7   ) "70 Aj!@@@@@ AqAk 
  A0jAr A 6

  A0jAr A6

 (8!@ (<"E@A!

 A H
A -  A! A"E

   !  6
  6  6 A 6

 (8!A! (<"@ A H
A -  A! A"E

   !  6
  6  6 A6
 - 0AI
  (4"E
  (8 A
@ -  AF@ A6 

 A8j Aj) 7   ) "70 A$j!@@@@@ AqAk 
  A0jAr A 6 

  A0jAr A6 

 (8!@ (<"E@A!

A ! A H
A -  A! A"E

   !  6,  6(  6$ A 6 

 (8!A! (<"@A ! A H
A -  A! A"E

   !  6,  6(  6$ A6 
 - 0AI
  (4"E
  (8 A
 Aj! Aj! A j!A !# A k"$ @@@ E@A!

 A H
A -  A! A"E

   ! Aj!
 !# Ak"	$ @@@@@@ ( Ak 
@ E@A!


 A H
A -  A!
 A"
E

 
  ! 
 6 
 6 
 6 

 (
!
 (! (!@ E@A!


 A H
A -  A!
 A"
E

 
  ! 	 6
 	 6 	 6 
@ 	Aj  
 	(!
 	(
!
  
j  
 
Aj  
j6  
 	)7  E
  A

 (! (!
A!@ (
"@ A H
A -  A!
 A"E

   ! 	 6
 	 6 	 6 	AjA !
 	("
 jA :   	(!A! @ A H
A -  A!
 A"E

   ! 	A
j" 6  	 6 	 6 	Aj  Aj" ( " 	(j 
  
Aj  j6  
 	)7  @ 
 A
 
E
  
A

 
  
 	Aj$ 

 
  
 Aj!
 !A !# Ak"$ @@@@@@@@ ( Ak 
 E@ 
A 6 
B7 

A !

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6451-6600
 A H
A -  A!
 A"E
   ! 
 6 
 6 
 6  Ak!@  j"-  "AF@ A :   Ak"



  jAk Aj:  

 (!
 (!
A! (
"
@ 
A H
A -  A! 
A"E

  
 
!  
6
  6  
6 AjA ! (" 
jA :   (!A! @ A H
A -  A! A"E

   ! A
j" 6   6  6 Aj  
Aj" ( " (j   
Aj  j6  
 )7  @  A
 
E
 
 
A

 (
! (! (!@ E@A!


 A H
A -  A! A"
E

 
  !  6
  6  6 @ Aj   (!
 (
!
  
j   
Aj  j6  
 )7  E
  A

 
  
  
 
   
   
 Aj$    (
" ( (" (
A (
  (! ( ! ("@  A
 ("@  A
A -  AA"
AA 
   
  6
  6  6  6   6 A 6  6  A j$ A -   (
! (!AA"
AA 
   
   
   
   
  6   6  A 6   6  A@k$ 
# Ak"$ @@@@A  ( " ( Ak" AOAk 
 A A

   6 A A AjAؗ 

 A A


   Aj6
 AԘ A
Aޘ A A
jAĘ 
!  Aj$   
# Ak"$ @@@@  ( " ( Ak 
   Aj6 A A AjAؗ 

 A A


 A A

   Aj6
 A A	 A
jA 
!  Aj$   
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A@k Aj) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A ji Aj$ 
&# Ak"$ @@@@@ (" (0G
  (" (, 
 A!@@@@ -  "AkA  AqAFAqAk 
  q -  !

 A:    - : 

 Aj AjA! A:  
 AkA  AqAFAqAk
  A%6 A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @ (  A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @   AtA
 (" @ (
  A
 ((" E
 (,  A

     VA!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6601-6750
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @   AtA
 (" @ (
  A
 ((" E
 (,  A

 A j A0j) 7  A j A(j) 7  A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7(  ! A(j!
 - !
A ! # Ak"$  A:  (! ( ! A j"A Ad Aj    Aj" e (
! (! ( "@ ($ A
 A j  (
" @@@@@@ -  "AG@@  Aj" E
 (<! (8!	 (4!
 (0!
 (,! ((! ($!@@@@@@@@@@@@@@ Aq	


 
 
 	( "@ 
  
 	("E

 
  	(


@ AqA
I
  	( "@ 
  
 	("E
  
  	(
 ( "@   
 ("E

   (


@ AG
  	( "@ 
  
 	("E
  
  	(
 ( "@   
 ("E
   (


 @ 
 A
 ( "@   
 ("E
	   (
	
 @ 
 A
 ( "@   
 ("E
   (

 ( "@ 	  
 ("E
 	  (

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 	@  	A
 ( "@   
 ("E
   (

 @ 
 A
 	@  	A
 ( "@   
 ("E
   (

 ( "@   
 ("E
   (

 ( "@   
 ("E
    (
 A j    -  "AG
 

 ( "@   
 ("@   (
@@@  AO@ A j( !  
: P A j A j ($!@ (("E@ A jA AAA c

A !A -   At" A"	E
 !  	! !
@  Alj!
@@@@@@  -  Ak 
  Aj( !
  Aj( 

  Aj!
A

 
Aj!
A

 
Aj!
A

 
Aj!
A

 
Aj!
A
!  

-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6751-6900
6  Aj 6   Aj!  Aj! Aj! 
Ak"

 
 A jA A 	 c 	 AtA
 ( " @   AlA
  (|"  (   (x"@   A
 B7@ B 78 B70 B 7( B7 A -  AA" E
A -    AjA /  ;    AjA )  7    A )  7  AA"E
 A 6d  6` B7X   6T A6PA -  A(A"E
 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6x  Aj6 
A(j"  A jE
AČ A7 AjA Aȍ  
 A(6  
(" @ 
(
  A
 
A(j! 

AA( 
 A j Aj( 6   )7hA -  AA"E
 A 6  6| A6x A j"
 
Aq"A	K A O@ 
 A n"A0rR 
 A lk!

 A j 
AqA
n"A0rR 
 A
lk 

A0rAqR A$j Aj"( 6  A
j )x7  A6 A 6   )h7 Aj A j( 6  AjA6  AԎ 6  A(j6 A6  6  6 A j Aj Aj" A j) 7   A j) 7   )P7x A8j"	 (<" )x7  Aj ) 7  Aj ) 7  A@k"A6   ) 7 A
j A(j) 7  Aj A0j) 7  A
j 	) 7  A,j A j) 7  A$j ) 7  A16  
("E
  
(
 A
  ( " @ 
(,  A
 Aj$ 

A  
A   
AA 
AA 
AA 
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" E
   AtA

 A j A0j) 7  A j A(j) 7  A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7( A 6t B7l A:  A 6 A 6 A 6 A 6 A 6x  A j6 ( (
 A jE@ A j A j( 6   )l7` A(j!# A0k"$ @@@@@@ A j"(AM@A -  A
A"	E
A -   	AjA (  6   	A )  7  AA"E
A -  AA"
E
 A6  
6 A6   )(7
A -   
AjAǏ (  6   
Aď (  6   Aj A0j( 6 AA"
E
 A6 
Aы6   A jA6  A
j 
6  A$j ) 7  A,j Aj( 6  A j"
B7  Aj"B 7  Aj"
B7  Aj"
B 7  B7   (
"B7  	6 A
6  A6  6 
A6    ) 7  A
j 
) 7   Aj 
) 7   A
j ) 7   A,j A(j) 7   A$j 
) 7   A16  (" E
 (
  A

  A.6  ( " @ (  A
 (" @ (
  A
 ((" E
  (,  A
 A0j$ 

AA
 
AA 
AA 
AA 
 (" @ (  A
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" E
   AtA

A A7 AjA A  
 Aj$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  A@k Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj A j) 7   ) 7P  ) 78  ) 7h A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7    A j  A8j A ji Aj$ 
7  ( !  (" ( "@   
  ("@    (

	# Ak"$ @@ @ Aj!  ( !  ((
!@ A4j    (4"AxF
 (8! (<AF@ -  !A


 A 6X B7P A: | A 6l A 6x A 6t A 6d A 6\  A j6pA A  A j
 A j A j( 6   )P7@  (!	 ( !
A
!  @  A
  )@7  Aj A j( 6   	6  
6
  : 	   :   A
kAO@ Aja
 Ak"
 


-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:6901-7050
A !
 Aj$  
A A7 A@kA A  

# Ak"$ @@@ @ Aj! ( ! ((
!	@ A4j  	  (4"AxF
 (8! (<AF@ -  !
A


 A 6X B7P A: | A 6l A 6x A 6t A 6d A 6\  A j6pA A  A j
 A j A j( 6   )P7@  (!
 ( !
A
! @  A
  )@7  Aj A j( 6   
6  
6
  
: 	  :  A
kAO@ Aja
 Ak"
 

   X

A A7 A@kA A  
  A:  
 Aj$ 
  AЗ A
# Ak"$ @@@@@A  ( Ak" AOAk 
   Aj6 A A AjAؗ 

 A A

   6
 A A A
jA 

 A A


 A A
!  Aj$   
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
  ( j :     Aj6

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ A 
 - !@@@@@@@@@@ -  "Ak 
 (!A!A! (
"@ A H
	A -  A! A"E
	
   !   6
   6   6 (! ("@A ! A H
A -  A! A"E

   

 (!A!A! (
"@ A H
A -  A! A"E

   !   6
   6   6 (! ("@A ! A H
	A -  A! A"E
	
   

  Aj Aj (! ("E@A!A  

 A H
A -  A! A"E
   

  Aj Aj  Aj Aj ( !@ ($"E@A!

 A H
A -  A! A"E

      6
A$!A 

 (!A!A! (
"@ A H
A -  A! A"E

   !   6
   6   6 (! ("@A ! A H
A -  A! A"E

   

  Aj Aj (!@ ("E@A!

 A H
A -  A! A"E

   
   6A!A
  j 6    j 6    :     : 
 
   
   
~# A k"$  !
 ( ! (!# A k"
$ A -  @@AA"@ A A!A -  AA"E
 AǙ A! 
A6
 
 6 
A6 
A6 
 6
 
A6# A k"$ A ( !AĊ ( ! A j" A j! 
Aj!	# A k"
$  
Aj"  
- 
! 
(!
@@ 
("AxF@ 
 :  
 
6
  
A
j"A A 	? 
(AxG
  A A 	A

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7051-7200
j? 
(AxF@  
(
 
- 

  
)7  Aj 
A
j( 6 

  
/ 
; 	 A
j 
Aj-  :    :   
6  6 

  
)7  Aj 
A
j( 6 
 
A j$ @@@ (TAxF@ A
j A j( 6   )H7

 A0j"
 A j( 6   )T7( (H"@ (L A
 A@k 
( 6   )(78 A A A8jw -  "A
G

 (!
    (" (
 (
 A
! 
E
  
A

 
 / ;  
 )7 
Aj - :   
Aj Aj) 7  
A j A j) 7  )! 
 (
6
 
 7
 
 :   A j$  AA 
("
@ 
( 
A
 
A j$ 

AA 
AA 
@ -  A
F@ A0j A0j) 7  A(j"
 A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  A8j" q# Ak"$  A j   V A@k" A j) 7  A j" A j) 7  A j" Aj) 7  A j"
 Aj) 7  A j" Aj) 7   )l78@@@@@@@@@ (h"A1F@ Aj ) 7  Aj ) 7  A j ) 7  A(j 
) 7  A0j ) 7   )87 AjO B7 B 7 B7x B 7p B7hA -  AA"E
A -   AjA )  7   AjA )  7   A )  7  AA"E
 A 6
  6 B7  6
 A6A -  A<A"	E
 A 6 B7 A: X A 6H A 6T A 6P A 6@ A 68  Aj"
6L 
 A8j"
A -   (! (! (!AA"E
 A 6@  6< A68  6  
"@ (8"E
 (< A

 (<! (8"
AxF
 (@!A -   - !AA"E
 A 6@  6< A68 A8j" Aq"A	K A O@  A n"A0rR  A lk!
 A8j AqA
n"A0rR  A
lk 
A0rAqR 	A8j A@k( 6  	A0j )87  	A,jA6  	AԎ 6( 	A$j 6  	A j 6  	A
j 
6  	AjA
6  	Aǎ 6 	 6 	 6
 	 6 	A6 	A 6   	A<j6D A6@  	6<  	68 Aj  Aj" Aj) 7  Aj" Aj) 7   )7 ("
 (F@ Aj
 ( 
Alj" )7  Aj ) 7  Aj ) 7  Aj" 
Aj6    )h7  A
j A j) 7   Aj A j) 7   A
j Aj) 7   A,j Aj) 7   A$j ) 7   A16  (" E
	 (
  A
	
   )74  A<j Aj( 6   A,j ) 7   A$j 
) 7   A
j ) 7   Aj ) 7   A
j ) 7    )87   6 

AA 
AA 
AA< 
AA 
AČ A7 AjA Aȍ  
AA 
    @  A
 	A<A AA AA A jO
 (" @ (
  A
 A(j!

 
( " @ (,  A
 Aj$  - 8! (<" @ (@  A
 (H" @ (L  A
@ AG
  (T" E
  (X  A
 -  ! (" @ (  A
 (" @ (  A
@ AG
  (
" E
  (   A
 ( " @ (  A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" E
   AtA

 A j A j"
) "7  A j Aj") "7  A j Aj"
) "7  A@k Aj") "7   ) "78 A
j 7  Aj 7  A
j 7  A$j 7   A6   7   ) 7  A
j ) 7   Aj 
) 7   A
j ) 7   A$j 
) 7   A,j A(j( 6  -  ! (" @ (  A
 (" @ (  A
@ AG

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7201-7350
  (
" E
  (   A
 ( " @ (  A
 (!
 (" @ 
Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @ 
  AtA
 (" @ (
  A
 ((" E
  (,  A
 A j$ 
 @@@@@@@ Ak 
 (  A杛F


 )  Bݲ Q
  Aj" )  Bҵǭ R
 A:  

 A A

   A: 

  Aj
A:  

  A: 

  A : 
  Ax6 


~# A k"$ @ (
"	AxG@ - $!
 )
! (
! (! (!
 (!
 A#6@ 
AxF@  A#6  	E
 
 	A

 Aj"b  )7  )7  ) 7 A j" 
  A j"  B  ! A  (T"AxG!# Ak"$ @@ 
E@ 
  A#6 

 B7` B 7X B7P B 7H B7@  Aj A@kA A	K  A16 

@@ ("
A O@ A@kA  (  ( ("-  L - @"
A
F@ A;j A j( "
6   Aj A j) 7  Aj A j) 7  Aj 
6   )D7  A j Aj 
AkA ( "tAqE@A tA(q
 ((A F
  A$6 

 ((A F
  A$6 

 A7j" A j)  7   A0j" A j)  7  A(j A j)  "7   ) A"7  )`!  A j )  7    Aj ) 7    Aj 7     7 	   7(   
:   A6 

  A$6 

 A@k     A j - D!@ (@"A1F@ 
  A!6 

   ) E7   A<j A j(  6    A5j A j)  7    A-j A j)  7    A%j A j)  7    A
j A j)  7    Aj A j)  7    A
j A j)  7     :    6 

 B7` B 7X B7P B 7H B7@  Aj A@kA A	K  A16 
 ( " @ ($  A
 ( !  ("@ ( A
  AG  AMq
  (" E
  (  A
 Aj$  
@  
A (T!
 E AxFrE@ (X A
 (H" @ (L  A
 	E
  
 	A
 (! ("@ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 ( " E
   AlA

 B7( B 7  B7 B 7 B7  Aj AjA AK  A16 
 (" @ (
  A
 ((" @ (,  A
 A j$ 
N"~# Ak"$ A̚ ( !#  " (!  (!  ( !  A
A "(!
 (!  ( ! A
A "(! (! ( ! A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 Aj Aj( 6   )7  A jA A x A6H
 @  A
@@@@ (HAG@ A@k A j) 7  A8j A j) 7   )H70 (`! (d! )h!& (p! (t! )x!' Aj  
@ (AxG@ A j Aj) 7  A j Aj) 7   )7L A
: H

 Aj Aj( 6   )7  A jA A  x
  @   A
 - HA
F@ (`! (\!
 (X!
 (T!$ (P!" (L!
 Aj!A !# A k"$  A: 
 A 6  6  6  A j!
# A0k"$   Ax! @@@ -  @@ - " A"G@  A F
 
A:   
Ax6

 Aj ,@ (" AxF@Ax! 

 
 / 
; 	 
A
j Aj-  :   - 
! 
 (6
 
 : 
 
A:   
  6


-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7351-7500
 - 
" E
   Ak" : 
  Aq
Ax! 
 
A:   
  6

A  
  Aj!# Ak"
$  
Aj" , 
- !@@@@@ 
(" AxF@   
(" AxG@ 
Aj 
A
j-  :   
 
/ 	;  
- !

 Ak
 
Aj 
A
j-  :   
 
/ 	; 
 
(
!  
/ ; 	 A
j 
Aj-  :    6
  :    6 A:  

# A k"$  A j!A ! # Ak"$  A j @@@ -  E@ A:   Ax6

@@@@@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ A:   Ax6

  Aj Ax!A! - E
 - " A"G@  A F
Ax!

 A j" & (X" AxG
 Ar!@ - \" @  @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG


 Aj  (AxG
 A j ' - X"AF
 A j Aj-  "	:   A j 	:    /  "	;T  	;P (\!	 (`! (d! (h!
 (l! (p!  (t!
 (x! (|!!
 Aj  - E
 - !@@ A,G@Ax! A G
	 AG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A j" & (X" AxG
@ - \" @  @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 AG@ A,jA A

 Aj  (AxG
 A j ' - X"AF
 A j Aj-  "	:   A j 	:    /  "	;T  	;P (\!	 (`! (d! (h!
 (l! (p!  (t!
 (x! (|!!
   - ! -  



  /P; )  !6L  6H  
6D   6@  6<  
68  64  60  	6,  A j-  : + - 
Aj" Aq  G
   : 
 AF

 A j"  A j) 7  A j" A@k) 7  A j A0j)  7    )87h  ) )7 Y  : X Aj  (AxF
  )7 A
j Aj( 6  A:  A! @@ AkA  AqAFAq 
 (\" @ (`  A
 (h" @ (l  A
A
!  AG

 A j  j" ( "E

  ( A


 A:   Ax6


A  
  )X7  A j  ) 7  Aj ) 7  Aj A j) 7  Aj A j) 7 


 A j"  )7   Aj Aj( 6 
  (d64  )\7,

  !  ( ]6  A j(  6  - \! 
 A4j ( 6    (6 1   : 0  6,

 AjA A A4j Aj( 6   )"%7 [  %7,

 A4j Aj( 6   )7,
 AF

 	@  	A
 
@  
A
 
E AGr
   
A
 - 
Aj" Aq  G
   : 

  ),7 A:   A
j A4j( 6 
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A

-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7501-7650
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 

# A k"$  A j!# Ak"$  A(j @@@ - (E@ A:   Ax6

@@@@@@@@ - )A F@ - 
" E
   Ak" : 
  AqE@ A:   Ax6


  A j  -  E@Ax! 

Ax!  - !"A"G@ A F


 A j"
 ! (X"AxG
@ - \"@ 
 @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG


 A j @ (XAxG@ Aj A j( 6   )X7

 Aj 
 ("AxG
 - !	
 Aj  - E@Ax! 

 E!
 - !@@ Aq"A,G@Ax!  A G
	 




  Aj  - E@Ax! 
	
 - "A"G@ A G
	Ax! 
	
 A j"
 ! (X"AxG
@ - \"@ 
 @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxF


 

 A j @ (XAxF@ Aj 

 Aj A j( 6   )X7
 ("AxG
 - !	A!

 Aj  - 	! - 
 
Ax! 

  	: 1 - 
Aj" Aq  G
   : 
 A j"  A0jAr"Aj)  7   A: X  )  7 Y Aj  (AxF@  )X7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj  ) 7 


  )7 A
j Aj( 6  A:   A j
	
 A:   Ax6

A  
 A<j Aj(  6    ( 6 9  - : 8  64

 A4jA A

 A<j Aj( 6   )74

  ( ]6  A j(  6  - \! ! 
 A<j ( 6    (6 9  : 8   64

 A4jA A
 - 
Aj" Aq  G
   : 
 A
j A<j( 6   )47 A:  
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 

# A k"$  A j!A ! # Ak"$  A(j @@@ - (E@ A:   Ax6

@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@ A:   Ax6


  A j Ax!Ax! -  E
 - !" A"G@  A F
Ax!

 A j"

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7651-7800
  (X" AxG
@ - \" @ 
 @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG
	

 Aj  (AxG
 A j  (d!
 (`!	 (\! (X

 Aj  - E
 - !
@@@ 
A,G@Ax! 
A G
	 AxG



  Aj  - E@Ax!
	
 - "
A"G@Ax! 
A F
	Ax!
	
 A j"
  (X" AxG
 - \" @ 
 @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 AxG@ A4jA A E



 Aj  (AxG
 A j  (d!
 (`!	 (\! (XE


  
6<  	68  64 - 
Aj" Aq  G
   : 
 A j"  A8j)  7    ) 17 Y A: X Aj  (AxF@  )X7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj  ) 7 

  )7 A
j Aj( 6  A:   A j


 Aj  - 	!
 - 
 


A  
 A:   Ax6
	
 A j"  )7   Aj Aj( 6  (\! (`!	 (d!

  
6<  	68  64

  !  ( ]6  A j(  6  - \! 
 A<j ( 6    (6 9   : 8  64

 A4jA A

 A<j Aj( 6   )74
 AxrAxF

 	 A
 - 
Aj" Aq  G
   : 
 A
j A<j( 6   )47 A:  
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 
 
Aj$  - 
Aj" Aq  F@   : 
 
 )7  
Aj Aj) 7  
Aj Aj) 7  
Aj A j) 7  
A j A(j) 7 

A  
 A0j$ @ - H" AG@ A(j" A j) 7  A0j" A j) 7   ) I78  A j)  7 ? Aj" ) ?7    )X7    :   )87  
  (HAxF@  )7  A j ) 7  Aj ) 7  Aj A j) 7  Aj ) 7 

  )H7 A
j A j( 6  A:  A!@@  AkA   AqAFAq 
 ("@ ( A
 ( "@ ($ A
A
!  AG

 Aj j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  
 A j$ @ - " AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7L

 Aj Aj( 6   )7  A jA A x
 @  A
  AG@ Aj A j") 7  Aj A j") 7  Aj A j") 7  Aj A j") 7  Aj A8j) 7  Aj" A@k) 7   )L7  )07 A 6 A 6 A 6  6  
6  
6  $6  "6  
6  '7  6  6  &7  6  6  Aj" 6   6   6 A jA Aj Aj Aj"  Aj #  (HA1F@ A(j A j) 7  A j ) 7  Aj ) 7  Aj ) 7  Aj ) 7   )L7 

   Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   A j) 7  Aj A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 A
j Aj( 6   )7 Ax6   b


-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7801-7950
 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ A
j Aj( 6   )7 Ax6   a 
@ " 
A
 @ 
Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 
@ 
 
AtA
 @  A
 E
  A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ A
j Aj( 6   )7 Ax6   a @  A
 @  A
 E
  A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj" Aj
 A
j Aj( 6   )7 Ax6  a @  A
  E
    A
 A j  - HA
F@A -   (T! (L! (P!A
A" E
   6   6   6   Aj$   

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7A A+ AjA A  
A A7 AjA A  
AA
 
A A7 AjA A  

 @@@@@ Ak 
 A A
  Ax6   A: 
 Aݚ AE


 (  AڥG
   Ax6   A: 
    A A
  Ax6   A : 
# A@j"$ @@@ E@A!

 A H
A -  A! A"E

   ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6, Aj!# A0k"$  ( AxF@ (A A ((
 

  6 A6
 A 6 B7  A,jB
7   A j6  Aj6, ( ( Aj
! A0j$  
   )
7  A j Aj( 6   ( ! (!   6   6   6
   6   6  A	:   ( " AxF  ErE@ (  A
 A@k$ 
   
A A7 A?jA A  
# A@j"$ @@@ E@A!

 A H
A -  A! A"E

   ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj
   )
7  A j Aj( 6   ( ! (!   6   6   6
   6   6  A:   ( " AxH  ErE@ (  A
 A@k$ 
   
A A7 A?jA A  

    ( -  AtAس j( A
(    ( -  At" A j(   A j( 
#  A A   ( -  " A
A  
#  A AУ   ( -  " A
A  

   ( " Aj(   Aj(  
2 (
"AqE@ A qE@   
   
   
~ (
"AqE@ A qE@   
# Ak"$   ) !A ! @   jA j Aq"A0r A7j A
I:    Ak!  BT! B! E
 
  Aj"AO@ AAȷ  
 AAط A   jAjA   k!  Aj$   
   
   A  
D@  -  A
I
   (!  (
" ( "@   
  ("E
     (

D@  ( AG
   (!  (
" ( "@   
  ("E
     (

  A A
   (  ( 
# Ak"  :  - 
# Ak"$ @@@@@@@@@@@@@  -  Ak
	


 
   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A A
A A  A
jAХ A A	 A
jA 


   Aj6

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:7951-8100
 A A
A A  A
jAХ A A	 A
jA 
	
   Aj6
 A AA A  AjA A A  AjA A  A
jA 

   Aj6
 A A
A A  A
jAХ A A	 A
jA 

   Aj6
 A A
A A  A
jAХ A A	 A
jA 

   Aj6
 A AAƦ A  A
jAХ A A	 A
jA 

   Aj6
 Aʦ AAҦ A
  A
jAХ A A  AjAХ A  A
jA 

   Aj6
 Aݦ A
A A
  A
jAХ A A  AjAХ A  A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 

   Aj6
 A A
A A  AjA A A	 A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 
!  Aj$   
<# Ak"$    6
 Aܧ A
A A	 A
jA̧ !  Aj$   
  A A
M# Ak"$    Aj6
 Aب AA A
  A AҦ A
 A
jAȨ !  Aj$   
# Ak"$ @@@@@@@@@@@  -  Ak
	
 
   Aj6 A A
A A AjA 


 A A
	
 A A


 A A

 A A

 Aʩ A

 Aݩ A

 A A


 A A

   Aj6 A AA A AjA 

   Aj6
 A A
Aʪ A
  AjA A A	 A
jA 
!  Aj$   
# Ak"$ @@@@  ( Ak 
 A A

 A A

 Aݩ A

   Aj6
 A A
Aʪ A
  AjA A A	 A
jA 
!  Aj$   
# A0k"$   6
 A 6 B7
  A
jB7(  A(j6 A6  Aj Aj  A/6 @@@ (
" (  
  ("E
  ( A

  - AG
   ("( ! Aj( "( "@   
 ("@   (
 A
A
  AA A0j$ 
~# A0k"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@A	  ( Ak" A
OAk
	




 
  Aj 


# A0k"$  A6
 A 6 B7   Aj" AjB7(   B7   A j6 ( ( Aj!  A0j$   

  Aj!# A@j" $ A!@ A A#
  ( "("@ (" Atj!  AjB!  AjB!	@ ( !   (6
   6   )7  A6
  A 6  B7$   78   	70    A0j6  ( (  Aj
 Aj" G
 

  ( (!
  A@k$  

  Aj 

  Aj 


-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8101-8250
# A0k"$ @@@  Aj"( " A kA   A qA FAk 
   6   (6 A6
 A 6 B7  AjB7(  B
7   A j6 ( ( Aj

 (A A ((
 

 (A A ((
 
!  A0j$   

# A0k"$ @@@@@@@  Aj" -  Ak 
 A6 A 6 B7
 BԆ7(  A(j6 ( ( Aj

 (A A ((
 

 (A A ((
 

   (6
 A6 Ać 6 B7
  A
jB7(  A(j6 ( ( Aj

   - : 
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

 (A A ((
 

 (A A
 ((
 
!  A0j$   

  Aj 

# A0k"$ @@@@  Aj" -  Ak 
   (6    - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A+ ((
 

   (6    - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A ((
 
!  A0j$   

# A0k"$ @@@@@@@@@@@@@@@@@@@@  ( Ak	



 
 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A5 ((
 


 (A A ((
 


 (A A ((
 


 (A A ((
 


 (Aр A ((
 
	
 (A A ((
 

 (A A ((
 

 (A A ((
 

   Aj6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

   Aj6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

 (A A ((
 

 (A A ((
 

 (Á A ((
 

 (A A ((
 
!  A0j$   

 A A


 A6 A 6 B7    Aj6,  A,jB7   6
 ( ( Aj

 Aܯ A

 A A

   Aj6 A6 A 6 B7   A,jB7  AjB7    Aj6,  6
 ( ( Aj

 A A


 AҰ A


 A A-

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8251-8400


 A A+


 A A6
	
 A A$

   Aj6 A6 AĲ 6 B7   A,jB7  AjB7    Aj6,  6
 ( ( Aj

 AԲ A

 A A


 A6 A 6 B7    Aj6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7    Aj6,  A,jB7   6
 ( ( Aj

 Aĳ A

 A6 A 6 B7    Aj6,  A,jB7   6
 ( ( Aj

  Aj 
!  A0j$   
)

~# Ak"
$  
A
j"
  
A jB 7  
A jB 7  
A jB 7  
B 7P 
A0j" 
A j 
 
- , 
Aj" 
A j"
) 7  
Aj" 
A@k"
) 7  
Aj" 
A8j"
) 7  
 
)07 
Aj"
 
Aj"  
Aj" 
  A ) 7  A ) 7  A ) 7  
A ) 7 
   
Aj"  
 A ) 7  A ) 7  A ) 7  
A ) 7 
A j"  # Ak"$  Aj"      A j" Aj) " 7  A j" Aj) "!7  A j" Aj) ""7   ) "#7` Aj"  7  Aj"
 !7  Aj"
 "7   #7  Aj"   Aj") 7  
 Aj") 7  
 Aj"	) 7   )7     ) " 7  Aj" 	) 7  Aj" ) 7  Aj"  7   )" 7   7 A j A j" Aj"  A8j) " 7   A0j) "!7   A(j) ""7   ) "#7`   7  
 !7  
 "7   #7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7 A@k"    A j) 7  
 A j) 7  
 A j) 7   )@7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7     ) 7  
 ) 7  
 ) 7   )`7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7        ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8401-8550
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7   A !@ Aj" Aj"   ) 7  
 ) 7  
 	) 7   )7 Ak"
 
 Aj" Aj") 7  Aj" Aj"	) 7  Aj"
 Aj"
) 7   )7   A !@ Aj" Aj"   ) 7  	 ) 7  
 
) 7   )7 Ak"
 
 Aj Aj) " 7  Aj Aj) "!7  Aj Aj) ""7   )"#7 
Aj  7  
Aj !7  
Aj "7  
 #7   Aj"  
A  (  (F ( (Fq ( (Fq (
 (Fq ( (Fq ( (Fq ( (Fq (
 (Fqk:   Aj$  
AjB 7  
AjB 7  
AjB 7  
B 7 
Aj"  
 
-   
Aj) 7   
Aj) 7   
Aj) 7  
 
)7  # A k"$  A0j ) " B B A@k  B Bp A j   )""|"! )0|" B Bp Aj  B "# )"$   !T A8j)  ! "T|||"%|"!B Bp  !B "' ! #T  B |"# )@"& )|"" $ %V|"$|"%|" B Bp  B "(   'T !B |"' " $V A j)  " &T||"$ ) |"! # %V|"#|"%|"&B|")PB}"" " & (T  B |"& ! #V A(j)  ! $T||"# )|"  % 'T|"$|"%|"! "T| !B} !T|B}B?"" "   $V Aj)    #T||"# ) |"  % &T|"!| !T|B?"" "   !V Aj)    #T||"!|"  !T|  B|  T|B}B? )|Aq!
 A j$  
Aj    
sAsAq  
) 7   
) 7   
) 7  
A :  
 
)07 
- , 
- q!   A  : D 
Aj$ 
~# A@j"$   ) "BT@ - @" B"BX@  j"A:   A?s"@ AjA  
 BB BB B%B BB8 B+B  B; BB? B
B!@ A8sAM@   A A0jB 7  A(jB 7  A jB 7  AjB 7  AjB 7  AjB 7  B 7   78   A

  7 8   A
 A : @   (
"At AqAtr AvAq Avrr6 
   ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    (
"At AqAtr AvAq Avrr6 
   ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    ( " At  AqAtr  AvAq  Avrr6   A@k$ 
A  
A  
'~# Ak"$  Aj"
 Aj") 7  Aj"
 Aj") 7  Aj"
 Aj") 7   ) 7 Aj" Aj") 7  Aj" Aj") 7  Aj" Aj") 7   ) 7  Aj" Aj" 
 A8j") 7  
 A0j") 7  
 A(j") 7   ) 7  A8j") 7   A0j"
) 7   A(j"
) 7   ) 7 A j"'   
 A j"
) 7  
 A j") 7  
 A j" ) 7   )@7  A j"!) 7   A j"") 7   A j"#) 7   )@7 A@k"(   
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   ) 7 Aj"
   
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   
) 7   
) 7   ) 7 Aj"	   Aj" 
 	 
 Aj") 7  
 Aj") 7  
 Aj") 7   ) 7  A8j"$) 7   A0j"%) 7   A(j"&) 7   ) 7 	   A j")  	 
 ) 7  
 ) 7  
 ) 7   ) 7  
) 7   ) 7    ) 7   )@7 
   
 ) 7  
 
) 7  
 
) 7   ) 7  !) 7   ") 7   #) 7   )@7 	    
 	 
 A j") 7  
 A j") 7  
 A j") 7   )@7  $) 7   %) 7   &) 7   ) 7 	   Aj"  	 
 ) 7  
 ) 7  
 ) 7   ) 7  
) 7   ) 7    ) 7   )@7 
   
 ) 7  
 ) 7  
 ) 7   ) 7  !) 7   ") 7   #) 7   )@7 	    
 	 
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   )@7 	   Aj"  	 
 ) 7  
 ) 7  
 ) 7   )@7 A ) "*7  A ) "+7  A ) ",7  A ) "-7 	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"  	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"   
 $) 7  
 %) 7  
 &) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 Aj"   Aj" '   (  ) 7   ) 7   ) 7   )@7 Aj"    *7   +7   ,7   -7 

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8551-8700
   
 ) 7  
 ) 7  
 ) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 	    
 	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"      ) 7   ) 7   ) 7   ) 7 	   Aj" 	  
 Aj) 7  
 Aj) 7  
 Aj) 7   )7  A j) 7   A j) 7   A j) 7   )`7 
   
 Aj) 7  
 Aj) 7  
 Aj) 7   )7  Aj) 7   Aj) 7   Aj) 7   )7 	     
 	  Aj) 7   Aj) 7   Aj) 7   )7 	    Aj) 7   Aj) 7   Aj) 7   )7     A j 	      )   A@k   Aj$ 

# Ak"$  Aj"A A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  A	jA A  A	jA A  A
jA A  A
jA A  A A "A j A A!@@ AqE@ Aj  AvA lj

 Aj" A kA  Aj  
  AjA A j! Aj"AG
 
 A
jA A  Aj! Aj!
 Aj!
 A
j!
 A
j!
A!A!@  j-  ! A
jA A   AqvAq! !A!@ Aj" A
j" A@j  sAkAvAq"	 
 
 A k 	 
 
  	  A  A j! Aj"AG
 
  A
j"A  Aj"    A  @     Aj"  A
j"   A  Ak"Av!


   A
jA  Aj$ 
(    ( -  At" A j(   A j( 


~# Ak"$    A j" A j A@k"	 A@k Aj"
 Aj") 7  Aj"
 Aj") 7  Aj"
 Aj") 7   ) 7 Aj" A8j") 7  Aj" A0j") 7  Aj" A(j") 7   ) 7 Aj" Aj" Aj" A j"  
 ) 7  
 ) 7  
 ) 7   ) 7  A j") 7   A j") 7   A j") 7   )@7    Aj"
  
 A j") 7  
 A j") 7  
 A j") 7   )@7 A ) "
7  A ) "7  A ) " 7  A ) "!7     Aj) 7   Aj) 7   Aj) 7   )7 Aj"      Aj) 7   Aj) 7   Aj) 7   )7 Aj"   
 A8j") 7  
 A0j") 7  
 A(j"
) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 Aj"
    ) 7   ) 7   
) 7   ) 7 Aj"    Aj) 7   Aj) 7   Aj) 7   )7 Aj"   Aj" 
   	  ) 7   ) 7   ) 7   )@7 Aj"    
7   7    7   !7 Aj"	  
 
 Aj") 7  
 Aj") 7  
 Aj") 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7    Aj"
 	   
  Aj) 7   Aj) 7   Aj) 7   )7 Aj"
      ) 7   ) 7   ) 7   ) 7    Aj"    Aj) 7   Aj) 7   Aj) 7   )7    Aj   
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   )@7    	   Aj) 7   Aj) 7   Aj) 7   )7  
       	     A@k   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7    )7  Aj$ 
# Ak"$  A(jA A ! AjA ) 7  AjA ) 7  AjA ) 7  B 7  A ) 7 @ A O@  Av"7       A@qj A?q"

   
  : h A j" A  Aj"B 7  Aj"B 7  Aj"B 7  B 7  Aj AjA -  A A"E@AA  
  )7    A 6   6  A 6  Aj ) 7   Aj ) 7   Aj ) 7   Aj$ 
m  ( !# A0k" $    6
  A6  A 6  B7
    A
jB
7(    A(j6 ( (  Aj!  A0j$  
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X   A@k Aj A jt Aj$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7X  ) 7   A@k Aj A jt Aj$ 
%    -  At" A j(   A j( 
~# Ak"$ @  B X
  (" ( F@  A (!
  Aj"6 (" j  Ar:    B!  BT@ ! 

  ( F@  A (! (!
  Aj"6  j Ar:    B!  BT@ ! 

  ( F@  A (! (!
  Aj"6  j Ar:    B!  BT@ ! 

  ( F@  A (!
  Aj"6 (" j Ar:    B
!  BT@ ! 

  ( F@  A (! (!
  Aj6  j Ar:    B#!  BT@ ! 

  Ar:   Aj  B*!  BT@ ! 

  Ar:   Aj  B1!  BT@ ! 

  Ar:   Aj  B8!  B Y@ ! 

  <   AjB! 
 (" ( F@  A (!
  Aj6 ( j  <   Aj$ 
3~# Ak"$ @@  @@@@@@@@@@@@@@@@@@ ( Ak 
 Aj (" (" A j (" ("# ( (" (" (" (
" (
"(	  - X"A
F@ - Y

 Aj!" !
 !
 !# A k"
$ # Ak"$  AjA A ! AjA ) 7  AjA ) 7  AjA ) 7  B 7 A ) 7@ "A O@  Av"7 Aj     A@qj A?q"

   
  :  Aj"% Aj"8A  A@k"	B 7  A8j"
B 7  A0j"B 7  B 7( % Aj A(jA -  @@@@A A"@  )(7   Aj" 	) 7   Aj" 
) 7   Aj" ) 7   Aj"B 7  Aj"B 7  A j"B 7  A4j )  7  A<j )  7  A j )  7  B 7  )  7, Aj"A ) 7  Aj"A ( 6  B 7 A ) 7 Aj ) 7  Aj 
) 7  Aj 	) 7  Aj A j( 6   )(7 Aj ) 7  Aj ) 7  Aj ) 7   )7 A :  Aj Aj(  6    ( 6  )"9BZ
 9BB "9BV
 Aj"
A j"A:   A j" ( 6  A j" ) 7   )7h AjA A  9B7 A j"$ 
( ,"& 
( ("' 
( "( ( 
( 4") ' ( 
( 
"* 
( $"+ 
(  ", + 
( "- * & - 
( ". $("j $("A
w"
 $("
s 
(  "/ $( "  $(
" 

-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8701-8850
 ssjjA
w j"sjAw j"A
w"j 
( "0 
A
w"j 
( "1 j  s sjAw 
j" s 
( 
"2 
j  A
w"s sjA
w j"sjAw j" A
w"
s  (j  A
w"s sjAw j"sjAw j"A
w"j + A
w"j  *j  s sjA	w 
j" s 
 ,j  A
w"s sjA
w j"sjA
w j"	 A
w"s   'j  A
w"s 	sjAwj"sjAw j"A
w"
j A
w" 
( <"3j  )j  
( 0"4j  	A
w"s sjAw j"  ssjAw j" A
w"s  
( 8"5j  
s sjA	w j"sjAw 
j"	 q A
w" 	AsqrjAjAw j"
A
w"j ' 	A
w"j  . A
w"j  )j  0j 	 
q  
AsqrjAjAw j" 
q  AsqrjAjAw j" q  AsqrjAjA
wj" q A
w" AsqrjAjA
w j"	 q A
w" 	AsqrjAjA	w j"
A
w"j / 	A
w"j  4 A
w"j  2j  3j 	 
q  
AsqrjAjAw j" 
q  AsqrjAjAw j" q  AsqrjAjAwj" q A
w" AsqrjAjA
w j"	 q A
w" 	AsqrjAjAw j"
A
w"j & 	A
w"j 5 A
w"j  1j  (j 	 
q  
AsqrjAjA	w j" 
q  AsqrjAjA
w j" q  AsqrjAjAw j"
 q A
w"	 
AsqrjAjA
w j" 
q A
w"
 As"qrjAjA
w 	j"A
w"j 0 A
w"j  5 
A
w"j 
 'j  	 2j  r sjAjA
w 
j" AsrsjAjA
w j" Asr sjAjAwj" Asr A
w"	sjAjAw j"
 Asr A
w"sjAjAw 	j"A
w"j  1 
A
w"j  . A
w"j   ,j 	 3j  
Asr sjAjA	w j" Asr sjAjA
w j" AsrsjAjAwj" Asr A
w"	sjAjAwj"
 Asr A
w"sjAjAw 	j"A
w"j  & 
A
w"j  ) A
w"j   -j 	 /j  
Asr sjAjA
w j" Asr sjAjAw j" AsrsjAjAwj" Asr A
w"sjAjA
wj" Asr A
w"sjAjAw j"A
w"
j 
 & A
w"
j 
 + A
w"j   .j  4j  Asr sjAjAw j" 
q  
AsqrjAkA
wj" 
q  
AsqrjAkA
wj" A
w"	q  	AsqrjAkAwj" A
w"
q  
AsqrjAkAw 	j"A
w"j 0 A
w"j 4 A
w"j 
 ,j 	 /j  q  AsqrjAkAw 
j" q  AsqrjAkAw j" q  AsqrjAkA	w j" A
w"	q  	AsqrjAkAw j" A
w"
q  
AsqrjAkA	w 	j"A
w"j 5 A
w"j 3 A
w"j 
 *j 	 2j  q  AsqrjAkAw 
j" q  AsqrjAkAw j" q  AsqrjAkAw j" A
w"	q  	AsqrjAkAw j" A
w"
q  
AsqrjAkAw 	j"A
w"j  / A
w"j 0 A
w"j 
 1j 	 -j  q  AsqrjAkAw 
j" q  AsqrjAkA
w j"  AsrsjAkA	w j"  A
w"	AsrsjAkAwj"
  A
w"AsrsjAkAw 	j"A
w"j 1 
A
w"j  4 A
w"j  *j 	 +j  

-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:8851-9000
 AsrsjAkA
w j"  AsrsjAkAw j"  AsrsjAkAwj"  A
w"	AsrsjAkA
w j"
  A
w"AsrsjAkA
w 	j"A
w"j , 
A
w"j 2 A
w"j  .j 	 5j  
 AsrsjAkAw j"  AsrsjAkA
w j"  AsrsjAkA
w j"!  A
w"AsrsjAkAw j"7 ! A
w"6AsrsjAkA
w j"A
w" j 5 , + / 0 / & 2 . 3 / 4 3 1    Asr 
sj (jA旊jAw j"A
w"j   +j 
 /j  *j   
 
Asrsj 5jA旊jA	w j"  AsrsjA旊jA	w 
j"  AsrsjA旊jA
w j"  A
w"
AsrsjA旊jA
wj"	  A
w"AsrsjA旊jAw 
j"
A
w"j - 	A
w"j  ) A
w"j  0j 
 &j 
 	 AsrsjA旊jAw j" 
 AsrsjA旊jAw j"  AsrsjA旊jAwj"  A
w"
AsrsjA旊jAw j"	  A
w"AsrsjA旊jAw 
j"
A
w"j  2 	A
w"j ' A
w"j  .j 
 ,j 
 	 AsrsjA旊jA
w j" 
 AsrsjA旊jAw j"  AsrsjA旊jAw j"
  A
w"AsrsjA旊jA
wj" 
 A
w"AsrsjA旊jAw j"A
w"j  * A
w"	j 	 2 
A
w"
j 
  &j  -j  
q  
AsqrjAjA	w j" 	q  	AsqrjAjA
wj" q  AsqrjAjAwj" A
w"
q  
AsqrjAjAwj" A
w"	q  	AsqrjAjA
w 
j"A
w"
j 5 A
w"j ' A
w"j 	 (j 
 )j  q  AsqrjAjAw 	j" q  AsqrjAjA	w j" 
q  
AsqrjAjA
w j" A
w"
q  
AsqrjAjAw 
j" A
w"
q  
AsqrjAjAw 
j"A
w"	j 	 + A
w"j 0 A
w"j 
 4j 
 ,j  q  AsqrjAjA
w 
j" q  AsqrjAjAw j" 	q  	AsqrjAjAw j"
 A
w"
q  
AsqrjAjAwj" A
w"	q 
 	AsqrjAjA
w 
j"A
w"j  . A
w"j ( 
A
w"
j  	 3j 
 1j  
q  
AsqrjAjA
w 	j" Asr sjAjA	w 
j" AsrsjAjAw j" Asr A
w"
sjAjAwj"	 Asr A
w"
sjAjA
w 
j"A
w"j  + 	A
w"j  - A
w"j  
 5j 
 *j  	Asr sjAjAw 
j" Asr sjAjAw j" AsrsjAjAwj" Asr A
w"
sjAjAwj"	 Asr A
w"
sjAjA
w 
j"A
w"j  ' 	A
w"j 1 A
w"j  
 4j 
 ,j  	Asr sjAjA
w 
j" Asr sjAjAw j" AsrsjAjAw j" Asr A
w"
sjAjA
wj"	 Asr A
w"
sjAjA
w 
j"A
w"j - 	A
w"j  , A
w"j  
 )j  
 0j  	Asr sjAjAw 
j" AsrsjAjAwj" q  AsqrjAjAwj" q A
w"
 AsqrjAjAw j"

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9001-9150
 q A
w" 
AsqrjAjAw 
j"	A
w"j 3 
A
w"j  & A
w"j   2j 	 
 .j 	 
q  	AsqrjAjA
w j"q  AsqrjAjAwj" q  AsqrjAjAwj" q A
w"
 AsqrjAjAw j"
 q A
w" 
AsqrjAjAw 
j"	A
w"j ) 
A
w"j  1 A
w"j  4j 	 
 (j 	 
q  	AsqrjAjAw j"q  AsqrjAjA	w j" q  AsqrjAjA
wj" q A
w" AsqrjAjA	w j"	 q A
w" 	AsqrjAjA
w j"
A
w" 3j 5 A
w"j   'j 
  *j 	 
q  
AsqrjAjAw j"q 	A
w" AsqrjAjAwj"
 q  
AsqrjAjAw j" 
A
w"	s  4j 
 A
w"s sjAw j"sjAw j"A
w"
j . A
w"j  'j  s sjA
w 	j" 
s  	 0j  A
w"s sjA	wj"sjA
w j" A
w"	s  (j  A
w"s sjAw 
j"sjAw j"A
w"
j A
w" 1j  *j  s sjAw 	j" 
s  	 -j  A
w"s sjAwj"sjA
w j" A
w"s  )j  A
w"s sjAw 
j"
sjAw j"A
w"
j6 $  /j 
 A
w"s sjAw j"A
w"   -j  7 !A
w"AsrsjAkAw 6j"
A
wjj6 $ 
 3 6j 
  7A
w"	AsrsjAkAw j"j  2j  
A
w"
s sjA
w j"A
wj6  $  +j  
s sjA
w 
j" 	  j  )j  
 AsrsjAkAwjj6 $ 	 j 
j 
 &j  s sjA
wj6
 Aj"
 ) 7  Aj" ( 6   )h7A -  AA"E
  )7   Aj ( 6   Aj 
) 7   A6p  6l A6h A AA !# Ak"$  A 6 B7 @@@ $("E
  $(!A !@@@ -  !@ AM@ Aj!

  AqAv
 Ak"AK
 Ak! At! !
  AqAv  vr
 Aj! A kt! ! Ak"



# A k" $   A 6  A6
  A 6  B7  AjA  
  AO  AqAv
 AF
 At 
AqAv

 % ) 7  %Aj Aj( 6  Aj$ 

A A+ AjA A  
A !A !A!A !# A k"$  A 6 B7  A8j!@@@A -  "A!kAqA M@A !A!@ !@@@@ A kAqAO@ A kAqAO@  qAq
 As q! 
 AqE@ Aq!A! E

	
 Aq!A ! 

	
 Aq
A!A ! E


 AqE

 A:  

A A(AĆ  
 E
A !A!
 Aj! Ak! -  "A!kAqA I
 

 A:    6

A!
 A:    : 
@@@@@ - 8AF@@ - 9E@ A
j!	# A k"
$ A -  @@@AA"@ 
 6
 
A6 
A 6A !A !@@@ ,  "A H@ - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
"  kj! AG
@ "E
  AI@ A j,  AJ



-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9151-9300
 AG

 A j!A !
@@A! A F
 Ak"-  "AtAu"A H@ A?q Ak"-  "AtAu"A@N@ Aq

 A?q Ak"-  "AtAu"AJ@ Aq

 A?q Ak"-  AqAtr
Atr
Atr"A F

@ 

  E
 A !A 

A
!
 ! A F
 
 E
 @ Aj"E
  AI@ A j,  AJ


 AG

 A j!A !@A! A F
 ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F
 Aj
!@ Aq
  E
 A !A 

A
! A F
 
AA !
 
Aj 

 Aq! Aj"  kj!
 
Aj!A !@@ AO@A
!A
!@ Av j"AtA j( " F
    K" Aj   I"k!  I
 
 A 6  6 

 A 6  A kAqAIAt r6 

 AA  AtA j( "AsA kAI"6 A   6 
 A 6@ 
("E@ 
(!

 
(
! 
Aj" 
(   E

 
Aj 
 ! "A G
 
 	 
)7  	Aj 
Aj( 6  
A j$ 

AA 
A A AA  
A AA  AЯ  
 (! (!

 Ax6

 Aj!
# A k"$  A :  A6 A 6  6
@@@@  " A (  
  A1A (   
  E@A !

 ! !A!@ AtAq -  Avr! Av"	Aq As  	Aq"A²s  	Aq"As  	Aq"As  	Aq"As  	Aq 
! Aj! Ak"
 


 
A: 
 A
jE
A܅ A- AjA̅ A  
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
@ AtAq -  Aqr! Av"Aq As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq 
! Aj! Ak"
 

 Aj" 6  
 )
7  
Aj ) 7 
 A j$ A - $AF
 A0j A j) 7   )7( %(! %(!@ E
 Ak! -  ! Aj! A(j"("AtAq s!  Av"
Aq As  
Aq"A²s  
Aq"As  
Aq"As  
Aq"As  
Aq 
6 A O@ A A  
 (  AtA j(  ((  E
 
 A@k A0j) 7   )(78# Ak"$ @ A8jE@ Aj$ 



A

 )8":B!9 %( "@ %( A
 9! :BBQ
 8 :  8 :<  8Ax6  8A
j :B0=  8 :B>

 A j A0j) 7   )(7H# Ak"$ @ A j""@ 

 Aj$  




! (
"AxrAxG@  A
 %( "E
  %( A
 AqE@ 8 ) 7  8Aj Aj( 6 

Aߣ A+ A jA A  
 A j$ 

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9301-9450

A܅ A- AjA̅ A  
 
 (AxG@ 
 )7 
A
j 
( 6 A1

 
 )7A
6  AA Aj$ 

AA  
A  
A  
AA 
 
(
! 
(! 
(!@@@ 
( "A1F@ 
 
   
(
  
-  "A
G
 
A j 
A
j( 6  
 
)7P# A k"$  A     (6D  ("6@ A6
 A 6 B7$  A jB78  A@kB70  
A j"(6L  ("6H  A0j6  A
j" Aj"   
A@k (
" (  (
"@ ( A
 ( "@  A
 ("@  A
 ( "@  A
 A j$  
 
 
(D" 
(H     
(	  
- ! 
-  "A
F@ "A16  " :  
(@"@  A
 E
  A

 " 
)7 "A
j 
Aj) 7  " :  " :  "A6  
(@"E
  A

 " 
)7 "A8j 
A8j) 7  "A0j 
A0j) 7  "A(j 
A(j) 7  "A j 
A j) 7  "Aj 
Aj) 7  " 6
 " 6 " 6 " 6 

 " 
)7 "A j 
Aj) 7  "A(j 
A j) 7  
 
) 7@ 
 
Aj)  7 G "Aj 
) G7   " 
)@7 	 " :  "A6 
 E
   A
 
A j$  - 
! ("A1F
   ) 
7   A<j A j(  6    A5j A j)  7    A-j A j)  7    A%j A=j)  7    A
j A5j)  7    Aj A-j)  7    A
j A%j)  7     :    6  A
F A
Ir
 (`! (d"( " @    
 (" E
    (

 (! (
"AI
 , AJ


 Aj" ( (     ( ( ( (
 ( ( (" E
 (
  A

  A16   A: 
 (" E
 #  A

  A16    : @ A
F A
Ir
  (`! (d"( " @    
 (" E
     (
 (" E

 #  A


 A j ( ( Aj ( (\" (` ( ( ( (
 (
(<	  - A
F
   )7  A
j A j) 7 A


 Aq
 Ak!

 AG


 A 6 B7   6
  Aj6  Aj6( A j!# A@j"$  Aj Aj"@@@@@ - E@ A 6 B7 

 - !@ (( A G
  (E
  (E

A -  AA"E
  :   A6$  6  A6
 A8j Aj( 6  A0j Aj) 7   ) 7( Aj A(j - @ - !A!@ (
 F@@ (8( A G
  (,E
  (0E

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9451-9600

 A
j A ( !
  j :    Aj"6$ Aj A(j - 	! - 
 

  )
7  Aj A$j( 6 
 A@k$ 

 
 
AA 
 ("A G@ (! (X"E
 (\ A

 (`! (\! (X"AxF
 Aj! (!
 (
! (! (! (!
 (!# Ak"$ @@@ A O@ A 60 B7( A(j"A A (," (0"j"A )  7   AjA )  7   AjA )  7   AjA /  ;    6L  Aj"60 A 6x B7p A:  A 6 A 6 A 6 A 6 A 6  A j6 A j Aj
 (t! (p! (x" (( kK@    (0! (,!
  j     j"60 @  A
 (L" (( kK A(j   (,! (0 
 j    (0 j"60 A j"B 7  A j"B 7  A j"B 7  B 7P A j"    Aj" A  A j Aj ) 7  Aj ) 7  A j ) 7   )P7 (("@  A
@@@@ 
- @"
                          
 A&6 

A !

A!
 Aj" 
 AjA  
A   (

  (!
 (! (! ("AG
 
@ A j"B 7  A j"B 7  A j"B 7  B 7P A j"  Aj 
Ak  A  A j A0j ) 7  A8j ) 7  A@k ) 7   )P7(  AFA'A1  A4jAA'
6  E
  A

AA A  
 A$6 

A A7 A jA A  
  
6  6
  6  6 A6 
 Aj$  (A1G
  A16   A: 

A !
   6   6  A6 

   )7   A8j A j) 7   A0j A j) 7   A(j A@k) 7   A j A8j) 7   Aj A0j) 7   Aj A(j) 7   Aj A j) 7 
 E
  A

 A j ( ( Aj!# (\!7 (`! (!6 (!# Ak"$ @@@@@@@ Aj"("E
  ("-  "!AkAOA  !
 @@@@ !Ak 
 
A !!

A !!
 !Aj"@ 

AԊ  
 G
  Aj"
A A @@@ A I@ 
   Aj Aj-  :   A@k"
 Aj)  7  A j" Aj)  7  A j" Aj)  7  A j" Aj)  7  A j" Aj)  7  A j" Aj)  7  A j" Aj-  :    / ;  ) 78 - ! ( ! Aj -  :   Aj ) 7  Aj ) 7  Aj ) 7  Aj ) 7  Aj ) 7  Aj 
) 7   6   :   )87 - "AkAO@ E
 A6A A
 
A A  
 AjAr!@ AqAG@ AG
 Aj" A  Aj"Aȴ A  Aj"	   - "! A8j"
 Aj Aj ! !AF
 Aj" )87  Aj"
 Aj") 7  Aj" Aj") 7  Aj" Aj") 7  Aj" A@k") 7  Aj" A j"
) 7  Aj"
 A j") 7   )7 - ! - !
 Aj" 
) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" 
) 7   
A  !k 
 sqs":   )7 Aj ) 7  Aj ) 7  Aj ) 7   ) 7 A j" Aj  ) 7  
 ) 7   
) 7   : x  )78 Aj"  Aj  Aj"  Aj  5 5} 5 5 5 5 5 5 5 5 5 5 5 5 ( (I|T|T|T|T|T|T}B !  ) 7   ) 7   ) 7   )7 Aj     :  - !! 
 	A   !: |

 A8j  Aq - |!!

 Aj"	 Aj"Aj)  7  Aj"
 Aj)  7  Aj" Aj)  7   )  7 Aj" Aj" AjB 7  AjB 7  AjB 7  B 7 Aj" Aj  -  A8j"  AjB 7  AjB 7  AjB 7  B 7 Aj" Aj  - X 	 Aj"
) 7  
 Aj") 7   Aj") 7   )7 Aj"   	 Aj") 7  
 Aj") 7   Aj") 7   )7 Aj"
   Aj" 
  	A ) 7  
A ) 7  A ) 7  A ) 7 Aj"   Aj"   AjA ) 7  AjA ) 7  AjA ) 7  A ) 7   
  ) 7  
 ) 7  	 ) 7  Aj" )7  Aj" ) 7  Aj" ) 7  Aj" 
) 7   )7   - Xq - q!! A j ) 7  A j ) 7  A j ) 7  A j ) 7  A j 	) 7  A j 
) 7  A@k ) 7   !: | A : x  )78

 A A  
A!! A8jAȴ A   !: |

 
 Aj" Aȴ A  Aj   A8j" ! Aj" Aj A j ! !AqAF
 Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7   )7  )7 (! (!
 - x!
 - ! - "AkAOA  
 EAsAq - |qAqAG
  A0j ) 7  A(j ) 7  A j ) 7  Aj Aj) 7  Aj ) 7  Aj ) 7   )7   6 A G
A !A !# Ak"$ @@@@ A G@ A j j  6j-  :   Aj! AG
 A F
A A*A  
A ! AG

 A j Aj) 7  Aj A j) 7  Aj A j) 7   )l7A !A !@@@ A G@ A j j  6j-  :   Aj! AG
 A F
A A*A  
A ! AG

 A@k" Aj) 7  A8j" A j) 7  A0j" A j) 7   )l7( A j" A j) 7  A j" Aj) 7  A j" Aj) 7   )7H A j" A j"@@ ("BpBpBpBp ("
 (|"qAG (x"B
B
 (t"
B޸
B޸
 (p"	BÕB (l"
AʌcITTT ("|B AqAF@  ) 7   ) 7   ) 7   )(7H   ("BpBpBpBp (" (|"qAG (x"B
B
 (t"B޸
B޸
 (p"BÕB (l"AʌcITTT ("|B AqAG
@A A 
 r r 
r r r 
r 	rAq
 A A  r r r r r r rAq
    6@   6<   68   64   60   6,   6(   6$   6    6

-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9601-9750
   
6   6   6   
6
   	6   
6  A 6 

  B7 

  B7 

  B7 
 Aj$ 

 Aj!
 
 
 Aj!


 (! (! (E
  6  6 A6 A 6 B7  B78  6 #Aj   #A6  ("E
 ("( "@   
 ("E
   (

 A 6 A6 A 6 B7  AjB78  A8j6 #Aj Aj #A6  ("E
 ("( "@   
 ("E
   (

 A 68# Ak" $   A 6
   Aj6  AjA   A
jA  A8jA  
A  !k  
sq s! Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7  6  6 AjA A ! AjA ) 7  AjA ) 7  AjA ) 7  B 7 A ) 7@ A O@  Av"7 Aj 7   7 A@qj A?q"

  7  !
  :  A8j" Aj"A  Aj"B 7  Aj"B 7  Aj"B 7  B 7  A j  Aj ) 7  Aj ) 7  Aj ) 7   )7 Aj A0j) 7  Aj A(j) 7  Aj A j) 7  AjA ) 7  AjA ) 7  AjA ) 7   )7  6  
6 Aj Aj) 7  Aj Aj) 7  A ) 7  ) 7 A A  Aj" Aj  " Aj Aj Aj  Aj Aj Aj  Aj!
# Ak"$   Aj Aj" Aj"Aj) 7  Aj" Aj) 7  Aj" Aj) 7   ) 7 Aj"!B 7  Aj"6B 7  Aj"B 7  B 7  Aj"  Aj"AsAq": @@@ AqAF@  A8j) 7   A0j) 7   A(j) 7   ) 7 !B 7  6B 7  B 7  B 7    AsAq":  AqAG
 A j A j"Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@ A8j" Aj) 7  A0j" Aj) 7  A(j" Aj) 7   ) 7 # Ak"
$  
Aj"
 A@k"Aj) 7  
Aj"
 Aj) 7  
Aj" Aj) 7  
 ) 7  
A8j"A ) 7  
A0j"A ) 7  
A(j"A ) 7  
A ) 7  
A j"A ) 7  
A j"
A؈ ) 7  
A j"AЈ ) 7  
AȈ ) 7@ 
A j"B 7  
A j"
B 7  
A j"	B 7  
B 7`@@@A A 
(
 
( 
( 
( 
(
 
( 
( 
( rrrrrrrAqE@ 
( AqAsAqAqE
@ 
 
(
"Av6
 
 At 
("Avr6 
 At 
("Avr6 
 At 
("Avr6 
 At 
(
"Avr6
 
 At 
("Avr6 
 At 
("Avr6 
 At 
( Avr6  
(@Aq! 
 
(\"Av6\ 
 At 
(X"Avr6X 
 At 
(T"Avr6T 
 At 
(P"Avr6P 
 At 
(L"Avr6L 
 At 
(H"Avr6H 
 At 
(D"Avr6D 
 At 
(@Avr6@ Aq@ 
Aj" 
A@k"A   
Aj") 7  
 
Aj") 7   
Aj") 7  
 
)7@  AȈ   ) 7  
 ) 7   ) 7  
 
)7@
 
( AqAsAqAq
 


  
)`7  Aj 
A j) 7  Aj 
A j) 7  Aj 
A j) 7  A A (
 ( ( ( (
 ( ( ( rrrrrrrAsAq:   
Aj$ 

 
( AqAsAqAq@@ 
 
(<"Av6< 
 At 
(8"Avr68 
 At 
(4"Avr64 
 At 
(0"Avr60 
 At 
(,"Avr6, 
 At 
(("Avr6( 

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9751-9900
 At 
($"Avr6$ 
 At 
( Avr6  
(`Aq! 
 
(|"Av6| 
 At 
(x"Avr6x 
 At 
(t"Avr6t 
 At 
(p"Avr6p 
 At 
(l"Avr6l 
 At 
(h"Avr6h 
 At 
(d"Avr6d 
 At 
(`Avr6` Aq@ 
Aj" 
A j"A   
Aj") 7  
 
Aj") 7  	 
Aj") 7  
 
)7`  AȈ   ) 7  
 ) 7  	 ) 7  
 
)7`
 
( AqAsAqAq
 

 
5< 
5
} 
58 
5} 
54 
5} 
50 
5} 
5, 
5
} 
5( 
5} 
5$ 
5} 
5  
5 }"<B?|"=B?|">B?|"?B?|"@B?|";B?|":B?|"9B B R < = > ? @ ; : 9BPr@ 
Aj" 
 
A j 
 
Aj") 7  
 
Aj") 7   
Aj") 7  
 
)7   
A@k 
A j  ) 7  
 ) 7   ) 7  
 
)7@ 
Aj" 
A j 
  
Aj") 7   
Aj") 7   
Aj") 7  
 
)7   
A j 
A@k  ) 7  
 ) 7  	 ) 7  
 
)7`



  - ":  AG
 A j !) 7  A j 6) 7  A j ) 7   )7` Aj"  A j" ! ) 7  6 ) 7   ) 7   ) 7 Aj"    A      Aj"
   # Ak"$  A j!# Ak"$  Aj" 
A@k"
 
 Aj"
 
  Aj" 
 
  
  Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7   ) 7  
 
  Aj"
) 7   Aj"	) 7   Aj") 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97  Aj" ) 7  Aj" 	) 7  Aj" 97   )"97  97 A j"    A8j) 7   A0j) 7   A(j) 7   ) 7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97   ) 7   	) 7   97   )"97  97 
    
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97  Aj ) 7  Aj 	) 7  Aj 97   )"97  97 A@k" Aj     A j"  
  A j) 7   A j) 7   A j) 7   )`7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:9901-10050
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97   ) 7   	) 7   97   )"97  97 
    
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97  Aj" ) 7  Aj" 	) 7  Aj" 97   )"97  97 Aj  Aj  ) 7   ) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) 7   	) 7   ) 7   )7  
 
  
) "97   ) 7   	) 7   97   )"97  97 
  
A!@ Aj Aj"   
) 7   	) 7   ) 7   )7 Ak"
 
 Aj Aj") 7  Aj Aj") 7  Aj Aj") 7   )7  Aj AjA/!!@ Aj" Aj"   Aj") 7   Aj") 7   Aj") 7   )7 !Ak"!
 
 Aj Aj") 7  Aj Aj") 7  Aj Aj") 7   )7  Aj Aj     ) 7   ) 7   ) 7   )7     ) "97  Aj ) 7  Aj ) 7  Aj 97   )"97  97  Aj 
 Aj$  A A 
(
 
( 
( 
( 
(
 
( 
( 
( rrrrrrrAsAq:   Aj"B 7  Aj"B 7  Aj"B 7  B 7 Aj" Aj  - h Aj" 
Aj) 7  Aj" 
Aj) 7  Aj" 

-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10051-10200
Aj) 7   
) 7  A j"    
A8j) 7   
A0j) 7   
A(j) 7   
) 7  Aj"   A :  - h!  A " : D A j"Aȴ A  Aj    A j  A j  AF@ 
  )7   )H7  Aj ) 7  Aj ) 7  Aj ) 7  A(j A j) 7  A0j A j) 7  A8j A j) 7  A  k - " - @sq s: @ Aj$        
A  (  A j"( F ( (Fq ( (Fq (
 (
Fq ( (Fq ( (Fq ( (Fq (
 (
FqkAqA  
A 6A
6  Aj$ 



 A 6 AjA  AjA  
 A 6 AjA  AjA  
 (E@ #A16  #A: 

  )7 A6 A 6 B7  AjB78  A8j6 #Aj Aj #A6  ("E
  ("( "@   
 ("E
    (
 Aj$ 

 
 A6A A
 AjA A  
 ("A1F
   ) 
7   A
j A%j)  7    Aj A-j)  7    A
j A5j)  7    A%j A=j)  7    A-j A j)  7    A5j A j)  7    A<j A j(  6     - 
:    6  (X" E
 7  A

 A
j" ( ( )!; )!: A j Aj ) !9 Aj" A(j  :7h  ;7`  97X Aj" Aj# Ak"
$  
AjA  (" ( ( "@  A
 
AjA  
(" 
( 
("@  A
 Aj!
 Aj"(!A!A!@@@@@@ ("
@ 
A H
A -  A! 
A"E

   
! (! ("@A ! A H
A -  A! A"E

   ! 
Aj Aj( 6  
A$j 
A
j( 6  
A0j Aj( 6  
 6H 
 6D 
 6@ 
 
6< 
 68 
 
64 
 ) 7 
 
)7
 
 ) 7( 
A j!
A !A !# Ak"	$  	A 6
 	B7 
Aj"(!@@@@@@@@@@ ("@ ArgAsA	lA jAvAj" j" I

 (! ("@ ArgAsA	lA jAvAj" j" I

@@   j"M@ (
! ( "

A !




 
ArgAsA	lA jAvAj" 
j" I

@@   j"M@ ((! (,"
A !




 ArgAsA	lA jAvAj" j" I

@@   j"M@ (4! (8"
A !




 ArgAsA	lA jAvAj" j" I

  j" I
 A N@ @B
 	Aj"    	( 	(
"kK@    	(
!
 	( j   	  j6

 @B 	Aj"    	( 	(
"kK@    	(
!
 	( j   	  j6

 
@B 	Aj" 
  
 	( 	(
"kK@   
 	(
!
 	( j  
 	  
j6

 E
B" 	Aj"   	( 	(
"k" O
    	( 	(
"k!

 
A6 
 6 
Ax6 

A  
A  
A  
A  

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10201-10350
A  
  I@ 	Aj   	(
!
 	( j   	  j6

 @B* 	Aj"    	( 	(
"k"K    	( 	(
"k 
 I@ 	Aj   	(
!
 	( j   	  j6

 
 	)7  
Aj 	A
j( 6 
 	Aj$ 

Aԝ  
 
(X! 
(T! 
(P"AxG@A -  A)A"E
 A(jA -  :   A jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   
A)6 
 6| 
A)6x 
 6 
 6 
 6 
 Aj 
A j 
Aj 
- P"A
G
 
(T"@ 
(X A
 
A16  
A:  
("@ 
( A
 
(
"@ 
(  A
 
(("@ 
(, A
 
(4"@ 
(8 A
 
(@"E
 
(D A

 
 6 
 6 
A6 

  
 
   
AA) 
 
 
/ Q; 	 
 
)`7 
A
j 
- S:   
A j 
A j) 7  
A(j 
A j) 7  
)T!9 
 
(\6 
 97
 
 :  
A6 
 
("@ 
( A
 
(
"@ 
(  A
 
(("@ 
(, A
 
(4"@ 
(8 A
 
(@"E
  
(D A
 
Aj$  ("A1G@   ) 
7   A
j A%j)  7    Aj A-j)  7    A
j A5j)  7    A%j A=j)  7    A-j A j)  7    A5j A j)  7    A<j A j(  6     - 
:    6  (p" E
 (t  A

 (p"@ (t A
  A16   A: 

  A16   A:  (X" E
 7  A

   - : A1
6  (X" E
    A
 Aj$ 
  A A  
# A k"$ @@@@@@@@@@@@@@  -  Ak 
 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!
	
 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!

 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!


-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10351-10500
 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A  Aj"
 A A  A
j"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A
  Aj"

 (( ! @ - 
E@  (!

  ("  ( F@   A  (!
   Aj"6  ( jA :  
   ( F@   A  (!
   Aj6  ( jA :  A !
 A j$  
 @@@@@@@@ Ak 
 A A@ A A
  A: 

  A: 

 /  AF

  Aj!

  Aj! A AE

 A:  

 A:  

  A : 
  Ax6 

# A k"$ @@@@@@@@@@@@ ( Ak 
 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 


  :   6
 Aj A
jA A AjA (AxF
	   )7   Aj A
j( 6 


 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 


  :   6
 Aj A
jA A AjA (AxF
   )7   Aj A
j( 6 
	
 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 
	
  :   6
 Aj A
jA A Aj? (AxF
   )7   Aj A
j( 6 

 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A Aj? ("AxG@   )7   6 

 Aj A
jA A Aj? ("AxF
   )7   6 

 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A AjA ("AxF
   )7   6 

 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A Aj? ("AxG@   )7   6 

 Aj A
jA A AjA ("AxG@   )7   6 

   (

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10501-10650
 - 

   (
 - 

   (
 - 

   (
 - 

   (
 - 

   (
 - 
 A j$ 
 @@@@@@@@ Ak 
 A AE
 A A
  Ax6   A: 
 A A	E
 A A	
  Ax6   A: 
  Ax6   A: 
 A A	
  Ax6   A: 
 A AE

    A A
  Ax6   A: 
  Ax6   A : 
D!~# Ak"$ A ( !!  " (!
  (!  ( !  A
A "(!  (! ( !
 A
A Aj  @ (AG@ Aj Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7P

 Aj Aj( 6   )7 A jA A Ajx A6P
 
@  
A
@@@@ (PAG@ A j A j) 7  A@k A j"") 7   )P78 (h!
 (l! )p!$ (x!
 (|!  )!% Aj!A !A !
# A@j"$  A:  A 6   6
  
6 Aj!# A0k"$   Aj"Ax! @@@ -  @@ - " A"G@  A F
 Ax6
 Ax6 

 Aj -@ (" AxF@Ax! 

  / 
;  Aj Aj-  :   - 
!  (6  : 
 Ax6
   6 

 - 
" E
   Ak" : 
  Aq
Ax! 
 Ax6
   6 

A  
  Aj!
# Ak"$  Aj"  - - !@@@ ("AxF@    ("AxF
 Aj A
j-  :    / 	;  - !

 Aj A
j-  :    / 	; 
 (
!  
 / ;  
Aj Aj-  :   
Ax6
 
  6 
 :  
 6 

 @# A0k"$  Aj!# A k"$  A(j @@@ - (E@ Ax6
 Ax6 

@@@@@@@@ - )A F@ - 
" E
   Ak" : 
  AqE@ Ax6
 Ax6 


  A j  -  E@Ax! 

Ax!  - !"A"G@ A F


 A j" 
 (d"AxG
 - h"	@  @ (dAxG@ A j A j( 6   )d7X

 A j 
 (XAxG
A

 A j @ (dAxG@ A j A j( 6   )d7X

 A j 

 (X"AxG
 - \
!
 Aj  - E@Ax! 

 - !@@ Aq"A,G@Ax!  A G
 
AG

	
  Aj  - E@Ax! 

 - "A"G@ A G
Ax! 

 A j" 
 (d"AxG
@ - h"	@  @ (dAxF@ A j 

 A j A j( 6   )d7X
 (XAxF


 
AG@ A0jA͂ A


 A j @ (dAxF@ A j 


 A j A j( 6   )d7X
 (X"AxG
 - \!

 Aj  - 	! - 
 
Ax! 


-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10651-10800
  
Aq: 0 - 
Aj" Aq  G
   : 
 A j  (dAxF@  )07  Ax6
 Aj A8j( 6 


  )d7  Aj A j( 6 

 Ax6
 Ax6 

A  
 A8j A j(  6    ( ]6 5  - \: 4  60

 A8j A j( 6   )X70

  ( i6X  A j(  6 [ - h!	 ! 
 A8j ( [6    (X6 5  	: 4   60

 A0jA͂ A
 - 
Aj" Aq  G
   : 
  )07  Aj A8j( 6 
 Ax6

 A j$ 

A  
 (! (
! (!@@@ ("
AxG@ )(!# ($! ( !	 (
!  (!
   -  
 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

 
Ax6


 - A G@ 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

  
 #7  
 6
 
 	6 
  6 
 
6 
 
6

 
 6 
 6 
 6 
 A0j$ 

# A0k"$  Aj!A !A !# Ak"$  A8j @ - 8E@ Ax6
 Ax6 

@@@@@@@@@@@@@@@@@@@@@ ~@@ - 9A F@ - 
" @   Ak" : 
  AqE@ Ax6
 Ax6 

  A0j Ax!	Ax!Ax! - 0E@Ax!


 - 1" A"G@  A F
Ax!
Ax!	

 A j # (h" AxG@Ax!
  !	


 A j!
@@@@@@@ - l" 
 A j  (h"AxG
 A(j  - (E@Ax!Ax!



 - )A G@ A j  (t! (p! (l! (h@Ax!



A!Ax!


  A j A A (h"AxG
A!Ax!Ax!


 Aj  (AxG@Ax!



 A j  (t! (p! (l!Ax!
 (h

A!

 Aj  (AxG

 A j $ (t!  (p! (l!
 (hE


 A j @ (hAxG@ Aj A j( 6   )h7

 Aj 

-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10801-10950

 ("AxG@Ax!

	
 - !Ax!


 A j @ (hAxG@ Aj A j( 6   )h7

 Aj 
A!Ax!
 ("AxG


A!
 A j  -  E

 - !!@ !
@@@@@@ Aq"A,G@Ax!	 A G
 
AxG
  ! !


  Aj  - E@Ax!	

 - "A"G@Ax!	 A F
  ! !Ax!	

 A j # (h"AxG@ !  ! !	

@@@@@ - l" 
 A j @ (hAxF@ Aj 

 Aj A j( 6   )h7
 ("AxF
	 !  ! )

 
AxG@ A@kA A

 Aj  (AxG@ !  !

 A j $ (l!
 !  ! (t!  (p! 
 (hE
	

 AxG@ A@kA A

 Aj  (AxG
 A j  (t! (l! (p" (hE


 AxG@ A@kAÂ A


 A j  (h"AxG

 Aj  - E@Ax!
 
 - A F@  A j A A (h"AxG
Ax!

 A j  (t! (p! (l! 
 (hE


 AG@ A@kA͂ A

 A j @ (hAxF@ Aj 


 Aj A j( 6   )h7
 ("AxF
 !  !


   6  6  
6 AxG"	E@ A jA A  (t6H  )l7@A !

 Ax AxG"! AF


 - !

 A jA͂ A - l! (h"AxF
  A j A j(  6    ( m6 E  : D  6@ AxrAxG@  A
 E
 
 A

 A j Aj( 6   )7@  6`  6\  6X  6T  
6P  Aq: d


 Aj 
@  
AlAA! !  ! AqE


A!A !
 !  ! Aq


 

! Aj  - 	! - 
 



A  
 Ax6
 Ax6 

 A@kA A

 )
7D  6@


 A j Aj(  6    ( 6 E  - : D  6@


 
 )7  
Aj Aj( 6  (l! (p! (t!
  6H  6D  6@Ax!
A !A !	 !  !

 
 )7  
Aj Aj( 6  (l!
 (p! (t! 
   6H  6D  
6@
Ax!


  ( m6  A j(  6  - l!

 !

  ! !
 A j ( 6    (6 E  : D  	6@
A !A !	
 AxNA  
 !  !
 	

-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:10951-11100


  A ! !  	E


Ax!

 (p! (l!
  6H  6D  6@A !
 AxrAxF
  
 A
Ax! 
AxF r
   @ !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj!  Ak" 
 

 
E
   
AlA
@ - 
Aj" Aq  F@   : 
 AxF
 Aj" A j) 7  Aj" A j) 7  A j"  A j( 6   )P7x  )@7h  6t Aj  (AxF@  )h7  A j ) 7  Aj ) 7  Aj A j) 7  Aj  ) 7 

  )7  Aj Aj( 6  Ax6
 A j (h" @ (l  AlA
 @ (x A
 (" AxF  Er
 (  A

A  
  )@7  Ax6
 Aj A j( 6 
 Aj$  (! (
! (!@@@ ("
AxG@ )(!# ($! ( !	 (
!  (!
   -  
 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

 
Ax6


 - A G@ 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

  
 #7  
 6
 
 	6 
  6 
 
6 
 
6

 
 6 
 6 
 6 
 A0j$ 
 Aj$  - 
Aj" Aq  F@   : 
  )7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  A j A(j) 7 

A  
 A0j$  ( ! (
!  (!@@ ($"
AxG@ )8!# (4! (0!	 (,! ((!
   (AxF@  #7   6
  	6  6  
6  
6


  )7  Aj A j( 6  Ax6
 
AxF
 @  !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

 @   AlA
 
@ 
 
A
 	AxrAxF
  	A

 Ax6

  6   6  6 
 A@k$ @ (" AxG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7T

 Aj Aj( 6   )7 "A A! Ajx
 @ 
 A
  AxG@ Aj A j"	) 7  Aj A j") 7  Aj A j"
) 7  Aj A j") 7  Aj" A@k) 7  Aj" A j) 7   )T7  )87 A 6 A 6 A 6  %7   6  
6  $7  6  
6  Aj" 6   6   6 A jA Aj"  Aj Aj !  (PA1F@ A0j A j) 7  A(j 	) 7  A j ) 7  Aj 
) 7  Aj ) 7   )T7

   Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   A j) 7   A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 Aj Aj( 6   )7
 Ax6  b


-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11101-11250
 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )X7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ Aj Aj( 6   )7
 Ax6  a 
@  
A
 
E
   
A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )X7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 Aj Aj( 6   )7
 Ax6  a E
  
 A
 A j Aj" - PA
F@A -   (\! (T! (X! A
A"
E
 
 6 
 6 
  6   Aj$  


 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7A A+ AjA A  
A A7 AjA A  
AA
 
A A7 AjA A  

# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"A A Aj? (AxG
# A@j"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,@  AjE@ (
!   (" ( @  A
@ ( AxF@ Ax6 

  ) 7  Aj Aj( 6 
 A@k$ 

AČ A7 A?jA Aȍ  
 (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
9  ( !  (
"AqE@ A qE@   
   
   
R# Ak"$    ( " Aj6
 A A	A A
  A A A	 A
jA !  Aj$   
   (   ( 
  ( !  (
"AqE@ A qE@   
# Ak"$   -  ! @  jA j  Aq"A0r A7j A
I:   Ak!  "Av!  AO
 
 Aj" AO@  AAȷ  
 AAط A  jAjA  k!  Aj$   
   
   ( " (   ( 
i# Ak"$   (!  ( !  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
   (   ( 

   (  

   (  
  A A
>  ("  ( F@   A  (!
  ( j A   Aj6
5  ("E@AA  
   Ak6    ( " Aj6   -  
~# A k"$ @@ E@A AT!

B!@@@@@@@@@@@  AqAk	 
 A0j  (0E
 (4!


 Ak! @@@ A0j  (0
  )8"7 @@@ BX@  B"7 BV
A !@@@ Ak 
A!

A!

A!

 A64 A 60 B7<  B7   A j68 A
j"  A0j  U!

A!
 "AI
  Av   "E




 A64 A 60 B7<  AjB7H  A j68 A j!A ! A0j" (
!@@@@@@@  ( 
 
A!A ! A!

 E

   

  ( " ( !  (" E@A!A ! 

  A H
A -  A!  A"E

    !   6  6   6 

    
 U!


 " AO

A AT!
	
A AT!


-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11251-11400
B!

 A0j  (0E
 (4!

  Av F
 A AT!

 ( "Aj"( !B !

 (4!

 )8!
  ( "Aj"( "X
 A AT!

  " I
    k6   (   j6 A !
 A j$  
    
~@ ( "Aj( "E@

@@@@@@@@@ ( ",  "A H@@@ A
M@  jAk,  A H

 Aq , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
 Ak! , "A H@ Aq , "AqAtjAk! A H@ AI
  , "AqAtjAk! A H@ AI

  , "AqAtjAk! A H@ AI
 , "! AkB
 |! A H@ 1 	"BV
   B? B B8|"X@A
!

A  
 BB8 |!A	!

 B
 |!A!

 B
 |!A!


 B
 |!A!


 BB
 |!A!


   
 !A!
	
   B7  A 6  Aj Ak6   Aj6 
A  
 !A!

A  
 !A!

A  
A  
A  
A  
   7  A 6  Aj  k6    j6 
A AT!  A6    6
i# Ak"$   (!  (!  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
]  ("@  (! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 



~  ("@  (!@  Alj" ("@  ( A
@@@@@@@A  )"B}" BZ 
  - E
  (
"E
  (  AlA

  Aj!@  ($AxG@ ( "@  (
 A
  A$j!  (,"E
  ((Aj! @  Ak( "@  (  A
  A j!  Ak"
 


  ( "E
   (
Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 ( " E
 (  AtA

  ("@  (
 A
  ($"E
  (( A

  ("@  (
 A
  ($"E
  (( A

A!@@@@ B}"AjA  BT 
  (X"@  (\ A
  (d"@  (h A
  (H"@  (L A
A !  (p"AxG


A !  (@"E
   (D A
   j( !
 E
   j( A

@@@@@@  ( 
  (
"E
  (  A

  (
"@  (  A
  (("@  (, A
  (<"@  (8Aj!@ Ak( "@ (  A
 A j! Ak"
 

  (4"E
  (8 AtA


-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11401-11550
  (
"AxF ErE@  (  A
  (("@  (, A
  (<"@  (8Aj!@ Ak( "@ (  A
 A j! Ak"
 

  (4"@  (8 AtA
  (@"E
  (D A

  (
"AxF ErE@  (  A
  (("@  (, A
  (4"@  (8 A
  (H"@  (DAj!@ Ak( "@ (  A
 A j! Ak"
 

  (@"@  (D AtA
  (L"E
  (P A

  (
"@  (  A
  (("E
  (, A

  (
"@  (  A
  (("E
   (, A
 Aj" G
 


  ("@  (!@  Alj"( " @ (  A
 ("@ (! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 (
" @ (  AlA
 Aj" G
 



# A k"$  (
 (kAn"  (   ("kK@# A k"$    j"K@A A  
A!A  ( "At"   I" AM"Al! A֪*IAt!@ E@A !

  Al6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$   (!
  (! Aj Aj) 7   ) 7   6
  6   Aj6 Aj!A !# Ak"$ @ ("  (
"
F@ (!

 ( ("Alj! Aj!	@  (!  ( !
   Aj"6 	  Aj( 6    )7 A! @ E
 A !
 A N@A -  A!
 A" 
 !
 
  
   
 ! Aj 6  Aj 6   6   Aj"6 A
j ) 7  Aj 	( 6  Aj! "  
G
 

 (  6  (" @ (   AlA
 Aj$  A j$ 
# Ak"$ @@@@ ("E@

 (!    ("  I"k6  ( " j6  E
 (
"A H
 Aj" -   At"	@ ("A F@ AF
 - 
!  -  	Ar ("A F

  (
"6  6 A 

 - 
 Atr!A
!  Aj6

   :    :   Aj$ 
A A A  
A  
AAA  

# Ak"$  Aj @ (
"@ (" Alj"Ak"
 kAn!  
F"
@A!	A 

A -   At"A"	E
 ! 	! !
@  
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! 
Aj!
 
Ak"

 
 
!   	 @@@@@@ 
-  Ak 
 Ak"
Aj( ! 
Aj( 

A! Ak

A! Ak

A! Ak

A! Ak

A! Ak
  (" @   AlA
 
E@ 	 AtA
 Aj$ 
A  

-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11551-11700
A  
@@ @ A H
 (@@ ("E@

 (    


  E
 A -    
"@   6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$    j"K@A A  
A!A  ( "At"   I" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A At Aj A J" AM"Al!    Al6
   (6A 
6 Aj A֪*IAt  Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A!A At" Aj"  K" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
F# Ak"$  Aj" Aj( 6  Aj Aj( 6   ) 7 A,j ) 7  A4j Aj) 7  A
6   ) 7$ (! ( ! A j" Aj!	# A k"
$ @@@@@@@@A A j"( Ak" AOAk 
# Ak"
$  (" ( F@ 
 Aj! ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$ @@@@@@@@@@ ( Ak 
 Aj A A - 
! (! ("AxG@  / 
; 	 A
j Aj-  :    :   6  6 
	
  :   6
 Aj A
jA A Aj? (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("AxG@  / 
; 	 A
j Aj-  :    :   6  6 

  :   6
 Aj A
jA A Aj? (AxG@  )7  Aj A
j( 6 

 Aj A
jA A Aj? (AxF
  )7  Aj A
j( 6 

 Aj A A
 - 
! (! ("AxG@  / 
; 	 A
j Aj-  :    :   6  6 

  :   6
 Aj A
jA A Aj? (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("AxG@  / 
; 	 A
j Aj-  :    :   6  6 

  :   6
 Aj A
jA A Aj? (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("AxG@  / 
; 	 A
j Aj-  :    :   6  6 

  :   6
# Ak"$  A
j"( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! Aj! ( jA":    Aj"6 (  kA
I  A
 ( 
 (jA A
  (A
j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ Aj 

 Aj!
# A k"$  Aj"  - 
! (!@@@ ("AxF@  :   6
  A
j"
Aն A H (AxG
# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 A
j! ( jA":    Aj"6 (  kAI  A ( 
 (jAض A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 ( !# Ak"$  AjA :   B 7    A
n"A
lkA0r: 	A
A	 A
I
   A
pA0r: A A M
   A nA
pA0r: A AI
   AnA
pA0r: A A I
   A nA
pA0r: A AI
   AnA
pA0r: A A=I
   A=nA
pA0r: A AI

-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11701-11850
   AnA
pA0r: A A/I
   A/nA
pA0r: A AI
   AnA0r:  A 
"k" (  ("kK@    (!
 ( j  j  AjAx6    j6 Aj$ @ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxG
# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jAݶ A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj! (  ("k!
 -  E@ 
AM@  A (!
 ( j"
A (  6   
AjA -  :  A

 
AM@  A (!
 ( jAի6  A
!
 Ax6    
j6@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxF@ 
 (
 - 

 
 )7  
Aj A
j( 6 

 
 / 
; 	 
A
j Aj-  :   
 :  
 6 
 6 

 
 )7  
Aj A
j( 6 

 
 )7  
Aj A
j( 6 
 A j$ 
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 
)7  	Aj 
A
j( 6 

 	 
)7  	Aj 
A
j( 6 
 
Aj$ 

 	 A 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A
@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@@@@@A (
Axs" AOAk 
 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A ? (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A ? (AxG@  )7  Aj A
j( 6 

 Aj A
jA A A
j? (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A ? (AxF
  )7  Aj A
j( 6 

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:11851-12000

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A ? (AxG@  )7  Aj A
j( 6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

# A k"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@@@@@ (AxF@ (" ( F@ 
 ( jA::    Aj6@@@A ( Axs" AOAk 
 Aj A A - 
! (! ("AxF
 A
j Aj-  :    / 
; 	  :   6  6 

 Aj A A
 - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 

  :   6
 Aj A
jA A AjB (AxF
 Aj A
j( 6   )7 

 Aj A A - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 

  :   6
 Aj A
jA A
 ? (AxG@ Aj A
j( 6   )7 

 Aj A
jA A A
jB (AxF
 Aj A
j( 6   )7 

 	 )7  	Aj A
j( 6 

  (
 - 

  (
 - 

   A G
 ( AxG
  (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 ) 7  	Aj Aj( 6 
 A j$ 

# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@@@@@ ( Ak 
 Aj Aԏ A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAُ A
 Aj? (AxG@  )7  Aj A
j( 6 

 Aj A
jA A AjA (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAُ A
 Aj? (AxG@  )7  Aj A
j( 6 

 Aj A
jA A AjA (AxF
  )7  Aj A
j( 6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAُ A
 Aj? (AxF
  )7  Aj A
j( 6 

 Aj A A	 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12001-12150

  :   6
 Aj A
jA A Aj@ ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$  Aj"  - 
! (!
@@ ("
AxF@  :   
6
  A
j"A A ? (AxG
  A A A
jA (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  
6 

  )7  Aj A
j( 6 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

 
Aj A A 
- 
! 
(! 
("AxG@ 	 
/ 
; 	 	A
j 
Aj-  :   	 :  	 6 	 6 

 
 :  
 6
 
Aj 
A
jA A Aj? 
(AxG@ 	 
)7  	Aj 
A
j( 6 

 
Aj 
A
jA A AjA 
(AxG@ 	 
)7  	Aj 
A
j( 6 

 	 
(
 
- 
 
A j$ @@@ (AxF@ A j A j( 6   )h7D

 Aj ( 6   )7 (h"@ (l A
 Aj Aj( 6   )7 A@kA A! Ajw - @A
G

 (D! A j  (H" (L (
 @@ (hAF@ (l
   )p7  A
:    A
j A j( 6  


 Aj Aj) 7  Aj A j) 7  Aj A j) 7   )h7 A6D A 6@ B7L  AjB7  Aj6H  A
j A@k Aj (!   (6   6  A:  A! @@@ (  
 (" @ (  A
A! 
 Aj  j" ( "E
   ( A
 


 A j A j( 6   )p7@ A6 A 6 B7  A@kB7  Aj6  A
j Aj Aj (!   (
6   6  A:   (@" @ (D  A
 E

  A

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7 A6 A 6 B7  Aj"B7  Aj6 A j Aj Aj  (
"6p  ("6l a  Aj - k:     / i;    )x7  Aj Aj) 7   A j Aj) 7    (t6
   6   6  A:  
@@@@@@@@@@A ( "Ak"   AO	 
 ($" @ ((  A
 A0j! 

 A(j! @ ($ 
 ((" @ (,  A
 A4j! 

 (0Axs! ($" @ ((  A
 A0j!  AF AKr


 ($" @ ((  A
 A0j! 

@@A ($" Axs" AO 
  @ ((  A
 (0"AxF
 A0j! 

-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12151-12300

 (("AxF
 A(j! 

A! @@   
A!  ($"E
  (( A
 A j  j! 

 (("AxN


  ( !
 E
   ( A
 Aj$ 
   (  ( 
  ( !# Ak" $    6
A !A!@@@@@@@@@@@@@@@@@@@@@@@ /   Aj-  Atr"AqAk 	




A!

A!

A!

A!

A!

A	!

A
!

A
!

A0!


A1!


A!


A!


A!
	
A!

A!

A!

A!

A!

A
!

A!

A!
 A
vA q Avr r!
   : ?    A
jB70    A?jB7(  A jA:    A jA 6   A jB7   A jA6   A6$  A6  A 6  A6`  A: \  A6X  B 7P  B 7H  A6@    A@k6   A6
    A(j6 ( (  Aj!  Aj$  
7# Ak"$   6
   6 AjA  A
jA    
`# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
`# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
# A@j"$   6
  6@ E@ A6 A 6 B7


 A6 A 6 B7
  6<  68  A8jB70
  AjB7(  A(j6   Aj A@k$ 
M# Ak"$    A
j6
 A A
A A  A A A A
jA !  Aj$   
~# A k"
$  
  -  "@@ 
( @@ 
("E@A!


 A H
A!	 "
E

 !	@ AI
  Ak"A   M! 	Aj!@  AjO@@ 
 
A j"
M@  
O
 
 A  
A  
 
 
j"   j")  "B8"B:j-  :   Aj  BB"B"j-  :   Aj   BB("B4A?qj-  :   Aj   BB "B.A?qj-  :   Aj  B(A?qj-  :   Aj  BB BB B(B B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   A	j   BB("B4A?qj-  :   A
j   BB" BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   Aj  "AvA?qj-  :   Aj  AvA?qj-  :   Aj  A
j)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"j-  :   Aj  BB BB B(B B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   
A j!
  Aj"O



 Aj A  
@  Ap"k" M@ 
!

 	Aj!@  Aj"K@A  
  M@@ 
 
Aj"M@  O
  Aд  
A  
 
 
j"   j"-  "

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12301-12450
Avj-  :   Aj  Aj-  "A?qj-  :   Aj  Aj-  "At AvrA?qj-  :   Aj  
At AvrA?qj-  :   
Aj!
 " O



  A  
@@@@@@@@@@ Ak 	
  M
  
j 	Aj"
  j-  "AqAvj-  :   Aj"E
  M
 Aj" O
  
j 
 At  j-  "AvrA?qj-  :   Aj" O
 AtA<q!A!

  M
A!  
j 	  j-  "AvjAj-  :    Aj"K@ AtA0q!

  A  
  A  
A  
  Aг  
  A  
  A  
  A  
  
j  	jAj-  :    j!
 !	 E@A !

  	O@ 	 
j!  	k!@@A  	kAq"E
  E
 A=:   AF
  AF
 A=:  AF
  AF
 A=: 
 

  A  
!

 	 A  
A A-A  
 	  
 	  	jK@A A*A  
 
A
j" 
  
(
@ 
 
)"B >
 
 > 
 6 
 
6 
 6
A A
 A A  
   6   
6   6  
A j$ 
J
~# Ak"
$ A!	A!
@@@@@@ @ A H
A -  A! A"
E

 
  ! @A !
 A H
A -  A!
 A"	E

 	  !@ E@A!


A ! A H
A -  A! A"
E

 
A0j" 
  " @@ 
(0E@ 
 6, 
 6( 
 6$ 
 6  
 6
 
 6 
 6 
 6 
 6
A !A !	# Ak"
$  
A 6
 
B7 
A
j"
(!@@@@@ 
("
@ 
ArgAsA	lA jAvAj" 
j" I

 
(! 
("@ ArgAsA	lA jAvAj" j"	 I

@@   	j"M@ 
(
! 
( "

A !

A  
 
ArgAsA	lA jAvAj" 
j" I

  j" I
@ A N@ 
@B
 
Aj" 
  
 
( 
(
"kK@   
 
(
!
 
( j  
 

-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12451-12600
  
j6

 @B 
Aj"    
( 
(
"kK@    
(
!
 
( j   
  j6

 
@B 
Aj" 
  
 
( 
(
"kK@   
 
(
!
 
( j  
 
  
j6

  
)7  Aj 
A
j( 6 

 A6  6 Ax6 
 
Aj$ 

A  
A  
A  
A  
 
(8! 
(4! 
(0"AxG
   6   6  A6 

   
)4"B >   >   6
   6   6  A06  @  A
 E
  A

A -  A
A"E
 AjA )  7   AjA )  7   AjA )  7   A )  7   
A
6x 
 6t 
A
6p 
 6 
 6 
 6 
A0j Aj 
A j 
Aj 
- 0"A
F@ 
(4"@ 
(8 A
@ @A !@  j"-  A.F
  Aj"G
 

 
A+60 
A0jb  A+6 

 
A+60 
A0jbA !@ Ak F
  As j!  k!@  jAj-  A.F
  j! Aj! A~G
 
 !
 
A+60 
A0jb 
 Av AqA Gj6  
 Av AqA GjAl6 
( !A! 
("@A !	 A H
A!	 "E

 
A0j!
 Aj!A !A !A -  !A -  !@@@@@@@@@@@ "Aq" 
A!

A
!

A
!

A
!
  k"A   M"A O
A !

 E
  Ak"j-  "A=F
 A j-  AG
 
 6 
 :  
A :  
A6 

 A k!@@@@@@ A`F
 A j" K
 Aj K
@@  j"
-  "A j1  "BQ
  
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "
BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "
BQ@ Aj!

 
Aj-  "A j1  "BR

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12601-12750
 Aj!
 
A :  
A6  
A
j Av<   
A	j Av=   
 At r6 


  j"
 B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   
Aj-  "A j1  "BQ@A!	

A	!	 
A	j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "
BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A!	 
Aj-  "A j1  "
BQ
A!	 
Aj-  "A j1  "BQ
 
Aj B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87  A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "
BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "
BQ
A! 
Aj-  "	A j1  "BQ
 
A
j B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   
Aj-  "A j1  "BQ@A!	
	
A!	 
Aj-  "A j1  "BQ
A!	 
Aj-  "A j1  "BQ
A!	 
Aj-  "A j1  "
BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "
BQ
A!	 
Aj-  "A j1  "BQ
 
Aj B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   AO@ Ak! Aj!  "I



A  
 
A :  
A6  
A
j  j"Av<   
A	j Av=   
 At 	r6 

A`A A  
  A  
 Aj A  


 
A6  
A: 

@@ AI
   Ak"
O
 @@@@@@@ Aj! AxF
   K
 Aj" I
@  Aj"M@  I
  K
@  j"-  "A j1  "BQ
  Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "
BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "
BQ@ Aj!

 Aj-  "A j1  "BR
 Aj!
 
A :  
A6  
A
j Av<   
A	j Av=   

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12751-12900
 At r6 


A  
  j B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   E
 Aj! Ak! 
 "K



Ax A  
  A  
AЯ  
  A  
  A  
A  
 ! !
A  AM! Ak!
 Ak!	 Ak!A  k! Ak!
@@@@@@@@@@@ Ak"E@ ! A G!	A !B !A !# A k"$ @@@@  "O@  G
A !

  A  
@ A   j"-  "A=F
 @@ A j1  "BQ@A !

 B:!  j" AjF@A!

A - "A=F
 A j1  "BQ@A!

 B4 !  Aj"F@A!

A!
 Aj!A! - "A=F
 A j1  "BQ@A! !

 B. !  F@A! !

A!
 Aj!
A! - "A=F@ ! ! 
!

 A j1  "BQ@A!

 B( ! 
 F@A!

A - "A=F
 A j1  "BQ@A!

 B" !  AjF@A!

A - "A=F
 A j1  "BQ@A!

 B
 !  Aj"F@A!

A!
 Aj!A! - "A=F
 A j1  "BQ@A! !

 B !  F@A! !

A!
 Aj!
A! - "A=F@ ! ! 
!

 A j1  "BQ@A!

 B ! 
 F@A!

A - "A=F
 A j1  "BQ@A!

 B
 !  A	jF@A	!

A	 - 	"A=F
 A j1  "BQ@A	!

 B !  A
j"F@A
!

 - 
A=F@A
!
 A
j!A
!

A  
   j"M@ 
 6 
 :  
A :  
A6 

A̫  
  k!  F@ !

A !@@@@ 
 j"
Aj"E
  j"-  A=G
@ 
Aq@ Aj"E
 Aj" G
 !
	
 Aj!

 AF
 -  A=G
 AqE@ !


 Aj! Aj G
 
 !

A  
AԨ  
  
 
 j"M@ 
 6 
A ; 
A6 

A  
   j"M@ 
 6 
A ; 
A6 

Aܫ  
A !
@@@@@ AqAk 
 



-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:12901-13050
  j" I
 AqE
 
A6  
A: 

 
A6  
A: 

Aܩ  
B !A !A !A !A !A !
A !@@@@@@@@@ 		   
 A6 A 6  B7
 B7  Aj6 A  
B!A!

B!A!A!

B!A!A!A

B !A!A!A!A!


B(!A!A!A!A!
A!

B0!A!A!A!A!
A!A!

A 
!
@@@@ 	E  B RqE@ 


  j" I
 @ 
 :  
A:  
A6  
 Ak6

A  
  O@ !

  j B8<   Aj! E@ !

    K!  F
  j B0<   Aj! E@ !

  F
  j B(<   Aj! 
E@ !

  F
  j B <   Aj! E@ !

  F
  j B<   Aj! E@ !

  F
  j B<   Aj!

A  
  A  
@   j" I
AA 
! 
 6 
 6 
 6 

A  
 A j$ 


  K
@  Aj"M@  K
@@  G@  j"-  "A j1  "BR


A A Aа  
  
F
 Aj-  "A j1  "
BR@  j"AM
 Aj-  "A j1  "
BR@  	F
 Aj-  "A j1  "BR@ AM

 Aj-  "A j1  "BR@  F
 Aj-  "A j1  "BR@ AM
 Aj-  "A j1  "BR@  
F
 Aj-  "A j1  "BR
  Aj"M
Aб  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
 Aj"E


 
A :  
A6  
A
j Av<   
A	j Av=   
 At r6 

A  
 Ak!  j" 
B4 B: 
B. B( B" B
 B"BB BB B(B B8>   Aj  B"BB BBB =   Aj!  Aj"M
 
A  
  A  
  A  
AAA  
AAA  
AAA  
AAA  
AAA  
AAA  
AAA  
A  
 
A :  
A6  
A
j  	j"Av<   
A	j Av=   
 At r6 
 
(0AF@ 
)4! @  A
   7  A
6 

 
A0j!  

-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13051-13200
(8"  K!# A0k"$  A: 
 A 6  6  6 A j!
A !A !A !# A k"	$  	A(j Aj"
@ 	- (E@ 
B7 

@@@@@@@@@@@ 	- )A F@ 
- 
"@ 
 Ak": 
 AqE@ 
B7 

 
 	A j 
Ax!Ax! 	-  E
 	- !"A"G@ A F
Ax!

 	A j" 
5 	(P"AxG
@ 	- T"@  
@ 	(PAxG@ 	A j 	A j( 6  	 	)P7@

 	A@k 

 	(@AxG
	

 	A0j 
 	(0AxG
 	A j 
 	(\! 	(X! 	(T! 	(P

 	Aj 
 	- E
 	- !@@@ A,G@Ax! A G
	 AxG



 
 	Aj 
 	- E@Ax!
	
 	- "A"G@Ax! A F
	Ax!
	
 	A j" 
5 	(P"AxG
 	- T"@  
@ 	(PAxF@ 	A@k 


 	A j 	A j( 6  	 	)P7@
 	(@AxG



 AxG@ 	A4jA A E



 	A0j 
 	(0AxG
 	A j 
 	(\! 	(X! 	(T! 	(PE


 
- 
Aj"Aq G

 
 : 
 	A j 
 	(PAxF@ 
 6
 
 6 
 6 
A 6 

 
 	)P7 
A
j 	A j( 6  
A6  E
  A

 	Aj 
 	- 	! 	- 
 


A  
 
B7 


 	A j" 	)07  Aj 	A8j( 6  	(T! 	(X! 	(\!
 	 6< 	 68 	 64

 ! 	 	( U6@ 	 	A j(  6 C 	- T!
 	A<j 	( C6   	 	(@6 9 	 : 8 	 64

 	A jA A 	 	(\6< 	 	)T74

 	A<j 	A j( 6  	 	)@74
 AxrAxF

  A
 
- 
Aj"Aq F

A  
 
 : 
 
 	)47 
A6  
A
j 	A<j( 6 
 	A j$  (,! ((! ($!@@@ ( @ ! !

 A j Aj ( "AxF
 ((! ($! E
   A
  6
  6  6 A A Ajx

  6
  6  6 A
:  
 A0j$  
- 0"A
G@   
)@7  A j 
A j) 7   A(j 
A j) 7  
 
) 17 
 
A8j)  7   Aj 
) 7     
)7 	   :   A6  E
  A

 

-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13201-13350
A j 
A<j( 6  
 
)47p@ (" 
A j"(F ( ( A
@  AjA  ( ( 
(p!  AjA  
(t" 
(xA"! E
  A

  A: A1! 
(p"E
  
(t A
   6  @  A
 
A
j"( " @ (  A
 (
" @ (  A
 (" @ (
  A


   
/ 1; 	   
)@7  A
j 
- 3:    A j 
A j) 7   A(j 
A j) 7  
)4!   
(<6   7
   :   A6 
 
(
" @ 
(  A
 
(" @ 
(
  A
 
($" E
 
((  A

   
 
  
   
AA
 
 	  
 
Aj$ 
 A|
C~# A k"
$  
Aj"  
- 
! 
(!@@@@@ 
("AxF@ 
 :  
 6
  
A
j"A A Aj@ 
(AxG
  A A AjA 
(AxG
 Aj!# A k"	$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6@@@@@@@@A ) B}" BZAk 
# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@ (
AxG@ Aj"
 A A - 
! (!
 ("
AxG
  :   
6
 
 A
j"A A
 ? (AxG
 
 A A A
jD (AxF@  (
 - 

  )7  Aj A
j( 6 

 Aj A A - 
!
 (! ("
AxG@  / 
; 	 A
j Aj-  :    
:   6  
6 

  
:   6
 Aj A
jA A D (AxF
  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  
6 

  )7  Aj A
j( 6 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

 	 A 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$  Aj"
  - 
! (!
@@ ("
AxF@  :   
6
 

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13351-13500
 A
j"A A ? (AxG
 
 A A A
jA (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  
6 

  )7  Aj A
j( 6 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

# Ak"
$  (" ( F@ 
 ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$ @@@@@@ ) B}"AjA  BTAk 
 Aj AΆ A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAֆ A
 A j? (AxG@  )7  Aj A
j( 6 

 Aj A
jA A
 A j? (AxG@  )7  Aj A
j( 6 

# Ak"
$  A
j"
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 Aj!
 A(j! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj  @ 
(AxF@ 
Ax6 

 
 
)7  
Aj 
A
j( 6 
 
Aj$  (AxG@  )7  Aj A
j( 6 

 Aj A
j C (AxG@  )7  Aj A
j( 6 

 Aj A
jA A A jB (AxF
  )7  Aj A
j( 6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAֆ A
 A0j? ("AxG@  )7  6 

 Aj A
jA A A<jA ("AxG@  )7  6 

 Aj A
j AjC ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAֆ A
 Aj? ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 
)7  	Aj 
A
j( 6 

 	 
)7  	Aj 
A
j( 6 
 
Aj$ 

# Ak"
$  (" ( F@ 
 Aj! ( jA :    Aj6 

-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13501-13650
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$ @@@@@@@@@@@@ ( Ak 
 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 


  :   6
 Aj A
jA A
 Aj? ("AxG@  )7  6 


 Aj A
jAƄ A AjA ("AxG@  )7  6 


 Aj A
jAɄ A A
jD ("AxF
	  )7  6 


 Aj A΄ A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 


  :   6
 Aj A
jAل A AjB ("AxG@  )7  6 


 Aj A
jAބ A A8j@ ("AxG@  )7  6 


 Aj A
jAƄ A AjA ("AxG@  )7  6 


 Aj A
jAɄ A A
jD ("AxG@  )7  6 


 Aj A
jA A A(j? ("AxF
  )7  6 
	
 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 
	
  :   6
 Aj A
jAل A AjB ("AxG@  )7  6 
	
 Aj A
jAބ A A@k@ ("AxG@  )7  6 
	
 Aj A
jA A Aj? ("AxG@  )7  6 
	
 Aj A
jAƄ A A
jA ("AxG@  )7  6 
	
 Aj A
jAɄ A A(jD ("AxG@  )7  6 
	
 Aj A
jA A A4jA ("AxF
  )7  6 

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 Aj? ("AxG@  )7  6 

 Aj A
jA A
 A j@ ("AxG@  )7  6 

 Aj A
jAƄ A AjA ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 Aj? ("AxG@  )7  6 

 Aj A
jAل A Aj? ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 Aj? ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 


-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13651-13800
  (
 - 

  (
 - 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 
)7  	Aj 
A
j( 6 

 	 
)7  	Aj 
A
j( 6 
 
Aj$ 

# Ak"$  (" ( F@ 
 Aj!
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@ 
-  E@ Aj"
 Aփ A - 
! (! ("
AxG
  :   6
 
 A
jAڃ A
 
Aj@ (AxG
 (
"(! 
- !
 - E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"A (  6   AjA /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj 
 F ("AxF@  A 

  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAڃ A
 
Aj@ (AxF
  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   6  
6 

  )7  Aj A
j( 6 

 (
"(! - E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 
Aj!
 (  kAM  A ( 
 (j"A (  6   AjA (  6    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!
# Ak"
$  
(! 
Aj  
("
@ 
(AxF@ 
- 
! 
(!@@ 
E
  E@ (" ( F@ 
 ( jA,:    Aj6
 
Aj  E 
("AxG
 
AF
  Aj! 
AlAk!
@ (" ( F@ 
 ( jA,:    Aj6 
Aj  E 
("AxG
 Aj! 
Ak"

 

 
 

 
 
)7 
 6 

 
 
)7  
Aj 
A
j( 6 
 
Aj$  ("AxF@  A 

  )7  6 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

 	Aj A A 	- 
! 	(! 	("AxG@ 	A
j 	Aj-  :   	 	/ 
; 	 	 :  	 6 	 6 

 	 :  	 6
 	Aj 	A
jA A Aj? 	(AxG@ 	Aj 	A
j( 6  	 	)7 


-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13801-13950
 	Aj 	A
jA A AjA 	(AxG@ 	Aj 	A
j( 6  	 	)7 

 	 	(
 	- 
@ 	( AxF@ Ax6 

  	) 7  Aj 	Aj( 6 
 	A j$  
(AxG
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kA	I  A	 ( 
 (jA A	  (A	j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj  )
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  
(AxG
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!@@@@@ -  Ak 
  A A

  A A

  A A

  A A
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  
(AxF@   
(
 
- 

   
)7   Aj 
A
j( 6 

   
/ 
; 	  A
j 
Aj-  :     :    6   6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 
 
A j$ 
W# Ak"$   ( " -  E@ A A

   Aj6
 A A A
jA 
!  Aj$   
W# Ak"$   ( " ( E@ A A

   Aj6
 A A A
jA 
!  Aj$   
8# Ak"$    ( 6
 A A A
jA !  Aj$   

   (  
R# Ak"$    ( " 6
 A AA A  AjA A A A
jA !  Aj$   
~# A k"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7  : Y  : X A@k! Aj!# A k"$ @@@ @ A(j! ( ! (!# Ak"$  A jA    L@ - H"A
F@ Aj A j") 7  Aj A j) 7  A j A j( 6   )L7 Aj" A(j Aj @@@ ((AxF@  Aj( 6   )7L

 A j A0j( 6   )(7p ("@ ( A
 Aj A j( 6   )p7 A jA A
 Ajw - H"A
G

 A3j A j( "6    )L"7 + Aj 6   7 A 6 B7 A: h A 6X A 6d A 6` A 6P A 6H  Aj6\# A0k"$  A$j" Aj"( ( A6 A 6   B
7 B7
  Aj6 A j"( ( ! ($"@ (( A
 A0j$  E@  )7 A
j Aj( 6  A
:   ("E
 ( A

A A7 AjA A  
  )X7 Aj A j) 7  A j A j) 7   ) I7(  A j)  7 /  :    )(7  Aj ) /7  
 (! (
"@ ( A
 AG AMq
 ("E
 (
 A

 A?j" A j)  7   A8j" A j)  7  A0j A j)  "7   ) I"7( )h! Aj )  7   Aj ) 7   A	j 7    7   7   :  
 Aj$  - ("A
F
   )87  Aj A@k) 7   A j A j) 7   ) )7P  A0j)  7 W  Aj ) W7     )P7    :   (" @ (
  A
 ((" E
 (,  A

 (! ( ! A: P A0j A j) 7   )P7(# A k"$  Aj"A ( A ( d Aj    A(j" A je (
! (! ("@ ( A
  6  6  A j$  Ar!	 ( ! (!# A k"$  Aj  (
"
 @@@@ - "AF@ 	A 6 	B7  ( "@   
 ("E
   (

 - !
 A
G
 A8j  ("
 A !A (8Aj"A " AM"A H
A -  A! A"
E
 
 

-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:13951-14100
:   A6
  
6  6 Aj  
  - "AG@A!@ - !
@@ A
F@  (F




 A8j  
  Aj  (8Aj"A  (!

  
j 
:    Aj"6
 Aj  
  - "AG
 

 ( "@   
 ("@   (
 	 )7  	Aj A
j( 6 
 A j$ 

   
 A j Aj) 7  A j A"j) 7  A j A*j) 7  A j A0j) 7   
: 9  : 8  )7:Aߣ A+ A8jA A̯  
 A#j A4j( "6   Aj 6   ),"7   7# A k"$  A j" Aj"(!   ("@@@@@ ( AxF@ - ! (!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
   -   ( "AxG
 AF
  Ak!	 Aj!@ (" ( F@ 
 ( jA,:    Aj6   -   ( "AxG
 Aj! 	Ak"	
 

 A j 

  )7T  6P

 A j Aj( 6   ) 7P
 (PAxG
  A
j A j( 6   )D7

 A0j" A j( 6   )P7( (D"@ (H A
 A@k ( 6   )(78 A A A8jw -  A
G

   )7  A
:    A
j A
j( 6 

   ) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
 A j$  (" E
 (
  A

 A j A4j( "6   A j 6   ),"7 S  7# A k"$  Aj"(! (! A j" A j   @@@ (TAxF@ A
j A j( 6   )H7

 A0j" A j( 6   )T7( (H"@ (L A
 A@k ( 6   )(78 A A A8jw -  A
G

   )7  A
:    A
j A
j( 6 

   ) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
 A j$  (" E
  (
  A
 (" @ (
  A
 ((" E
  (,  A
 A j$  A j$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A@k Aj) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A jr Aj$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  A@k Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj A j) 7   ) 7P  ) 78  ) 7h A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7    A j  A8j A jr Aj$ 
5# Ak"$    6
 A A A
jA !  Aj$   
# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@  -  Ak	



 
 A A

 A A

 A A


   Aj6
 A A
A A
  AjA A A
 A
jA 

   Aj6
 A A A
jA 

 A A

   Aj6
 A AA A A
jA 

   Aj6
 A A
A A A
jA 

 A A


   Aj6
 A A
A A A
jA 

 A A



 A A



 A A


 A A



   Aj6
 A A A
jA 
	
 A A

-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14101-14250

 A A

 A A

 A A

   Aj6
 A A
A A  AjA A A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A A
A A  AjA A A	 A
jA 

   Aj6
 A A A
jA 

   Aj6
 A AA A A
jA 
!  Aj$   
~@ ( "Aj"( "E
   Ak6   ( "Aj6  ,  "A q!@@ A N
  AF
 Aj" Ak6   Aj6  , "A qB ! A N
  AF
  Ak6   Aj6  , "A qB ! A N
  AF
  Ak6   Aj6  , "A qB ! A N
  AF
 "B B
 ! AtAuA N
  AF
 "B B# ! AtAuA N
  AF
 "B B* ! AtAuA N
  AF
 "B B1 ! AtAuA N
  AF
 "B B8 ! AtAuA N
  A	F
 "AtAuA H
 AqAK
 B? !
   7  A 6 
  A AT6  A6 
  A AT6  A6 
Q# Ak"$   -  AF@ A A

   6
 A A A
jA 
!  Aj$   
%~# Ak"$ A ( !   " (!  (!  ( !  A
A "(! (!  ( ! A
A "(! (! ( ! A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 Aj Aj( 6   )7  A jA A x A6H
 @  A
@@@@ (HAG@ A@k A j) 7  A8j A j) 7   )H70 (`! (d! )h!# (p! (t! )x!$ Aj  @ (AxG@ A j Aj) 7  A j Aj) 7   )7L A
: H

 Aj Aj( 6   )7  A jA A  x
  @   A
 - HA
F@ (`! (\! (X! (T!! (P! (L! Aj!# A@j"$  A:  A 6
  6  6 Aj!# Ak"$  A j Aj"@ -  E@ A:   Ax6

@@@@@@@@@@@@ - !A F@ - 
" E
   Ak" : 
  AqE@ A:   Ax6

  Aj Ax! A! - E
 - "	A"G@ 	A F
Ax! 

 A j" 3 (X"AxG
 Ar!@ - \"	@  @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG
	

 A(j  ((AxG
 A j ' - X"AF
 A j Aj-  ":   A j :    /  ";T  ;P (\!
 (`! (d!
 (h!
 (l!
 (p!
 (t!
 (x! (|!

 Aj  - E
 - !@@ A,G@Ax!  A G
 AG

	
  Aj  - E@Ax! 

 - 	"A"G@Ax!  A F
Ax! 

 A j" 3 (X"AxG
@ - \"	@  @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 AG@ A,jAՂ A



 A(j  ((AxG
 A j ' - X"AF
 A j Aj-  ":   A j :    /  ";T  ;P (\!
 (`! (d!
 (h!
 (l!
 (p!
 (t!
 (x! (|!

   - ! -  



  /P; )  
6L  6H  
6D  
6@  
6<  
68  
64  60  
6,  A j-  : + - 
Aj" Aq  G


-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14251-14400
   : 
 (8!  (<!
 (@!
 (D! (H!
 (L! (,!	 (0!
 (4! A j  (XAxF@  :    / );   6$  
6   6
  
6  
6   6  6
  
6  	6 Aj - +:  

  )X7 A
j A j( 6  A:   	@ 
 	A
  @ 
  A
 E AGr

 
 A


 A:   Ax6


A  
 A j"  )(7   Aj A0j( 6 
  (d64  )\7,

 !   ( ]6  A j(  6  - \!	
 A4j ( 6    (6 1  	: 0   6,

 AjAՂ A
 A4j Aj( 6   )""7 [  "7,

 A4j Aj( 6   )7,
 AF

 
@  
A
 
@ 
 
A
 
E AGr
   
A
 - 
Aj" Aq  F

A  
   : 
  ),7 A:   A
j A4j( 6 
 Aj$ @ - "AG@ Aj"
 - :    / ; (
!  ( !	 ($!
 ((! (,!
 (0! (4! (8!
 (<!   (AxF@  :    /;   6$  
6   6
  6  
6  6  
6
  	6   6 Aj 
-  :  

  )7 A
j A j( 6  A:    @ 	  A
 @ 
 A
 E AGr
 
 A

 )
!"  ($6
  "7 A:  
 A@k$ @ - " AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7L

 Aj Aj( 6   )7  A jA A
 x
 @  A
  AG@ Aj A j") 7  Aj A j") 7  Aj A j") 7  Aj A j") 7  Aj" A8j) 7  Aj" A@k) 7   )L7  )07 A 6 A 6 A 6  6  6  6  !6  6  6  $7  6  6  #7  6  6  Aj" 6   6   6 A jA Aj Aj Aj"  Aj    (HA1F@ A(j A j) 7  A j ) 7  Aj ) 7  Aj ) 7  Aj ) 7   )L7 

   Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   A j) 7   A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 A
j Aj( 6   )7 Ax6   b

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ A
j Aj( 6   )7 Ax6   a @  A
 @ Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 @  AtA
 @  A
 E
  A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ A
j Aj( 6   )7 Ax6   a @  A
 @  A
 E
  A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj" Aj
 A
j Aj( 6   )7 Ax6  a @  A
  E
    A
 A j  - HA
F@A -   (T! (L! (P!A
A" E
   6   6   6   Aj$   

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7A A+ AjA A  
A A7 AjA A  
AA
 
A A7 AjA A  

(~# Ak"$ A ( !  " (!  (!  ( !  A
A " (!  (!  ( !  A
A A j  @ (`AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A@k A j) 7  A8j A j) 7  A0j A j) 7   )`7(

 Aj A j( 6   )d7 A0jA A Ajx A6(
 @  A
@@@@ ((AG@ A j" A8j") 7  Aj" A0j") 7   )(7 (@! (D! )H! (P! (T! )X!
  6h  6d  6` A(j!
# A0k"$  A j"(! (!  A:   A 6
   6  6# Ak"	$  	 Aj"@@@ A$j"
 	-  @ 	- " A"G@  A F
 
Ax6 

 	Aj / 	(" AxF@ 
Ax6 

 
 	/ 	;  
Aj 	A

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14401-14550
j-  :   	- ! 
 	(
6 
 :  
  6 

 - 
" E
   Ak" : 
  Aq
AxAx
6 

A  
  	Aj!# A k"$  Aj" / - ! @@@ ("AxF@   ("AxF
 Aj Aj-  :    / ; - ! 

 Aj Aj-  :    / ;
 (
!  /;  Aj Aj-  :    6   :   6 

  @ Aj!# A k"$  A j @ -  E@ Ax6 

@@@@@@@@ - !A F@ - 
" E
   Ak" : 
  AqE@ Ax6 


  Aj  - E@Ax! 

Ax!  - "A"G@ A F


 A j" ! (D"AxG
@ - H"
@  @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8AxG


 A j @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8"AxG
 - <!

 Aj  - E@Ax! 

 
E! - !@@ Aq"A,G@Ax!  A G
	 



  Aj  - E@Ax! 
	
 - 	"A"G@ A G
	Ax! 
	
 A j" ! (D"AxG
@ - H"
@  @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8AxF


 
 A j @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8"AxG
 - <!
A!
   - ! -  
 
Ax! 

  
: - A: , Ax6(

 Ax6 

A  
 A0j A@k(  6    ( =6 -  - <: ,  6(

 A(jA A

 A0j A@k( 6   )87(

  ( I68  A j(  6 ; - H!
 ! 
 A0j ( ;6    (86 -  
: ,   6(

 A(jA A
@ - 
Aj" Aq  F@   : 
 - -!  - ,! (("
AxG
 A j  (DAxF@   :   :  Ax6 

  )D7  Aj A j( 6 

A  
  (.6   :   :   
6  A
j A2j/ ; 
 A j$  - !  - ! ("AxF@ Aj  - E@ Ax6 

  - 	A F    :   : AxAx
6 

  (6 A
j A
j/ ;    :   :   6 

 Aj!# A0k" $    @  -  E@ Ax6 

@@  - A F@ - 
"E
  Ak": 
 AqE@ Ax6 

   A:    6  A$j  Aj=@@  ($"AxF@@  - (E
  A$j  ("@  ($AxF@  Aj 

  A j  A,j( 6     )$7
  ("AxG
  A$j  Aj=  ($"AxF
 

  A
j  A.j/ ;     (*6  - (!  - )

  A
j  A"j/ ;     (
6  - 
!  - 

!
 - 
Aj"
Aq 
G
  
: 
   (6  

-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14551-14700
:   :   6  A
j  A
j/ ; 

 - 
Aj"Aq G
  : 
  A$j   ($AxF@ Ax6  A : 

   )$7  Aj  A,j( 6 

 Ax6 

A  
A  
  A0j$  - !  - ! ("AxF@   -  E@ Ax6 

  - A F    :   : AxAx
6 

  (6 A
j A
j/ ;    :   :   6 
 A j$  - 
Aj" Aq  F@   : 
 
 	)7  
Aj 	A
j( 6 

A  
 	Aj$  - )!  - (!@@ ($"AxF@ 
  ($"AxG@ Aj A.j/ ;   (*6  - )!  - (!

 
  :  
 :  
A
:  

 Aj A.j/ ;   (*6 
 Aj Aj/ ;    : 
  : 
  6  ( 6 
A A Ajx
 ( " @   A
 A0j$  - (A
F@ - )!  - *! A j ) 7  A j ) 7   )7`  :    :  A 6 A 6 A 6  
7  6  6  7  6|  6x  Aj"6  6  6 
A Aj       - (A
F@ A
j A4j( 6   ),7 A 6 

 Aj A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7` A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  Aj
 A
j Aj( 6   )7 A6   a

 Aj A j) 7  A j A@k) 7  A j ) 7  A j ) 7   )(7` A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ A
j Aj( 6   )7 A6   a @  A
 E
  A



 Aj A j) 7  A j A j) 7  A j A@k) 7  A j A8j) 7   )07` A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  Aj
 A
j Aj( 6   )7 A6   a E
   A
 A(j!# A@j" $  Aj!  A(j"@ ( E@# A k"$  (" ( F@ 
  A4j! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj  Aj  (" (
 ("@  A
 (AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  )7  Aj A
j( 6 

  )7  Aj Aj( 6 
 A j$ 

  A4j  A(j 
@  (4AxF@  Aj  A0j( "6     )("7 A
j 6   7 A
:  

  Aj"  A<j( 6     )47  (("@  (, A
  A j ( 6     )7 A A   Ajw
  A@k$  - (A
F@A -   (4! (,! (0!A
A" E
   6   6   6  ("@ ( A
 Aj$   

 Aj A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7`A A+ A jA A  
A A7 AjA A  
AA
 
A A7 AjA A  


 ( "(  ("F@  A (!
  Aj"6 ( jA":   Ak!
 As!  j! !
@@@A !@@@   
j"G@  jAj"
A  
  G@ @  M
  j,  AL

  k" (  kK@    (!
 ( j  j    j"6
  ( F@  A (!
  A:    Aj6 ( jA":  
 Aj! -  "	A j-  "
E
 
  j"Ak"
 K@@ E
   K@  j,  AJ


  G

@  
K@  
j j,  AJ


  j

 As j"
 j" (  kK@    (!
 ( j  j    
j j"6
@@@@@@@@@ 
A k 













-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14701-14850







A !

A !

A !

A !

A !

A !

 	AqA j-  ! 	AvA j-  !	 (  kAM@  A (!
 ( j" :   	:  A6   Aj

A ! 
A"G

 (  kAM@  A (!
 ( j /  ;   Aj
!  
j!
  6 ! !


    A  
A A(A  
     jAkA  
~# A@j"$  A(j"@ ( AxG@# Ak"
$  (" ( F@ 
 A4j! ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!	# A k"$  Aj"  - 
! (!@@@@ ("AxF@  :   6
# Ak"
$  A
j"( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj!
# Ak"$  (! Aj  ("
@ (AxF@ - 
! (!@@ 
E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj   ("AxG
 
AF
  Aj! 
AlAk!
@ (" ( F@ 
 ( jA,:    Aj6 Aj   ("AxG
 Aj! 
Ak"

 

 
 

 
 )7 
 6 

 
 )7  
Aj A
j( 6 
 Aj$ @ 
(AxF@ Ax6 

  
)7  Aj 
A
j( 6 
 
Aj$  (AxG
   A
jG (AxG
# Ak"
$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj!
# Ak"$  (! Aj  ("
@ (AxF@ - 
! (!@@ 
E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj  I ("AxG
 
AF
  Aj! 
AlAk!
@ (" ( F@ 
 ( jA,:    Aj6 Aj  I ("AxG
 Aj! 
Ak"

 

 
 

 
 )7 
 6 

 
 )7  
Aj A
j( 6 
 Aj$ @ 
(AxF@ Ax6 

  
)7  Aj 
A
j( 6 
 
Aj$  (AxG
  A A A$jH (AxF@ 	 (
 - 

 	 )7  	Aj A
j( 6 

 	 / 
; 	 	A
j Aj-  :   	 :  	 6 	 6 

 	 )7  	Aj A
j( 6 

-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:14851-15000

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  
)7  Aj 
A
j( 6 

  
)7  Aj 
A
j( 6 
 
Aj$ 

 A4j A(j Aj
@ (4AxF@ Aj A0j( "6   )("7  A
j 6    7  A
:  

 Aj" A<j( 6   )47 (("@ (, A
 A j ( 6   )7  A A  Ajw
 A@k$ 
# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj  ( ( (AxG
 (" ( F@ 
 ( jA :    Ax6   Aj6

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 
 Aj$ 
g   Ax6(  B7   B 7  B 7  B7  B17  (,! ((!  ("@ (
 A
  @   A

# A0k"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:   A A -  AG@  ) 7 Aj

 -  ! ( " (   ("F@   A  (!
   Aj6  ( jA::   ( !@@@ A M@A!  A
O
 !

   A n"A lkAqAtA j/  ; 	A ! 
 Aj  j A0r:  

A!   AtA j/  ; 	
  As" (  ("kK@    (!
 ( j Aj  j    j6A 
!  A0j$   
# A k"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:  Aj   @ - AG@  )7  ! 

 ( " (   ("F@   A  (!
   Aj6  ( jA::     Aj  (" (A !  - AG@  )7 Aj! 
 ( "E
   A
 A j$   
# Ak"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:      -  AG@  ) 7 Aj

 (! (! ( " (   ("F@   A  (!
   Aj6  ( jA::       -  AG@  ) 7 Aj

A 
!  Aj$   
# A k"$  (" ( F@ 
 ( jA :    Aj6 Aj  A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj  - 
! (! ("AxG@ Aj Aj-  :    / 
;   :   6
  6

 Aj  A G (AxG
 (" ( F@ 
 ( jA :    Ax6   Aj6

   )7   Aj A
j( 6 

   )7   Aj Aj( 6 
 A j$ 
~# Ak"$ A ( !  " (!  (!  ( !  A
A " (!  (!  ( !  A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 Aj Aj( 6   )7  A jA A x A6H
 @  A
@@@@ (HAG@ A@k" A j") 7  A8j" A j") 7   )H70 (`! (d!
 )h! (p! (t!
 )x!  6  6  6 A j!# A0k"$  Aj"	(!
 	(!  A:   A 6
   6  
6 A$j!# A0k" $   Aj Aj"@  - E@ Ax6 

@@  - 	A F@ - 
"E
  Ak": 
 AqE@ Ax6 

   A:    6  A$j  Aj=@~@  ($"AxF@@  - (E
  A$j  ("@  ($AxF@  Aj 

  A j  A,j( 6     )$7
  ("AxG
  A$j  Aj=  ($"AxF
 

  )(

  )

! - 
Aj"
Aq 
G
  7  6   
: 


 - 
Aj"Aq G
  : 
  A$j   ($AxF@ Ax6 

   )$7  Aj  A,j( 6 

 Ax6 

A  
A  
  A0j$ @@ ($" AxF@   ($" AxF

  )(7
   6 A A Ajx

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15001-15150

 A
:  
 	( " @ 
  A
 A0j$  - HA
F@ Aj ) 7  Aj ) 7   )07 A 6 A 6 A 6  7  
6  6  7  
6  6  Aj" 6   6   6 A Aj"  	   (HA1F@ A(j A j) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )L7 

   Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 A
j Aj( 6   )7 Ax6   b

 Aj A j) 7  Aj A j) 7  Aj ) 7  Aj ) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ A
j Aj( 6   )7 Ax6   a @ 
 A
 E
 
 A



 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )P7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 A
j Aj( 6   )7 Ax6   a E
   A
 A j  - HA
F@A -   (T! (L! (P!A
A" E
   6   6   6   Aj$   

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7A A+ AjA A  
A A7 AjA A  
AA
 
A A7 AjA A  

@  ( AxG@    ( "@  ( AlA
  ("@  (!@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

  (
"@  ( AlA
  Aj  ("@  (
 AlA
A$  ($"AxG


  (!A
! E
    j( A

# Ak"$ @@@@@@@@@@  ( " -  Ak		 
   Aj6 A A AjA 
	
 A A

 A A

 A A

 A A

 A A

 A A

 A A

 A A

   Aj6
 A AA A A
jA 
! Aj$  
  A A
# Ak"$ @@@@@@@@@@@@@  -  Ak
	


 
   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A A
A A  A
jA A A	 A
jA 


   Aj6
 A A
A A  A
jA A A	 A
jA 
	
   Aj6
 A AA A  AjA A A  AjA A  A
jA 

   Aj6
 A A
A A  A
jA A A	 A
jA 

   Aj6
 A A
A A  A
jA A A	 A
jA 

   Aj6
 A AA A  A
jA A A	 A
jA 

   Aj6
 A AA A
  A
jA A A  AjA A  A
jA 

   Aj6
 A A
A A
  A
jA A A  AjA A  A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 

   Aj6
 A A

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15151-15300
A A  AjA A A	 A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 
!  Aj$   
<# Ak"$    6
 A A
A A	 A
jA !  Aj$   
  A A
M# Ak"$    Aj6
 A AA A
  A A A
 A
jA !  Aj$   
# Ak"$ @@@@@@@@@@@  -  Ak
	
 
   Aj6 A A
A A AjA 


 A A
	
 A A


 A A

 A A

 A A

 A A

 A A


 A A

   Aj6 A AA A AjA 

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
# Ak"$ @@@@  ( Ak 
 A A

 A A

 A A

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
  A	O@   

  

b@@  Ak( "Axq"AA Aq" jO@ A   A'jK
  

A A.A  
A A.A  

@@@@@  Ak"( "Axq"AA Aq" jO@ A  A'j"	 I
@@ A	O@  "
A 
	
 A{K
A A
jAxq A
I!@ E@ AI  ArIr  kAOr

	
  Ak" j!@@@@  K@ A ( F
 A ( F
 ("Aq
 Axq" j" I
    k"AI
   ( AqrAr6   j" Ar6  j" (Ar6  


  k"AK



   ( AqrAr6   j" (Ar6


A (  j" I
@  k"AM@  Aq rAr6   j" (Ar6A !A !

   AqrAr6   j" Ar6  j" 6   (A~q6
A  6 A  6 


   AqrAr6   j" Ar6  (Ar6  
	
A (  j" K

 "E
   A|Ax ( "Aq Axqj"   I!   

       I ( "Axq" AA Aq"jI
 A   	K
  
 

A A.A  
A A.A  
A A.A  
A A.A  
   AqrAr6   j"  k"Ar6A  6 A  6   

  

  ( !# A0k" $ @@@@ ( Ak 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A'

 A A%

   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  
  ( !# A0k" $ @@@@A ( Ak" AOAk 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A

   6
  A6  A 6  B7

-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15301-15450
    A
jB7(    A(j6 ( (  Aj

 A A
!  A0j$  
  ( !# A0k" $   A6  A 6  B7
   AjB7(    A(j"6A (" ("  Aj"
 A  ( E
    (6
  A6  A 6  B7
    A
jB7(   6   
!  A0j$  
# Ak"$  Aj (
 ((
 @@@ ("AxF@  Ax6 

 (
" ("I
 (!  k!A!  G@A ! A H
A -  A! A"E

   j ! @  A
   6   6   6 
 Aj$ 
   
  A  
    (
 (( 
M  (
!  ("( "@   
 ("@   (
  ( "@  ( A

# Ak"$ @@ E
   (!  (
!  ((
!	@@ Aj  	  ("AxF
 (
" I
 (!  k! A!@  G@A !  A H
A -  A!  A"E

   j  ! @  A
  @  AxF
   A
 Ak"E



    
  A  
A !
 Aj$  
	# Ak"$  (
! ((
!	@@@@@@ @ (!@ Aj  	  ("
AxF
 (
" I
 (!
  k!A!  G@A ! A H
A -  A! A"E

   
j ! 
@ 
 
A
 @ AxF
  A
 Ak"
 

 Aj  	  ("AxF@  Ax6 

 (
" ("I
 (!  k!A!  G@A ! A H
A -  A! A"E

   j ! @  A
   6   6   6 

   
  A  
  Ax6 

   
  A  
 Aj$ 
A!A! E A HrE@@@ (@ ("E@ E@

A -   A

 (  A 

 E@

A -   A
"E

   6A 

  A6A
!A! !
   j 6    6 
# A k"$    j"K@A A  
A!A  ( "At"   I" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A!A At" Aj"  K" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
HA -  AA"@ A:    A6   6  A6   -  : 
AA 
2  ("  ( F@  
   Aj6  ( j :  A 
  A܃ A
  ("AtAq! Av"Aq@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
   6A!@  ( "AA  - 
 s"AvAqA j(   (("   
   AvA qA j(     
   A
vA qA j(     
   AvA qA j(     
   AvA qA j(     
   AqAtA j(     !
 
~# Ak"$  Aj!# A@j"A<jA 6  A4jB 7  A,jB 7  B 7$ 5!  5 " 5 "~">    ~ B |">   5"~ B |">   5
"	~ B |">
   5"
~ B |">   5"~ B |">   5"~ B |">   5
"~ B |">

-- Chunk 104 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15451-15600
  B "
>  Aj!
A!@  j"Aj"
 
5   
j5 " ~|">  B !@@@@@@@@@ AO@ Aj" 5    ~||">  B !

 Aj"
 
5    ~||">  B ! AG

  jA
j" 5    ~||">  B !

 A
j"
 
5    ~||">  B ! AI

  jAj" 5    	~||">  B !

 Aj"
 
5    	~||">  B ! A
G

  jAj" 5    
~||">  B !

 Aj"
 
5    
~||">  B ! AI

  jAj" 5    ~||">  B !

 Aj"
 
5    ~||">  B ! AF
  A
j

 At jAj
" 5    ~||">  A j j"  ~ B | 
|">  Aj B "
>  Aj! Aj"A
G
 
  ) 7   ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A(j A(j) 7  A0j A0j) 7  A8j A8j) 7  )! )! )!
 )! )! )! )!  )7  7  7  7  7# Ak"$   Aj") "B Bް Aj B B  A j B Bo A0j B B A@k )"B Bް A j B B  A j B Bo A j B B Aj )"B Bް Aj B B  Aj B Bo Aj B B Aj )"	B Bް Aj 	B B  Aj 	B Bo Aj 	B B Aj ) "
B Bް Aj 
B B  Aj 
B Bo Aj 
B B    A8j)  A(j)  Aj)  Aj) " )|"
 T|" ) |" T|"
 )0|" 
T|"
|" 
T"|" A j)    )p|"
V| 
 
 A j)    )`|"V|   A j)    )P|"V|  A j)  
B~" )@| T||" T||"V||"V||" )|"
 Aj)    )|"
V| 
 
 Aj)    )|"V|  Aj)  B~" )| T||" T||"V||" )|"
 Aj)    )|"V|  Aj)  B~" )| T||" T||" )|" Aj)  B~" )| T||"7     T  V|"|"  
T Aj)   
V|||" )|"  
T Aj)   
V|||" )|"
  V Aj)   V|||"
7  	  T  T|"|"  T Aj)   V|||" )|" 
 
V Aj)   
V|||"	7  
  T  V|"|"  	V Aj)   T|||"7   T  V|7  Aj$  Aj )"B Bʌs Aj B B޸վ A(j B B A8j B Bp A j )"B Bʌs A j B B޸վ A j B B A j )"B Bʌs Aj B B޸վ Aj )"B Bʌs Aj B B¡ǥ  Aj ) BЧ
   
 )"	}"BЧ
|" TB}"   B  	 
V}"	 Aj) " )|"
 )H|"
}"
|"|"V| B¡ǥ |" T|B}B?"    A j)   
V|" )(|" )X|" A j)  
 
V||"
 )x|"
}" 
 V 	 	 
T}|B?"|"|"V| B|"P|B}B?"    A0j)   T|" )8|"	 )h|"
  
V A j)   V|||" )|" Aj)  
 
V||"
 )|"
}"  V  
 V}|B?"|"
|"V| B|" T|B}B?"   ) )  B ||| A@k)  	 T|  
T A j)  	 
V|||  
V Aj)   V||| Aj)  
 
V||}| 
 T   
T}|B?||"	 T|"Bʌs" |"BЧ
|"
 TB}"  B޸վ"
 |"  T|"|" T| B¡ǥ |" T|B}B?"   |"  
T  T||"|" T| B|"
P|B}B?"  Bp" |"  V  T||"|" T| B|" T|B}B?"   T  T| 	|| T|"Bʌs" 
|">    B >   B޸վ"	 |"  T|">   B >
    
|"  	T  T||">   B >   Bp |  V  T||">   B >
 Aj$ 
~   (  "At AqAtr AvAq Avrr"  ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr"	Bʌ}"
B?|B}"
B?|B޸
}"
B?|B
}"
B?|B}"B?|B}"B?|"B?|B}"sA  B?AsAqAqk"q s6
    s q s6    s q s6    s q s6    
s q s6
    
s q s6    
s q s6   	 
s q 	s6 
g A  (   ( F (  (Fq (  (Fq (
  (
Fq (  (Fq (  (Fq (  (Fq (
  (
Fqk

~# Ak"$  A@k ) "B  ) " A j )"B   A j )"B   A j )"B   Aj B  )" Aj B   Aj B   Aj B   Aj B  )" Aj B   Aj B   Aj B   Aj B  )" Aj B   Aj B   Aj B   A j )@"B Bp A0j )P" A j) |" )|" B |"B Bp Aj B "
 A j)   T|"
 )`|" )|"	 Aj)   V||" )|"
  T B ||"|"B Bp  B " ) "  
T|" A j)   
T|" )p|"
 )|"
  	T Aj)   	V|||" )|"	 Aj)   
V||" )|"|"
  
T B ||"
|"B Bp   B " )0"  
V A(j)   T||" A j)  

-- Chunk 105 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15601-15750
 T|" )|"  
T Aj)  
 
V|||"
 )|"
  	T Aj)   	V|||" )|"	 Aj)   V||"|"|" 
 
V|"
  T B ||"
|"B|"PB}"    T B |"  
V Aj)   T||" )|"  
T Aj)  
 
V|||" )|"
 	 V Aj)   	V|||"  V|"	  
V A8j)   T|||" )|"
 
 
V|"
|"
|"V| B}" T|B}B?"   	V  	T|"	  V Aj)   T||" )|"  
T Aj)   
V|||"
|" 
 
T Aj)   
V|||" ) |" 
 T|"|"
 T|B?"
 
  	T  V|"	  
V Aj)   T|||"  V Aj)   V|||"|" T| B|" T|B}B?"   	T  T|| T|" |">    B >   B" |"  T|">   B >
    T  T|" 
|">   B >    T Bp ||">   B >
 Aj$ 
	~   ) " ) |"B|"	PB}"   )" )|"  V|"|"V| B}" T|B}B?"  )"
 )|"  T  V||"|" T|B?"  )"
 )|"  
T  T||"|" T| B|" T|B}B?"   
T  T|| T|" 	|">    B >    B"|"  T|">   B >
    T  T|" |">   B >    T Bp ||">   B >

~  B  ) " ) "T}"  )"T}  }" )|" T|B?" )" )"T}   }|" T|B?" )" )"	T}   	}|" T|B?"  }|">    B >    B"|"  V|">   B >
    T  T|" |">   B >    T Bp ||">   B >

	~  B  ) "B R}"  )"T}B?"  )"T}B?"  )"	T}B?" }">    B >   B"
  }|"  T|">   B >
    
T  T|"  }|">   B >    V  	} Bp||">   B >

	# A k"$  (  "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr"	 ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr"B}B?|B}B?|B}B?|B?|B?|B?B|B?|B}B !
  6
  6  6  6  6
  	6  6  6    A    
:   A j$ 

~# A k"
$  
A0j ) "B B 
A@k B Bp 
A j  )"|" 
)0|"B Bp 
Aj B " )"  T 
A8j)   T|||"|"B Bp 
 B "  T B |" 
)@"	 )|"  T|"|"|"B Bp   B "
  T B |"  V 
A j)   	T||" 
) |"  V|"|"|"	B|"
PB}"  	 
T B |"	  V 
A(j)   T||" 
)|"  T|"|"|" T| B}" T|B}B?"   V 
Aj)   T||" 
) |"  	T|"|" T|B?"   V 
Aj)   T||"|" T| B|" T|B}B?" 
|""At AqAtr AvAq Avrr6 
   B "At AqAtr B8 B(Aqrr6    B" |"  T|""At AqAtr AvAq Avrr6    B "At AqAtr B8 B(Aqrr6     T  T|" |""At AqAtr AvAq Avrr6 
   B "At AqAtr B8 B(Aqrr6     T Bp ||""At AqAtr AvAq Avrr6    B " At  AqAtr B8 B(Aqrr6   
A j$ 
~   ) " |"B|"PB}"   V )"B|" T| B}" T|B}B?"  )"B B?|" T|B?"  )"B B?"|" T| B|" T|B}B?"  B?| T|" |">    B >   B" |"  V|">   B >
    T  T|" |">   B >    T Bp ||">   B >

  A  Aqk" (
" (
sq s6
   (" (s q s6   (" (s q s6   (" (s q s6   (
" (
s q s6
   (" (s q s6   (" (s q s6   ( "  ( s q  s6 

     
~   ( "
 ( j"
A ( "
}"B 
 5
 5
| 5 5| 5 5| 5 5| 5
 5
| 5 5| 5 5 
 
K||"B |"B |"B |"B |"B |"	B |"
BAĈ ( "} 	BA ( "
} BA ( "
} BA ( "} BA ( "} BA ( "} BA ( "} B?|"B?|"B?|"B?|"B?|"B?|"B?|"	B? 
B |B "q|"
>     q B| 
B |">    q B| B |">    q B| B |">
    q B| B |">    
q B| B |">    
q B| B |">   B  	|  qj6

~AĈ ( !
A ( !
A ( !
A ( !A ( !A ( !A ( !   5  5 }"B 5
 5
} 5 5} 5 5} 5 5} 5
 5
} 5 5} 5 B? 5}|"B?|"B?|"B?|"B?|"B?|"B?|"	B "A ( q|"
>     q B| 
B |">    q B| B |">    q B| B |">
    q B| B |">    
q B| B |">    
q B| B |">   B  	|  
qj6

   (  "At AqAtr AvAq Avrr6
   ( "At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6   ( 
"At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6
   ( "At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6   ( 
" At  AqAtr  AvAq  Avrr6 

   ( " (    Aj( (  
# A0k"$ A!@ A A
 @  ( @   6
 A6 Ả 6 B7
  A
jB7(  A(j6 ( ( AjE


 A܉ A

 A A!
 A0j$  
  ( !# A0k" $ @@@@A ( Ak" AOAk 
 A A&

-- Chunk 106 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15751-15900

   6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A%

   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  
~  ( !# A@j" $   A 6
   6  A j  A
j@@@  ( E@@  ($E
 AF
 Aj!  A j  A
j  ( E
 



  A 6   6  A 6
 (! (!  A j  A
j@  ( E@  A
jB!@  ($"E
  (Aj"E@Aȃ  
  ((!   6   6
  A6$  A 6   B7,   78    A8j6(    A j
  K@ A A (
 

  A j  A
j  ( E
 



  A@k$  

AȆ  
    )$78A A
  A8jAԄ A  

  ( !# A0k" $ @@@@@@@@@@@@@@@@@@@@@@@ -  Ak	



 
 A A

 A A

 A A


 A A


 A A

 A A

 A A

 A A


 A A


 Aō A


 A͍ A


 AЍ A



 Aݍ A


 A A

	
 A A

 A A	

 A A

 A A

 A A


 A A	

 - !   - :   A 6  B7    AjB7   A6
   AtAЎ jB7(    A j6 ( (  Aj

 - !   - :   A 6  B7    AjB7   A6
   AtAЎ jB7(    A j6 ( (  Aj

 - !   - :   Aď 6  B7    AjB7   A6
   AtAЎ jB7(    A j6 ( (  Aj
!  A0j$  
(    ( -  At" A j(   A j( 

   (  

   (  
	    

     

~# A k"$ @@@@@@@@@@@@@@@@@@@@@@@@  -  Ak	



 
 (A A ((
 

 (A A ((
 

 (A A ((
 

   Aj6L   Aj6  A60 A 6, B78 B" A j7   A j7  Aj64 ( ( A,j

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

 (A A
 ((
 

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

 (A A
 ((
 

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

-- Chunk 107 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:15901-16050

 (A A ((
 


 (Ař A ((
 


 (Aڙ A ((
 


 (A A
 ((
 


   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j
	
 (A A ((
 

 (A A/ ((
 

 (Aܚ A ((
 

 (A A ((
 

   Aj6L  A jB7  A6
 A6
 A 6 A6 A: H A6D B 7< B 74 A6,  A,j6  A j6 ( ( Aj

   Aj6L   Aj6  A60 A 6, B78 B" A j7   A j7  Aj64 ( ( A,j

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

   Aj6L@ ("A A ("(
 
 @  - AF@B!

   Aj6  A60 A 6, B78 B" A j7  Aj64   A,j

 A60 A 6, B78   A j7  Aj64   A,j

A
! A j$  
Y# A k"$  A6 A 6  B7
   B7  Aj6 ( ( !  A j$   
  ( !# A0k" $ @@@@@@@@@@ -  Ak		 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj
	
 A A


 A A


 A֝ A!

 A A

 A A

 A A-

 A̞ A'

 A A(

   Aj6
  A6  Ağ 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  

   (  
#  Aԟ A   ( -  " AA  
   ( " (   Aj(  

   Aq
  A A

!   A 6
   6   6  A 6 
[@ E@A!

 A N@A -  A! A"

   
   !   6   6   6 
 A 
 
_ ( "Aq@     A~q  
  ("Aj6 A N@   6
   6   6  Aģ 6 
 
@@@  M@  k" j" I
A -  A
A"E
 A6  6  6    ( "  F"6  @   6
   6   6  Aģ 6 
  ("Aj6 A H
   6
   6   6  Aģ 6  A
A
Aԣ  
Aԣ  
AA
 
 
q@ ( "Aq@ A~q" K
  k" j" O@   !   6   6   6 
AȢ  
     
AȢ  
# Ak"$ A!  ("A  AG6@@@ AF@ (! ( ! A
A   

 @A ! A H
A -  A! A"E

     ("Ak6 ! AG
  Aj( "A H
 (  A A
A
   6   6   6  Aj$ 
   
A A+ AjA A  
# Ak"$ @@@@@  ( " Aq@  A~q"  K
    k"j" I
 A H
   A

    ("Ak6 AG
   Aj( "A H
  (  A  A
A
 Aj$ 
Aآ  
Aآ  
A A+ AjA A  

-- Chunk 108 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16051-16200
A A+ AjA A  
\ ( "Aq@       
  ("Aj6 A N@   6
   6   6  Aģ 6 
 
l@ ( "Aq@  K
  k" j" O@   !   6   6   6 
AȢ  
     
AȢ  
# Ak"$ @@@@@  ( " Aq@   K
    k"j" I
 A H
   A

    ("Ak6 AG
   Aj( "A H
  (  A  A
A
 Aj$ 
Aآ  
Aآ  
A A+ AjA A  
A A+ AjA A  
 A!  ( " Aq   (AF

C ( " ("Aj6 A H@ 
   6
   6   6  Aģ 6 
    (   

   ( (AF
p # Ak"$   ( "   ("Ak6@ AF@  Aj( "A H
  (  A  A
A
 Aj$ 
A A+ AjA A  
C ( " ("Aj6 A H@ 
   6
   6   6  A 6 
A!@@ ( "(AG@ @A ! A H
A -  A! A"E

     ("Ak6 ! AG
 ( "@ ( A
 AA !

 A 6 (! ( ! B7   ("Ak6 AF@ ( "@ ( A
 AA
   
   6   6   6 
   
=   ( "   ("Ak6 AF@  ( "@  ( A
  AA

 A AA  
m~# A0k"$   6   6  A6
 Aا 6 B7 B" 7(   Aj7   A j6 AjA  
r An!@ A{K@A !

 At!  Alk"E@A!

 E@A!AA AF r!

 A|G! Aj!
   6   6 
)~  )!  )!  )p!  )H!  ) !  )!  )!  )h!  )@!  )!	  )!  )!  )`!  )8!
  )!  )!  )!  )X!  )0!
  )!  )!
  )x!
  )P!
  )(!
  ) !A~!*@ 
  
 
 
"  
   "B" 
!(  	    " B"!)  B"
      "B "B7"   
   " B"B>" B!   B" 
B)"!  B'""B!  B
"#  B8"$  B"B!  B"% #  
B$"&B!
  
B"  
B"
  B"'B!  B"  B"B 
!  B="
  B"  	B
"	B!  B-"
 	 
B!  
B"
 
 
B!
 
 
B !
 	 
 B!
  B"  " )B"B!	  B+"  B! (B,"  B! *A j)   B !  
B '"!
 " B  !
 &  #B!   B! 
 !B "! ' B ! % $B ! !   
B!  B "! $ & %B"! *Aj"*
 
   
7   
7x   7P   
7(   7    7   7   7X   
70   7   7   7   7`   
78   7   7   7   7h   7@   	7   7   7   7p   7H   7 

   A A" A;  A6
@@@@@@@@@  - E@  ("  ("I
  k" K
  Aj

  A :     A 6  (" K
  Aj
!	 !@@@@  I@  A  
 AK
 A k"M@  k I
@ E
   j!   j! AO@ A|q!@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! Ak"
 

 Aq"E
 @  -   -  s:   Aj! Aj! Ak"
 

     j"K
A !  k" 	( "I



  A  
A A(AĶ  
 AA  
A  
 AK

 !

 AA  
  I
  j!  k!

-- Chunk 109 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16201-16350
A k" I
  I
@ E
    j! Aq! AO@ A|q!@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! Ak"
 

 E
 @  -   -  s:   Aj! Aj! Ak"
 

    j6
  A  
  A  
A A(AĶ  
A  
A !# Ak"$  Aj  A@@@@@@@@@ - E@ A: @ (" AM@  AG
AA A  
  AA  
 (! Aj  j"   -   - s:   @ Ak" AM@  AG
AA A  
  AA  
AԶ  
 ("  ("I
   k" A K
 AK


   Aj" j" -  As:     A 6 (" A M
A !

 AM@A !

 AA  
 AA  
A  
@@  A k"K@  !

  Aj" j  ! A   k" ("I@  !

@@  A M@ AO@A!

 A   k"M
  A  
  A AԷ  
   j Aj"       j"M@ !   k" ("I



Aķ  
  A  
 A K
A  k!A !
A k"  I
  M
  A  
 A A  
  j Aj j  Aj$ 
   A  

    ( -  AtA j( A
  A A
i# A0k"$    ( 6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj!  A0j$   
m# A0k"$   ( !  A6
 A 6 B7  A,jB7    6,  A j6 ( ( Aj!  A0j$   
# A@j" $   A 6  B7
  A: 8  A 6(  A 64  A 60  A 6   A 6    A
j6,# A k"$ A!@  Aj"A A

  (!# A0k"$  A6 A 6  B7
  A
jB7(  AjB7   B%7  Aj6 ( ( ! A0j$  
  Aj ( " (A
j"(   )BŹQ@A!  )Bͅ Q

   (  A ! ) BċfR
 )Bԯ R
A! Aj
!  j( ! ( ! A AE@A !   E

A!
 A j$  E@  (
!  (!    ("6    6
   6   @  A
  A@k$ 
Aй A7  A?jA AԺ  
o# A k"$ @ @@ Aj   ("@ AxF
 (
 A
 ("@ ( A
 Ak"
 

A !
 A j$  
# A@j"$  ( "@  (6  ( 6  (6
 A(j" A
j A j A0j( 6   )(7 (4! (8! (<!  Aj (<! (8! (4! (("	@ (, 	A
@ E@  Ax6  @  A
 E
  A

   6   6   6
   6   6   6 
 A
A A@k$ 
 A 68 A6, A 6( B70 A(jA  
@@ E
   ( !  - @A ! @ "E
 (! ( ! A
A @ AxF
  A
   Aj" G
 


A ! @ "E
 (! ( ! A
A @ AxF
  A
   Aj" G
 

A 
   k
	   B 7 
  A A
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6

-- Chunk 110 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16351-16500
 Aj$ A 
@# A k" $ @@A ( Aq@A ( 

A ( 
A ( !A A 6 A ( !A A6 A A 6 @ E
  ( "@   
 ("E
    (
  A j$ 

  A 6  A6
  A 6  B7  AjA  
 

l # Ak"$   6
  6  6@ Aj"E@Ax!

   (6   ( 6 (! A
A
   6  Aj$ 
{ # A0k" $  E@  A 6
  A6  A 6
  B7  A
jA  
   6,   6(   6$   6   6   6
  A$j  A
j  A0j$ 
. # Ak" $    6
   6   6  Aj  Aj$ 
# A k"$     6
  6  6A 
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@  6   A 6   6  A j$ 
AA 
# A k"$     6
  6  6A 
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@ A :   6   A 6   6  A j$ 
AA 
# A k"$     6
  6  6A 
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@ A:   6   A 6   6  A j$ 
AA 
# A k"$  ( !@@ E
 @ "E
 ( "E
 ("@  A
 A
A Ak"
 

@ - E@ 

 
"E@Ax!

   (6   ( 6 (! A
A
   6  A j$ 
 A 6 A6
 A 6 B7 AjA  
^ ( ! - E@ 

 
"E@  Ax6 
   (6   ( 6 (! A
A   6 
# A k"$ @@ E
  ( !@ "E
 ( "E
 ("@  A
 A
A Ak"
 

    A j$ 
 A 6 A6
 A 6 B7 AjA  
# A@j"$ @@@@@@@@ AM@  6  6
  6 Aj"
 
A!

A -  A A"E
A -   AjA )  7   AjA )  7   AjA )  7   A )  7  AA"E
  A 6   6  A 6
  A 6   6  A:   A6 

A -   A"E

   !   6
   6   6  A
:  

 (! ( ! (! A
A  6
  6  6 A6$ A 6  B7,  AjB78  A8j6(  A
j A jA -  AA"E
  A 6   6  A:   A6  (" E
  (  A
 A@k$ 
AA  
AA 
A  
AA 
# A k"$ @@@@@@@ AM@  6  6  6
A -  A A"E
 B 7
  6 A
j Aj	"
   ( 6
   (6   (
6  A
:  

A -  A$A"E
A -   A jA (  6   AjA )  7   AjA )  7   AjA )  7   A )  7  AA"E
  A$6   6  A$6
  A 6   6  A:   A6 

 (! ( ! (! A
A  6,  6(  6$ A6< A 68 B7D  A$jB70  A0j6@  A
j A8jA -  AA"E
  A 6   6  A:   A6  ($" @ ((  A
 (" E
 (
"E
    A
 A j$ 
AA  
AA$ 
AA 
AA 
 A 6H A6< A 68 B7@ A8jA  
# A k"$   ("6  6  (6
A -  @@A A"@ B 7
  6@ A
j Aj
"E@   ( 6
   (6   (
6  A
:  

 (! ( ! (! A
A  6,  6(  6$ A6< A 68 B7D  A$jB70  A0j6@  A
j A8jA -  AA"E

-- Chunk 111 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16501-16650
  A 6   6  A:   A6  ($" @ ((  A
 (" E
 (
"E
    A
 A j$ 
AA  
AA 
 A 6H A6< A 68 B7@ A8jA  
 # A@j"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j
"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, A 6( B70 A(jA  
A!

A!

A!
   :   A@k$ 
AA 
~# A0k"$   6  6  6   6  6  6
A !@@@@@@@@  A
j Aq
"B "   
A -  AA"E
  A 6
   6   6 A6 A!

 "E
 (! ( ! (!A! A
A   6
   6   6

 A 6( A6
 A 6 B7  AjA  
A!

A!
   6  A0j$ 
AA 
 A 6( A6
 A 6 B7  AjA  
 # A@j"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j
"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, A 6( B70 A(jA  
 A 68 A6, A 6( B70 A(jA  
A!

A!
   :   A@k$ 
AA 
 # A k"$      (6  ( 6  (6
 Aj    ( 6,  (6(  (
6$ A0j    (86D  (06@  (46<A!@@@@@@@@@@ A
j A$j A<j"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 6X A6L A 6H B7P A jA  
 A 6X A6L A 6H B7P A jA  
A!

A!
   :   (<" E
 (@"@   A
 ($" E
 (("@   A
 (
" E
 ("@   A
 A j$ 
AA 
 A 6X A6L A 6H B7P A jA  
. # Ak" $    6
   6   6  Aj  Aj$ 
{~# Ak"$   6  6  6
@ A
j"@ (! (!
 ( !
 A
A A@k!# A k"
$  
A: 
 
A 6 
 
6 
 
6  
A@k!# A0k"$  Aj 
Ax!@@@ - @@ - 	"A"G@ A F
 B7 

 Aj 
@ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 

-- Chunk 112 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16651-16800
 Aj!# A0k"$  Aj" 
 - !@@@ ("AxF@  
 ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!  /
; 	 A
j Aj-  :    6
  :   6 A6 

@ @ Aj!# A k"
$  
A@k!A !# A0k"$  Aj 
Ax!@@@@@@ - @@ - 	"A"G@ A F
 B7 

 Aj!# A k"$   
@@Ax -  E
 Ax - A"G
  
 Aj 
 (
!	 (! (!@ (E@@ AxF@ Aj  	

 Aj  	 E
   A
 - ! (!

  	6
  6
Ax! AxF
 
!  ( 	6  Aj A
j(  6  

  
6
  6   :  A j$ @ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 
 Aj!# Ak"$  Aj!# A k"$   
@@ -  E@Ax!

 - A"G@Ax!

 
 Aj 
 (
!	 (! (!@ (E@@ AxF@ Aj  	

 Aj  	 E
   A
 - ! (!

  	6
  6
 AxG
  Aj 
 (AxF@  
6  :  Ax6 

  )7  Aj Aj( 6 

  ( 	6  Aj A
j(  6    :   6 
 A j$  - !@@@@@@@ ("AxF@ (
! Ak
  / 	; 	 A
j A
j-  :    (
6
  :   6 A6 

 !# Ak"$  A@k @@ - @E@Ax!

 - AA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!




  A8j @@@@@@@ - 8E@Ax!Ax!	Ax!

Ax! - 9"A"G@Ax!Ax!	 A G


 A0j Ax! - 0E@Ax!Ax!	

 - 1A"G@Ax!Ax!	

  A j  (|!	 (x! (t!@ (p@  	6  6  6

@ AxG@ Aj  	 E
  A

 Aj  	
 - ! (!
@ AxG@Ax!	

 A j!@@@@@@@ AqAk 
 Aj  (AxG@Ax!	

 A j  (p@Ax!	

 (|! (x!
 (t!Ax

 Aj  (AxG
 A j  (p
 (|! (x!
 (t

 A j @ (pAxG@ Aj A j( 6   )p7

 Aj 
 (AxG@Ax!	

Ax
!	 A(j  - (E@Ax!

 - )!@@@@@@@@ Aq"A,G@Ax! A G
 	AxF
 AxG
 A jA A  (|6T  )t7L 	E
 
 	A

  A j  -  E@Ax!

-- Chunk 113 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16801-16950

 - !"A"G@ A G
Ax!

 Aj  - E@Ax! - !

 - A"G@Ax! - !

  A j  (|! (x! (t!@ (pE@ AxF@ Aj   (!

 Aj   @  A
 (!

  6  6  6
 - ! AxF



  6` - 
Aj"Aq G

  : 
 )`!
 A j  (p"AxG@ )t!
 	@ 
 	A
 E
 
 A

 Aj  - E@ B7  	@ 
 	A
 E
 
 A

 - 	A F
 B7  	@ 
 	A
 E
 
 A

 Ak
   
7  
6  6  6
  
6  	6 A 6 

 AxG@ A jArA A

 Aj  (AxG
 A j  (p
 (|! (x!
 (t!

 	AxG@ A jArA A


 Aj  (AxG
 A j  (p
 (|! (x!
 (t!	

 A j @ (pAxF@ Aj 

 Aj A j( 6   )p7
 (AxG

 Aj  - ! - 
 
Ax!

  )7  Aj Aj( 6 
  (|6T  )t7L

  )7  Aj Aj( 6 
  (|6T  )t7LAx!	

 !  Aj"(  6h  Aj(  6 k
 A j ( k6    : P  6L  (h6 Q

 A j Aj( 6   )7L

 A jArA AAx!	
 AxF

 E
  
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
 )P!
 (L!
  
7  6 A6 
 Aj$ 

 !# Ak"$  A@k @@ - @E@Ax!

 - AA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!


	
  A8j @@@@@@@ - 8E@Ax!Ax!	Ax!

Ax! - 9"A"G@Ax!Ax!	 A G


 A0j Ax! - 0E@Ax!Ax!	

 - 1A"G@Ax!Ax!	

  A j  (|!	 (x! (t!@ (p@  	6  6  6

@ AxG@ Aj  	 E
  A

 Aj  	
 - ! (!
@ AxG@Ax!	

 A j!@@@@@@@ AqAk 
 Aj  (AxG@Ax!	

 A j  (p@Ax!	

 (|! (x!
 (t!Ax

 Aj  (AxG
 A j  (p
 (|! (x!
 (t

 A j @ (pAxG@ Aj A j( 6   )p7

 Aj 
 (AxG@Ax!	


-- Chunk 114 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:16951-17100
Ax
!	 A(j  - (E@Ax!

 - )!@@@@@@@@ Aq"A,G@Ax! A G
 	AxF
 AxG
 A jA A  (|6T  )t7L 	E
 
 	A

  A j  -  E@Ax!

 - !"A"G@ A G
Ax!

 Aj  - E@Ax! - !

 - A"G@Ax! - !

  A j  (|! (x! (t!@ (pE@ AxF@ Aj   (!

 Aj   @  A
 (!

  6  6  6
 - ! AxF



  6` - 
Aj"Aq G

  : 
 )`!
 A j  (p"AxG@ )t!
 	@ 
 	A
 E
 
 A

 Aj  - E@ B7  	@ 
 	A
 E
 
 A

 - 	A F
 B7  	@ 
 	A
 E
 
 A

 Ak
   
7  
6  6  6
  
6  	6 A6 

 AxG@ A jArA A

 Aj  (AxG
 A j  (p
 (|! (x!
 (t!

 	AxG@ A jArA A


 Aj  (AxG
 A j  (p
 (|! (x!
 (t!	

 A j @ (pAxF@ Aj 

 Aj A j( 6   )p7
 (AxG

 Aj  - ! - 
 
Ax!

  )7  Aj Aj( 6 
  (|6T  )t7L

  )7  Aj Aj( 6 
  (|6T  )t7LAx!	

 !  Aj"(  6h  Aj(  6 k
 A j ( k6    : P  6L  (h6 Q

 A j Aj( 6   )7L

 A jArA AAx!	
 AxF

 E
  
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
	  : 
 )P!
 (L!
  
7  6 A6 
 Aj$ 

 !A !# Ak"$  A8j "@@ - 8E@Ax!

 - 9A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A0j Ax!	Ax!
@@@@@@ - 0E
  - 1"A"G@ A F
Ax!	

 A(j  - (E@Ax!	

 - )A"G@Ax!	

  A j  (l!
 (h! (d!@@ (`E@ AxG@A! 
AF@ (  A (  G!
 E
  A

A! 
AG
 (  A (  G!

 AxG
 !
@@@@ Aq@ A j @ (`AxG@ A j A j( 6   )`7p

 A j 
 (pAxG

-- Chunk 115 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17101-17250


 A j  (pAxG
 A j  (`
 (l! (h! (d!

 A j  -  E
 - !! !@@@ Aq"A,G@Ax!	 A G
 
AxG

	
  Aj  - E@ !Ax!	

@ - "A"G@ A F
 !Ax!	
	
 Aj  - E@Ax!	
	
 - A"G@Ax!	
	
  A j  (l!
 (h! (d! (`E@ AxF@ 
AF (  A (  GA
 A~qr!

 
AF (  A (  GA
 A~qr! E
  A

 AxF@ !

 !

Ax!	

 - 
Aj"Aq G
  : 
 A j  (`"AxG@ )d!
 
E

  
A


   -  E@ B7  
E
  
A

 - A G@ B7  
E
  
A

   6
  6  
6 A6 


@@ AqE@ 
AxF
 A@kArA A


 A j @ (`AxF@ A j 

 A j A j( 6   )`7p
 (pAxG
	

 A j  (pAxG
 A j  (`
 (l! (h! (d!

 Aj  - 	! ! - 
 


 A j" )p7  Aj A j( 6 
  (l6L  )d7D

 !

 !	 Av!
  ; I A j Av:    
6L  : H  	6D

 A@kArA A

 A j A j( 6   )p7D
 
AxF

 
E
   
A
 - 
Aj"Aq G
  : 
 )H!
 (D!
  
7  6 A6 
 Aj$ 

A !	A !# Ak"$  A j  "@@ - HE@Ax!

 - IA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A@k Ax!@@ - @E
  - A!@@@@@ Aq"A,G@ A F
 	AqE
Ax!

 	AqE@Ax!

  A8j  - 8E@Ax!

 - 9!
 Aq"A"G@Ax! A G
Ax!

 A(j  - (E@Ax!

 - )A"G@Ax!

  Aj  (! (! (!	 (E@ 	AxF@ AF A AA GA
 A~qr!

A!
 AF@ A AA G!

 A~q 
r! 	E
  	A

 	AxF@ !


-- Chunk 116 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17251-17400
 Av!
 	! !

  PE@ - 
Aj"Aq G
  : 
 Aj  ("AxG@ )!


 A0j  - 0E@ Ax6

 - 1A G@ Ax6

   7A

 A jArA A

@@ AqE@  P
 A jArA A

 Aj @ (AxF@ A j 

 A j Aj( 6   )7p
 (pAxF
 A j A j( 6   )p7T

 Aj @@ ("	AxF@ A j  -  E@Ax!	

Ax!	@ - !"A-k   
 A1kAqA	O@Ax!	

 A0kB!
 B!  (" (O@ 
!

@ (  j-  A0k"AqA	K@ 
!

  Aj 
B B
 )B R
 )"! B|"
 !T
 (" (I
 
 
!

 )!
  7X  	6T

 B! B !
 Aj A!	 - 	! - 



  
; Y A j 
Av:    6\  : X  6T
 - 
Aj"Aq G
  : 
 )X!
 (T!
  
7  6
A
6  Aj$ 

A !A !# A k"$  A(j  "@@ - (E@Ax!

 - )A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A j Ax!@ -  E
  - !!A!	@@@@ Aq"A,G@ A G@ 	
Ax!

 A~q

 	@Ax!

  Aj  - E@Ax!

 - !
 Aq"	A"G@Ax! 	A G
Ax!

 Aj  - E@Ax!

 - A"G@Ax!

  A@k  (H! (D!	@ (@E@ 	AxrAxF
  	A

 	AxF
  (L! 	! !

A !	 A~qAr
"AqE@ - 
Aj"Aq G

  : 
 A@k  (@"AxF
 / E A j-  Atr! (H! - D!

 A@k @ (@AxF@ A0j 

 A8j A j( 6   )@70
 (0"AxF@ Aj  - 	! - 



 (8! - 4! ! / 5 - 7Atr

   -  E@ Ax6

 - A G@ Ax6

 A


 Av
! - 
Aj"	Aq 	G
  	: 

  ; 	  6
  :   6 A
j Av:  
A
6  A j$ 

 !A !# Ak"$  A8j "@@ - 8E@Ax!

 - 9A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!




-- Chunk 117 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17401-17550
  A0j Ax!	Ax!
@@@@@@ - 0E
  - 1"A"G@ A F
Ax!	

 A(j  - (E@Ax!	

 - )A"G@Ax!	

  A j  (l!
 (h! (d!@@ (`E@ AxG@A! 
AF@ (  A (  G!
 E
  A

A! 
AG
 (  A (  G!

 AxG
 !
@@@@ Aq@ A j @ (`AxG@ A j A j( 6   )`7p

 A j 
 (pAxG


 A j  (pAxG
 A j  (`
 (l! (h! (d!

 A j  -  E
 - !! !@@@ Aq"A,G@Ax!	 A G
 
AxG

	
  Aj  - E@ !Ax!	

@ - "A"G@ A F
 !Ax!	
	
 Aj  - E@Ax!	
	
 - A"G@Ax!	
	
  A j  (l!
 (h! (d! (`E@ AxF@ 
AF (  A (  GA
 A~qr!

 
AF (  A (  GA
 A~qr! E
  A

 AxF@ !

 !

Ax!	

 - 
Aj"Aq G
  : 
 A j  (`"AxG@ )d!
 
E

  
A


   -  E@ B7  
E
  
A

 - A G@ B7  
E
  
A

   6
  6  
6 A6 


@@ AqE@ 
AxF
 A@kArA A


 A j @ (`AxF@ A j 

 A j A j( 6   )`7p
 (pAxG
	

 A j  (pAxG
 A j  (`
 (l! (h! (d!

 Aj  - 	! ! - 
 


 A j" )p7  Aj A j( 6 
  (l6L  )d7D

 !

 !	 Av!
  ; I A j Av:    
6L  : H  	6D

 A@kArA A

 A j A j( 6   )p7D
 
AxF

 
E
   
A
 - 
Aj"Aq G
  : 
 )H!
 (D!
  
7  6 A6 
 Aj$ 
 Aj$  
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7 

A  
 A0j$ 

A  
A  
 
A8j" 
A j( 6  
 
)D70@@ 

-- Chunk 118 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17551-17700
(@"AG@ 
A(j 
A j) 7  
A
j ( 6  
 
)P7  
 
)07 
 6 
Aj 
 
- 
 B7 A!@@   
A! 
("E
  
( A
 
Aj j"( "E
 ( A

  
)07 A6  A
j ( 6 

 
- 	A G@ B7 A!@@   
A! 
("E
  
( A
 
Aj j"( "E
 ( A

 
 Aj 
A(j) 7  Aj 
A j) 7  Aj 
Aj) 7   
)7 
 
A j$  (AF
  )7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

 Aj!# A k"$  Aj!# A k"$  Aj 
Ax!@@@ - @@ - 	"A"G@ A F
 B7 

 Aj 
@ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 
 Aj!	# A k"$  Aj"
 
 - !@@@ ("AxF@ 
 
 ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!
 	 /
; 	A!
 	A
j Aj-  :   	 
6
 	 :  	 6

 @ Aj 
 (
!
 (!
 (!A!
@@ (E@ Aj 
 - E@Ax! E


 - 	A G@Ax! 


 
A!

 !

 
 A
 	 
6
 	 
6 	 6

 Aj 
 (
!
 (!
 (!A!
@@ (E@  
 -  E@Ax! E


 - A G@Ax! 


 
A !

 !

 
 A
 	 
6
 	 
6 	 6
 	 
6  A j$  
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7 

A  
 A j$  (
! (! (!@@ ("AG@ Aj 
 - 
 B7  E
  A

  6
  6  6 A6 

-- Chunk 119 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17701-17850

 - 	A G@ B7  E
  A

 
  6
  6  6  6 
 A j$  (AG@  )7 A
j Aj) 7  A6 

  )7 A
j A
j( 6  A6 

  )7 A6  A
j A
j( 6 
 A0j$  
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7 

A  
 A0j$  
A8j" 
A j( 6  
 
)D70@ 
(@"AG@ 
A(j" 
A j) 7  
A
j ( 6  
 
)P7  
 
)07 
 6  
 
(@AxF@  
)7  Aj ) 7  Aj 
A j) 7  Aj 
Aj) 7 

  
)@7A! A
j 
A j( 6  A6 @@@   
A! 
("E
 
( A

A!
 
Aj j"( "E
 ( A

  
)07 A6  A
j ( 6 
 
A j$ @@@ (@AG@ A8j A j) 7  A0j A j) 7  A(j A j) 7   )@7 

 Aj A j( 6   )D7x Aj! A j!# A@j"$ A -  @@@AA"@ A A!	 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj
  )
7 A j Aj( 6 A -  AA"E
 A6  	6 A6
 A6  A 6  6 A:   ( "AxH ErE@ ( A
 A@k$ 

AA 
Aй A7 A?jA AԺ  
AA 
 - A
G

   ) 7   Aj A8j) 7   Aj A0j) 7   Aj A(j) 7  E
 
 A

 A j A8j) 7  A j A0j) 7  A j A(j) 7  A j A j) 7   )7@ A 6t B7l A:  A 6 A 6 A 6 A 6 A 6x  A j6 A@k A j
   )l7  A
j A j( 6    
6   
6   6  A6 @@@@@@@@@@@@@ - @
	


 
 (T!  (X"( "@    
 ("E

    (


@ - LA
I
  (T!  (X"( "@    
 ("E
     (
 (D!  (H"( "@    
 ("E

    (


@ (LAG
  (T!  (X"( "@    
 ("E
     (
 (D!  (H"( "@    
 ("E
    (


 (L" @ (P  A
 (D!  (H"( "@    
 ("E
	    (
	
 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (X!  (\"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (X" @ (\  A

-- Chunk 120 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:17851-18000
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (X" @ (\  A
 (D!  (H"( "@    
 ("E
    (

 (D!  (H"( "@    
 ("E
    (

 (D!  (H"( "@    
 ("E
     (
 Aj$ 
 A 6P A6D A 6@ B7H A@kA  
Aй A7 AjA AԺ  
~# A0k"$ @@@@@@@@@@@@@  -  Ak
	


 
 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj
	
   Aj6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

   A
j6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

   A
j6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

 A 6 B7  A6   Aj6,  A,jB7   6
 ( ( Aj

 A 6 B7  A6   Aj6,  A,jB7   6
 ( ( Aj

 A A
!  A0j$   

~# A k"$  A0j @ - 0E@  Ax6 

Ax!@@@@@@@@@@@@@@@ - 1"A k# 
 A"k
          
Ax! (" (O
 @ (  j-  "A,F A Fr A Fr
  (" (I
 

   6 


 Aj  - E@  Ax6 


 - 	A"G
  A4j  (<! (8! (4
 AxF@  Ax6 


  Ax6  E

  A


 A j  -  E@  Ax6 


Ax!@ - !A G
  - 
"E
  Ak": 
 AqE@  Ax6 


 A!@@@ Aj  - E@Ax!

~@@ - ""A,G@ A F
 !A ! 
Ax!

  Aj  - E@Ax!

 - !
 AqA F@Ax!

 A4j  (4"AxG
 
B~B

 
B~
"
BPE
 
 - 
Aj"Aq G

  : 
 A4j Ax! (4AxF
   )47   Aj A<j( 6 


 )8!

 - 
Aj"Aq G
   
7   6   : 



   6 

-- Chunk 121 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18001-18150


 A(j  - (E@  Ax6 


 - )A G
 - 
"E
  Ak": 
 AqE@  Ax6 


 # A@j"$  Aj Ax!@ A j"@ - E
  - !A!@@@ "	A,G@ A G@ 
Ax!

 A~q

 @Ax!

  Aj  - E@Ax!

 - !
 A"G@Ax! A G
Ax!

 Aj  - E@Ax!

 - 	A"G@Ax!

  A0j  (8! (4!@ (0E@ AxrAxF
  A

 AxF
  (<!	 ! !

A ! A~qAr
"AqE@ Ax6 

 A0j @ (0AxF@ A j 

 A(j A8j( 6   )07 
 ( "AxF@   - ! -  



 ((!	 - $! ! / % - 'Atr


 Av
";   	6  :   6  Aj Av:  
 A@k$  - 
Aj"Aq G
  : 
 (D"AxG
 A4j  (4AxF@  Ax6 


   )47   Aj A<j( 6 
	
  Ax6 

  Ax6 

   (@6   6   6 

A  
  Ax6 

A  
A  
   )H7   6 

A  
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  B7 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E
  A

  B7 


-- Chunk 122 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18151-18300
   6
   6   6  A6 
 A j$ 
'   ( -  E@ A A
 A A 

   (  
# A0k"$ @@@@  ( Ak 
 A A

 A A

 A A6

 A6
 A 6 B7   Aj6,  A,jB7   A j6 ( ( Aj
!  A0j$   
A @@@  ( -  Ak 
 A A

 A A

 A A$

   (  
# A0k"$ @@@@@@@@@@@  -  Ak
	
 
 A 6 B7 A6
   Aj6,  A,jB7   A j6 ( ( Aj


 A A

	
 A A


 A A

 A A

 A A

 A A6

 A A


 A A

 A 6 B7 A6
   Aj6,  A,jB7   A j6 ( ( Aj

 A6
 A 6 B7   Aj6,  A,jB7   A j6 ( ( Aj
! A0j$  
	    
i# Ak"$   (!  (!  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
# A@j"$ @@@@@@@  ( Ak 
   Aj6 A
j"  (  (  B7  AjB7 A6, A 6( B74  Aj60 ( ( A(j!  (
"AxF Er
 (  A

   Aj6 A
j"  (  (  B7  AjB7 A6, A 6( B74  Aj60 ( ( A(j!  (
"AxF Er
 (  A

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 

 (A A ((
 ! 

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 
 A@k$   
# A0k"$  At!
 !@@@@ @ Aj!	 
! !@ 	( "Aj"
 I
  
j" I
 	Aj!	 ! Ak"
 

@ E@A!

A !	 A H
A -  A!	 A"E

A ! A 6  6  6
    
j!@ ("AO
 ( !
 (
 kAM@ A
j A (! (!
  j At AqAvr;    (Aj"6  (
 kK@ A
j   (!
 (" j 
    j"6 Aj" G
 
 (
 
 kK@ A
j   (! (!
  j    Aj  j6    )
7  A0j$ 
A  
A  
 A 6( A6
 A 6 B7  AjA  
 	  
I# A k"$   E@ A 6 A6
 A 6 B7 AjA  
 A j$   
 @@@@@@@ Ak
 
 A A@ A A
  Ax6   A: 
  Ax6   A: 
 A A

  Ax6   A: 
 A A
  Ax6   A: 
 A AE


 A A
   Ax6   A: 
    A A
  Ax6   A : 
t @@@@@@@ Ak 
 A AE

-- Chunk 123 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18301-18450

  Aj!

  Aj! A AE

 A:  

 A:  

  A : 
  Ax6 
y @@@@@@@ Ak 
 A AE

  Aj!

  Aj! )  B̓۹ Q

 A:  

 A:  

  A : 
  Ax6 
	# A k"$ @  ( AI
 @@  - Ak 
 A6 A 6 B 7  A
j6
 AjA  
  Aj"("@ (!@  A
lj"("@ (A$j!@ Ak( "AxF ErE@ (  A
@ Ak( "	AF
  Ak! 	E@ ( "E
 A
k(  A

 ( "E
  A
k(  AtA
 A,j! Ak"
 

 ( "@ ( A,lA
 Aj" G
 

  ("E
   ( A
lA
 A j$ 
:A -  AA"@ A6   A 6   6 
AA 
   (    ((
  
R# Ak"$    ( " Aj6
 A A	A A
  A A A	 A
jA !  Aj$   
   ( " (  ( 
   A  
f# A0k"$  A6
 A 6 B7   6,  A,jB7   A j6 ( ( Aj!  A0j$   
W# Ak"$   ( " -  E@ A A

   Aj6
 A A A
jA 
!  Aj$   
M# Ak"$    A
j6
 A A
A A  A A A A
jA !  Aj$   
#~# A@j"
$  
Aj" Aq"6   Av A GjAl6 
(!@@@ 
(
"E@A!

 A H
A!
 "E

 
Aj! !
A -  !A -  !@@@@@@@@ AG
  E
  Ak"j-  "A=F
  A j-  AG
  B B !

B!  k"A   M" EAtk"A   M"
Av"Al" K
 
A`q"
 K
 
E
A !@ Aj" K
@@ 	 
j"-  "A j1  "
BQ
  Aj-  "A j1  "BQ@ 	Aj!	

 Aj-  "A j1  "BQ@ 	Aj!	

 Aj-  "A j1  "
BQ@ 	Aj!	

 Aj-  "A j1  "BQ@ 	Aj!	

 Aj-  "A j1  "BQ@ 	Aj!	

 Aj-  "A j1  "
BQ@ 	Aj!	

 Aj-  "A j1  "BR
 	Aj!	
 A6   B 	B 7

  j" B4 
B:" B." 
B( B"" B
"BB BB B(B B8>   Aj  
B B"BB BBB =  A!@@ Aj-  "A j1  "
BQ
 A	! A	j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  "
BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A! Aj-  "A j1  "
BQ
 A! Aj-  "A j1  "BQ
  Aj B4 
B:" B." 
B( B"" B
"BB BB B(B B8>   A
j  
B B"BB BBB =  A!@ Aj-  "A j1  "

-- Chunk 124 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18451-18600
BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "
BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "
BQ
 A! Aj-  "A j1  "BQ
  A
j B4 
B:" B." 
B( B"" B
"BB BB B(B B8>   Aj  
B B"BB BBB =   Aj-  "A j1  "
BR
A!

 A :  A6  A
j  	j"Av<   A	j Av=    At r6 
	
 A6   B  	jB 7

A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "
BQ
A
! A
j-  "A j1  "BQ
A
! A
j-  "A j1  "BQ
A
! A
j-  "A j1  "
BQ
A! Aj-  "A j1  "BQ
 Aj B4 
B:" B." 
B( B"" B
"BB BB B(B B8>   Aj  
B B"BB BBB =   ! 
 	A j"	G
 


A  
 Aj A  
 A :  A6  A
j  	j"Av<   A	j Av=    At r6 

 
Av"Al!@@  M@  
I
@ 
Aq 
Aqk"AO@  j!  k! 
 
j! AkAvAs!	A !A!@  K
  
j" 
I
@@  j"-  "A j-  "AF
  Aj-  "A j-  "AF@ Ar!

 Aj-  "A j-  "AF@ Ar!

 Aj-  "A j-  "AG
 Ar!
 A :  A6  A
j Av<   A	j Av=    At r6 
	
  jAk"Aj At" AtrAv:     At"rAvAq  AtrAvr;   Aj! Aj! 	Aj"	
 

 ! A G!A !A !A !A !A !A !@@@@@@@@@@@@ 
@@@@@@@@@@@  
O@  
F
 
 
j"
-  "A=F
 A j-  "AG
A !

 
 A  
  
j" 
AjF@A!


A! 
- "A=F
  A j-  "AF@A!

A !  
Aj"F@A!

 
Aj! 
- "
A=G
  k!  F

A!@ AF
  
j"-  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 Aj!A! Aj G
 
A!


 
  
j"M
A  
 
A j-  "AF@A! 
!

  F@A! 
!


 
Aj! 
- "A=F@  k!  F
A!@A  
j"-  A=G
 Aj" F
A -  A=G
 Aj" F
A -  A=G
 Aj" F
 A|F
A -  A=G
 Aj!A! Aj G

-- Chunk 125 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18601-18750
 


 A j-  "AF@A! !

  F@A! !


 -  "A=F@  k!A! 
Aj F
A!@ Aj"E
A  
j"
-  A=G
 
Aj" F
 Aj"
E
A -  A=G
 Aj" F
 
Aj"E
A -  A=G
 Ak"
Aj 
O@ Aj!A! Aj G



A  
A! A j-  AG

  
j" 
I
 A6   B  B7

AAA  
A  
A!
A! !

A!
A! 
!

A
 
j"M
	A  
A!A!

 
A !A !
@@@ AqAk 
  j" I
 AqE

	
 

@@ A At Atr" At Atr"r" Al"
Aqt@ AI
  jA   I"! E
  Av:   AF
 Aj! AG
 !

  
j" 
I
 @ A6   AkB  BB7


A  
  jA   I!  k"A   M"AF
  Av:   A~F
  Aj! 
A8qAF@ !

  jA   I! AF
  Av:   A}F
  Aj!

A  
 
  
j"M@ A6   B B7

A  
A  
A  
  6 A:  A6 

@  
 j" 
I
AA 
!  6  6  6 

A  
A  
 A6   B B 7

 A6  B7


A  
  A  
 
 A  
  A  
 
 A  
  <  A6   B > Aj "Av:    Av; 
 
(AG@ 
A
j( !   6   6       K6

 
1 "BR@ 
Aj1  ! 
A
j3  !    
5 "B>  Ax6     B0 B B> E
  A

 
A6$ 
A 6  
B7, 
B78 
 
A8j6( 
A jA  
 
  
 
A@k$ 
~
# A k"	$  	 A -  "@@ 	( @@ 	("E@A!


 A H
A! "
E

 !A !@ AI
  Ak"A   M!@  AjO@@ 

-- Chunk 126 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18751-18900
 
A j"M@  O
  A  
A  
 
 
j"  j"
)  "B8"B:A j-  :   Aj BB"B"A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB "B.A?qA j-  :   Aj B(A?qA j-  :   Aj BB BB B(B B8""
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj  B
A?qA j-  :   Aj 
Aj)  "B8"B:A j-  :   A	j  BB("B4A?qA j-  :   A
j  BB" BB"B.A?qA j-  :   A
j B(A?qA j-  :   A
j B"A j-  :   A
j  BB BB B(B B8"B
A?qA j-  :   Aj "
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj 
A
j)  "B8"B:A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB" BB"B.A?qA j-  :   Aj B(A?qA j-  :   Aj B"A j-  :   Aj BB BB B(B B8""
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj  B
A?qA j-  :   Aj 
Aj)  "B8"B:A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB" BB"B.A?qA j-  :   Aj B(A?qA j-  :   A
j B"A j-  :   A
j  BB BB B(B B8"B
A?qA j-  :   A
j "
AvA?qA j-  :   Aj 
AvA?qA j-  :   
A j!
  Aj"O



 Aj A  
@  Ap"
k"
 M@ !

@  Aj"
K@A  
  
O@@  Aj"M@  M
  A  
A  
  
j"  j"-  "AvA j-  :   Aj Aj-  "A?qA j-  :   Aj Aj-  "At AvrA?qA j-  :   Aj At AvrA?qA j-  :   Aj! 
" 
O



 
 A  
@@@@@@@@@@ 
Ak 	
  O
  
j 
 j-  "AqAvA j-  :   
Aj"E
  M
 Aj" O
  
j At  j-  "AvrA?qA j-  :   Aj" O
 AtA<q!A!

  O
A!  
j 
 j-  "AvA j-  :    Aj"K@ AtA0q!

  A  
  A  
A  
  A  
  A  
  A  
  A  
  
j A j-  :    j!
 E@A !

  M@  
j!  k!@@A  kAq"E
  E
 A=:   AF
  AF
 A=:  AF
  AF
 A=: 
 

  A  
!

  A  
A A-A  
   
   jK@A A*A  
 	A
j" 
  	(
@ 	 	)"B >
 	 > 	 6 	 
6 	 6
A A
 A A  
   6   
6   6  	A j$ 
 
v@@@  E@A!

  A H
A -  A!  A"E

A -  A
A"E
 A 6   6  6  
    
AA
 
# A k"$ @  @  ( "E
  ("@  A
  A
A A j$ 
 A 6 A6
 A 6 B7 AjA  
 A 6 A6
 A 6 B7 AjA  
a# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
a# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
# A@j"$   6
  6@ E@ A6 A 6 B7


 A6 A 6 B7
  6<  68  A8jB70
  AjB7(  A(j6   Aj A@k$ 
  A A
~# A k"$  Aj  @@@ ("AxF@  )7 A 6$ B7
 A: H A 68 A 6D A 6@ A 60 A 6(  A
j6< Aj A(j
A -   ) ! (

-- Chunk 127 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:18901-19050
!AA"
AA 
   )7   6  A
:  

 A6    7   6
  A 6   6  A:  
 A j$ 
Aй A7 A jA AԺ  
    ( (
[@ E@A!

 A N@A -  A! A"

   
   !   6   6   6 
~# A k"$   6
  6 A j  @@@ (P"AxF@  )T7` A 6@ B78 A: 0 A 6  A 6, A 6( A 6 A 6  A8j6$ A j Aj
A -   )<! (8!AA"
AA 
 (T!  A
j (X"6   A 6   6  6   )7  6


 A6   7   6
 A 6  6 A:  A6< A 68 B7D  AjB7P  A j6@  Aj A8j  A6  Aja

Aй A7 A jA AԺ  
 A j$ 
# A k"$ @@ ("AK@@@ Ak"  ("j(  "At AqAtr AvAq Avrr"O@ ( !  G
 ! !A !A!

A  
   k"I
@  k"E@A!

A ! A H
A -  A! A"E

   j  !
   6   6
   6   6   6       I6 A j$ 
 A 6 A6
 A 6 B7 AjA  
# A0k" $    6   6   A6
  A 6  B7    AjB7(    B7     A j6  AjA  
   
# Ak"$ @@@@ E@

 Aj! !@  ( j" I
 Aj! ! Ak"
 
 AK

  Atj" I
@@ E@A!

A ! A H
A -  A! A"E

A ! A 6
  6  6 @  Atj!@ ("AvAq Avr!	 ( !  (" kK@ Aj   (! (
! (!
  j     j"6
  kAM@ Aj A (
! (!
  j 	 At AqAtrr6    (
Aj"6
 Aj" G
 

   )7   Aj A
j( 6  Aj$ 
   
A  
A  
A  
:A -  AA"@  A 6   6  A6 
AA 
# Ak"$  A ;
   Aq""A
n"A
lkA0r: A A
I
   A
pA0r: 
A A M
   A nA0r: 
A 
"As" (  ("kK@    (!
 ( j A
j j   Ax6    j6 Aj$ 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A!@ B
Z@@ E
 Ak" Ajj B
"B
A0r:   B T! ! E
 

A k" (  ("kK@    (!
 ( j Aj j   Ax6    j6 A j$ 
A  

# Ak"$  (" ( F@ 
 ( jA":    Aj"6 A 6
@ E
   j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
! @@@@@@@@@ Ak 
 A G@ A G



 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA":  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

@ A O@ AO@ AI
 AI@  A?qAr:   A

-- Chunk 128 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19051-19200
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 (  F@ 
 ( j :   Aj

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA0:    Aj"6 (  F@ 
 ( jA0:    Aj"6 Aq"A
I!	 (  F@ 
 ( j AqAvA0r:    Aj"6 (  F@ 
 ( j A0r A7j 	:   Aj

  A?qAr: 
  AvAr: 
A
!  (  kK    ( 
 (j A
j  ( j

 Aj
"6  G
 

 (  F@ 
 ( jA":    Ax6   Aj6 Aj$ 
M (  ("kAM@  A (!
  Ax6   Aj6 ( jA6  

      
H  (" ( F@ 
 ( jA :    A:    6  Ax6   Aj6
J (" ( F@ 
 ( jA :    A:    6  Ax6   Aj6
# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj   @ (AxF@ (" ( F@ 
 ( jA::    Aj"6 (  F@ 
 ( jA :    A:    6  Ax6   Aj6

   )7   Aj A
j( 6 
 Aj$ 
   ( ( " Aj(   Aj(  
# A0k"$  @@@@@@@@@@@@@@@@@@@@@@A  ( Axs" AOAk	



 
 A 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A 6(A7

 A 6(A'


 A 6(A8


 A 6(A8


 A 6(A.


 A 6(A
	
 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

 A 6(A8

   (6(  (
6, A6
 A 6 B7  A(jB
7   A j6 ( ( Aj!  A0j$   
"  (Aj"@   6
A  
x   ("  ("I@ ( !A!@   j-  A	k"AKA tAqErE@   Aj" 6   I!   G


Ax 

Ax
6 
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
@@ A,G@ A G@  Ax6 
 Aj"E
  Ax6   6
 Aj"E
  6Ax!    IA!@  j-  "A	k"AKA tAqErE@  Aj"6  I!  G


AxAxAx  A G 
6 
A  
A  
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
@ A,G@ A G@  Ax6 
 Aj"E
  Ax6   6
  Ax6 
A  
 (" ("  K! ( !@ E@  Ax6 
  G@ -  !  Aj"6  j!	 Ak! Aj! !  	-  F


-- Chunk 129 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19201-19350

  Ax6 
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
Ax!@   A:F Aj"E
  6Ax 
6 
A  

~# A k"
$ @ (" ("I@  k! (  j!A !@ !
  	j!@  	j-  "A"G@A ! A G
A! 
As!

 
Aq@A !

  Aj6@@@@ E@  K
 
Aj  	 
(
   
)7  B7 

  K
 
Aj!
 !A !A !A !A !A !
# A0k"$ @@@@@@ Aj 	E@A ! A 6
 B7A

 	A H
A -  A! 	A"E
 A 6
  6  	6 A 6 A 6A !@ -  "A I@Ax!

@@ @@@@@@@@@@ AqE@ Aq
 A G
A!A !


 A0kAqA
I
	Ax! A k&												
A!Ax!A! A"kT

 
@Ax!

 ( F@ Aj
 ( j :  A !
 Aj

 ( F@ Aj
 ( j :  

 ( F@ Aj
 ( jA:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA	:  
 Aj

@@@ AM@ Aj j :  A! Aj"AG
@ ("A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
 Aq At A
tj AtAqrj"AqAG@ Aq"AsAI@Ax!


 AI
 AI@  A?qAr:   AvAr: A!

  A?qAr:   AvA?qAr:   AqA
vAr: A!

 

 AqAM@A !A!
 !


Ax!


 AA  
  : A!

 AqAI@Ax!

 A jAq 
A jAqA
tr"Aj"AsA kAI@Ax!

  A?qAr:   AvA?qAr:   A
vA?qAr:   AvAqAr:  ( kAM Aj A (
 
 (j (6  A !
A ! (
Aj

  ( kK Aj   (
 
 (j Aj A ! (
 j
"6

A !A !
 Aj! 	Ak"	
 

-- Chunk 130 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19351-19500
 (!  
rAq@AxAx Aq!

 (
" @@ 
 (A!A E
 AxG
 !	 ! (
! 	 
6 
 6A !	A
!

  AA
!	Ax!
 
 	6   
j 6 

  	 
 (!
 
A6  
 6 E
  ( A
 A0j$ 

 A 6( A6
 A 6 B7  AjA  
 
Aj 
A
j( "6  
 
)"7  
(!  A
j 6    7 
  A 6 

  B7 

  A6 

  A  
  A  
  Aj6  	Aj"	j
 

  B7 
 
A j$ 
r@ (" ("O@

 ( !A!@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 

   :    :  
< (" ( F@ 
  Ax6   Aj6 ( jA :  
:  (" ( F@ 
  Ax6   Aj6 ( jA :  
r (" ( "F@  ( !
  Aj"6 (" jA :    F@  (!
  Ax6   Aj6  jA :  
 A kAqAO@ A kAqAO@ A0k"AqA
O@   6   Aq6 
  A 6    : 
  A 6    A k: 
  A 6    A7k: 
# A0k"$ @@@@  -  Ak 
   (6    - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

   (6  A6
 A 6 B7  B7   A j6 ( ( Aj

   (6    - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A ((
 
!  A0j$   
  A A
@~A -    ) !AA" @  B 7
   7  A6   
AA 
	# A k"$   ( !  A 6D B7< A: h A 6X A 6d A 6` A 6P A 6H  A<j6\ A j!@@@@@@@@@@@@@@@@@@@@@@@@@  ( Ak	



 
   (  (

# A@j"$ @@@@@@  Aj"-  Ak 
  (6A -  AA"E
 AjA̘ (  6   AjAĘ )  7   A )  7   A6  6
 A6 A6, A 6( B74  AjB 7   AjB 7  Aj60 ( ( A(j! ("E
 (
 A

 - ! A6, A 6( B74  AjB7  At"Aę j( 6
  A j( 6  Aj60 ( ( A(j!

 ("(  ( !

 ("(   ((  !
 A@k$  

AA 


 A A

 A A

 A A

 A A

 A A


 A A

 A A

 A A

 A A

 A A



 A A


 A A


 A A


 A A
	
 A A>

 A A


-- Chunk 131 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19501-19650
 A A4

 A A,

 A A$

 AӀ A

 A A

 A A


 A A
E@ A8j A j( 6   )<70 A6 A܁ 6  B7
   AjB7(   A
jB7   A0jB
7  Aj6 ( ( !  (0"@ (4 A
 A j$   
A A7 A jA AĂ  
   AԂ  
>!  (
!!  (!  (!
  (!
  (
!"  (!   (!
  ( ! @  Atj!#@  (  "At AqAtr AvAq Avrr" ! 
Aw 
Aws 
Awsj 
 s 
q sjjAߨj" 
  s q 
  qs A
w Aws A
wsjj"A
w Aws A
ws   
sq  
qsj  ( "At AqAtr AvAq Avrr"j  "j"	 
 
sq 
sj 	Aw 	Aws 	AwsjA݉j"j"A
w Aws A
ws   sq  qsj 
 ( "At AqAtr AvAq Avrr"j   j"
 	 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
 ( 
"At AqAtr AvAq Avrr"j  
j" 	 
sq 	sj Aw Aws AwsjAȨk"j"A
w Aws A
ws   sq  qsj 	 ( "At AqAtr AvAq Avrr"j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAۄj"j"A
w Aws A
ws   sq  qsj 
 ( "
At 
AqAtr 
AvAq 
Avrr"j  j"
  	sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( "At AqAtr AvAq Avrr"j  j" 	 
sq 	sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	 ( 
"	At 	AqAtr 	AvAq 	Avrr"j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAk"j"A
w Aws A
ws   sq  qsj 
 (  "
At 
AqAtr 
AvAq 
Avrr"j  j"
  	sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj  ( $"At AqAtr AvAq Avrr"j  j" 	 
sq 	sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 	 ( ("	At 	AqAtr 	AvAq 	Avrr"
j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAơj"j"A
w Aws A
ws   sq  qsj 
 ( ,"
At 
AqAtr 
AvAq 
Avrr"
j  j"
  	sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( 0"At AqAtr AvAq Avrr"
j  j" 	 
sq 	sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 	 ( 4"	At 	AqAtr 	AvAq 	Avrr"j  j"  
sq 
sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj ( 8"	At 	AqAtr 	AvAq 	Avrr"	 
j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj ( <"
At 
AqAtr 
AvAq 
Avrr"
 j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 	Aw 	A
ws 	A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAƻ j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A

-- Chunk 132 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19651-19800
ws A
vsj" j  j"  sq sj Aw Aws AwsjAòj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAؤj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAڑj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjA݆k"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj" j  j"
  sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj" j  j"
 
 sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj" j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 	j j Aw A
ws A
vsj"	 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAƩ6j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"
 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAҤj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 	Aw 	A
ws 	A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAܽj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA۱j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A

-- Chunk 133 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19801-19950
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA橨j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA߮k"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA篴k"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 	j j Aw A
ws A
vsj"	 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA k"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"

-- Chunk 134 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:19951-20100
 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 	Aw 	A
ws 	A
vsj"
j  j" 
 
sq 
sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"
j  j"  
sq 
sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"
j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjA¥j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAϔj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjA߹j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  j"  sq sj Aw Aws AwsjAƕj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  
j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	 
Aw 
Aws 
Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"j"	  sq  qsj 	A
w 	Aws 	A
wsj 
 
Aw 
Aws 
Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"
j! 	 
j!
  
j 
j!
   j!   
j!
  "j!"  j!  !j!! A@k" #G
 

   !6
   6   
6   
6   "6
    6   
6   6 
@@@@@@@@@@@ ( E@ ("-  "A(O
 E
 - "A(n! A K

  A6 B7    A(n6


 (! ("E
 -  "A'K
  O
 Aj" j,  "A q!A A N
 Aj" O
  j,  "A q Atr!A A N
 Aj" O
  j,  "A q Atr!A A N
 Aj" O
  j,  "A q Atr!A A N
  Aj"M
  j-  "AI
  A:   A6 
A A A  
 -  "A(O
 E
 - "A(n! A M@  A6 B7    A(p6


-- Chunk 135 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20101-20250



 A'A  
  A 6

  A:   A6 
 At r!A
! A6    6  A6   j6

 A'A  
 A'A  
A A AĄ  
  A ;  A
jB =    At6  A6 
  A 6 
# Ak"$ @@@@@@@@  -  Ak 
   Aj6 A A
A A AjA 

 A A	

 A A

   Aj6
 Aȇ A
AՇ A A
jA 

 Aۇ A

 A A

 A A


 A A

!  Aj$   
"   Bͅ 7  BŹ7 
   ( " (   ( 
	   A 6 
# Ak"$   ( E@ 
 Aj!# A k"$  Aj  A ( " @   )BŹQ@A )Bͅ Q

     A !A
! ) BċfR
 )Bԯ R
  Aj! A
j( !  ( !
  6  6  A j$   ( (
!  Aj$   

  ( E@ 
  A 6   6 
] ( ! A 6 @ @ (!A -  AA"
AA 
 
  6  6   A 6   6 
~# A0k"$   ( !@@@@@@  (" 
A!  A؉ A
  6 (!  (! A6
 A 6 B7$  AjB
"7   6     Aj
 Aj! AtAk!@  6 A߉ A
 A6
 A 6 B7$  7   6  ( ( Aj
 Aj!A !  Ak"
 


 A6
 A 6 B7$  AjB
7  B
7   6  ( ( Aj! 

 A6
 A 6 B7$  B
7   6  ( ( Aj! 

# Ak" $   A 6
  A6  A 6# Ak"$    Aj" ) 7 AjA   (AA  
A! 
 A0j$   
!   Bԯ 7  Bċf7 
# A k"$ @ E@AA  ! 

  6
   6 Aj Aj ("@@ (! (
E@   ! 

A!    
 A
 Aj Aj ("
 

A ! 
 A j$   
+   ( -  E@ A A

 A A

   A  
# Ak"$  ( @A !A	

 Aj ( (A  ( ("!A	 (
 
!   !@  ( "AxG@ E
  ( A

  - AG
   (" ( !  Aj( "( "@   
 ("@   (
  A
A
 Aj$  
x@  ( "AxG@ E
  ( A
  - AG
   (" ( !  Aj( "( "@   
 ("@   (
  A
A

(  ( "AxrAxG@  ( A

  ( !# Ak"$  (! ( ! (
"! @ AqE
  Ar!  
  B7 
   Ar6
A ! @   jA j Aq"A0r A j A
I:    Ak!  AI! Av! E
 
  Aj"AI@ AAط A   jAjA   k!   6
  6  6  Aj$   

 AAȷ  

  (
!@@ AO@  (!@@   F@  AA  ("j( "
A !

  (" 6
  6

  Aj  Aj !@ ! "Aj Aj ("! AA j( "
 
 A 6 
 E

-- Chunk 136 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20251-20400
    (
AtA j"( G@ AA (  Fj 6  E


  6  
A A ( A~  (
wq6 

  ("  G@   6
   6
A A ( A~ Avwq6 
  6  ("@  6  6
  (" E
    6   6

   j!@@  ("Aq
  AqE
  ( " j!   k" A ( F@ (AqAG
A  6   (A~q6   Ar6  6 

   
@@@ ("AqE@ A ( F
 A ( F
  Axq"    j"Ar6   j 6   A ( G
A  6 
  A~q6   Ar6   j 6 
 AO@   
 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
A   6 A A (  j"6    Ar6   j 6 

  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtA j!A t"A ( qE@   6    6    6
    6A A (  r6 
@@  ( "(AxqF@ !

 A AvkA  AGt!@  A
vAqjAj"( "E
 At! ! (Axq G
 

 ("  6
   6  A 6   6
   6
   6    6    6
    6
  Ak"  Ak( "Axq" j!@@ Aq
  AqE
 ( "  j!   k"A ( F@ (AqAG
A   6   (A~q6   Ar6   6 
  
@@@@@ ("AqE@ A ( F
 A ( F
  Axq"    j" Ar6   j  6  A ( G
A   6 
  A~q6   Ar6   j  6 
  AI
   A !A A ( Ak" 6   
A ( " @@ Aj!  (" 
 

A A  AM6 
A  6 A A (   j" 6    Ar6A (  F@A A 6 A A 6 
  A ( "M
A ( "E
A ! A ( "A)I
A !@  ( "O@   (jI

 (!
 
 
A  6 A A (   j" 6    Ar6   j  6 
  AxqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6
A ( "@@  Aj!  ("
 

A A    AM6   O
 A A6 

$	~# Ak"$ @@@@@@@  AO@  A{O
  A
j" Axq!A ( "	E
A  k!A  AI
 A AK
  A  Avg" kvAq  AtkA>j
"AtA j( "E@A ! 

A !  A AvkA  AGt!@@ (Axq" I
   k" O
  ! "
 A ! ! 

 ("     A
vAqjAj( "G   !  At! 
 


A ( "A  A
jAq  A
I"Av" v"Aq@@ AsAq  j"At" A j"  A j( " ("G@  6
  6

A  A~ wq6 
  Aj!   At"Ar6   j"   (Ar6

 A ( M
@@ E@A ( " E
  hAtA j( "(Axq k! !@@ (" 
  (" 
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E


   6   
A A ( A~ (
wq6 

  (Axq k"   I"!    !  !
 
 
@A  t"A  kr   tqh"At" A j"  A j( " ("G@  6
  6

A  A~ wq6 
   Ar6   j" At" k"Ar6   j 6 A ( "@ AxqA j!A ( !A ( "A Avt"qE@A   r6  

-- Chunk 137 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20401-20550

 (
!  6  6
  6
  6
  Aj!A  6 A  6 

   6 ("@   6   6
 ("E
    6   6
@@ AO@  Ar6  j" Ar6  j 6 A ( "E
 AxqA j! A ( !A ( "A Avt"qE@A   r6   

  (
!   6  6
   6
  6

   j" Ar6   j"   (Ar6

A  6 A  6 
 Aj!

   rE@A !A t" A   kr 	q" E
  hAtA j( ! 
  E

@     (Axq" k" I"!	  ("E@  (!
  	  I" !      ! " 
 

 E
  A ( " M    kOq
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E


   6   
A A ( A~ (
wq6 

@@@@@ A ( "K@ A ( " O@ AjA|q"Av@ !  Aj"A 6 A  A|q  AF"6 A   At 6  ("E@A !


 (
!A  ("A ( j" 6 A A ( "     I6 @@A ( "@A ! @   ( "  ("jF
  (" 
 


A ( " A    ME@A  6 
A A6 A  6 A  6 A  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aĺ A 6 A A 6 A̺ A 6 A A 6 AԺ AȺ 6 AȺ A 6 Aк AȺ 6 Aܺ Aк 6 Aغ Aк 6 A Aغ 6 A Aغ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 AĻ A 6 A A 6 A̻ A 6 A A 6 AԻ AȻ 6 AȻ A 6 Aܻ Aл 6 Aл AȻ 6 A Aػ 6 Aػ Aл 6 A A 6 A Aػ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A  AjAxq" Ak"6 A A 6 A  A(k"   kjAj" 6    Ar6  jA(6A A6 

  I  Mr
   (
"Aq
  Av F

A A ( "     I6   j!A ! @@@   ( G@  (" 



  (
"Aq
  Av F

A ! @@   ( "O@    (j"I

  (! 


A  AjAxq" Ak"6 A  A(k"	   kjAj" 6    Ar6  	jA(6A A6   A kAxqAk"    AjI"A6A ) !
 AjA ) 7   
7A  6 A  6 A  6 A  Aj6  A
j! @  A6   Aj"  I
 
  F
  (A~q6   k" Ar6   6   AO@   

  AxqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6

   6     ( j6 AjAxqAk" Ar6 AjAxqAk"  j" k! A ( F
 A ( F
 ("AqAF@  Axq"  j!  j"(!
  A~q6   Ar6   j 6  AO@   

 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

A    k"6 A A ( "  j"6   Ar6   Ar6  Aj!

A ( ! @  k"AM@A A 6 A A 6    Ar6   j" (Ar6

A  6 A    j"6   Ar6   j 6    Ar6
  Aj!

    j6A A ( " AjAxq"Ak"6 A A (  j"   kjAj"6   Ar6   jA(6A A6 

A   6 A A (  j"6    Ar6

A   6 A A (  j"6    Ar6   j 6 
 Aj!

A !A ( "  M
A    k"6 A A ( "  j"6   Ar6   Ar6  Aj!

   6 ("@   6   6
 ("E
    6   6
@ AO@  Ar6  j"  Ar6   j 6  AO@   

 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

   j" Ar6   j"   (Ar6
 Aj!
 Aj$  
@A{A    AM" k M
   A A
jAxq A
I"jA
j"E
  Ak!@  Ak" qE@ ! 

 Ak"( "Axq  jA   kqAk"  A   kAMj"  k"k! Aq@     (AqrAr6   j" (Ar6   ( AqrAr6   j" (Ar6  


-- Chunk 138 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20551-20700
 ( !   6    j6 
@  ("AqE
  Axq" AjM
     AqrAr6   j"  k"Ar6   j" (Ar6  
  Aj!
 
# Ak"$ @@@@  ( Ak 
 A A


 A A


  - AG@   Aj6
  Aj A
j
  ("  (
" K
A (A A
 ((
 
  Aj"    
!  Aj$   
   A  
# A k"$ @@@@@@@  -  Ak 
  A:   ( ! A 6  E
A -  !A A:    :  
A A :    A:  
 A j$ 
 A 6 A6
 A 6

A  
 B 7 B 7
 A 6# Ak" $   A 6
   Aj6  AjA   A
jA  AjA  
 A 6 A6
 A 6
 B7 AjAܓ  
~# Ak"$ @@  ( AG@# A k"$ @  ( E@A   (  (


   Aj6 (
!  6 B7
 AjB#!@ Aq@  70 A6, A6
 A 6 A6$ A: X A6T B 7L A6D A6<  A<j6(  A0j6  A
jA  Aj

 A6@ A 6< B7H  7  Aj6D A
jA  A<j
"A  (
"E@ 
 E
A A7 A jAܪ A  
 AȪ AE

A

   (  (

!  A j$   !

  ($"E
   ( ! @ Aj   @@ (E@ ( (
 


 - 
! - 
! (!A A E

A!

 AqE
   j"I
   j!   k"
 

 Aj$  
  A  
 "~# Ak"$ @@@@@@@@@  ( Ak 
 AՌ A
	
  - AG@   Aj68  Aj A8j
  (
! - 
AqE
  (!A

 A A

   ("I
  k!  ( A
lj!A 
!  Ax6
   :  A ) 7   : , A 6(  6
 A 6$  A
j6  E
  A
lj! A<j! Aj!@@ (" E@ A 6d  A
j6` A68 A6 A j A8j AjA  A  !  (`" (
Aj6
  E


  A,l! (!A !@ A 64  A
j60@  j"A j( AxF@ A68

 Aj" A$j( "
 A(j( "
A! @ (
  (! (!# A k"$ # A k"$  Aj  A A@@@@@@@@@@@@@@@@@@ (E@@ A j Aj (T" AF
 
  Ak
 Aj! (@! (H! (4AF!@ (L"
Ak"
 Aj"
("	j"  (D"
I@A  
("k! 
 
(" k! 
(
! 
) !$@@@@@@@ $   j1  BP@ 
 	 
j"	6

     K "
 
 
 
I! 	 j!! 
! @   F@A   ! ! @   M@ 
 	 
j" 6 E@ 
A 6

   6  	6 A6 


  Ak"  
O
   	j"
 
O
   j-   
 j-  F
 

-- Chunk 139 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20701-20850
 
 	  j"	6 !  E


   	j 
O
   !j!"   j!#  Aj!  #-   "-  F
 
 	 j  j!	
A !  E


 
 
A  
 
 	 
j"    
I 
A  
   
AН  
 
  6
  !
 	 
j"  
I
 

 
 
6 A 6 
 (

  (X6A

A 
E
@ ("Aj" E
    I@   j,  AJ


   G

  j!	   j! @@   	F
   ,  "A N@ Aq!  Aj

  - A?q! Aq!
 A_M@ 
At r!  Aj

  - A?q Atr! ApI@  
A
tr!  Aj

 
AtA q  - A?q Atrr"A F
  Aj
!  A@jAI A0kA
Ir



 E@A !

@  K@  j,  AL
 !

  F

  A  A  
 
@@ AO@@@@A  A@ /  AڜF
 AF
 (  A߾G
A|!A!  AO
A!

A! A}! AF@A!

 , AJ
  A A  
 , AL
A! A~!

 , AJ
  A A  
  A A  
A!  AG
 /  AڜG@A!

A~!A!
   j"  j"
j!
 
!  !@@  @  Ak!  ,  ! Aj! A N



 
E
  ,  " A N@  Aq!  Aj

 - A?q!  Aq!  A_M@ At r!  Aj

 - A?q Atr!  ApI@  A
tr!  Aj

 AtA q - A?q Atrr!  Aj
!@  A F@A !	

  A F
A !	@  A0kA	K
A !@  A0k"
A
O@ @@  
F
 ,  " A N@  Aq!  Aj

 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr" A F
 Aj
! Ak"
 

 	Aj!	  A G


 B
~"$B 
  
F $"  
j"  Ir
 ,  " A N@  Aq!  Aj


-- Chunk 140 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:20851-21000
 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr!  Aj
!  A G
 



 
 k!



 AM

 /  AߤG
 , "AL
 Aj!
A~!

A! A !	 AG
 -  A F


 -  A G
 ! 
 , "AJ@ Aj!
A!  !

   A  A  
  A A  
A! A !	 AF
Ạ  A
 , "AJ@ Aj!
A}!

  A A  
A !	 A kAqAK
   j!	A ! @@   	F
   
j!  Aj!  ,  A N
 
A !	

 A jB 7  B 7  	6  
6 AjA 
 - !@ ("E
  ("  /  Aj-  AtrAt r"O
   j-  A kAqAO
 (
! B 7   6
   6  6  6 AjA 
 - ! ("E
  (!  /  Aj-  AtrAt r!

 Aq!	
 ! 
A!A !
A !A !
A !


@@  E
    I@   j,  AJ


   G

   k!
   j!A !

     A  
@ 
E@A !


A.!A !
 -  A.G@ ! A !
A!

  
j! ! @ AtAuA H@  - A?q! Aq!
 Aq"AM@ 
At r!  Aj

  - A?q Atr! AI@  
A
tr!  Aj

 
AtA q  - A?q Atrr"A F
  Aj

 Aq!  Aj
! @ A!kAI A qA kAIr
 @ A:k'                           
 A kAM
 A! ! A !


   F
  -  !
 
 
A!
 ! 
  
6
  6   6  6  	6
  
6  6  
6  A j$ 

     A  
A A= A jA A  
@ ( @  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7 

 A6 
 A j$  (" AF
  A j Aj( 6  A j Aj) 7  A j Aj) 7   ) 7`
  )`7  Aj A j( 6  Aj A j) 7  Aj A j) 7   
6\  
6X   68
 Aj( " AG@  Aj) 7
   6 A0j A8j Aj (  Aj(  Aj(  A
j( !  (0" (
Aj6
  
  A,j"G
 

  A
j"G
 


  A  

-- Chunk 141 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21001-21150
 (
" AxF
   E
 (  AA 

 - AG
  (" ( !  Aj( "( "@   
 ("@   (
  A
A
A 

@ (
" AxG@  E
 (  AA

 - AG
  (" ( !  Aj( "( "@   
 ("@   (
  A
A
A
!  Aj$   

~# A k"$   (!
  ( ! A 6@ - E
  ( !	@@@ 
E@  A
jB7 A: d A 6` B 7X B 7P A6H A6< A6, A 6( A64 	Aj( !
 	Aj( !	  A j"
68  Aj"
60 
 	 A(j
 - AG
 ( !	 B
7  AjB7 A: d A 6` B 7X B7P A6H A6< A6, A 6( A64 	Aj( !
 	Aj( !	  
68  
60 
 	 A(j


 	Aj( A A 	Aj( (
 
 - AG
  ( !	 B
7 A 6( B7 A: d A 6` B 7X B7P A6H A6< A6, A64 	Aj( !
 	Aj( !	  A j68  Aj60 
 	 A(j

@@ ( AF
 @@ - Ak 
 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7H ( !  A jB7  A: D A6@ B 78 A60 A6( A6
 A6
 A 6 A6 Aj( !	 Aj( !  A(j6  A j6 	  AjE


 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7H ( !  A jB7 A6, A 6( B74 Aj( !	 Aj( !  Aj60 	  A(j


 ( "Aj( A A	 Aj( (
 

 ( A̖ A
  AG
 ( AF
  6  - AF@ ( ! B
7 A 6( B7 A: d A 6` B 7X B7P A6H A6< A6, A64 Aj( ! Aj( !  A j68  Aj60   A(j

 ( "Aj( A A Aj( (
 
  (! (! A j Aj( 6   ( "6H  ) 7L   A j ( 
  ( ! B" A j7( A6L A 6H B7T Aj( ! Aj( !  A(j"6P   A j
  AG
  6 ( !   Aj7( A6L A 6H B7T Aj( ! Aj( !  6P   A jE

A

A ( "Aj( A̖ A Aj( (
 

   
Aj6A 
! A j$  
i# Ak" $  ( @A !A	

  Aj ( (A   (  ("!A	  (
 
!   !  Aj$  
g # A0k" $ A -  @  A6
  A 6  B7   6,    A,jB7     A j6  AjAԕ  
  A0j$ 
+@  "E
  Ak-  AqE
  A   
 
~# A@j"$  ( AxF@ (
! A$j"A 6  B7
 A8j Aj) 7  A0j Aj) 7   ) 7( A
jA  A(j Aj ( "6   )
"7 Aj 6   7 
 ) ! B7  Aj" Aj"( 6  A 6 A -    7 A
A"@  ) 7  Aj ( 6   AЖ 6   6  A@k$ 
AA
 
~# A0k"$  ( AxF@ (
! Aj"A 6  B7
 A(j Aj) 7  A j Aj) 7   ) 7 A
jA  Aj Aj ( "6   )
"7  Aj 6   7 
  AЖ 6   6  A0j$ 
|# A k"$   ( AxG@   (  (

 Aj  (
" Aj) 7  Aj  Aj) 7    ) 7 ( ( Aj
!  A j$   
OA -   (! ( !AA"@  6  6   A 6   6 
AA 
   A 6   6 

    ) 7 
    (   (
# A k"$ A A ( "Aj6 @ A H
 A -  E@A A:  A A ( Aj6 A ( "A H
A  Aj6 A A (     (   : 
  : 
  6  ) 7A (  AjA ( ( A ( Ak 
6 A A :   E
 
 Aj   ( 
 


# A k"$ A !@@  ("  ("I
     k"
6    ( " j"	6 @@@@@ AF@ - ! -  "A0k"A
O@A A r"A k"  A kI"AO

 A0k"
A
O@A A r"A k"  A kI"
AO

 At 
r"AtAuA N
A ! Aq"AI
A!
 AI
 AI@A!
A!

-- Chunk 142 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21151-21300

A!
 AI


Aȥ A(A  
A!
 A6 A :  A ; 
  : 
  A
j6

  
6 A :  A ; 
  : 
  A
j6 
AI
   
Ak"6   	Aj6  	- ! 	-  "A0k"A
O@A A r"A k"  A kI"AK

 A0k"A
O@A A r"A k"  A kI"AK

  At r: 
 AqAI
  AI
   
Ak"6   	Aj6  	- ! 	- "A0k"A
O@A A r"A k"  A kI"AK

 A0k"A
O@A A r"A k"  A kI"AK

  At r:  
  AI
   
Ak6   	Aj6  	- ! 	- " A0k"A
O@A  A r"A k"    A kI"AK

 A0k"A
O@A A r"A k"    A kI"AK

  At r: 
 A0j A
j 
 (0
  (4!   (8"6   6   j!@ E
   ,  "A N@ Aq!  Aj

  - A?q! Aq! A_M@ At r!  Aj

  - A?q Atr! ApI@  A
tr!  Aj

 AtA q  - A?q Atrr!  Aj
 G
  A G

   k"AO@   

A !A  E
  Aq!@ AI@A !

 A|q!A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 @   j! @   ,  AJj!  Aj!  Ak"
 

 

!   A jB7@  AjB"78  AjB"70   6L A6
 A 6 B7$  A0j6  AjA  
A !



 A j$  
A  
i# Ak"$   (!  ( !  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
(    ( -  At" Aܫ j(   Aȫ j( 
~# A k"$   ( " ( @ !
# A0k"$   (!  (!  ( !@@@@@@  "	F@A !

 E
 	 G! 	Aj! Ak! "-  ! A !@@@@@@  AtAuA H@  Aq!  j"Aj-  A?q!  Aq"AM@ At r! 

 Aj-  A?q Atr!  AI@   A
tr! 

 AtA q Aj-  A?q  Atrr" A G



  Aq! 
@@  A0kA	M@  F

  j"Aj,  " AJ
   k" A  A  
 @  j,  AL

 Aj! !A !@@@@@@@ "  
A! -  A+k
 -  A+F@ Aj!  A
I!  Ak"!  


  !  AK

A !@ -  A0k" A	K@A!

 Aj!   A
lj! Ak"
 


A !@  E
 -  A0k"A	K@A!

A! B
~"B 
 Aj!  Ak!   "
j" 
O
 

  :  A:  

  6 A :  
 - 
  ("k!
@ E
   k"  K@  j j",  AL
 ,  AJ
  j  A  A  
  
G

  j" !  j j! E  Gr
 
(
AqE
 -  A G

-- Chunk 143 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21301-21450
 AG@  Aj,  AL

  jAj! @A !   F
  ,  "A N@ Aq!  Aj

  - A?q!
 Aq! A_M@ At 
r!  Aj

  - A?q 
Atr!
 ApI@ 
 A
tr!  Aj

 AtA q  - A?q 
Atrr"A F
	  Aj
!  A0kA
I A rA kAIr
 


 Aj!


  A  Aȡ  
  - : A A+ AjA A  
  j     Aء  
   A A  
@ 	E
  
A AE
  !

@@@ AI
  /  A G
   j" Aj",  AL
 Ak!
 
 k!@ !@@@@@@@@ "E
 @ -  A$k
 
 AF
 , AJ
  A A  
  j!	A ! ! @ !  " 	F
  ,  "A N@ Aq!  Aj

 - A?q! Aq!  A_M@  At r! Aj

 - A?q Atr! ApI@   A
tr! Aj

  AtA q - A?q Atrr! Aj
"   kj! A$k
          
 
 AF
 , AJ
  A A  
@@@ @@  O" E@  j,  AL
 
  E
A!

  F

  A  A  
 
  E
A!


 
  E
 A!


  E@  j,  AJ


  G


  j!  k!

  Ak" 6$ A 6    6
 A$6 A$6( A: ,  Aj"6 Aj Aj (E
@ (
"AG@ Aj!  AG


# A k" $   A 6  A6
  Aȼ 6  B7  AjA  
 ,  AJ



@ , " A N@  Aq

 - A?q"  Aq"Atr  A_M
  - A?q Atr" A
tr  ApI
  AtA q - A?q Atrr
A.G@A! 
A A
 , A@H


 
A A@A!

@ AO@ , A@H

 Aj! Ak!

  A A  
  A A  
A! 
A A

 Aj! Ak!

@@@@@@@   I@   j,  A@H
 Aj! 

   G

 Aj" E

@   I@   j,  AJ



   G


   j!   k!@ 	 
 /  AӠF@A ! 

 /  A F@A ! 

 /  AҌF@A ! 

 /  ĄF@A ! 

 /  AǨF@A ! 

 /  A̠F@A ! 

-- Chunk 144 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21451-21600

 /  AҠG
 A ! 

 - A G
 AI
 , AL


A !  -  A G

A! 
  AE


  A A  
 -  A G

  j! Ak! Aj"	!@@A!
  F
 ,  " A N@  Aq!  Aj

 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr" A F
 Aj
!  A0kA
I  A kAIr
 
A !

 Aj!
 	!@@@@@@@ "  
 
A : 

 -  "A+k
 -  !
@@@ AqA+F@  Ak! Aj!  A	K@ ! 

 " 
A !

  AK
 

A !@@  E
 -  "
A0k"	A
O@A 
A r"	A k"
 
 	A kI"	AO

 B"B 
 Aj!  Ak!  	 "
j" 
O
 
 
A: 

 
A: 

A !@ -  "
A0k"	A
O@A 
A r"	A k"
 
 	A kI"	AO

 Aj! 	 Atj!  Ak" 
 

 
 6 
A :  

 
A:  
A:  

 
A:  
 - 
 
EA  ("   AsA kAI" A Fr
   6  A
tAxO@AAA  
  A I  A kA!Ir
 Aj 
E
 
A!

   A A  
 ! 
  E


 A0j$  

     A̢  
  A  A  
    A  
A  


 A 6
  6 B 7   )7 AjA
!  A j$   

~# A k"$ @@@@@  ( "@    (
Aj"6
 AI
  ("@A!AШ A 

  A: 

  (" E
A A  !

@@@@@@@@@@@@  ("  ("I@A!   Aj"6@@@@@@@@@  j-  "A k                 
 
  ("E

A A E



   
 


 A0j"   - 0
  )8"

-- Chunk 145 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21601-21750
7  ( @    (0E
 A(j A8j) 7   )07   ("E
 A j 
  ("E 
Pr
 (
Aq
 A A
 Aj  (
  (A AE


  (" E@A !

A A  !

A !# A k"	$ @@@@~@@@  ( "@  ("  ("I@  j-  A F

    K! !@  I@  j-  A F

  F
@  j-  "
A0k"
AqA
I
  
A kAqAO@ 
A kAqAO
 
A
k!


 
A k!

   Aj"6 	 
B B> 	)B R
 	) "
 
B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!
  (!  (
Aj"AK
 E@A !

 	Aj"  Aj") 7    6
  
>  	  ) 7   AqA G!  ) 7    	)7 

A !
  ("E
A!A A 


 E
 A!AШ A 

   
: A !  A 6 
 	A j$  


  (! - 4"E
 E
AШ A 


  (! - 1"E

 E

AШ A 



@  O
    Aj6  j-  "A kAqAO@ A k!A ! AqAO

   @

@@@@@@@  ( E@A !  ("E

A A @A!


  ( E

 A0j"   - 0
  ( E
 )8!
    (0E
 A j A8j) 7   )07@ A G
 (D (LrE
  ("E
A A E
A!

  (" E
A A  !

  (" E@A !

A A  !

A   ("E
A A E
A!

  ("E
A! A@k E


  (
!@@ A k"@ AF
  60 E
A! A0j E


 E
A!A A E


 E
 A!A A 

  (! (D (LrE

 E
A!A A 
  ("E

-- Chunk 146 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21751-21900
 A@k 
  (!


  (! - 4"E
 E

A!AШ A 



  (! - 1"E
 E
A!AШ A 


  ("E
A A 


  O
  j-  A G
   Aj"6@@@  I@  j-  A F

    K!@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6 Aj 
B B> )B R
 )"
 B|"
 
Z
 


   Aj6

   Aj6 
B}X

  ("E
A!A A E


  ("E
A A E


  ("E
A!A A E


# Ak"$   (!  A 6@  A E@   6 Aj$ 

A A= AjA A  

  ("@A!A A 

A!  

 A G@  ("@A A 

  A 

  ("E

A A E




A !  A :   A 6 


 E
 A!A A 


   : 

 E
 A!A A 
	
   : 

 E
A!A A 
  (!  
70 E
 A0j 
  ("E
A A E


 E
 A A 

   : 

 E
 A A 

   : 
A !  A 6 

  ("@A A 

A !  ( "@@@  ("  (O
   j-  A G
    Aj6A 

@ E
   ("E
 A A E
 A

A  
 Ak!  ( "
 

A 

  ("E
 A A 

A !  ( E
     (
Ak6

 A j$  
  A A
# Ak"$  A 6
@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A


-- Chunk 147 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:21901-22050
  A?qAr: 
  AvAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A
!    (" k6    ( A G  Kr"6 A! E@  ( A
j !
 Aj$  
   A  
# Ak"$ @@@@@@@@@@@@ ( 
 A F

 AK


  A;
  B 7  A ; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

  A;
  B 7  A ; 

 E
  AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
I@ Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
Aܞ  
 @   6  A:  

 AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
I@ Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
Aܞ  
 Aj$ 
  A A
<# Ak"$    6
 A A
A A A
jA؟ !  Aj$   
~@@@@@ ( E@ - 
  - 
"As: 
 (4! (0!@ ("E
   K@  j,  AJ


  G

@  G@  j",  "A N@ Aq

 - A?q! Aq! At r A_M
  - A?q Atr!  A
tr ApI
  AtA q - A?q Atrr
! 
   6  A6   A AI
 A AI
 AA AI
 j" 6   6
 E

   6   6  A 6 
 (
" (4"F
 (0!
 !@  (<"	Ak"j" O
  (8!  
j!  	j!
  ("
k! (" j! 	 k! )! ($"AF!
 ! !@  G
@@   
j1  AqE@  
6
A ! 
! 



 
 
   
I 
" 	  	K! !@@@@  F@A   
! 
!@  M@  
6
 AG@ A 6$
   
6   6  A 6 
 Ak" 	O
  j" O
  j-   
 j-  F
 
  6
 ! ! 
E


  j O
  j!  j! Aj! -   -  F
 
  j!A ! 
E


  A  
   j"    I A  
  	AН  
  6$ !
  j" I
 
 !
A ! E

-- Chunk 148 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22051-22200
 !@@  I@  
j,  AL
 !

  G
  !

 Aj"
 


  A6 
   6   6  A6      I6

  A6 
  A6  A: 
    A  

# Ak"$ @ (" (
"I@

 ("
 I@

 Aj"
 - "jAk-  !	 (!
@@ AM@@  
j!@  k"AM@  F
A !@  j-   	F
  Aj"G
 


 Aj 	   ("AG
 (
!
   jAj"6
@  I  
Kr
  
  k"j 
 
    6   6A!

  M
 
A !

@@  
j!@  k"AO@  	   ( "AG
 (!

  F
A !@  j-   	F
 Aj" G
 


   jAj"6
  
M  Oq
  M
 
A !

 AA  
A !
  6

   6  Aj$ 
	~# Ak"
$  
A
jA A@  (
"E@   (   (!

  ( !
  ("-  !
@@  ("E
  
 j! 
A
j! 
! @  ,  "A N@ Aq!  Aj

  - A?q! Aq!	 A_M@ 	At r!  Aj

  - A?q Atr! ApI@  	A
tr!  Aj

 	AtA q  - A?q Atrr"A F
  Aj
!  AF
  6  Aj! Aj!   G
 

  j! Ak! At" Aj!
   
jAj! 
Ak!A!A ! !A!	@@ 
A k" AqAO@ 
A0kAqA	K
 
Ak! 
 Aj!@AAA$ k"A  A$M" AO A$O"  Aq"M@A$ k!A ! @  F
 -  "
A k"AqAO@ 
A0kAqA	K
 
Ak!
 " Aq"~"B 
  j" I
 AA   k"A    O" AO   M"O@ Aj!  A$j!  A$ k~"! ! B P



 Aj!

 !
  j"  I
 	   Aj"n" 	j"	K 	AsAkA Kr 	A F A Krr
@    lk" I@  kAq"@A ! ! @  Aj  ( 6   Ak!   Aj"G
 
  k!
  j kAI
  Atj! @  A
j  Aj) 7   Aj  ) 7   Ak!  Ak" K
 


 AO

 
A
j Atj 	6   G@ -  !
A ! @  n" n j"AI@ !

@  A$j!  A K! A#n"! 
 

 Aj!   A$lAq A&jAqnj! Aj! 
Aj!
 Aj!A! !


 
A
j! @ 
  ( 6 
Aj "

-- Chunk 149 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22201-22350
  Aj!  
Ak"

 


 AA  
A! A A	
  @  
 
 A A

   
  A A!
 
Aj$  
~# A k"$    A A@ A j  (D"E
 
@  AG@ (H

 
"kAK@

B!  F
   j!  j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
!@ A0k"A
O@A A r"A k"  A kI"AO

  B!  F



A  
   7   7  A j$ 
 (" ("  K! ( !A! !@@@  F
  Aj"6 Aj!  j!	 ! 	-  "A0kAqA
I A kAqAIr
 
 A G
   Ak"K
@ @  I@  j,  A@H  Kr


  G
  M


  K

   6    j6 
  A 6   A : 
    A  
~# Ak"$  ( !@@@@@ (" ("I@  j-  A F

    K!@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
  Aj"6  	B B> )B R
 ) "
 B|"	 
Z
 


A!  Aj6 	BQ
   	B|7A !

  B 7  Aj6

 
  A : 

  A : A!
   :   Aj$ 
~# Ak"$   @@ (" ("I@ ( " j-  A F

  B 7

  Aj"6@@@  I@  j-  A F

    K!@@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
  Aj"6  	B B> )B R
 ) "
 B|"	 
Z



  Aj6 	BR

  A : A

  Aj6

 	B|"	BR
   A : A

   	B|7
A 
:   Aj$ 
~@ (" ("O
  (  j-  A G
 A!  Aj"6
@@  O
 ( " j-  A0k"Aq"A	K
  Aj"6 E@A !

    K! Aq!@  F
  j-  A0kAq"A	K
  Aj"6 B
~"
B P@  
"j" O




@  O
   j-  A G
   Aj"6
@@@@   j"M@  6  I
 E
  I





-- Chunk 150 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22351-22500
  j,  AL

 E  MrE@  j,  AL

  j! 
  B7   6   6 
    A  
A !A  k!  j"Ak!A !@@@  F@ !A

  j!	 Ak"! 	-  A G
 
  j!@@A  k F
   K@  j,  AJ


 
A ! As F

  Aj"K@  jAj,  AL
 !

 ! AG

  j!  k! 
! E@

   6
   6   6   6 
    A  
  A  A  
  A 6   A : 

~# A k"$ @@@@@@@@@@@@  ( "@  ("  (O
   Aj6  j-  "A k"Aq"AKA
 vAqEr
  (" 
A !


  (" E@A !


A A  !


 AqAt"Aج j(  A j(   !


    (
Aj"6
 AM@@@@@@@@@@@@@@@ A k









  

  ("@A!A A 
  ( "E

  ("  (O
  j-  A G
   Aj6 Aj   - 
 )"
PE


  ("@A!A A 

  (! A G
 E
A!A A E


  ("@A!A A 

A!  
 A F@  ("@A A 

  A

  ("E
A A E


  ("@A!A A 

 Aj!A !@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

A  
 Aj!  ( "
 

A 
!  6  6 A! (
 (
AF@  ("E
A A 

  ("E
A A E


  ("@A!A A 

A!A !# Ak"$ @  ( "@@  ("  ("O
   j-  A G
    Aj"6~@  I@  j-  A F

    K!	@@@@@  I@  j-  A F

  	F
  j-  "A0k"AqA
I
 A kAqAI
 A kAqAO
 A
k!

   Aj6 
B}V
 
B|

 A k!
   Aj"6  
B B> )B R
  ) "
 B|"
 
Z


  ("@A!A A 

A !  A :   A 6 


-- Chunk 151 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22501-22650
   Aj6B 
B|!

  ("E@A !@@  ("  (O
   j-  A G
    Aj6A !

@ E
   ("E
 A A E
 A!

  @A!

 Ak!  ( "
 
A !

@ 
P
 A!A A 
    (Aj6  B
B!
@ 
 
Q@  ("E
A A E


@ 
P
   ("E
 A A E
 A!

A!    (Aj6 
B|!
  BE
 


A   ( "E
 A !@@@  ("  (O
   j-  A G
    Aj6A 

@ E
   ("E
 A A 

  
 Ak!  ( "
 
A 

A
!    ( 
k6

  ("E
 A A !
 Aj$  
  ( "E
  ("  (O
  j-  A G
   Aj6 Aj   - 
 )"
P
  ("@A A 

   
E


A!A !# A k"$ @@@@~@@@  ( "@  ("  ("	I@  j-  A F

  	  	K!
 !@  	I@  j-  A F

  
F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!  (!  (
Aj"AK
 E@A !

 Aj"  Aj") 7    6
  
>    ) 7  !  ) 7    )7 

A !  ("E
A!A A 


 E
 A!AШ A 

   : A !  A 6 
 A j$  E


A!   

  ("E
A A E


A!A !# Ak"$ @@@@@  ( "@@  ("  ("O
   j-  A G
    Aj"6~@  I@  j-  A F

    K!	@@@@@  I@  j-  A F

  	F
  j-  "A0k"AqA
I
 A kAqAI
 A kAqAO
 A
k!


-- Chunk 152 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22651-22800
   Aj6 
B}V
 
B|

 A k!
   Aj"6  
B B> )B R
  ) "
 B|"
 
Z


  ("@A!A A 
	
A !  A :   A 6 

   Aj6B 
B|!

  ("E
 
PE


  ("


A!A A 
    (Aj6  B
B!
@ 
 
Q@  ("E
A A E


@ 
P
   ("E
 A A E
 A!

A!    (Aj6 
B|!
  BE
 


  !

A A !

  !    ( 
k6
 Aj$  


  (! - "E
 E

A!AШ A 



 E
 A!A A 

A!  E




  ("E
A A 



  (! - "E
 E
AШ A 



   6A!  A E
	


  ("@A!AШ A 

  A: 

  ("E
A!A A E


 E
 A A 

   : 

A !  A :   A 6 

 E
 A!A A 

   : 
A !  A 6 

@ A F
   ("E
 A!A A 

A!  

A !  ( E
     (
Ak6

 A j$  

~# A0k"	$ @@@@@  ( "
@  ("
  ("I
  ("E
A!A A E


  (" E
A A  !

   
Aj"6 
 
j-  !    (
Aj"6
@@@@@@@@@ AM@@@@@@@@@@@@@@@ A k9
              	 
 
             

 

  
   
 
  ("E
A!A A E


-- Chunk 153 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22801-22950

  ("E
A!A A E


  M
  
j-  A F


A!A !# A k"$ @@@@~@@@  ( "@  ("  ("I@  j-  A F

    K!
 !@  I@  j-  A F

  
F
@  j-  "
A0k"AqA
I
  
A kAqAO@ 
A kAqAO
 
A
k!

 
A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!  (!  (
Aj"AK
 E@A !

 Aj"  Aj"
) 7    6
 
 
>    ) 7   AqA G! 
 ) 7    )7 

A !  ("E
A!A A 


 E
 A!AШ A 

   : A !  A 6 
 A j$  E


   
Aj6  ("E
A!A A E


 	A(j   	(("@ 	  	(,@@@ 	) AG
  	)"
BV
  
Ak


  ("E
A!A A 


  ("E
A!Aȩ A E


  ("E
A!Aͩ A E


  (! 	- ,"E
 E
A!AШ A 


 	A(j   	(("@ 	Aj  	(,@ 	(E
  	)"
BZ
  
"AsA kAI
  A G

  ("E
A!A A E


  (! 	- ,"E

 E

A!AШ A 



@ 
   ("E
 A!Aѩ A 

  ("@A!A A 

A!  E


  M
   
j-  A F

@ 
   ("E
 A!Aѩ A 

  ("@A!A A 

 A F
  ("E
A!A A E


@ 
   ("E
 A!Aѩ A 


-- Chunk 154 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:22951-23100
  ("@A!A A 

A!  
  ("E
A A E


@ 
   ("E
 A!Aѩ A 

  ("@A!A A 

 	A j!
A !@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

A  A
 Aj!  ( "
 

A 
! 
 6 
 6 A! 	( 
 	($AF@  ("E
A A 

  ("E
A A E


@ 
   ("E
 A!Aѩ A 

A!  A
@@@@  ( "@  ("  (O
   Aj6  j-  A k

  (" E@A !

A A  !

  ("E
A A E


  ("@A A 

  
  ("E
A A E


  ("@Aҩ A 

A !
# A0k"$ @@  ( "
E
 @@  ("  (O
   
j-  A G
    Aj6

@@@@@@@@ 
E
   ("E
 A A @A!


  ( "
E

  ("  ("O
  
j-  A G
   Aj"6@@@  K@  
j-  A F

    I!B !
@  K@  
j-  A F

  F
@  
j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


   Aj6

   Aj6 
B}X

  ("@A A 

  A :   A 6 

  ("E
A!A A 


 Aj   (@ A(j Aj) 7   )7   ("@ A j 
Aש A 

A!  AE


  (! - "E
 E
AШ A E


A!

 E
 A A 

   :   A 6 

A!

 
Aj!
  ( "

 

A !
 A0j$  

-- Chunk 155 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23101-23250
  ("E
Aթ A E


  ("E

A A E



A!   




  ("@A!AШ A 


  A: 

A!  (!# Ak"$ A  E
 A A'
  Aj!
@@@@ A"G@ A F@ A'

   -  AG
A!@@ AG@ - 
" - 
O
  Aj: 
  j-  !

A ! 
A 6  (! B 7 
  E
 


A ! A"E


 - 
" - 
"  K!@  F
  j! Aj!  -  E
 


A !


A
! Aj$  E



   
Aj6A!  E
	


A!  A
	
 
  ("E
A A E


 E
 A!A A 

   : 

 E
 A!A A 

   : 
A !  A 6 

A !  A :   A 6 

A!   

A !  ( E
     (
Ak6

 	A0j$  
~# Ak"$ @  ("E@

A!A A 
  P@A A !

@   5"X@  }"BT
A A 
  7 Aj !

A A 
A !  A :   A 6 

  A j6 Aj !
 Aj$  
	# A k"$ @  ( "E
 @  ("  ("O
   j-  A G
 A!   Aj"6
@@@  I@  j-  A F

 E
A !

   Aj"6@@  M
   j-  A G
    Aj6A!Aܢ !

 A(j   (("@ (,"@ (4E

  ("@AA A 

  A :   A 6 A 

  (!@ - ,"@ E
AAШ A 


 E
 AA A 

   :   A 6 A 

 E

  ("@AA A 

 E

  ("@AA A 

 A;$  6  A 6
 A:  A 6  6 A 6
  6  6 A 6  A(j  ((E@@ - %
  A: %@ - $@ ( ! (
!

 ( " (
"F

 ( j!  k

A  

-- Chunk 156 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23251-23400
 (
!  (06
  j! (, k
!@ @   

 A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7(@ - M
  !@ (,! A j A(j (TE@ - M
 A: M@ - L@ (H! (D!

 (H" (D"F

 (, j!  k

 (D!  (\6D  j! (X k
!@ E@A !

A A 
  ("E@A !A !

   "

 - ME
 

 E
A A E

A

  ("@AA A 

@@@  ( "E@A !

A !@@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

  
 Ak!  ( "
 
A !
  ("@AA A 
  ( !
 E
  ("  (O
  j-  A G
   Aj6A 

A

  ("@AA A 

  
! A j$  
# A k"$ A!@  "AqAF
 @@@  ( "E
   ("  (O
   j-  A G
    Aj6  (!@ AqE@ E
A!A A E


 E
 A!A A 

@@  ( E
     ( E
 Aj Aj) 7   ) 7@  ("E
 A! Aj 
  ("E
 Aũ A 

A!  
@  ( "E
  ("  (O
  j-  A G
   Aj6  ("@A A @A!

  ( E

    ( E
 Aj Aj) 7   ) 7@  ("E
 A! Aj 
  ("E
 Aũ A 

A!  E
 


  (" E
A A  !

  (!@ - "@ E
A!AШ A 


 E
 A!A A 

   : A !  A 6 

 AqE

  (" E
 A!A A  

A !
 A j$  
@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A
A  A
 Ak!  ( "
 

A 

~# Ak"$ @  ( "E
   ("  ("O
   j"-  A F@   Aj"6  ~@  I@  j-  A F

    K!@@@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  B B> )B R
 ) "	 B|" 	Z



   Aj6 BR


-- Chunk 157 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23401-23550
  ("@AA A 

  A :   A 6 A 

 B|

   Aj6B 


 -  A G
    Aj6  A 

  
! Aj$  
~# A k"$ @@@  ( "E
   ("  ("O
   j"-  A F@   Aj"6@@@@@ ~@  I@  j-  A F

    K!@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  B B> )B R
 ) "	 B|" 	Z



   Aj6 BQ
 B|

   Aj6B 
"X
 A!  (!  (
Aj"AK
 E
 Aj"  Aj") 7    6
  >    ) 7  !  ) 7    )7 

A !  ("E
A A 


 E
AШ A E

A!

   :   A 6 
A !

 -  A G
    Aj6  A E
A!

AA   A !

@  ("E
 A A E
 A!

  ( "E@A!

A !@@@  ("  (O
   j-  A G
 A!   Aj6

@ E
   ("E
 A!A A 

  
 Ak!  ( "
 
A!

A!
 A j$  
# A0k"$ @@@@  ( "@  ("   ("  Kk! !@  jE
    jAj6 Aj!  j! Aj! -  "A0kAqA
I A kAqAIr
 
 A G
  jAk!@ @  I@  I
  j,  A@H


  O


  I

 Ak"AqE@ B 7   jAk"6  6   j"6
@ A
j"A I
 
 A F

  ("E
AA A 


A   (" E
A A  

A   (" E
A  A"
 B 7  6  6  6
 A
j"A G@ A(j!@@@@@ A G@ A'F
 A j  -  AG
A!@@ AG@ - *" - +O
  Aj: * A j j-  !

A ! A 6  ($! B 7 
   E
 


A A+ A jA A  
  A'E


 - *" - +"  K!@  F
 A j j! Aj!   -  E
 

A

 A
j"A G
 

  A"

  ("E
 AA A 

  A :   A 6 A 
! A0j$  
    A  
	# A k"$ @@@@@@@  ( "@  ("  ("  K!	A! !@  	F
   Aj"6 Aj!  j!
 ! 
-  "A0kAqA

-- Chunk 158 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23551-23700
I A kAqAIr
 
 A G
 Ak!@ @  I@  K
  j,  A@H


  M

	
  K

 Aj  j"  )
  (" 
A !

  (" E@

A A  !

A!A٩ A  
    E


  (!   )7  E@A !

A! Aj  

A !  - 
Aq
 A k"Aq"AOA
 vAqEr
 AtAq"Aج j(  A j(   !

  ("@A!A A 

A !  A :   A 6 

Aܩ  
 A j$  
    A  
@    (" k6    ( A G  Kr"6 A!    (  

  A A
   Aȭ  
  A A
F   E@# A k" $   A 6  A6
  A 6  B7  AjA  
    
    A ( " A    
# A0k"$   6  6 A j Aj@@ ( "E@A !A!

 ($! (,E
 @@ E@A!

 A H
A -  A! A"E

A ! A 6  6  6
  K@ A
jA   (! (! (
!
  j     j"6  kAM@ A
j A (! (!
  j"A /  ";   AjA -  ":    Aj"6  )7 A j Aj ( "@@ (,! ($" (
 kK@ A
j   (!
 (" j     j"6 @ (
 kAM@ A
j A (! (!
  j" ;   Aj :    Aj"6
 A j Aj ( "
 

   )
7   Aj Aj( 6 

   
   6   6  Ax6 
 A0j$ 
# Ak"$ @@@@@ ("E
  ( ! Aq!@ AI@A !

 A
j! A|q!A !@ (  Ak(  Ak(  Ak(  jjjj! A j!  Aj"G
 

 @ At jAj!@ (  j! Aj! Ak"
 

 (
@ A H
 (E AIq
 At!
 

A!A !

A ! A H
A -  A! A"E

 A 6  6  6  Aȭ  E
A A  AjA A  
   
   ) 7   Aj Aj( 6  Aj$ 
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ 
g (!@ ("E@A!

 A N@A -  A! A"

   
   !   6   6   6 
C   (   ("kK@      (!
  ( j      j6A 

    A 
# A k"$  Aj"  Aj) 7  Aj"  Aj) 7  A;
  6   ) 7 # A k" $  (!  Aj ) 7   Aj ) 7    6
   6   ) 7 A !# Ak"$   (
!@@@@  ( 
 
A!

 
   ( "(! ( !

 Ax6    6
 A   (  (
" - 

-- Chunk 159 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23701-23850
  - 
 
  6  6  A   (  (
" - 
  - 
 
j~# A0k"$    6   6 A6
 AȺ 6 B7 B" Aj7(   7   A j6 Aj  
j~# A0k"$   6   6  A6
 Aȵ 6 B7 B" 7(   Aj7   A j6 Aj  
j~# A0k"$    6   6 A6
 A 6 B7 B" Aj7(   7   A j6 Aj  
@  ( "	  ("r@@ E
   j!@  (
"E@ !

 !@ " F
 Aj ,  "A N
  Aj A`I
  Aj ApI
  Aj
" k j! Ak"
 

  F
  ,  @@ E
   K@A !  j,  AJ


A !  G

 !
   !   !
 	E
  (!@ AO@  !

 E@A !

 Aq!@ AI@A !A !

 A
q!A !A !@   j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
   j!@  ,  AJj! Aj! Ak"
 

@  I@  k!A !@@@  -  Ak 
 !A !

 Av! AjAv!
 Aj!  (!  (!  (! @ Ak"E
    (  E
 
A


A!     (
  A !@   F
 Aj!    (  E
 
 Ak
 I

  (    ((
 
  (    ((
 
B# A k"$  A 6 A6 B7  6
   6  Aj6    
:# A k" $   A 6  A6
  A 6  B7  AjA  
%    -  At" A̸ j(   A j( 
   5 A 
# Ak"$ @@ (
"AqE@ A q
  5 A 

  ( ! A !@  jA j  Aq"A0r A j A
I:   Ak!  AI!  Av!  E
 


  ( ! A !@  jA j  Aq"A0r A7j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AAȷ  
 AAط A  jAjA  k

 Aj" AO@  AAȷ  
 AAط A  jAjA  k
!  Aj$   

# A0k"$  A: , A 6
 A 6(  6$   6  A 6 A 6
@@@ ("
E@ (
" E
 (!  At!  AkAqAj! ( ! @  Aj( "@ (   (   ($(
 

 (  A
j (  
 Aj!  Aj!  Ak"
 


 (" E
   At!
  AkA?qAj! (! ( ! @  Aj( "@ (   (   ($(
 

   
j"Aj( 6
  A
j-  : ,  Aj( 6( A
j( !A !	A !@@@ Aj( Ak 
 At j"
(
 
( !
A!
  6  6
 Aj( !@@@ ( Ak 
 At j"(
 ( !
A!	
  6  	6  Aj( Atj"(  A
j (  
  Aj!  
 A j"G
 

  (O
 (  (  Atj" (   ( ($(
 E

A

A 
! A0j$  
;A!@   
  (A A ((
 
   Aj !
 
# Ak"$ @@@@@@@@@@@@@@ ( 
 A F


-- Chunk 160 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:23851-24000
 AqE AIr
 E
 AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
O
 Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 



  A;
  B 7  A; 


  A;
  B 7  A; 
	
  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

 AqE
  A;
  B 7  A ; 

 Aq

 @   6  A:  

 AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
O
 Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
A  
 A
A  
  A;
  B 7  A ; 
 Aj$ 
  A
t!A!!A!!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ A M@ At"A j"( Av!A!@ A F
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 A!A  
 AA  
 @  A I
 @A  A I
   AI
@  AO@  A
kAк+I  A˦
kAIr
  A
kA
I  A
kAIr
  A
kAI  A
kAIr
  A~qA
F
  A`qA
G


  A A,A AA A
A   A
kAI
   A kAtI

  A A(A AA A
A 
~@ E
  Ak"A   O! AjA|q k!A !@@@@  j-  "AtAu"A N@  kAq
  O
@  j"Aj(  ( rAxq
 Aj" I
 


B !
B!	@@~@@@@@@@@@ Aм j-  Ak 

 Aj" I
B !
B !	
	
B !
 Aj" I
B !	

B !
 Aj" I
B !	

  j,  AJ


  j,  !@@ Ak"@ A
F@


 
 A`qAF


 AJ


 AjAqA
O@ A~qAnG
 A@H


 A@H



-- Chunk 161 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24001-24150
  j,  !@@@@ Ak    
 AjAqAK A@Nr


 A jAqA0O


 AJ

  Aj"M@B !	

  j,  AJ
B !	 Aj" O
  j,  AL
B 

B 

B !	 Aj" O
  j,  AL

B 
!
B!	
   
  	7  A6 
 Aj!

 Aj!

  M
 @  j,  A H
  Aj"G
 


  K
 

   6   6  A 6 
~# A@j"$ A!@  - 
   - !	  ( "(
"AqE@ (A A  	AA 	 ((
 
 (   ((
 
 (A A ((
 
   (
  !

 	E@ (A A ((
 
 (
!
 A:   )7
 A 64  Aj6  )7$ ) !
  68  (6,  -  : <  
7
  A
j"60   
  A A
   A
j (
  
  (0A A (4(
 !
  A:    :  A@k$   
   1  A 
|# A@j"$   6
   6  6  6 A6
 A 6 B7$  AjB$78  AjB%70  A0j6  Aj  
j~# A0k"$    6   6 A6
 A 6 B7 B" Aj7(   7   A j6 Aj  
 Aδ A+   
[# A0k"$   6
   6 A6 AĴ 6 B7
  AjB%7(  A(j6 Aj  
    (   (
# Ak"$   ( ! @  jA j  Aq"A0r A j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AAȷ  
 AAط A  jAjA  k!  Aj$   
# A k"$   6
   6  6  6 Aص 6 A6
@ ( E@ A6\ A 6X B7d  AjB$7H  AjB$7@

 A0j Aj) 7  A(j Aj) 7   ) 7  A6\ Aȶ 6X B7d  AjB$7P  AjB$7H  A jB%7@
  AjB%78  A8j6` A j  
  ( (  

 Ak!
  (!
  ( !
  (!
@@@  I
 @  j!@@@  k"AM@  G
 !

@ AjA|q" k"@A ! @   j-  A
F
   Aj" G
 
  Ak" M


 Ak! 
@ Aj( "	A sAk 	Asq ( "	A sAk 	AsqrAxq
 Aj! Aj"  M
 


A ! @   j-  A
F
   Aj" G
 
 !

  F@ !

@  j-  A
F@ ! 

  Aj"G
 
 !

   j"Aj!@  M
    j-  A
G
 A ! ! ! 

  O
 

A! "  "G
 A 
@ 
-  E
  
A A 
(
 E
 A
A !   G@   
j-  A
F!
   k!   j! 
 :   ! 

-- Chunk 162 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24151-24300
    
(
 "  rE
 
  
O  (!  ( !@  (" -  E
  A A (
 E
 A
   A
F:     (  
~# A@j"$ A!@  - 
   - !@  ( "(
"AqE@ E
A! (A A ((
 E


 E@A! (A A ((
 
 (
!
A! A:   )7
 A 64  Aj6  )7$ ) !  68  (6,  -  : <  7
  A
j60  A
j (
  
 (0A A (4(
 !

   (
  !
  A:    :  A@k$ 
/A!  -    ( " (A A  ((
 

~ ( "AK@@  BZ@  Ak"6   j"    B" B~}"B郱AtAڷ j/  ;   A
j B "	B AtAڷ j/  ;   A
j B B AtAڷ j/  ;   Aj B=B AtAڷ j/  ;   Aj B/A pAtAڷ j/  ;   Aj Bȯ%A pAtAڷ j/  ;   Aj B
AqA pAtAڷ j/  ;    	B ~}! Aj

  B/T
  Ak"j"    B/" B/~}"A=nAtAڷ j/  ;   Aj A n"A pAtAڷ j/  ;   Aj A nAqA pAtAڷ j/  ;    A lk! Aj
 AtAڷ j/  ;  
@  "A I@ !

  Ak"j  A n"A lk"AqA n"AtAڷ j/  ;    jAk  A lkAqAtAڷ j/  ;  
@ Aq"A I@ !

  Ak"j  A n"A lkAqAtAڷ j/  ;  
 Aq"A
O@  Ak"j AtAڷ j/  ;    6 
  Ak"j A0r:    6 
A A
A  
~  ) !  Aj) !# Ak" $   A'6  Aj~ B Z@  A0j B B̕  A j B Bɇ   A j B B̕  A@k B Bɇ   A j)   A(j)   A8j) "  ) |" T|"  )@|" T|   A j)    )P| T||" T|"B>! B B>

 B- BB
" Bష   ) |  A j"  Aj" AAA   ("  P
   A jA0 Ak  A6   B- B"B" Bష   )  |    (" BT
   A jA0 Ak   A0r: eA 
"  A jjA' k!  Aj$  
 E@  (
!A-!
 Aj

A+A   (
"Aq"!
  j
!@ AqE@A !

@ AO@  !

 E@A !

 Aq!	@ AI@A !

 A
q!
A !@   j"
,  AJj 
Aj,  AJj 
Aj,  AJj 
Aj,  AJj! 
 Aj"G
 

 	E
   j!@  ,  AJj! Aj! 	Ak"	
 

  j!
@@  ( E@A!  ("  ("  
  


   ("O@A!  ("  ("  
  


 Aq@  (!
  A06  -  !
A!  A:    ("  ("	 
  
  kAj!@@ Ak"E
 A0 	(  E
 
A
A!    	(
 
   
:     
6A !

  k!@@@  -  "Ak  
 !A !

 Av! AjAv!
 Aj!  (!  (!  (! @@ Ak"E
    (  E
 
A
A!    
  
      (
 
 A !@  F@A 
 Aj!    (  E
 
 Ak I
 
     (
 
   A  
@@   AjA|q"  k"I
   k"AI
  Aq!A !@   F"	
 @   k"A|K@A !

A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj! Aj"
 

 	
    j!@  ,  AJj! Aj! Aj"
 

   j!@ E
   A|qj" ,  AJ! AF
    , AJj! AF

-- Chunk 163 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24301-24450
    , AJj!
 Av!  j!@ !  E
A  AO"Aq! At!A ! AO@   Aqj!	  !@ ( "AsAv AvrAq j ("AsAv AvrAqj ("AsAv AvrAqj (
"AsAv AvrAqj! Aj" 	G
 

  k!   j! AvAq AqjAlAv j! E
 
   AqAtj" ( "AsAv AvrAq" AF
    ("AsAv AvrAqj" AF
   (" AsAv  AvrAq j
"AvA
q AqjAlAv j
 E@A 
 Aq!@ AI@

 A|q!@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
    j!@  ,  AJj! Aj! Ak"
 

 
9 @ A G@A    (  

 
A 

     (
 
   (    ((
 
# Ak"$   (    ((
 ! A : 
  : 
   6 Aj    ! - 
! A G - 
E
 A 
  ( " - 
AqE@  (A A  ((
 

  (A A  ((
 
!  Aj$   
# Ak"
$   (    ((
 ! 
A : 
 
 : 
 
  6 
Aj       	 
! 
- 
! A G 
- 
E
 A 
  ( " - 
AqE@  (A A  ((
 

  (A A  ((
 
!  
Aj$   
# Ak"$   (    ((
 ! A : 
  : 
   6 Aj       	 
 
A	 
 
!  - 
"A G - 
E
 A 
   ( " - 
AqE@  (A A  ((
 

  (A A  ((
 
!  Aj$   
~# Ak"$    (    ((
 : 
   6  E: 
 A 6# A@j" $  Aj"( ! A - 
  ("(
"AqE@A (A A  AA  ((
 
   (
  

 E@A (A A ((
 
 (
!
  A:    )7
  A 64    Aj6   )7$ ) !   68   (6,   -  : <   7
    A
j60A   A
j (
  
   (0A A  (4(
 
:   Aj6   A@k$  - 
" A G ( "E
 A  
  (! @ AG
  - 
E
   - 
Aq
 A  (A A  ((
 

  (A A  ((
 
!  Aj$   
2 (Aʹ A ((
 !  A :    :    6 
   (   ((  
# Ak"$ A!
@ ("	A" ("
("  
 @ E@A !

A  k!  ! !@@@@  j!A !@@  j"
-  "A kAqAI A"Fr A Fr
  Aj"G
 
  j

 
Aj!@ 
,  "
A N@ 
Aq!

 -  A?q! 
Aq! 
Aj! 
A_M@ At r!

 -  A?q Atr! 

-- Chunk 164 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24451-24600
Aj! 
ApI@  A
tr!

 AtA q -  A?q Atrr! 
Aj!
 Aj A@@ - AF
  -  - kAqAF
    j"K
@ E
   K@   j,  AJ


  G

@ E
   K@   j j,  AL


  j

 	   j  k j 
(
" 
@ - AF@ 	 (   E


 	 - " Ajj -  k  

A AI
 A AI
 AA AI
 j j!
A AI
 A AI
 AA AI
 j" j!  k"E





     A  
  j
" I
 A !@ E
   K@ "  j,  AL


 " G

 E@A !

  K@ !   j,  AJ


 !  F

     A  
 	   j  k 
(
 
  	A"   !

 Aj$  

# A k"$   6
  6@@ AO@  A  , AJ
 A  , AJ
   , AJ
Aj"j,  AL
  6   6A!A !

  6   6A!

   A    
  6
  6@@@@@  I"  IrE@  K
 E  MrE@ A
j Aj   j,  AJ( !
  6   "I@ Aj" Ak"A   M"I
@  F
    j   j"k!   j"	,  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  Ak!
  j!
@ E
   K@   j,  AJ


  G

  F
@@   j",  " A H@ - A?q!  Aq!  A_K
 At r!

   Aq6$A

 - A?q Atr!  ApI@  A
tr!

 AtA q - A?q Atrr"A F

  6$A AI
 A AI
 AA AI
!   6(    j6, A64 A 60 B7<  AjB%7h  AjB%7`  A(jB%7X  A$jB
7P  A jB7H

    6( A64 A 60 B7<  AjB%7X  AjB%7P  A(jB7H

 A64 A 60 B7<  AjB%7`  AjB%7X  A
jB7P  AjB7H

  A  
  
       
  A j68 A0j  

     
# Ak"$ A!@ ("A' ("("  
  Aj  ( A@ - AF@  (   E


  - "  Ajj -   k (
 

 A'   !
 Aj$  
# Ak"$   ( !  (  (r@ A 6
  A
j@@  AO@  AI
  AO
   A?qAr:    A
vAr: 
   AvA?qAr: 
A

   : 
A

-- Chunk 165 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24601-24750

   A?qAr: 
   AvAr: 
A

   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A


 (   ((  
! Aj$  
@@@@ AjA|q" F
   k"   K"E
 A ! Aq!A!@  j-   F
  Aj"G
 
  Ak"K


 Ak!A !
 AqAl!@  j"Aj(  s"Ak Asq (  s"Ak AsqrAxq
 Aj" M
 

  G@ Aq!A!@   j-  F@ !

  Aj"G
 

A !
   6   6 
# A0k"$   - @   - :  A6
 Aػ 6 B7$   B7  AjB7  Aj6  ( ( Aj

 A6
 A 6 B7$   B7  Aj6  ( ( Aj
!  A0j$   


~ E@  A 6<   68   64   60  A :   A;
   6  B 7 
A!
@@@@@@@@@@ AF@A!	

A!A!@  
j" O
 !
@  j-  "  j-  "I@  jAj" 
k!
A !

  G@A!
 
Aj!A ! 
!


A  Aj"  
F"! A   
j!
  j" I
 
A!A !A!A !A!	@  j"
 O
 !
@  j-  "  
j-  "
K@  jAj" k!	A !

  
G@A!	 
Aj!A ! 
!

A  Aj"  	F"! A   
j!
  j" I
 
 
!
     K""
I
 
 	 " 
j" I
  I
   j 
@ 
  
k"K!
 Aq!@ AkAI@A !

 A|q!
A !@B  j"Aj1  B 1   B Aj1  B Aj1  ! 
 Aj"G
 

 @  j!@B 1   ! Aj! Ak"
 

 
  
Aj!A!
 
!
A

A!A !A!A !
@  "
 j"
K@  k Asj" O
 As j 
k"	 O
	@  j-  "  	j-  "	I@ 
Aj" 
k!A !

  	G@ 
Aj!A !A! 
!


A  Aj"  F"	! A  	 
j!
  G


A!A !A!A !	@  "
 j"K@  k Asj" O
 As j 	k"
 O

@  j-  "  
j-  "
K@ Aj" 	k!A !

  
G@ 
Aj!A !A! 
!	

A  Aj"  F"
! A  
 
j!
  G



-- Chunk 166 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24751-24900
  
 	 	 
Ik!
@ E@A !A !


 Aq!A !
@ AI@A !

 A|q!	A !@B  j"Aj1  B 1   B Aj1  B Aj1  ! 	 Aj"G
 

 E
   j!@B 1   ! Aj! Ak"
 

 
!   6<   68   64   60   6(   
6$   6   A 6
   6   
6   
6   7  A6 
  A  
 
 A  
 
 A  
  A  
  A  
  A  
 	 A  
  A  
 
 A  
 ("@ ( !@@ Aj!   j-  "AtAu"	A N
 @@@@@@@@@@@ Aм j-  Ak 

A   j  O-  AqAG

 Aj


A   j  O,  ! Ak"E
 A
F


A   j  O,  ! Ak
 A`qAG


 AJ


 	AjAqA
O@ 	A~qAnG A@Nr


 A@N


 	AjAqAK A@Nr


 A jAqA0O


 AJ

A   Aj"j  O-  AqAG
A   Aj"j  O-  AqAG
 Aj

A   Aj"j  O-  AqAG
 Aj
"" I


   6   6    k6   j6     k6
    j6
  A 6 
   ) A 
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -  ! Aj!  
G
 
A !	

  A  
  A  
 ! 
" 
G
 

 E
   j!  Aq!@ Aj! @ -  "AtAu"A N@  !

   G@ -  A qAtr! Aj!

A  
  k"A H
 	As!	  G
 

 	Aq
# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Ak!  "Av! AO
 
  Aj"AO@ AAȷ  
 AAط A   jAjA   k!  Aj$   
~# Ak"$   @@@@@@@@@@  
A! -  A+k
 -  A+G
 Aj! AI! Ak! 


  A : 

 AK



@ E
  B B
 -  A0k"A
O
 )PE@  A: 

 Aj! Ak! ) " |" Z
 
  A: 

@ -  A0k"A
O
 Aj!  B

-- Chunk 167 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:24901-25050
~|! Ak"
 


  A: A

A

   7A 
:   Aj$ 
~# A0k"$   @@@@@@@@@@  
A! -  A+k
 -  A+G
 Aj! A"I! Ak! 


  A : 

 A K

 Aj!

 A(j!@ E
 Aj B B
 A j B B
 -  A0k"A
O
 )B R ) " )|" Tr@  A: 

 Aj! Ak! ) " |" T"   |"V  ZAG
 
  A: 

@ -  A0k"A
O
   B
 Aj! )  ) " |" T|! Ak"
 


  A: A

A

   7  Aj 7 A 
:   A0j$ 
7# A k"$  A 6 A6
 A 6 B7 Aj   
7# A k"$  A 6 A6
 A 6 B7 Aj   
7# A k"$  A 6 A6
 A 6 B7 Aj   
:# A k" $   A 6  A6
  A 6  B7  AjA  
~# A0k"$ A'!@  B T@  !

@ A	j j"Ak    B "B ~}"AqA n"AtAڷ j/  ;   Ak  A lkAqAtAڷ j/  ;   Ak!  B/V! !  
 

 "A K@ Ak" A	jj " AqA n"A lkAqAtAڷ j/  ;  
@ A
O@ Ak" A	jj AtAڷ j/  ;  

 Ak" A	jj A0r:  
  AA  A	j jA' k! A0j$  
# Ak"$   ( ! @  jA j  Aq"A0r A7j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AAȷ  
 AAط A  jAjA  k!  Aj$   
~# Ak"$   ) !A ! @   jA j Aq"A0r A j A
I:    Ak!  BT! B! E
 
  Aj"AO@ AAȷ  
 AAط A   jAjA   k!  Aj$   
$  ( "   Au"s k  AsAv 
  A
t!A#!A#!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ A"M@ At"A j"( Av!A!@ A"F
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 A#A  
 AA  
  A
t!A!A!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ AM@ At"A j"( Av!A!@ AF
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 AA  
 AA  
 !@ AI@  !

  A   kAq"j! @  !@  :   Aj" I
 

   k"A|q"j! A J@ AqAl!@  6  Aj" I
 

 Aq!
 @  j!@  :   Aj" I
 

  
h~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||  ~|7
@@ "   kK@  j"!   j!   AI
 A|q!A  Aq"k! @ Ak!@ Ak" -  :   Ak!  K
 

   k"A|q"k!  j"Aq@ A L
 At"Aq! A|q"	Ak!A  kAq!
 	( !@ Ak"  
t ( " vr6  Ak!  I
 


 A L
  jAk!@ Ak" ( 6  Ak!  I
 


@ AI@  !


-- Chunk 168 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25051-25200
  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq@ A L
 At"Aq! A|q"	Aj!A  kAq!
 	( !@   v ( " 
tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 E
  j!@  -  :   Aj! Aj" I
 


 Aq"E
  k!  k
! Ak!@ Ak" -  :   Ak!  K
 

  
C@ E
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 
@ "AI@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq@ A L
 At"Aq!	 A|q"Aj!A  kAq! ( !@   	v ( " tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 @  j!@  -  :   Aj! Aj" I
 

  

" A 

denomamountblocktransactioncontractheighttimechain_idsenderfundsaddressindextype_urlvalue/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs Y  b   9  
   Y  b        ruealse Y  b   a     ulltransaction_hashidpubkeysignatureaudsubtokenurlcredentialpasskeymsgstx_bytescred_bytessimulateauthenticatoradd_authenticatordataCosmosMsgbankcustomstargatetype_urlvalueanyibcwasmgovWeightedVoteOptionoptionweightAnyMsgGovMsgvoteproposal_idvote_weightedoptions           BankMsgsendto_addressamountburnWasmMsgexecutecontract_addrmsgfundsinstantiateadmincode_idlabelinstantiate2saltmigratenew_code_idupdate_adminclear_adminVoteOptionyesnoabstainno_with_veto/usr/local/cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/xion/xion.jwk.v1.rs  r   [   
   IbcMsgtransferchannel_idto_addressamounttimeoutmemosend_packetdataclose_channelIbcTimeoutblocktimestampIbcTimeoutBlockrevisionheight/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.3/src/encoding.rs  [   `     EventtypeattributesAttributekeyvalueResponsemessageseventsdataSlice must be the same length as the array/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rs   ^   \     ContractVersioncontractversioncontract_info    . 
   /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/iterator.rsH X         Error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.6.1/src/lib.rs V     	      
             A 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  { K   
     invalid Uint64 '' -         invalid Uint128 '           create_abstract_accountcontract_addressauthenticatorauthenticator_idauthenticators     d    methodbefore_txafter_txadd_auth_methodremove_auth_methodaccount_emitaddressWasmQuerysmartcontract_addrmsgrawkeycontract_infocode_infocode_idnot implemented/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/traits.rs   _   
  	    _     	    _     	    _      	    _      	    _   +  	    _      	   okerror/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/path.rs  `   )   
    `   ,   !   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/errors/std_error.rs   t	 i         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/prefix.rs  	 b   <   
   	         
   
   
   
      
             A 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  
 K   
     /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sec1-0.7.3/src/point.rs  <
 V   k          8         invalid tag <
 V      %   Error                Asn1Crypto               Pkcs8PointEncodingVersionAlgorithmParametersMissingKeyMalformed              OidUnknownoidParametersMalformed             PublicKeycould not convert slice to array   t	 i   l      account0.1.0before_txafter_tx   
 	   
    msgstx_bytescred_bytessimulate  
    
    
 
   
    
  A 
            authenticatoradd_auth_methodremove_auth_methodemit  ]
    l
    ~
    add_authenticator   
    id  
    data
    QueryMsgauthenticator_i_dsauthenticator_by_i_d  
    
    MigrateMsg         /usr/local/cargo/git/checkouts/cosmos-rust-c7f79fe19e150830/75e72f4/cosmos-sdk-proto/src/prost/xion/xion.v1.rs  $ n   %   
   QueryWebAuthNVerifyRegisterResponsecredential   $ n   7   
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/errors/std_error.rs    i          i            
          !    A 
   "   a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs   K   
     InvalidLengthErrorinvalid tag value: 0invalid key value:    R    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.3/src/encoding/varint.rs/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.3/src/encoding.rs    [         [   `     invalid varint  p b   V      p b   \      p b   b      p b   p      p b   v      p b   |      p b         InvalidEncodingcalled `Result::unwrap()` on an `Err` value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs
 V     2   #         $             %   VerificationErrsourcebacktrace  &         '   RecoverPubkeyErr   
      (   GenericErrmsgInvalidBase64            )   InvalidDataSizeexpectedactualInvalidHexInvalidUtf8NotFoundkindParseErrtarget_typeSerializeErrsource_type          *   Overflow           +   DivideByZero          ,   ConversionOverflow            -   OverflowErroroperationDivideByZeroErrorAddSubMulPowShrShlinvalid wire type value:                 .             /   ConversionOverflowErrorEmptyNotMultiple           0   AggregationBatchErrInvalidHashFormatInvalidSignatureFormatInvalidPubkeyFormatInvalidRecoveryParamInvalidPointUnknownHashFunction          1   PairingEquality           2   UnknownErrerror_codeNotMultipleG1NotMultipleG2UnequalPointAmountxion ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123{"account_number":"0","chain_id":"","fee":{"amount":[],"gas":"0"},"memo":"","msgs":[{"type":"sign/MsgSignData","value":{"data":"","signer":""}}],"sequence":"0"}     G 
   S    authenticators         3   (      4   contracts/account/src/query.rs   
         error rebuilding keysignature is invalidsignature is invalid. expected: , received       $ 
   signature is emptyshort signatureonly the contract itself can call this methodrecovery id can only be one of 0, 1, 27, 28the pubkey recovered from the signature does not matchcannot delete the last authenticatorinvalid time on signature. current:  received:    $   7 
   invalid jwt audinvalid tokenurl parse error:    p    cannot override existing authenticator at index  0   emit data too large   	 
   
   
      T a n  A 
(   ߽)bߜؐ0x.! 4H
0 A 
 A 
 A 
 A 
y/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rsPageRequestkeylimitreverse A 
     ^   <  	   NotFoundPermissionDeniedConnectionRefusedConnectionResetHostUnreachableNetworkUnreachableConnectionAbortedNotConnectedAddrInUseAddrNotAvailableNetworkDownBrokenPipeAlreadyExistsWouldBlockNotADirectoryIsADirectoryDirectoryNotEmptyReadOnlyFilesystemFilesystemLoopStaleNetworkFileHandleInvalidInputInvalidDataTimedOutWriteZeroStorageFullNotSeekableFilesystemQuotaExceededFileTooLargeResourceBusyExecutableFileBusyDeadlockCrossesDevicesTooManyLinksInvalidFilenameArgumentListTooLongInterruptedUnsupportedUnexpectedEofOutOfMemoryOtherUncategorized/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/ripemd-0.1.3/src/lib.rs
 V         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sha2-0.10.8/src/core_api.rs  
 Z   >   6   
 Z   >      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.6.1/src/lib.rs  
 V   
         g	jgrn<:ORQhك[@       #EgܺvT2                     
   	      
   
   
   
   
   
               
   
      	   
   
      
   
            
         
   
   
   
      
           

 
 #
 .
 8
 E

-- Chunk 169 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25201-25350
 O
 \
 h
 y
 
 
 
 
 
 
 
 
 
 
 
 

 .
 6
 D
 P
 _
 r
 }
 
 
 
 
 Emptybuffer underflowinvalid varint/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.3/src/encoding/varint.rs     b   V        b   \        b   b        b   p        b   v        b   |        b         invalid wire type:  (expected ) |!    ! 
   !    VarintSixtyFourBitLengthDelimitedStartGroupEndGroupThirtyTwoBitcontracts/account/src/auth.rs! 
   p   6   Secp256K1idpubkeysignatureEd25519EthWalletaddressJwtaudsubtokenSecp256R1Passkeyurlcredential " 	   :"    A" 	   Q"    _" 	   h"    )"    +"    1" 	   )"    J"    1" 	   )"    T"    W"    Z"    )"    o"    r" 
   Authenticatorpasskey+"    J"    T"    W"    o"    !#  A 
   7   8   9      
      
      
   ! ! ! ! ! ! Coindenomamount #    #    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs  # V   ,  
   ()invalid tag value: 0invalid key value:    >$    recursion limit reachedunexpected end group tagbuffer underflowinvalid varint/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.3/src/encoding/varint.rs $ b   V      $ b   \      $ b   b      $ b   p      $ b   v      $ b   |      $ b                   :             ;   Utf8Errorvalid_up_toerror_lencannot advance past `remaining`:  <=   % !   %    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.0/src/bytes.rs % W   ;  	 A 
   <   called `Result::unwrap()` on an `Err` value # V     %   <0y_u%bw+syU7v_
VWS\J%!݈҅]%q A 
    invalid wire type value:    '    BankQuerysupplydenombalanceaddressall_balancesdenom_metadataall_denom_metadatapagination/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/keys.rs' `   H      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/hex-0.4.3/src/lib.rs ' S      %   ' S      .   ' S      A   /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/slice/iter.rs  t( N        GrpcQuerypathdataQueryRequestbankcustomdistributionstargateibcwasmgrpcblocktransactioncontractheighttimechain_idsenderfundsaddressTransactionInfoindex  e)    Querier contract error: t)    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/errors/std_error.rs   ) i   l      Querier system error:   *    Serializing QueryRequest:   0*    account::auth::Authenticatortype: ; key:    p*    v*              A             B   missing field ``*    *    duplicate field `   *    *    unknown variant ``, there are no variants   *    +    `, expected *    0+ 
   C   
      D             E   FromUtf8Errorbyteserrorusize overflow when calculating b64 length/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/encode.rs + Z   W   
   + Z   P   3   integer overflow when calculating buffer size/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/mod.rs U, ^   |      F         G   Invalid UTF8U, ^      $   /xion.jwk.v1.Query/ValidateJWT  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_>456789:;<= 	



?


 !"#$%&'()*+,-./0123Claimstransaction_hash W.    SubMsgidpayloadmsggas_limitreply_onReplyOnalwayserrorsuccessnever       ,      H             I   Errorkindposition             J   LengthDateTimeFailedFileNotFound          K             L   Incompleteexpected_lenactual_len          M   IoIndefiniteLength            N   tagNoncanonicalOidMalformed              OidUnknownoidSetDuplicateSetOrderingOverflowOverlength            O   PemPermissionDeniedReaderTagModeUnknownTagNumberInvalid           P   TagUnexpectedexpectedactual           A   TagUnknownbyteTrailingDatadecodedremaining            E   Utf8Value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.0/src/bytes_mut.rs0 [   @     0 [        invalid varintNoneSome  0 [   >     0 [   C   A 

   Q   R   S A 

   T   U   V   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.6.1/src/lib.rs 1 V     	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_json-1.0.118/src/ser.rs2 \   .  3   2 \   !  @   internal error: entered unreachable code2 \   
     \"\\\b\f\n\r\t/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs   2 [   2   	   IbcQueryport_idlist_channelschannelchannel_idalloc::string::Stringcw2::ContractVersioncosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>alloc::vec::Vec<u8>cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>account::auth::Authenticatorcosmwasm_std::query::QueryRequestaccount::auth::jwt::Claimsaccount::contract::AccountSudoMsgcosmwasm_std::types::Envaccount::msg::ExecuteMsgaccount::msg::QueryMsgaccount::msg::MigrateMsgaccount::msg::InstantiateMsgcosmwasm_std::types::MessageInfo00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899           W   X   Y   DistributionQuerydelegator_withdraw_addressdelegator_addressdelegation_rewardsvalidator_addressdelegation_total_rewardsdelegator_validators Z   (      [   called `Result::unwrap()` on an `Err` value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/exports.rs 
7 `         
7 `       A 
   \   ]   ^   _   `   a A 
=   b   c   d   e   f   g   h   i   j   k   l   m   n   o   p A 

   q   r   
      s   t    A 
   u   a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  g8 K   
     
7 `         
7 `         
7 `        Error             v   Base64CharacterEncodingEncapsulatedTextHeaderDisallowedLabelLengthPreamblePreEncapsulationBoundaryPostEncapsulationBoundary           /   UnexpectedTypeLabelexpectedinvalid base64:  9    w         x             %   VerificationErrsourcebacktrace  y         z   RecoverPubkeyErrr   
      {   GenericErrmsgInvalidBase64            |   InvalidDataSizeactualInvalidHexInvalidUtf8NotFoundkindParseErrtarget_typeSerializeErrsource_type          }   Overflow           ~   DivideByZero             ConversionOverflow            -   OverflowErroroperationDivideByZeroError           .   ConversionOverflowError           0   AggregationBatchErrInvalidHashFormatInvalidSignatureFormatInvalidPubkeyFormatInvalidRecoveryParamInvalidPointUnknownHashFunction          1   PairingEquality              UnknownErrerror_codecontracts/account/src/auth/eth_crypto.rsT< (   .   #   Ethereum Signed Message:
/xion.v1.Query/WebAuthNVerifyRegister ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_>456789:;<= 	



?


 !"#$%&'()*+,-./0123/xion.v1.Query/WebAuthNVerifyAuthenticateinvalid padding schemedecryption errorverification errormessage too longinput must be hashednprimes must be >= 2too few primes of given length to generate an RSA keyinvalid prime valueinvalid modulusinvalid exponentinvalid coefficientmodulus too largepublic exponent too smallpublic exponent too large        internal errorlabel too longinvalid padding lengthinvalid argumentsPKCS#1 ASN.1 error:  @    PKCS#1 cryptographic error         PKCS#1 version error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/iter_helpers.rsHA h   
                           Error   q   p   z   r   y   9   x   8   g   f   2   t   v   d   w   0   s   3   j   n   5   4   k   h   c   e   6   m   u   a   7   l   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs  dB V   b   	 Aԅ 
      Unhandled error writing the checksum on drop.   dB V         internal error: entered unreachable codedB V        1   missing human-readable separator, ""XC #   {C    invalid checksuminvalid lengthinvalid character (code=) C    C    invalid data point (C    C    invalid paddingmixed-case strings not allowed   Q%cʹ     A 
1~ayBϋV}s             signature::Error { source: Some()   D    D    None }crypto error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sec1-0.7.3/src/point.rsD V   
  "   D V   	  	   PKCS#8 ASN.1 error: dE    PKCS#8 cryptographic key data malformedPKCS#8 algorithm parameters malformedpublic key error:   E    AlgorithmIdentifier parameters missingASN.1 error:  F 
   SPKI cryptographic key data malformedunknown/unsupported algorithm OID: IF #   BOOLEANINTEGERBIT STRINGOCTET STRINGNULLOBJECT IDENTIFIERREALENUMERATEDUTF8StringSEQUENCESETNumericStringPrintableStringTeletexStringVideotexStringIA5StringUTCTimeGeneralizedTimeVisibleStringBMPStringprimitiveconstructed<G 	   EG 
   APPLICATION [] ()   `G 
   mG    pG    CONTEXT-SPECIFIC [  G    mG    pG    PRIVATE [   G 	   mG    pG    Tag(0x: G    G    pG    NotFoundPermissionDeniedConnectionRefusedConnectionResetHostUnreachableNetworkUnreachableConnectionAbortedNotConnectedAddrInUseAddrNotAvailableNetworkDownBrokenPipeAlreadyExistsWouldBlockNotADirectoryIsADirectoryDirectoryNotEmptyReadOnlyFilesystemFilesystemLoopStaleNetworkFileHandleInvalidInputInvalidDataTimedOutWriteZeroStorageFullNotSeekableFilesystemQuotaExceededFileTooLargeResourceBusyExecutableFileBusyDeadlockCrossesDevicesTooManyLinksInvalidFilenameArgumentListTooLongInterruptedUnsupportedUnexpectedEofOutOfMemoryOtherUncategorized                       
   	      
   
   
   
   
   
               
   
      	   
   
      
   
            
         
   
   
   
      
   G H H %H 4H CH UH fH rH {H H H H H H H H H H I I #I .I 6I ?I JI UI lI xI I I I I I I I I I I J 
J         at DER byte    lK 
   date/time erroroperation failedfile not foundASN.1 DER message is incomplete: expected , actual K *   K 	   I/O error:  K 
   indefinite length disallowedincorrect length for    $L    ASN.1  not canonically encoded as DER   DL    JL    malformed OIDunknown/unsupported OID:   L    SET OF contains duplicateSET OF ordering errorinteger overflowASN.1 DER message is too longPEM error:   M 
   permission deniedreader does not support the requested operationunknown tag modeinvalid tag numberunexpected ASN.1 DER tag: expected ,  M 	   M    got M    unknown/unsupported ASN.1 DER tag: 0x   M %   trailing data at end of DER message: decoded  bytes,  bytes remaining   M -   
N    %N    malformed ASN.1 DER value for   PN 
          PEM Base64 error:   N    PEM character encoding errorPEM error in encapsulated textPEM headers disallowed by RFC7468PEM type label invalidPEM length invalidPEM preamble contains invalid data (NUL byte)PEM error in pre-encapsulation boundaryPEM error in post-encapsulation boundaryunexpected PEM type label: expecting ""  O &   O    invalid Base64 lengthinvalid Base64 encodingfailed to decode Protobuf message: .:          #P    $P    failed to encode Protobuf message; insufficient buffer capacity (required: , remaining: )   @P K   P 
   P    LayoutError/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.0/src/bytes.rs                                      P W        P W   *   A 
      called `Result::unwrap()` on an `Err` value P W   +  2   P W   9  I               P W        /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.0/src/bytes_mut.rsoverflow Q [     7   Q [        Q [     "   Q [        Q [        Q [         Q [   j     Q [         Q [         Q [   x     Q [   w  
   Q [   w     Q [        Q [                    abort/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.6.0/src/lib.rs  =S U   n   	   advance out of bounds: the len is  but advancing by S "   S    =S U         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs S [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/decode_suffix.rsdT x   c      dT x      
   dT x         dT x      	   Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengths
U T   internal error: entered unreachable code:   xU *   dT x         dT x   V      dT x   Y   1   dT x   M      dT x   C   
   dT x   .   )   dT x   
      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/encode.rs  
V Z      	   Invalid byte , offset . V 
   V 	   V    Encoded text cannot have a 6-bit remainder.Invalid last symbol  V    V 	   V    Invalid padding/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/decode.rsW q   r   )   W q   s   /   W q         W q         W q      )   W q      (   W q         W q         W q      '   W q         W q      	   W q         W q         W q         W q         W q         W q         W q        W q   
     W q        W q     
   W q     
   W q     
   W q      
   W q      
   W q      
   W q      
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/mod.rs  @Y n      
   @Y n      F   @Y n      @   @Y n      
   @Y n      
   @Y n      
   @Y n      
   @Y n      3   @Y n      %   @Y n      :   @Y n      +   @Y n   @      @Y n   B   /   @Y n   B       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/tiny-keccak-2.0.2/src/lib.rs Z [   8      Z [   8     Z [   M  /   assertion failed: dst.len() <= src.len()Z [   R  
   Z [   b     Z [        Z [     !   Z [     
   Z [     %   Z [        Z [     '   Z [     
   Z [     +                                              	                   	     
                                      
      
                           
             Aȹ 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  ] K   
     Error    A 
#            TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other.]   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/imports.rs_ `      
                                               addr_validate errored:  D`    input too long for addr_validateaddr_canonicalize errored:  `    input too long for addr_canonicalizeaddr_humanize errored:  `    MessageTooLong must not happen. This is a bug in the VM.` 8   _ `   '     _ `   E     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   La A   _ `        InvalidHashFormat must not happen. This is a bug in the VM. a ;   _ `        _ `        _ `        Verification error: 
b    Recover pubkey erro

-- Chunk 170 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25351-25500
   Error parsing into type :   ,c    Dc    Error serializing type  Xc    Dc    Overflow:   c 
   Divide by zero: c    Conversion error: AddSubMulPowShrShlCannot  with given operands c    c    Cannot divide by zero   c c c c c c /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs  ,d b   9  
   ,d b        ,d b   a     errorrequestresponseaddrcode_idkindInvalid hash formatInvalid signature formatInvalid recovery parameter. Supported values: 0 and 1.Unknown error:  De    List of points is emptyList is not an expected multipleList is not a multiple of 48List is not a multiple of 96Not the same amount of points passedAggregation error:   e    Batch errorGeneric errorInvalid public key formatInvalid pointUnknown hash functionAggregation pairing equality error:  _f $   usize overflow when calculating b64 length/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rsf Z   W   
   f Z   P   3   Cannot parse request:  in:  0g    Fg    Cannot parse response:  \g    Fg    No such contract:   g    No such code:   g    Unknown system errorUnsupported query type: g    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/storage_keys/length_prefixed.rs   g u         g u      	   only supports namespace components up to length 0xFFFF  h 6   g u   &   	   g u   6      g u   6   	   Region pointer is null  h    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/memory.rs i _   >   	   Region starts at null pointer   i 
   i _      
   invalid_requestinvalid_responseno_such_contractno_such_codeunknownunsupported_request   i    i    i    i 
   i    i    errorrequestDj    Ij    responseDj    `j    addrxj    code_id j    kindj                               j okerror j    j                              Utf8Errorvalid_up_toerror_len      
                         
                      FromUtf8ErrorbyteserrorNone              SomeVec is sized conservatively k    internal error: entered unreachable code:   k *   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/mod.rs  k ^        integer overflow when calculating buffer size   k ^   y                  Invalid UTF8k ^      $                missing field ``l    l    duplicate field `   l    l    unknown variant ``, there are no variants   m    )m    `, expected m    Tm 
   internal error: entered unreachable code: invalid Once statepm <   /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/std/src/sys/sync/once/no_threads.rs m [   6      Error/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/accum.rs  %n U         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/vec/mod.rsn L   	  
          invalid base64: n       
             A 

      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  go K   
       ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.1.4/src/sections.rsq a         q a         Cannot read section length  q    q a   8   	   q a   :      cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>okerror Tr    Vr    Buffer is full         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/ser/mod.rsfalser c      	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/unescape.rs r g   '      Non-hex ASCII character found   ts 
   r g         Control character found in string.EOF while parsing a list.EOF while parsing an object.EOF while parsing a string.EOF while parsing a JSON value.Expected this character to be a `':'`.Expected a high surrogate (D800–DBFF).Expected this character to be either a `','` ora `']'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` or a `'}'`.Expected to parse either a `true`, `false`, or a `null`.Expected this character to start a JSON value.Invalid escape sequence.Invalid number.Invalid typeInvalid unicode code point.Object key is not a string.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.JSON has non-whitespace trailing characters after the value.JSON has a comma after the last value in an array or map.JSON is nested too deeply, exceeded the recursion limit.       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs  v b   ,   	   v b      A   v b      ,   Invalid character  at position  w    w 
   Odd number of digitsInvalid string length/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rsw [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rs   Lx q         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode_suffix.rsx x   b      x x      
   x x         x x      	   x x   [   /   x x   T   	   x x   Q   1   x x   G   *   x x   =   
   x x   5   )   x x      &   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rs  y Z      	   Invalid symbol , offset .   dz    sz 	   |z    Invalid input length:   z    Invalid last symbol z    sz 	   |z    Invalid padding/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rsz q   8   &   z q   ^   .   z q   a   
   z q   e   8   z q   i      z q   =   '   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/mod.rs  { n      
   { n      F   { n      @   { n      
   { n      
   { n      
   { n      
   { n      3   { n      %   { n      :   { n      +   { n   @      { n   B   /   { n   B       0123456789abcdefuuuuuuuubtnufruuuuuuuuuuuuuuuuuu  " A 
\ A 
Error/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rsEOF while parsing a listEOF while parsing an objectEOF while parsing a stringEOF while parsing a valueexpected `:`expected `,` or `]`expected `,` or `}`expected identexpected valueexpected `"`invalid escapeinvalid numbernumber out of rangeinvalid unicode code pointcontrol character (\u0000-\u001F) found while parsing a stringkey must be a stringinvalid value: expected key to be a number in quotesfloat key must be finite (got NaN or +/-inf)lone leading surrogate in hex escapetrailing commatrailing charactersunexpected end of hex escaperecursion limit exceeded   
               Error(, line: , column: )       ƀ    ΀ 
   ؀  A 

      a Display implementation returned an error unexpectedly )~ K   
        
               /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs l [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/const-oid-0.9.6/src/arcs.rs  ؁ Z   7   /   ؁ Z   <   /                OID malformed   ؁ Z   m      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/const-oid-0.9.6/src/lib.rs    Y         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/iterator.rs X         ObjectIdentifier()  X    i           .                ArcInvalidarcArcTooBigBase128                DigitExpectedactualEmptyLengthNotEnoughArcsTrailingDot                                     `explicit panic/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.203/src/de/mod.rs   ; Z        ,    ,    ` or `  ,        ,    one of ,                  
            /rust/deps/dlmalloc-0.2.6/src/dlmalloc.rsassertion failed: psize >= size + min_overhead 
 )     	   assertion failed: psize <= size + max_overhead  
 )     
   <unsupported><disabled>library/std/src/backtrace.rs ˅ 
      %   Backtrace operation not supported on this platform   (   $      , unsupported backtracedisabled backtrace ˅ 
     
           	  
         entity not foundpermission deniedconnection refusedconnection resethost unreachablenetwork unreachableconnection abortednot connectedaddress in useaddress not availablenetwork downbroken pipeentity already existsoperation would blocknot a directoryis a directorydirectory not emptyread-only filesystem or storage mediumfilesystem loop or indirection limit (e.g. symlink loop)stale network file handleinvalid input parameterinvalid datatimed outwrite zerono storage spaceseek on unseekable filefilesystem quota exceededfile too largeresource busyexecutable file busydeadlockcross-device link or renametoo many linksinvalid filenameargument list too longoperation interruptedunsupportedunexpected end of fileout of memoryother erroruncategorized error (os error )           
       : panicked at :
library/std/src/sync/lazy_lock.rs    !         cannot recursively acquire mutex     library/std/src/sys/sync/mutex/no_threads.rs ,      	   library/std/src/sync/once.rsP 
      2   <unknown>�memory allocation of  bytes failed       
   library/std/src/alloc.rs    d  	   cannot modify the panic hook from a panicking thread 4   library/std/src/panicking.rs  
      	   
     
      
            
            
                        Box<dyn Any>library/std/src/../../backtrace/src/symbolize/mod.rs 4   g  0               -                                at : 2    operation successfulOnce instance has previously been poisoned  P *   one-time initialization may not be performed recursively 8                        
         
   
                  &   8         
   	   
               
                        
      
   
         ǆ ׆   
  ' < H S h }    Ӈ 
 $ ; G P Z j     Ɉ ш   
   5 @ V c n ()              /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/ops/function.rs  P         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/str/pattern.rs  O         O     !    O     !   0123456789abcdef/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/escape.rs   J   M    A 
     called `Result::unwrap()` on an `Err` valueErrorEmptyInvalidDigitPosOverflowNegOverflowZero             ParseIntErrorkind       
      
  
  
   O   G  $    O     7   _ZN/rust/deps/rustc-demangle-0.1.24/src/legacy.rs   7 .   =   
   7 .   :   
   7 .   6   
   7 .   f   
   7 .   o   '   7 .   p   
   7 .   r   !   7 .   s      7 .   t      ::  7 .   ~   
   7 .      &   7 .      !   7 .      I   7 .         7 .      /   C   7 .      5   ,)(><&*@7 .      ,   7 .      %   .   7 .      %               7 .   r   H   __R/rust/deps/rustc-demangle-0.1.24/src/v0.rs   ϑ *   2      ϑ *   /      ϑ *   +    A 
	      `fmt::Error`s should be impossible without a `fmt::Formatter`   ϑ *   K      ϑ *   Z   (   ϑ *      
   punycode{-}0ϑ *   
  1   internal error: entered unreachable codeϑ *   1     ϑ *   4  G   internal error: entered unreachable code: str::from_utf8() =  was expected to have 1 char, but  chars were found 9   I    M "   o    ϑ *   \     boolcharstri8i16i32i64i128isizeu8u16u32u64u128usizef32f64!_...  ϑ *        ϑ *   
  
   ϑ *   #  "   ϑ *   $  %   ϑ *        {invalid syntax}{recursion limit reached}?'for<> , []::{closureshim:# as  mut const ; dyn  + unsafe extern "ϑ *     -   " fn( ->  = falsetrue{ {  }: 0x ϑ *     -   .llvm./rust/deps/rustc-demangle-0.1.24/src/lib.rs    +   b       +   i             {size limit reached}           !  `fmt::Error` from `SizeLimitedFmtAdapter` was discarded  +   S  
   SizeLimitExhausted     
   
   
         ȏ ӏ                                                                                      ϓ ʓ ޓ   ԓ Ɠ ړ     ѓ 
   Ó ד  Error   "  
      #  $  %  capacity overflow       library/alloc/src/raw_vec.rs 
       A 
   &  a formatting trait implementation returned an error when the underlying stream did notlibrary/alloc/src/fmt.rs           library/alloc/src/str.rs      ?         3   �)) should be <= len (is `at` split index (is 
            cannot parse integer from empty stringinvalid digit found in stringnumber too large to fit in target typenumber too small to fit in target typenumber would be zero for non-zero typeattempt to add with overflow    
   attempt to subtract with overflow    !   attempt to multiply with overflow   @ !   attempt to negate with overflow l    attempt to shift right with overflow $   attempt to shift left with overflow  #   from_str_radix_int: must lie in the range `[2, 36]` - found  <   )..0123456789abcdef        :[called `Option::unwrap()` on a `None` value          L    L    index out of bounds: the len is  but the index is            ==!=matchesassertion `left  right` failed
  left: 
 right:          
 	    right` failed: 
  left:        ,    < 	   
 	   :          h        
      +  ,  -       { ,  {
,
} }((
,
]library/core/src/fmt/num.rs      i      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899assertion failed: *curr > 19           library/core/src/fmt/mod.rsfalsetrueМ    	  &   М    	     range start index  out of range for slice of length     & "   range end index X    & "   slice index starts at  but ends at  x     
   invalid utf-8 sequence of  bytes from index     Ɲ    incomplete utf-8 byte sequence from index    *   attempted to index str up to maximum usize  
 *    A 
3 Aо 
zlibrary/core/src/str/pattern.rs P    R     P    R  (   P    E     P    s     P    t      [...]begin <= end ( <= ) when slicing ``   Ɵ    ԟ    ؟        byte index  is not a char boundary; it is inside  (bytes ) of ` 
 
    &   =    E         is out of bounds of `  
 
   t        library/core/src/str/mod.rs       ,   library/core/src/unicode/printable.rs   Р %      6   Р %   
   +    	




$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_ZbST./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юno^"{-f/.
1
$	
+D*$$(4
NC7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&RK+*&
	N$	D

H'	u
B>*;
Qb
H
^"E


:

-- Chunk 171 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25501-25650
6,<dS
H	
FEHS
I
F

GI7
9
6;
V2
fu
ĊLc
0G9*\&
F
([eK9@
*	3
k
	`G	t<
spFz

W	GBP+>!p-@:*)L
DL=<U4,d
V
8

,	
w_

8
("NT

	6		%
 	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ @0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t

7	\
;
8F
t

ZY	

	L
1&
 *L
library/core/src/unicode/unicode_data.rs  (   P   (    (   \      library/core/src/escape.rs  ܦ    M      library/core/src/num/mod.rs          attempt to divide by zero   4      ] "`"|, 00`45`7
7
7 CaD!H
H$
I!K/aK;aY0
Y
a]04!ajabOobcd aege af g!i!kkk nll'
#G 	1-,


#
e
!
[
:
+,):7

:9

9:

=
27

:
9
HZ
	b		I7
$	f
^  


@
-3A"v	:
'10(	
 8:@R
2?
"e 





1


3! q}` / $]]   b

P"Ng
&
.0B
#
3d	y  
"
#/-C  *	 (  PF
1{6)
1
2$>
4	
_9%TUje 	  
(	.
 RzH 
4  ;	 ?@   . 	
 72 >! =  m  
`    
 $	 , @`0 `!  !

@na
 ԡ

 ߁"0a% !&0a&&A/
$
`*S&	) &+ V 	+@@ &5
t

-- Chunk 172 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25651-25800

e
  4 
& .
f; +P 
  P`$$t

 *	 3
3 @ @ UG
A
  
 > D        ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90
aH
L@4aPjQOo!RR aSeѡS !T UaW!YY  YZ p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  PF
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH 
4  ; ?Q  . 
 72 d =  m `                                                                                                                                                                                                         	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0    @ 2  3  4  5  6  7  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x     y  z  {  |  }  ~    S            T        V    W            Y    [        `    c    i    h        o    r    u                                                                                                                                                                                                                     	  
  
  
  
                              
  
  
         "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0  1  2  3  :  e,  ;  <  =    >  f,  A  B  C    D    E    F  G  H  I  J  K  L  M  N  O  p  q  r  s  v  w                                                                                                                                                                                                                {    |    }     P    Q    R    S    T    U    V    W    X  	  Y  
  Z  
  [  
  \  
  ]    ^    _    0    1    2    3    4    5    6    7    8    9    :    ;  
  <  
  =  
  >    ?     @  !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z  {  |  }  ~                                                                                                                                                                                                                                                                       	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  1  a  2  b  3  c  4  d  5  e  6  f  7  g  8  h  9  i  :  j  ;  k  <  l  =  m  >  n  ?  o  @  p  A  q  B  r  C  s  D  t  E  u  F  v  G  w  H  x  I  y  J  z  K  {  L  |  M  }  N  ~  O    P    Q    R    S    T    U    V       -    -    -    -    -    -    -    -    -    	-    
-    
-    
-    
-    -    -    -    -    -    -    -    -    -    -    -    -    -    -    
-    
-    
-    -     -    !-    "-    #-    $-    %-    '-    --    p    q    r    s    t    u    v    w    x    y    z    {    |    }    ~                                                                                                                                                                                                                                                                                              
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  
  
  
  
  
  
  
  	
  

-- Chunk 173 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25801-25950

  

  

  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  

  

  
   
  !
  "
  #
  $
  %
  &
  '
  (
  )
  *
  +
  ,
  -
  .
  /
  0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  :
  ;
  <
  =
  >
  ?
  @
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
  L
  M
  N
  O
  P
  Q
  R
  S
  T
  U
  V
  W
  X
  Y
  Z
  [
  \
  ]
  ^
  _
  `
  a
  b
  c
  d
  e
  f
  g
  h
  i
  j
  k
  l
  m
  n
  o
  p
  q
  r
  s
  t
  u
  v
  w
  x
  y
  z
  {
  |
  }
  ~
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
     
  
  

-- Chunk 174 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:25951-26100
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
       	    
    
    
    
                            
    
    (     )  !  *  "  +  #  ,  $  -  %  .  &  /  '  8  0  9  1  :  2  ;  3  <  4  =  5  >  6  ?  7  H  @  I  A  J  B  K  C  L  D  M  E  Y  Q  [  S  ]  U  _  W  h  `  i  a  j  b  k  c  l  d  m  e  n  f  o  g                                                                                                            p    q        r    s    t    u                v    w            z    {        x    y    |    }      &!    *!  k   +!     2!  N!  `!  p!  a!  q!  b!  r!  c!  s!  d!  t!  e!  u!  f!  v!  g!  w!  h!  x!  i!  y!  j!  z!  k!  {!  l!  |!  m!  }!  n!  ~!  o!  !  !  !  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $   ,  0,  ,  1,  ,  2,  ,  3,  ,  4,  ,  5,  ,  6,  ,  7,  ,  8,  	,  9,  
,  :,  
,  ;,  
,  <,  
,  =,  ,  >,  ,  ?,  ,  @,  ,  A,  ,  B,  ,  C,  ,  D,  ,  E,  ,  F,  ,  G,  ,  H,  ,  I,  ,  J,  ,  K,  
,  L,  
,  M,  
,  N,  ,  O,   ,  P,  !,  Q,  ",  R,  #,  S,  $,  T,  %,  U,  &,  V,  ',  W,  (,  X,  ),  Y,  *,  Z,  +,  [,  ,,  \,  -,  ],  .,  ^,  /,  _,  `,  a,  b,  k  c,  }
  d,  }  g,  h,  i,  j,  k,  l,  m,  Q  n,  q  o,  P  p,  R  r,  s,  u,  v,  ~,  ?  ,  @  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m                                                          "  #  $  %  &  '  (  )  *  +  ,  -  .  /  2  3  4  5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  y  z  {  |  }  y
  ~                          e                                                    f    \    a    l    j                S                              §  ç  ħ    ŧ    Ƨ  
  ǧ  ȧ  ɧ  ʧ  Ч  ѧ  ֧  ק  ا  ٧      !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  0  P  1  Q  2  R  3  S  4  T  5  U  6  V  7  W  8  X  9  Y  :  Z    (  )  *  +  ,  -  .  /  0 	 1 
 2 
 3 
 4 
 5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C 
 D 
 E 
 F  G   H ! I " J # K $ L % M & N ' O                                                                         p  q  r  s  t  u  v  w  x  y  z  |  }  ~                                            
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

-- Chunk 175 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account-wasm-updatable-event-aarch64.wasm:26101-26177
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                 @n `n An an Bn bn Cn cn Dn dn En en Fn fn Gn gn Hn hn In in Jn jn Kn kn Ln ln Mn mn Nn nn On on Pn pn Qn qn Rn rn Sn sn Tn tn Un un Vn vn Wn wn Xn xn Yn yn Zn zn [n {n \n |n ]n }n ^n ~n _n n   "  #  $  %  &  '  (  )  * 	 + 
 , 
 - 
 . 
 /  0  1  2  3  4  5  6  7  8  9  :  ;  <  = 
 > 
 ? 
 @  A   B ! C &   
   &   &   &   8 ^ {  ǘ

=== File: integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1-150
 asm   `` ` `` `` ` ` ` ` `~`  ``` ``~~~ `~`~ `~~`~ `~ `
``~`~ envdb_read envdb_write env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize  env
addr_humanize  envsecp256k1_verify envsecp256k1_recover_pubkey enved25519_verify enved25519_batch_verify envdebug env
query_chain envabort       		        	                               	

	

               
              

   
      
       
 
           
            p A 
 A 
 A 

memory 
instantiate Ksudo Lexecute tquery u__getrandom_custom vinterface_version_8 allocate 
deallocate requires_stargate requires_iterator 
__data_end
__heap_base	 A
lDIH@CCGEFBBBAAACPCWXDIH?k[UV]^T\_odVpqDIHCDPmmmnnnhiDIHCCVCClCCCCClClDIHCCkDIHCCCCCDICCCGEDllCClCCCGDCCCDCC
Χ~# A k"$     A@k @@ (@"AG@ A
j A j") 7   )D7  )T7$  6 A@k  (@"AG
   )7   Aj A(j( 6   Aj A j) 7   Aj Aj) 7 

 A8j A j) "7   )D"70  A
j 7    7  A6 

  Aj )D7   Aj ( 6   A6    6 AI AjAr (@ (
 A j
" Aj( E
   ( 
 A j$ 
:~# A k"
$  
Aj @@@ 
- Aq@ 
- 	"A"F
 A F
  B7 

  B 7 

 
Aj *@ 
("AF@A!

   
/ ; 	  A
j 
- :   
- !  A
j 
)7   Aj :  
  A6    6

 # A k"
$  
Aj *@@ 
("AF@ 
- ! 
Aj  
("AF

 
Aj" 
- :   
 
/ ;
 
- ! 
(! 
(
!   6   
/
; 	  A6   Aj :    Aj 6   A
j 6   A
j -  :  

@@@@ Ak 
# A k"$  A@k!
A !# Ak"$  A8j @@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  - 4! A(j (0"A! - (AqE@A !


 Aq!@@@ - )""
A,G@ 
A G


 @A!A !

  A j  -  Aq
A!A !


 
A	!A !


 - !!
A ! Aq"	A F@A !	


 	A"G@A !	A!


 Aj  ("AG@A !	
	
 A jAr!@@@ - " 
 Aj  ("	AG
 A j  (pAG
 (|! (x!
 (t!	A 

 Aj  ("AG@A !	

 A j  (pAG@A !	

 (|! (x!A !	 (t

 Aj  ("AG@A !	

 A j  (pAG@A !	
	
A !	A 
! Aj  - AqE
 - !@ Aq"A,G@A	! A G

A! ! "E



  Aj  - AqE@A!


 - "A"G@ A F

A!


 Aj  ("AG
	@@@@@ - " 
 Aj  ("AG


-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:151-300
 A j  (pAF



 	E
 A@kArA Ab

 @ A@kArA Ab

 Aj  ("AG
 A j  (pAG
 (|! (x! (t!

 Aj  ("	AG
 A j  (pAG
 (|! (x!
 (t!	
 Aj  - 	! - Aq
 



 
B 7 

 
B7 

  )7  Aj Aj( 6   6p
 A j A j) 7   )p7D


  )7  Aj Aj( 6   	6p
 A j A j) 7   )p7DA !	
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 !  ) 7`  Aj(  6 g - !

A!
 A j :   A j ( g6    6D  )`7 I

 AjA A` (AG
 Aj( ! Aj( ! (!A !A !
 	
 AjA A` (AF@ Aj( ! Aj( !
 (!	

 A j Aj) 7   )7D E
 

 A j Aj) 7   )7D
A !
A ! 	E 
Er
  	
 E E rrE@ 
 )D! 
A
j A j) 7  
 7 
A6 

  6X  
6T )T! A@k  (@"AF@ 
 7 
 	6 
 6
 
 6 
 6 
A6 

 
Aj )D7  
Aj A j( 6  
A6  
 6 @ 
 E
  	
 Aj$ @@@ (@"AG@ A
j A j) 7   )D7  )T7$  6 Aj  AjAr! - AqE
 - 	A G
   Aj A(j( 6   Aj A j) 7   Aj Aj) 7    )7 

 A8j A j) "7   )D"70  A
j 7    7  A6 

  B 7  AO@ (@ (
 A j!
 Aj( E
 ( 

  B7  AO@ (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!# Ak"$  A8j @@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  - 4! A(j (0"A! - (AqE
 Aq!@ - )""
A,G@ 
A F
 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 Aq"A F
	 A"G@A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG
 A j  (pAG


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - AqE
 - !@ Aq"A,G@A	! A G

 	E



  Aj  - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:301-450
 A j  (pAF


 	@ A@kArA Ab E


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - 	! - Aq
 



 B 7 


 B7 


 A jAr" )7  Aj Aj( 6   	6p
 A j A j) 7   )p7D
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 AjA A` (AF@ Aj( !
 Aj( ! (!	

 A j Aj) 7   )7D

 !  ) 7`  Aj(  6 g - !


  
6L )L! A@k  (@"AF@  7
  6  	6 A6 

 Aj )D7  Aj A j( 6  A6   6 E
 	

A!
 A j 
:   A j ( g6    6D  )`7 I
 	E Er

 	
 )D! A
j A j) 7   7 A6 
 Aj$ @@@ (@"AG@ A
j A j) 7   )D7  )T7$  6 Aj  AjAr! - AqE
 - 	A G
   Aj A(j( 6   Aj A j) 7   Aj Aj) 7    )7 

 A8j A j) "7   )D"70  A
j 7    7  A6 

  B 7  AO@ (@ (
 A j!
 Aj( E
 ( 

  B7  AO@ (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!# Ak"$  A8j @@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  - 4! A(j (0"A! - (AqE
 Aq!@ - )""
A,G@ 
A F
 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 Aq"A F
	 A"G@A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG
 A j  (pAG


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - AqE
 - !@ Aq"A,G@A	! A G

 	E



  Aj  - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG
 A j  (pAF


 	@ A@kArA Ab E


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - 	! - Aq
 



 B 7 


 B7 


 A jAr" )7  Aj Aj( 6   	6p
 A j A j) 7   )p7D
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 AjA A` (AF@ Aj( !
 Aj( ! (!	

 A j Aj) 7   )7D

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:451-600

 !  ) 7`  Aj(  6 g - !


  
6L )L! A@k  (@"AF@  7
  6  	6 A6 

 Aj )D7  Aj A j( 6  A6   6 E
 	

A!
 A j 
:   A j ( g6    6D  )`7 I
 	E Er

 	
 )D! A
j A j) 7   7 A6 
 Aj$ @@@ (@"AG@ A
j A j) 7   )D7  )T7$  6 Aj  AjAr! - AqE
 - 	A G
   Aj A(j( 6   Aj A j) 7   Aj Aj) 7    )7 

 A8j A j) "7   )D"70  A
j 7    7  A6 

  B 7  AO@ (@ (
 A j!
 Aj( E
 ( 

  B7  AO@ (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!# Ak"$  A8j @@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  - 4! A(j (0"A! - (AqE
 Aq!@ - )""
A,G@ 
A F
 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 Aq"A F
	 A"G@A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG
 A j  (pAG


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - AqE
 - !@ Aq"A,G@A	! A G

 	E



  Aj  - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
@ - "
@ Aj  ("AG
 A j  (pAF


 	@ A@kArA Ab E


 Aj  ("	AG
 A j  (pAG
 (|!
 (x! (t!	
 Aj  - 	! - Aq
 



 B 7 


 B7 


 A jAr" )7  Aj Aj( 6   	6p
 A j A j) 7   )p7D
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 AjA A` (AF@ Aj( !
 Aj( ! (!	

 A j Aj) 7   )7D

 !  ) 7`  Aj(  6 g - !


  
6L )L! A@k  (@"AF@  7
  6  	6 A 6 

 Aj )D7  Aj A j( 6  A6   6 E
 	

A!
 A j 
:   A j ( g6    6D  )`7 I
 	E Er

 	
 )D! A
j A j) 7   7 A6 
 Aj$ @@@ (@"AG@ A
j A j) 7   )D7  )T7$  6 Aj  AjAr! - AqE
 - 	A G
   Aj A(j( 6   Aj A j) 7   Aj Aj) 7    )7 

 A8j A j) "7   )D"70  A
j 7    7  A6 

  B 7  AO@ (@ (
 A j!
 Aj( E
 ( 

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:601-750

  B7  AO@ (@ (
 A j!
 Aj( E
  ( 
 A j$ 
 
A j$ 
 
A j$ 

~# A0k"$  Aj"
   Aj!# Ak"$  A8j 
@@@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4! A(j (0"A! - (AqE
	 Aq!@@@ - )"
"A,G@ A G


 @A!


  A j  -  Aq
A!


 
A	!


 - !!

 
Aq"A F
 A"G@A!


 Aj 0 ("AG
@@@ - "
 
 Aj  ("	AG
 Aj & (AG
 (! (!
 (!	A 

 Aj  ("AG
	 Aj  ("AG
	 (! (!
 (

 Aj  ("AG
 Aj  (AG
A 
! Aj  - AqE
	 - !@ Aq"A,G@A	! A G

A!
 
! "E




  Aj  - AqE@A!


 - "A"G@ A F
A!


 Aj 0 ("AG
@@@@@@ - "
 
 Aj  ("AG
 Aj  (AF



 	E
 A jArAπ Ab

 @ A jArAɀ Ab

 Aj  ("AG

 Aj  ("AF



 Aj  ("	AG
 Aj & (AG
 (! (!
 (!	

 (! (!
 (!
 Aj  - 	! - Aq
 

	
 B 7 

 B7 

 AjAr" )7  Aj Aj( 6   	6
 A j Aj) 7   )7lA !	


 Aj Aj( 6   )7  6
 A j Aj) 7   )7l

 !  ) 7  Aj(  6  - !


 (! (! A j (6  A j 6  A j 6   6l

A!
 A j 
:   A j ( 6    6l  )7 q

 AjAɀ A` (AG
 Aj( ! Aj( ! (!A !
A !
 	
 AjAπ A` (AF@ Aj( ! Aj( !
 (!	

 A j Aj) 7   )7l E
 

 A j Aj) 7   )7l
A !
A !
 	E
  @ 	Aj!@ Aj( @ ( 
 A j! Ak"
 

 
E
  	
 
E E 
rr
 

  
6x  	6t  6p  6l E

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:751-900
  A j A j"Ar"Aj) 7   6T  6@  ) 7D  
 (h"AG
  )@7  Aj A j) 7  Aj A j) 7 

 A j A j) "7   )l"7X A
j 7   7 A 6 

 Aj )l7  Aj A j( 6  A 6   6 (D@ 
 A j"("@ ( Aj!@ Aj( @ ( 
 A j! Ak"
 

 A j( E
  (L
 Aj$ @@ ("@ (,! ((!
 ($! ( ! (
! Aj Aj ("AG
   6   
6   6
   6   6   6 

 )
!  A
j A$j) 7    7  A 6 

  Aj )
7   Aj A$j( 6   A 6    6 @ 
 @ Aj! @  Aj( @  ( 
  A j!  Ak"
 

 
E
  
 A0j$ 
 @@@@  -   
  Aj( @  (
  Aj( @  (
  A
j

  Aj( @  (
  Aj

  Aj( @  (
  Aj

  Aj( @  (
  Aj
" Aj( @  ( 

~  Aj( "@  ( "!@ Aj( @ ( 
 A
j! Ak"
 
 
  A$j( @  ( 
  A0j( @  (,
  A<j( @  (8

~# A k"$  Aj"
   A8j!# Ak"$  A@k 
@@@@@@@@@@@@@@@ - @Aq@ - AA G
 
 A8j 
 - <! A0j (8"A! - 0AqE

 Aq!@@@ - 1"	A,G@ 	A G


 @A!

  A(j  - (Aq
A!

 
A	!

 - )!	
 	Aq"A F
 A"G@A!

 Aj 4 ("AG@ !

@@@@ - " 
 Aj  ("AG
 Aj 7 (AG
 (! (!
 (!A

 Aj  ("AG

 A j  -  AqE@A!


 - !A G@ Aj . ("AG

 (!
A

  Aj A A ("AG

A 

 Aj  ("AG
 Aj 8 ("E
 Aj Aj) 7   )7 (!	 )!A

 Aj  ("AG
 Aj  (AG
A
!
 Aj  - AqE

 - !@@@@@@@@@@@ Aq"A,G@A	! A G
 E
 E@ AjA A` (AG
 Aj( !
 Aj( ! (!
 A j Aj) 7   )7p A j" A j") 7   
6l  6  )l7H )! (|! A j 
 (h"
AG
  
A  
AG6   )H7  70  
6,  6(  7   	6
  6  6 A
j ) 7 

  Aj  - AqE@A!

 - "A"G@ A F
A!

 Aj 4 ("AG
 - "
 A j Aj) 7   )7lA! 	E@A !A !	

 A !

 Aj  ("AG
 Aj  (AF


 E
 A jArA Ab

 
AF

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:901-1050
 A jArA A
b

 E
 A jArA Ab

 Aj )l7  Aj ( 6  A6   
6 	@ 
 
E
 

 Aj  ("AG
 Aj 8 ("E
 Aj Aj) 7   )7 (!	 )!

 Aj  ("AG

 Aj  - AqE@A!


 - 	A F@  Aj A A ("AG

A !


 Aj . ("AG

 (!
A!


 Aj  ("AG
 Aj 7 (AG
 (! (!
 (!
  A! - ! -  Aq
 



 B 7 

 B7 


 Aj Aj( 6   )7  6
	
 AjAr" )7  Aj Aj( 6   6
 A j Aj) 7   )7lA !
	
 Aj Aj( 6   )7  6
 A j Aj) 7   )7l

  ) 7  Aj(  6  - !

 (!
 (!
 (!

 A j 
6  A j 
6  A j 
6   6l

A!

 AjA A`
 A j Aj) 7   )7lA !

 A j :   A j ( 6    6l  )7 q
 E 
ErE@ 
 	E E rrE@ 
 A j A j) "7   )l"7X A
j 7   7 A6 
 Aj$ @@ (8"AG@ A j" A j") 7   )<7 (L!	 (P! (T! )X! (`! (d! )h! A8j Aj (8"
AG
   6    )7   70   6,   6(   7    6
   6   	6  A
j ) 7 

 A0j A j) "7   )<"7(  A
j 7    7  A6 

  Aj )<7   Aj ( 6   A6    
6 @ 
 E
  
 A j$ 
# A k"$  Aj A!@ - AqE
 A
!@@@ - "A-k   
A! A1kAqA	O
  Aj  A0k! - AqE
 - "A0I A9Kr
@  AqA
l"Av@A
!

 Aq A0kAqj"Aq G@A
!

 Aj  - AqE
 - 	"A0I
 A:I
 


 A !
   : A!
   6  A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

AA  /  A /  G!

AA A A!

AA A A	!
  A6    : 

A!@@@@ Ak 
AA  /  A /  G!

AA A A!

AA A A	!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    R

    R E
 

  A6 


-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1051-1200
  A6 

 )!   (
6
   7   6 
 A j$ 

~# Ak"$  A j @@@@@@@@@@ - PAq@@@ - Q"A k#	
	 
 A"k
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 


  A6 
	
 Aj  - AqE
 - A"G
  Aj  ("AG
 ("E@  A6 
	
 Aj( !  A6  E
 

 A8j  - 8Aq@A! - 9A G
  A0j  - 4! A(j (0"A!A!@ - (AqE
  - )! Aq!@@@@ Aq"A,G@ A F
 E
A !

  A j A! -  AqE@A!

 - !!

A!A!

 Aj A! ("AF
   )7  A
j Aj( 6    6 


 AqA F@A!A!

 Aj  ("AG@  ) 7  Aj(  6  - !

 Aj A! - ! - Aq
 
A!
   :    )7   A
j ( 6     6 

  A6 

 )!   (6
   7   6 

  A6 

  A6 

  A6 

  A
6 

 A j @@ - HAq@@ - IA F@  A@k  (@!  - DAq: \  6X A j A j (p"AF@@ - tE
 Aj (X"@@ ("AG@ Aj Aj( 6   )7

 Aj  ("AF

  ) 7`  Aj(  6 g - !

 A j A j (p"AF
 

  ) u7`  A j(  6 g - t!

  A6 

 Aj  ("AF
   )7  A
j Aj( 6    6 

  A6 

  A6 

   )`7   A
j ( g6     :    6 

   6 
 Aj$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@ ("AF@ A
j( ! Aj( ! ("
 AG
 A AE
  Aj" A A
 A:  

 )!   (
6
   7   6 

  A : 

  Aj
A:  
  A6 

@ AF@ A A@  Aj" A A
 A:  

  A : 

  Aj
A:  
  A6  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@@ - Aq@ - 	A"G
  Aj @@@ ("AF@ A
j( ! Aj( ! ("
 
A!

 )!   (
6
   7   6 

 A N"E
A -    "E

   !  A
j 6   Aj 6    6  A6 

   6  A6   A
j 6   Aj 6 

  A6 

  A6 

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1201-1350

 
   
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@ ("AF@ A
j( ! Aj( ! ("
 AF@ )  A )  Q

    A Aa

 )!   (
6
   7   6 

  A6 

@@ AF@ )  A )  Q

    A Aa

  A6 
 E
 

  A6 

  A6 
 A j$ 
# A k"$  Aj A!@ - AqE
 A!@ - 	A k"@ AF@


 
  Aj A AA! ("AF@  A : 

   )7  A
j A
j( 6  !

  Aj A AA! ("AG@   )7  A
j A
j( 6  !

  A: 
   6  A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ A AA G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ A AA G!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ A AA G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ A AA G!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@ ("AF@ A
j( ! Aj( ! ("
 AF@ /  AЪ /  F

    A Aa

 )!   (
6
   7   6 

  A6 

@@ AF@ /  AЪ /  F

    A Aa

  A6 
 E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
    >

 )!   (
6
   7   6 

    > E
 

  A6 

  A6 
 A j$ 
	~# A k"$  Aj @@@ - Aq@ - 	A G
    Aj! ( ! - Aq!# A@j"$   : 
  6 A 6 B7 A j"Ar!  Aj@@ ( E@ A(j"Aj! Aj!	@@ ($"
E
 (" (F@ Aj } (!
 ( Alj" ) 7  
6  A
j ) 7  Aj 	( 6   (Aj6 A j Aj ( E
 
  ) 7  Aj Aj) 7  ("E
 (!@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 


  )7 A6  A
j Aj( 6 

  ) 7  Aj Aj) 7 
 (E
  (
 A@k$  ("AG
 A
j"( ! Aj( ! (! Aj  ("AF@   6  A6   A
j 6   Aj 6 

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1351-1500

   )7  A
j ( 6    6  @ !@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 

 E
 

  A6 

  A6 

 )!
   (
6
   
7   6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@ ("AF@ A
j( ! Aj( ! ("
 AF@ Aī AE

    Aث Aa

 )!   (
6
   7   6 

  A6 

@@ AF@ Aī AE

    Aث Aa

  A6 
 E
 

  A6 

  A6 
 A j$ 
Z~# A k"$  Aj @@@ - Aq@ - 	"A"F
 A F
  A:    A
6

  A:    A6

 Aj *@ ("AF@A!

   / ; 	  A
j - :   - !  A
j )7   Aj :  
  A:     6

 # Ak"$  A j *@@ (h"AF@ - l! A j  (h"AF

 A&j"
 - o:    / m;$ - l! (p! (t!   6   /$; 	  A:    Aj :    Aj 6   A
j 6   A
j 
-  :  

@@@@ Ak 
 A j!A !# Ak"$  A0j @@@@@@@@@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A G
  A(j  - ,!
 A j (("A! -  AqE
 
Aq!@@@ - !"
"
A,G@ 
A G


 @A!

  Aj  - Aq
A!

 
A	!

 - !

 
Aq"
A F

 
A"G@A!

 Aj $ ("AG

 AjAr!@@@@@ - " 
 Aj  ("AG
 Aj  (AG
 (! (!
 (!A 

 Aj  ("AG

 Aj  (AG

 (!	 (! (

 Aj  ("AG
	 Aj  (AG
 (! (!
 (

 Aj  ("
AG
 Aj  (AG
 - !
A

 Aj  ("
AG

 Aj  (AG
A 
!A 
!A 
! Aj  - AqE
 - !
@ 
Aq"
A,G@A	! 
A G
 E


  Aj  - AqE@A!

 - 	"
A"G@ 
A F
A!

 Aj $ ("AG

@@@@@@@@@ - " 
 Aj  ("
AG
 Aj  (AF

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1501-1650


 E
 A jArA Ab

 E
 A jArA Ab


 E
 A jArA Ab


 E@ Aj  ("
AG
 Aj  (AG
	 - !
A!

 A jArA Ab


 Aj  ("AG
 Aj  (AG
	 (! (!
 (!

 Aj  ("AG
	 Aj  (AG
 (!	 (! (!

 Aj  ("AG
 Aj  (AG

 (! (!
 (!
   - !
 -  Aq
 


 A:   A6

 A:   A6

  )7  Aj Aj( 6   
6
 Aj Aj) 7   )7|

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !


 Aj Aj( 6   )7  
6
 Aj Aj) 7   )7|


 !  ) 7  Aj(  6  - !
	
A!

 AjA A` (AG
 - !

 
! "E@ AjA A` (AG
 Aj( ! (! Aj( !
 !
 "E@ AjA A` (AG
 Aj( !	 Aj( !
 (!
 E@ AjA A` (AG
 Aj( !
 (! Aj( !
 Aj" 6  A j"
 6   A j 6   6  6  6 A j" Aj)  7   
6 A j ) 7   6|  
: y  	6  
6  ) y7`  )7L A j" 
(  6   A j ) 7    )`7 9 A: 8 A j  (x"AG
  )87  A j A j) 7  Aj A j) 7  Aj ) 7  Aj A@k) 7 
	
 Aj Aj) 7   )7|

 Aj Aj) 7   )7|

 Aj Aj) 7   )7| 
E
 

 Aj Aj) 7   )7|A !A!A !


 Aj )|7  Aj Aj( 6  A:    6 A8j

 A G!
 E! E
 

 Aj :   Aj ( 6    6|  )7 
A !
A!
 E 
ErE@ 
 E E AsrrE@ 
 
E E 
rrE@ 
 A j Aj) "7    )|"7 c A
j 7    7  A:  
 Aj$ @ - h"
AG@ A j" A j(  6   A j" A j)  7  A j Aj) 7  A j Aj( 6  A1j ) 7   A8j (  6    ) i"7P  )|7<  7 )  
: ( A j  -  AqE
 - !A F@   A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj A0j) 7    )(7 

  A:    A
6 A(j

 A j A j) "7    )l"7 S  A
j 7     7   A:  

  A:    A6 A(j

 A j!
A !# Ak"$  A0j @@@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A G
  A(j  - ,! A j (("A! -  AqE@A !


 Aq!@@@ - !"	"
A,G@ 
A G
A !

 @A!A !

  Aj  - Aq
A!A !

 
A	!A !

 - !	
A ! 	Aq"

-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1651-1800
A F

 
A"G@A!


 Aj % ("AG
 AjAr!@@@@ - " 
 Aj  ("AG

 Aj  (AG

 (!
 (!	 (!A 

 Aj  ("AG
 Aj  (AG
	 (! (!
 (

 Aj  ("AG
 Aj  (AG
 - !A

 Aj  ("AG
 Aj  (AG

A 
!A 
!
 Aj  - AqE

 - !@ Aq"A,G@A	! A G
 
E


  Aj  - AqE@A!

 - 	"A"G@ A F

A!

 Aj % ("AG

@@@@@@@ - " 
 Aj  ("AG
 Aj  (AF


 E
 A jArA A	b

 E
 A jArA Ab

 
E@ Aj  ("AG
 Aj  (AG
 - !A!


 A jArA Ab

 Aj  ("AG
 Aj  (AG
 (! (!
 (!

 Aj  ("AG
 Aj  (AG
	 (!
 (!	 (!
   - ! -  Aq
 



 
A:   
A6

 
A:   
A6

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|


  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !


  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !

 Aj Aj( 6   )7  6
 Aj Aj) 7   )7|

 !  ) 7  Aj(  6  - !

A!
 Aj :   Aj ( 6    6|  )7 

 AjA A` (AG
 - !
 
!@@ "E@ AjA A` (AG
 Aj( ! Aj( ! (!
 E


 Aj Aj) 7   )7|A !

 AjA A	` (AF@ Aj( !
 Aj( !	 (!

 A G! Aj Aj) 7   )7| E
 

 Aj Aj) 7   )7|
A ! E 	Er
  
 
E E rrE@ 
 A j Aj) "7    )|"7 c 
A
j 7   
 7  
A:  

 A j" 6    6  6  6 A j"
 Aj)  7  A j Aj) 7  A j Aj( 6   6|  : y  
6  	6  ) y7`  )7L A j" (  6   A j 
) 7    )`7 9 A: 8 A j  (x"AF@ 
 )87  
A j A j) 7  
Aj A j) 7  
Aj ) 7  
Aj A@k) 7 

 
Aj )|7  
Aj Aj( 6  
A:   
 6 A8j
 Aj$ @ - h"
AG@ A j" A j(  6   A j" A j)  7  A j Aj) 7  A j Aj( 6  A1j ) 7   A8j (  6    ) i"7P  )|7<  7 )  
: ( Aj  - AqE

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1801-1950
 - A F@   A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj A0j) 7    )(7 

  A:    A
6 A(j

 A j A j) "7    )l"7 S  A
j 7     7   A:  

  A:    A6 A(j

 A j!
A !# Ak"$  A0j @@@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A G
  A(j  - ,! A j (("A! -  AqE@A !


 Aq!@@@ - !"
"
A,G@ 
A G
A !

 @A!A !

  Aj  - Aq
A!A !

 
A	!A !

 - !

A ! 
Aq"
A F@


 
A"G@A!


 Aj  ("AG@


 AjAr!@@@@ - " 
 Aj  ("	AG

 Aj  (AG

 (! (!
 (!	A 

 Aj  ("AG@
	
 Aj  (AG@


 (! (!
 (

 Aj  ("
AG@

 Aj  (AG@

 - !A

 Aj  ("
AG@


 Aj  (AG@


A 
!A 
! Aj  - AqE

 - !
@ 
Aq"
A,G@A	! 
A G
 E


  Aj  - AqE@A!

 - 	"
A"G@ 
A F

A!

 Aj  ("AG

@@@@@@@ - " 
 Aj  ("
AG
 Aj  (AF


 	E
 A jArA A	b

 E
 A jArA Ab

 E@ Aj  ("
AG
 Aj  (AG
 - !A!

 A jArA Ab

 Aj  ("AG
 Aj  (AG
 (! (!
 (!

 Aj  ("	AG
 Aj  (AG
	 (! (!
 (!	
   - !
 -  Aq
 



 
A:   
A6

 
A:   
A6

  )7  Aj Aj( 6   
6
 Aj Aj) 7   )7|


  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !


  )7  Aj Aj( 6   	6
 Aj Aj) 7   )7|A !	

 Aj Aj( 6   )7  

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:1951-2100
6
 Aj Aj) 7   )7|

 !  ) 7  Aj(  6  - !

A!
 Aj :   Aj ( 6    6|  )7 

 AjA A` (AG
 - !
 
! !@@ E@ AjA A` (AG
 Aj( ! Aj( ! (!
 	E


 Aj Aj) 7   )7|A !

 AjA A	` (AF@ Aj( ! Aj( !
 (!	

 A G!
 Aj Aj) 7   )7| E
 

 Aj Aj) 7   )7|
A !
 	E 
Er
  	
 
E E 
rrE@ 
 A j Aj) "7    )|"7 c 
A
j 7   
 7  
A:  

 A j" 	6    	6  6  6 A j"
 Aj)  7  A j Aj) 7  A j Aj( 6   6|  : y  6  
6  ) y7`  )7L A j" (  6   A j 
) 7    )`7 9 A: 8 A j  (x"AF@ 
 )87  
A j A j) 7  
Aj A j) 7  
Aj ) 7  
Aj A@k) 7 

 
Aj )|7  
Aj Aj( 6  
A:   
 6 A8j
 Aj$ @ - h"
AG@ A j" A j(  6   A j" A j)  7  A j Aj) 7  A j Aj( 6  A1j ) 7   A8j (  6    ) i"7P  )|7<  7 )  
: ( Aj  - AqE
 - A F@   A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj A0j) 7    )(7 

  A:    A
6 A(j

 A j A j) "7    )l"7 S  A
j 7     7   A:  

  A:    A6 A(j

 A j!
A !# Ak"$  A0j @@@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A G
  A(j  - ,! A j (("A! -  AqE@A !


 Aq!@@@ - !"
"
A,G@ 
A G
A !

 @A!A !

  Aj  - Aq
A!A !

 
A	!A !

 - !

A ! 
Aq"
A F@


 
A"G@A!


 Aj  ("AG@


 AjAr!@@@@ - " 
 Aj  ("	AG

 Aj  (AG

 (! (!
 (!	A 

 Aj  ("AG@
	
 Aj  (AG@


 (! (!
 (

 Aj  ("
AG@

 Aj  (AG@

 - !A

 Aj  ("
AG@


 Aj  (AG@


A 
!A 
! Aj  - AqE

 - !
@ 
Aq"
A,G@A	! 
A G
 E


  Aj  - AqE@A!

 - 	"
A"G@ 
A F

A!


-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2101-2250
 Aj  ("AG

@@@@@@@ - " 
 Aj  ("
AG
 Aj  (AF


 	E
 A jArA A	b

 E
 A jArA Ab

 E@ Aj  ("
AG
 Aj  (AG
 - !A!

 A jArA Ab

 Aj  ("AG
 Aj  (AG
 (! (!
 (!

 Aj  ("	AG
 Aj  (AG
	 (! (!
 (!	
   - !
 -  Aq
 



 
A:   
A6

 
A:   
A6

  )7  Aj Aj( 6   
6
 Aj Aj) 7   )7|


  )7  Aj Aj( 6   6
 Aj Aj) 7   )7|A !


  )7  Aj Aj( 6   	6
 Aj Aj) 7   )7|A !	

 Aj Aj( 6   )7  
6
 Aj Aj) 7   )7|

 !  ) 7  Aj(  6  - !

A!
 Aj :   Aj ( 6    6|  )7 

 AjA A` (AG
 - !
 
! !@@ E@ AjA A` (AG
 Aj( ! Aj( ! (!
 	E


 Aj Aj) 7   )7|A !

 AjA A	` (AF@ Aj( ! Aj( !
 (!	

 A G!
 Aj Aj) 7   )7| E
 

 Aj Aj) 7   )7|
A !
 	E 
Er
  	
 
E E 
rrE@ 
 A j Aj) "7    )|"7 c 
A
j 7   
 7  
A:  

 A j" 	6    	6  6  6 A j"
 Aj)  7  A j Aj) 7  A j Aj( 6   6|  : y  6  
6  ) y7`  )7L A j" (  6   A j 
) 7    )`7 9 A : 8 A j  (x"AF@ 
 )87  
A j A j) 7  
Aj A j) 7  
Aj ) 7  
Aj A@k) 7 

 
Aj )|7  
Aj Aj( 6  
A:   
 6 A8j
 Aj$ @ - h"
AG@ A j" A j(  6   A j" A j)  7  A j Aj) 7  A j Aj( 6  A1j ) 7   A8j (  6    ) i"7P  )|7<  7 )  
: ( Aj  - AqE
 - 	A F@   A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj A0j) 7    )(7 

  A:    A
6 A(j

 A j A j) "7    )l"7 S  A
j 7     7   A:  

  A:    A6 A(j
 Aj$ 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

 /  A /  GAt!

 A AE@A!

AA A A!

AA A A!
  A6    : 

A!@@@@ Ak 
 /  A /  GAt!

 A AE@A!

AA A A!

AA A A!

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2251-2400
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

AA  /  A /  G!

AA A A!

AA A A	!
  A6    : 

A!@@@@ Ak 
AA  /  A /  G!

AA A A!

AA A A	!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"	$  	Aj @@@ 	- Aq@ 	- 	A G
  	  	Aj!
 	( !
 	- Aq!# A k"$  A 6( B7  Aj 
@@ - AqE@B!

 - ! A j! A j!@@@ Aq"A,G@ A F
 @A !

B!

 
 Aj 
 - AqE@B!

 - !

 
 ) 7 
A6  
A
j A(j( 6 

 AqA F@B!

 A@k!A !A !A !
B !B !B !A !# Ak"$  A0j 
@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A F@ 
 A(j 
 - ,! A j ((" -  AqE@A!


 Aq!@@@ - !""
A,G@ 
A G


 @A!A !

  Aj  - Aq
A!A !


 
A	!A !


 - !
A ! Aq"
A F
	A! 
A"G
 A j 2 (h"AG
@@@ - l" 
 Aj  ("AG
 A j ' (h
 A j) ! )p!B!A 

 A j  (h"AG
 Aj  (AG
 (!
 (!
 (

 A j  (h"AG
 Aj  (AG
A 
! Aj  - AqE@A!


 - ! A j!@ Aq"A,G@A	! A G

A! 
! "E



  Aj  - AqE@A!


 - 	"A"G@A! A F




 A j 2 (h"AG
	@@@@@@ - l" 
 A j  (h"AG

 Aj  (AF



 
 Aj  ("AG
	 A j ' (h
 ) ! )p!B!

 E
 A8jA Ab

 A8jA Ab

 A j  (h"AG
 Aj  (AG
 (!
 (!
 (!
   - ! -  Aq
 
A!


 A 6 A6 


-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2401-2550
 A 6 A6 

 AjAr" )l7  Aj A j( 6   6
 A@k Aj) 7   )78A !
	
 A j" )7  Aj Aj( 6   6l
 A@k A j) 7   )l78

 Aj A j( 6   )l7  6
 A@k Aj) 7   )78

  ) m7X  A j(  6 _ - l!

A!
 A j ( _6    : <  68  )X7 =

 A jA A` (hAG
 A j( !
 A j( ! (l!A !A !
 
 A jArA A` A@k A j) 7   )l78 E
  
 
E E rr
 

 A@k A j) 7   )h78
 A@k) ! )8!

  
6P E
  )P! A8j 
 (8"AF@  7   7  6  6  7

  )<7 A
j A j( 6  A 6  6  E
 

  7  A 6  7
 Aj$  ) ! )@! (P"E@ !

 A8j" Aj( 6   ) 70 ((" ($F@ A j!# A k"$ @@ Aj"E
 A Aj( "
At"   K" AM"At! A IAt!
@ 
@ A6  
At6  ( 6

 A 6
  
  Ajz (! ( E@  6  Aj 6 

 AxF
 E
   Aj(  
 
 A j$  ((!
 (  Atj" 6  )07 A
j ( 6   7  7   ((Aj6( Aj 
 - 	! - Aq
 
B!
 
 7  
 7 (("@ ( Aj!@ Aj( @ ( 
 A j! Ak"
 

 ($E
  ( 
 A j$  	("AG
 	A
j"
( ! 	Aj( ! 	(! 	Aj  	("AF@   6  A6   A
j 6   Aj 6 

   	)7  A
j 
( 6    6  @ Aj!@ Aj( @ ( 
 A j! Ak"
 

 E
 

  A6 

  A6 

 	)!   	(
6
   7   6 
 	A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    J

    J E
 

  B 7 

  B7 

 )!  Aj (
6   Aj 7    6  A6 
 A j$ 
~# Ak"$  Aj @@@@ - Aq@ - 	"A-k
  A6 

  A
6 

   B7 

 A1kAqA	O@  A6 

  A0kAq!@  @@ -  AqE
  - "A0I
  A:I

  A6    6

  B
~"! B PE@   6  A
6 

   A0kAqj"M
 
  A
6 
 Aj$ 
~# A k"$  Aj @@@@ - Aq@ - "A-k
  A6 

  A
6 

   A6   B 7

 A1kAqA	O@  A6 

  A0kB!@ Aj @@ - AqE
  - "A0I
  A:I

  A6    7

   B B

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2551-2700
 ) ! )PE@   7  A
6 

   A0kB|"X
 
  A
6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    y

    y E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 		
 A AE
	

 A A
  A6   A: 
	
@@ Ak 
 A AE


 A A
  A6   A: 

  A6 

  A6 

 )!   (
6
   7   6 

    A Ac

  A6   A : 
 E
 

    A Ac

  A6   A : 
 A j$ 
~# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 	
 A A	E
	

 )  A )  R
  A6   A: 
	
@@ Ak 
 A A	E


 )  A )  R
  A6   A: 

  A6 

  A6 

 )!   (
6
   7   6 

    Aȅ Ac

  A6   A : 
 E
 

    Aȅ Ac

  A6   A : 
 A j$ 
~# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 			
 A AE
	

 A A
  A6   A: 
	
@@ Ak 
 A AE


 A A
  A6   A: 

  A6 

  A6 

 )!   (
6
   7   6 

    A Ac

  A6   A : 
 E
 

    A Ac

  A6   A : 
 A j$ 
# Ak"$  A8j @@@@@@@@@@@@ - 8Aq@ - 9A F@  A0j  - 4! A(j (0" - (AqE@A!
	
 Aq!@ - )""A,G@ A F

 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 Aq"A F
A! A"G
 A j 1 (p"AG
 - t"@ A j  (p"AG
 A j  (`AG
A 

-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2701-2850

 A j  (p"AG
 A j ( (`AG
 (d!A
! Aj  - AqE@A!
	
 - !@ Aq"A,G@A	! A G
 




  Aj  - AqE@A!


 - "A"G@ A F
A!


 A j 1 (p"AG
@ - t"@ A j  (p"AG
 A j  (`AF


@ E@ A j  (p"AF


 A@kAԀ Ab


 A j ( (`AG
 (d!A!
 Aj  - 	! - Aq
 
A!

  A6 


  A6 


 A jAr" )t7  Aj A j( 6   6`
 A j A j) 7   )`7@

 A j A j( 6   )t7d  6`
 A j A j) 7   )`7@

A!

  ) u7P  A j(  6 W - t!
 A j ( W6    : D  6@  )P7 E

 A jAԀ A` (pAF@ (t!

 A j A j) 7   )p7@
 (D! (@"AG

 A j  (p"AF@  A6    6

   )t7  A
j A j( 6    6 

   )H7   6   6 
 Aj$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

AA  Aт A!

AA (  A (  F!

AA )  A )  Q!
  A6    : 

A!@@@@ Ak 
AA  Aт A!

AA (  A (  F!

AA )  A )  Q!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@@@@ - Aq@ - 	A"G
  Aj @@@@@@ ("AF@ A
j( ! Aj( ! ("
 Ak
 )!   (
6
   7   6 


 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  A6 

  A6 

  A : 

  A : 
  A6  E
 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ A AA G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ A AA G!
  A6    :  E
 

  A6 

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:2851-3000

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

 AН AA GAt!

AA A՝ A!
  A6    : 

A!@@@ Ak 
 AН AA GAt!

AA A՝ A!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ A AA G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ A AA G!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @@@@@ ("AF@ A
j( ! Aj( ! ("
A! Ak
 )!   (
6
   7   6 

AA  A A!

AA A A
!

AA )  A )  Q!
  A6    : 

A!@@@@ Ak 
AA  A A!

AA A A
!

AA )  A )  Q!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@@@@@ - Aq@ - 	A"G
  Aj @@@ ("AF@ A
j( ! Aj( ! ("
 Ak			
 )!   (
6
   7   6 


 )  Aۃ )  Q


 A A
  A6   A: 

@@ Ak 
 )  Aۃ )  Q


 A A
  A6   A: 

  A6 

  A6 

    A Aa

  A6   A : 
 E
 

    A Aa

  A6   A : 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
    

 )!   (
6
   7   6 

     E
 

  A6 

  A6 
 A j$ 
	~# Ak"$  A8j @@@@@@@@@@@@@ - 8Aq@ - 9A F@  A0j  - 4! A(j (0"A! - (AqE
 Aq!@ - )""	A,G@ 	A F
 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 Aq"A F
 A"G@A!
	
 A j 3 (p"AG
@ - t"	@ A j  (p"AG
 A j  (`AG


 A j  (p"AG
 A j  (p"AG

-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3001-3150
 (|! (x! (t!
 Aj  - AqE
 - !@ Aq"A,G@A	! A G
 


  Aj  - AqE@A!


 - "A"G@ A F
	A!


 A j 3 (p"AG
@ - t"	@ A j  (p"AG
 A j  (`AF


 @ A@kA Ab E



 A j  (p"AG
 A j  (p"AG
 (|! (x! (t!
 Aj  - 	! - Aq
 


  A6 


  A6 


 (x! (t!  (|6L  6H  6D  6@

 A j A j( 6   )t7d  6`
 A j A j) 7   )`7@

 !  ) u7P  A j(  6 W - t!	

 A jA A` (pAF@ A j( ! A j( ! (t!

 A j A j) 7   )p7@

A!
 A j ( W6    	: D  6@  )P7 E
 E Er

 
 (@"AG
 A j( ! A j( ! (D!
 A j  (p"AF@   6  A6   A
j 6   Aj 6 

   )t7  A
j A j( 6    6  E
 

 )D!
   (L6
   
7   6 
 Aj$ 
~# Ak"$  A8j @@@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A F@  A0j  - 4! A(j (0"A! - (AqE

 Aq!@@@ - )""	A,G@ 	A G


 @A!

  A j  -  Aq
A!

 
A	!

 - !!
 Aq"A F

 A"G@A!


 Aj / ("AG
~@@@@ - "	 
 Aj  ("AG

 Aj  (AG

 (! (! (

 Aj  ("AG
 Aj 9 (AG
	 )!
B!
B 

 Aj  ("AG
 Aj ) (AG
 )!
B

 Aj  ("AG
 Aj  (AG

A 
!B 
!
 Aj  - AqE

 - !@ Aq"A,G@A	! A G
 
P


  Aj  - AqE@A!

 - "A"G@ A F

A!

 Aj / ("AG

@@@@@@@@ - "	 
 Aj  ("AG
 Aj  (AF


 E
 A jA Ab

 

 Aj  ("AG
 Aj 9 (AG

 )!
B!


 

 Aj  ("AG
 Aj ) (AG
 )!
B!


 A jA Ab

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3151-3300

 A jA Ab

 Aj  ("AG
 Aj  (AG
	 (! (! (!
 Aj  - 	! - Aq
 



  A 6  A6 

  A 6  A6 

 Aj Aj( 6   )7  6
 A j Aj) 7   )7`


 Aj Aj( 6   )7  6
 A j Aj) 7   )7`


 AjAr" )7  Aj Aj( 6   6
 A j Aj) 7   )7`A !

 Aj Aj( 6   )7  6
 A j Aj) 7   )7`

 !  ) 7  Aj(  6  - !	

A!
 A j ( 6    	: d  6`  )7 e

 AjA A` (AG
 )!

@@ 
P@ AjA A` (AG
 )!

 E
  
7h  
7`  6x

 A j Aj) 7   )7`

 AjA A` (AF
 A j Aj) 7   )7`

 A j Aj) 7   )7`
 E Er
 

  
7h  
7`  Aj( 6x ("E
 Aj( !
 A j" A j) 7   )`7@ )x!
 A j  (`"AF@   )@7    
7   6   6  Aj ) 7 

   )d7  A
j A j( 6   A 6   6  E
 

 A j A j) "
7   )`"
7P  Aj 
7    
7   A 6
 Aj$ 
~# A0k"$  Aj A!@@@ - AqE
 A! - 	A"G
   A j @ ( "AF@ A,j( ! A(j( ! ($"E@ Aj  S

 Aj  S E
 

  (,6
  )$7  6
 (AG
 )!  A6    7

  6
   )7   Aj Aj) 7 
 A0j$ 
# Ak"$ @ ("E@A!

    ("  I"k6  ( " j6 @@@ @ Aj -   (
"At" ("A F


A A A  
 AO@ - 
!	A! Aj -  Ar ("A G
 - 
 	Atr!

AAA  
  (
"6  6 A !
  Aj6

   :    :   Aj$ 
# A@j"$ @@@@ E@A!

 A N"E
A -    "E

   ! A 6 B7  Aj" A # A0k"$  ( E@ AjB 7  A6
 A 6 Aг 6  Aj

  6 AjB7  A6
 Aг 6 A6$  A j6  A,j6   Aj6,  Aj
! A0j$  
   ) 7  Aj Aj( 6   A
j 6   Aj 6    6  A	6 @ ( " E
  Aj( E
   
 A@k$ 
 
   
A A7 A8jĂ A  
# A@j"$ @@@@ E@A!

 A N"E
A -    "E

   ! A 6 B7  Aj" A   
   ) 7  Aj Aj( 6   A
j 6   Aj 6    6  A6 @ ( AI
  Aj( E
  (
 A@k$ 
 
   
A A7 A8jĂ A  
<
~# A k"	$  	Aj @@@@ 	(E@ 	 	(6 	 	Aj-  : 
 	Aj 	AjA A A j 	(
# A k"$  	Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 	Aj! ( kAM@  A~ (!
 (  jA ;    Aj6# A k"
$ @@@@@@@A Aj") B}" BZAk 
 Aj!# A0k"$  (" (F  | ( 

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3301-3450
 ( jA :  A!  (Aj6  A A@@ ( E@ (" (F  | ( 
 ( jA::    (Aj6# A k"$ @@@@@ (
@ Aj A A (
  (6  Aj-  : 
 Aj AjA A
  (
 Aj AjA A A
j (
  ( - 


 Aj A A (
  (6  Aj-  : 
 Aj AjA A  (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !

 Aj A
j( "6   )"7 A
j 6   7

 A(j A
j( "6   )"7  A
j 6   7
  6  A0j$ 

# A@j"$  (" (F  | ( 
 ( jA :  A!  (Aj6 A0j A A@@@@ (0E@ (" (F  | ( 
 ( jA::    (Aj6 A0j  (0E
 A
j A<j( 6   )47

 Aj A<j( "6   )4"7 A
j 6   7

  (4 A8j-   ( E

 A(j A
j( "6   )"7  A
j 6   7A!

 (" (F  | ( 
 ( jA :    (Aj6A !
  6  A@k$ 

# A0k"$  (" (F  | ( 
 ( jA :  A!
  (Aj6  Aܔ A@@ ( E@ (" (F  | ( 
 ( jA::    (Aj6# A k"$ @@@@@@@ ) B}"AjA  BTAk 
 Aj A݁ A
 (
  (6  Aj-  : 
 Aj AjA A
 Aj (E@  ( - 


  )7 A6  A
j A
j( 6 

 Aj A A
 (@  )7 A6  A
j A
j( 6 

  (6  Aj-  : 
 Aj AjA A
 A0j (@  )7 A6  A
j A
j( 6 

 Aj AjA A A<j (@  )7 A6  A
j A
j( 6 

 Aj Aj Aj (E
  )7 A6  A
j A
j( 6 

 Aj A A (@  )7 A6  A
j A
j( 6 

  (6  Aj-  : 
 Aj AjA A
 A j (@  )7 A6  A
j A
j( 6 

 Aj AjA A
 A j (@  )7 A6  A
j A
j( 6 

# A k"
$  Aj"
( "(! 
- E@ ( F  | ( 
 ( jA,:    (Aj"6
 
A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 ( kAM@  A~ (!
 (  jA ;    Aj6 
 A(j e Aj" 
(  
Aj 
A
j( "6  
 
)"7 A
j 6   7AA 
6  
A j$  (@  )7 A6  A
j A
j( 6 

 Aj Aj  (E
  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  ( - 

-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3451-3600


  ( - 

 A j$  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !


 Aj A
j( "6   )"7 A
j 6   7

 A(j A
j( "6   )"7  A
j 6   7
  
6  A0j$ 

 Aj!# A0k"$  (" (F  | ( 
 ( jA :  A!
  (Aj6  Aؔ A@@ ( E@ (" (F  | ( 
 ( jA::    (Aj6# A k"$ @@@@@@@@@@@ ( Ak 
 Aj A A
 (
  (6  Aj-  : 
 Aj AjAĕ A
 Aj (E@  ( - 



  )7 A6  A
j A
j( 6 
	
 Aj Aѕ A
 (@  )7 A6  A
j A
j( 6 
	
  (6  Aj-  : 
 Aj AjAĕ A
 Aj (@  )7 A6  A
j A
j( 6 
	
 Aj AjAݕ A Aj (E
  )7 A6  A
j A
j( 6 

 Aj A A (@  )7 A6  A
j A
j( 6 

  (6  Aj-  : 
 Aj AjAĕ A
 Aj (@  )7 A6  A
j A
j( 6 

 Aj AjA A
 A j (@  )7 A6  A
j A
j( 6 

 Aj AjA A Aj (E
  )7 A6  A
j A
j( 6 

 Aj A A
 (@  )7 A6  A
j A
j( 6 

  (6  Aj-  : 
# A k"
$  Aj"
( "(! 
- E@ ( F  | ( 
 ( jA,:    (Aj"6
 
A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jAݕ A  Aj"6 Aj!
 ( kAM@  A~ (!
 (  jA ;    Aj6@ Aj"( "E@ 
 

 
   Aj( 
 
 
(  
Aj 
A
j( "6  
 
)"7 
A
j 6  
 7AA 
6  
A j$  (@  )7 A6  A
j A
j( 6 

 Aj AjA A A8j (@  )7 A6  A
j A
j( 6 

 Aj AjA A Aj (@  )7 A6  A
j A
j( 6 

 Aj AjA A A
j (@  )7 A6  A
j A
j( 6 

 Aj AjA A A(j (E
  )7 A6  A
j A
j( 6 

 Aj A A (@  )7 A6  A
j A
j( 6 

  (6  Aj-  : 
 Aj AjAĕ A
 Aj (@  )7 A6  A
j A
j( 6 

 Aj AjA A Aj (@  )7 A6  A
j A
j( 6 

 Aj AjA A A
j (E
  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 


-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3601-3750
  ( - 


  ( - 


  ( - 


  ( - 

 A j$  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !


 Aj A
j( "6   )"7 A
j 6   7

 A(j A
j( "6   )"7  A
j 6   7
  
6  A0j$ 

 Aj!
# A0k"$  (" (F  | ( 
 ( jA :  A!
  (Aj6  AՔ A@@ ( E@ (" (F  | ( 
 ( jA::    (Aj6# A k"$  Aj A A@@ (E@  (6  Aj-  : 
 Aj AjA A
 
 (
# A k"$  Aj"
( "(! 
- E@ ( F  | ( 
 ( jA,:    (Aj"6
 
A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 Aj!
 ( kAM@  A~ (!
 (  jA ;    Aj6@@@@@ 
Aj-  Ak 
  A A

  A A

  A A

  A A

 
 (  Aj A
j( "6   )"7 
A
j 6  
 7AA 
6  A j$  (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !


 Aj A
j( "6   )"7 A
j 6   7

 A(j A
j( "6   )"7  A
j 6   7
  
6  A0j$ 

 
Aj Aߔ A 
(@  
)7 A6  A
j 
A
j( 6 

 
 
(6 
 
Aj-  : 
 
Aj 
AjA A Aj 
(@  
)7 A6  A
j 
A
j( 6 

 
Aj 
AjA A Aj 
(@  
)7 A6  A
j 
A
j( 6 

  
( 
- 

 
A j$   (  Aj A
j( "6   )"7 A
j 6   7AA 
6  A j$  	(
# A k"$  	Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kA	I@  A	~ (!
 (  jA A	  A	j"6 	Aj! ( kAM@  A~ (!
 (  jA ;    Aj6@ ) P@  

   )
  (  Aj A
j( "6   )"7 A
j 6   7AA 
6  A j$  	(
# A k"$  	Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 	Aj! ( kAM@  A~ (!
 (  jA ;    Aj6@@@@@ A j-  Ak 
  AՃ A

  AЃ A


-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3751-3900
  AɃ A

  Aă A
  (  Aj A
j( "6   )"7 A
j 6   7AA 
6  A j$  	(E@   	( 	- 


   	)7  A6   A
j 	A
j( 6 

   	)7  A6   A
j 	A
j( 6 

   	)7  A6   A
j 	A
j( 6 

   	)7  A6   A
j 	A
j( 6 

   	)7  A6   A
j 	A
j( 6 
 	A j$ 
 @@@@@@ Ak 
 )  Bݲ Q
 )  Bҵǭ R
  A6   A: 
 A A

  A6   A: 
 (  A杛F

    A Aa
  A6   A: 
  A6   A : 
   ( " (   Aj(  
[# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj!  A j$   
~# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X A@k! Aj!# A@j"$ @ A j"-  E@ Aj A$j( 6   )
7 A j A
j( 6   )"
7 - !  )78  )70  ) 7( A(j! Aj!	 AjA  
!# Ak"$ @@@@@@@ @ AjB 7  AjB 7  B7 B 7x B7pA -  AA"E
A -   AjA /  ;   A (  6  A	A"E
 AjA -  :   A )  7   A jA } (| (Alj"B7  6
 B 7  6   Aj" )p7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A(j Aj) 7   (Aj6 Aj Aj) 7   A6 

 @ A(j  (,A I
 A j @ ($@ ( "

  A6 

 A jA  (  ( -  @@ (p"A
F@ A8j A j) 7  A@k Aj) 7  A j Aj( 6   )t70 Aj  (
"E
 A j (Aj Ak (0Ak
 A j Aj( "6  A j Aj) "
7  A j A j) "
7   )t"
7P  A$j 6   A
j 
7   Aj 
7   A
j 
7    6  A 6 
	
 Aj A j (A F
  A
6 

 Aj A j (
A F
  A
6 

  A
6 

AA 
AA	 
  A
6 

AA A  
 A j A0j ( A
j(   	 A jw@ (p"AF@ - t
  A6 

   ) u7   A
j A j)  7    Aj Aj)  7    A
j Aj)  7    A%j Aj)  7    A-j Aj)  7    A5j Aj)  7    A<j Aj(  6     - t:    6 

 AjB 7  AjB 7  B7 B 7x B7p  Aj A jA A	  A6 
 (T@ (P
@@@@ (0 
 A8j( @ (4
 A@k

 A0jAr

 A0jAr

 A0jAr
" Aj( E
   ( 
 Aj$ @ (" E
  (
E
   
 (
@ (
 (! Aj( "@ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 Aj( E
 

# A0k"$  A jB 7  AjB 7  B7 B 7 B7 A -  @@AA"@A -   AjA /  ;   A (  6  AA"E
 Bѫ 7   A
jA } (
 (Alj"B7  6
 B 7  6    ) 7  A
j Aj) 7   A
j Aj) 7   A$j A j) 7   A,j A(j) 7   (Aj6  Aj Aj) 7   A6  A0j$ 

AA 
AA 

 A
j( @ Aj( 
 A,j( @ ((
 A@k$  Aj$ 

~# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j Aj) 7  A j Aj) 7  Aj A(j( 6  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7   ) 7X  ) 7p Aj! A j!
 A j!# A k"$  Aj! A@k"
( ! 
(!# A k"$ A -  @@@@AA"@ A޹ A!	A -  AA"E
 A A!
 A
jA6  AjA6   
6 A6 A6
  	6 A j" A j! Aj!

-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:3901-4050
# A k"$  Aj @@ (E@  (6  Aj-  : 
 Aj AjA A 
 (
 Aj AjA A 
A
j (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$  (`E
 A j" A j( 6   )d7@ (T@ (P
 A j ( 6   )@7` A jAׂ A A j; ( "A
F
  )07 Aj A8j) 7  )$!  (,6
  7

AA 
AA 
 A,j A j( 6   )P7$
 A(j( !A
! A A
 ($"
 A,j(  (
  E
  

  6  	 
 A j$ @ ("A
F@ A8j A0j) 7  A0j A(j) 7  A(j A j) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 - (! A j Aj( 6  A j Aj) 7  A j Aj) 7   ) 7@# A k"$  
A
j( ! 
(!	 A@k"
 Aj"(( A0j(   A@k" 	   
 A
j"
w@@@ ( "AF@ - ! (D@ (@
 E
  
(  
(   ( "A
F
  A
j )7   A$j A
j( 6   A
j Aj) 7   Aj A
j) 7   A 6    6

   ) 7   A
j A
j)  7    Aj Aj)  7    A
j A
j)  7    A%j A%j)  7    A-j A-j)  7    A5j A5j)  7    A<j A<j(  6     - :    6  (DE
 (@

  A6 

 A jB 7  AjB 7 A -   B7 B 7 B7 @@@AA"
@A -   
AjA /  ;   
A (  6  AA"
E
 
Aܥ6  A ! A
jA } (
 (Alj"	B 7 	 
6
 	B 7 	 
6  A j Aj) 7  A j Aj) 7  A j A j) 7  A j A(j) 7   (Aj6 A j Aj) 7   ) 7@A -  AA"
E
 Aq"	A	K@ 	A O@ 
 AqA n"A0r:    A lk!A!
  
j AqA
n"	A0r:   Aj!  	A
lk!
  
j A0r:  A -  AA"	E
 	AjA )  7   	A )  7   A j( " A j( F@ A j } (T!
 (L Alj" 
6
 B7  	6  Aj Aj6  AjA6   Aj" )@7  Aj A j) 7  Aj A j) 7  A j A j) 7  A(j A j) 7   (TAj6T Aj A j) 7   A6 @@@@ (  
 Aj( @ (
 Aj

 Aj

 Aj

 Aj

AA 
AA 
AA 
AA 
@@@@ (  
 Aj( @ (
 Aj

 Aj

 Aj

 Aj
" Aj( @  ( 
 A
j( @ Aj( 
 A,j( @ ((
 A j$  A j( @ 
( 
 
Aj( @ 
( 
 
(
! 
Aj( "@ Aj! @  Aj( @  ( 
  A j!  Ak"
 

 
Aj( E
 

  A
j )
7   A$j A$j( 6   A
j A
j) 7   Aj Aj) 7   A 6    6@@@@ (  
 Aj( @ (
 Aj

 Aj

 Aj

 Aj
" Aj( @  ( 
 A j( @ (

 

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4051-4200
Aj( @ 
( 
 
(
! 
Aj( "@ Aj! @  Aj( @  ( 
  A j!  Ak"
 

 
Aj( @ 
 A
j( @ Aj( 
 A,j( E
  ((
 A j$  Aj$ 
 
   Aj( @  ( 

# Ak"$   ( ! @ A M@  ("  (F   |  ( 
  ( j :      (Aj6

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (  ("kK@    ~  (!
  (  j A
j     j6
 Aj$ A 
b# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  Aj!  A j$   
G   ( " (  ("kK@    ~  (!
  (  j      j6A 
# Ak"$ @ A M@  ("  (F   |  ( 
  ( j :      (Aj6

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (  ("kK@    ~  (!
  (  j A
j     j6
 Aj$ A 
B   (  ("kK@    ~  (!
  (  j      j6A 
~# A k"$   6  6 # A0k"$  Aj" E@ A : A

@@@@ -  A+k 
 AF


 Ak"E
 Aj!
@@ A!O@ A(j!@ E
 Aj 
B B
 A j 
B B
 -  A0k"A	K
 )B R ) "
 )|"
 
Tr
   A
I!	 Aj! Ak! ! ) "
 	|"
 
T" 
 
 |"
V 
 
ZE
 
 A: A

 Aj!@ -  A0k"A	K
  
 
B
 Aj! )  ) "
 |"
 
T|!
 Ak"
 

  
7 Aj 
7 A 

 A: A

 A: A
:   A0j$    - E@   )7  Aj Aj) 7 A 

  - 	: ' A jB7  A jA6  A6< A܈ 68 A6T  A j6@  A'j6X  6P A(j" A8j  Aj   A6 (,@ ((
A
6  A j$ 
'
~# Ak"$  Aj   A j  A0j  Aj (" (@@@@ (AF@ Aj Aj) 7   )7 AjA A Aj<

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"  Aj) 7  Aj" Aj) 7   )""7 "AF
  A j  ) 7  A j ) 7   )7@ (! (! )!" (! (! )!# Aj ( " ((@@@@ (@ Aj Aj) 7  Aj Aj) 7   )7|

 Aj Aj) 7   )7 A jA A  Aj< (xA
G

 Aj"( !  Aj( ! Aj"
( ! Aj( !
 Aj"
( ! (|! Aj! (0"! (8!# Ak"$     A j!# Ak"$  A8j @@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  - 4! (0! A6 A(j  - (AqE@A!


 Aq!@@@ - )""
A,G@ 
A G
A !

 @A!A !

  A j  -  Aq
A!A !


 
A	!A !


-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4201-4350

 - !!
A ! Aq"	A F
	A! 	A"G
 Aj 6 ("AG
 AjAr!@@@ - "
Ak 
 Aj  ("AG
	 Aj  (AG
 (!
 (!
A !	 (

 Aj  ("AG
 Aj  (AF
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   )7A !	A 

 Aj  ("AG
 Aj  (AG
 - !
A!	A 
! Aj  - AqE@A!


 - !@ Aq"A,G@A	! A G

 	E



  Aj  - AqE@A!


 - "A"G@A! A F




 Aj 6 ("AG
	@@@@@ - "
Ak 
@ E@ Aj  ("AF



 AjArA A	b

 Aj  (AG

 (!
 (!
 (!

 (AF
 AjArA A
b

 	E@ Aj  ("AG
 Aj  (AG
 - !
A!	

 AjArA Ab

 Aj  ("AG
 Aj  (AF
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   )7
 Aj  - 	! - Aq
 
A!


 B 7 

 B7 

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7


 Aj )7  Aj Aj( 6   6
 Aj Aj) 7   )7

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7A !

  ) 7  Aj(  6  - !


A!
 Aj 
:   Aj ( 6    6  )7 

 AjA A` (AG
 - !

@ (AG"@ Aj Aj"( 6  Aj Aj") 7  Aj Aj"	) 7   )7 E@ AjA A	` (AG
 Aj( !
 Aj( !
 (!
 Aj ( 6  Aj ) 7  Aj 	) 7   )" 7  
:   
6  
6  6  "AF
 A j Aj) 7  A j Aj) 7  A j Aj") 7   )7T  )7D  6@ Aj  ("AG
  )@7  A(j A j( 6  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7 

 AjArA A
` Aj Aj) 7   )7

 Aj Aj) 7   )7@@@@ ( 
 Aj( @ (
 Aj

 AjAr

 AjAr

 AjAr
"Aj( E
 ( 

 Aj Aj) 7   )7
 E 
Er
 

 Aj )7  Aj ( 6  A6   6 AI A@kAr (H@ (D
 A j
"Aj( @ ( 
 A j( E
 (\

  ("AFr
 @ AI@ AjAr!

 Aj! Aj( E
  (
 Aj( E
  ( 
 A j Aj) " 7   )"!7p A
j  7   !7 A6 
 Aj$ @@ (P"AG@ A,j A j) 7  A4j A j) 7  A
j A j") 7   )d7$  )T7  6 A j  (P"AG
  )7  A(j A8j( 6  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

 A j A j) " 7   )T"!7@ A
j  7   !7 A6 

 Aj )T7  Aj ( 6  A6   6 AI AjAr (@ (

-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4351-4500
 A j
"Aj( @ ( 
 A0j( E
  (,
 Aj$  (AF
 Aj Aj( "6  Aj Aj) " 7  Aj Aj) "!7  Aj Aj") "$7  Aj Aj") "%7   )"&7 Aj 6  Aj  7  Aj !7  Aj $7  Aj %7   &7 Aj  6  Aj 6  Aj 6  Aj 
6  Aj 6   A j) 7   A j) 7   6  #7  6  6  "7  6  6  )@7 AjA 6  AjAȐ 6  AjA 6  Aj Aj" 6  Aj  6    6 Aj" AЇ  Aj Aj" Aj AjA (     f (4@ 
 ($@ 
 (E
 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )x7 A 6 B7 Aj"  AjA  Aj  
 Aj Aj( 6   )7 A 6 AjP

 Aj Aj) 7   )7 AjA׌ A
 Aj"<  Aj) 7  
 Aj) 7  
 Aj) 7   )7x A 6 B7  AjA  A j 
 Aj Aj( 6   )7 A 6 A jP @ 
  @ Aj!@ Aj( @ ( 
 A j!  Ak" 
 

 E
  
 @ 
 E
 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7x A 6 B7 Aj"  AjA  A j  
 Aj Aj( 6   )7 A 6 A jP
 (4@ (0
 ($@ ( 
 (E
  
 Aj AjO@ (E@ Aj Aj( 6   )7

 Aj Aj( 6   )7x AjA A  A j; (A
F
  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7A A+ AjA A  
 Aj Aj( 6   )7  !  AjQ Aj$   

Ȃ A7 AjA A  

9~# Ak"$  Aj   A j  Aj (" (@@@@ (AF@ Aj Aj) 7   )7 AjA A Aj<

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"  Aj) 7  Aj" Aj) 7   )""7 "AF
  A@k  ) 7  A8j ) 7   )70 (!
 (!
 )!" (!
 (! )!$ Aj!
 ( " !  ((!# A@j"	$  	Aj"    	Aj!# A k"$  Aj @@@ - Aq@ - 	" A"F
  A F
 A:   A
6

 A:   A6

 Aj ,@ ("AF@A!

  / ; 	 A
j - :   - !  A
j )7  Aj  :  
 A:    6

 # A k"$  Aj ,@@ ("AF@ - !  Aj  ("AF

 Aj"  - :    / ;
 - ! (! (
!  6  /
; 	 A:   Aj :   Aj 6  A
j 6  A
j  -  :  

  @# A0k"$  Aj!# Ak" $   A0j @  - 0Aq@@@@  - 1A F@   A(j   - ,!  A j  (("@@@@@@  -  AqE@A!A!

 Aq!
@@  - !"A,G@ A F
A	! 



A! 

   Aj A!A!  - AqE
  - !
@ A F
 A! A"G
  Aj   ("AF@  Aj   ("AG
  Aj 
  (AG
  - !  Aj A!  - AqE@A!

  - "
A F
A	! 
A,G
   Aj A!  - AqE
  - 	"
A F
A! 
A"G
  Aj   ("AF

    ) 7    Aj(  6   - !

A!
A!
  A j :    A j  ( 6     6l    )7 q

  AjAـ A`  (AG
  - !
  A j"  A j(  6    A j"  A j)  7   A@k"
 ) 7   A j" (  6     : i    ) i78  A j   (h"AG
 A:     )87  A	j 
) 7   Aj (  6  

  A jArAـ Ab

  AjAr"  )7  Aj  Aj( 6    6
  A j  Aj) 7     )7l

 A:   A6

  A j  Aj) 7     )7l
  A j  A j) "!7      )l"#7 S A
j !7    #7  A:  

 Aj  )l7  Aj  A j( 6  A:    6

 A:   A6
  Aj$ @@@ - " AG@ Aj - 
:    / 	; (
! (! (! (! (
!
 ( ! ($! ((! (,!   -  AqE
 - A G
    :    6$  6   6
  6  
6  6  6
  6  6  /;  Aj Aj-  :  

 )
!! A
j Aj) 7   !7 A:  

 A:   A6  
 @ ! @  Aj( @  ( 
  Aj( @  A
j( 

-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4501-4650
  Aj!  Ak"
 

 
@ 
 @ 
 E Er
 

 A:   A
6  
  @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 
@ 
 @ 
 E Er
  
 A0j$ 

# A0k"
$  
Aj!# Ak"$  A8j @@@@@@@@@@@@@@@ - 8Aq@ - 9A G
  A0j  (0!  - 4Aq":   6 A(j  - (AqE@A!



 - )"" A F@A!A !A !

@@  A,F@ 
  A j  -  AqE@A!


 - !!

 
 A	!



 A : 
A!
 Aq"A F
A!
 A"G
 Aj   - ! ("
AG@A !A !
	
 AjAr!@@@@ Ak 
 Aj  ("
AG@A !A !


 Aj 
 (AG@A !A !


 - !A !A 

 Aj Aj (AG@A !A !


 (! (! (!A!A !A!A 

 Aj  ("AG@A !

 Aj  (AG@A !

 (! (!
 (!A!A 

 Aj  ("AG@A !

 Aj ! (AG@A !

 (! (!A!A ! (
! Aj A!
 - AqE

 - ! @  Aq" A,G@A	!
  A F



  Aj  - AqE@A!



@@ - " A"G@  A F
A!


 Aj   - ! ("
AF



A!



@@@@@@@@@ Ak 
 AG
 Aj  ("
AG
 Aj 
 (AG
 - !

 E
 AjArA A
b

 E
 AjArA Ab

 E
 AjArA Ab

 AjArAـ Ab

 Aj  ("AG
 Aj ! (AG
 (! (! (!

 Aj  ("AG
 Aj  (AG
 (! (!
 (!

 Aj Aj (AG

 (! (! (!A!
 Aj A!
 - 	!  - Aq
 



 A:   A6

 A:   A6


  )7  Aj Aj( 6   6
 Aj Aj) 7   )7A !

-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4651-4800

  )7  Aj Aj( 6   6
 Aj Aj) 7   )7A !

  )7  Aj Aj( 6   
6
 Aj Aj) 7   )7

  ) 7  Aj(  6 

 Aj Aj) 7   )7A !

A !A !
 Aj :   Aj ( 6    
6  )7 
A ! A!
A!

 ! !@@@@ "E@ AjA A` (AG
 Aj( ! Aj( ! (!
 
! @@ "E@ AjA A` (AG
 Aj( ! (! Aj( ! 
 A  !
 AG
 AjAـ A` (AG
 - 

 Aj Aj) 7   )7A!


 Aj Aj) 7   )7 
E Er
 


 Aj Aj) 7   )7A !A!
A!A ! 

 Aq
! Aj" 6  A j" 6   A j 6   6  6  6 A j" Aj)  7    6 A j ) 7   
6  :   6  6  ) 7h  )7T A j" (  6   A j ) 7    )h7 A A : @ Aj  (" AF@  )@7  A j A j) 7  Aj A j) 7  Aj ) 7  Aj A j) 7 

 Aj )7  Aj Aj( 6  A:     6 (" @ ( !@ Aj( @ ( 
 Aj( @ A
j( 
 Aj!  Ak" 
 

 (T@ (P
 A j( @ (\
 (D" E
 A j( E
  

 E!
  E
  
 @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 A G!  E! E
  
 E 
Er E ErrE@ 
 
E E AsrrE@ 
@ E  r
  @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 E
  
 A j Aj) "!7    )"#7 k A
j !7    #7  A:  
 Aj$ @@@ 
- " AG@ 
Aj 
- 
:   
 
/ 	; 
(
! 
(! 
(! 
(! 
(
! 
( ! 
($!
 
((! 
(,! 
  
-  AqE
 
- A G
    :    6$  6   
6
  6  6  6  6
  6  6  
/;  Aj 
Aj-  :  

 
)
!! A
j 
Aj) 7   !7 A:  

 A:   A6  
 @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 @ 
 @ 

 E Er
 

 A:   A
6  
  @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 @ 
 @ 

 E Er
  
 
A0j$ 
 A j$ 
 A j$ @@ 	- " AG@ 	Aj 	- :   	 	/ ; 	(
! 	( ! 	($! 	((! 	(,! 	(0! 	(4!
 	(8! 	(<! 	Aj 	Aj 	("AG
 

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4801-4950
  :   
 	/;  
 6$ 
 6  
 
6
 
 6 
 6 
 6 
 6
 
 6 
 6 
Aj 	Aj-  :  

 	)
!! 
A
j 	A$j) 7  
 !7 
A:  

 
Aj 	)
7  
Aj 	A$j( 6  
A:   
 6  
  @ ! @  Aj( @  ( 
  Aj( @  A
j( 
  Aj!  Ak"
 

 @ 
 @ 

 E Er
  
 	A@k$ @@ - AF@ Aj Aj) 7   )7 AjA A Aj<

 Aj"  Aj) 7  Aj" Aj) 7  Aj" Aj") 7  Aj" Aj") 7   )"!7 !AqAG

 A j Aj) 7  A j Aj) 7  A j Aj) 7   )7X A 6 B7 Aj"  AjA  A j  E@ Aj Aj( 6   )7 A 6 A jP 
@ 

 E
 




 Aj  ) 7  Aj ) 7  Aj ) 7  Aj ) 7   )7 AjA 6  AjAȐ 6  AjA 6   A8j) 7   A@k) 7  Aj Aj" 6  Aj  6   $7  6  
6  "7  
6  
6  )07   6 Aj" AЇ  Aj Aj" AjA (     f ($@  
 (E
 

 A j Aj) 7  A j Aj) 7  A j Aj) 7   )7X A 6 B7 Aj"  AjA  A j  
 Aj Aj( 6   )7 A 6 A jP
 ($@ ( 
 (E
  
 Aj AjO@ (E@ Aj Aj( 6   )7

 A j Aj( 6   )7X AjA A  A j; (A
F
  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7A A+ AjA A  
 Aj Aj( 6   )7  !  AjQ Aj$   

Ȃ A7 AjA A  

# Ak"$ A!@@@ (("AM@ Aj! 

 (! ! (
"	 M@@ AO@Ax!  G


Ax! AI
 A 6  Aj  	At  	6( AK At"AOr
 

A ! AK At"AKr
@ AO@ At! AK@ !

 AM
 !

A -  A! A"E
   	At

A!  A "


A A A  
  6
 A 6A A+ AjA A  
  6(  6  	6 A6 Ax!
   6   6  Aj$ 
~# A0k"$  (" (F  | ( 
 ( jA :  A!  (Aj6  A A@@ ( E@ (" (F  | ( 
 ( jA::  A!  (Aj6   (  Aj(  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !

 Aj A
j( "6   )"7  A
j 6    7

 A(j A
j( "6   )"7   A
j 6    7
   6  A0j$ 

~# A0k"$  @ ( @ Aj!
# A0k"$  (" (F  | ( 
 ( jA :  A!
  (Aj6  A A@@ ( E@ (" (F  | ( 
 ( jA::    (Aj6# A k"$  Aj @@@@ (E@  (6  Aj-  : 
# A k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA¬ A  Aj"6 ( kAM@  A~ (!
 (  jA ;    Aj6# A k"$  ( !
 Aj  ("@ (E@ Aj-  !	 (!@@ E
  	E@ ("	 (F  	| ( 	
 ( jA,:    (Aj6
 Aj 
 = (
 AF
  
Aj!
 AtAk!@ ("	 (F  	| ( 	
 ( jA,:    (Aj6 Aj 
 = (
 
Aj!
 Ak"
 

  

 Aj A
j( "6   )"
7  A
j 6   
7 A6 

-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:4951-5100

  )7 A6  A
j A
j( 6 
 A j$  Aj" (  Aj A
j( "6   )"
7 A
j 6   
7AA 
6  A j$  (
 Aj AjAʬ  A
j (
# A k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jAԬ A  Aj"6 ( kAM@  A~ (!
 (  jA ;    Aj6# A k"$  Aj"( !
 Aj  ("@ (E@ Aj-  !	 (!@@ E
  	E@ ("	 (F  	| ( 	
 ( jA,:    (Aj6
 Aj 
 Y (
 
Aj"	 
 AljF
  AlAk!@ ("
 (F  
| ( 

 ( jA,:    (Aj6 Aj 	 Y (
 	Aj!	 Ak"
 

  

 Aj A
j( "6   )"
7  A
j 6   
7 A6 

  )7 A6  A
j A
j( 6 
 A j$  Aj" (  Aj A
j( "6   )"
7 A
j 6   
7AA 
6  A j$  (
# A0k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jAڬ A  Aj"6 Aj! ( kAM@  A~ (!
 (  jA ;    Aj6@ A$j"( E@  

 A j    ( " (( ($E
  
  (  Aj A
j( "6   )"
7 A
j 6   
7AA 
6  A0j$  (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$  ( 
 (" (F  | ( 
 ( jA :    (Aj6A !


 Aj A
j( "6   )"
7 
A
j 6  
 
7

 A(j A
j( "6   )"
7  
A
j 6  
 
7
 
 
6  A0j$ 

 Aj  AjN
   (E@   ) 7  A
j Aj( 6 A 

 A(j A
j( "6   )"
7   A
j 6    
7 (@ ( 
A
6  A0j$ 
 @@@@@@@@@@@  ( 



	 
  Aj
	
  Aj

  Aj

  Aj

  Aj

  Aj

  Aj( @  (
  Aj

  Aj( @  (
  Aj

  Aj( @  (
  Aj

  Aj
" Aj( E

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5101-5250
   ( 

	~@  ( @  ("@  ( !@ At! Aj!@@@@@A  j")"	B}"
 
BZ 
 Aj!@ ($"@ A$j! Aj( @ (  ( !
 (,"E
 Aj!@ Aj( @ ( 
 A j! Ak"
 


 A j( "@ ( Aj!@ Aj( @ ( 
 A j! Ak"
 

 !
 Aj( E
 ( 

 A
j( @ Aj( 
 A(j( E
 ($

@@@ 	B}"	AjA  	BT 
 Aj

 A j( @ A j( 
 A j( @ (d
 A j

 A j( @ A@k( 
 A j
"Aj( E
 ( 

@@@@@ Aj(  
 A j( E
 (


 A j( @ (

 A,j( @ A(j( 
 (<"@ (4Aj!@ Aj( @ ( 
 A j! Ak"
 

 A8j( E
 (4

@ (
"E
  A j( E
  
 A,j( @ A(j( 
 (<"@ (4Aj!@ Aj( @ ( 
 A j! Ak"
 

 A8j( @ (4
 A j( E
 A@k( 

 A j( @ (

 A,j( E
 A(j( 

 A j( @ (

 A,j( E
  A(j( 
  G
 

  Aj( @  ( 
  Aj( "@  (
!@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 

  Aj( @  (

A !  Aj""("@ ( !@  Alj"Aj( @ ( 
 Aj( "@ (
!@ Aj( @ ( 
 Aj( @ A
j( 
 Aj! Ak"
 

 Aj! A
j"Aj( @ ( 
  G
 

  A
j( @ ( 
  ($E
  A$j

  Aj
" Aj( E
   ( 

~# A k"$   6
  6 Aj!# Ak"$  A(j  @@ ((E@  ),78 A 6H B7@ A j" A@kA  A8j E
A A7 A jAę A  
 Aj A0j( "6   )("7 A j 6   7P A
j 6   7 A
6 

 Aj A j( "6   )@"7 A
j 6   7 A6 
 Aj$ @ (A
F@   )7  A6   A
j A
j( 6 

 A jB7  A6D A 6@ A6\  A j6H  Aj6X A0j" A@k  Aj   A6  (4@ (0
 AjP
 A j$ 
~# A k"$   6
  6# Ak"$  Aj" E@ A : A

@@@@ -  A+k 
 AF


 Ak"E
 Aj!
@@ AO@@ E
  	B B
 -  A0k"A	K
 )B R
   A
I! Aj! Ak! ! ) "
 |"	 
Z
 
 A: A

@ -  A0k"A	K
 Aj!  	B
~|!	 Ak"
 

-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5251-5400

  	7A 

 A: A

 A: A
:   Aj$ @ - E@   )7  A6 

  - : ' A jB7  A jA6  A6< A 68 A6T  A j6@  A'j6X  Aj6P A(j" A8j  Aj   A6  (,E
  ((
 A j$ 
# A0k"$  Aj (  ((
 @ ("E@  A 6 

 (
! A(j Aj) 7   )7    )$7   Aj A,j( 6  E
  
 A0j$ 
h# A k"$  Aj (  ((
 @ (E@  A 6 

   )7   Aj Aj( 6  (E
  (
 A j$ 
    (  (( 
s# Ak"$  Aj      A -   (
! (!AA"E@AA 
  6   6  A 6   6  Aj$ 
s# Ak"$  Aj      A -   (
! (!AA"E@AA 
  6   6  A 6   6  Aj$ 
# A k"$  Aj @@ (E@  (6  Aj-  : 
 Aj AjAƖ A  (
 Aj AjAʖ  A
j (E@   ( - 


   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 
 A j$ 
# A k"$  Aj @@ (E@  (6  Aj-  : 
 Aj AjAݖ A  (
 Aj AjA A A
j (E@   ( - 


   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 
 A j$ 
4  ( "  Aj( " (    Aj( @  Aj(  

# A k"$ @ @  ( !  ((
!@ Aj    ("E
 (! (!  (
@ 
  E
 @  
 Ak"
 

A !
 A j$  
v# A k"$ @ @  ( !  ((
! @ Aj     ("E
 (
! (@ (
 @ 
 Ak"
 

A !
 A j$  
# A k"$  ( ! ((
!@@@ E
 @@ Aj    ("E
  (
! (@ (
 @ 
 Ak"



 

 Aj    (E@  A 6 

   )7   Aj Aj( 6  (E
 (

  A 6 
 A j$ 
# A0k"$  ( ! ((
!@@@ E
 @@ Aj    ("E
  (! (! (
@ 
 E
  @ 
 Ak"



 

 Aj    ("E@  A 6 

 (
! A(j Aj) 7   )7    )$7   Aj A,j( 6  E
 

  A 6 
 A0j$ 
l# A0k"$   6
  6 A
jB7  A6 A 6 A6,  A(j6  Aj6(  Aj Aj  A6  A0j$ 
# A@j"$   6
  6@ E@ A
jB7  A6 Aė 6 A6,  A(j6

 A4jA*6  A
jB7  A6 A 6 A6,  6<  68  A(j6  A8j60
  Aj6(  Aj Aj  A6  A@k$ 
l# A0k"$   6
  6 A
jB7  A6 A 6 A6,  A(j6  Aj6(  Aj Aj  A6  A0j$ 
# A@j"$   6
  6@ E@ A
jB7  A6 A 6 A6,  A(j6

 A4jA*6  A
jB7  A6 A 6 A6,  6<  68  A(j6  A8j60
  Aj6(  Aj Aj  A6  A@k$ 

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5401-5550
~# Ak"$  Aj (  ((
 @ (E@  A6 

 A0j Aj) 7  A(j Aj) 7   )7  A8j A
j(  Aj(  Aj(  A
j(  A j (    (8E@ A j A j) 7  A j A j) 7  A j A j) 7   )<"7`@@@@ (d 
 A j( @ A j( 
 A j

 A j

 A j

 A j
"Aj( @ ( 
A
! 

 A j A j)  7  A j A j)  7  A j A j(  6    ) E7` (@! A j-  
:    6    )`7   A
j A j) 7    Aj A j) 7    A
j A j(  6  
 Aj$ 
	~# A k"$  Aj @@ (E@  (6  Aj-  : 
 Aj AjAН A Aj (
# A k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA՝ A  Aj"6 Aj! ( kAM@  A~ (!
 (  jA ;    Aj6# A@j"$  A 6 B7  Aj" A  ) !
 Aj) !# Ak"$  A'6 Aj~ B Z@ A0j 
B B̕ A j 
B Bɇ  A j B B̕ A@k B Bɇ  A j)  A(j)  A8j) " ) |"	 T|"
 )@|" 
T|   A j)  	 )P| 	T||"
V|"B>!	 B 
B>

 B- 
BB
" 	Bష  ) 
| A j Aj@  	P
  A jA0 (Ak A6  	B- B"	B"
 Bష  )  | A j Aj 	BT
  A jA0 (Ak  
A0r: e A 6
 A A  (" A jjA' k! Aj$ @ E@ (!   ( " ( @ 
 A@k$ 

A A7 A8jĂ A  
  (  Aj A
j( "6   )"	7 A
j 6   	7AA 
6  A j$  (E@   ( - 


   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 
 A j$ 
~# Ak"$ @@ ( AF@   )7   A(j A,j) 7   A j A$j) 7   Aj A
j) 7   Aj Aj) 7   Aj A
j) 7 

 A@k A8j) 7  A8j A0j) 7  A0j A(j) 7  A(j A j) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A 6` B7X A j" A jA # A0k"$ @@@@@@@@@@@@@@@@@@@ Aj"( Ak	



 
 Aj 

 Aj 

 Aj 

# A0k"$ @@@ Aj"( "A kA  A qA FAk 
  6   (6 A$jB7  AjA 6  A6
 A 6 A6
  Aj6   Aj6  6  Aj

 A$jB 7  A6
 Aؼ 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj
! A0j$  

# A0k"$ @@@@@@@ Aj"-  Ak 
 A$jB7  A6
 A 6 A 6 A 6  Aj6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

  (6
 A$jB7  A6
 A 6 A 6  Aj6   A
j6  Aj

  - : 
 A$jB7  A6
 A 6 A 6  Aj6   A
j6  Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj
! A0j$  

 Aj 


# A0k"$ @@@@ Aj"-  Ak 
  (6   - :  A$jB7  AjA 6  A6
 A 6 A 6
  Aj6   6  Aj6  Aj

 A$jB 7  A6
 A 6 A 6   Aj

  (6   - :  A$jB7  AjA 6  A6
 AȄ 6 A 6
  Aj6   6  Aj6  Aj

 A$jB 7  A6
 A 6 A 6   Aj
! A0j$  


# A0k"$ @@@@@@@@@@@@@@@@@@@ Aj"( Ak	



 
 A$jB 7  A6
 A 6 A 6   Aj

-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5551-5700

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj


 A$jB 7  A6
 A 6 A 6   Aj


 A$jB 7  A6
 A 6 A 6   Aj


 A$jB 7  A6
 A 6 A 6   Aj


 A$jB 7  A6
 A 6 A 6   Aj
	
 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

  Aj6
 A$jB7  A6
 A 6 A 6  Aj6   A
j6  Aj

  Aj6
 A$jB7  A6
 A 6 A 6  Aj6   A
j6  Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj
! A0j$  


 A$jB 7  A6
 A 6 A 6   Aj


 A
jA+6  A$jB7   Aj6 A6
 A 6 A+6  Aj6  6   Aj6  Aj6   Aj
	
 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 A̚ 6 A 6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 Aؙ 6 A 6   Aj

 A
jA,6  A$jB7   Aj6 A6
 A 6 A,6  Aj6  6   Aj6  Aj6   Aj

 A$jB 7  A6
 A 6 A 6   Aj

 A$jB 7  A6
 AԘ 6 A 6   Aj
! A0j$  
 A j A j( "6   )X"7H  A
j 6    7  A 6 @@ (
 
 AjP

 Aj( @ (

 A
j( E
  (
 Aj$ 
A A7 A jA A  

# A k"$  Aj  ("Ak!@ @ (!
@ E@A!	

A -   At"A"	E
 AlAk! 	! 
!@ Aj   )7  Aj! Aj! Aj! Ak"
 

  
 Alj  ! 	!  ( !
 (!# A0k"$ @@@@@  @ At!
 AkAq!
@ Aq"E@ !  !

 !  !@  Aj( jAj! Aj! Ak"
 

   
j!
 
AO@ A<j!@ (  Ak(  Ak(  Ak(  A k(  A(k(  A0k(   A8k( jjjjjjjjAj! Aj! A@k!  
G
 

A! @ A H
A -   A"E

A ! A 6  6
  6@  Aj( "AO
  ( !
 (
 kAM Aj A (! ( 
 j At AqAvr;    Aj"6  (
 kK@ Aj   (!
 (" j 
    j"6  Aj"  

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5701-5850
G
 
 (


@ E@A!

 A H
A -   A"E

 A 6  6
  6 
 kK Aj   (! ( 
 j 
  Aj  j6   )7  A0j$ 

 
A  
A  
 A$jB 7  A6
 A 6 A 6  AjA  
 (@ 

 @ 	
 A j$ 
 A A  
A  
~# A k"$  Aj( ! (!	 (! ( ! A@k (
"
 Aj( @@@ (@AG@ A<j A j( 6  A4j A j) 7  A,j A j) 7   )@7$

 A j A j) 7   )D7` A jA A
 A j< ( "A
G

 Aj A<j( "6  Aj A4j) "7  Aj A,j) "7   )$"7  A8j 6  A0j 7  A(j 7   7   A
j 	6   Aj 6    6  Aj 7   Aj 7   A j 7   A(j 6   A 6  E
 


 Aj A<j( "	6  Aj A4j) "7  Aj A,j) "7   )$"7   A$j 	6   A
j 7   Aj 7   A
j 7    6  A6  @ 

 E
  
 A j$ 
~# Ak"$  Aj( ! (
! (!	 ( !@@@@@@ (AG@ A 60 B7( A j" A(jA  A 6 A 6  (  ( E
A A7 AjA A  
 Aj( ! -  !
 	@ 
 A(j   ((AF
 A j A@k( 6  A j A8j) 7  A j A0j) 7   )(7L

   ) )7 
  Aj A0j(  6   - (! 	@ 
  A6  A6   A
j :  

 A j A4j) 7   ),7p A jA A
 A j< (H"A
G

 A0j A j) "7  A8j A j) "7  A@k A j( "6   )L"7( A j 7   A j 7   A j 6     
:   A 6   7 K  Aj ) H7    A
j A j)  7    Aj A j)  7    A
j A j)  7   E
 

 A j A j( "6  Aj A j) "7  Aj A j) "7   )L"7  A$j 6   A
j 7   Aj 7   A
j 7    6  A6 
 E
  
 Aj$ 
~# Ak"
$ @@A ( "E
  Aq!
A ) "B˧ٲ ! Bߑܷ !B̓׬۷ ! Axq"
E@Bټ !A 

Bټ !@    
j)  " "|"  |" B
"|" B!  B"B  B |"! B !  ! 
Aj"
 
I
 
 
AkAxqAj
!
B ! 
AK@   
j5  !A!	
 
 	ArK@   	 
jj3   	At ! 	Ar!	
 	 
I@   	 
jj1   	At !
A ( "	E
 
AjA ( A (   B8" "B  |""  |"B |"    B
"|" B"|" B
" B " B B|"|" B"B
  B " B |"|""B  B " B |"|""B
  B " B |"|"" B " B |"|"B " B "B" B ""B  pAtj"
( B"  B |"|"B   "B  |""|" B"B  B
 B3 " |"B |""B   B" |"B |""B  B
 " |"B |"B B "B
  |"B  |"B  j 
(  lj 	pAtj"	) 7  
(
 G
  
(   
  	Aj

A 
!  
Aj$   
A A9A  

   (  
   (   ( 
+# Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j Aj) 7  A j Aj) 7  A j Aj") 7  Aj Aj") 7  Aj Aj") 7  Aj A j") 7   ) 7p  ) 7X A j!
 A@k!	@ - pAG@ Aj ) 7  Aj ) 7  Aj ) 7  Aj ) 7   ) 7  ! Aj!# Ak"$  
( !@@@@@@@@@@@@@@@@ 
Aj( "  Aj"A0j( G
   A(j( "  
  -  "Ak
 A
6  -  !A! A!


 - ! Aj A$j( 6   )
7  A
j A
j( 6  A(j Aj( 6  A6  )7  )7  	A
j( !
 	(!
 A j"
    A0j Aj"  
 
  
 w A j!  Ar! @ (0"
AF@ - 4!
 (t@ (p
 

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:5851-6000

A!


  ) 57  A
j A=j)  7   Aj A j)  7   A
j A j)  7   A%j A j)  7   A-j A j)  7   A5j A j)  7   A<j A j(  6    - 4:   
6  (tE

 (p


 A0j 	(  	(  Aj (0"	A
F
	 A
j )47  A$j A j( 6  A
j A j) 7  Aj A<j) 7  A 6   	6


 - ! Aj Aj( 6   )7  A
j A
j( 6  A6  )7 	A
j( !
 	(!
 A j"
    A0j Aj"  
 
  
 w  Ar!  (0"AF
  ) 57  A
j A=j)  7   Aj A j)  7   A
j A j)  7   A%j A j)  7   A-j A j)  7   A5j A j)  7   A<j A j(  6    - 4:   6  (tE
 (p

 - ! Aj Aj( 6   )7  A
j A
j( 6  A6  )7 	A
j( !
 	(!
 A j"
    A0j Aj"  
 
  
 w  Ar!  (0"AF
  ) 57  A
j A=j)  7   Aj A j)  7   A
j A j)  7   A%j A j)  7   A-j A j)  7   A5j A j)  7   A<j A j(  6    - 4:   6  (tE
 (p

 - ! Aj Aj( 6   )7  A
j A
j( 6  A 6  )7 	A
j( !
 	(!
 A j"
    A0j Aj"  
 
  
 w  Ar! @@ (0"AG@  ) 57  A
j A=j)  7   Aj A j)  7   A
j A j)  7   A%j A j)  7   A-j A j)  7   A5j A j)  7   A<j A j(  6    - 4:   6  (tE
 (p

 - 4! (t@ (p
 E@A!

 A0j 	(  	(  Aj (0"A
G@ A
j )47  A$j A j( 6  A
j A j) 7  Aj A<j) 7  A 6   6

 A jB 7  A@kB 7  B7H B 78 B70 A j" A0j"A A   Aj  A!

 (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (@ ( 
A! A!A 


  6  (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (E

 ( 


 - 4! (t@ (p
 E@A!

 A0j 	(  	(  Aj (0"A
G@ A
j )47  A$j A j( 6  A
j A j) 7  Aj A<j) 7  A 6   6

 A jB 7  A@kB 7  B7H B 78 B70 A j" A0j"A A   Aj  A!

 (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (@ ( 
A !A! 

  6  (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (E
	 ( 
	
 - 4! (t@ (p
 E@A!

 A0j 	(  	(  Aj (0"A
G@ A
j )47  A$j A j( 6  A
j A j) 7  Aj A<j) 7  A 6   6

 A jB 7  A@kB 7  B7H B 78 B70 A j" A0j"A A   Aj  A!

 (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (@ ( 
A!A ! 

  6  (AF@ Aj( @ (
 A j! 
  Aj( @  ( 
 (E
 ( 

 A jB 7  A@kB 7  B7H B 78 B70 A j"	 A0j"A A   Aj 	 A!

 (AF@ Aj( @ (
 ! 
  Aj( @  ( 
 (@ ( 
A! A!A!A 

  6  (AF@ Aj( @ (
 ! 
  Aj( @  ( 
 (E
 ( 

A
!A
!@@@@  
  E

-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6001-6150
 Aj( @ (
 Aj

 E
 Aj( @ (
 Aj

 E
 Aj( @ (
 Aj

 E
 Aj( @ (
 Aj( @ (
 A
j
" Aj( E
   ( 
 
Aj( @ 
 
(
!  
Aj( "@  Aj!@ Aj( @ ( 
 A j! Ak"
 

 
Aj( @  
 A
j( @ Aj( 
 A,j( @ ((
 Aj$ 

  ! A j-  !# A k"$  Aj"
A(j( ! 
( !A
! @@@@@@ 
Aj( " 
A0j( G
    
  	(! 	( ! A:  A: @ AjA    Aj"  A@k   ("
 (
"(
"  (AG@ A j! A j! A j!	 A j!
@ 
 )7  
Aj A(j) 7  
Aj A j) 7  
Aj Aj) 7   6@ ! @@@@@@ (H      
 	! 

 !  (PE
 (L

 !  (PE
 (L

 !  (PE
  (L
  Aj( E
   ( 
 Aj 
   Aj! (AG
 

 
 (   Aj( @ Aj(  

A!  AI
  ! !	A !
# A0k"$ A ( !A ( !  :  A j Aj ( !@@@ (("
E@ Aj  AA 

A -   
At"A" E
 
Al!  ! !@ Aj   )7  Aj! 
Aj!
 Aj! Ak"
 
 Aj     
 
E
   
 ($@ 
  ("  ( 	(   (@  
 A0j$ 

A  
 A jB 7  A jB 7 A -   B7X B 7H B7@AA" E
A -    AjA /  ;    A (  6  AA"E
A ! AjA (  6   A (  6   A jA } (L (TAlj"B 7  6
 B 7   6  Aj A j) 7  A(j A j) 7  A0j A j) 7  A8j A j) 7   (TAj6T A j A j) 7   )@7A -  AA"E
 Aq"A	K@A !  A O@  AqA n" A0r:     A lk!A! 
   j AqA
n"A0r:    A
lk!  Aj!
  j A0r:  A -  AA"E
 AjA )  7   A )  7   A$j( " A j( F@ A
j } ($!
 (
 Alj"  6
  B7   6   Aj Aj6   AjA6  Aj"  )7   Aj Aj) 7   Aj A(j) 7   A j A0j) 7   A(j A8j) 7   ($Aj6$  Aj A j) 7 A! 
   6  
Aj( @ 
 
(
! 
Aj( "@ Aj! @  Aj( @  ( 
  A j!  Ak"
 

 
Aj( @ 
 
A
j( @ 
Aj( 
 
A,j( @ 
 A j$ 

AA 
AA 
AA 
AA 

 Aj$ 
	~# A k"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j :    : X A@k! Aj!	# A k"$ @@ @ A j! ( ! (!# Ak"$  A jA    @@@@@@ (`"A
F@ Aj A j") 7  Aj A j) 7  Aj A j( 6   )d7  Aj" A0j  x (0E
 A j A<j( 6   )47P (@ (
 A8j A j( 6   )P70 A jA A
 A0j; (`"A
F
 A(j A j( "6   )d"7  A j A j) 7  A<j 6   )p7@  60  74 A 6 B7 A j" AjA  A0j 
 A j Aj( "6   )"7P A6   7 A
j 6  A0jP

 A j A j( "6  A@k A j) "7  A8j A j) "7   )d"70 A
j 6  Aj 7  A
j 7   7  6 

  Aj( 6   )7d
 A(j A j( "6   )d"7  A j 6   7P A 68 B70 A j" A0jA # A0k"$  A j" A j A
jB7  A 6
 A6 Aԋ 6   6  Aj6  ! ($@ ( 
 A0j$  
 Aj A8j( "6   )0"7 A
j 6   7 A

-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6151-6300
6  (TE
  (P
@@@@ (  
 Aj( @ (
 Aj

 Ar

 Ar

 Ar
"Aj( E
  ( 
 Aj$ 

A A7 AjA A  
 ( "A
F@ A j A,j( "6  A j 6   )$"7@  7P# A k"$  A0j" A@k  A j"(  Aj( @@ (@@ A(j A j( 6   )D7  (4@ (0
 A j A(j( 6   ) 7@ A A A@k; ( A
F
   ) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 A
j A8j( 6   )07
   )7  A
6   A
j A
j( 6 
 A j$  (TE
 (P

   )07 A j A,j( "6   Aj A8j) 7   )$"7@  A
j 6    7   6  	A
j( @ 	Aj( 
 	A,j( E
 	((

 (! ( ! A: @ A:   AjA    A@k" A j" Ar! (! (
!# A k"$  Aj  (
"
 @@@@@@ ("AF@ A 6 B7   (   Aj( E
 Aj(  

 - !
 A
G
 A0j  (" A (0Aj"A " AM"A N"
E
A -    
"
E
 
 
:   A6  6  
6  Aj  
  ("
AG@A!@ - !
@@ 
A
F@  (F


 A=j A
j)  7   A j A%j)  7   A j A,j(  6    
: 4  
60

 A0j      (0Aj"
A 
~ ( !

  
j 
:    Aj"6 Aj  
  ("
AG
 

  (   Aj( @ Aj(  
  ) 7  Aj Aj( 6 
 A j$ 

 
  
 
 A=j A
j)  7   A j A%j)  7   A j A,j(  6    
: 4  60
  ) 7 5A A+ A0jA A  
 Aj A,j"
( 6   )$7# A k"$   Aj"( ! A@k  ("@@@ (@E@ A j-  ! (D!@ E
  E@ (" (F  | ( 
 ( jA,:    (Aj6
 A@k  -   (@
 AF
  Ak! Aj!@ (" (F  | ( 
 ( jA,:    (Aj6 A@k  -   (@
 Aj! Ak"
 

A ! Aj  (
  ) 7 A
j Aj( 6 

 A
j A j( 6   )D7

 A8j A j( "6  A
j 6   )D"70  7
 A(j A
j( "6   )"7  A
j 6   7 (@ ( 
A!
  6  A j$ @@@ (@E@ 
 A j( 6   )D7$

 A j A j( 6   )D7P A jA A A j; ( A
G

   )$7  A
6   A
j A,j( 6 

   ) 7   Aj A8j) 7   Aj A0j) 7   Aj A(j) 7 
 (E
  (
 	A
j( @ 	Aj( 
 	A,j( E
  	((
 A j$  A j$ 
J  ( "  Aj( "(   Aj( @ Aj(  
  Aj( @  Aj( 


# Ak"$ @ @  A
j( !  Aj( !  Aj( !	  A
j( !
 AjAr! Aj! Aj!
 A jAr! A j!  (!
  ( !
  ((
!@ A(j 
   ((E
 A j A8j) 7  A j A0j) 7   )(7@ A j 
 	   A@k 
 @ (XE@ Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 
 (AG
   (E
  ( 

-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6301-6450
" Aj( E
  ( 

  )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj(  6    - d: 
  (`" 6  A
kAO@ AjP

  AF

 Ak"
 

A !
 Aj$  
# Ak"$ @@ @ A
j( !	 Aj( !
 Aj( !
 A
j( !
 AjAr! Aj! Aj!
 A jAr! A j! (! ( ! ((
!@ A(j    ((E
 A j A8j) 7  A j A0j) 7   )(7@ A j 
 
 
 	 A@k  @ (XE@ Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 
 (AG
   (E
  ( 
"Aj( E
 ( 

  )  7   Aj Aj)  7   Aj Aj)  7   Aj Aj(  6    - d: 
  (`"6 A
kAO@ AjP

 AF

 Ak"
 

   d

  A6 
 Aj$ 
%~# A k"
$  
 Av AqA Gj6  
 Av AqA GjAl6 
 
) 7@@@ 
Aj("
E@A!


 
A N"E
 
 "
E

 
Aj! !
 
(!	 
(
A !A -  !A -  !@@@@@@@@@@@@ Aq" 
A!

A
!

A
!

A
!
  k"A   M"A O


 E
 
 Ak"j-  "A=F
 A j-  AG
 A :  A6  Aj 6  Aj :  

 A k!A !@@@@ A`F
 A j" K
 Aj 
K
@@  
j"-  "A j1  "BQ
  Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BR
 Aj!
 A :  A6  Aj 6 

  
j" B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87  @@ Aj-  "A j1  "BQ@A!

A	! A	j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BR

 A :  A6  Aj  j6 

 Aj B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87  A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  "BQ
 A
j B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87  A!@ Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A
! A

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6451-6600
j-  "A j1  "BQ
 A
! A
j-  "A j1  "BQ
 A! Aj-  "A j1  "BQ
  Aj B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87   	Ak!	 Aj!  "I





A`A A  
 A j A  
 Aj 
A  
 A6  A: 

@@ AI
   Ak"O
 @@@@@ AxG@ Aj" K
 AwK
 Aj 
K
@  
j"-  "A j1  "BQ
  Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BQ@ Ar!

 Aj-  "A j1  "BR
 Ar!
 A :  A6  Aj 6  Aj :  


Ax AjA  
 Aj A  
  AjA  
 Aj 
A  
  
j B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87   Aj! 	Ak!	 !  I
 


 !
@@@@@@@@@@@@@@@@@@@ 	AI@ !	

 	Ak!  k!@  K
 AyK
 Aj"	 
K
  F
  
j"-  "A j1  "BQ
 AI
 Aj-  "A j1  "BQ
 AM
 Aj-  "A j1  "BQ
	 AM
 Aj-  "A j1  "BQ

 AM

 Aj-  "A j1  "BQ

 AM
 Aj-  "A j1  "BQ
 AM
 Aj-  "A j1  "BQ
 AM
 Aj-  "A j1  "BQ@ Aj!

  
j" B4 B: B. B( B" B
 B"BB BB B(B B8>   Aj  B"BB BBB =   Ak! Aj! 	! Ak"
 

 	! A G!A !	B !A !A !A !# A k"$ @@@  "O@  F@A !


  
j!  
j!A !@@@A !
@  
j!  
j"-  "	A=G@ 

 	A j1  "BQ
 Aj!  Aj"A:lA>q !A !
 	! Aj" G


   
! Aq@  
Aj"
j F




 A ; A6  Aj  j6 

 A ; A6  Aj  j6 

 A :  A6  Aj 	:   Aj  j 
j6 

  AЂ  
  k!
 !	
@@@@ Ak 
 
 jAq


 
E
 A6  A: 

 A6  A: 

B!A !A !A !A !A !@@@@@@@@@@@@ 	   
 A
jB7  A6 A 6  A 6
 A 6  Aj6 A  
B!A!

B!A!A!

B !A!A!A!

B(!A!A!A!A!

B0!A!A!A!A!A!

  Pr


 B  PrE
   

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6601-6750
  
K!	  
O
  
j B8<   Aj! 
 !

 A:  A6  Aj 	:   Aj  jAk6 

  	F
  
j B0<   Aj! E@ !

  	F
  
j B(<   Aj! E@ !

  	F
  
j B <   Aj! E@ !

  	F
  
j B<   Aj! E@ !

  	F
  
j B<   Aj!
  6   j6  
A G6 

 	 
A  
 A j$ 

 Aj!

  A  
  AjA  
 Aj 
A  
A A A  
AAA  
AAA  
 Aj!
	
AAA  
 Aj!

AAA  
 Aj!

AAA  
 Aj!

AAA  
 Aj!

AAA  
 A :  A6  Aj 6 

 A :  A6  Aj  j6  Aj :  

 Aj :  
 
)!@ 
(AG@   
6   
6    
 B "    
K6

  A 6    7 
E
  

 
A j$ 
 
  
 

~# A k"$  -  ! An!A  A{K
  At!A  Alk"E
  E@AA AF r!A

  Aj"M
!  6  6 @@@@@ ( @@ ("E@A!

 A N"E
  "E

 !
A !A !A !@ "	AI
  	Ak"A   	M!
@@@ 	 AjO@ A`F
 A j" K
  j" Aj"  
j"
)  "B8"B:j-  :   Aj  BB"B"j-  :   Aj   BB("B4A?qj-  :   Aj   BB "B.A?qj-  :   Aj  B(A?qj-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  
Aj)  "B8"B:j-  :   A	j   BB("B4A?qj-  :   A
j   BB" BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   Aj  "
AvA?qj-  :   Aj  
AvA?qj-  :   Aj  
A
j)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"j-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  
Aj)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   A
j  "
AvA?qj-  :   Aj  
AvA?qj-  :   ! 
 Aj"O



 Aj 	A  
A`A AȀ  
 A j AȀ  
@@@@@@@@@@@ 	 	Ap"
k"
 M@ !

@ A|K
 Aj" 	K
 A{K
 Aj" K
  j" Aj"
  
j"-  "Avj-  :   Aj 
 Aj-  "A?qj-  :   Aj 
 Aj-  "At AvrA?qj-  :   Aj 
 At AvrA?qj-  :   ! " 
I
 

@@ 
Ak 


-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6751-6900
  O
A!  j  
 
j-  "AvjAj-  :    Aj"K@ AtA0q!


  A  
  O
  j  
 
j-  "
AvjAj-  :   
Aj" 	O
 Aj" O
A!  j  
At  
j-  "AvrA?qjAj-  :    Aj"K@ AtA<q!
	
  Aȁ  
  AjA؀  
 Aj 	A؀  
  AjA  
 Aj A  
  A  
  A  
  	A  
  A  
  j  jAj-  :    j!
 " -    K
  j!  k!@@A  kAq"E
  E
 A=:   AF
  AF
 A=:  AF
  AF
 A=: 
 

  A  
A 
 jK
 Aj   (E
 )
"BB Q
  7  6  6
  6Aա A
 AjA AԢ  
A A-A  
 
   
  A  
A A*A  
   6   6   6  A j$ 
0~# Ak"$  Aj   A j  A0j  Aj (" (@@@@ (AF@ Aj Aj) 7   )7x AjA A A j<

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"  Aj) 7  Aj" Aj) 7   )"$7 $AF
  A j  ) 7  A j ) 7   )7@ (! (! )!$ (! (! )!% Aj ( " ((@@@@@@ (@ Aj Aj) 7  Aj Aj) 7   )7

 Aj Aj) 7   )7 AjA A  Aj< (A
G

 Aj( !
 Aj( ! Aj( !
 Aj( ! Aj"( ! (! Aj" (0" (8 Aj!# A k"
$  
Aj @@@ 
- Aq@ 
- 	" A"F
  A F
 A:   A
6

 A:   A6

 
Aj -@ 
(" AF@A! 

  
/ ; 	 A
j 
- :   
- ! A
j 
)7  Aj :  
 A:     6

 # A k"	$  	Aj -@@ 	(" AF@ 	- ! 	Aj  	(" AF

 	Aj" 	- :   	 	/ ;
 	- ! 	(! 	(
!   6  	/
; 	 A:   Aj :   Aj 6  A
j 6  A
j -  :  

 @# A k"$  A j!# Ak" $   A0j @@@@@@  - 0Aq@@  - 1A F@   A(j   - ,!  A j  (("  -  AqE@A!

 Aq!@@@  - !"A,G@ A F
 
A	!


 @A!


   Aj   - AqE@A!


  - !
@ A G@A! A"F



A!
	
  Aj   ("AF


  AjA A`  (AG
  - !

  Aj @  ("AG@  AjAr"  )7  Aj  Aj( 6    6

  Aj   (AF

  A j  Aj) 7     )7l

 A:   A6

  A j  Aj) 7     )7l

 A:   A6

  - !  Aj A!  - AqE@A!

  - "
A F
 A	! 
A,G
   Aj A!  - AqE
@  - 	"
A G@A! 
A"G
  Aj   ("AG
  A jArA Ab

A!



-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:6901-7050

  A j"  A j(  6    A j"  A j)  7   A@k"
 ) 7   A j" (  6     : i    ) i78  A j   (h"AF@ A:     )87  A	j 
) 7   Aj (  6  

 Aj  )l7  Aj  A j( 6  A:    6

    ) 7    Aj(  6   - !
  A j :    A j  ( 6     6l    )7 q
  A j  A j) ""7      )l"#7 S A
j "7    #7  A:  
  Aj$ @@@ - H" AG@ A?j" A j(  6   A8j" A j)  7  A$j A j) 7  A,j A j( 6  Aj ) 7   Aj (  6    ) I""70  )\7
  "7 	   :    -  AqE
 - A G
  A j A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )7 

 A;j A j) ""7    )L"#7 3 A
j "7    #7  A:  

 A:   A6  AF
 Aj

 A:   A
6  AF
  Aj
 A j$ 

# A k"$  A j!# Ak" $   A0j @@@@@@@@@@@  - 0Aq@  - 1A G
   A(j   - ,!  ((!  A:   A j   -  AqE
 Aq!
@  - !"A,G@ A F
A	! 

A!


A! 
@A!


   Aj A!A!  - AqE
	  - !
 A F
A! A"G@A!
	
  Aj "  ("AG
  Aj   ("AG
  Aj #  - AF
  Aj"
  Aj") 7   Aj"
  Aj"
) 7   Aj"
  Aj") 7   Aj"   Aj"!) 7     )7  Aj A!  - AqE@A!
	
  - !@@@ Aq"A,G@A	! A G

  - AG



   Aj   - AqE@A!


  - 	"A"G@A! A G


	
  Aj "  ("AG
  - AF
  A jArAƁ Ab


  Aj  Aj) 7   Aj  Aj) 7   Aj"  Aj) 7   Aj  Aj) 7     )""7x ""AqAF

  A j" (  6    A j"  Aj)  7   A j  Aj) 7   A j  Aj( 6   A j ) 7    A j (  6      ) y""7`    )7L   "7 9   : 8  Aj   ("AG@ Aj  )7  Aj  Aj( 6  A:    6 AqAF
  A8j

   )87  A j  A j) 7  Aj  A j) 7  Aj  A j) 7  Aj  A@k) 7 


  Aj   ("AG
  Aj #  - AF
 
 ) 7  
 
) 7  
 ) 7    !) 7     )7     - !  -  Aq
 


 A:   A6


 A:   A6
	
  Aj  )7   Aj  Aj( 6    6
  Aj  Aj) 7     )7|

    ) 7    Aj(  6   - !

A!A!

  AjArAƁ A`  Aj  Aj) 7     )7|

A!A!
  Aj :    Aj  ( 6     6|    )7   - AF

  Aj
  A j  Aj) ""7      )|"#7 c A
j "7    #7  A:  
  Aj$ @@@ - H" AG@ A?j" A j(  6   A8j" A j)  7  A$j A j) 7  A,j A j( 6  Aj ) 7   Aj (  6    ) I""70  )\7
  "7 	   :    -  AqE
 - A G
  A j A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )7 

 A;j A j) ""7    )L"#7 3 A
j "7    #7  A:  

 A:   A6  AF
 Aj

 A:   A
6  AF
  Aj
 A j$ 
 	A j$ 
 
A j$  - "AF
  Aj( " 6  Aj Aj) 7  Aj Aj( 6   - :   / ;   )""7  )7  ("6 Aj  6   "7  :  Aj Aj (" AF
 Aj Aj( 6   )7 AF
 Aj

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7x A 6 B7 Aj"  AjA  A j  
 Aj Aj( 6   )7 A 6 A jP

 Aj" Aj"Aj( 6  Aj Aj" Aj) 7  Aj  Aj( 6   Aj"Ar"/  ; y  ) 7   ) 7  Aj-  : {  6|  : x Aj"  ( 6  Aj" )7  Aj Aj) 7  Aj Aj) 7  Aj  ) 7  Aj ) 7   )x7 Aj 
6  Aj 6  Aj 
6  Aj 6  Aj 6  Aj A j) 7  Aj A j) 7   6  %7  6  6  $7  6  6  )@7 AjA 6  AjAȐ 6  AjA 6  Aj Aj" 6  Aj  6    6 A  Aj Aj"  Aj AjA (     f (4@ 
 ($@ 
 (E
 

 Aj Aj( 6   Aj) 7 (! 
 Aj" Aj( 6    6  )7 AjA A Aj< Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 Aj"  AjA  Aj  
  Aj( 6   )7 A 6 AjP @ 
 
@ 
Aj! @  Aj( @  ( 
  A j!  
Ak"

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7051-7200

 

 E
  

 @ 
 E
 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A 6 B7 A j"  AjA  Aj  
 Aj Aj( 6   )7 A 6 AjP
 (4@ (0
 ($@ ( 
 (E
  
 Aj AjO@ (E@ Aj Aj( 6   )7|

 Aj Aj( 6   )7 A jA A  Aj; (xA
F
  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )x7A A+ AjA A  
 Aj Aj( 6   )|7  !  AjQ Aj$   

Ȃ A7 AjA A  

"~# Ak"$  A j   A0j  Aj ( "
 ((@@@@ (AF@ Aj Aj) 7   )7 A jA A Aj<

 Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7  A j"  Aj) 7  A j" Aj) 7   )"7X AF
  A j  ) 7  A j ) 7   )X7@ (p!
 (t!
 )x! (! (! )! A j"  (0" (8 Aj!# A k"
$  
Aj  @@@ 
- Aq@ 
- 	"A"F
 A F
 A
6 

 A6 

 
Aj  + 
(" AF@ A6 

  
/ ;  Aj 
- :   
- !  
)7  :    6 

  # A k"$  Aj  +@@ ("AF@ - ! Aj   ("AF

 Aj"  - :    / ;
 (! (
!  - :   6   /
;   6
  6 Aj  -  :  

 @ Aj!# A k"$  A(j  @@@@@@@ - (Aq@ - )A F@   A j   - $! Aj ( " - AqE@A!

 Aq!@@@ - "A,G@ A F
 
A	!
	
 @A!
	
  Aj  - AqE@A!
	
 - !
@ A G@A! A"F

	
A!

 A j  (`"AF


 A jA A` (`AF@ - d!

 A8j A j) 7   )`70

 A j @ (`"AG@ A jAr" )d7  Aj A j( 6   6P

 A j  (PAF

 A8j A j) 7   )P70

 A6 

 A6 

 - T! Aj A! - AqE@A!

 - 	"	A F
 A	! 	A,G
   A! -  AqE
@ - "	A G@A! 	A"G
 A j  (`"AG
 A0jA Ab

A!



A!

  ) e7@  A j(  6 G - d!
 A<j ( G6    : 4  60  )@7 5
 (0"AF@ - 5! - 4!

  )67 Aj A>j/ ;   /4;  6 

 A j   (`"AF@  :  A6  Aj :  

  )d7 A
j A j( 6   6 
 A j$ @ ("AF@ - ! - ! Aj   - AqE
  - 	A F   Aj :    : AA

6 

  )7 Aj A
j/ ;   /;  6 

 A6 

 Aj!# A0k"$  Aj  "@@@@ - Aq@@ - A F@  Aj  - ! Aj (" - AqE@A!

 Aq!	@ - 	"A,G@ A F
 	
A	!

 	
    -  AqE@A!

 - !
 A"G@ A G
A!

 A j!	# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
 	  AЪ A a

 )! 	 (
6
 	 7 	 6 


-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7201-7350
 	  AЪ A a E
 

 	A6 

 	A6 
 A j$  ( "AF
 - %! - $!

 A6 

 A j  ( "AF
  )$7 A
j A,j( 6   6 

 A6 

 A6  A : 

A!
  )&7 Aj A.j/ ;   :   :   6 
 A0j$ @ ("AF@ - ! - !    -  AqE
  - A F   Aj :    : AA

6 

  )7 Aj A
j/ ;   /;  6 

 A6 
 A j$ 
 
A j$ @@@@ ("AF@ - !  - ! Aj A j ("AF

 Aj"  Aj"/ ;   )7  - ! - !   / ;   :   :   6  ) 7 AjA A Aj< (A
G
 - !  - !
 Aj A j) 7  Aj A j) 7  Aj  :   AjA 6  AjAȐ 6  AjA 6   )@7 Aj Aj"6  Aj 6   7  6  6  7  
6  
6  :   6 AjA  Aj Aj A G  A (  @ (A
F@ A
j Aj( 6   )7 A 6 

 A j Aj) 7  A j Aj) 7  A j Aj) 7   )7X A 6 B7 Aj"  AjA  A j  
 A
j Aj( 6   )7 A6  A jP
 (4@ 
 ($E
 


 A j Aj) 7  A j Aj) 7  A j Aj) 7   )7X A 6 B7 Aj"  AjA  A j  
 A
j Aj( 6   )7 A6  A jP 
@ 

 E
 

A A7 AjA A  


 Aj A j) 7  Aj A j) 7  Aj A j) 7   )`7 A 6 B7 Aj"  AjA  Aj  
 A
j Aj( 6   )7 A6  AjP
 (4@ (0
 ($E
  

 Aj!# A0k" $  Aj!  @ ( E@  Aj!# A@j"$   ("  (F   |  ( 
  ( jA :  A!    (Aj6   A A@@ ( E@  ("  (F   |  ( 
  ( jA::      (Aj6 A0j     (0" (8 (4@ 
 ( 
  ("  (F   |  ( 
  ( jA :      (Aj6A !

 Aj A
j( "6   )"7 A
j 6   7

 A(j A
j( "6   )"7  A
j 6   7
  6  A@k$ 

  Aj   N
   (E@   ) 7 A
j  Aj( 6 A 

  A(j  A
j( "6     )"7  A
j 6   7  (@  ( 
A
6   A0j$ @@ (E@ A j Aj( 6   )7\

 Aj Aj( 6   )7 A jA A  Aj; (XA
G

 Aj A j( 6   )\7 Aj!  Aj( @ (
 Aj$   

 Aj A j) 7  Aj A j) 7  Aj A j) 7   )X7A A+ AjA A  
Ȃ A7 AjA A  

 A|
<
~# Ak"$ @@@  @@@@@@@@@@@@ ( Ak 
 A(j  Aj (( (, (!) (!
 A j  ($! ( ! Aj Aj" Aj  ) 
   ( (
 (
  (AF@ - 

 Aj  (! (! Aj  (! (
!# Ak"$ # Ak"$     ( !
 (! A0jA A ! A jA ) 7  A(jAȼ ( 6  B 7 A ) 7@ A?M@  
 

 Aj!  Av7 A?q! 
 A@q"j!
 
!@   A@k! A@j"
 
  
  !
  : p A j AjA  Aj-  ! )x!C Aj Aj( 6  Aj Aj) 7   Aj"j"A:    )7 A?s"@ AjA  
 A j! ! !
 B CB	!C@ A8sAO@ Aj C7  Aj 

 Aj"  AjB 7  AjB 7  AjB 7  AjB 7  AjB 7  AjB 7  B 7  C7  Aj
 Aj" Aj) 7  Aj" Aj( 6   )7A -  @AA"+@ + )7   +Aj ( 6   +Aj ) 7   B7  +6 (@ 

 A j!A !# A k"$  A 6 B7@@@ Aj"Aj( "
E
  ( !A !@ Aj -  " AM  Aj AqAv
 At! Ak
"Aj"Aqv AqAvr
 Aj! A kAqt! 
Ak"

 
 Aj AK Aj AqAv
 AF
 At 
AqAv

  )7  Aj Aj( 6  A j$ 

Aƿ A+ AjA A  
 Aj! A !A !A!A !# A k"

-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7351-7500
$  
A 6 
B7 
A j!
A!A !@@@@ E@ Aq
AA !

@@ -  "A!kAqA M@ A kAqAO
A!

 
 6 
A:  

 A kAqAI r!
 Aj! Ak! E AqEr
 
 
A:  

A ! E
 A A(A  
 
A:   
 : 
@@@@@ 
- X"AF@ 
- YE@ 
Aj!# A k"$ A -  @@@AA"@  6 A6
 A 6A !@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F
 Aj
!
@@ AG@ A G


@ E
  AO@ AF


 A j,  AL

 A j!A !@@@@@ A F
 Ak"-  "AtAu"A H@ A?q Ak"-  "AtAu"A@N@ Aq

 A?q Ak"-  "AtAu"A@N@ Aq

 A?q Ak"-  AqAtr
Atr
Atr"A F

@ Aq
  E
 A !A 

A
! ! A F
 
 E
  Aj"@ AO@ AF



 A j,  AL

A kA
 A j"j!A !@  F
 ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F
 Aj
!@ Aq
  E
 A !A 

A
! A F
 
 E

Aχ! (
 ("kAI


Aυ! (
 ("kAK

 Aj A (!
 ( j ;    Aj6

 Aj!A !@ AO@A
!A
!@@@A Av j"AtA j( " G  K"AF@ !

 AqAG
 Aj!
  k!  K
 
 B 7  6 

 BB  AtA j( "A F AsA kAIr"7 A   6 

 B 7  A kAqAIAt r6 
@ ("E@ (!

 (
! Aj" (   E

 Aj 
  k 
j! 
"A G
 


AA 
A A AA  
A AA  A  
  )7  Aj Aj( 6  A j$  
(! 
(
! 
A j( !
 
A(j!# A k"$  A :  A6 A 6
  
Aj"6@@    " A (  E@ A1Ađ (   E

 A: 
 AjE
A A- AjA A  
A! @ ! !@ AtAq -  Avr"
As 
 Av"Aq"
A²s 
 Aq"
As 
 Aq"
As 

-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7501-7650
 Aq"
As 
 Aq! Aj! Ak"
 

 AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq! @@ AtAq -  Aqr"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq! Aj! Ak"
 

 Aj" 6   )7  Aj ) 7 
 A j$ A 
- 4AF
 
A@k 
A0j) 7  
 
)(78 (! ( !@ E
 Ak! -  ! Aj! 
A8j"
 
("AtAq s"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq6 A O@ A A  
 
(  AtA j(  
((  E
 
 
A j 
A@k) 7  
 
)87H# Ak"$ @ 
A jE@ Aj$ 



A

  Aj 
(Z6   A
j 
/^;  
- Y! Aj( @ ( 
   :   A 6   Aj :  

 
A j 
A@k) 7  
 
)87X# Ak"$ @ 
A j""@ 

 Aj$  




! E ErE@ 
 Aj( @ ( 
 
   
)7   Aj 
Aj( 6 
 
A j$ 

A A+ 
A jA Aȓ  
A A- AjA A  
  (@  )7 A
j Aj( 6 A

  )7A
6  + Aj$ 

AA 
@@ ( "AF@ Aj"( !   (" A
j"
(  
(
 @ ( "A
F@ ( ! 
( ! (! A jA  ) 
s 
B7  A jA6   (X6  (P"6 A6 A 6  A6t  6  6  A j6  Aj6x  Aj6p A j"    A@k ( " ( (@ 
 (d@ (`
 (T@ 
 @ 
   (@" (H     
(
  -  ( ( "AF"! E
 A6   Aq:  (D@ 
 E
 

 Aj )7  A j Aj) 7  )!C Aj (
6  A
j C7   6 A 6 

  6 A6  Aj 6  (DE
 

  )7 Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7  A8j A8j) 7  )!C  (
6
  C7  6 

 E
  
 Aj$  (h"AG
 - l!  A6    :  (E

 )


 (! A
j( "AM@A  AF


 , AL

 Aq
 Ak
! A 6 B7p  6l  Aj6h  Aj6x Aj!
# A k"
$  
Aj A j" (:@@@@ 
- "AG AqqE@ 
A 6 
B7 

 
- !@ (( A G
  Aj( E
  Aj( E

A -  AA"
E
 
 :   
B7$ 
 
6  
A@k Aj( "6  
A8j Aj) 7  
 ) 70 
Aj 
A0j :@ 
- "AF AqEr
  
- !A!@@  
($G
 @@ 
(@( A G

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7651-7800
  
(4E
  
(8E

 
A j A~ 
( !


A AAģ  
  
j :   
 Aj"6( 
Aj 
A0j 
(@: 
- "AF
 
- 	! Aq
 

 
 
) 7  
Aj 
A(j( 6 
 
A j$ 

AA 
A AAģ  
 ("A G@ (! (E
 (

 (! (! ("E
 A j  (T! (P!
 A j  A j! ! (H! (L!# Ak"$ @@@@@@ A O@ A 60 B7( A(jA A~ (("
 (0"j"AȾ )  7   AjAо )  7   AjAؾ )  7   AjA /  ;    Aj"60  6H A 6p B7h Aj" A jA  A j 
 (l! (h! (p"
 (, kK@ A(j  
~ (0! ((!

 
 j  
  
 j"60 @ 
  (, kK@ A(j  ~ (0! ((!

 
 j 
  A j"
B 7  A j"
B 7  A j"B 7  B 7H A j"  
  j Aj" A  A j Aj ) 7  Aj 
) 7  A j 
) 7   )H7 (,@ 

A
!@ - @"

 
A!


 A
6 

A !

 Aj  AjA  A  
 (
	  Aj( ! (!
 ("
@ E
 A j"B 7  A j"B 7  A j"B 7  B 7H A j"
 
 
Aj Ak Aj" 
A  A j A0j ) 7  A8j ) 7  A@k ) 7   )H7(  AFAA  A4jAA
6  
E
 


  
6 Aj 6 A!
  6 

A A7 AjAȻ A  
AA A  
 Aj$  (hAG
  A6   A: 

 A j  A j": (` (d A j   ! Aj!; (X! (\! (!< A
j( !8 (!A Aj( !BA !A !# Ak"
$ @@ < 8j@ < 8j" 
 A6 

 A6 

@ @  (!  ( !
@  j"-  A.F
  Aj"G
 

 
A6 
Aj A6 

 
A6 
AjA !  Aj"= Ak F
   k" Ak!  Ak! @@  j"Aj-  A.F
 Aj! Ak"AG
 
  ! =

A!
 !  Aj
!
 
A6 
Aj" 
Aj 6  
AjA6  
 =6 
A 6 
 6 
 6 
A0j!A !# Ak"$ A! Aj!@ (  j! Aj! Ak"
 
@@@@ E@A!

 A N"E
A -    "E

A ! A 6  6  6  Aj!@ ( ! Aj( " ( kK@   ~ (! ( !
  j     j"6 Aj" G
 
  ) 7  Aj Aj( 6  Aj$ 

 
   
@ 
E@ A6 

A !@  E
 @  
j-  A.F

-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7801-7950
   Aj"G
 
  !
 
A6 
Aj"    
 r 
)!J@@@@@ 
(".@ 
A;d 
 6` 
A 6\ 
B7T 
 6P 
A 6L 
 6H 
 
6D 
A;6@ 
A(j 
A@k 
(,! 
((! 
A6@@@@@@ @ 
Aj"     r 
)!K 
("9E
 
A j 
A@k 
($! 
( ! 
A6 E
 
Aj"     r 
)!L 
(">E
 
Aj" 9 KB  
Aj" > LB  
Aj!# A k"
$  
A(j"  A(j) 7  
A j A j) 7  
Aj Aj) 7  
Aj Aj) 7  
Aj Aj) 7  
A8j Aj) 7  
A@k Aj) 7  
A j Aj) 7  
A j A j) 7  
A j A(j) 7  
 ) 7  
 ) 70@@@@  ( "AO@ 
(" E
 
(

 E
 !  
Aj
!  At  At jAk) ykA M
 A
!


 
A8j"!
 
A j( "!  AO@ 
(8!
 
A4j( ! 
  @ 
) !EA
!
  AG

 !  "AO@ 
A4j( ! 
(8! 
@ AO@    
( 
(AqAO
A!


A!
    
Aj AqAI
 
Aj

 
(! 
(
! A!
 E
   -  AqE
 A	!
 AO 
(8! 
A4j(  
E
  -  AqE
  EBT@A
!


 EBX
A
!

  
6 A6  Aj E7  
((AO@ 
(
 
A j( AI
 
A8j( 

  
A 
 
A j$  
("?AF
 
Aj" 
Aj( 6  
Aj" 
Aj) 7  
Aj"
 
Aj) 7  
Aj"  
Aj) 7  
Aj" 
Aj) 7  
Aj" 
Aj) 7  
Aj" 
Aj) 7  
Aj 
Aj) 7  
Aj 
Aj) 7  
Aj 
Aj) 7  
 

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:7951-8100
)7 
 
)7 
A j ) 7  
A j ) 7  
Aj ) 7  
Aj  ) 7  
Aj 
) 7  
Aj ) 7  
Aj ( 6  
 ?6h 
 
)7l 
A A !
 Aح ) 7  AЭ ) 7  Aȭ ) 7  
B 7 
A ) 7 
(4! 
(0"! 
Aj!
@@A  
- @"k" 
(8" M@ @  
j   
 
) B|7  
 
A  j!   k! 
  A?q!   A@qj!  A O
 
   : @

  
j    
   j: @

 
 
)   Av" |7  
    
   : @
 @ 
 
Aj"  
AjA  
Aj"B 7  
Aj"B 7  
Aj"B 7  
B 7# A@j"
$   A(j"  A j-  "
j"A:    ) "CBB CBB CBB CB	"EB8!D 
"CB; E CB"CBB( CBB CBB!C 
A?s" @ AjA   
 
Aj!
 C D!C@ 
A8sAO@  A j C7     A

   A 
A0jB 7  
A(jB 7  
A jB 7  
AjB 7  
AjB 7  
AjB 7  
B 7  
 C78   
A
  A : h 
  (
" At  AqAtr  AvAq  Avrr6 
 
  (" At  AqAtr  AvAq  Avrr6  
  (" At  AqAtr  AvAq  Avrr6  
  (" At  AqAtr  AvAq  Avrr6  
  (
" At  AqAtr  AvAq  Avrr6 
 
  (" At  AqAtr  AvAq  Avrr6  
  (" At  AqAtr  AvAq  Avrr6  
  ( " At  AqAtr  AvAq  Avrr6   
A@k$  
Aj" ) 7  
Aj" ) 7  
Aj"  ) 7  
 
)7 
AjA { 
(
!@ 
("+ 
)7   +Aj ) 7   +Aj ) 7   +Aj  ) 7  # A k"$ Ağ -  "A(O@ A'A  
 Aj"  6  Aş 6 A -   (
! (! A!
@@AA"@ A:  A0:  A0:    :   Aj:   A(j:  B 7  6A! @ AjA ~ (!
 (! (!
  j      j"6 
 kAM@ Aj A~ (! (!
  jA6  @ ("  Aj"M@ !

 E@A! 

   A "E

 
 6 
B7  
A
j 6  A j$ 

AA 
A  
 
A j!
 +!) JB !# Ak"$ @@@@@@@@ 
( @ 
(A G

 
A
j( !0 
Aj( !@ E@ A68 B70 Aj"
A 6  A 6 Aj!# Ak"$  A0j" (!  ( !@@@@  (" E
  n"     lGjA 
! A! (("!
 A(j!   AO (!
 A
 
kK@   
j"  
I
A  AkgvA   AOAj" E
 Aj    (" AxG@  E
   (
 
 ( !
 AM@ Aj!
 !  

 Aj!  (!
 ! (
" O
 
 Atj!
@@ E
~    I"AM@ AF@ 5 

A A A  
 ) 

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8101-8250
!C  k!  Atj! 
 C7  
Aj!
  Aj"G
 
 !

   6 

A AA  
A AA  
   6  E
  Aj! Aj!@~    I"
AM@ 
AF@ 5 

A A A  
 ) 
!C ( "AI@ !
 ! A! 

 ( !
 ( !  
!  
k!  
F@# Ak"$ @@@ ((" AO (  
Aj" E
 A  AkgvA   AOAj" E
  Aj    (" AxG@  E
   (
 
 Aj$ 

A AA  
A AA  
 (!
 ! (! 
 
At j!   
Atj C7   ( Aj6  
 

 Aj$  Aj"
 
) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j" Aj) "C7   )7p A jAr! C!@ ! ("!  AI"
E@ ! (t! 
@  E
   At jAk) B R
  
!  
E@ (t! ! 
 E
   Ak6 


 A(j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7   )p7 

 A N"E
A -    " E
   . !@ AF
   j!A ! Av"
AG@ Ak!
A ! A  AvAqk! !@ Aj"-  !    
j"
-  :   
 :   -  !  
Aj"-  :    :   Aj!   Ak" G
 
A   k!
 AqE
   j" -  !   
 Asj  
kj" -  :     :  
    
 ((" AM Aj (!  (
! 
(("AO@    
( 
(AqAI
A  
(" E
 
(

    
Aj AqAO


  A6  
A
j( E
 
Aj( 

 
   
A  E
 !  
Aj
!  AtAr  At jAk) ykAv
 G
  Aj! 
A0j!$# Ak"$ @@@ 
((" AO@ 
(E
 
(

  E
 
Aj
-  AqE@A -  AA"E
# A6  B 7  6 Aj" A 6  A 6 Aj Aj Aj"
  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) 7   )7  AjAr! 
( !@ 
! ("!  AI"
E@ ! (! 
@  E
   At jAk) B R
  
!  
E@ (! ! 
 E
   Ak6 


 A(j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7  $(("!  AO $(  

  ) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7 

 !# Ak"$ @@@@ 
(("AM@ 
Aj!
 

 
(!
 
(
@ 
-  AqE
 AM@ 
Aj!
 

 
(!
 
(

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8251-8400
E
  
) "DB7 DAqE
 "
AO@ 
(!

 ((" AM Aj (!  (
! Aj"A 6  A 6 Aj    Atj A8j ) "C7  A0j Aj) 7  A(j Aj) 7  A j Aj) 7  Aj Aj) 7   )7 C"AO ( 
 
M
 Aj Aj 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 (AO@ (
 (8AO@ (
 A8j Aj) "C7  A0j Aj) 7  A(j Aj) 7  A j Aj) 7  Aj Aj) 7   )7 C!

A A A  
A A A  
 A 6# A k"$  A 6  Aj6  Aj Aj" Aj) 7  Aj  Aj) 7    ) 7# A k"$  A 6
  6 A 6  Aj6 A 6 A6
@ Aj" ( E@ A jA6  A jA6  A jB7  A6\ A 6X A6<  A8j6`

 A0j  Aj) 7  A(j  Aj) 7    ) 7  A jB7  A jA6  A jA6  A jA6  A6\ A 6X A6<  A8j6`  A j6P
  Aj6H  Aj6@  Aj68 A jA  
A A$A  
@@ AO@ ( 
O
 (" 
I
  
M
  
6

  
O

 Aj 
 k
A -  @@AA"@ DB}"C C~"CB| DB}~ C C~"CB|~ C C~"CB|~ C C~"CB|~ C C~"CB|~ C C~B|~!G A6  B 7  6 Aj" A 6  A 6 Aj Aj Aj"
  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) 7   )7  AjAr! 
( !@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! ! 
 E
   Ak6 


 A j Aj) "F7  A j Aj) "I7  A j Aj) "H7  A j Aj) "E7  A j Aj) "D7   )"C7@ Aj F7  Aj I7  Aj H7  Aj E7  Aj D7   C7@ 
At"E@ (D! (@" AF@ ((" AM Aj (!  (
! Aj"A 6  A 6 Aj    Atj Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj ) 7   )7 (! (! 

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )H7

 ( Aj (AF"((" AO@ (! 
 A 6 A 6@   Av"Arj" AI
  Aj Aj   (" AxF
   E
   (
 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj"     ( Aj (AF"((" AM@ Aj

 (!  (
"   Atj Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 (! (! 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) 7   6   6  )"C7 C!
 Aj! AjAr!@ ! ("!  AI"E@ 
! (! 
@  E
   At jAk) B R
  
!  E@ (! ! 
 E
   Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7@ E
  (AF
  (AI
  (
 Aj Aj 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 (AO@ (
 (AO@ (
 A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) "C7   )7@@ C"AO@ (D" 
I


  
O

 A@k 
 k


$
A AA  
A -  @AA"@ A6  B 7  6 Aj" A 6  A 6 Aj Aj Aj"
  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) 7   )7  AjAr! 
( !@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! ! 
 E
   Ak6 


 Aj"  Aj) "C7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7   )7p@@@ C"AO@ (t" 
I
 A jAr! 

  
I

  
M
   
6 

 A j 
 k
A -  AA" @ B7   6 A6 B7 Aj" A 6  A 6 Aj Aj Aj"
  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) "C7   )7 AjAr! C!@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! ! 
 E
   Ak6 


 Aj" Aj"
) 7  Aj" Aj") 7  Aj" Aj") 7  Aj" Aj") 7  Aj"  Aj"
) 7   )7 Aj A j A@k 
 G 
 Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj"  ) 7   )7 (" (F@ Aj  (!
 ( A0lj"  )7   Aj ) 7   Aj ) 7   Aj ) 7   A j ) 7   A(j ) 7   Aj6 A6 B7 A 6  A 6 Aj Aj 
 ) 7   ) 7   ) 7   ) 7  
 ) "C7   )7 AjAr! C!@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8401-8550
  
!  E@ (! ! 
 E
   Ak6 


 Aj" Aj") 7  Aj" Aj") 7  Aj" Aj"
) 7  Aj" Aj") 7  Aj"  Aj") 7   )7 Aj Aj A@k 
 G 
 Aj"% ) 7  Aj"& ) 7  Aj"' ) 7  Aj"( ) 7  Aj"  ) 7   )7 ("  (F@ Aj   (! 
 (  A0lj" )7  Aj ) 7  Aj () 7  Aj ') 7  A j &) 7  A(j %) 7    Aj6 AjAr!
A!@@ A6 B7 %A 6  A 6 Aj Aj Aj" %) 7   &) 7  
 ') 7   () 7  Aj" ) "C7   )7 "
Aj! C!@ ! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  !  E@ (! 
! 
 E
   Ak6 


 Aj" ) 7  Aj" ) 7  Aj" 
) 7  Aj" ) 7  Aj" ) 7   )7 
Ak"
 (" O
 Aj ("  
A0lj  A0j 
 G 
 % ) 7  & ) 7  ' ) 7  ( ) 7   ) 7   )7 ("  (F@ Aj   (! 
 ("  A0lj" )7  Aj ) 7  Aj () 7  Aj ') 7  A j &) 7  A(j %) 7    Aj" 6 AG
 
  @ ((" AM Aj (!  (
! Aj"A 6  A 6 Aj    Atj Aj"  ) "C7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7@@@ C"AO@ (" 
I
 AjAr! 

  
I

  
M
   
6 

 Aj 
 k
 A6 B7 Aj" A 6  A 6 Aj Aj Aj"
  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) "C7   )7 AjAr! C!@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! ! 
 E
   Ak6 


 Aj"
 Aj) "C7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7@@@ C"AO@ (" 
I
 AjAr! 

 
!   
I

  
M
   
6 

 Aj 
 k
@@@@@ $((" AO@ $("E
 $(

  E
  ! $Aj
! $Aj $(  AI!  Ak"Atj!  !@ !  ) !FA|!@  F A|FqE@ Aj"
 Aj"    
 G 
   
 
 
 G 
 
     
 G 
   
 
 
 G 

 ("  FB<"
M
 Aj Aj ( 
A0lj 
 G 
 Aj" ) !I   Aj"
) 7  Aj" ) !H   Aj") 7  Aj" ) !E   Aj") 7  Aj" ) !D   Aj") 7  Aj" ) !C   Aj") 7  Aj" C7  Aj" D7  Aj" E7  Aj"
 H7  Aj"  I7  )!C  )7  C7  ) 7   ) 7   ) 7   
) 7  
  ) 7   )7 FB!F Aj"A<I
 
 E
  Ak"M
  Atj!  !
 
 
 Aj"  Aj A j 
 G 
  Ar!
 Aj! (!@ ! ("!  AI"
E@ ! (! 
@  E
   At jAk) B R
  
!  
E@ (! 
! 
 E
   Ak6 


 ! " AO@ ! (! 
 AM@ 
Aj!
 

 
(!
 
(
"  K
@   K
  At! 
Ak!  At!  Ak!
@  E Er
   
j) "D  j) "CT
 Ak!  Ak!  C DZ
 

 !  AO@ (! ! 
 AK
 !
 
Aj

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8551-8700

 
  A  
 
(!
 
(
!B !EB !FA !# A k"$  " 
  
I"At!@@@ E
  AG@ A~q! !  !@  E ) |"D ) "C}7  Aj" F D ET| C DV}"E ) |"D Aj) "C}7  D ET EB?| C DV}"EB?!F Aj! Aj!  Aj"G
 

 Aq~   At"j" E ) |"D  j) "C}7  F D ET| C DV} E
P
    j! At Atk!@ E
  ) "DB}"C7  Ak! Aj! C DZ
 

  j! 
At k!@ E
 Ak! ) !C Aj! CP
 

 AjB 7  A6
 A 6 A 6 AjA  
 A j$  (!@ ! ("!  AI"
E@ ! (! 
@  E
   At jAk) B R
  
!  
E@ (! 
! 
 E
   Ak6 


 !
 AO@ !
 (!
 AM 
Aj 
(! 
(
!  I
 @  K
  At!  Ak! At! 
Ak!@ E  Er
  j) "D   j) "CT
  Ak!  Ak! C DZ
 

 Aj Aj 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 (AO@ (
 (AO@ (
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) "C7   )7 C!
@ ! ("!  AI"
E@ ! (! 
@  E
   At jAk) B R
  
!  
E@ (! 
! 
 E
   Ak6 


  )7  A(j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  (AO@ (
 (" @ (!@ A(j( AO@ Aj( 
 A0j!  Ak" 
 

 (@ (
 (AO@ (x
 (hAO@ (H
 (8AO@ (
 Aj$ 

  A  
A A A  
 
  A  
AA 

#


 Aj  
 A j Aj) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7  A8j Aj) 7   )70 (AO@ (
 AM $Aj $(! $(
! Aj"A 6  A 6 Aj"    Atj Aj"! ) 7  Aj"& Aj"") 7  A j"' Aj"#) 7  A j"( Aj") 7  A j" Aj") 7   )7` AjAr!
 Aj! Aj!
  Ar!
 A8j! Aj!*@ !  ("! AO@ (d! (h! 
@ E
   -  AqE
  !  "AO@ (d! (h! 
@ (("
AM@ Aj! 


 (! (
 F@ Ak!
 At!  Ak!
@ E
  
j!  
j!  Ak!  )  ) Q
 

 ! (X" AO@ (8! (4! 
 Aj"
A 6  A 6 Aj"    Atj Aj" 
) 7  Aj"$ Aj"1) 7  Aj"% Aj"2) 7  Aj"& Aj"3) 7  Aj"' Aj"
) 7   )7 Ar!
 Aj! Aj! AjAr! Aj! Aj! Aj!/@ ! ("! AO@ (d! (h!
 ! ((" AO@ (! (! 
@@   K
    O@  At!  Ak! At! Ak!@ E  Er
  j) "D   j) "CT
  Ak!  Ak! C DZ
 

 A6 B7 Aj"4A 6  A 6 Aj Aj Aj"5 4) 7  Aj"6 1) 7  Aj"7 2) 7  Aj"* 3) 7  Aj", Aj"-) "C7   )7 C!@ ! ("!  AI"E@ ! (! 
  E
  At jAk) B R
 !  E@ (! ! 
 E
    Ak6 
 
 
  )7  A(j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  AO@ (h
 (XAO@ (8
 ((AI
 (

 Aj"	 5) 7  Aj"
 6) 7  Aj"! 7) 7  Aj"" *) 7  Aj"# ,) 7   )7 4 Aj") 7  1 Aj") 7  2 A j") 7  3 A j") 7  - A j" ) 7   )`7  	) 7   
) 7   !) 7   ") 7    #) 7   )7` Aj Aj ( AO@ (h
  5) 7   6) 7   7) 7   *) 7    ,) 7   )7` (8! Aj (4 (X"   AK" "AtAr ("AO (! ( 
     "      4 5) 7  1 6) 7  2 7) 7  3 *) 7  - ,) "C7   )7 C!@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! 
! 
 E

-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8701-8850
   Ak6 


 	 4) 7  
 1) 7  ! 2) 7  " 3) 7  # -) 7   )7 Aj Aj 
 5 /A(j"() 7  6 /A j") 7  7 /Aj") 7  * /Aj"
) 7  , /Aj") 7   /) 7 (AO@ (
 (AO@ (
 (XAO@ (8
 A j 5) 7  A j 6) 7  A j 7) 7  A@k *) 7  A8j ,) 7   )70 !  ("AO@ (d! (h! 
 E
   -  AqE
  	 ) "C7  
 $) 7  ! %) 7  " &) 7  # ') 7   )7 ! C"AO@ (! (!
 ! (X" AO@ (8! (4! 
 Aj   jAj ("AO (! ( 
       4 5) 7  1 6) 7  2 7) 7  3 *) 7  - ,) "C7   )7 C!@ 
! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! 
! 
 E
   Ak6 


 Aj 4) 7  Aj 1) 7  Aj 2) 7  Aj 3) 7  Aj -) 7   )7 (AO@ (
 Aj Aj 
  () 7  $ ) 7  % ) 7  & 
) 7  ' ) 7   /) 7 (AO@ (
 (AI
  (
 
 
  )07  A(j A j) 7  A j A j) 7  Aj A j) 7  Aj A@k) 7  Aj A8j) 7  AO (h (( 

AI
 (

 (8! Aj (4 (X"   AK" "AtAr ("AO (! ( 
     "      Aj"$ Aj",) 7  " Aj"-) 7  # Aj"	) 7   Aj"
) 7  Aj" ) "C7   )7 C!@ ! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  !  E@ (! 
! 
 E
   Ak6 


 Aj" $) 7  Aj"
 ") 7  Aj" #) 7  Aj" ) 7  Aj" ) 7   )7 Aj Aj 
 , *A(j) 7  - *A j) 7  	 *Aj) 7  
 *Aj) 7  Aj"% *Aj) 7   *) 7 (AO@ (
 (AO@ (
 (XAO@ (8
 A j ,) 7  A j -) 7  A j 	) 7  A@k 
) 7  A8j %) 7   )70 A6 B7 $A 6  A 6 Aj Aj , $) 7  - ") 7  	 #) 7  
 ) 7  % ) "C7   )7 C!@ ! ("!  AI"E@ ! (! 
@  E
   At jAk) B R
  
!  E@ (! 
! 
 E
   Ak6 


  ,) 7  
 -) 7   	) 7   
) 7   %) 7   )7 $ !) 7  " &) 7  # ') 7   () 7   A j" ) 7   )`7 ! ) 7  & 
) 7  ' ) 7  ( ) 7    ) 7   )7` Aj Aj !( AO@ (h
 ! ,) 7  & -) 7  ' 	) 7  ( 
) 7    %) 7   )7`
 
 
 AjB 7  A6 A 6 A 6 AjA  
 Aj$  Aj Aj) "F7  Aj Aj) "I7  A j Aj) "E7  Aj Aj) "D7  Aj Aj) "C7  Aj I7  Aj F7   )"H7  H7t Aj F7  Aj I7  Aj C7  Aj D7  Aj E7   H7 A0j! Aj!@ AO@ 
(" 
A 

A  E
 !  
Aj

 
(
!  AtAr  At jAk) ykAv
!A !# Ak"$ @@@@@ ((" AO (  
E@A -  A!AA"E
 A :   A6

# Ak"
$  (("! AO@ (!
@ AO@ (" 
A 

A  E
 !  Aj

 (
!  At  At jAk) yk
Aj" Av!A!@@  AO@A -   A"E

 Ak!
 
A 6 
 6 
 6  AM@ !  Aj

 (!  (
!   
O@A ! @ 
E
   
Atj!
  
A GAtj!@ ! ! ) !EA!@ 
(  F 
  | 
(  
 
( j EB<   
 
(Aj" 6 EB!E Ak"
 
 E
   
G"Atj! 
 

 AM Aj (! (
!  
K@  
Atj) "EPE@@ 
(  F 
  | 
(  
 
( j EB<   
 
(Aj" 6 EB"EPE
 

  
) 7  Aj 
Aj( 6  
Aj$ 


-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:8851-9000
 
 A  
 
  A  
A  
 ( ! ("AI
   j!A !  Av"AG@ Ak!
A  AvAqk!
 ! @  Aj"-  !  
 j"
-  :   
 :    -  !   
Aj"-  :    :    Aj!  
 Ak"G
 
A  k! 
 AqE
    j"-  !    Asj  kj" -  :     :  
 (!    M@ E@A!

 A N"E
  "E

   kj   A
j 6  Aj 6   6AA
6   @ 
 ((AO@ (
 Aj$ 

AA 
 
   
 (0" AF
   )@7  Aj A j) 7   A j A j) 7   A(j A j) 7   A0j A j) 7   A8j A j( 6  )4!C   (<6
   C7    6 

  A6 

 A8j( ! (4!  @ AO@ 
("
A 

A  E
 
Aj

 
(
!  AtAr At  jAk) ykAv
" 0A j"
A
jO@ A<j( "@ -  E!@@@@ AG@ A k!
 - " AsAk  AsqAqAv q! A I
  I
@A   j" 
 j"k"   A OE@A! 

A   k!A! @  j-   )-  F  q!  )Aj!) Aj"
 

   q! 
  
k"
I
 
 K
A !@ 
 
k 0G
   
 jk"  0   0IE@A!

A  0k! ! A!@  j-    -  F q!  Aj!  Aj"
 

  q!   
Ak"K@  j-  E  q! 
AF AIr
A~ - " k  qAqAv q! 
AF
 Ak! Aj!  
 kAj!)@ E
 Ak!A~  -  "k qAqAv q!  Aj!  )Aj")
 


  A  
AAA  
 
 A  
 
 
A  
  A  
 
 A  
A A A  
AA AqAFA
6  E
  
 ((AO@ (
 0E
  
 Aj$  
(" AG
 
Aj = r 
)!M 
(")
 A6   M7


 A6  JE

 .


 A6   K7 JE

 .


 A6  K@ 9
 JE
 .


 A6   L7 K@ 9
 JE
	 .
	
 
Aj 
Aj( " 6  
Aj 
Aj) "G7  
Aj 
Aj) "F7  
Aj 
Aj) "I7  
Aj 
Aj) "H7  
Aj 
Aj) "E7  
Aj 
Aj) "D7  
 
)"C7 A<j  6  A4j G7  A,j F7  A$j I7  A
j H7  Aj E7  A
j D7   C7 A6 

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9001-9150

 Aj 
)7  A8j 
Aj) 7  A0j 
Aj) 7  A(j 
Aj) 7  A j 
Aj) 7  Aj 
Aj) 7  Aj 
Aj) 7  A6    6

 
Aj!&A !
A !B !GA !'A !A !A !A !
A !
B !FB !IA !A !B !HB !EA !B !DA !# Ak"
$  
 ) MB  
A j!$# Ak"	$  	A0j 
@@@@@@@@@ 	- 0Aq@ 	- 1A G
 
 	A(j 
A! 	((!# 	 	- ,Aq" :  	 #6 	A j #A! 	-  AqE
 	AjAr! 	- !!@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
  Aq
A	!


  Aq
  # 	Aj # 	- AqE@A!


 	- !

 	A : 
 Aq" A"G@A!  A G
A!

 	Aj!# A k"$  Aj #@@ - Aq@ - 	A"G
 # Aj #@ (" AF@ A
j( ! Aj( ! (" 
   

 )!C  (
6
  C7   6 

     E
  

 A6 

 A6 
 A j$  	- ! 	(" AG@ 	 	) 7 	 	Aj(  6   !

 
 ! 
"E@ 	AjA A` 	(" AG
 	Aj 	Aj( 6  	 	)7 	Aj!@@@ 	Aj"("  ("M@ ( ! 

  A
l!  ( !@ E@A!  

   A A
l"" E

  6   6 
  6   6 

A  
 	(! 	(!
 HP@ 	AjA A` 	(AG
 	)!F
 EP@ 	AjA A` 	(AG
 	)!I
 
! "E@ 	AjA A` 	(AG
 	Aj( ! 	Aj( ! 	(!
 DP@ 	AjA A` 	(AG
 	)!G
 
! " E@ 	AjA A` 	(AG
 	Aj( ! 	Aj( ! 	(! 
@ 'E@ 	AjA A` 	(AG
 	Aj( ! 	(!' 	Aj( !
 	Aj"
 6  	Aj"
 6  	Aj"
  6  	Aj" 6  	 I7 	 F7 	Aj"  	Aj") 7  	 6 	 6 	 6 	 '6 	 6 	 G7 	 6 	 	)7 	A j 
) 7  	A j ) 7  	A j 
) 7  	A j 
) 7  	A j 	Aj) 7  	A j 	Aj( 6  	 	)7L 	A j  ) 7  	 	)7< 	 68 	Aj 
 	(" AG
	 $ 	A8jA 


 E! 	Aj 	Aj) 7  	 	)7 E
  

 	Aj #@ 	(" AG@ 	Aj 	Aj( 6  	 	)7 	  6

 	Aj # 	(AF

 	Aj 	Aj) 7  	 	)7

 'E
 	AjArA Ab

 E

 	AjArA Ab

@@ DP@ 	Aj # 	(" AF
 	Aj 	Aj( 6  	 	)7 	  6

 	AjArA Ab

 	Aj #) 	(AF


 	Aj 	Aj) 7  	 	)7

 E
 	AjArA Ab

@@ EP@ 	Aj # 	(" AF
 	Aj 	Aj( 6  	 	)7 	  6

 	AjArA Ab

 	Aj #) 	(AF

 	Aj 	Aj) 7  	 	)7

@@ HP@ 	Aj # 	(" AF
 	Aj 	Aj( 6  	 	)7 	  6

 	AjArA Ab

 	Aj #) 	(AF

 	Aj 	Aj) 7  	 	)7

 
@ 	AjArA Ab

 	Aj!(# Ak""$  " 	Aj( "@@@ "( " AF@B !CA !# A k"$  Aj @@@ - Aq@ - 	A G
    Aj! ( !
 - Aq!# A@j"!$  !A 6( !B7  !Aj 
A!@@@ !- AqE
  !- !

-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9151-9300
@@@ 
Aq" A,G@  A F
 E
A !

 
 !Aj 
 !- AqE@A!

 !- !


A!

 
AqA F@A!

 !A0j 
 !)8!C !(4! !(0"AG
 E
 !(("
 !($F@ !A j! # A k"%$ @@ 
Aj"E
 A  Aj( "At"     K"   AM"A
l! Aժ IAt! @ @ %A6 % A
l6 %  ( 6

 %A 6
 %    %Ajz %(!  %( E@    6   Aj 6 

  AxF
  E
    %Aj(  
 
 %A j$  !((!

 !(  
A
lj"  C7   6 A! ! !((Aj6( !Aj 
 !- 	!
 !- Aq
 

  C7  6  6  !(("@ !( !
@ 
Aj( @ 
( 
 
A
j!
 Ak"
 

 !($E
 !( 

  !) 7 A6  A
j !A(j( 6 
 !A@k$  (" AG
 A
j"( !
 Aj( ! (! Aj  (" AF@ " 6 "A6  "A
j 
6  "Aj 6 

 " )7 "A
j ( 6  "  6  
@ ! @  Aj( @  ( 
  A
j!  
Ak"

 

 E
 

 "A6 

 "A6 

 )!C " (
6
 " C7 "  6 
 A j$  "( AF@ "(!@ "Aj( "  "A
j( "M@ ! 

 E@A!  

   A
lA A
l"" E

 (  6 (A6  (Aj 6 

 ( ") 7  (Aj "Aj) 7 

 ( ")7 (A
j "A
j( 6  (  6 
 "Aj$ 

A  
 	(AF
 	Aj 	Aj) 7  	 	)7A !


 $Aj 	)7  $Aj ( 6  $A 6  $  6 	A8j

 	Aj 	(6  	Aj 	)7  	  6A !


 	(! 	(!


 	)!FB!H

 	)!IB!E

 	Aj #@@ 	(" AG@  	)7  Aj 	Aj( 6  	  6

 	Aj # 	(AF

 	Aj 	Aj) 7  	 	)7A !


 	(! 	(!
 	(!

 	)!GB!D

 	Aj #@@ 	(" AG@  	)7  Aj 	Aj( 6  	  6

 	Aj # 	(AF

 	Aj 	Aj) 7  	 	)7A !


 	(! 	(!
 	(!

 	Aj #@@ 	(" AG@  	)7  Aj 	Aj( 6  	  6

 	Aj # 	(AF

 	Aj 	Aj) 7  	 	)7A !'


 	(! 	(! 	(!'
 	Aj #A !  	- 	! 	- Aq

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9301-9450
 


 $B 7 

 $B7 

 	Aj 	Aj) 7  	 	)7
 E! E
 

 	Aj 	Aj) 7  	 	)7A!
 
E!  E
 ! !@ Aj( @ ( 
 A
j! Ak"
 
 

 	Aj :   	Aj 	( 6   	 6 	 	)7 
A!A! 
 'E ErE@ '
 
E E ErrE@ 
 
E E AsrrE@ 
 E 
E  AsrrE@ 
! ! @ Aj( @ ( 
 A
j!  Ak" 
 
 

 	Aj 	Aj) "D7  	 	)"C7 $A
j D7  $ C7 $A 6 
 	Aj$ @ 
(h"@ 
A j"  
A j") 7  
A,j 
Aj) 7  
A4j 
Aj) 7  
A<j 
Aj) 7  
A j 
Aj) 7  
A j 
Aj) 7  
A j 
Aj( 6  
 
)l7X 
 
)|7$ 
A
j  ) 7  
 6 
 
)X7 
A j 
 
(h" AF@ & 
AjA 

 &Aj 
)l7  &Aj ( 6  &A 6  &  6 
Aj

 
A j 
A j) "D7  
 
)l"C7X &A
j D7  & C7 &A 6 
 
Aj$ @@ 
(E@ 
Aj 
Aj) 7  
 
)7 
AjA A 
Aj<

 
Aj 
AjA  
("

 
Aj 
Aj) "H7  
Aj 
Aj) "E7  
Aj 
Aj) "D7  
 
)"C7 A j H7  Aj E7  Aj D7   C7 A 6 

 
Aj" 
Aj( 6  
Aj" 
Aj) 7  
Aj" 
Aj) 7  
Aj"  
Aj) 7  
Aj 
Aj) 7  
Aj 
Aj) 7  
Aj 
Aj) 7  
 
)7 
 
)7 
Aj  ) 7  
Aj ) 7  
Aj ) 7  
Aj ( 6  
 6 
 
)7 
(!A ! B 
Aj( " F@  E
 @  j-  "A kAqAIAt r  Aj-  "A kAqAIAt rG
   Aj"G
 
  !
   MA 

 A6 

 A6   J7

 
(! 
Aj 8{ 
(! 
( < 8! 
 86 
 6 
 6 @ 
Aj" Aj( !  ( ! A
l! @@ Aj(  G

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9451-9600
  (   
 A

 A
j!  A
k" 
 

A 
!  @ 
 @@@  @ 
 
)"C7 C ;) "DT
 
 
)"C7 C DV
 :Aj( "  
Aj"Aj( F :(  (   A
E"
 AjA  :(  :(s 
Aj Aj( 6  
 ) 7 
Aj 
Aj AjA  
( 
(
s 
(@ 
(
A	

 A6 

 
Aj) !C  ;) B7 A6   CB7

 
Aj) !C  ;) B7 A6   CB7

 A: A
6  
Aj" ("@  ( " !@ Aj( @ ( 
 A
j! Ak"
 
  
 
Aj( @ 
(
 
Aj( @ 
(
@ E
  
Aj( E
  
(
 M@ )
 @@ +
 
(AO@ 
(p
 
Aj( AO@ 
Aj( 
 L@ >
 K@ 9
 JE
 .

 
Aj"("@ ( " !@ Aj( @ ( 
 A
j! Ak"
 
  
 A$j( @ ( 
 A0j( @ (,
 A<j( @ (8

 ME
  )
 @@ +
 
(AO@ 
(p
 
Aj( AI
  
Aj( 
 L@ >
 K@ 9
 J@ .
 ?AG

 
(4E
  
(0
 
Aj$  (lE
 (h


A !
   6  A6   Aj 6 

   )h7   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj A j) 7   Aj A j) 7 
 E
 

 A@k  A j (@ (D (h!
 (p!
 A8j  (<! (8! A0j Aj Aj  
 
   (0 (4 ( 
  ("AF
   6  Aj (6 A

  A6   A: 

   ) m7   A
j A j)  7    Aj A j)  7    A
j Aj)  7    A%j Aj)  7    A-j Aj)  7    A5j Aj)  7    A<j Aj(  6     - l:    6 
 (E
 )

   - : A
6  (lE
  

 Aj$ 
  A A  
AA 
# A k"$ @@@@@@@@@@ ( Ak 
 Aj Aݩ A (
  (6  Aj-  : 
 Aj AjA A Aj (
 Aj AjA A Aj (E@   ( - 

	
   )7  A6   A
j A
j( 6 

 Aj Aԩ A	 (@   )7  A6   A
j A
j( 6 

  (6  Aj-  : 

-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9601-9750
 Aj AjA A Aj (E
   )7  A6   A
j A
j( 6 

 Aj Aͩ A (@   )7  A6   A
j A
j( 6 

  (6  Aj-  : 
 Aj AjA A Aj (E
   )7  A6   A
j A
j( 6 

 Aj Aĩ A	 (@   )7  A6   A
j A
j( 6 

  (6  Aj-  : 
 Aj AjA A Aj (E
   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 

   ( - 


   ( - 


   ( - 

 A j$ 
 @@@@@@ Ak 
 Aĩ A	E
 Aԩ A	
  A6   A: 
 Aͩ AE


 Aݩ A
   A6   A: 
    A Ac
  A6   A: 
  A6   A : 
@ @@@@ A N@ (E
 Aj( "
 
 

  A 6

 (    

  E

A -    
"@   6  Aj 6   A 6 
   6  Aj 6 

  A 6  Aj 6 
  A6 
K@ E@A!

 A N"@A -    "
   
 
   6   6 
# A k"$ @@ Aj"E
 A  Aj( "At"   I" AM"AsAv!@ @  6 A6   ( 6

 A 6
    Ajz (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
# A k"$ @@ Aj"E
 A  Aj( "At"   I" AM"Al! A֪*IAt!@ @ A6  Al6   ( 6

 A 6
    Ajz (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
# A k"$ @@   j"K
 A  Aj( "At"   I" AM"AsAv!@ @  6 A6   ( 6

 A 6
    Ajz (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
# A0k"$  Aj ( "@@ - Aq@@@ - ""A,G@ A G@ - 
  A	6 

  A6   A : 

 - 
   Aj  - AqE
 - !

 A : 
@ Aq"A"G@ A F
  A6 

 Aj @ - AqE@A!

 - 	A"G@A!

  A j  ( "AF@@ ($"E
  A(j( E
  
  A6   A: 

 (,! ((! ($!
   6
   6   6   6 

  A6 

  A6 

  A6 
 A0j$ 
# A k"$  Aj ( "@ ("AF@ Aj A! - Aq@@ - 	A F@  Aj A A ("AG
  B7 

 Aj  (AF@   )7  A6   A
j A
j( 6 

   )7   Aj Aj) 7 

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9751-9900

   )7  A
j A
j( 6 
   6 

   )7  A
j A
j( 6    6 
 A j$ 
 @@@@@ Ak
 
 AҪ A

  A6   A: 
 /  AF


 Aߪ A	
   A6   A: 
    A Aa
  A6   A : 
# A k"$  Aj!A!A -  @@AA"@ A A!@ @ A N"E
A -    "E

   ! Aj 6  Aj 6   6
 A6 A6  6 

 
AA 
   
 Aj( " Aj"( F@ A
j } (!
 (
 Alj" )7  Aj Aj) 7  Aj Aj) 7   (Aj6  A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj ) 7   Aj Aj) 7    ) 7  A j$ 
@@A -  AA"E
 A A! Aj( " Aj"( F@ A
j } (!
 (
 Alj"A6 A6  6   ) 7
 Aj Aj( 6   (Aj6   ) 7   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7   Aj ) 7 
 
AA 


~# A k"$ @@@ E@ A68 B70 A j"A 6  A 6@ A@k!# Ak"
$  A0j"(!
 ( !	@@@@ (" 
E
  
n"   
lGjA 
!A! (("! A(j!
  AO (! A
 kK@  j" I
A AkgvA  AOAj"E
 
Aj  M 
("AxG@ E
  
(
 
 
( !
 AM@ Aj! 
! 

 Aj! (! ! (
" O
  Atj!@@ E
~  
  
I"
AM@ 
AF@ 	5 

A A A  
 	) 
!  
k! 	 
Atj!	  7  Aj!  Aj"G
 
 !

  6 

A AA  
A AAԊ  
  6  E
  Aj!
 Aj!@~  
  
I"AM@ AF@ 	5 

A A A  
 	) 
! 
( "AI@ ! !A! 


 
( ! ( ! 

!  k!  F@# Ak"$ @@@ (("AO ( 
Aj"E
 A AkgvA  AOAj"E
  Aj  M ("AxG@ E
  (
 
 Aj$ 

A AA  
A AAԊ  
 (! (! 
!
 At 	j!	  Atj 7   ( Aj6  
 

 
Aj$  A(j" ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj"
 A j) "7   )@7  Ar!
 !@ 
! (("! AI"E@ (! !
@ E
  At jAk) B R
  ! E@ 
! (!
 E
  Ak6 


   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 A N"E
A -    "E
   !@ AF
   j!
A ! Av"
AG@ 
Ak!A !A  AvAqk! !@ Aj"-  !	   j"-  :    	:   -  !	  Aj"-  :    	:   Aj!  Ak"G
 
A  k!
 AqE
   j"-  !  
 Asj 
 
kj"-  :    :  
     
 A j$ 
 

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:9901-10050
   
~# A0k"
$  
 ) 7( 
Aj" 
A(jA A A A  
A
jA 6  
A 6$ 
A 6  
B7 ! ! !# A k"$  (
!	 (!@@@@@@@@@@@@ Aj( "E@A!

 A N"E
A -    "E

  	 ! (! ( !	 -  AF@ A6

 A j Aj) 7   ) "7@@@@@@ AqAk 
 A0jAr A@kArg A 60

 A0jAr A@kArg A60

 (D!@ A j( "E@A!

 A N"E
	A -    "E

   ! A<j 6  A8j 6   64 A 60

 (D!A! A j( "@ A N"E
A -    "E

   ! A<j 6  A8j 6   64 A60
@ - @ 
 A@kAr

   
 
 A@kAr
Aj( E
  (D
 Aj A8j) 7   )07
 -  AF@ A6 

 A j Aj) 7   ) "7@@@@@@ AqAk 
 A0jAr A@kArg A 60

 A0jAr A@kArg A60

 (D!@ A j( "E@A!

 A N"E
A -    "E
	
   ! A<j 6  A8j 6   64 A 60

 (D!A! A j( "@ A N"E
A -    "E

   ! A<j 6  A8j 6   64 A60
@ - @ 
 A@kAr

 
   
 A@kAr
Aj( E
  (D
 A(j A8j) 7   )07 
 Aj! Aj! A j!
# Ak"$ @@@@@ E@A!

 A H
A -   A"E

  	 ! Aj! !# A k"$ @@@@@@@@@ ( Ak 
@ E@A!


 A H
A -   A"
E

 
 	  ! !

 A
j( ! Aj( !
 (!@ E@A!


 A H
A -   A"
E

 
 	 !  6  6  6 ! ! @ Aj   (! (!
 (!
  
j    j! 
E
 

 Aj( ! (!A!
 A
j( "@ A H
A -   A"
E

 
  !  6  6  6 Aj  ( (jA :   (! (! (!
A!
 @ A H
A -   A"
E

 
 	 !  6  6  6 ! Aj"@ Aj   (!
 (!
  
j 
  (! @ 

  j! E
  
@@@@ 
( Ak 
 E@A!A !A !

A -   A"E
  	 !
 !@ Ak"	 
j"
-  "AG@  
jAk Aj:   !

 
A :   	"
 
 !

 
Aj( ! 
(!
A! 
A
j( "@ A H
A -   A"E


-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10051-10200
  
 !  6  6  6 Aj  ( (jA :   (! (! (!
A! @A -   A"E

  	 !	  6  6  	6 Aj"	@ Aj  	 (! (!
  j 
 	 (! @ 

  	j! E
 


 
A
j( ! 
Aj( !
 
(!
@ E@A!

A -   A"E

  	 !	  6  6  	6 @ Aj   (! (!
  j 
   j! (! 
E
  

 Aj  
   A (	  (
! (! @ 
 @ 

  6   6 A j$ 

 
A  
A  
A  
A -   (
! (!AA"E
  6  6
  6  6   6 A 6  6  Aj$ 

 
A  
AA 
A -   (
! (!@A A"@  6
  6  6  6  6
  6  6   6 
A 6 
 6  A j$ 

AA  
 
(! 
( ! 
(
@ 
(
 
(@ 
(
   6   6  
A0j$ 
   
# A0k"$  Aj( ! ( !	  :  A j Aj ( !
@@ (("E@ Aj 	 AA 

A -   At"A"E
 Al!
 ! 
!@ Aj   )7  Aj! 
Aj!
 Aj! 
Ak"

 
 Aj 	   
 E
  
 ($@ 

# A@j"$    Aj"(  ( (
 @@@ ( "E@A -  A
A"E
  B7   6  A6  AjA (  6   AjA )  7   AjA )  7   A )  7  

 Aj  (@ (AG@   )7  A
6   A
j A(j( 6   Aj A j) 7   A
j Aj) 7 

 A8j A
j) 7   )70  A A
 A0j<
 (E
  
 A@k$ 

AA
 
 (@ (
 A0j$ 
A  
	~# A0k"$ A ( !
A ( !
  :  A j Aj ( !@@ (("	E@ Aj 
 
AA 

A -   	At"A"E
 	Al!
 ! !@ Aj   )7  Aj! 
Aj!
 Aj! 
Ak"

 
 Aj 
 
  
 	E
  
 ($@ 
# A k"$  Aj"(! ( ! A0j" A@k  x@@ (@@ A(j" A j( 6   )D7  (4@ (0
 A j ( 6   ) 7@ A A
 A@k; ( "A
F
   )7  Aj Aj) 7  )!   (
6
   7

 A
j A8j( 6   )07
 Aj( !    (" A
j(  (
 A
! E
  
   6  A j$  (@ (
 A0j$ 
A  
 @@@@  ( 
 
@@@@@@@@@  (


 

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10201-10350


  A
j


  A
j
	
  A
j

  A
j

  A
j

  Aj( @  A
j( 
  Aj

  Aj( @  A
j( 
  Aj

  Aj( @  A
j( 
  Aj

  A
j

  Aj( @  (
  Aj

  A
j
" Aj( E
   ( 


# Ak"$ @ - %
  Aj( !@ (" (
"I
   Aj( "
K
  (" Aj"jAk!
@ AM@@  j!	 
-  !
  k"AO@ Aj 
 	  (
! (

A !A  E
 @A 
  	j-  F
  Aj"G
 
 !A 
AG
   jAj"6
@  I  
Kr
    k"j  
  (
!  6
  k!  j!


  M
 

 
@  j!	 
-  !
  k"AO@  
 	  (! ( 

A !A  E
 @A 
  	j-  F
  Aj"G
 
 !A 
AG
   jAj"6
  
M  OqE@  M



 AA  
  6

 A: % - $E (
" ( "Fq
   k!  j!

   6   
6  Aj$ 
~# A@j"$  Aj ( "
@@ - Aq@ - "A,G@@ A G@ - 
  B 7 

  B 7 

 A : 

 
 Aj 
 - Aq@ - 	!

  B 7 

  B7 

 A F@  B7 

 A(j!A !# Ak"$  A0j 
@@@@@@@@@@@@@@@@@@ - 0Aq@ - 1A G
 
 A(j 
 - ,! A j (("A! -  AqE
 Aq!@@@ - !""
A,G@ 
A G



 @A!


  Aj  - Aq
A!


 
A	!


 - !
 Aq"A F
 A"G@A!
	
 A j 5 (p"AG
 A jAr! - t"
@ A j  (p"AG
 A j  (`AG
 (l! (h!

-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10351-10500
 (d!A 

 A j  (p"	AG
 A j  (`AG
 (l!
 (h! (d
!	 Aj  - AqE
 - !@ A,G@A	! A G
A! !
 	"E




  Aj  - AqE@A!


 - 	"A"G@ A F
	A!


 A j 5 (p"AG
@@@ - t"
@ 
 A j  (p"AG
	 A j  (`AG
 (l! (h!
 (d!

 	E
 A8jArA Ab

 A8jArA Ab

 A j  (p"	AG
 A j  (`AG
 (l!
 (h! (d!	
   - ! -  Aq
 


 B 7 

 B7 

  )t7  Aj A j( 6   	6`
 A j A j) 7   )`7<

  )t7  Aj A j( 6   6`
 A j A j) 7   )`7<A !

 !  ) u7P  A j(  6 W - t!


A!
 A@k 
:   A j ( W6    6<  )P7 A

 A jA A` (pAG
 A j( !
 A j( !
 (t!A !A !	
 
 A jA A` (pAF@ A j( ! A j( !
 (t!

 A j A j) 7   )p7< 
E
 

 A j A j) 7   )p7<
A !	
A ! E 
Er
  
 E 	E rr
 	

  
6H  6D  
6@  
6< E
  A8j 
 (8"
AG
  6  
6  6
  
6  
6  6 

 )<! A
j A j) 7   7 A 6 

 Aj )<7  Aj A j( 6  A 6   
6 
@ 
 
E
  
 Aj$  (("
@ A j A4j) "7   ),"7 (<!  Aj 7   Aj 7   Aj 6    
6  A 6 

 A j A4j) "7   ),"7  A
j 7    7  A6 
 A@k$ 
A!@@ Ak"@ A
F@


 
 A AE@A !

 A AE@A!

A! A¹ AE@A!

 AŹ AE
 Aȹ AE@A!

AA A˹ A!

AA Aι A!
  A6    : 
# Ak"$   6
  6 Ak!@ @@ E@A !A!

 A̙3K
 Al"A H
 A̙3IAt!@@ A -     
"@ AjAq"Aj"Aq! AO
A ! !

   
 A(j! Aq!	A ! !@ A$k ) 7  A(kA :   Ak Aj) 7  AkA :   Aj Aj) 7  A :   Aj Aj) 7  AjA :   A j! A j! 	 Aj"G
 

 E
   Alj!@ Aj ) 7  A :   Aj! Aj! Aj! Ak"
 

   Aj    Atj" (   ( @ 
 Aj$ 
 A A  
 
A -  @@AA"@ Aq"A	M
 A I
  AqA n"A0r:    A lk!A!

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10501-10650

AA 
  j AqA
n"A0r:   Aj!  A
lk!
  A6   6    Aj6  j A0r:  
~# Ak"$  A(jA A ! AjA ) 7  AjA ) 7  AjA ) 7  B 7  A ) 7 @ A?M@   

  Av"7       A@qj A?q"
  : h A j A  Aj" Aj-  "j"A:   )"
BB 
BB 
BB 
B	"
B8!
 "
B; 
 
B"
BB( 
BB 
BB!
 A?s"@ AjA  
 
 
!
@ A8sAO@ Aj 
7  A j A

 A j" A AjB 7  AjB 7  AjB 7  AjB 7  AjB 7  AjB 7  B 7  
7  AjA
A -   (! (! (! (! (|! (x! (t!	 (p!
A A"E@AA  
  B7   6   At AqAtr AvAq Avrr6 
  At AqAtr AvAq Avrr6   At AqAtr AvAq Avrr6   At AqAtr AvAq Avrr6   At AqAtr AvAq Avrr6 
  At AqAtr AvAq Avrr6   	At 	AqAtr 	AvAq 	Avrr6   
At 
AqAtr 
AvAq 
Avrr6   Aj$ 

~# A k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 ( kAM@  A~ (!
 (  jA ;    Aj6# A k"$  Aj @@ (E@  (6  Aj-  : 
# A k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kAI@  A~ (!
 (  jA A  Aj"6 Aj! ( kAM@  A~ (!
 (  jA ;    Aj6@ ) P@  

 Aj!# A k"$  Aj @@ (E@  (6  Aj-  : 
 Aj AjAɂ A  (
 Aj AjAт A Aj (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$ 
  (  Aj A
j( "6   )"	7 A
j 6   	7AA 
6  A j$  (
# A k"$  Aj"( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kA	I@  A	~ (!
 (  jA A	  A	j"6 Aj! ( kAM@  A~ (!
 (  jA ;    Aj6@ Aj") P@  

# A@j"$  A 6 B7  Aj" A @ Aj E@ (!   ( " ( @ 
 A@k$ 

Ȃ A7 A8jA A  

  (  Aj A
j( "6   )"	7 A
j 6   	7AA 
6  A j$  (E@  ( - 


  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 

  )7 A6  A
j A
j( 6 
 A j$    (  Aj A
j( "6   )"	7  A
j 6    	7AA 
6  A j$ 
~# A0k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6  ( kK@   ~ (!
 (  j     j"6 ( kAM@  A~ (!
 (  jA ;    Aj6 A j    ( " (( ($@ 
   (  Aj A
j( "6   )"7  A
j 6    7AA 
6  A0j$ 
~# A k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6  ( kK@   ~ (!
 (  j     j"6 ( kAM@  A~ (!
 (  jA ;    Aj6   )    (  Aj A
j( "6   )"7  A
j 6    7AA 
6  A j$ 
~# A k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6  ( kK@   ~ (!
 (  j     j"6 ( kAM@  A~ (!
 (  jA ;    Aj6   (  Aj(    (  Aj A
j( "6   )"7  A
j 6    7AA 
6  A j$ 
~# A k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6  ( kK@   ~ (!
 (  j     j"6 ( kAM@  A~ (!
 (  jA ;    Aj6# A k"$  ( ! Aj  ("@ (E@ Aj-  ! (!@@ E
  E@ (" (F  | ( 
 ( jA,:    (Aj6
 Aj  e (
 A j"  AtjF
  AtA k!@ (" (F  | ( 
 ( jA,:    (Aj6 Aj  e (
 A j! A k"
 

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10651-10800

  

 Aj A
j( "6   )"7  A
j 6   7 A6 

  )7 A6  A
j A
j( 6 
 A j$    (  Aj A
j( "6   )"7  A
j 6    7AA 
6  A j$ 
~# A k"$  ( "(! - E@ ( F  | ( 
 ( jA,:    (Aj"6
 A :  ( F  | ( 
 ( jA":    (Aj"6 ( kA
I@  A
~ (!
 (  j A
  A
j"6 ( kAM@  A~ (!
 (  jA ;    Aj6# A k"$  ( ! Aj  ("@ (E@ Aj-  ! (!@@ E
  E@ (" (F  | ( 
 ( jA,:    (Aj6
 Aj  Z (
 Aj"  AljF
  AlAk!@ (" (F  | ( 
 ( jA,:    (Aj6 Aj  Z (
 Aj! Ak"
 

  

 Aj A
j( "6   )"7  A
j 6   7 A6 

  )7 A6  A
j A
j( 6 
 A j$    (  Aj A
j( "6   )"7  A
j 6    7AA 
6  A j$ 
  AĿ A
  A	O@   

  

@@@ A	O@  "
A 

AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K M
A AjAAAk KA!  " "!@@@@@@@ E@  M
 A ( F
 A ( F
 
 " j" I
  k! AI
 

 ! AI
  kAI Aj Mq
 ( " jAj! AjA!A "E
  j"  k" Ak"6  A6   A
kA 6A A (   kj" 6 A A ( "   K6 A A ( "     I6 
	
AA  k"K
  !      

A (  j" M
  !     k"Ar6A  6 A  6 

A (  j" I
@AA  k"K@  A !A !

  " !      (A~q6
A  6 A  6 

 A
j( "	 Aj( "G@  	6
 	 6

A A ( A~ Avwq6 
AA M@  !      

  
 

 "E
    AxA| j"   I!   

       I  
 

  

9 @ A	O@   

  
"E
  
  A   
 
# A@j"$   (  ((
 @@@@ ( "E@  A 6 

 Aj( ! A8j Aj) 7  A0j Aj") 7   ) 7( ( " I
 (!  k!A!  G@ A H
A -   A"E

   j ! A j" A<j( 6   )47 @ 
   6   6   6    )7
  Aj ( 6 
 A@k$ 
  A  
 
A  
G  ( "  Aj( "(   Aj( @ Aj(  
  A
j( @  (


# A k"$ @@@@ @  Aj( !  ( !  ((
!@ Aj    ("E
 (" I
 (
!	 (!
 (!
  k! A!  F"E@  A H
A -    A"E

   j  !  	@ 
 E@  
 
@ 

 Ak"
 

A !
 A j$  
  A  
 
A   
# A@j"$ @@@@  E@  (  ((
  ( "E@  A 6 


-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10801-10950
 Aj( ! A8j Aj) 7  A0j Aj") 7   ) 7( ( " I
 (!  k!A!  G@ A H
A -   A"E

   j ! A j" A<j( 6   )47 @ 
   6   6   6    )7
  Aj ( 6 

  A 6 
 A@k$ 
  A  
 
A  
@@@@@@ -  Ak 
 Aj( ! (

A! Aj

A! Aj

A! Aj

A! Aj

A! Aj
!   6   6 
EA -  AA"E@AA 
 A:    B7   6   -  : 
 @ @@@@@ A N@ (
 
A!

  A 6

 Aj( "E@ E@A!

A -   A

 (  A 

A -   A
"E

   6  Aj 6   A 6 
  A6  Aj 6   A6 
  A 6  Aj 6 
  A6 
# A k"$ @@ Aj"E
 A  Aj( "At"   I" AM"AsAv!@ @  6 A6   ( 6

 A 6
    Aj (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
# A k"$ @@   j"K
 A  Aj( "At"   I" AM"AsAv!@ @  6 A6   ( 6

 A 6
    Aj (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
# A0k"$  !A"	@ !@  Aj( jAj! Aj! 	Ak"	
 

 @ Al!
 !@@@@@@@ -  "	Ak 
 Aj( !	

A!	

A!	

A!	

A!	
 Aj!  	jAj! 
Ak"

 

 Aj!
@@@@@ E@A!	

 A H
A -   A"	E

A ! A 6  6
  	6@ Aj( "AO
 ( !
 (
 kAM@ Aj A (!	 (!
  	j At AqAvr;    Aj"6  (
 kK@ Aj   (!
 ("	 j 
    j"6 Aj" 
G
 
 E
 Al!
@ -  "!@@@@@@ Ak 
A!

A!

A!

 Aj( "AI


A!
 (
 kAM@ Aj A (!	 (!
  	j At AqAvr;    Aj"6@@@@@@ Ak 
 Aj( ! Aj( 

A! Aj

A! Aj

A! Aj

A! Aj

A! Aj
! Aj!  (
 kK@ Aj   (!
 ("	 j     j"6 
Ak"

 


 
A  
  (
 kK@ Aj   (!	 (!
  	j    Aj  j6    )7  A0j$ 
 A$jB 7  A6
 A 6 A 6  AjA  
+!   ( ," ( (" ( "  ( 4"   ( 
" ( $" (  "
  ( "    ( "  ("

-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:10951-11100
j  ("A
w"  ("
s (  "  ( "   (
" 
 ssjjA
w 
j"sjAw j"A
w"j ( " 
A
w"j ( " j  s sjAw j" s ( 
"
 j  A
w"s sjA
w j"sjAw j" A
w"	s  j  A
w"s sjAw j"sjAw j"A
w"j  A
w"j  j  s sjA	w 	j" s 	 
j  A
w"s sjA
w j"sjA
w j" A
w"	s  j  A
w"s sjAw j"sjAw j"A
w"
j 	 j  ( 0"j  A
w"s sjAw 	j"	  A
w"ssjAw j"A
w"
  ( <"j  ( 8"j 	 
s sjA	w j"  	A
w"	ssjAw 
j"Asqj  qjAjAw 	j"A
w"
j 
 j A
w" 	 j A
w" Asqj  qjAjAw 
j"Asqj  qjAjAw j"A
w"	  j A
w"
  j 
 Asqj  qjAjA
w j"Asqj  qjAjA
w 
j"Asqj  qjAjA	w 
j"A
w"
j 	 
j A
w" 	 
 j A
w"	 Asqj  qjAjAwj"Asqj  qjAjAw 	j"A
w"
  j A
w"
 	 j 
 Asqj  qjAjAw j"Asqj  qjAjA
w 
j"Asqj  qjAjAw 
j"A
w"	j 
 j A
w"
 
 
 j A
w"
 Asqj  qjAjA	wj"Asqj  qjAjA
w 
j"A
w" 
 j A
w"  
j 	 Asqj  qjAjAw 
j"Asqj  qjAjA
w 	j"As"
qj  qjAjA
w j"	A
w"
j  A
w"j   A
w"j   j  
j 	 
r sjAjA
w j" 	Asr sjAjA
wj" Asr 
sjAjAwj" Asr A
w"sjAjAw 
j"	 Asr A
w"sjAjAw j"
A
w"
j  	A
w"j  A
w"j  
j  j 
 	Asr sjAjA	w j" 
Asr sjAjA
w j" Asr 
sjAjAw j" Asr A
w"sjAjAw 
j"	 Asr A
w"sjAjAw j"
A
w"
j  	A
w"j  A
w"j  j  j 
 	Asr sjAjA
w j" 
Asr sjAjAw j" Asr 
sjAjAw j" Asr A
w"	sjAjA
w 
j"
 Asr A
w"sjAjAw 	j"
A
w"j  A
w"j 	 j 
 
Asr sjAjAw j"	 Asqj  j 
 
A
w"Asqj  	qjAkA
w j"
 qjAkA
w j"
 
A
w"Asqj   j 
 	A
w"Asqj  
qjAkAwj"
 qjAkAw j"A
w"j  
A
w"	j  j 
 	Asqj  	qjAkAw j"
 Asqj  
j  
A
w"Asqj  
qjAkAw 	j"	 qjAkA	w j"
 	A
w"Asqj  j 	 
A
w"Asqj  
qjAkAw j"

-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11101-11250
 qjAkA	w j"A
w"j  
A
w"	j  
j 
 	Asqj  	qjAkAw j"
 Asqj  j  
A
w"Asqj  
qjAkAw 	j"	 qjAkAw j"
 	A
w"Asqj  j 	 
A
w"Asqj  
qjAkAw j"
 qjAkAw j"A
w"
j  
A
w"j   
A
w"	j  j  Asqj  j 
 	Asqj  	qjAkAw j" qjAkA
w 	j"  
AsrsjAkA	wj"  A
w"AsrsjAkAw 
j"	  A
w"AsrsjAkAw j"
A
w"
j  	A
w"j  A
w"j  j  j 
 	 AsrsjAkA
w j" 
 AsrsjAkAw j"  
AsrsjAkAw j"  A
w"AsrsjAkA
w 
j"	  A
w"AsrsjAkA
w j"
A
w"
j 
 	A
w"j 
 A
w"j  j  j 
 	 AsrsjAkAw j" 
 AsrsjAkA
w j"  
AsrsjAkA
w j"  A
w"	AsrsjAkAw 
j"
  A
w"AsrsjAkA
w 	j"
A
w"" j  
      
          Asr 
sj jA旊jAw 
j"A
w"j  j  j  j 
  
 Asrsj jA旊jA	w j"  AsrsjA旊jA	w j"  AsrsjA旊jA
w j"  A
w"AsrsjA旊jA
w j"  A
w"AsrsjA旊jAw j"A
w"
j  A
w"j  A
w"j  j  j   AsrsjA旊jAw j"  AsrsjA旊jAw j"  
AsrsjA旊jAw j"  A
w"AsrsjA旊jAw 
j"  A
w"AsrsjA旊jAw j"A
w"
j 
 A
w"j  A
w"j  j  
j   AsrsjA旊jA
w j"  AsrsjA旊jAw j"  
AsrsjA旊jAw j"  A
w"AsrsjA旊jA
w 
j"  A
w"
AsrsjA旊jAw j"A
w"j 
 A
w"j  j  Asqj  qjAjA	w 
j" Asqj  
 j  A
w"Asqj  qjAjA
wj" qjAjAw j"
 A
w"Asqj   j  A
w"Asqj  
qjAjAwj" qjAjA
w j"A
w"j  
A
w"j  j  Asqj  qjAjAw j"
 Asqj  j  A
w"Asqj  
qjAjA	w j" qjAjA
w j" A
w"Asqj  j  
A
w"Asqj  qjAjAw j"
 qjAjAw j"A
w"j  A
w"j  
j 
 Asqj  qjAjA
w j" Asqj  j  
A
w"Asqj  qjAjAw j" qjAjAw j"
 A
w"Asqj  j  A
w"Asqj  
qjAjAw j" qjAjA
w j"A
w"j  A
w"!j  
A
w"j  j  j  Asqj  qjAjA
w j" Asr !sjAjA	w j" Asr sjAjAw !j" Asr A
w"sjAjAw j" Asr A
w"sjAjA
w j"A
w"
j  A
w"j  A
w"j  j  j  Asr sjAjAw j" Asr sjAjAw j" Asr 
sjAjAw j" Asr A
w"sjAjAw 
j" Asr A
w"sjAjA
w j"A
w"
j  A
w"j  A
w"j  j  
j  Asr sjAjA

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11251-11400
w j" Asr sjAjAw j" Asr 
sjAjAw j" Asr A
w"sjAjA
w 
j" Asr A
w"sjAjA
w j"A
w"
j  j A
w"   j A
w"  AsrsjAjAwj" AsrsjAjAw j"A
w"  j A
w"  
j 
 Asqj  qjAjAw j"
Asqj  
qjAjAw 
j"Asqj  
qjAjAw j"A
w"j  
j A
w"
   j 
A
w" Asqj  qjAjA
wj"
Asqj  
qjAjAw j"A
w" 
 j 
A
w"  j  Asqj  
qjAjAw 
j"
Asqj  
qjAjAw j"Asqj  
qjAjAw j"A
w"j  j A
w"   j 
A
w" Asqj  qjAjAwj"
Asqj  
qjAjA	w j"A
w"
  j 
A
w"  j  Asqj  
qjAjA
w j"
Asqj  
qjAjA	w j"Asqj  
qjAjA
w j"A
w" j  
A
w"
j  
 j A
w"  j 
 Asqj  qjAjAw 
j"Asqj  qjAjAw 
j"
Asqj  
qjAjAw j" 
A
w"s  j 
 A
w"s sjAw j"
sjAw j"A
w"j  A
w"j  j 
 s sjA
w j" s  j  
A
w"s sjA	w j"
sjA
w j" 
A
w"s  j 
 A
w"s sjAw j"sjAw j"A
w"
j A
w" j  j  s sjAw j" 
s  j  A
w"s sjAw j"sjA
w j" A
w"s  j  A
w"s sjAw 
j"sjAw j"A
w"
j6    j  A
w"s sjAw j"A
w"  	 j 
 
 A
w"AsrsjAkAw j"A
wjj6   
  j  
 
A
w"AsrsjAkAw j"j  
j  A
w"s sjA
w j"A
wj6     j 
 s sjA
w j"   j  j   "AsrsjAkAwjj6    
j 
j  j  s sjA
wj6

A!    ("AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"AtAq"As  Av"Aq"A²s  Aq"As  Aq"As  Aq"As  Aq"6@  ( " AA  - 
s"AvAqA j(   (("   
   AvA qA j(     
   A
vA qA j(     
   AvA qA j(     
   AvA qA j(     
   AqAtA j(     !
 
=  ("  (F     ( 
  ( j :      (Aj6A 
# Ak"$ A!@@@ (("AM@ Aj! 

 (! ! (
"	 M@@ AO@Ax!  G


Ax! AI
 A 6  Aj  	At  	6( AK At"AOr
 

A ! AK At"AKr
@ AO@ At! AK@ !

 AM
 !

A -  A! A"E
   	At

A!  A "


A A A  
  6
 A 6A A+ AjA A  
  6(  6  	6 A6 Ax!
   6   6  Aj$ 

-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11401-11550
  ( !# A0k" $ @@@@A ( Ak" AOAk 
   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj

 A A

   6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj

 A A
!  A0j$  
  ( !# A0k" $ @@@@ ( Ak 
   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj

 A A'

 A A%

   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj
!  A0j$  
  ( !# A0k" $   A
jB7   A6  A 6  A 6,   Aj6(    A(j6A   Aj
 A  ( E
    (6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj
!  A0j$  
  ( !# A0k" $ @@@@A ( Ak" AOAk 
 A A&

   6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj

 A A%

   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj
!  A0j$  
  ( !# A@j" $   A 6   6A!@@  A j  Aj  ( 
 Aj!  ($
 
  A 6  A 6   6  A j  Aj  ( E@@@@  ($"E
   ((!    (Aj"6   6
  A6$  A 6   B7,  A 6<    A8j6(    A
j68   A j
  E   " Or
  A6$  A 6   B 7,  A 6(   A jE

  A@k$  

  A j  Aj  ( E
 


    )$78A A
  A8jA A  

  ( !# A0k" $ @@@@@@@@@@@@@@@@@@@@@@@ -  Ak	



 
 A A

 A A

 A A


 A A


 A A

 A A

 A A

 A A


 A A


 A A


 A A


 A A



 A A


 A A

	
 A A

 A A	

 A A

 A A

 A A


 A A	

 - !   - :   AjB7   A,jA 6   A 6  A 6$  A6
   AtA j6(    A j6    Aj6    Aj

 - !   - :   AjB7   A,jA 6   A 6  A 6$  A6
   AtA j6(    A j6    Aj6    Aj

 - !   - :   AjB7   A,jA 6   A 6  A 6$  A6
   AtA j6(    A j6    Aj6    Aj
!  A0j$  

   (  
	    

   (  
S# A k"$  A
jB7  A6 A 6  A 6
   6  Aj6  !  A j$   
(    ( -  At" A j(   A j( 

   (  
# A k"$ @@@@@@@@@@@@@@@@@@@@@@@@@  -  Ak	


-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11551-11700


 
 A4jB 7  A6, A 6( A 60  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

   Aj6L   Aj6  A4jB7  AjA 6  A6, A 6( A 6
  Aj60  A j6  A j6  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

 A4jB 7  A6, A 6( A 60  A(j!


 A4jB 7  A6, A 6( A 60  A(j!


 A4jB 7  A6, A 6( A 60  A(j!


 A4jB 7  A6, A 6( A 60  A(j!


   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!
	
 A4jB 7  A6, A 6( A 60  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

 A4jB 7  A6, A 6( A 60  A(j!

   Aj6L A
jA6  AjA6  A 6$ A6
 A 6  A j6  A: D A6@ B 78 B 70 A6(  A(j6  A j6  Aj!

   Aj6L   Aj6  A4jB7  AjA 6  A6, A 6( A 6
  Aj60  A j6  A j6  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

   Aj6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!

   Aj6L A4jB 7  A 6( A 60A! A6,  A(j
   Aj" -  AG@   6  A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j

 A4jB7  A6, A 6( A 6
  Aj60  A j6  A(j!
 A j$  
  ( !# A0k" $ @@@@@@@@@@ -  Ak		 
   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj
	
 A A


 A A


 A A!

 A A

 A A

 A A-

 A A'

 A A(

   Aj6
  A
jB7   A6  A 6  A 6,    A(j6    A
j6(   Aj
!  A0j$  
   ( " (   Aj(  
#  A A   ( -  " AA  
?# Ak"$    ( 6
 A AA A A
jA !  Aj$   

~# Ak"$  A6
  6  6 A6  A
j6
 A j"A 6  A 6  A j!# Ak"$  Aj"(
! (!
 ( !
@@@@ (" 
E
  
n"   
lGjA 
!A! (("! A(j!
  AO (!  
 kK@  j" I
A AkgvA  AOAj"E
 Aj   ("AxG@ E
  (
 
 
( !
A! AM@ Aj!
 
!	 

 Aj!	 (!
 ! (
" O
@@ E
 
  
  
I"j!
@ E@B !

 Aq! 5 B?!B ! 
! AO@ A|q!@ Ak1   Ak1   Ak1        Ak"1  ! Ak"
 

 E
  Ak!@ 1    ! Ak! Ak"
 

  k! 
 Atj 7  Aj" G

-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11701-11850
 
 !

 	 6 

A AA  
A AA  
 	 6  E
  Aj!	 Aj!@ 
  
  
I"
j!
@ 
E@B !

 
Aq! 5 B?!B ! 
! 
AO@ 
A|q!@ Ak1   Ak1   Ak1        Ak"1  ! Ak"
 

 E
  Ak!@ 1    ! Ak! Ak"
 

 
( "AI@ ! !A! 


 	( ! ( ! 	
!  
k!  F  (! 	! ( 
At j 7   ( Aj6  
 

 Aj$  A j"
 ) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7  A j"	 A(j) "7   ) 7P A jAr!
 !@ 	! (x"! AI"E@ (T! !
@ E
  At jAk) B R
  
! E@ (T! 
!
 E
  Ak6 


   )P7   A(j A j) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   Aj A j) 7  Aj$ 


~# Ak"
$  (("! (("! A(j!	@@@@@@ AO@ (!
@@ AO ( 
 M@ AM Aj (! (
!
 AM Aj (! (
!  K
 E
 Aq!
@ AF@

 A~q! ! 
!@   ) |" ) |"7  Aj"
  V  V|" 
) |" Aj) |"7   T  V|! Aj! Aj!  Aj"G
 

 
~ 
 At"j"  ) |"  j) |"7   V   V|| 
P
 
 At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 


 AM Aj (! (
!
 AM@ Aj!
 

 (!
 (
" I
  K
@ E@

 Aq!
@ AF@

 A~q! 
! 
!@   ) |" ) |"7  Aj"  V  V|" ) |" Aj) |"7   T  V|! Aj! Aj!  Aj"G
 

 
@ 
 At"j"  ) |"  
j) |"7   V   V||!
 P
  
 At"j! At k!@ E@B!

  ) "B|7  Ak! Aj! BQ
 

 AM Aj (! (
!
  I
A! 	( "!  k" AO (!  
 kK@  j" I
A AkgvA  AOAj"E
 
Aj   
("AxG@ E
  
(
 
 	( !
 AO@ (" I
 (

  I
 Aj
!  Atj" At"
j   kAt  
 Atj 
 	"( AO Aj 
  j6  	( "AM Aj (! (
!  I
  F
  At"j" ) " |"7   X
 At kAk! Aj!@ E
  ) "B|7  Ak! Aj! BQ
 


A! 	( "AM@ Aj! 

 Aj!	 (! ! (
" F  Aj!	 (! ( 
At jB7  	 	( Aj6 
   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  
Aj$ 
  A  
  A  
A AA  

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:11851-12000
A A
A  
  A  
A A#A  

~# A k"$  (("	AM Aj (!	 (
! (("
AM Aj (!
 (
! 	 
 	 
I"At!
@@@ E
  Aq!@ AF@

 A~q!
 ! !@   ) |" ) "}7  Aj"
   T|  T}" 
) |" Aj) "}7   T B?|  T}"B?! Aj! Aj! 
 Aj"G
 

 ~  At"j"  ) |"  j) "}7    T|  T} 
P
   
j! 	At Atk!@ E
  ) "B}"7  Ak! Aj!  X
 

 A(j!
  
j! 
At 
k!@ E
 Ak! ) ! Aj! P
 

 AjB 7  A6
 A 6 A 6 AjA  
 Aj!
 Aj! (!@ ! 
( "! AI"E@ ! 
( !
@ E
  At jAk) B R
  
! E@ 
"( !
 E
  Ak6 


   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  A j$ 


~# A@j"$  (("	! 	AO@ (!
@@@@@@@@@@ (("AO@  ("
I
 (!


 Aj!
  K@ !


 !

 	AM Aj (!	 (
!@@ 
 	 	 
K"@ Aq!
@ AF@

 A~q!
 ! 
!@   ) |" ) "}7  Aj"   T|  T}" Aj) |" ) "}7   T B?|  T}"B?! Aj! Aj! 
 Aj"G
 

 
@  At"j"   
j) |" ) "}7    T|  T}!
 	 
I

 P


 	 
I

  At"j! 	At k!@ E
 Ak! ) ! Aj! P
 

 A
jB 7  A6 A 6 A 6 AjA  
 (!

  
K
 	AM Aj (!	 (
!
@  	  	I"E@

 Aq!
@ AF@

 A~q!
 
! 
!@   ) |" ) "}7  Aj"	   T|  T}" Aj) |" 	) "}7   T B?|  T}"B?! Aj! Aj! 
 Aj"G
 

 
E
  
 At"j"   
j) |" ) "}7    T|  T}!
 AM Aj (! (
!  I
A!	 A(j"
( "! AO@ !	 (!
  k"
 	 kK@  
j" I
A AkgvA  AOAj"E
 Aj   ("AxG@ E
  (
 
 
( !
 AO@ (" I
 (

  K
 Aj
 Atj"
 
At"j 
  kAt 
  Atj  
"( AO Aj 
  
j6  P
  
( "AM Aj (! (
!  K
  G"At!@@  F

-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12001-12150
   Atj" ) "B}"7   V
   j! At Atk Atk!@ E
  ) "B}"7  Ak! Aj!  X
 

@ AF
 A j! Aj! ) P
 

 A
jB 7  A6 A 6 A 6 AjA  
 A8j"
 A(j) 7  A0j A j) 7  A(j Aj) 7  A j Aj) 7  Aj" Aj) "7   ) 7 !
 AjAr!@ ! (8"! AI"	E@ (! 
!
@ E
  At jAk) B R
  
! 	E@ (! !
 E
  Ak6 


   )7   A(j A8j) 7   A j A0j) 7   Aj A(j) 7   Aj A j) 7   Aj Aj) 7  A@k$ 
  
A  
  A  
A AA  
A A
A  
  A  
A A!A  


~# Ak"$ @@@@ ("  ( "
AF"(("AO ( 
@ 
AG
 (("AK
 Aj

 A6 B7  Aj"A 6  A 6` A j  A j" ) 7  A j Aj) 7  A j A j) 7  A@k A j) 7  A8j" A j) "
7   )`70 A0jAr! 
!	@ ! (X"! AI"
E@ 	! (4!
@ E
  At jAk) B R
  ! 
E@ (4! !
 E
  Ak6 


   )07   A(j A j) 7   A j A j) 7   Aj A j) 7   Aj A@k) 7   Aj A8j) 7  
AF
 ((AI
 (

 (! (
! Aj"A 6  A 6` A j   Atj A(j ) 7  A j Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )`7 

 A j A(j) "
7  A j A j) 7  A j Aj) 7  A@k Aj) 7  A8j" Aj) 7   ) 70 
"AK@ (8! (4!
 Aj"A 6  A 6` A j   Atj A(j ) 7  A j Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )`7  (XAI
  (8
 (("AM Aj (! (
!@ E
   Atj! AkAq"Aj"Aq! AO@ Aq!@ Ak" 
 ) "
B7  Ak" 
B? ) "
B7  Ak" 
B? ) "
B7  A k" 
B? ) "
B7  
B?!
 Ak"
 

 E
  Ak!@  
 ) "
B7  Ak! 
B?!
 Ak"
 

 Aj" A(j) 7  Aj A j) 7  A j Aj) 7  A j Aj) 7  A j" Aj) "
7   ) 7` A jAr! 
!@ ! ("! AI"	E@ ! (d!
@ E
  At jAk) B R
  ! 	E@ (d! !
 E
  Ak6 


   )`7   A(j Aj) 7   A j Aj) 7   Aj A j) 7   Aj A j) 7   Aj A j) 7 
 Aj$ 
{~  I@A
  M@ At! Ak! At!  Ak! @A  E Er
   j) "  j) "T@A
 Ak! Ak!  X
 

A

	~# A k"$  At! !@@@@@ E@

 Ak! Ak" j) P
 
 Aj" K

 At! !@@ E@

 Ak! Ak" j) P
 
 Aj"	 K

@@@@@  	I
 @  	M@ 	At! Ak! At! Ak!@ E Er
  j) "  j) "T
 Ak! Ak!  X
 

 A j"A 6  A 6@ A@k   Atj A(j ) "7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) 7   )@7  "AK@ (! (!
  	  	I"At!
 E
 Aq!
 AG
B !A !B !

 A68 B70 A j"A 6  A 6@ A@k A0j A(j" ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) "7   )@7  Ar! !@ ! (("! AI"	E@ (! !
@ E
  At jAk) B R
  ! 	E@ (! !
 E
  Ak6 


   ) 7  A0j A(j) 7   A(j A j) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   A:  

 A j"A 6  A 6@ A@k   	Atj A(j ) "7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) 7   )@7  "AK@ (! (!
    I"	At!
@ 	E
  	Aq!
@ 	AF@B !A !B !


-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12151-12300
 	A~q!
B !A ! ! !B !@   ) |" ) "}7  Aj"
   V|  T}" 
) |" Aj) "}7   V B?|  T}"B?! Aj! Aj! 
 Aj"G
 

 
~  At"j"  ) |"  j) "}7    V|  T} 
P
   
j! At 	Atk!@ E
  ) "B}"7  Ak! Aj!  X
 

  
j! At 
k!@@ E
 Ak! ) ! Aj! P
 


 A j" A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j" Aj) "7   ) 7@ A@kAr! !@ ! (h"! AI"	E@ (D! !
@ E
  At jAk) B R
  ! 	E@ (D! !
 E
  Ak6 


   )@7  A0j A j) 7   A(j A j) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   A :  

 A~q!
B !A ! ! !B !@   ) |" ) "}7  Aj"
   V|  T}" 
) |" Aj) "}7   V B?|  T}"B?! Aj! Aj! 
 Aj"G
 

 
~  At"j"  ) |"  j) "}7    V|  T} 
P
   
j! At Atk!@ E
  ) "B}"7  Ak! Aj!  X
 

  
j! 	At 
k!@@ E
 Ak! ) ! Aj! P
 


 A j" A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j" Aj) "7   ) 7@ A@kAr! !@ ! (h"! AI"	E@ (D! !
@ E
  At jAk) B R
  ! 	E@ (D! !
 E
  Ak6 


   )@7  A0j A j) 7   A(j A j) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   A:  
 A j$ 
  A  
 	 A  
 A jB 7  A6D A 6@ A 6H A@kA  
2   ( !  E@ E@   
   
   
# Ak"$ A!@@@ (("AM@ Aj! 

 (! ! (
"	 M@@ AO@Ax!  G


Ax! AI
 A 6  Aj  	At  	6( AK At"AOr
 

A ! AK At"AKr
@ AO@ At! AK@ !

 AM
 !

A -  A! A"E
   	At

A!  A "


A A A  
  6
 A 6A A+ AjA A  
  6(  6  	6 A6 Ax!
   6   6  Aj$ 
# Ak"$ @@  (("AO  ( 
Aj"E
 A AkgvA  AOAj"E
  Aj    (" AxG@  E
   (
 
 Aj$ 
A AA  
A AA  
# Ak"$ A!  (("!  A(j!@@@  AO  (!  
 kK@   j"K
A AkgvA  AOAj"E
 Aj    ("AxG@ E
  (
 
 ( !
A! AM@  Aj! ! 

  Aj!  (! !  (
!   K  Atj!@ E
 B 7  Aj! Ak!  Aj"G
 
  
6  E
  Aj!	  Aj!@ ( "AI@ ! !A! 

 	( ! ( ! 	
! Ak!  F    (! 	!  ( 
At jB 7   ( Aj6  
 


A AA  
  6 
 Aj$ 
~# Ak"$ A!  (("! AO@ !  (!
  A(j!	@@@  kAv"  kK@   j"K
A AkgvA  AOAj"E
 Aj    ("AxG@ E
  (
 
 	( !
A! AM@  Aj! 	! 

  Aj!  (! !  (
!   I  Atj!@  F
  ) 7  Aj! Aj!  Aj"G
 
  
6   F
  Aj!  Aj!
@ 	( "AI@ ! 
!A! 	

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12301-12450

 ( ! 
( ! 
! ) !
  F@    (!  (! !
  Atj 
7   ( Aj6  Aj" G
 


A AA  
  6 
 Aj$ 

~# Ak"	$  (! ( !@@@@ (" E
  n"   lGjA 
!A!  (("!  A(j!
  AO  (!  
 kK@  j" I
A AkgvA  AOAj"E
 	Aj    	("AxG@ E
  	(
 
 
( !
 AM@  Aj! 
! 

  Aj!  (! !  (
" O
  Atj!@@ E
~    I"AM@ AF@ 5 

A A A  
 ) 
!
  k!  Atj!  
7  Aj!  Aj"G
 
 !

  6 

A AA  
A AA  
  6  E
   Aj!  Aj!
@~    I"
AM@ 
AF@ 5 

A A A  
 ) 
!
 
( "AI@ ! 
!A! 


 ( ! 
( ! 
!  
k!  F@    (!  (! !
 
At j!  Atj 
7   ( Aj6  
 

 	Aj$ 
# Ak"$   ( !     (("AM  Aj  (!  (
!  @ At!@   6
  A
jA   Aj!  Ak"
 

 !  Aj$   
T@@  (("AO@  (" I
  Aj

  K
  A(j
!   O
   6 
    k

@@ AO@ AIAt! At"A H A Kr
    
"E
   6   6  A6    6(
   6(  B 7   B 7  B 7  B 7  A 6 
 
   
# A k"$ @@ Aj"E
 A  Aj( "At"   I" AM"A0l! AժIAt!@ @ A6  A0l6   ( 6

 A 6
    Ajz (! ( E@   6   Aj 6 

 AxF
 E
   Aj(  
 
 A j$ 
~# A k"$   6,  6(  60  64 (("!@ AO ( 
 G
  (("	! 	AO ( 
 G
  (("! AO ( 
 G
   (("!
  A(j"
! AO@  (!
  Aj!
 At!
 
@ A 6  
( !
@@@ AO@  (" 
I
  Aj!

 
!  
I

  
M
  
6 

   
 k
@@@@@@@@ @ ( Aj 	AK"! (" Aj" AK"!
 ( Aj AK"
!  ("  "  K!
  (  
"  K! ( 	 !  Aj!A !
A !@  j!	 
( "! ! AO@  (!  (!
  	I
  O
@ E@B !

  
j!  Atj) !B ! ! !@ Aj ) B     )" ) |"|"7   V A j)   V||! Aj! Aj! Ak"
 
 
( !
@@ AO@  (" K
 !

-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12451-12600

 !   I

  A  
 ( 
!  	I
@ 
E@B !

  
j!  Atj)  ~!B ! 
! 
!@ Aj ) B     )" ) |"|"
7   
V Aj)   V||! Aj! Aj! Ak"
 
 
( !
 ! AO@  (!  (!
  	M
  	Atj   |"|"7   V  Vr"! 
Aj!
 Aj" G
 
 

 
( "AM  Aj  (!  (
!  K
 At F@ E
 Aq!A ! AO@ At!
 Aj! A|q!@ ) !   
j") 7   7  Ak"
) ! 
 Ak"
) 7  
 7  Ak"
) ! 
 Ak"
) 7  
 7  Aj"
) ! 
 Aj") 7   7  A j!  Aj"G
 

 E
 At!  Atj!@ ) !   j") 7   7  Aj! Ak"
 


 A jB 7  A6T A 6P A 6X A jA  
 
( "AO@  (!  (!
  K
  Atj  At"jkAv"   AK""  I!   !B ! !@ E
   j) "  ) "}|"7    B"  B?! Aj! Aj! Ak! Ak"
 

 
( "AO  Aj!
  ( 
 K@ 
 6 
 A j$ 
 	 A  
  A  
 	 A  
 	 A  
A A#A  
A A#A  
 A jA 6  A jA 6  A jA 6  A jB7  A6< A 68 A 6T  A j6@  A4j6h  A0j6`  A,j6X  A(j6P A8jA  


~# A k"$  - 0!	@ - 0"
AF@ (("AM Aj (! (
! A j"A 6  A 6@ A@k   Atj  A(j ) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   Aj A j) 7    )@7    	: 0

@@@@@ 	Ak 
 (("AM Aj (! (
! A j"A 6  A 6@ A@k   Atj  A(j ) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   Aj A j) 7    )@7    
: 0

 



 


 (("! AO@ (!
@@ (("AO@  ("O
 (

  O
 Aj
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7    

 AM Aj (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7    
   	 A@k

@@@ (("AM@ Aj!
 

 (!
 (
" (("AM@ Aj! 

 (! (
"I
   M@ At! Ak!
 At! 
Ak!@ E Er
  j) "  
j) "
T
 Ak! Ak! 
 Z
 

 AK
 Aj

 AM Aj (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7       
 

 A68 B70 A j"A 6  A 6@ A@k A0j A(j" ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) "
7   )@7  Ar! 
!@ ! (("! AI"
E@ ! (!
@ E
  At jAk) B R
  ! 
E@ ! (!
 E
  Ak6 


 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@  A A@k

 (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7       	 
 A j$ 
	~# A k"$ @   AqAG@ A (("AO ( 


 B 74 A 60 A j"A 6  A 6@ A@k A0j A(j ) "
7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) 7   )@7  
"AM@ 

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12601-12750

 (! (
! A(j!@@@ (("AO@ (" I
 Aj!

 !  I

  M
  6 

   k
 ( "AM Aj (! (
!  G
   At Aj!	 Aj!
 (!@ 
! ( "! AI"
E@ 	( ! !
@ E
  At jAk) B R
  ! 
E@ 	"( !
 E
  Ak6 


 AO@ (
A
: 0   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  A j$ 
   

~# Ak"$ @@@@ - 0"AG@@@@ - 0"
Ak 
 


 

 A j" A(j"
) 7  A j A j") 7  A j Aj") 7  A@k Aj") 7  A8j Aj"
) 7   ) 70 Aj A(j") "7  Aj A j"	) 7  A j Aj"
) 7  A j Aj") 7  A j Aj") 7   ) 7`A ( " AMA " AMO@ Aj 
) 7  Aj ) 7  Aj ) 7  Aj ) 7  Aj 
) 7   ) 7  Aj A j" 

 Aj ) 7  Aj 	) 7  Aj 
) 7  Aj ) 7  Aj ) 7   ) 7  Aj A0j" 
"((AO@ (
   
 

   ) 7   A0j A0j) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  ((AI
 (

   ) 7   A0j A0j) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 (("AM Aj (! (
!	 (("AM Aj (! (
!@@  K
   O@ At! Ak!
 At! 	Ak!@ E Er
  j) "  
j) "T
 Ak! Ak!  Z
 

 Aj A(j) 7  Aj A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7` Aj" A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A0j A j Aj ( AO@ (
   
 A0j

 Aj A(j) 7  Aj A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7` Aj" A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A0j A j Aj ( AO@ (
    A0j

 A68 B70 Aj"A 6  A 6 Aj A0j Aj" ) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7  A j"	 Aj) "7   )7` A jAr!
 !@ 	! ("! AI"
E@ (d! !
@ E
  At jAk) B R
  ! 
E@ (d! 
!
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )`7  A Aj ((AI
  (
 ((AI
  (
 Aj$ 
~# A k"$  - 0!@ - 0"AF@ (("AM Aj (! (
! A j"A 6  A 6@ A@k   Atj  A(j ) 7   A j A j) 7   Aj A j) 7   Aj A j) 7   Aj A j) 7    )@7    : 0

@@@@@ Ak 
 (("AM Aj (! (
! A j"A 6  A 6@ A@k   Atj A(j ) "
7  A j A j) "
7  Aj A j) "
7  Aj A j) "7  Aj A j) "7   )@"7   A(j 
7   A j 
7   Aj 
7   Aj 7   Aj 7    7   A k: 0

 


 

@ (("AM@ Aj!	 

 (!	 (
" (("AM@ Aj!
 

 (!
 (
"I
 @@  O@ At! 
Ak!
 At! 	Ak!	@ E Er
  	j) "
  
j) "
T
 Ak! Ak! 
 
X
 

 AK
 Aj

 A68 B70 A j"A 6  A 6@ A@k A0j A(j" ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) "
7   )@7  Ar! 
!@ ! (("! AI"	E@ ! (!
@ E
  At jAk) B R
  ! 	E@ ! (!
 E
  Ak6 


 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@  A A@k

 (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7        

A k! AM Aj (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7        

 (("! AO@ (!

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12751-12900
@@ (("AO@  ("O
 (

  O
 Aj
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7    

 AM Aj (! (
! A j"A 6  A 6@ A@k"   Atj A(j ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7    
    A@k
 A j$ 

~# A k"$ @ - 0"AF@   ) 7   A0j A0j) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

@@@@@@ - 0"Ak 
 (("AM Aj (! (
! A j"A 6  A 6@ A@k   Atj A(j ) "
7  A j A j) "7  Aj A j) "7  Aj A j) "7  Aj A j) "
7   )@"
7   A(j 
7   A j 7   Aj 7   Aj 7   Aj 
7    
7   A k: 0

 


 

 (("AM Aj (! (
! (("AM Aj (! (
!@@  I
 @  M@ At! Ak!	 At! Ak!@ E Er
  j) "
  	j) "
T
 Ak! Ak! 
 
Z
 

 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@  A@k     

 A68 B70 A j"A 6  A 6@ A@k A0j A(j" ) 7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) "
7   )@7  Ar!	 
!@ ! (("! AI"
E@ (! !
 E
 At jAk) B R
 ! 
E@ 	! (!
 E
   Ak6 
 
 
 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@   A@k  A k 

 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@  A A@k
 ((AI
 (

 A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@  A@k     
 A j$ 

~# Ak"$ @@@@ - 0"AG@@@@ - 0"Ak 
 


 

 (("AM Aj (! (
! (("AM Aj (! (
!@  K
 @  O@ At! Ak! At! Ak!@ E Er
  j) "  j) "T
 Ak! Ak!  X
 

 Aj A(j) 7  Aj A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7` Aj" A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A0j A j Aj ( AO@ (
    A0j

 A68 B70 Aj"A 6  A 6 Aj A0j Aj" ) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7  A j" Aj) "7   )7` A jAr!	 !
@ ! ("! AI"
E@ 
! (d!
@ E
  At jAk) B R
  ! 
E@ (d! 	!
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )`7  A Aj ((AI
 (

 Aj A(j) 7  Aj A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7` Aj" A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A0j A j Aj ( AO@ (
  A k A0j

   ) 7   A0j A0j) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  ((AI
 (

   ) 7   A k: 0   ( 16 1  A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A4j A4j(  6  
 ((AI
 (

 A j" A(j") 7  A j A j") 7  A j Aj"	) 7  A@k Aj"
) 7  A8j Aj") 7   ) 70 Aj A(j"
) "7  Aj A j"
) 7  A j Aj"
) 7  A j Aj") 7  A j Aj") 7   ) 7`A ( " AMA " AMO@ Aj ) 7  Aj ) 7  Aj 	) 7  Aj 
) 7  Aj ) 7   ) 7  Aj A j" 

 Aj 
) 7  Aj 
) 7  Aj 
) 7  Aj ) 7  Aj ) 7   ) 7  Aj A0j" 
"((AO@ (
    
 Aj$ 

~# Ak"$  A6H B7@ Aj"A 6  A 6 Aj A@k Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j" Aj) "
7   )7p A jAr! 
!	@ ! ("! AI"
E@ 	! (t!
@ E
  At jAk) B R
  ! 
E@ (t! !
 E
  Ak6 


 Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7  Aj" Aj) 7  Aj" A j) 7   )p7 A8j  A(j") 7  A0j  A j"	) 7  A(j  Aj"
) 7  A j  Aj"
) 7  Aj  Aj"
) 7    ) 7   )7  
 ) 7  
 ) 7  
 ) 7  	 ) 7   ) 7  Av! (!@@@@ A?M@ (! AF@ (("AM Aj (! (
! Aj"A 6  A 6 Aj   Atj A j ) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7@

 A j A j) 7  A j A(j) 7  A j A0j) 7  A j A8j) 7   6D  6@  )7H

 ( Aj AF"(("AO@ (!
 A 6 A 6@  jAj"AI
  Aj Aj  ("AxF
  E
  (
 

-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:12901-13050
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7   )7p A j"   ( Aj (AF"(("AM@ Aj

 (! (
"  Atj A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j A j) 7   )p7@
 A?q"E
 (h"AM A j (D! (H
!  I
  F
 A j! At At"k!  j!A  kA?q! !B !
@  
 ) " 7  Aj!  !
 Ak"
 
 
P
A! (h"AM@ ! A j

 A@kAr! (D! ! (H
!  F@ A@k" Ar! (D! (H!
  Atj 
7   ( Aj6 

A AA  
  A  
 Aj" A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj" A j) "
7   )@7 AjAr! 
!	@ ! ("! AI"
E@ 	! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7   )7p@ A I
  (AF
  (8AI
  (
  ((AO@  (
   )p7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj A j) 7  Aj$ 
~# A	k"$     I"!
   !    K!	@@@@@@@@@@@@@@@@@@@@@   "A!O@ AI
 A	j"A 6  A 6	 A	j 
 
  	An"Aj"  K"
Atj"
 Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7  
k"   I! 	 k"   I! AjAr! !
 !@ ! ("! AI"E@ 
! (!
 E
 At jAk) B R
 ! E@ (! !
 E
   Ak6 
 
 
 E
 
 Atj!
 At!
 	At! 	A~q!
 	Aq!A !  !@  I
@ 
) "P
   k 	I
 	E
 @ 	AF@B !A !

A ! ! !B !@ Aj ) B     ) |"
 )|"
7  A j Aj) B   Aj" 
 
V Aj)   
V||"
 ) |" ) |"
7   
V A(j)   
T||! Aj! Aj! 
 Aj"G
 

 @   At"j) B     Atj j"  ) |" ) |"
7   
V Aj)   V||!
 P
  !@  
F
  j"  ) |"7  Aj!  V"
 

 Aj! 
Ak!
 Aj! 
Aj"
 
G
 


 A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X  (6|  ("6T  6P  6x AA   AK:  
 j"
 K
 A j! A	j"A 6  A 6	 A	j 
 
 Atj Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7 AjAr! !
 !
@ ! ("! AI"E@ 
! (!
@ E
  At jAk) B R
  ! E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  (6  ("6  
6  6 AA   AK:  A	j"A 6  A 6	 A	j 
 
Atj 
 Atj Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7 AjAr! !
 !
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  (6  ("6  
6  6 AA   AK:  	 M
 Aj!
 A	j"A 6  A 6	 A	j   Atj"
 Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7 AjAr! !
 !
@ ! ("! AI"E@ 
! (!
@ E
  At jAk) B R
  ! E@ (! !
 E
  Ak6 



-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13051-13200
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  (6  ("6  
6  6 AA   AK:   j"
 	K
 Aj! A	j"A 6  A 6	 A	j 
 
 Atj Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7 AjAr! !
 !
@ ! ("! AI"E@ 
! (!
@ E
  At jAk) B R
  ! E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  (6  ("6  
6  6 AA   AK:  A	j"A 6  A 6	 A	j  
Atj  	Atj Aj" ) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj" A	j) "7   )	"7 AjAr! !
 !	@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  (6  ("6  	6  6A!	 AA   AK:  Aj" A j Aj Aj" Aj Aj Aj  Aj Aj  Aj@ - "AF
 @@@ - Ak 
 
A !	

A !	 

A!	
 (x"AO@ (X! (T!
 ("AO@ (! (!
@  jAj"AM@ @ A	jA  At
 A	j" 6  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj ) "7  A 6  )	7 "AK
 ! Aj

 A K

 At"A H

 AIAt!    
"E
	  6  6  6 A6
 (
! Aj!
       A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"E@ 
! (	!
@ E
  At jAk) B R
  ! E@ (	! !
 E
  Ak6 


 Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7   )	7 Aj 	 AjA!	@ - "AF
 @@@ - Ak 
 
A !	

A !	 

A!	
 ("AO@ (!
 (!
 ("AO@ (!
 (!
@  jAj"AM@ @ A	jA  At
 A	j" 6  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj ) "7  A 6  )	7 "AK
 ! Aj

 A K

 At"A H

 AIAt!    
"E
  6  6  6 A6
 (
  
  
  A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"
E@ 
! (	!
@ E
  At jAk) B R
  ! 
E@ (	! !
 E
  Ak6 


 Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7   )	7 Aj 	 Aj" Aj"
 Aj) 7  Aj"	 Aj) 7  Aj"
 Aj) 7  Aj"
 Aj) 7  Aj" Aj) 7  Aj" Aj) 7   )7 A	j"
 Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 Aj Aj" A	j" 
 Aj) 7  	 Aj) 7  
 Aj) 7  
 Aj) 7   Aj) 7   Aj) 7   )7 
 Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	   A!
@ - "AF
 @@@ - Ak 
 
A !


A !
 

A!

 ("AM Aj (! (
! ("AM Aj (! (
!
@  jAj"AM@ @ A	jA  At
 A	j" 6  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj ) "7  A 6  )	7 "AK
 ! Aj

 A K

 At"
A H

 AIAt! 
 
  
"E
  6  6  6 A6
 (
    
  A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"	E@ 
! (	!
@ E
  At jAk) B R
  ! 	E@ (	! !
 E
  Ak6 



-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13201-13350
 Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7   )	7 Aj 
 Aj (AO@ (
 (AO@ (
A!
@ - "AF
 @@@ - Ak 
 
A !


A !
 

A!

 ("AM Aj (! (
! ("AM Aj (! (
!
@  jAj"AM@ @ A	jA  At
 A	j" 6  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj ) "7  A 6  )	7 "AK
 ! Aj

 A K

 At"
A H

 AIAt! 
 
  
"E
  6  6  6 A6
 (
    
  A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"	E@ 
! (	!
@ E
  At jAk) B R
  ! 	E@ (	! !
 E
  Ak6 


 Aj" A	j") 7  Aj"
 A	j") 7  Aj"	 A	j") 7  Aj"
 A	j") 7  Aj" A	j") 7   )	7 Aj 
 Aj"
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 A	j Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 
 Aj A	j - !
  ) "7   
) 7   	) 7   
) 7   ) 7   )7	 "AK@ (	! (	!
@ E
  AkAq"Aj"Aq!@ AI@B !

 Aq!B !@   ) "B"
|"7  Aj" ) "
B"
  
T B?||"7  Aj" ) "B"
  
T 
B?||"7  Aj" ) "
B"
  
T B?||"7   
T 
B?|! A j! Ak"
 

 @@   ) "B"
|"7   
T B?|! Aj! Ak"
 

 P
 A! (	"AM@ ! A	j

 A	jAr! (	! ! (	
!  F@ A	j" Ar! (	! (	!
  Atj 7   ( Aj6 
 Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7   )	7 Aj" 
 Aj"
 A	j"	 Aj) 7   A j) 7   A j) 7   A j) 7   A j) 7   A j) 7   )P7	 
  A	j"
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 	 Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 Aj  
 - !  Aj) "7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 "AK@ (	! (	!
@ E
  AkAq"Aj"Aq!@ AI@B !

 Aq!B !@   ) "B"
|"7  Aj" ) "
B"
  
T B?||"7  Aj" ) "B"
  
T 
B?||"7  Aj" ) "
B"
  
T B?||"7   
T 
B?|! A j! Ak"
 

 @@   ) "B"
|"7   
T B?|! Aj! Ak"
 

 P
 A! (	"AM@ ! A	j

 A	jAr! (	! ! (	
!  F@ A	j" Ar! (	! (	!
  Atj 7   ( Aj6 
 Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7   )	7 Aj"
  Aj A	j Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 Aj 
 A	jA!
@ - "AF
 @@@ - Ak 
 
A !


A !
 

A!

 ("AM Aj (! (
! ("AM Aj (! (
!
@  jAj"AM@ @ A	jA  At
 A	j" 6  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj ) "7  A 6  )	7 "AK
 ! Aj

 A K

 At"
A H

 AIAt! 
 
  
"E
  6  6  6 A6
 (
    

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13351-13500
  A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"	E@ 
! (	!
@ E
  At jAk) B R
  ! 	E@ (	! !
 E
  Ak6 


 Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7   )	7 A	j 
 Aj (AO@ (
 (AO@ (
 Aj A	j Aj - !	 Aj Aj) "7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) 7   )7 "AK@ (! (!
 @ Ak! At! A j!B !@ A@k  j") " B A0j )@" ) B  7   )0}! Ak"
 

 A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"
E@ 
! (	!
@ E
  At jAk) B R
  ! 
E@ (	! !
 E
  Ak6 


 Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7   )	7 Aj 	 Aj A	j Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 Aj A	j Aj - !	 Aj Aj) "7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) 7   )7 "AK@ (! (!
 E
 At! AkAq"Aj"Aq! E@B !  j

 Aq!  jAk!B !@ Aj" B? ) "B7   B? ) "B7  Ak! B! Ak"
 


 	 Av"I
@@ 	 k"  k"jAj"AM@ 


 A K

 At"A H

 AIAt!A    
"
   
 A	jA  At (	!
 Aj A	j( 6  Aj A	j) 7  Aj A	j) 7   )	7 (	!A 
! Aj Aj) 7  Aj Aj) 7  Aj Aj( 6   6  6  )7  6  6  6  Aj" AK  
 At"j"   j"  Aj! AjAr!
 (!@ ! ("! AI"E@ (! !
@ E
  At jAk) B R
  ! E@ (! 
!
 E
  Ak6 


  I
  k! !	 ! AO@ !	 (!
  K
   Atj!
@ E
  AG@ A~q! 	! 
!@   ) |" ) |"
7  Aj"  V  
V|" ) |" Aj) |"
7   T  
V|! Aj! Aj!  
Aj"
G
 

 Aq~ 
 
At"j"  ) |"  	j) |"
7   
V  V| 
P
  
 At"j! At k Atk!@ E
  ) "B|7  Ak! Aj! BQ
 

 A~q" K

 ! !	 AO@ (!	 !
  k 	I
@ 	E
    Atj! 	Aq!@ 	AF@B !A !


 	A~q!A !
 ! !B !@   ) |" ) |"
7  Aj"  V  
V|" ) |" Aj) |"
7   T  
V|! Aj! Aj!  
Aj"
G
 

 ~  
At"j"  ) |"  j) |"
7   
V  V| 
P
   	At"j! At k Atk!@ E
  ) "B|7  Ak! Aj! BQ
 

 ! AO@ (! 
!
 @ A 6 
 Aj  ! ("AO@ (! (!
   
    (!	@ ! ("! AI"E@ (! 	!
@ E
  At jAk) B R
  ! E@ (! 
!
 E
  Ak6 


 ! ! AO@ (! 	!
  I
@ E
  Aq!@ AF@B !A !


 A~q!A !
 !  !B !@   ) |" ) |"
7  Aj"  V  
V|" ) |" Aj) |"
7   T  
V|! Aj! Aj!  
Aj"
G
 

 ~   
At"j"  ) |"  j) |"
7   
V  V| 
P
    At"j! At k!@ E

-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13501-13650
  ) "B|7  Ak! Aj! BQ
 

 !  AO@ (! 	! 
  K
@ E
  Aq!@ AF@B !A !


 A~q!	A !
  ! 
!B !@   ) |" ) |"
7  Aj"  V  
V|" ) |" Aj) |"
7   T  
V|! Aj! Aj! 	 
Aj"
G
 

 ~ 
 
At"j"  ) |"   j) |"
7   
V  V| 
P
  
 At" j! At  k Atk!@ E
  ) "B|7  Ak! Aj! BQ
 

 A	j"   
  - 	!  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j"	) 7  Aj A	j"
) 7   )	7      - 	! Aj ) 7  Aj ) 7  Aj ) 7  Aj 	) 7  Aj 
) 7   )	7  AF

@@@ Ak 
  


  


 ! ("AO@ (! 
!
 @ A 6 
 Aj  ! ("AO@ (! (!
   ("AM Aj (! (
  ("
AM Aj (!
 (
 
 (! @ ! ("! AI"E@ (!  !
@ E
  At jAk) B R
  ! E@ (! 
!
 E
  Ak6 


 AO@ (!  !
    K" At!@@  E
   Aq!
@  AF@B !A !

  A~q!	B !A ! ! 
!@   ) |" ) "
}7  Aj"
 
  V|  
T}" 
) |" Aj) "
}7   V B?|  
T}"B?!
 Aj! Aj! 	 Aj"G
 

 
~ 
 At"j"  ) |"  j) "
}7  
  V|  
T} 
P
   
j! At  Atk Atk!@ E
  ) "B}"7  Ak! Aj!  X
 

  j! At k!@ E
 Ak! ) ! Aj! P
 

 A	jB 7  A6	 A 6	 A 6	 A	jA  
  A  
A A#A  
A A%A  
 
 A  
  	A  
 
 	A  
   
   
A A#A  
 
  A  
  A  
 
  ("AM Aj (! (
  ("AM Aj (! (
 
 (AO@ (
 (AO@ (
 (AI
 (

 Aj
! E
  Ak" B? ) B7 
 A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"
E@ 
! (	!
@ E
  At jAk) B R
  ! 
E@ (	! !
 E
  Ak6 


 Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7   )	7 Aj 	 Aj" A	j"
 Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	  A	j Aj 
 Aj) "7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7	 - !@@@@@ "AqAF@ ("AM Aj (! (
! Aj"A 6  A 6 Aj   Atj Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7  : 

@@@@ Ak 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A	j(  6    )7  ( 	6  A k: 

 Aq


 Aq

 ("AM Aj (! (
! (	"AM A	j (	! (	
!  I
@  M@ At! Ak! At! Ak!@ E Er

-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13651-13800
  j) "  j) "T
 Ak! Ak!  X
 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj Aj"   

 A6	 B7 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "7   )7 AjAr! !
@ ! ("! AI"	E@ 
! (!
@ E
  At jAk) B R
  ! 	E@ (! !
 E
  Ak6 


 A	j Aj") 7  A	j Aj") 7  A	j Aj") 7  A	j Aj") 7  A	j Aj") 7   )7 B 7	 A 6	 Aj"A 6  A 6 Aj A	j  ) "7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7 Aj "	AM@ 	

 (! (
" (	"AM A	j (! (	
!  G
 A	j!   At AjAr! A	j! (	!
@ ! (	"! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 	AO@ (
 Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7   )7 A: 
 (	AI
 (	

   
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj" Aj A k 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj" Aj   
 - !	 Aj Aj) "7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) 7   )7 "AK@ (! (!
@ E
  At! AkAq"Aj"Aq! E@B !  j

 Aq!  jAk!B !@ Aj" B? ) "B7   B? ) "B7  Ak! B! Ak"
 
 Aj
! E
  Ak" B? ) B7 
 A	j" Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) "7   )7	 A	jAr! !
@ ! (	"! AI"
E@ 
! (	!
@ E
  At jAk) B R
  ! 
E@ (	! !
 E
  Ak6 


 A	j A	j) 7  A	j A	j) 7  A	j A	j) 7  A	j A	j) 7  A	j A	j) 7   )	7 Aj 	 Aj ("AM Aj (! (
! - ! Aj"A 6  A 6 Aj   Atj A	j"
 ) "7  A	j Aj) 7  A	j Aj) 7  A	j Aj) 7  A	j" Aj) 7   )7	 "AK@ (	! (	!
@ E
  AkAq"Aj"Aq!@ AI@B !

 Aq!B !@   ) "B"
|"7  Aj" ) "
B"
  
T B?||"7  Aj" ) "B"
  
T 
B?||"7  Aj" ) "
B"
  
T B?||"7   
T 
B?|! A j! Ak"
 

 @@   ) "B"
|"7   
T B?|! Aj! Ak"
 

 P
 A! (	"AM@ ! A	j

 A	jAr!
 (	! ! (	
!  F@ A	j" Ar!
 (	! (	!
  Atj 7  
 
( Aj6 
 Aj" A	j") 7  Aj" A	j") 7  Aj" A	j"
) 7  Aj"	 A	j"
) 7  Aj"
 A	j") 7   )	7 A	j"  Aj Aj Aj  A	j Aj") 7   Aj") 7   Aj") 7  
 Aj"
) 7  
 Aj"
) 7   Aj") 7   )7	@@@ - "AF@ Aj ) 7   ) 7   ) 7   
) 7  	 
) 7  
 ) 7   )7

@@@@@@ - 	"Ak 
 ("AM Aj (! (
! Aj"A 6  A 6 Aj   Atj Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7  : 

 


 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj" Aj   

 (	"AM A	j (	! (	
! ("AM Aj (! (
!@@  I
   M@ At! Ak! At! Ak!@ E Er
  j) "  j) "T
 Ak! Ak!  X
 

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj" Aj   

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj" Aj Aj"   

 A6	 B7 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "7   )7 AjAr! !
@ ! ("! AI"	E@ 
! (!
@ E
  At jAk) B R
  ! 	E@ (! !
 E
  Ak6 


 A	j Aj") 7  A	j Aj") 7  A	j Aj") 7  A	j Aj") 7  A	j Aj") 7   )7 B 7	 A 6	 Aj"A 6  A 6 Aj A	j  ) "7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7 Aj "	AM@ 	

 (! (
" (	"AM A	j (! (	
!  G
 A	j!   At AjAr! A	j! (	!

-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13801-13950
@ ! (	"! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 	AO@ (
 Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7  Aj A	j) 7   )7 A: 
 (	AI
  (	
 A	j" Aj" Aj Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j") 7  Aj A	j"
) 7  Aj A	j"	) 7   )	7 	 Aj"	) 7  
 Aj"
) 7   Aj") 7   Aj") 7   Aj") 7   Aj") 7   )7	   Aj  Aj) 7   Aj) 7   Aj) 7   Aj) 7  
 Aj) 7  	 Aj) 7   )7 ("
AM Aj (!
 (
!  
I
@ 
E
  
Aq!@ 
AF@B !A !

 
A~q!A ! !  !B !@   ) |" ) |"
7  Aj"
  V  
V|" 
) |" Aj) |"
7   T  
V|! Aj! Aj!  Aj"G
 

 ~   At"j"  ) |"  j) |"
7   
V  V| 
P
    
At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 

 A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7   )7	 A	j At Aj ) 7  Aj ) "7  Aj ) 7  Aj ) 7  Aj ) 7  Aj"
 ) 7   )	7 "AM@ 

 (!
 (
" K
@ E
  Aq!@ AF@B !A !

 A~q!
A ! 
!  !B !@   ) |" ) |"
7  Aj"	  V  
V|" 	) |" Aj) |"
7   T  
V|! Aj! Aj! 
 Aj"G
 

 ~   At"j"  ) |"  
j) |"
7   
V  V| 
P
    At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 

 AO@ (
 A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7   )7	 A	j At Aj ) 7  Aj ) "7  Aj ) 7  Aj ) 7  Aj ) 7  Aj"
 ) 7   )	7 "AM@ 

 (!
 (
" K
@ E
  Aq!@ AF@B !A !

 A~q!
A ! 
!  !B !@   ) |" ) |"
7  Aj"	  V  
V|" 	) |" Aj) |"
7   T  
V|! Aj! Aj! 
 Aj"G
 

 ~   At"j"  ) |"  
j) |"
7   
V  V| 
P
    At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 

 AO@ (
 A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7   )7	 A	j Al Aj ) 7  Aj ) "7  Aj ) 7  Aj ) 7  Aj ) 7  Aj"
 ) 7   )	7 "AM@ 

 (!
 (
" K
@ E
  Aq!@ AF@B !A !

 A~q!
A ! 
!  !B !@   ) |" ) |"
7  Aj"	  V  
V|" 	) |" Aj) |"
7   T  
V|! Aj! Aj! 
 Aj"G
 

 ~   At"j"  ) |"  
j) |"
7   
V  V| 
P
    At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 

 AO@ (
 A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7  A	j" Aj) 7   )7	 A	j At Aj ) 7  Aj ) "7  Aj ) 7  Aj ) 7  Aj ) 7  Aj" ) 7   )	7 "AM@ 

 (! (
" K
@ E
  Aq!
@ AF@B !A !

 A~q!	A ! !  !B !@   ) |" ) |"
7  Aj"
  V  
V|" 
) |" Aj) |"
7   T  

-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:13951-14100
V|! Aj! Aj! 	 Aj"G
 

 
~   At"j"  ) |"  j) |"
7   
V  V| 
P
    At"j! At k!@ E
  ) "B|7  Ak! Aj! BQ
 

 AO@ (
 (AI
 (

   


 A	j$ 
  
 
A A#A  
S/~# Ak"$  (("!@@@@@ AO ( 
@ (("! AO ( 
E@ A6 B7 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj") 7  Aj Aj") 7  Aj Aj") 7  Aj Aj") 7  Aj Aj") 7   )7 A6 B7 Aj"
A 6  A 6 Aj Aj  
) 7   Aj) 7   Aj) 7   Aj) 7   Aj) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
 E
 At jAk) B R
 ! 
E@ (! !
 E
   Ak6 
 
 
@ AO@ (AG
 (

 AG
 Aj
) BR
 AK
 Aj

@@@@ AM@ Aj!
 

 (!
 (
" AM@ Aj! 

 (! (
"	I
   	M@ 	At!	 Ak!
 At! 
Ak!
@ E 	Er
  
j) "2 	 
j) "3T
 	Ak!	 Ak! 2 3X
 

 AK
 Aj

 A6 B7 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj"
 Aj) "27   )7 AjAr!
 2!
@ 
! ("! AI"E@ 
! (!
@ E
  At jAk) B R
  ! E@ (! 
!
 E
  Ak6 


   )7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7  AM Aj (! (
! Aj"A 6  A 6 Aj   Atj  A j ) 7   A j Aj) 7   A j Aj) 7   A@k Aj) 7   A8j Aj) 7    )70


A -  AA"E
 A6  B 7  6 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) 7   )7  AjAr! ( !
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj") 7  Aj Aj") 7  Aj Aj") 7  Aj Aj") 7  Aj Aj") 7   )7 A6 B7 Aj"
A 6  A 6 Aj Aj  
) 7   Aj) 7   Aj) 7   Aj) 7   Aj) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


   )70  A j Aj) 7   A j Aj) 7   A j Aj) 7   A@k Aj) 7   A8j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7    )7 
	
 (! (
! @ At jAk) !2 A6  6 A@k Aj" 2y"6" A6  6 A j   ("AM@ A j! 

 (x! (t
"@ At jAk") !5@ (h"AO@ (D!
 AO@ (t!
@@  kAj"
AM@ 



 
A K
 
At"	A H
 
AIAt!A 	 	  
"
  	 
 AjA  
At (!	 (!

-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14101-14250
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   )7A 
! Aj Aj") 7  Aj Aj") 7  Aj Aj"( 6   6  
6  6  )7  	6  
6 
E@A !	


 A j!  Aj!& At Atk!  k! Aj! AjAr!' Aj!( Aj!
 Aj!
 A j!) Aj! A j! AjAr!* Aj!+ Aj!, Aj!- A@kAr!.A !	A !@ ("AO (t 
 
jAk! (h"! 
Ak!
@ AI"  (D
 M
   )7  Aj Aj"/) 7  Aj Aj"0) 7  Aj Aj"1( 6   6  6  6  	6  
6 
 	 	AK"@ AjAA( jA 6 
 ! E@ (D! (H!
@@@@@  M@ Aj  Atj  Atj Aj" Aj) "27  Aj" Aj) 7   Aj) 7   Aj) 7  Aj" Aj) 7   )7 -! 2"AO@ (! (!
@@ @ 5P
 Ak! At!B !2@ A0j  j") "3 2 5 A j )0"2 A8j)  5  27  3 ) }!2 Ak"
 

 Aj" ) 7  Aj" ) 7  Aj"
 ) 7  Aj"
 ) 7  Aj"
 ) "27   )7 2!@ +! ("! AI"E@ ! (!
 E
 At jAk) B R
 ,! E@ (! *!
 E
   Ak6 
 
 
A AA  
 Aj"! ) 7  Aj"" ) 7  Aj"# 
) 7  Aj"$ 
) 7  Aj"% 
) 7   )7 )! Aj! ("AO@ (x! (t!
 ("	AO (!	 ( 

!# A k"$ @@@@  	jAj"AM@ @ A0jA  At
 A j" 6  Aj A8j) 7  Aj A@k) 7  A j A j) 7  A(j ) "27  A 6   )07 2"AK
 ! Aj

 A K
 At"A H
 AIAt!    
"
E
  6(  
6  6 A6 
 (
     	 A j" A(j) 7  A j A j) 7  A j Aj) 7  A@k Aj) 7  A8j" Aj) "27   ) 70 A0jAr!
 2!	@ ! (X"! AI"E@ 	! (4!
@ E
  At jAk) B R
  ! E@ (4! 
!
 E
  Ak6 


  )07  A(j A j) 7  A j A j) 7  Aj A j) 7  Aj A@k) 7  Aj A8j) 7  A j$ 

 
   
@ 
! ("AO@ (! (!
 !
 (h"AO@ (H!
 (D!
  
I
@@   
k"I
   M@ At! Ak!  At"k!  
jAk!@ E Er
  j) "2 ) "3T
 Aj! Ak! Ak! 2 3X
 

A -  AA"E
 A6  B 7  6 A 6  A 6 Aj Aj  ) 7   ) 7   
) 7   
) 7   
) 7   )7  ( !@ ! ("! AI"E@ ! (!
 E
 At jAk) B R
 (! E@ (! '!
 E
   Ak6 
 
 
 &! ("AO@ (! (!
  
I
 
! ("	AO@ (!	 (!
  
k 	I
 
At!
@ 	E
  	Aq! 	AF@B !2A 

  j!A !A  	A~qk! !B !2@  2 ) |"3 ) |"47  Aj" 2 3V 3 4V|"3 ) |"2 Aj) |"47  2 3T 2 4V|!2 Aj! Aj!  Ak"G
 
A  k
!  
j! ~  At"j" 2 ) |"3  j) |"47  3 4V 2 3V| 2
P
   	At"j! At k!@  F
  ) "2B|7  Ak! Aj! 2BQ
 

 ! (h"AO@ (D! (H!
  
I
 
! ("	AO@ (!	 (!
  
k" 	  	I"At!@@@ E
  Aq! AF@B !2B !3A 

A !A  	  j"  	KA~qk!  j!B !2 !B !3@  2 ) |"4 ) "7}7  Aj" 3 2 4V| 4 7T}"2 ) |"3 Aj) "4}7  2 3V 2B?| 3 4T}"2B?!3 Aj! Aj!  Ak"G
 
A  k
!  
j! ~  At"j" 2 ) |"4  j) "7}7  3 2 4V| 4 7T} 2
P
   j! At 	  j"  	KAtk!@  F
  ) "2B}"37  Ak! Aj! 2 3X
 

  j! 	At 	  j"  	KAtk!@ E
 Ak! ) !2 Aj! 2P
 

 AjB 7  A6 A 6 A 6 AjA  
 (H!@ ! (h"! AI"E@ ! (D!
@ E
  At jAk) B R
   ! E@ (D! .!
 E
  Ak6 


 / Aj) 7  0 Aj) 7  1 Aj( 6   ) 7 (! (!	 (! (!

-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14251-14400
 (! (AI
 (

  ) 7   ) 7  
 ) 7  
 ) 7  
 ) 7   )7  !) 7   ") 7   #) 7   $) 7   %) 7   )7 Aj Aj Aj ( AO@ (
 % Aj) 7  $ Aj) 7  # Aj) 7  " Aj) 7  ! Aj) 7   )7  Aj") 7   Aj") 7  
 Aj") 7  
 Aj") 7  
 Aj") 7   )7 Aj Aj A j  ) 7   ) 7   ) 7   ) 7   ) 7   )7
 
 
  A  
 
 A  
 
 A  
A A#A  
 
 A  
AA 
 Aj! Ak! 

 

	
 
A A+A  
A A+A  
AA 
A AA  
 AM Aj (! (
! Aj"A 6  A 6 Aj   Atj Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 AM Aj (! (
! @ ("AM Aj (! (
!@@ @ ) "3P
 Ak! At! Aj!@ Aj  j") "5 2 3  )"2 )  3  27  5 ) }!2 Ak"
 

 Aj" Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "37   )7 AjAr! 3!
@ ! ("! AI"
E@ 
! (!
 E
 At jAk) B R
 ! 
E@ (! !
 E
   Ak6 
 
 
A AA  
   )7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A j 2B R6   A8j 27   A 60

A A A  
 (! (
! Aj"A 6  A 6 Aj"   Atj Aj ) 7  Aj Aj") 7  Aj Aj") 7  Aj Aj"
) 7  Aj Aj"
) 7   )7 A6 B7 A 6  A 6  Aj Aj" ) 7  Aj ) 7  Aj ) 7  Aj 
) 7  Aj" 
) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


   )70  A j Aj) 7   A j Aj) 7   A j Aj) 7   A@k Aj) 7   A8j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7    )7 

   )70  A j Aj) 7   A j Aj) 7   A j Aj) 7   A@k Aj) 7   A8j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7    )7 

 Aj" Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Av! (h! (H!
 (D!@@@@@@@@@ (@"AF@ (("AK
  O
 Aj

 (l!
 AM@  O
 !

  M
 !

  (I

 A6 B7 Aj"A 6  A 6 Aj Aj Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "27   )7 AjAr!
 2!
@ ! ("! AI" E@ 
! (!
@ E
  At jAk) B R
  !  E@ (! 
!
 E
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 AF AIr
 


 (! (
!  M@ Aj"A 6  A 6 Aj  Atj  Atj Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7

  A  
 Aj A j"Aj) 7  Aj Aj) 7  Aj Aj( 6   
6  6  6  
6  6  ) 7  K
 Aj"A 6  A 6 Aj 
 Aj AK" Atj  Atj Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 (AI
  (
 A?qE
 ("AM Aj (! (
! E
 6B?!2B !3B  6}B?!5  Atj! AkAq"Aj"Aq! AI
 Aq!@ Ak" 3 ) "6 27  Ak" 6 5 ) "3 27  Ak" 3 5 ) "3 27  A k" 3 5 ) "3 27  3 5!3 Ak"
 


  A  
 E
  Ak!@  3 ) "6 27  Ak! 6 5!3 Ak"
 

 Aj" Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj" Aj) "27   )7 AjAr! 2!
@ ! ("! AI"
E@ 
! (!
@ E
  At jAk) B R
  ! 
E@ (! !
 E

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14401-14550
  Ak6 


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7
   )7    )70  A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A8j Aj) 7   A@k Aj) 7   A j Aj) 7   A j Aj) 7   A j Aj) 7  	AO@ 
 (AI
  (x
 Aj$ 

	~# Ak"$  Av! ( !@@@@ A?M@ (! AF@ (("AM Aj (! (
! Aj"A 6  A 6p A j   Atj A8j ) 7  A0j Aj) 7  A(j Aj) 7  A j Aj) 7  Aj A j) 7   )p7

 A j Aj) 7  A(j Aj) 7  A0j A j) 7  A8j A(j) 7   6  6  )7

 (  AF"(("AO@ (!
 A 6p A 6@  jAj"AI
  Aj A j  ("AxF
  E
  (
 
 A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j A j) 7   )p7@ A@k"   (  ( AF"(("AM@ Aj

 (! (
"  Atj A8j A j) 7  A0j A j) 7  A(j A j) 7  A j A j) 7  Aj A j) 7   )@7
 A?q"
E
 (8"AM Aj (! (
!  I
  F
 A8j!	 At At"k!  j!A  kA?q! 
!@  
 ) "
 7  Aj! 
 !
 Ak"
 
 
P
A! (8"AM@ ! Aj

 AjAr!	 (! ! (
!  F@ Aj" Ar!	 (! (!
  Atj 
7  	 	( Aj6 

A AA  
  A  
 Aj" A8j) 7  Aj A0j) 7  Aj A(j) 7  Aj A j) 7  A j"	 Aj) "
7   )7p A jAr!
 
!@ 	! ("! AI"
E@ ! (t!
@ E
  At jAk) B R
  ! 
E@ (t! 
!
 E
  Ak6 


   )p7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj A j) 7 @ A?M
  ( AF
  ((AI
  (
 Aj$ 
  ( !# Ak" $    6 (A A Aj( (
 !  A : 
   : 
   6  AjA A AjA A A  AjA !  - 
"A G  - 
E
 A 
  ( "- 
AqE@ (A A Aj( (
 

 (A A Aj( (
 
!  Aj$  
V# Ak"$   ( E@ A A

   6
 A AA A A
jA 
!  Aj$   

   A A" A;  A6
@@@@@@@@  "- E@ ( ("k" M
 AI
 AA  
 A :   A 6 (" M

 ! 

 ! @  I
 AO
A k" I
  k I
@ E
   j!  j! Aq! AO@ A|q!	@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! 	Ak"	
 

 E
 @  -   -  s:   Aj! Aj! Ak"
 

  j! A !   k"  ("O
 
  O@  j!  k!

  A  
@  A k"M@   K
@  E
   j!  Aq!  AO@  A|q!	@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! 	Ak"	
 

 E
 @  -   -  s:   Aj! Aj! Ak"
 

    j6

   A  
A A(Ȧ  
  A܇  
 AA  
  A  
A A(Ȧ  

# Ak"$  Aj"  AA !@@@@@@@@@@@ - E@ A:  (" AO
  AF
 (!   j"   -   - s:   Ak" AO
  AF
   j"   -  As:   A ! A 6 (" A M
A !A ! 


 ( ("k" A K
 AK

  A k"K@  !

   j  ! A   k" ("I
@  A K@  A A  
 AO@A!

 A   k"K
   j      j!   k" ("O
 

-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14551-14700


  AA  
AA A  
  AA  
  A  
AA A  
  A  
 AA  
A !  AI@A !

 AA  
  A M@A   k!A !

  A A  
@@ A k"M@  K
   j  j    j6

  A  
  A  
 Aj$ 
)~  )!  )!  )p!  )H!  ) !  )!  )!  )h!  )@!  )!	  )!  )!  )`!  )8!
  )!  )!  )!  )X!  )0!
  )!  )!
  )x!
  )P!
  )(!
  ) !A~!*@ 
  
 
 
"  
   "B" 
!(  	    " B"!)  B"
      "B "B7"   
   " B"B>" B!   B" 
B)"!  B'""B!  B
"#  B8"$  B"B!  B"% #  
B$"&B!
  
B"  
B"
  B"'B!  B"  B"B 
!  B="
  B"  	B
"	B!  B-"
 	 
B!  
B"
 
 
B!
 
 
B !
 	 
 B!
  B"  " )B"B!	  B+"  B! (B,"  B! *A j)   B !  
B '"!
 " B  !
 &  #B!   B! 
 !B "! ' B ! % $B ! !   
B!  B "! $ & %B"! *Aj"*
 
   
7   
7x   7P   
7(   7    7   7   7X   
70   7   7   7   7`   
78   7   7   7   7h   7@   	7   7   7   7p   7H   7 
# Ak"$ @@@@  ( " ( Ak 
 A A

 A A

 A A

   Aj6
 A A
A A
 A
jA 
!  Aj$   

   (  
# A0k"$ @@@@  ( Ak 
 AjB 7  A6
 A 6 A 6  Aj

 AjB 7  A6
 AЊ 6 A 6  Aj

 AjB 7  A6
 A 6 A 6  Aj

 AjB7  A6
 A 6 A 6$   Aj6,  A j6  A,j6   Aj
!  A0j$   
   (   ( 
	    
    (6   ( 6 
e@@@ E@A!

 A N"E
A -    "E

   !   6   6   6 
 
   
# A k"$   6  6  Aj  @@ ("E@  )
7 A 6( B7  A0j" A jA  Aj 
 ($! ( ! A<jB7  A64 A 60 A 6
  Aj68  6 A j" A0j  Aj   A6  ($@ ( 
 E
 

  Aj )
7    6  A6 
 A j$ 
A A7 A jAę A  

   B~
GA -    (!  ( !A
A" E@AA
 
   6   6   6   
# A k"$ @ @ ( "
 AjB 7  A6
 A 6 Aԋ 6 AjA  
 AjB 7  A6
 A 6 Aԋ 6 AjA  
   6    )7  A j$ 
	   B 7 
_# A k"$ @ @@ Aj   ("E
 (
@ 
 (@ (
 Ak"
 

A !
 A j$  
# A@j"$ @ ( "@ ( "E
  6  )7
  A(j" Aj A j A0j( 6   )(7 A8j"( ! A<j"( ! (4!  Aj ( ! ( ! (4! (,@ ((
@ E@  A 6  @ 
 E
 

   6   6   6

-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14701-14850
   6   6   6 
 A@k$ 
 A4jB 7  A6, A 6( Aԋ 60 A(jA  
 A4jB 7  A6, A 6( Aԋ 60 A(jA  
x# A k"$ @@@ E
 @@ Aj  ("E
  (
@ 
 (@ (
 Ak"



 

   

  A 6 
 A j$ 
# A k"$ A -  @A
A"@  6  6  6 @  "E@  A 6 

 ( "E
   6    )7 
  A j$ 
AA
 
 AjB 7  A6
 A 6 Aԋ 6 AjA  
# A k" $ @@ @A -  A
A"E
  6  6  6 A -  A
A"E
  6  6  6       A j$ 
  AjB 7   A6
  A 6  A 6  AjA  
AA
 
AA
 
> A -  A
A" E@AA
 
   6   6   6     
A !@@@ @A -  A
A"E
  6  6  6 
 @A -  A
A"E
  6  6  6 
   Aq!A -  AA"E
  6  @ 
 @ 
  A 6   6 
AA
 
AA
 
AA 
 
# A@j"$ A -  @@@@@@@@ AM@A
A"E
  6  6  6  "
 
A!

A A"E
  B7   6  A6  AjA )  7   AjA )  7   AjA )  7   A )  7  

A -   A"E

   !  A
j 6   Aj 6    6  A
6  

 ( "E
  6   )7  A4jB7  A6, Aԕ 6( A 6$  A j60  6  Aj A(j  A6    )7  A
j Aj( 6  (@ ( 
 

AA
 
AA  
A  
 A4jB 7  A6, A 6( Aԋ 60 A(jA  
 A@k$ 
~# A@j"$ A -  @@@@@@@ AM@A
A"E
  6  6  6 A -  A A"E
A -  A
A"E
 B 7  6   "
 ( "E
 )!   Aj 7    6  A
6  

A$A"E
  B7   6  A6  A jA (  6   AjA )  7   AjA )  7   AjA )  7   Aܕ )  7  

 ( "E
  6   )7  A4jB7  A6, A 6( A 6$  A j60  6  Aj A(j  A6    )7  A
j Aj( 6  (@ ( 
 

AA
 
AA  
AA
 
AA$ 
 A@k$ 
 A4jB 7  A6, A 6( Aԋ 60 A(jA  
~# A@j"$ A -   (! ( !@@@A
A"@  6  6  6 A -  A A"E
A -  A
A"E
 B 7  6     "E@ ( "E
 )!   Aj 7    6 A


 ( "E
  6   )7  A4jB7  A6, A 6( A 6$  A j60  6  Aj A(j  A
j Aj( 6    )7 (@ ( 
 A
6  A@k$ 
AA
 
AA  
AA
 
 A4jB 7  A6, A 6( Aԋ 60 A(jA  
# A k"$ A -  A
A"@@  6  6  6 A -  A
A"E
   6  6  6 A -  A
A"E
   6  6  6 @@@@@@@@@   "
     
   6  A6 

  A6   A: 

  A6   A : 

 AjB 7  A6
 A 6 A 6 AjA  
  A6 

  A6 


-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:14851-15000
  A6 

  A6 
    A j$ 

AA
 
~# A k"$ A -  @@@A
A"@  6  6  6 A -  A
A"E
  6  6  6 @@@@@@@   Aq	"B "   
  B07   Aj 6 

 "E
 ( "E
   6    )7 

 AjB 7  A6
 A 6 A 6 AjA  
  B 7 

  B7 

  B 7 
   A j$ 
AA
 
AA
 
 AjB 7  A6
 A 6 Aԋ 6 AjA  
 AjB 7  A6
 A 6 Aԋ 6 AjA  
# A k"$ A -  A
A"@@  6  6  6 A -  A
A"E
   6  6  6 A -  A
A"E
   6  6  6 @@@@@@@@@   
"
     
   6  A6 

  A6   A: 

  A6   A : 

 AjB 7  A6
 A 6 A 6 AjAĘ  
 AjB 7  A6
 A 6 A 6 AjA  
  A6 

  A6 

  A6 
    A j$ 

AA
 
# A k"$  Aj  A -   (! (!A
A"@@  6  6  6  Aj  A -   ( ! (!A
A"E
   6  6  6  A(j  A -   (0! ((!A
A"E
   6  6  6 @@@@@@@@@   
"
     
   6  A6 

  A6   A: 

  A6   A : 

 A jB 7  A6< A 68 A 6@ A8jA  
 A jB 7  A6< A 68 A 6@ A8jAԘ  
  A6 

  A6 

  A6 
  (,@ 
  (
@ 
  (
@ 
 A j$ 

AA
 
> A -  A
A" E@AA
 
   6   6   6   
  
r~# Ak"$ A -  @@@A
A"@  6  6  6  
"E
 ( "E
 (!
 (!
  A j!# A k"
$  
  
 
A@k!# A k"$  Aj 
@@@ - Aq@ - 	"A"F
 A F
 B7 

 B 7 

 Aj 
@ ("AF@A!

  / ; 	 A
j - :   - ! A
j )7  Aj :  
 A6   6

 
# A0k"$  Aj 
@@ ("AF@ - ! Aj 
 ("AF

 Aj" - :    / ;
 - ! (! (
!  6  /
; 	 A6  Aj :   Aj 6  A
j 6  A
j -  :  

 @ Aj!A !# A k"
$  
A@k!# A k"$  Aj 
@@@ - Aq@ - 	"A"F
 A F
 B7 

 B 7 

 Aj 
@ ("AF@A!

  / ; 	 A
j - :   - ! A
j )7  Aj :  
 A6   6

 

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15001-15150
# A k"$  Aj 
@@ ("AF@ - ! Aj 
 ("AF

 Aj" - :    / ;
 - ! (! (
!  6  /
; 	 A6  Aj :   Aj 6  A
j 6  A
j -  :  

@@@@@@ Ak 
A !# A k"$  A@k!
# Ak"$  A8j 
@@@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4!	 A(j (0"
A! - (AqE
 	Aq!	@ - )""A,G@ A F
 	
A	!


 	@A!


 
 A j 
 -  AqE@A!


 - !!
 Aq"	A F
	 	A"G@A!


 Aj 
 ("AG
@ - "@ Aj 
 ("AG
 A j 
 (pAG


 Aj 
 ("AG
 A j 
 (pAG
 (|! (x!	 (t!
 Aj 
 - AqE
 - !@ Aq"A,G@A	! A G

 E



 
 Aj 
 - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
@ - "@ Aj 
 ("AG
 A j 
 (pAF


 @ A@kArAǲ A 	E


 Aj 
 ("AG
 A j 
 (pAG
 (|! (x!	 (t!
 Aj 
 - 	! - Aq
 



 
B 7 


 
B7 


 A jAr" )7  Aj Aj( 6   6p
 A j A j) 7   )p7D
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 AjAǲ A (AF@ Aj( ! Aj( !	 (!

 A j Aj) 7   )7D

 !  ) 7`  Aj(  6 g - !

  6L )L!
 A@k 
 (@"AF@ 
 
7
 
 	6 
 6 
A6 

 
Aj )D7  
Aj A j( 6  
A6  
 6 	E
 

A!
 A j :   A j ( g6    6D  )`7 I
 E 	Er

 
 )D!
 
A
j A j) 7  
 
7 
A6 
 Aj$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj 
 AjAr! - AqE
 - 	A G
 
 Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15151-15300

 B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$ # A k"$  Aj 
 A@k"@@@@ - Aq@@ - A F@ 
 Aj 
 (!  - 
Aq: <  68 A@k A8j (@AF@@ - DE
 A j (8" (`"AG@ A j A j( 6   )d7T  6P

 A j  (PAG
 A@k A8j (@AF
 

 A j A j) 7   )@7

 A6

 A j 
 (`"AF
 Aj )d7  Aj A j( 6   6

 A6

A

 A j A j) 7   )P7
 A0j A j) "
7   )"7( A
j 
7   7
A
6  A j$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj 
 AjAr! - AqE
 - 	A G
 
 Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

# A k"$  A@k!	# Ak"$  A8j 
@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4! A(j (0" - (AqE@A!


 Aq!@ - )"A,G@ A F
 
A	!


 @A!


  A j  -  AqE@A!


 - !!
 A F
A! A"G
	 Aj  ("AG
~ - "@ Aj  ("AG
 Aj  (AG
B 

 Aj  ("AG
 Aj ) (AG
 )!
B
! Aj  - AqE@A!


 - !@ Aq"A,G@A	! A G

 P



  Aj  - AqE@A!


 - "A"G@ A F
	A!


 Aj  ("AG
	@ - "@ Aj  ("AG
 Aj  (AF


@ P@ Aj  ("AF


 A jArA A


 Aj ) (AG
 )!
B!
 Aj  - 	! - Aq
 
A!
	
 	B 7 


 	B7 



-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15301-15450
 Aj Aj( 6   )7  6
 A j Aj) 7   )7d

 Aj Aj( 6   )7  6
 A j Aj) 7   )7d

 AjA A (AF@ )!


 A j Aj) 7   )7d

A!

  ) 7  Aj(  6  - !
 A j :   A j ( 6    6d  )7 i
 A j A j) "
7   )d"7P 	A
j 
7  	 7 	A6 

  
7h A j" A j") 7   )d7@ A j 
 (`"AF@ 	A6  	 )@7 	A
j ) 7 

 	Aj )d7  	Aj ( 6  	A6  	 6
 Aj$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj 
 AjAr! - AqE
 - 	A G
 
 Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

A !# A k"$  A@k!
# Ak"$  A8j 
@@@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4!	 A(j (0"
A! - (AqE
 	Aq!	@ - )""A,G@ A F
 	
A	!


 	@A!


 
 A j 
 -  AqE@A!


 - !!
 Aq"	A F
	 	A"G@A!


 Aj 
 ("AG
@ - "@ Aj 
 ("AG
 A j 
 (pAG


 Aj 
 ("AG
 A j 
 (pAG
 (|! (x!	 (t!
 Aj 
 - AqE
 - !@ Aq"A,G@A	! A G

 E



 
 Aj 
 - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
@ - "@ Aj 
 ("AG
 A j 
 (pAF


 @ A@kArA A 	E


 Aj 
 ("AG
 A j 
 (pAG
 (|! (x!	 (t!
 Aj 
 - 	! - Aq
 



 
B 7 


 
B7 


 A jAr" )7  Aj Aj( 6   6p
 A j A j) 7   )p7D
	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 AjA A (AF@ Aj( ! Aj( !	 (!

-- Chunk 104 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15451-15600

 A j Aj) 7   )7D

 !  ) 7`  Aj(  6 g - !

  6L )L!
 A@k 
 (@"AF@ 
 
7
 
 	6 
 6 
A6 

 
Aj )D7  
Aj A j( 6  
A6  
 6 	E
 

A!
 A j :   A j ( g6    6D  )`7 I
 E 	Er

 
 )D!
 
A
j A j) 7  
 
7 
A6 
 Aj$ @@@ (@"AG@ A,j A j( 6  A
j A j) 7   )T7$  )D7  6 Aj 
 AjAr! - AqE
 - 	A G
 
 Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 

 A8j A j) "
7   )D"70 A
j 
7   7 A6 

 B 7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
 ( 

 B7 @@@  
 (@ (
 A j!

 (@ (
 A j!
 Aj( E
  ( 
 A j$ 

 !A !# A k"	$  	A@k!# Ak"$  A8j 
@@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4! A(j (0"
A! - (AqE@A !


 Aq!@@@ - )""A,G@ A G


 @A!A !

 
 A j 
 -  Aq
A!A !


 
A	!A !


 - !!
A ! Aq"A F
	 A"G@A!


 Aj 
 ("AG
 A jAr!@@@ - " 
 Aj 
 ("
AG
 A j 
 (pAG
 (|! (x! (t!
A 

 Aj 
 ("AG
 A j 
 (pAG
 (|! (x! (t

 Aj 
 ("AG
 A j 
 (pAG
A 
! Aj 
 - AqE
 - !@ Aq"A,G@A	! A G

A! ! "E



 
 Aj 
 - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
	@@@@@ - " 
 Aj 
 ("AG

 A j 
 (pAF



 
E
 A@kArA A

 @ A@kArA A


-- Chunk 105 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15601-15750
 Aj 
 ("AG
 A j 
 (pAG
 (|! (x! (t!

 Aj 
 ("
AG
 A j 
 (pAG
 (|! (x! (t!

 Aj 
 - 	! - Aq
 



 B 7 

 B7 

  )7  Aj Aj( 6   6p
 A j A j) 7   )p7D


  )7  Aj Aj( 6   
6p
 A j A j) 7   )p7DA !

	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 !  ) 7`  Aj(  6 g - !

A!
 A j :   A j ( g6    6D  )`7 I

 AjA A (AG
 Aj( ! Aj( ! (!A !A !
 

 AjA A (AF@ Aj( ! Aj( ! (!


 A j Aj) 7   )7D E
 

 A j Aj) 7   )7D
A !
A ! 
E Er
  

 E E rrE@ 
 )D!
 A
j A j) 7   
7 A6 

  6X )X!
 A@k 
 (@"AF@  
7  6  
6  6
  6  6 A6 

 Aj )D7  Aj A j( 6  A6   6 @ 
 E
  

 Aj$ @@@ 	(@"AG@ 	A,j 	A j( 6  	A
j 	A j) 7  	 	)T7$ 	 	)D7 	 6 	Aj 
 	AjAr! 	- AqE
 	- 	A G
 
 Aj 	A(j) 7  Aj 	A j) 7  Aj 	Aj) 7   	)7 

 	A8j 	A j) "
7  	 	)D"70 A
j 
7   7 A6 

 B 7 @@@  
 	(@ 	(
 	A j!

 	(@ 	(
 	A j!
 Aj( E
 ( 

 B7 @@@  
 	(@ 	(
 	A j!

 	(@ 	(
 	A j!
 Aj( E
  ( 
 	A j$ 

 !A !# A k"	$  	A@k!# Ak"$  A8j 
@@@@@@@@@@@@@@@@@@ - 8Aq@ - 9A G
 
 A0j 
 - 4! A(j (0"
A! - (AqE@A !


 Aq!@@@ - )""A,G@ A G


 @A!A !

 
 A j 
 -  Aq
A!A !


 
A	!A !


 - !!
A ! Aq"A F
	 A"G@A!


 Aj 
 ("AG
 A jAr!@@@ - " 
 Aj 
 ("
AG
 A j 
 (pAG
 (|! (x! (t!
A 

 Aj 
 ("AG
 A j 
 (pAG
 (|! (x! (t

 Aj 

-- Chunk 106 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15751-15900
 ("AG
 A j 
 (pAG
A 
! Aj 
 - AqE
 - !@ Aq"A,G@A	! A G

A! ! "E



 
 Aj 
 - AqE@A!


 - "A"G@ A F

A!


 Aj 
 ("AG
	@@@@@ - " 
 Aj 
 ("AG

 A j 
 (pAF



 
E
 A@kArA A

 @ A@kArA A

 Aj 
 ("AG
 A j 
 (pAG
 (|! (x! (t!

 Aj 
 ("
AG
 A j 
 (pAG
 (|! (x! (t!

 Aj 
 - 	! - Aq
 



 B 7 

 B7 

  )7  Aj Aj( 6   6p
 A j A j) 7   )p7D


  )7  Aj Aj( 6   
6p
 A j A j) 7   )p7DA !

	
 A j Aj( 6   )7t  6p
 A j A j) 7   )p7D

 !  ) 7`  Aj(  6 g - !

A!
 A j :   A j ( g6    6D  )`7 I

 AjA A (AG
 Aj( ! Aj( ! (!A !A !
 

 AjA A (AF@ Aj( ! Aj( ! (!


 A j Aj) 7   )7D E
 

 A j Aj) 7   )7D
A !
A ! 
E Er
  

 E E rrE@ 
 )D!
 A
j A j) 7   
7 A6 

  6X )X!
 A@k 
 (@"AF@  
7  6  
6  6
  6  6 A 6 

 Aj )D7  Aj A j( 6  A6   6 @ 
 E
  

 Aj$ @@@ 	(@"AG@ 	A,j 	A j( 6  	A
j 	A j) 7  	 	)T7$ 	 	)D7 	 6 	Aj 
 	AjAr! 	- AqE
 	- 	A G
 
 Aj 	A(j) 7  Aj 	A j) 7  Aj 	Aj) 7   	)7 

 	A8j 	A j) "
7  	 	)D"70 A
j 
7   7 A6 

 B 7 @@@  
 	(@ 	(
 	A j!

 	(@ 	(
 	A j!
 Aj( E
 ( 

 B7 @@@  
 	(@ 	(
 	A j!

 	(@ 	(
 	A j!
 Aj( E
  ( 
 	A j$ 
 A j$ 
 A j$ @@@ 
(@"AG@ 
A,j 
A j( 6  
A
j 
A j) 7  

-- Chunk 107 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:15901-16050
 
)T7$ 
 
)D7 
 6 
Aj 
 
AjAr! 
- AqE
 
- 	A G
 
 Aj 
A(j) 7  Aj 
A j) 7  Aj 
Aj) 7   
)7 

 
A8j 
A j) "
7  
 
)D"70 A
j 
7   7 A6 

 B 7 @@@  
 
(@ 
(
 
A j!

 
(@ 
(
 
A j!
 Aj( E
 ( 

 B7 @@@  
 
(@ 
(
 
A j!

 
(@ 
(
 
A j!
 Aj( E
  ( 
 
A j$  (AG@  )7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

  )7 A6  A
j A
j) 7 

A !A !# A0k"$  Aj 
@@ Aj"A - AqE
 @ - "A G@A
 A"G
 Aj!# Ak"$   
@ ( "AF@ A6

  / ; 	 A
j - :   - ! A
j )7  Aj :    6
 A6  Aj$ 

 
 Aj!# A k"$  Aj 
@@ ("AF@ - ! Aj 
 ("AF

 Aj" - :    / ;
 - ! (!
 (
!	  6  /
; 	 A6  Aj :   Aj 	6  A
j 
6  A
j -  :  

 @ Aj!# A k"$  Aj 
@@@ ("AF@ A
j( !	 Aj( ! (!
 Aj 
 - AqE
 - 	A G
 
 A
j 	6  Aj 6   
6 A6 

 )!
  (
6
  
7  6 

 A6  E
 


 @ 

 A
6 
 A j$  (AF@ A6 Aj )7  Aj A
j( 6  A 6 

  )7 A
j Aj) 7  A6 

 Aj!# A k"$  Aj 
@@@ ("AF@ A
j( !	 Aj( ! (!
 Aj 
 - AqE
 - 	A G
 
 A
j 	6  Aj 6   
6 A6 

 )!
  (
6
  
7  6 

 A6  E
 


 @ 

 A
6 
 A j$  (AF@ A 6 Aj )7  Aj A
j( 6  A 6 

  )7 A
j Aj) 7  A6 

-- Chunk 108 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16051-16200
 A j$ 
 (E
 A(j( ! A$j( ! A j( ! (

6 A6  Aj 6  A
j 6  Aj 6 

 A(j( ! A$j( ! A j( ! (
! Aj 
@ - Aq@ - 	A G
 
 Aj 6  A
j 6  Aj 6   6 A 6 

 B 7  E
 

 A
6 @ 
 A6 
 A0j$  (E@  )7 A
j A
j) 7  A6 

  )7 A
j A
j) 7  A6 
 A0j$ 
 A j$ @@ 
(@"AG@ 
A,j 
A j( 6  
A
j 
A j") 7  
 
)T7$ 
 
)D7 
 6 
A@k 
 
(@"AG
  
)7  Aj 
A(j) 7  Aj 
A j) 7  Aj 
Aj) 7 

 
A8j 
A j) "
7  
 
)D"70 A
j 
7   7 A6 

 
AjAr! Aj 
)D7  Aj ( 6  A6   6@@@@  
 
Aj!

 
(@ 
(
 
A j!

 
(@ 
(
 
A j!
 Aj( E
  ( 
 
A j$ @ (hAF@ A0j" A j) 7   )l7( Aj! A(j!# A@j"$ A -  @@AA"@ A A! A 6 B7  Aj"
 A   

  ) 7 Aj Aj( 6  A
jA6  AjA6   6 A6 @ ( AI
  Aj( E
  (
 A@k$ 

AA 
A A7 A8jAę A  
 A@k A j) 7  A8j Aj) 7   Aj) 7   )7( A 6` B7X A j" A jA   
 A j A j( "6   )X"
7H   
6   
6   6  A6    
7  A
j 6  A(jP

 A j Aj) "
7  Aj A j) "7  Aj A j) " 7   )h"!7  Aj 
7   Aj 7   Aj  7    !7  
E
  
  Aj$ 
AA
 
 A
jB 7  A6 A 6  Aԋ 6 A  
 A
jB 7  A6 A 6  Aԋ 6 A  
Aԍ A7 A jA A  
^# Ak"$    ( " Aj6
 A AA̞ A
  Aԡ A A
  AjAԡ A A A
j!  Aj$   

    ( -  AtA j( A
^# Ak"$    ( " A
j6
 A A
A A	  AjA A A  A؞ A A A
j!  Aj$   
?# Ak"$    ( 6
 A AA A A
jA !  Aj$   
g# A0k"$   ( !  AjB7  A6
 A 6 A6$   6,  A j6  A,j6   Aj!  A0j$   
# A@j"$   ( !  A
jB7  A,jA6  A$jA6    Aj64   68 A6 A 6  A6
   A
j6<  Aj6  A<j6(  A8j6   A4j6  !  A@k$   
c# A0k"$    ( 6
 A
jB7  A6 A 6 A6,  A(j6  A
j6(  Aj!  A0j$   
, @ E@ 
   
   
   
   (   ( 
# A0k"$ @@@@@@@@@@@@@  ( Ak
	


 
 A$jB7  A6
 Aܝ 6 A6   Aj6  6   Aj6   Aj


 A$jB7  A6

-- Chunk 109 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16201-16350
 A 6 A6   Aj6  6   Aj6   Aj


 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj


 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj
	
 A
jA6  A$jB7    Aj6 A6
 A 6 A6   Aj6  6   Aj6  Aj6   Aj

 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj

 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj

 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj

 A
jA6  A$jB7    Aj6 A6
 Aě 6 A6   Aj6  6   Aj6  Aj6   Aj

 A
jA6  A$jB7    Aj6 A6
 A 6 A6   Aj6  6   Aj6  Aj6   Aj

 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj

 A$jB7  A6
 A 6 A6   Aj6  6   Aj6   Aj

 A$jB 7  A6
 A̚ 6 A 6   Aj
!  A0j$   
# Ak"$ @@@@@@@@@@@@@  ( Ak
	


 
   Aj6
 A AA A A
jA 


   Aj6
 A AA A A
jA 


   Aj6
 A A
A A A
jA 


   Aj6
 A A
A A A
jA 
	
   Aj6
 A AA A  AjAȟ A؟ A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A AA A A
jA 

   Aj6
 A AA A
  AjA؞ A A A
jA 

   Aj6
 A A
A̞ A
  AjA؞ A A A
jA 

   Aj6
 A AA A A
jA 

   Aj6
 A A
A A A
jA 

   Aj6
 A AA A A
jA 
!  Aj$   
    -  AtA j( A
   (   ( 
  ( ! E@ E@  
A ! # Ak"$  ( !@   jA jA0A7 Aq"A
I j:    Ak!  AK! Av! 
 
  Aj"AO@ AA  
 A A   jAjA   k!  Aj$   
A ! # Ak"$  ( !@   jA jA0A  Aq"A
I j:    Ak!  AK! Av! 
 
  Aj"AO@ AA  
 A A   jAjA   k!  Aj$   
# A@j" $   A 6  B7   Aj"  AԢ # A@j"$ A!@ ("A A
 Aj( "(
 
 @ (
"@  6
 A6  A
j6 B74 A6, A 6(  Aj60   A(jE


 ( " (A
j( 
 B̓AR
   6
 A6  A
j6 B74 A6, A 6(  Aj60   A(j

 (! A$jA 6  A
jA 6   A
j6   Aj6 A6  6 B74 A6, A 6(  Aj60   A(j!
 A@k$ @ E@A -    (!  (!  ( !A
A"E
  6  6  6    @ 
  A@k$ 
A A7  A8jA A  
AA
 
# Ak"$ @ A M@  ("  (F@   |  (!
   Aj6  (  j :  


-- Chunk 110 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16351-16500
 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (  ("kK@    ~  (!
  (  j A
j     j6
 Aj$ A 
c# A0k"$   6
  6 A
jB7  A6 A 6 A 6,  A(j6  Aj6(   Aj A0j$ 
# Ak"$  A
j( !@@@@@@@@ ( 
 
A!A !A !

 E

  

 ( "( ! ("E@A!A !

 A N"E
A -    "E

   !  6  6  6 
   ) 7  A6   A
j Aj( 6  Aj$ 
 
   
c# A0k"$   6
  6 A
jB7  A6 AĤ 6 A 6,  A(j6  Aj6(   Aj A0j$ 
# A@j"$   6
  6@ E@ A
jB7  A6 A 6 A 6,  A(j6

 A4jA*6  A
jB7  A6 A 6 A 6,  6<  68  A(j6  A8j60
  Aj6(   Aj A@k$ 
 @@@@@@@ Ak
 
 Aޥ A@ A A
  A6   A: 
  A6   A: 
 A A

  A6   A: 
 A A
  A6   A: 
 Aϥ AE


 A A
   A6   A: 
    A A
  A6   A : 

 B̓A
  ( !# Ak" $ @@@@@@@ ( Ak 
 A A

 A A


 A A

 A A

 AЩ A

 A A

   Aj6
 A A
A A
  A
jA 
!  Aj$  

   (  
# A0k"$ @@@@@@@  ( Ak 
 AjB 7  A6
 A 6 A 6  Aj

 AjB 7  A6
 A 6 A 6  Aj

 AjB 7  A6
 A 6 A 6  Aj

 AjB 7  A6
 AȨ 6 A 6  Aj

 AjB 7  A6
 A 6 A 6  Aj

 AjB 7  A6
 A 6 A 6  Aj

 AjB7  A6
 Aħ 6 A 6$   Aj6,  A j6  A,j6   Aj
!  A0j$   
!	~# A0k"
$ @@@@@@@@@  Aj"M@ AvAl!A! AO@ A N"E
A -    "E

 
 6 
 6  
A 6  Aj"K@A A3A  
 Av"	B~"B 
 "@  K@ 
A  ~ 
( ! 
(!

 
 jA  Ak"   
jjA :   
( !  
j!
 
 6A ( !@@@@@@@@ Aq" 
A!

B! 


A
!

A
!

A
!
A !  k"A   O"
A O
A !

-- Chunk 111 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16501-16650
	
  Ak"j-  "A=F
	  j-  AG
	B !
	
 
A k!
@@ A`F
 A j" K
 Aj K
   j"-  "j1  "BQ
  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  j"
 B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87    Aj-  "j1  "BQ
  A	j-  "j1  "BQ@ A	j!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


 
Aj B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87  @  Aj-  "j1  "BR@  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BR
 Aj!


 Aj!


 
A
j B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87    Aj-  "j1  "BR@  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  Aj-  "j1  "BQ@ Aj!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  A
j-  "j1  "BQ@ A
j!


  Aj-  "j1  "BQ@ Aj!


 
Aj B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87   	Ak!	 Aj! 
 "I



 Aj!
	
 Aj!

A A#A  
 
   
A̮ A.A  
A`A A  
 A j A  
 Aj A  
@@ 
AI
   
Ak"
O
 @@@@ AxG@ Aj" K
 AwK
 Aj K
   j"
-  "j1  "BQ@ !


-- Chunk 112 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16651-16800
  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  
Aj-  "j1  "BQ@ Ar!

  j B4 B:" B." B( B"" B
" B B"BB( BB BB BB BB B(B B87   Aj! 	Ak!	 !  
I



Ax AjA̬  
 Aj A̬  
  AjAܬ  
 Aj Aܬ  
 !
@@@@@@@@@@@@@@@@@@@@@@@ 	AI@ !


 	Ak!  k!@  I
 AyK
 Aj"
 K
  F
   j"	-  "j1  "BQ
 AI
  	Aj-  "j1  "BQ

 AM

  	Aj-  "j1  "BQ

 AM
  	Aj-  "j1  "BQ
	 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
  j"	 B4 B: B. B( B" B
 B"BB BB B(B B8>   	Aj  B"BB BBB =   Ak! Aj! 
! Ak"
 

  I
  F@A !A !
A !A !

  j!  j!A !A !
A !
A !@ Aj! Aj! -  !	@ A J@ 
! 	A=F
  
j

 	A=F@ !

@@  	j-  "AF@ 	!

 
A:lA:j!A !@ B A>q !  j"Aj" F
 -  "A=F
 A:j! Aj!  "	j-  "AG
 
  j!
  j!B !

  j"Aj! Aj!  
jAj!
 Aj"! 	!
 Aq@ 
  !
 Aj! !  "G



  j
!A=!B !

AAA  
 Aj!

AAA  
 Aj!

AAA  
 Aj!

AAA  
 Aj!

AAA  
 Aj!


AAA  
 Aj!


AAAܫ  
A A A̫  
 Aj A  
  AjA  
  A  
  A  
 
 j k!
 	!
A !@@@@@@@ 
"	   
 
A
jB7  
A6 
A 6 
A 6, 
A 6( 
 
A(j6 
AjA  
A

A

A

A 

A(

A0

-- Chunk 113 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16801-16950
!A!
@B  P@ @ 
  
 K!A !A8!@  
F
 
 j  A8q<   Ak! 
Aj!
 Aj" I
 

 
 M@ 
 
6
   
) 7   Aj 
Aj( 6 

  
jAk!B!

  A  
 Aj!
  A 6    B  BB 7 
(E
  
 
A0j$ 
|@@@@  E@A!

  A N"E
A -     "E

A -  A
A"E
 A 6   6  6  
 
    
AA
 
# A k"$ @  @  ( "E
  (!   @ 
 A j$ 
 AjB 7  A6
 A 6 Aԋ 6 AjA  
 AjB 7  A6
 A 6 Aԋ 6 AjA  
# A k"$ @@@ ("AK@@ Ak"  ( "j(  "At AqAtr AvAq Avrr"F@ (! !A!A !

   k"I
 (!@  k"E@A!

 A N"E
A -    "E

   j  !
   6
   6   6   6   Aj 6   Aj    I6  A j$ 
 AjB 7  A6
 A 6 A 6 AjA  
# A0k" $    6   6   AjB7   A,jA 6   A6
  A 6  A 6$    A j6    Aj6(    6   AjA  
 
   
# Ak"$ @ E@

 AkAq"Aj"Aq! AI@A ! 

 A<j! Aq!A !@ (  Ak(  Ak(  Ak(  A k(  A(k(  A0k(  A8k(  jjjjjjjj! A@k! Ak"
 
 A<k
! E
  Aj!@ (  j! Aj! Ak"
 

@@@  Atj"E@A!

 A N"E
A -    "E

A ! A 6  6  6  @  Atj!@ Aj( "AvAq Avr!	 ( !  (" kK@   ~ (! ( ! (!
  j     j"6  kAM@  A~ ( ! (!
  j 	 At AqAtrr6    Aj"6 Aj" G
 

   ) 7   Aj Aj( 6  Aj$ 
 
   
   ( " (   Aj(  
   ( " (   ( 
[# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj!  A j$   
b# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  Aj!  A j$   
~# A k"$  Aj @@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@ E@A!

 A N"E
A -    "E

   !  A
j 6   Aj 6    6  A6 

   6  A6   A
j 6   Aj 6 

  A6 

  A6 

 )!   (
6
   7   6 

 
   
 A j$ 

~# A k"$  ( !
 ("!# A k"$  An"At! A|I Al F
  A{M@  Aj"M

A 
!  6  6  A j$ @@@ ( @@ ("E@A!	

 A N"E
  "	E

A !A !A ( !@ AI
  Ak"A   M!
@@@  AjO@ A`F
 A j" K
  	j"   
j")  "B8"B:j-  :   Aj  BB"B"j-  :   Aj   BB("B4A?qj-  :   Aj   BB "B.A?qj-  :   Aj  B(A?qj-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   A	j   BB("B4A?qj-  :   A
j   BB" BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   Aj  "
AvA?qj-  :   Aj  
AvA?qj-  :   Aj  A
j)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"j-  :   Aj  BB BB B(B B8""
AvA?qj-  :   Aj  
AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"j-  :   A

-- Chunk 114 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:16951-17100
j   BB BB B(B B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   ! 
 Aj"O



 Aj A  
A`A A  
 A j A  
@@@@@@@@@@@  Ap"
k"
 M@ !

@ A|K
 Aj" K
 A{K
 Aj" K
  	j"   
j"-  "
Avj-  :   Aj  Aj-  "A?qj-  :   Aj  Aj-  "At AvrA?qj-  :   Aj  
At AvrA?qj-  :   ! " 
I
 

@@ 
Ak 

  O
A!  	j  
 
j-  "Avj-  :    Aj"K@ AtA0q!


  A  
  O
  	j  
 
j-  "Avj-  :   
Aj" O
 Aj" O
  	j  At  
j-  "AvrA?qj-  :    Aj"K@ AtA<q!A!
	
  A  
  AjA  
 Aj A  
  AjA  
 Aj A  
  A  
  A  
  A  
  A  
  	j  j-  :    j!
A !@@@  M@@ 
E
  
As"E
   k!  F
  	j"A=:  @ AF
  AF
 A=:  AF
  AF
 A=: 
 !
  j I


  A  
  A  
A A*A  
 Aj 	  (E
 )
"BB Q
  7  6  6
  	6Aа A
 AjAܰ Aȱ  
# Ak" $   A 6  A-6  Aر 6 # Ak"$    ) 7 AjA A   (A 
 
   
   6   6   	6  A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ A AA G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ A AA G!
  A6    :  E
 

  A6 

  A6 
 A j$ 

~# Ak"$  A j @@@@@@@@@@ - PAq@@@ - Q"A k#	
	 
 A"k
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 


  A6 
	
 Aj  - AqE
 - A"G
  Aj  ("AG
 ("E@  A6 
	
 Aj( !  A6  E
 

 A8j  - 8Aq@A! - 9A G
  A0j  - 4! A(j (0"A!A!@ - (AqE
  - )! Aq!@@@@ Aq"A,G@ A F
 E
A !

  A j A! -  AqE@A!

 - !!

A!A!

 Aj A! ("AF
   )7  A
j Aj( 6    6 


 AqA F@A!A!

 Aj  ("AG@  ) 7  Aj(  6  - !

 Aj A! - ! - Aq
 
A!
   :    )7   A
j ( 6     6 

  A6 


-- Chunk 115 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17101-17250
 )!   (6
   7   6 

  A6 

  A6 

  A6 

  A
6 

 A j @@ - HAq@@ - IA F@  A@k  (@!  - DAq: \  6X A j A j (p"AF@@ - tE
 Aj (X"@@ ("AG@ Aj Aj( 6   )7

 Aj  ("AF

  ) 7`  Aj(  6 g - !

 A j A j (p"AF
 

  ) u7`  A j(  6 g - t!

  A6 

 Aj  ("AF
   )7  A
j Aj( 6    6 

  A6 

  A6 

   )`7   A
j ( g6     :    6 

   6 
 Aj$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ (  A (  G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ (  A (  G!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@@@@ - Aq@ - 	A"G
  Aj @@@@@@ ("AF@ A
j( ! Aj( ! ("
 Ak
 )!   (
6
   7   6 


 A AE

  Aj!

  Aj! )  A )  Q

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! )  A )  Q

 A:  

 A:  

  A6 

  A6 

  A : 

  A : 
  A6  E
 

  A6 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    

     E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 
~# A k"$  Aj @@ - Aq@ - 	A"G
  Aj @ ("AF@ A
j( ! Aj( ! ("
A! AF@ (  AԦ (  G!
  A6    : 

 )!   (
6
   7   6 

A! AF@ (  AԦ (  G!
  A6    :  E
 

  A6 

  A6 
 A j$ 
~# A k"$  Aj @@@@@@ - Aq@ - 	A"G
  Aj @@@@@@ ("AF@ A
j( ! Aj( ! ("
 Ak
 )!   (
6
   7   6 


 A AE

  Aj!

  Aj! A AE

 A:  


-- Chunk 116 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17251-17400
 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  A6 

  A6 

  A : 

  A : 
  A6  E
 

  A6 
 A j$ 
~# A k"$  Aj @@@@@@@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@@@ Ak 			
 /  A /  F
	

 A A
  A6   A: 
	
@@ Ak 
 /  A /  F


 A A
  A6   A: 

  A6 

  A6 

 )!   (
6
   7   6 

    A A

  A6   A : 
 E
 

    A A

  A6   A : 
 A j$ 
~# A k"$  Aj @@@ - Aq@ - 	A"G
  Aj  ("AG
 A
j( ! Aj( ! ("E@    

     E
 

  A6 

  A6 

 )!   (
6
   7   6 
 A j$ 

  ( E@ 
  A 6   6 
_ ( ! A 6 @ @ (!A -  AA"E
  6  6   A 6   6 
 
AA 
   A 6   6   6 
     (Aj6
d  @ ("  ("O
  ( "E
 @A   j-  A	k"AKA tAqEr
   Aj" 6   G
 

A
6 
A!@ (" ("O
  ( "E
 @@@A!@  j-  "A	k$    
A!  Aj"6  G



 A G
  Aj6  A6 
  Aj"6  O
 @  j-  "A	k"AKA tAqErE@  Aj"6  G



 A G
   A6 
   6 
@@@@ (" ("O
  ( "E
 @A!@  j-  "A	k$    
  Aj"6  G
 

A!

 A G
  Aj6  A6 
  A6 
   6 
 ( "@ (! (!@ E@  A6 
A !  I@A!  Aj"6  j-  !	 !
 @ -  ! Ak! Aj!  	F


  A
6 
 E@  A6 
  A
6 
@@@ (" ("O
  ( "E
 @A!@  j-  A	k2    
  Aj"6  G
 

A!
   6 
  Aj6  A6 

~# A k"$ @@@@@@@ (" ("
O
  ( "E
  !@ @  j-  "A"G@ A F
A ! Aj

 Aj! Aq!	A ! 	E
 

-- Chunk 117 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17401-17550

A! As! Aj
"6  
I
 

  A6 

  6@ E@  I
  
K
 Aj  j  k (
  Aj )7   B7 

  I
  
K
 Aj!
  j!
A !A !A !A !A !	A !
# A0k"$ @@@@@@@@ Aj  k"E@ A 6  6 A6 A

 A H
A -   A"E
 A 6  6  6  A 6 A 6@ 
-  "A I@A !

@@@@@@@@ 	AqE@ Aq
 A G
A!A !	

@ A0kAqA
I
 A
! A k&      

























      

 AK
 Aj j :  A!	 Aj"AG
 ("A0k"	AqA
I
 A kAqAI
 A kAqAO
 A k!	

A!	A
!A!@@@@@@ A"kT   

 ( F   ( 
 ( j :   (Aj!
	
 ( F   ( 
 ( jA:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA
:   (Aj!

 ( F   ( 
 ( jA	:   (Aj!

 
@A!
	
 ( F   ( 
 ( j :   (Aj!A !


 AAܻ  
 A7k!	
@ Av"A0k"AqA
I
 @ A kAqAO@ A kAqAO
 A k!

 A7k!




@ Av"A0k"AqA
I
 @ A kAqAO@ A kAqAO
 A k!

 A7k!




@ Av"A0k"AqA
I
 @ A kAqAO@ A kAqAO
 A k!

 A7k!




 At 	A
tr"  Atr"Aqr!@@ AqAG@ Aq"AsAK"
A
!

@ 
@ AqAO
A!
	
 AqAK
A !A!
 !


A! A jAq 
A jAqA
tr"Aj"AsA kAI A Fr

-- Chunk 118 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17551-17700
  A?qAr:   AvA?qAr:   A
vA?qAr:   AvAqAr:  ( kAM@  A (!
 (  j (6   Aj!A !
A !

 A  "AO@ AO@  A?qAr:   A
vAr:   AvA?qAr: A

  A?qAr:   AvAr: A

  : A
!  ( kK@    (!
 (  j Aj   j!A !

A!

  6
A !	A !
 
Aj!
 Ak"
 
A
! Aq
A! 

 (! ( 
"  (@ A j1  B B R

 
 6 
A
j 6  
Aj 6 A!

 
 6  (E
 ( 

A! E
  
 
 6 
 A0j$ 

A  
 
 A$jB 7  A6
 A 6 A 6  AjA  
 ("AF@ Aj A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7   6 

  A6 
 A j$ 
  A  
  
A  
  A  
  
A  
r@@ (" ("O
  ( "E
 A!@  j-  "A	k"AKA tAqEr
  Aj"6  G
 

A !
   :    :  
8   (" ( jA   (I" -   
:    A G:  
   A:    6 
A  (" (F   ( 
 ( jA :    A 6   (Aj6
v  (" (F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :    A 6   (Aj6

   ( ( " (   Aj(  
3A -  AA"E@AA 
  B7   6 
# Ak"$  A ;
   Aq"A
n"A
lkA0r: A A	M
   A
pA0r: 
A A I
   AqA nA0r: 
A 
"As" ( ("kK@    (!
 (  j A
j j   A 6    j6 Aj$ 
~# A k"$  AjA 6  AjB 7  B 7@ Aj j"Aj  B
"B
~}A0r:   B
T@A k" ( ("kK@    (!
 (  j Aj   A 6    kAj6 A j$ 
 Aj! Ak! ! AI
 
AAAԴ  

# Ak"$  (" (F   ( 
 ( jA":    (Aj"6 A 6
@ E
   j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
! @@@@@@@@ Ak 
 A G@ A G



 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA":   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :   (Aj


-- Chunk 119 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17701-17850
@ A O@ AO
 ( F   ( 
 ( j :   (Aj

 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA :    (Aj"6 ( F   ( 
 ( jA0:    (Aj"6 ( F   ( 
 ( jA0:    (Aj"6A0A7 Aq"A
I! ( F   ( 
 ( j AqAvA0r:    (Aj"6 ( F   ( 
 ( j  j:   (Aj

 AO@ AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!  ( kK@    (!
 (  j A
j   j
"6  G
 

 ( F   ( 
 ( jA":    A 6   (Aj6 Aj$ 
I ( ("kAM@  A (!
  A 6   Aj6 (  jA6  

      
R  (" (F   ( 
 ( jA :     6  A 6   AjA:    (Aj6
T (" (F   ( 
 ( jA :     6  A 6   AjA:    (Aj6
~# A k"$  (" (F   ( 
 ( jA :  A!  (Aj6    @ ( E@ (" (F   ( 
 ( jA::    (Aj"6 ( F   ( 
 ( jA :     6  AjA:    (Aj6A !

 Aj A
j( "6   )"7  A
j 6    7
   6  A j$ 
C (" (F   ( 
 ( jA :    A 6   (Aj6
# A0k"$ @@@@@@@@@@@@@@@@@@@@@  ( Ak	



 
 AҺ 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A޸ 6(A7


 A 6(A'


 A 6(A8


 AǷ 6(A8


 A 6(A.
	
 A 6(A

 A 6(A

 A 6(A


 A˶ 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

   (6(  A
j( 
!  AjB7  A6$   6, A6
 A 6  A(j6   A j6  Aj!  A0j$   
@@ A kAqAO@ A kAqAI
 A0k"AqA
I
   6   Aq6 
  A 6    A7k: 
  A 6    A k: 
  A 6    : 
# A0k"$ @@@  -  Ak 
   (6    - :  AjB7  A,jA 6  A6
 A 6 A 6$  A j6  6(  Aj6   Aj

 AjB 7  A6
 A 6 A 6  Aj

   (6    - :  AjB7  A,jA 6  A6
 A 6 A 6$  A j6  6(  Aj6   Aj
!  A0j$   
>"  (
!!  (!  (!
  (!
  (
!"  (!   (!
  ( ! @  Atj!$@  (  "At AqAtr AvAq Avrr" ! 
Aw 
Aws 
Awsj 
 s 
q sjjAߨj" 
  s q 
  qs A
w Aws A
wsjj"A
w Aws A
ws   
sq  
qsj  ( "At AqAtr AvAq Avrr"j  "j" 
 
sq 
sj Aw Aws AwsjA݉j"j"A
w Aws A
ws   sq  qsj 
 ( "At AqAtr AvAq Avrr"j   j"

-- Chunk 120 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:17851-18000
  
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
 ( 
"At AqAtr AvAq Avrr"j  
j"  
sq sj Aw Aws AwsjAȨk"j"A
w Aws A
ws   sq  qsj  ( "At AqAtr AvAq Avrr"j  j" 
 sq 
sj Aw Aws AwsjAۄj"j"A
w Aws A
ws   sq  qsj 
 ( "At AqAtr AvAq Avrr"j  j"
  sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( "At AqAtr AvAq Avrr"j  j" 
 sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj  ( 
"At AqAtr AvAq Avrr"j  j" 
 sq 
sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
 (  "At AqAtr AvAq Avrr"j  j"
  sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj  ( $"At AqAtr AvAq Avrr"j  j" 
 sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj  ( ("At AqAtr AvAq Avrr"j  j" 
 sq 
sj Aw Aws AwsjAơj"j"A
w Aws A
ws   sq  qsj 
 ( ,"At AqAtr AvAq Avrr"	j  j"
  sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( 0"At AqAtr AvAq Avrr"
j  j" 
 sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj  ( 4"At AqAtr AvAq Avrr"
j  j" 
 sq 
sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
 ( 8"
At 
AqAtr 
AvAq 
Avrr"
j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj  ( <"At AqAtr AvAq Avrr"j  j"  sq sj Aw Aws AwsjAk"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"j  
j"  sq sj Aw Aws AwsjAk"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAk"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 	j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAƻ j"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAòj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAؤj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAڑj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjA݆k"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAk"
j"A
w Aws A
ws   sq  qsj  	Aw 	Aws 	Avs j j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAk"
j"A
w Aws A
ws   sq  qsj  
Aw 
Aws 
Avs 	j j Aw A
ws A

-- Chunk 121 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18001-18150
vsj"j  
j"	  sq sj 	Aw 	Aws 	AwsjAk"
j"A
w Aws A
ws   sq  qsj  
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj"j  
j"
 	 sq sj 
Aw 
Aws 
AwsjAk"
j"A
w Aws A
ws   sq  qsj  
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj"j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"
 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAƩ6j"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjAҤj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAܽj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjA۱j"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjA橨j"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjAj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAk"
j"A
w Aws A

-- Chunk 122 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18151-18300
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjA߮k"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjA篴k"
j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs j j Aw A
ws A
vsj" 	j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAk"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"
 
j  
j"
 	 
sq 
sj 
Aw 
Aws 
AwsjA k"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  
j"
 	 
sq 	sj 
Aw 
Aws 
AwsjAj"
j"A
w Aws A
ws   sq  qsj 	 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"j  
j"	 
 
sq 
sj 	Aw 	Aws 	AwsjAj"#j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j Aw A
ws A
vsj"
j  #j" 	 
sq 
sj Aw Aws AwsjAj"#j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j Aw A
ws A
vsj"
j  #j"  	sq 	sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj 	 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"	j  
j"  sq sj Aw Aws AwsjA¥j"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" j  
j"  sq sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j 	Aw 	A
ws 	A
vsj" j  
j"  sq sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A

-- Chunk 123 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18301-18450
ws A
vsj" j  
j"  sq sj Aw Aws AwsjAϔj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  
j"  sq sj Aw Aws AwsjA߹j"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  
j"  sq sj Aw Aws AwsjAj"
j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  
j"  sq sj Aw Aws AwsjAƕj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" j  
j"  sq sj Aw Aws AwsjAk"	j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  	j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"j"
  sq  qsj 
A
w 
Aws 
A
wsj  Aw Aws Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"j! 
 
j!
  
j j!
   j!   
j!
  "j!"  j!  !j!! A@k" $G
 

   !6
   6   
6   
6   "6
    6   
6   6 
# Ak"  :  - 
  ( !  E@ E@   
# Ak"$   -  ! @  jA jA0A7  Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO@  AA  
 A A  jAjA  k!  Aj$   
   
# Ak"$ @@@@@@@@  -  Ak 
   Aj6 A A
A A AjA 

 A A	

 A A

   Aj6
 A A
A A A
jA 

 A A

 A A

 A A


 A A

!  Aj$   
@@@@@@@@ ( E@ ("-  "A(O
 E
 - "A(n! A K
  A6 B7   Aj A(n6 

 (! ("E
  jAj! -  "A(I!A !@@ E
   jM@ 
  A 6


  j-  "AK AOq
 A q Atr! Aj! AtAuA H
 
   j"K@  A: 

  6 A6   A6  Aj 6 

  A: 

A A A  
  A :   Aj 6 

 A'A  
 A'A  
  A:   A6 
 -  "A(I@@ @ - "A(n! A K
  A6 B7   Aj A(p6 

A A A  
  A :   Aj 6 

 A'A  
  A6 
  A 6 
# A0k"$ @@@@@@  (" 
 A$j"B 7 A! A6
 A 6 A 6   Aj
   ( " 6 B7  A6
 A 6 A6  6   Aj6   Aj
  Aj!  AtAk!@   6 A6
 A 6 B 7$ A 6   Aj
 A6
 A 6 B7$ A6  6   Aj6   Aj
  Aj! A ! Ak"
 


-- Chunk 124 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18451-18600

 A
jA6  A$jB7  A6
 A 6 A6   ( " 6    Aj6  6   Aj!

 A$jB7  A6
 A 6 A6   ( 6   6   Aj!

# Ak" $   A 6  A6  A 6 # Ak"$    ) 7 AjA A   (A 
A!
 A0j$  

  ( E@ 
  A 6   6 
_ ( ! A 6 @ @ (!A -  AA"E
  6  6   A 6   6 
 
AA 
   ( " (   ( 

 Bâs

 BԾۧ

 A ( E
!@  ("E
   Aj( E
  

# Ak"$   ( ! @ A M@  ("  (F@   |  (!
   Aj6  (  j :  

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (  ("kK@    ~  (!
  (  j A
j     j6
 Aj$ A 
b# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  Aj!  A j$   
   !@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
 @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

 AO@   
 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
  (!@@    (
F@  AA  Aj"( "j( "
A !

  ("  (
"6
  6

   Aj !@ ! "Aj" Aj ( "! AA j( "
 
 A 6 
@ E
 @    (
AtA j"( G@ AA (  Fj 6  E


  6  
 A A ( A~  (
wq6 
  6  ("@  6  6
  Aj( " E
  Aj  6    6

  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtA j!@@@@A ( "A t"q@ ( ! !  G
 !

A   r6    6 

  t!@  A
vAqjAj"( "E
 At! " G
 

 ("  6
   6   6
   6  A 6
   6 
   6    6    6

]
A ( "@A !@ "(! (! ( ! (
 ! Aj! 
 

A A  AM6  
  "   "!@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
@ @    

-- Chunk 125 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18601-18750

@@@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( F


 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

A A 6 A A 6 
 A ( M
AA! AA!AA!A AAAtk"A|    jjkAwqAk"    KE
A ( E
AA! AA!AA!A !@A ( "    Akjj" M
    kAjA|q"Ak!A ( !A ! @@   ( O@   K

  (" 
 
A ! 
  
   (

 
A  kG
A ( A ( M
A A6 
 AI
   A A ( Ak" 6   
 

 AxqA j!A ( "A Avt"q@ (

A   r6  
!   6   6
   6
   6
"~# Ak"
$ @@@@@@@@@  AO@AA!AA!AA!A AAAtk"A|   jjkAwqAk"  K  M
	  AjA!A ( E
A  k!A  AI
 A AK
  A Avg" kvAq  AtkA>j
"AtA j( "
A ! A !

A  AjAAAk  KA!@@@A ( " Av" v"AqE@ A ( M

 
A ( " E

  hAtA j( " k! " @@   k"   I"!    !  " 
 

  ! AA K
    A ( " 

	
@ AsAq  j"At" A j( "Aj( "  A j" G@   6
   6

A  A~ wq6 
  At !


@A  Aq" t   tqh"At" A j( "Aj( "  A j" G@   6
   6

A A ( A~ wq6 
    " At k"A ( " E
  AxqA j!A ( !A ( "A  Avt" q@ (

A    r6  
!   6   6
  6
   6

  AxqA j!A ( !A ( "A  Avt" q@ (

A    r6  
!   6   6
  6
   6

   j

  t!A ! A !@@ " I
   k" O
  ! "
 A ! ! 

 Aj( "     A
vAqjAj( "G   !  At! 
 

   rE@A !A tA ( q" E
  hAtA j( ! 
  E

@     " O  k" Iq"!   !  " 
 

 E
 A ( " M    kOq
  ! @AA M@     AO@  

 AxqA j!A ( "A Avt" q@ (

A    r6  
!   6   6
  6
   6

   j
 "E


A  6 A  6  !

A  6 A  6 
 "

@@@@@@@ A ( " K@A ( "  K
AA jAAjAAjA" Av@ ! 
A 6 
A   A|q AF" 6 
A  At  6  
( "
A !

A ( !AA   k"K@A A 6 A ( ! A A 6     !

  ! A  6 A   6       !

 
(!
A  
("
A ( j"6 A A ( "     K6 @@@A ( @A ! @   F
  (" 
 


A ( " E   Kr

-- Chunk 126 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18751-18900


  
    
G
   ( "A ( "M   (j KA 


A A ( "     I6   
j!A ! @@@   ( G@  (" 



  
    
F

A ( !	A ! @@ 	  ( O@   	K

  (" 
 
A ! 
 	  "AA"kAk"" A  k j"   AA 	jI"
! 
 ! AA!AA!AA!A   "A k""6 A  
Aj   jj jk"6   Ar6AA!AA!AA!     Akjj6A A6  
 A ) ! AjA ) 7   7 A  
6 A  
6 A  6 A  6 @  A!  A6 " Aj I
 
 	 
F
 	 
 	k"  	    AO@ 	  

  AxqA j!A ( "A  Avt" q@ (

A    r6  
!   	6   	6
 	 6
 	  6

  ( !   6     ( 
j6 "A! "A!    kj" !      kj"   jk!A (   G@  A ( F
  (AqAG
@  "AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
  j!   ! 

A  6 A A (  j" 6    Ar6 !

    ( 
j6A (  
j!A ( "   " A  k" !A    k"6 A  6   Ar6AA!AA!AA!       Akjj6A A6 

A    k"6 A A ( " " 6    Ar6   !

A  6 A A (  j" 6     !

A  6 

     AO@   !

 AxqA j!A ( "A Avt" q@ (

A    r6  
!   6   6
  6
   6 !

A A6 A  
6 A  
6 A  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 AA!AA!AA!A   " A  k" "6 A  
Aj   jj  jk"6   Ar6AA!AA!AA!       Akjj6A A6 
A !A ( "  M
 A    k"6 A A ( " " 6    Ar6   !
 
Aj$  
AA  K@AA! 
AA!AA!AA!@A AAAtk"A|   jjkAwqAk"  K  k M
   A AjAAAk KA"jAAjAk"E
  !@  Ak" qE@ ! 

  jA   kq!AA!    A   k Mj"  k"k! E@       

 ( !   6    j6 
@  
   "AA jM
    !      k"  
  !  
 
i # A0k" $ A -  @  AjB7   A6
  A 6  A 6$   6,    A j6    A,j6   AjA  
  A0j$ 
# A k" $ @@@@@A ( Aq@E

A ( !A A6  
A ( Aq
A ( !A A 6 A ( !A A6 

  AjB 7   A6
  A 6  A 6  AjA  
!A ( !A A 6 A ( !A A6  E

A ( AqE
 
 A A:  
A A 6 @ E
   (   Aj( E
  Aj(  
  A j$ 
 
~# A0k"$  Aj! (E@ ( ! A(j"A 6  B7   A j6, A,jA   Aj ( "6   ) "7 Aj 6   7 
 Aj" Aj( 6  A
jA 6  ) ! B7A -    7 A
A"E@AA
 
  ) 7  Aj ( 6   A 6   6  A0j$ 
~# A k"$  Aj! (E@ ( ! Aj"A 6  B7  Aj6
 A
jA   Aj ( "6   )"7  Aj 6   7 
  A 6   6  A j$ 
OA -   (! ( !AA"E@AA 
  6  6   A 6   6 
   A 6   6 
# A k"$ A A ( "Aj6 @@ A H
 A -  
 A A:  A A ( Aj6   6 A 6
 A 6  :   6A ( "A H
 A  Aj6 A A (     (   ) 7A (  AjA ( ( A ( Ak 
6 A A :   

 
 
    jAkA  kq
   At" A   kr

 A   k  q
 A  AvkA   AG

   (Axq

   - AqAv

   (Aq

-- Chunk 127 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:18901-19050

   - AqE
'     (Aq rAr6   j"   (Ar6

    Ar6   j"   (Ar6

    Ar6
    Ar6   j 6 
#   (A~q6   Ar6   j 6 
    j
    k
   Aj
   Ak
  ("   Aj( 


   (
Aq

   (
Av

   (   (j
  ( !# Ak" $    Aj6 (Aŀ A	 Aj( (
 !  A : 
   : 
   6  AjA΀ A
 A Aـ A	  AjA !  - 
"A G  - 
E
 A 
  ( "- 
AqE@ (A A Aj( (
 

 (A A Aj( (
 
!  Aj$  
   (  A 
# Ak"$ @ A M@  ("  (F@     (!
   Aj6  (  j :  

 A 6
 AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A
!   (  ("kK@      (!
  (  j A
j     j6
 Aj$ 
b# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  Aj!  A j$   
H   ( " (  ("kK@      (!
  (  j      j6A 
    A ( " A    
@# A k" $   AjB 7   A6
  A 6  A 6  AjA  
# A0k"$ @@@@@@ ("E
  ( ! AkAq"Aj"Aq! AI@ 

 A<j! Aq!@ (  Ak(  Ak(  Ak(  A k(  A(k(  A0k(  A8k(  jjjjjjjj! A@k! Ak"
 
 A<k
! @ Aj!@ (  j! Aj! Ak"
 

 A
j( @ A H
 (E AIq
 At!
 

A!A !

 A H
A -   A"E

 A 6  6  6   6
 A j Aj) 7  Aj Aj) 7   ) 7 A
jA  AjE
A A3 A(jA A  
 
A  
   ) 7   Aj Aj( 6  A0j$ 
q ( !@@@ Aj( "E@A!

 A H
A -   A"E

   !   6   6   6 
 
A  
`# Ak"$   (!  ( !    @@   6
  A
jA   Aj!  Ak"
 

 !  Aj$   
M# Ak"$    A
j6
 A A
A A  A A A A
jA !  Aj$   
   ( @
 
 
# A k"$    6 A 6
 A 6 A:   6# Ak" $ @ Aj"("@ (
"E
   6   6   6 # Ak"$   ( "A
j( !@@@ ( 
 
A !A 

 
 ( "(! ( 
!  6  6  A   ("(
  ( -  
 A 6  6  A   ("(
  ( -  
A A+A  
A A+A  
o# A0k"$   6   6  AjB7  A,jA 6  A6
 A 6 A 6$  A j6  6(  Aj6  Aj  
o# A0k"$    6   6 AjB7  A,jA 6  A6
 A 6 A 6$  A j6  Aj6(  6  Aj  
o# A0k"$    6   6 AjB7  A,jA 6  A6
 A 6 A 6$  A j6  Aj6(  6  Aj  
@@  ( "
  ("r@@ E
   j!	  A
j( Aj! !@@ ! Ak"E
   	F
 ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr"A F

-- Chunk 128 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19051-19200
 Aj
"  kj! A G



  	F
  ,  "A N A`Ir ApIrE@ AqAtA q - A?q - A?qAt - A?qA
trrrA F

@@ E
   M@A !  F


A !  j,  A@H

 !
   !   !
 
E
  (!@ AO@  !

 E@A !

 Aq!@ AI@A ! !

 A|q!A ! !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

  I@A !  k"!@@@  -  Ak 
A ! !

 Av! AjAv!
 Aj!  Aj( !  Aj( !  (! @@ Ak"E
    (  E
 
A
A!  A F
    (
 
A !@  F@A 
 Aj!    (  E
 
 Ak I


  (    Aj( (
 !
 
  (    Aj( (
 
H# A k"$  A
jB 7  A6 A 6  6
   6  Aj6    
o# A0k"$    6   6 AjB7  A,jA 6  A6
 A 6 A 6$  A j6  Aj6(  6  Aj  
%    -  At" A j(   A j( 

   5  
# Ak"$ @@@@ (
"AqE@ A q
  5  ! 

  ( ! A !@  jA jA0A   Aq"A
I j:   Ak!  AK!  Av!  
 
 Aj" AO
 A A  jAjA  k! 

  ( ! A !@  jA jA0A7  Aq"A
I j:   Ak!  AK!  Av!  
 
 Aj" AO
 A A  jAjA  k! 

  AA  
  AA  
 Aj$   
,# Ak"$    ( 6
 A
j !  Aj$   

# A0k"$  A j 6  A: ( A 6 A 6$   6
 A 6 A 6@@ ("
E@ A
j( " E
 (!  At!  AkAqAj! ( ! @  Aj( "@ (
  (   ( (
 

 (  Aj Aj(   
 Aj!  Aj!  Ak"
 


 Aj( " E
   At!
  AkA?qAj! ( ! @  Aj( "@ (
  (   ( (
 

   
j"Aj( 6  A
j-  : (  Aj( 6$ A
j( ! (!A !	A !@@@ Aj( Ak 
 At j"
(AG
 
( ( !
A!
  6
  6 Aj( !@@@ ( Ak 
 At j"(AG
 ( ( !
A!	
  6  	6  Aj( Atj"(  Aj (  
  Aj!  
 A j"G
 

 ( K@ (
 (  Atj" (   ( ( (
 

A 

A
! A0j$  
A+A   (
"	Aq"!
  j!@ 	AqE@A !

@ AO@  !

 E
  Aq!@ AI@ !

 A|q!
 !@  ,  AJj , AJj , AJj , AJj! Aj! 
Ak"

 

 E
 @  ,  AJj! Aj! Ak"
 


-- Chunk 129 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19201-19350
  j!
@@  ( E@A!  Aj( "  Aj( "  
  


@@@@   ("I@ 	Aq
  k"!  -  "Ak
A!  Aj( "  Aj( "  
  


A ! !

 Av! AjAv!
 Aj!  Aj( !  Aj( !  (! @@ Ak"E
    (  E
 
A
A!  A F
   
  
    (
 
A !@   F
 Aj!    (  E
 
 Ak
 I!

  (!
  A06  -  !
A!  A:    Aj( "  Aj( "	 
  
   kAj!@@ Ak"E
 A0 	(  E
 
A
A!    	(
 
    
:     
6A 
 
     (
 
u# A k"$ A   
  Aj( ! (! B 7 A 6 A6
 A 6A   Aj
   Aj 
!  A j$   

# Ak"$ @@@@@@@@@@ ( 
 A F


  A;
  B 7  A ; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

 AqE
  A;
  B 7  A ; 

 AqE
   A;
  B 7  A ; 

@@@ AqE
  A
t!A!!A!!@@@@A Av j"AtA j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  K



 Aj!
@@ A M@ At"A j( Av! A G
A!A

 A!A  
 A j( Av! E
 Ak
AtA j( A q

A 
!@  AsjE
   k!A  AM! Ak!A !@@  G@  A j-  j" M


 AA  
  Aj"G
 
 !
 AqE
  AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAvAk"A
O
 Aj j"A /  ;   AjA -  :     )7    Aj Aj/ ;    A
: 
   : 


@ A I
 @A A I
  AI
@ AO@ A
kAк+I A˦
kAIr A
kA
I A
kAIrr A~qA
F A
kAIrr
 A`qA
G


 A A,A AA A

A  A
kAI
  A kAtI


 A A(A AA A

A 
E@ AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 

-- Chunk 130 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19351-19500
  AvAqA j-  : 	 ArgAvAk"A
O
 Aj j"A /  ;   AjA -  :     )7    Aj Aj/ ;    A
: 
   : 


   6  A:  

 A
A  
 A
A  
 Aj$ 
@@@ E
  Ak"A   O!	 AjA|q k!
A !@@@@@@@  j-  "AtAu"A H@A!A!@@@@@@@@ A j-  Ak 
 Aj" I
A !

A ! Aj" O
  j,  ! Ak"E
 A
F


  Aj"M@A !

  j,  !@@@ Ak    
 AjAqAM
A!

 A jAqA0I


 AJ

	
 A`qAG



 AN



@ AjAqA
O@ A~qAnF
A!

 AJ



A! A@N


A ! Aj" O

  j,  AL
A!A!


  j,  AJ
	

 
 kAq
  	O
@  j"( Axq
 Aj( Axq
 	 Aj"K
 


A! A@H


 Aj!

  M
@  j,  A H
  Aj"G
 


  Aj"M@A !

  j,  AJ@A!A!

A ! Aj" O
  j,  AL
 A!A!

 Aj!
  K
 

   6  Aj 6   A 6 
A!
   6  A	j :    Aj :    A6 
~# A@j"$ A!@  - 
   - !	  ( "(
"AqE@ (A A  	AA 	 Aj( (
 
 (   ((
 
 (A A ((
 
   (
  !

 	E@ (A A Aj( (
 
 (
!
 A:  A0jA 6   )7  Aj6  )7  ) !
  64  (6(  -  : 8  
7  Aj"6,   
  AjA A
   Aj (
  
  (,A A (0(
 !
  A:    :  A@k$   

   1   
# A@j"$   6
   6  6  6 A$jB7  A<jA6  A6
 A 6 A64  A0j6   Aj68  Aj60 Aj  
]# A0k"$   6
   6 A
jB7  A6 A 6 A6,  A(j6  Aj6( Aj  
    (   (
  ( Aj(   ( 
    ( " (   (
   (    ((
  
  ( Aj(   

  (!
  ( !
  (!
@@ 
@@  I
 @  j!@  k"AO@@@@ AjA|q"  F
    k"E
 A ! @   j-  A
F
   Aj" G

-- Chunk 131 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19501-19650
 
  Ak"M


 Ak!A !
@  j" ( "	As 	A sAkqAxq
  Aj( " As  A sAkqAxq
 Aj" M
 

  F@ !

@  j-  A
F@ ! 

  Aj"G
 
 !

  F@ !

A ! @   j-  A
F
   Aj" G
 
 !

   j" Aj!@   O
    j-  A
G
 A ! ! ! 

  O
 

A! !  " F

@ 
-  @ 
A A 
(
 

  j!   k!A !	 
   G  jAk-  A
F 	
:   ! 
   
(
 E


A!

 

~# A@j"$ A!@  - 
   - !@@@  ( "(
"AqE@ 


 
A! (A A Aj( (
 
 (
!

A! (A A Aj( (
 E


A! A:  A0jA 6   )7  Aj6  )7  ) !  64  (6(  -  : 8  7  Aj6,  Aj (
  
 (,A A (0(
 !

   (
  !
  A:    :  A@k$ 
2A!  -    ( " (A A  Aj( (
 

~@@ ( "AO@  BX@  B/V
 !

  Ak"6   j    B" B~}"B郱AtA j/  ;    j"Ak B "	B AtA j/  ;   Ak B B AtA j/  ;   Ak B=B AtA j/  ;   A
k B/A pAtA j/  ;   A
k Bȯ%A pAtA j/  ;   Ak B
AqA pAtA j/  ;    	B ~}

A A
A  
  Ak"j    B/" B/~}"A=nAtA j/  ;    j"Ak A n"A pAtA j/  ;   Ak A nAqA pAtA j/  ;    A lk
!  jAk AtA j/  ;  
@  "A M@ !

  Ak"j  A n"A lk"AqA n"AtA j/  ;    jAk  A lkAqAtA j/  ;  
@ Aq"A M@ !

  Ak"j  A n"A lkAqAtA j/  ;  
 AqA
O@  Ak"j AqAtA j/  ;    6 
  Ak"j A0j:    6 
# Ak"$  A 6
   A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
!  Aj$   
[# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj!  A j$   
   (   
# Ak"$   ( !  A 6
   A
j AO@ AO@ AO@  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr: 
  AvAr: 
A

  : 
A
!  Aj$   
b# A k"$   ( !  Aj Aj) 7  Aj Aj) 7   ) 7   6 AjA  Aj!  A j$   
6   A:    A 6  A 6
   6  A 6  A 6   Aj 6 
@@  AjA|q"  k" K
   k"AI
  Aq!A !@   F
  Aq!@   AsjAI@  !

-- Chunk 132 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19651-19800

 A|q!  !@  ,  AJj , AJj , AJj , AJj! Aj! Ak"
 

 E
 @  ,  AJj! Aj! Ak"
 

   j! @ E
    A|qj",  AJ! AF
   , AJj! AF
   , AJj!
 Av!  j!@  ! E
A  AO"Aq! At!@ Aq"E@A !

  Atj!	A !@  E
   ( "AsAv AvrAqj  Aj( "AsAv AvrAqj  Aj( "AsAv AvrAqj  A
j( "AsAv AvrAqj!  Aj"  	G
 

  k!  j!  AvAq AqjAlAv j! E
 
A  E
   Atj"( " AsAv  AvrAq"  AF
    (" AsAv  AvrAqj"  AF
    (" AsAv  AvrAqj
" AvA
q  AqjAlAv j
 E@A 
 Aq!@ AI@

 A|q!@   ,  AJj  , AJj  , AJj  , AJj!  Aj!  Ak"
 

 E
 @   ,  AJj!  Aj!  Ak"
 

 
9 @ A G@A    (  

 
A 

     (
 
	# A k"$   6
  6@@ AO@A  , AJ
 A  , AJ
 A  , AJ
 A
"  j,  AL
  6   6A!A !

  6   6A !

   A    
  6
  6@@@@  I"  IrE@@@  M@@@ E
   M@  F


   j,  A@H

 !
  6   "I@ Aj" Ak"A   O"I
@  F
    j   j"k!   j"	,  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  Ak",  AJ@ Ak!

  F
  Ak",  AJ@ Ak!

  F
  Ak!
  j!
 @  M@  F



   j,  AL
	
  k 
E
@   j",  " A H@ - A?q!  Aq!  A_K
 At r!

   Aq6$A

 - A?q Atr!  ApO
  A
tr!

 A jA6  A jA6  A jA 6  A<jB7  A64 A 60 A 6L  A j68  Aj6`  Aj6X  A
j6P  Aj6H

 AtA q - A?q Atrr"A F

  6$A AI
 A AM
 AA AI
!   6(    j6, A<jB7  A jA6  A jA6  A jA6  A jA6  A64 A 60 A 6L  A j68  Aj6h  Aj6`  A(j6X  A$j6P  A j6H

    6( A<jB7  A jA6  A jA6  A64 A 60 A 6L  A j68  Aj6X  Aj6P  A(j6H

  A  
A A+  
       
 A0j  
   (    Aj( (
 
_# A k"$   Aj( !  (!  Aj Aj) 7  Aj Aj) 7   ) 7    Aj!  A j$   

   - 
AqAv

   - 
A qAv
# Ak"$   (    Aj( (
 ! A : 
  : 
   6 Aj    ! - 
! A G - 
E
 A 
  ( " - 
AqE@  (A A  Aj( (
 

  (A A  Aj( (
 
!  Aj$   
# Ak"
$   (    Aj( (
 ! 
A : 
 
 : 
 
  6 
Aj       	 
! 
- 
! A G 
- 

-- Chunk 133 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19801-19950
E
 A 
  ( " - 
AqE@  (A A  Aj( (
 

  (A A  Aj( (
 
!  
Aj$   
# Ak"$   (    Aj( (
 ! A : 
  : 
   6 Aj       	 
 
 
 
A !  - 
"A G - 
E
 A 
   ( " - 
AqE@  (A A  Aj( (
 

  (A A  Aj( (
 
!  Aj$   
5 (A A Aj( (
 !  A :    :    6 
~# A k"$ A!
@@@ ("
A" Aj( "("  
 @ E@A !A !

   j!A !  !@@@ ",  "
A N@ Aj! 
Aq!	

 - A?q! 
Aq! 
A_M@ At r!	 Aj!

 - A?q Atr! Aj! 
ApI@  A
tr!	

 AtA q -  A?q Atrr"	A F
 Aj!
  	A@@ -  AF
  - 
 - 
kAqAF
   K
@ E
   M@  F

	
   j,  A@H

@ E
   M@  G
	

   j,  AL

@@ 
   j  k (
 
  Aj" Aj( 6   ) "7 AqAF@A!@@ AG@ - "
 - O
  
Aj:  
A
O
 Aj 
j-  !

A ! A 6  (! B 7
 
    E
 


A
 - " A
M!
 - "   I!
@  
F
  Aj":   
F
 Aj j! ! 
 -     E
 



A 	AI
 A 	AM
 AA 	AI
 j!
  k j!  G



 
A
A  
 E@A !

@  M@  F


   j,  AL

  k!
 
   j  (
 
  
A"   !

 A j$  

     A  
     A  

     
# Ak"$ A!@@ ("A' Aj( ("  
    ( A@ -  AF@ Aj!A!@@ AG@ - 
"  - 
O
   Aj: 
  A
O
   j-  !

A ! A 6  (! B 7 
     E
 


A
 - 
" A
M!  - 
"   I!@  F
  Aj": 
   F

-- Chunk 134 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:19951-20100
  j! !  -     E
 


 A'   !
 Aj$  
  A
A  
# Ak"$   ( !  (  (r@ A 6
  A
j  AO@  AO@  AO@   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A

   A?qAr:    A
vAr: 
   AvA?qAr: 
A

   A?qAr: 
   AvAr: 
A

   : 
A


 (   Aj( (  
! Aj$  
@@@@ AjA|q" F
   k"   K"E
 A ! Aq!A!@  j-   F
  Aj"G
 
  Ak"K


 Ak!A !
 AqAl!@  j"(  s"As AkqAxq
 Aj(  s"As AkqAxq
 Aj" M
 

A !  G@ Aq!@   j-  F@ !A!

  Aj"G
 

 !
   6   6 
r# A0k"$   6   6  AjB7  A,jA 6  A6
 A 6 A 6$  A j6  6(  Aj6  AjA  
# A0k"$   - @   Aj-  :  AjA 6    6 A 6
 Aj( !   Aj6 (! B7$ A6
 A 6  Aj6     Aj

 A 6
   6 Aj( !  (! B7$ A6
 A 6  Aj6     Aj
!  A0j$   

   )  
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -  ! Aj!  
G
 
A !	

  A  
  A  
 ! 
" 
G
 

 E
   j!  Aq!@@ Aj!  -  "AtAu"A N     F
 -  A qAtr! Aj
!  k"A H
 	As!	  G



A A+A  
 	Aq
# Ak"$   -  !A ! @   jA jA0A  Aq"A
I j:    Ak!  "Av! AK
 
  Aj"AO@ AA  
 A A   jAjA   k!  Aj$   
~# A0k"$ A'!@  B T@  !

@ A	j j"Ak    B "B ~}"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  B/V! !  
 

 "A K@ Ak" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
O@ Ak" A	jj AtA j/  ;  

 Ak" A	jj A0j:  
 A A  A	j jA' k! A0j$  
~# Ak"$   ) !A ! @   jA jA0A  Aq"A
I j:    Ak!  BV! B! 
 
  Aj"AO@ AA  
 A A   jAjA   k!  Aj$   
~# Ak"$   ) !A ! @   jA jA0A7 Aq"A
I j:    Ak!  BV! B! 
 
  Aj"AO@ AA  
 A A   jAjA   k!  Aj$   

  (A A Aj( (
 
~# A k"$ @  ( "-  E@ (A A Aj( (
 ! 

A!   Aj6
  (A A Aj( (
 :   6 A :  A 6 A
j!# A@j"$  Aj" - @ ( !A

 ( ! Aj( "(
"AqE@A (A A  AA  Aj( (
 
  A (   

 E@ (A A Aj( (
 @A !A

 (
!
 A:  A0jA 6   )7  Aj6  )7  ) !  64  (6(  -  : 8  7  Aj6,A  AjA (   
  (,A A (0(
 

-- Chunk 135 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20101-20250
:   Aj6  A@k$  - ! ( "E@ A G! 

 
  (!@ AG
  - E
  - 
Aq
  (A A Aj( (
 

 (A A Aj( (
 ! 
 A j$   
  ( ! # Ak"$ @@@@ (
"AqE@ A q
  1   !

  -  ! @  jA jA0A   Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO
 A A  jAjA  k!

  -  ! @  jA jA0A7  Aq"A
I j:   Ak!  "Av!  AK
 
 Aj" AO
 A A  jAjA  k!

  AA  
  AA  
 Aj$  
# A0k"$   ( !  A
jA6    ( " 6 A6   h6 Aj( !   Aj6  Aj6  (! B7$ A6
 A 6  6     Aj!  A0j$   
  A
t!A#!A#!@@@@A Av j"AtA j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@@ A"M@ At"A j( Av! A"G
A!A!

 A#A  
 A j( Av! E
 Ak
AtA j( A q

A 
!@  AsjE
    k!A  AM! Ak! A !@@  G@  A j-  j" M


 AA  
   Aj"G
 
  !
 Aq
  A
t!A!A!@@@@A Av j"AtA j( A
t" G  K"AF@ !

 AqAG
 Aj!
  k!  I



 Aj!
@@ AM@ At"A j( Av! AG
A!A

 AA  
 A j( Av! E
 Ak
AtA j( A q

A 
!@  AsjE
    k!A  AM! Ak! A !@@  G@  A j-  j" M


 AA  
   Aj"G
 
  !
 Aq
V~@ A qE@ E
B  A?q" A  kA?q!  !

  A?q!B !
   7    7
@ "AM@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq"@ A L
 A|q"Aj!A  At"	kAq! ( !@   	v ( " tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 @  j!@  -  :   Aj! Aj" I
 

  
~# A k"
$ # A k"
$ @~@@@@@ "P@ P P  Tqr
 
Aj A  yk"
A qB 
A?q!	 
Aj) ! 
)!@  }!  }  T}"B Y@  	!  ZA PE
 ! !
 B? B! 	B!	 B!
 
 
@ PE@  T
  Q
   "	 ~}! BZ
 B B  B "  " ~}B "   "~}! B  ! B  	!	B !

   " ~}!

 
 A? y"
 y"
kA@k 
 
F"
A qB 
A?q! 
Aj) ! 
) !@@  }  T}"B S
   }!  ! PE@ !

  " !   ~}!

-- Chunk 136 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20251-20400

 B? B! B! B!
 
 
B !	 !

 P  TqE@ B! B?!B!@@  }  T}"B S
   }!  ! PE@ !

  " !   ~}!B !

 B? B! B! B!
 
 


   " ~}!B!	

B 

 
!
 
 7 
 7  
Aj 7  
 	7 
A j$  
) !   
Aj) 7   7  
A j$ 
@@@ "   kK@  j!   j! AK
  

 AM@  !

  A   kAq"j! @  ! ! @   -  :    Aj!  Aj" I
 

   k"A|q"j!@  j"Aq" @ A L
 A|q"Aj!A   At"kAq!	 ( ! @    v ( "  	tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!

 A|q! A  Aq"k! @  jAk!@ Ak" -  :   Ak!   I
 

    k"A|q"k!A  k!@  j"Aq"@ A N
 A|q"Ak!A  At"kAq!	 ( !@  Ak"   	t ( " vr6  Ak!   K
 


 A N
   jAk!@  Ak"  ( 6  Ak!   K
 

 Aq" E
  j!   k
!  Ak!@ Ak" -  :   Ak!   I
 


 E
   j! @  -  :   Aj! Aj"  I
 


h~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||  ~|7
C@ E
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 
 !@ AM@  !

  A   kAq"j! @  !@  :   Aj" I
 

   k"A|q"j! A J@ AqAl!@  6  Aj" I
 

 Aq!
 @  j!@  :   Aj" I
 

  


 A 

type_urlvaluedenomamountblockheighttimechain_idtransactioncontractaddresssenderfundsindexsimulatemsgstx_bytescred_bytesalserueullaudexpiatissnbfsubtransaction_hashidpubkeysignaturetokenauthenticatoradd_authenticatorIbcMsgclose_channelchannel_idsend_packetdatatimeouttransferto_addressamountIbcTimeoutblocktimestampIbcTimeoutBlockrevisionheightcw2::ContractVersiontransactioncontracttimechain_idsenderfundsaddressindexSubMsgidmsggas_limitreply_onReplyOnneversuccesserroralwaystype_urlvalue        simulate    msgstx_bytescred_bytes      
     
       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/biguint.rs  @ b        before_txafter_tx    	       ContractVersionversioncontract_info    
               a Display implementation returned an error unexpectedly              /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs \ K   	     	         
   
   
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/hex-0.4.3/src/lib.rs  S      %    S      A   Anyinvalid Uint128 '' - G    X              
                            /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/smallvec-1.11.1/src/lib.rscalled `Result::unwrap()` on an `Err` value             Y   V  .   capacity overflow    Y   E  6    Y        assertion failed: new_cap >= len Y     
   /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/core/src/slice/iter.rs   N      A 
attempt to divide by zeroaccount::msg::QueryMsgcosmwasm_std::types::Envaccount::msg::InstantiateMsgcosmwasm_std::types::MessageInfoaccount::msg::ExecuteMsgabsacc::AccountSudoMsgcosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>called `Result::unwrap()` on an `Err` value                /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.3.0/src/exports.rs `                               
   
             
          !   "   #   $   %             &    `   w       `          `         '   
      (   )      a Display implementation returned an error unexpectedly              /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs 	 K   	     /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs  p	 V     2   invalid base64: 	    invalid Uint64 '' - 	     
    -         .   /   0   1   -         2   /   3   4   CosmosMsggovwasmibcstargatetype_urlvaluecustombankGovMsgvoteproposal_idBankMsgburnamountsendto_addressWasmMsgclear_admincontract_addrupdate_adminadminmigratenew_code_idmsginstantiatecode_idfundslabelexecuteVoteOptionno_with_vetoabstainnoyesEmptyEventtypeattributesAttributekeymissing field ```
    o
    unknown field ``, expected  
    
 
   `, there are no fields  
    
    duplicate field `   
    o
    unknown variant `   
    
 
   `, there are no variants
    

    invalid token   D
 
   invalid jwt aud \
    invalid time on signature. current:  received:  t
 $   
 
   cannot delete the last authenticator
 $   the pubkey recovered from the signature does not match  
 6   recovery id can only be one of 0, 1, 27, 28  
 +   only the contract itself can call this method   T
 -   short signature 
    signature is empty  
    signature is invalid. expected: , received  
     
 
   signature is invalid
    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/phf_shared-0.11.2/src/lib.rs A 
attempt to calculate the remainder with a divisor of zero    [   ;      Coindenomamount         account::auth::Authenticatoralloc::string::Stringalloc::vec::Vec<u8>errorok/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-1.1.0/src/keys.rs 7 `   I      5          6   7   8   9   	`He A 
:   
      ;   <      a Display implementation returned an error unexpectedly =             /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs L K   	     integer overflow when calculating buffer sizeInvalid UTF8   >         ?   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/engine/mod.rs   ^      $    ^   |      /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/core/src/slice/iter.rs  t N      A 
-attempt to divide by zeroxion ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	



-- Chunk 137 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20401-20550




 !"#$%&'()*+,-./0123{"account_number":"0","chain_id":"","fee":{"amount":[],"gas":"0"},"memo":"","msgs":[{"type":"sign/MsgSignData","value":{"data":"","signer":""}}],"sequence":"0"}@     
       authenticators      called `Result::unwrap()` on an `Err` value @             account/src/query.rsL          =          A   B   C   =          D   E   F   account/src/auth.rs     P   /   Secp256K1Ed25519EthWalletJwt 	        	       idaudsubtokenaddresssignaturepubkeyAuthenticator        
    
    idauthenticatorsignatureP    R 
   _ 	   ExecuteMsgadd_auth_methodremove_auth_method         P    add_authenticator       QueryMsgauthenticator_i_dsauthenticator_by_i_d          account::auth::jwt::ClaimsResponsemessagesattributeseventsdata  /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/core/src/str/pattern.rs ` O     &   g	jgrn<:ORQhك[        integration-test-projectolg7TF3aai-wR4HTDe5oR-WRhEsdW3u-O3IJHl0BiHkmR4MLskHG9HzivWoXsloUBnBMrFNxOH0x5cNMI07oi4PeRbHySiogRW9CXPjJaNlTi-pT_IgKFsyJNXsLyzrnajLkDbQU6pRsHmNeL0hAOUv48rtXv8VVWWN8okJehD2q9N7LHoFAOmIUEPg_VTHTt8K__O-9eMZKN4eMjh_4-sxRX6NXPSPT87XRlrK4GZ4pUdp86K0tOFLhwO4Uj0JkMNfI82eVZ1tAbDlqjd8jFnAb8fWm8wtdaTNbL_AAXmbDhswwJOyrw8fARZIhrXSdKBWa6e4k7sLwTIy-OO8saebnlARsjGst7ZCzmw5KCm2ctEVl3hYhHwyXu_A5rOblMrV3H0G7WqeKMCMVSJ11ssrlsmfVhNIwu1Qlt5GYmPTTJiCgGUGRxZkgDyOyjFNHglYpZamCGyJ9oyofsukEGoqMQ6WzjFi_hjVapzXi7Li-Q0OjEopIUUDDgeUrgjbGY0eiHI6sAz5hoaD0Qjc9e3Hk6-y7VcKCTCAanZOlJV0vJkHB98LBLh9qAoVUei_VaLFe2IcfVlrL_43aXlsHhr_SUQY5pHPlUMbQihE_57dpPRh31qDX_w6ye8dilniP8JmpKM2uIwnJ0x7hfJ45Qa0oLHmrGlzY9wi-RGP0YUk;AQABproject-test-185e9a9f-8bab-42f2-a924-953a59e8ff94sQKkA829tzjU2VA-INHvdrewkbQzjpsMn0PNM7KJaBODbB4ItZM4x1NVSWBiy2DGHkaDDvADRbbq1BZsC1iXVtIYm0AoD7x4QC1w89kp2_s0wmvUOSPiQZlYrgJqRDXirXJZX3MNku2McXbwdyPajDaR4nBBQOoUOF21CHqLDqBHs2R6tHyL80R_8mgueiqQ-4wg6SSVcB_6ZOh59vRcjKr34upKPWGQzvMGCkeTO9whzbIWbA1j-8ykiS63EhjWBZU_sSolsf1ZGq8peVrADDLhOvHtZxCZLKwB46k2kb8GKAWlO4wRP6BDVjzpnea7BsvZ6JwULKg3HisH9gzaiQ;AQAB         1    [          <    '=р7.  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_>456789:;<= 	



?


 !"#$%&'()*+,-./0123audexpiatissnbfsubtransaction_hashaccount0.1.0account::auth::Authenticator/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-1.1.0/src/path.rs  
 `   )      I   
      J   K      a Display implementation returned an error unexpectedly L             /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs 
 K   	         #EgܺvT2/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/encode.rs  L
 Z   P   -   usize overflow when calculating b64 length  L
 Z   W   
       g	jgrn<:ORQhك[account/src/auth/eth_crypto.rs   
   .      Ethereum Signed Message:
authenticatorsb    methodauthenticator_idaccount/src/execute.rs    :   (   before_txexecute()called `Result::unwrap()` on an `Err` value   M          N   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs    V     %   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-1.1.0/src/iter_helpers.rsl  h   (      O         P   Q   R   S   only supports namespaces up to length 0xFFFF ! ,   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-1.1.0/src/helpers.rs 4! c   V   	   q   p   z   r   y   9   x   8   g   f   2   t   v   d   w   0   s   3   j   n   5   4   k   h   c   e   6   m   u   a   7   l   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs  (" V   b   	   Unhandled error writing the checksum on drop.   V             (" V         internal error: entered unreachable code(" V        mixed-case strings not allowed  # 
   invalid padding @#    invalid data point ()   X#    l#    invalid character (code=#    l#    invalid length  #    invalid checksum#    missing human-readable separator, ""# #   #    1   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/rsa-0.9.2/src/algorithms/pkcs1v15.rs $ c         $ c      
   $ c      
   $ c      
   $ c      
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/biguint.rs  $ b        invalid padding length  8%    label too long  X%    internal error  p%    8%     public exponent too large   %    public exponent too small   %    modulus too large   %    invalid coefficient %    invalid exponent&    invalid modulus (&    invalid prime value @&    too few primes of given length to generate an RSA key   \& 5   nprimes must be >= 2&    input must be hashed&    message too long&    verification error  &    decryption error'    invalid padding scheme   '    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/smallvec-1.11.1/src/lib.rscalled `Result::unwrap()` on an `Err` valueY            @' Y   V  .   capacity overflow   @' Y   E  6   @' Y        assertion failed: new_cap >= len@' Y     
   /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/core/src/slice/iter.rs  H( N      A 
attempt to divide by zero   PKCS#1 version error(     PKCS#1 cryptographic errorPKCS#1 ASN.1 error:   )    public key error:    )    PKCS#8 algorithm parameters malformedPKCS#8 cryptographic key data malformedPKCS#8 ASN.1 error: )    unknown/unsupported algorithm OID:  ) #   SPKI cryptographic key data malformedASN.1 error:   ) 
   AlgorithmIdentifier parameters missingPRIVATE [] () 2* 	   ;*    >*    primitiveconstructedX* 	   a* 
   CONTEXT-SPECIFIC [  |*    ;*    >*    APPLICATION [   * 
   ;*    >*    BMPStringVisibleStringGeneralizedTimeUTCTimeIA5StringVideotexStringTeletexStringPrintableStringNumericStringSETSEQUENCEUTF8StringENUMERATEDREALOBJECT IDENTIFIERNULLOCTET STRINGBIT STRINGINTEGERBOOLEAN+     +      at DER byte    + 
   malformed ASN.1 DER value for   + 
   trailing data at end of DER message: decoded  bytes,  bytes remaining   + -   ,    
,    unknown/unsupported ASN.1 DER tag: 0x   H, %   unexpected ASN.1 DER tag:   x,    expected ,  , 	   ,    got ,    invalid tag number  ,    unknown tag mode,    reader does not support the requested operation , /   permission denied   0-    PEM error:  L- 
   ASN.1 DER message is too long   `- 
   integer overflow-    SET OF ordering error   -    SET OF contains duplicate   -    unknown/unsupported OID:    -    malformed OID   . 
   ASN.1  not canonically encoded as DER    .    &.    incorrect length for    X.    indefinite length disallowedx. 
   I/O error:  . 
   ASN.1 DER message is incomplete: expected , actual  . *   . 	   file not found  .    operation failed
/    date/time error $/    unexpected PEM type label: expecting "" </ &   b/    PEM error in post-encapsulation boundaryPEM error in pre-encapsulation boundaryPEM preamble contains invalid data (NUL byte)PEM length invalidPEM type label invalidPEM headers disallowed by RFC7468PEM error in encapsulated textPEM character encoding errorPEM Base64 error:    s0    invalid Base64 lengthinvalid Base64 encodingassertion failed: mid <= self.len()chunk size must be non-zero  0    assertion failed: index <= len/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/smallvec-1.11.1/src/lib.rs "1 Y     	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/biguint.rs         1 b        A 

attempt to divide by zero   1 b      
   1 b   9  8   1 b   :  *   1 b   ;     1 b     (   1 b     +   1 b        1 b   x      1 b   |     1 b        1 b        divide by zero! 2    1 b   g	  	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/add.rs   3 i         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/shr.rs   3 i         3 i      
   BigUintdata m         n   o         p   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/sub.rsCannot subtract b from a because b is larger than a.   4 4   84 i   +      assertion failed: a_hi.is_empty()   84 i   H      84 i   K      84 i   S      84 i   T      assertion failed: mid <= self.len() destination and source slices have different lengthsx5 4   q         p   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/add.rs   5 i         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/smallvec-1.11.1/src/lib.rscalled `Result::unwrap()` on an `Err` valuer            @6 Y   V  .   capacity overflow   @6 Y   E  6   @6 Y        assertion failed: new_cap >= len@6 Y     
   /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/core/src/slice/iter.rs  H7 N      A 
?attempt to divide by zero   assertion failed: mid <= self.len() A 
/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/monty.rs7 `         7 `   !   !       7     x8    x8    x8    7 `   2      7 `   A   #   7 `   A   >   7 `   B      7 `   C   #   7 `   F   	   7 `   N   *   7 `   K   &   7 `   L      7 `      
   assertion failed: m.data[0] & 1 == 17 `         7 `      
   7 `         7 `         7 `         assertion failed: mid <= self.len()/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/biguint.rs   9 b   Q     /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/mac.rs   H: i      
   carry overflow during multiplication!   H: i   #      H: i   D      H: i         H: i         H: i         H: i      /   H: i      /   H: i      /   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/shl.rs   l; i         called `Option::unwrap()` on a `None` value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/div.rs< i   !          attempt to divide by zero   < i   p      < i   {   *   < i         < i         < i   S   
   < i   A      < i   0   3   explicit panic  < i   &   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/shl.rs   <= i         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/num-bigint-dig-0.8.4/src/algorithms/shr.rs   = i         = i      
   AllocErrlayout  u         v   CapacityOverflow/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/engine/general_purpose/decode.rs   t> q   r   $   t> q   s   )   t> q         t> q         t> q         t> q         t> q         t> q        t> q   
     t> q        t> q         t> q         t> q         t> q         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/engine/general_purpose/mod.rs  ? n   >      ? n   @      ? n          ? n      %   ? n      
   ? n      
   ? n      
   ? n      @   ? n      
   ? n      
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/engine/general_purpose/decode_suffix.rs@ x   
      Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengths`A T   internal error: entered unreachable code:   A *   @ x         @ x      	   Invalid padding B    Invalid last symbol , offset .  (B    <B 	   EB    Encoded text cannot have a 6-bit remainder. `B +   Invalid byte    B 
   <B 	   EB    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.4/src/encode.rs  B Z      	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/tiny-keccak-2.0.2/src/lib.rs (C [   8     (C [   M  ,   assertion failed: dst.len() <= src.len()(C [   R  
   (C [         (C [     
   (C [     %   (C [     !                                              	                   	     
                                      
      
                        Unknown error:  D    Invalid recovery parameter. Supported values: 0 and 1.  D 6   Invalid signature format8E    Invalid hash format XE    UnknownErrerror_codey         z   InvalidRecoveryParamInvalidSignatureFormatInvalidHashFormat E     invalid base64: E    Region pointer is null  E    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.3.0/src/memory.rs F _   9      Region starts at null pointer   F 
   F _   ?      ~   
               a Display implementation returned an error unexpectedly              /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs 
G K   	     cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other. H   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-1.3.0/src/imports.rsJ `   k   
                        input too long for addr_validateaddr_validate errored:  J    input too long for addr_canonicalizeaddr_canonicalize errored:   K    addr_humanize errored:  $K    MessageTooLong must not happen. This is a bug in the VM.DK 8   J `        J `   %     InvalidHashFormat must not happen. This is a bug in the VM. K ;   J `   ?     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   K A   J `   >     J `   _     J `   ^        
               a Display implementation returned an error unexpectedly              /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs L K   	     0M     Conversion error:   8M    Divide by zero: TM    Overflow:   lM 
   Error serializing type :    M    M    Error parsing into type M    M     not found  0M     M 
   Cannot decode UTF8 bytes into string:   M &   Invalid hex string:  N    Invalid data size: expected= actual=<N 
   XN    Invalid Base64 string:  pN    Generic error:  N    Recover pubkey error:   N    Verification error: N    ConversionOverflowsource            DivideByZero            Overflow            SerializeErrsource_type    
         msg             ParseErrtarget_typeNotFoundkindInvalidUtf8InvalidHexInvalidDataSizeexpected             actual              InvalidBase64GenericErrRecoverPubkeyErr             VerificationErr             ShlShrPowMulSubAddCannot  with  and ZP    aP    gP    OverflowErroroperation              operand1operand2ConversionOverflowError             valueCannot divide  by zero P    P    DivideByZeroErroroperandWP TP QP NP KP HP                   
               a Display implementation returned an error unexpectedly              /rustc/8ede3aae28fe6e4d52b38157d7bfe0d3bceef225/library/alloc/src/string.rs Q K   	     missing field ``R    R    duplicate field `   0R    R    unknown variant ``, expected    TR    eR 
   `, there are no variantsTR    R                       SystemErrorinvalid_requestinvalid_responseno_such_contractno_such_codeunknownunsupp

-- Chunk 138 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20551-20700
                                                                UnsupportedUncategorizedOtherOutOfMemoryUnexpectedEofInterruptedArgumentListTooLongInvalidFilenameTooManyLinksCrossesDevicesDeadlockExecutableFileBusyResourceBusyFileTooLargeFilesystemQuotaExceededNotSeekableStorageFullWriteZeroTimedOutInvalidDataInvalidInputStaleNetworkFileHandleFilesystemLoopReadOnlyFilesystemDirectoryNotEmptyIsADirectoryNotADirectoryWouldBlockAlreadyExistsBrokenPipeNetworkDownAddrNotAvailableAddrInUseNotConnectedConnectionAbortedNetworkUnreachableHostUnreachableConnectionResetConnectionRefusedPermissionDeniedNotFound                       
   	      
   
   
   
   
   
               
   
      	   
   
      
   
            
         
   
   
   
      
   No >o -o 
o o n n n n n n n n n n n qn _n Qn ;n /n $n 
n n n m m m m m m m m m xm mm 8m `m Um Pm Cm                               library/alloc/src/raw_vec.rscapacity overflow   p    p 
   
     a formatting trait implementation returned an error              library/alloc/src/fmt.rsTq    b      library/alloc/src/str.rs|q      /   |q      ;   )library/alloc/src/vec/mod.rs) should be <= len (is `at` split index (is    q    q    q    q 
   2  
   byteserror              FromUtf8Error      
         called `Option::unwrap()` on a `None` valuenumber would be zero for non-zero typenumber too small to fit in target typenumber too large to fit in target typeinvalid digit found in stringcannot parse integer from empty string (1 << )dr     Ds    Ks    library/core/src/fmt/mod.rs..   s    could not convert slice to arraydr     :[  dr     s    s    panicked at '', s    s                 index out of bounds: the len is  but the index is    t      t    matches!===assertion failed: `(left  right)`
  left: ``,
 right: ``:    Ot    ht    zt 
   t    `   Ot    ht    zt 
   t    :   dr     t       
                    {
,
,  { } }(
(,
              ]library/core/src/fmt/num.rs%u    i      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899assertion failed: *curr > 19  %u                           ds    	  
   ds    	     range start index  out of range for slice of length v    v "   range end index v    v "   slice index starts at  but ends at  v    v 
   source slice length () does not match destination slice length (w    -w +   Ks     A 
3 A 
zincomplete utf-8 byte sequence from index   px *   invalid utf-8 sequence of  bytes from index x    x    [...]byte index  is out of bounds of `  x 
   x    t    begin <= end ( <= ) when slicing `   y    .y    2y    t     is not a char boundary; it is inside  (bytes ) of `x 
   dy &   y    y    t    library/core/src/str/mod.rs y      
   library/core/src/unicode/printable.rs   y %   
   
   y %      6    	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ@0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t


7	\
;
8F
t

ZY	

	L
1&
 *L
 	




$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_ZbST./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юno^"{-f/.
1
$	
+D*$$(4
NC7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&RK+*&
	N$	D

H'	u
B>*;
Qb
H
^"E


:
6,<dS
H	
FEHS
I
F

GI7
9
6;
V2
fu
ĊLc
0G9*\&
F
([eK9@
*	3
k
	`G	t<
spFz

W	GBP+>!p-@:*)L
DL=<U4,d
V
8


-- Chunk 139 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20701-20850
,	
w_

8
("NT

	6		%
library/core/src/unicode/unicode_data.rs0123456789abcdeflibrary/core/src/escape.rs      4      \u{     b   #   SomeNone            ErrorUtf8Errorvalid_up_toerror_len               (   P   (    (   \        ] "`"|, 00`45`7
7
7 CaD!H
H$
I!K/aK;aY0
Y
a]04!ajabOobcd aege af g!i!kkk nll'
#G 	1-,


#
e
!
[
:
+,):7

:9

9:

=
27

:
9
HZ
	b		I7
$	f
^  


@
-3A"v	:
'10(	
 8:@R
2?
"e 





1


3! q}` / $]]   b

P"Ng
&
.0B
#
3d	y  
"
#/-C  *	 (  PF
1{6)
1
2$>
4	
_9%TUje 	  
(	.
 RzH 
4  ;	 ?@   . 	
 72 >! =  m  
`    
 $	 , @`0 `!  !

@na
 ԡ

 ߁"0a% !&0a&&A/
$
`*S&	) &+ V 	+@@ &5
t

e
  4 
& .
f; +P 
  P`$$t

 *	 3
3 @ @ UG
A
  
 > D        ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90
aH
L@4aPjQOo!RR aSeѡS !T UaW!YY  YZ p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  PF
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH 
4  ; ?Q  . 
 72 d =  m `                                                                                                                                                                                                         	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0    @ 2  3  4  5  6  7  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x     y  z  {  |  }  ~    S            T        V    W            Y    [        `    c    i    h        o    r    u                                                                                                                                                                                                                     	  
  
  
  

-- Chunk 140 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:20851-21000
                              
  
  
         "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0  1  2  3  :  e,  ;  <  =    >  f,  A  B  C    D    E    F  G  H  I  J  K  L  M  N  O  p  q  r  s  v  w                                                                                                                                                                                                                {    |    }     P    Q    R    S    T    U    V    W    X  	  Y  
  Z  
  [  
  \  
  ]    ^    _    0    1    2    3    4    5    6    7    8    9    :    ;  
  <  
  =  
  >    ?     @  !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z  {  |  }  ~                                                                                                                                                                                                                                                                       	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  1  a  2  b  3  c  4  d  5  e  6  f  7  g  8  h  9  i  :  j  ;  k  <  l  =  m  >  n  ?  o  @  p  A  q  B  r  C  s  D  t  E  u  F  v  G  w  H  x  I  y  J  z  K  {  L  |  M  }  N  ~  O    P    Q    R    S    T    U    V       -    -    -    -    -    -    -    -    -    	-    
-    
-    
-    
-    -    -    -    -    -    -    -    -    -    -    -    -    -    -    
-    
-    
-    -     -    !-    "-    #-    $-    %-    '-    --    p    q    r    s    t    u    v    w    x    y    z    {    |    }    ~                                                                                                                                                                                                                                                                                              
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  
  
  
  
  
  
  
  	
  

  

  

  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  

  

  
   
  !
  "
  #
  $
  %
  &
  '
  (
  )
  *
  +
  ,
  -
  .
  /
  0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  :
  ;
  <
  =
  >
  ?
  @
  A
  B
  C
  D
  E
  F
  G
  H

-- Chunk 141 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:21001-21150
  I
  J
  K
  L
  M
  N
  O
  P
  Q
  R
  S
  T
  U
  V
  W
  X
  Y
  Z
  [
  \
  ]
  ^
  _
  `
  a
  b
  c
  d
  e
  f
  g
  h
  i
  j
  k
  l
  m
  n
  o
  p
  q
  r
  s
  t
  u
  v
  w
  x
  y
  z
  {
  |
  }
  ~
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
     
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

-- Chunk 142 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:21151-21300
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
       	    
    
    
    
                            
    
    (     )  !  *  "  +  #  ,  $  -  %  .  &  /  '  8  0  9  1  :  2  ;  3  <  4  =  5  >  6  ?  7  H  @  I  A  J  B  K  C  L  D  M  E  Y  Q  [  S  ]  U  _  W  h  `  i  a  j  b  k  c  l  d  m  e  n  f  o  g                                                                                                            p    q        r    s    t    u                v    w            z    {        x    y    |    }      &!    *!  k   +!     2!  N!  `!  p!  a!  q!  b!  r!  c!  s!  d!  t!  e!  u!  f!  v!  g!  w!  h!  x!  i!  y!  j!  z!  k!  {!  l!  |!  m!  }!  n!  ~!  o!  !  !  !  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $   ,  0,  ,  1,  ,  2,  ,  3,  ,  4,  ,  5,  ,  6,  ,  7,  ,  8,  	,  9,  
,  :,  
,  ;,  
,  <,  
,  =,  ,  >,  ,  ?,  ,  @,  ,  A,  ,  B,  ,  C,  ,  D,  ,  E,  ,  F,  ,  G,  ,  H,  ,  I,  ,  J,  ,  K,  
,  L,  
,  M,  
,  N,  ,  O,   ,  P,  !,  Q,  ",  R,  #,  S,  $,  T,  %,  U,  &,  V,  ',  W,  (,  X,  ),  Y,  *,  Z,  +,  [,  ,,  \,  -,  ],  .,  ^,  /,  _,  `,  a,  b,  k  c,  }
  d,  }  g,  h,  i,  j,  k,  l,  m,  Q  n,  q  o,  P  p,  R  r,  s,  u,  v,  ~,  ?  ,  @  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m                                                          "  #  $  %  &  '  (  )  *  +  ,  -  .  /  2  3  4  5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  y  z  {  |  }  y
  ~                          e                                                    f    \    a    l    j                S                              §  ç  ħ    ŧ    Ƨ  
  ǧ  ȧ  ɧ  ʧ  Ч  ѧ  ֧  ק  ا  ٧      !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  0  P  1  Q  2  R  3  S  4  T  5  U  6  V  7  W  8  X  9  Y  :  Z    (  )  *  +  ,  -  .  /  0 	 1 
 2 
 3 
 4 
 5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C 
 D 
 E 
 F  G   H ! I " J # K $ L % M & N ' O                                                                         p  q  r  s  t  u  v  w  x  y  z  |  }  ~                                            
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                 @n `n An an Bn bn Cn cn Dn dn En en Fn fn Gn gn Hn hn In in Jn jn Kn kn Ln ln Mn mn Nn nn On on Pn pn Qn qn Rn rn Sn sn Tn tn Un un Vn vn Wn wn Xn xn Yn yn Zn zn [n {n \n |n ]n }n ^n ~n _n n   "  #  $  %  &  '  (  )  * 	 + 

-- Chunk 143 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64-previous.wasm:21301-21309
 , 
 - 
 . 
 /  0  1  2  3  4  5  6  7  8  9  :  ;  <  = 
 > 
 ? 
 @  A   B ! C Layoutsizealign             &   
   &   &   &   
s s r r r

=== File: integration_tests/testdata/contracts/account_updatable-aarch64.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1-150
 asm   `` `` ` ` `` ` ` ` `  ````~`~ `	 `
 `~ `~`~ ``
``~`~~~ envabort env
db_next_value env
db_next_key envdb_read envdb_write env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize  env
addr_humanize  envsecp256k1_verify envsecp256k1_recover_pubkey enved25519_verify enved25519_batch_verify envdebug env
query_chain                                            
           

         
	  
                       
         
       			
	

                          

                  
            
     
 
   p A 
 A 
 A 
memory execute d
instantiate tquery usudo migrate __getrandom_custom interface_version_8 allocate 
deallocate requires_stargate requires_iterator requires_cosmwasm_1_2 requires_cosmwasm_1_3 requires_cosmwasm_1_4 requires_cosmwasm_2_0 requires_cosmwasm_1_1 
__data_end
__heap_base	 A
IVNUTQRw}OZfP[SMWXYLbaaNUTl`OqPrSMnopLImjiihhhL{|~xzgLyNUNUTNNNUTNUTLNUNNSNUTNUTNUN

# A0k"	$  	A:  	A 6 	 6
 	 6 	Aj!
A !A !# A k"$  A j 	Aj"@ -  E@ 
BȀ7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ 
BȂ7 

  Aj Ax!Ax! - E@Ax!


 - "
A"G@ 
A F
Ax!Ax!


 A(j 4 (("AxG@Ax!
	
 A,j!@@@@ - ,"Ak 
 A@k  (@AxG
 A(j ( (4!
 (0!
 (,! ((


 A@k  (@AxG@Ax!
	
 A(j : (4!
 (0! (,!Ax! ((E

	
 A(j @ ((AxG@ A j A0j( 6   )(7@

 A@k 
 (@AxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A(j 4 (("AxG@ !

 - ,"Ak
 !Ax!

 A(j @ ((AxF@ A@k 

 A j A0j( 6   )(7@
 (@AxF
 !

 AxG@ A,jA A !

 A@k  (@AxG@ !


 A(j : (4!
 (,! ! (0! ((E



 AxG@ A,jA A !

 A@k  (@AxG
 A(j ( (4!
 (0!
 (,! ((E


 AxF@ A,jA AAx! E
  A

  
6<  
68  64  
60  6, !

   - ! -  
 
 !
	
A  
 
B聀7 


Ax!
 A,jA AAx!

  )@7  Aj A j( 6  (,! (0!
 (4!

  
64  
60  6, !

  )@7  Aj A j( 6  (,! (0! (4!

  
64  60  6,Ax!

 !  ( -6@  A0j(  6 C - ,!

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:151-300
 A4j ( C6    (@6 1  : 0  6,

 A4j A j( 6   )@7,
 AxF

 
@ 
Aj!@ Ak( "@ (  A
 A j! 
Ak"

 

 E
  
 AtA
Ax! AxrAxF
   A
@ - 
Aj"Aq F@  : 
 AxF
 (4! (0! (,! (<!
 (8! A@k  (@AxF@ 
 
6 
 6 
 6
 
 6 
 6 
 6 

 
 )@7 
A
j A j( 6  
Ax6  @  A
 
@ Aj!@ Ak( "@ (  A
 A j! 
Ak"

 

 E
  AtA

A  
 
Ax6  
 A,j") 7 
A
j Aj( 6 
 A j$  	($! 	( ! 	(
!@ 	("AxG@ 	(,! 	((! 
  	(AxF@   6   6   6
   6   6   6 

   	)7  A
j 	A j( 6   Ax6  @  A
 @ Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 E
  AtA

   6
   6   6  Ax6 
 	A0j$ 

~# A k"$  A:  A 6  6
  6 A8j!A !# Ak"$  A(j Aj"@ - (E@ B7 

@@@@@@@@@@@@@ @ - )A F@ - 
"@  Ak": 
 AqE@ B7 

  A: l  6h A j Ax! -  E@Ax!Ax!
	
 - !"	A F@A!
Ax!Ax!


 A : l 	A"G@Ax!Ax!Ax!
	
 A0j 2 - 4!
 (0"AxG@Ax!Ax! !

@@@@@ 
 
 A0j A j> (8! (4!
Ax! (0"	AxG@Ax!


Ax!

 A0j  (0AxG@Ax!


 Aj ;Ax! ("AxF
 Aj Aj) "7  A j 7   )"7  7p (!
 )!A

 Aj  (AxG@Ax!

 A0j 9 (8!
 (4!Ax! (<" (0
A!


 A0j @ (0AxG@ Aj A8j( 6   )07

 Aj 
 (AxG@Ax!Ax!


Ax!A
!
Ax!
 Aj  - E
 - !	@ 	Aq"	A,G@Ax! 	A G



  Aj  - E@Ax!


 - "	A"G@Ax! 	A F
Ax!


 A0j 2 - 4!
 (0"	AxG@ 	!
	
@@@@@ 
 
 A0j @ (0AxF@ Aj 

 Aj A8j( 6   )07
 (AxG


 AxG@ A0jArA A

 A0j  (0AxG
	 Aj ; ("AxF
 Aj Aj) "7  A j 7   )"7  7p (!
 )!


-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:301-450
 
AG@ A0jArA A


 A0j A j> (8! (4!
 (0"	AxF


 AxG@ A0jArA A

 Aj  (AxG
 A0j 9 (8!
 (4! (<" (0

 Aj  - 	!	 - 
 


A  
 B7 

 A4j" )7  Aj Aj( 6  (4! (8!
 (<
6<  
68  64
	
  6<  
68  	64

 Aj A8j( 6   )07
 Aj Aj( "6  A<j 6   )"7  74Ax!

  ( 56  A8j(  6 
 A<j ( 6    (6 9  
: 8  64

 AxF@ AjA A A<j Aj( 6   )74Ax!

 AxF@ A0jArA A E
 
 A

 A@k A j) 7   6`  )p78  64 - 
Aj"Aq G
  : 
 )@! )`! Aj  (AxF@  70  
6,  6(  7   
6
  6  7  A0jAr") 7  
A  
AG6  A
j Aj( 6 

  )7 A
j Aj( 6  A6  @ 
 A
 E
 
 A

 A<j Aj( 6   )74
 AxF

 E
  
 A
 AxrAxF
  
 A
 - 
Aj"Aq F

A  
  : 
  )47 A6  A
j A<j( 6 
 Aj$  A0j" A j( 6   )<7(@ (8"AG@ A j" ( 6   )(7 )h! (d!	 (`! )X! (T! (P! )H!   (8AxF@   6    )7   70   	6,   6(   7    6
   6   7  A
j ( 6 

   )87  A
j A@k( 6   A6  @  A
 E
 	 A

   )(7  A6   A
j ( 6 
 A j$ 
A!@@@  -  "AkA  AqAFAq 
  ("@  ( A
  ("@  ( A
A
! AG

   j" ( "E
   ( A

# Ak"$  Aj Ax!@ - E
 Ax!@@@ - 	"A-k 
 A !

Ax! A1kAqA	O
 A0k!  (" (O
 @ (  j-  A0k"Aq"A	K
  AqA
l"Av@Ax!

 Aq j"Aq G@Ax!

  j! (" (I
 

   : Ax!
   6  Aj$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 






 /  A /  F


	
  Aj" A A	
	 A:  


 A A
  A: 


@@@ Ak 
 /  A /  F


  Aj" A A	
 A:  

 A A
  A: 

  Ax6 
	
   6   6   6 

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:451-600

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  B7 

@ - 	A"F@  Aj"  ($! ( ! (
! (
 AxF@  6  6    - A
F@   )
7  A
j A$j( 6   A 6 

 A6D A 6@ B7L  AjB7X  A j6H  Aj A@k AjI  A6 

  6  6 Aj     - A
F@   )
7  A
j A$j( 6 A 

 A6D A 6@ B7L  AjB7X  A j6H  Aj A@k AjIA
6  E
  A

  B7 

   6
   6   6  A6 
 A j$ 

~# A k"$  A(j @ - (E@  Ax6 

Ax!@@@@@@@@@@@@@@ - )"A k# 
 A"k
          
Ax! (" (O
 @ (  j-  "A,F A Fr A Fr
  (" (I
 

   6 


   -  E@  Ax6 


 - A"G
  A j  (X! (T! (P
 AxF@  Ax6 


  Ax6  E
  A


 Aj  - E@  Ax6 


Ax!@ - A G
  - 
"E
  Ak": 
 AqE@  Ax6 


 A!@@@ Aj  - E@Ax!

~@@ - ""A,G@ A F
 !A ! 
Ax!

  Aj  - E@Ax!

 - 	!
 AqA F@Ax!

 A j  (P"AxG
 B~B

 B~
"BPE
 
 - 
Aj"Aq G

  : 
 A j Ax! (PAxF
   )P7   Aj A j( 6 


 )T!
 - 
Aj"Aq G
	   7   6   : 



   6 
	
 A j  -  E@  Ax6 
	
 - !A G
 - 
"E
  Ak": 
 AqE@  Ax6 
	
  A: 0  6, A4j A,j=@ (4"AxF@@ - 8E
 A j (,"@ (PAxF@ A@k 

 A j A j( 6   )P7@
 (@"AxG@ 5 E A j1  B0 A j3  B ! - D

 A4j A,j= (4"AxF
 

 5 9 A?j1  B0 A=j3  B ! - 8
! - 
Aj"Aq G
   6   : 
   B B7
	
 - 
Aj"Aq G
  : 
 A j  (PAxF@  Ax6 
	
   )P7   Aj A j( 6 

  Ax6 

  Ax6 

   (\6   6   6 

Á  
  Ax6 

A  
A  

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:601-750
Á  
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@@ AF@ A A@  Aj" A A
 A:  

  A : 

  Aj
A:  
  Ax6 

@ AF@ A A@  Aj" A A
 A:  

  A : 

  Aj
A:  
  Ax6  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj A!Ax!A!@@ - E
 Ax! - 	A"G
   Aj  (
! (! (!@ (@ !

A ! AxG@ !

@ E@A!

A ! A H
A -  A! A"E

    !
   6   6A
!
   6    j 6  A j$ 
   
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 






 /  A /  F


	
  Aj" A A	
	 A:  


 A A
  A: 


@@@ Ak 
 /  A /  F


  Aj" A A	
 A:  

 A A
  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ /  A /  G!
  Ax6    : 

A! AF@ /  A /  G!
  Ax6    :  E
  A


-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:751-900
  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 )  A )  R
A

 A A

A

 )  A )  R
A

A  (  A (  F

A
!  Ax6    : 

@@@@@ Ak 
 )  A )  R
A

 A A

A

 )  A )  R
A

A  (  A (  F

A
!  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
~# A k"
$  
 @ 
-  E@  B7 

@@@ 
- A F@ - 
"E
  Ak": 
 AqE@  B7 

  
Aj!
A!# A@j"$  A 6$ B 7
 Aj @@ - E@Ax!

 - !@@@ Aq"A,G@ A F
 @A !

Ax!

  Aj  - E@Ax!

 - !
 AqA F@Ax!

 A(j!
A !A !A !A !
A !A !# A k"$  A j @ -  E@ 
BȀ7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ 
BȂ7 

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A8j 5 (8"AxG@Ax!
	
 A<j!@@@@ - <"Ak 
 A(j  ((AxG
 A8j  (D! (@!
 (<! (8


 A(j  ((AxG@Ax!
	
 A8j  (D! (@! (<!	Ax! (8E

	
 A8j @ (8AxG@ A0j A@k( 6   )87(

 A(j 
 ((AxG@Ax!


Ax!
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 	AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A8j 5 (8"AxG@ !

 - <"Ak
 !Ax!

 A8j @ (8AxF@ A(j 

 A0j A@k( 6   )87(
 ((AxF
 !

 	AxG@ A<jÀ A !

 A(j  ((AxG@ !


 A8j  (D! (<!	 ! (@! (8E



 AxG@ A<jAԀ A ! 


 A(j  ((AxG
 A8j  (D! (@!
 (<! (8E



-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:901-1050
 AxF@ A,jAԀ A  (46D  ),7<Ax! 	E
  	A

  6L  
6H  6D  6@  6< 	!

   - ! -  
 
 !
	
A  
 
B聀7 


Ax!
 A<jÀ AAx!	

  )(7  Aj A0j( 6  (<! (@!
 (D!
  6D  
6@  6< !

  )(7  Aj A0j( 6  (<!	 (@! (D!
  6D  6@  	6<Ax!	

 !  ( =6(  A@k(  6 + - <!
 A j ( +6    ((6 A  : @  6<

 A j A0j( 6   )(7<
 AxrAxF

 
 A
Ax! 	AxrAxF
   	A
@ - 
Aj"Aq F@  : 
 AxF
 (D!	 (@! (<! (L! (H! A(j  ((AxF@ 
 6 
 6 
 	6
 
 6 
 6 
 6 

 
 )(7 
A
j A0j( 6  
Ax6  @  A
 	E
  	A

A  
 
Ax6  
 A<j") 7 
A
j Aj( 6 
 A j$  )0! (,! (("AxF
 )8! ($" (
F@ A
j
 (  Alj" 7  7  6  6   Aj6$ Aj  - 	! - 
 
Ax!

 
 )
7 
A 6  
A
j A$j( 6 

 
 7 
 6 
A6  ($"@ ( !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

 (
"E
  (  AlA
 A@k$  - 
Aj"Aq G
  : 
 
(
 
(! 
(
! 
(! 
Aj  
(AxF@   6
   6   6  A 6 

   
)7  A
j 
A
j( 6   A6  @ !@ ( " @ Aj(   A
 A
j( " @ Aj(   A
 Aj! Ak"
 

 E
  AlA

  B7 

Á  
Á  
  A6    
Aj") 7  A
j Aj( 6 
 
A j$ 
# Ak"$   @ -  E@  Ax6 

@ - A k"@ AG@  Ax6 

  Aj A܁ A (AxF
   )7   Aj A
j( 6 

  Aj A߁ A (AxG@   )7   Aj A
j( 6 

  Ax6   A : 

  Ax6   A: 
 Aj$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ (  A (  G!
  Ax6    : 

A! AF@ (  A (  G!
  Ax6    :  E
  A

-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1051-1200

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ )  A )  R!
  Ax6    : 

A! AF@ )  A )  R!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
~# A0k"$   Ax!@@@@@ -  @@ - "A"G@ A F
  A:    Ax6

 Aj -@ ("AxF@Ax!

   / 
; 	  A
j Aj-  :   - 
!   (6
   : 
  A:     6

 - 
"E
  Ak": 
 Aq
Ax!
  A:     6

A  
  Aj!# Ak"$  Aj" - - !
@@@@@@@@ ("AxF@   ("AxG@ Aj A
j-  :    / 	;  - !


 
Ak
 Aj A
j-  :    / 	; 
 (
!  / ; 	 A
j Aj-  :    6
  
:   6 A:  

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1201-1350
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G

  : 
 A j  (PAxF@ A :    
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1351-1500
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A


-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1501-1650
  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
	  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG@Ax!


 A j  (\!
 (X! (T!	Ax! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG
 A j  (\! (X!
 (T! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 	AxG
 A,jA AAx!	

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!


-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1651-1800
 	AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T!	 (PE



 AxG@ A,jA A	 E


 A j  (`AxG
	 A j  (\! (X!
 (T! 
! (PE



 AxG
 A jA A	  (\64  )T7, 	E
 
 	A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  6  
6
  
6  	6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   	@ 
 	A
 E
 
 A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T! (X!
 (\!
  64  
60  6,

  )`7  Aj A j( 6  (T!	 (X! (\!

  
64  60  	6,Ax!	

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 AxrAxF

 
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !A !
# A0k"
$  
Aj!
# Ak"$  A(j @@ - (E@ 
A:   
Ax6

@@@@@@@@@@@@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@ 
A:   
Ax6

  A j Ax!Ax! -  E@Ax!Ax!	

 - !"A"G@ A F
Ax!Ax!	Ax!

 A j 
 (T"AxG@Ax!	Ax! !


 A j!@@@@@ - X" 
 A j  (pAxG@Ax!	

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1801-1950


 A j  (`! (\! (X! (T@Ax!	

Ax!	A 

 A j  (pAxG@Ax!	Ax!

 A j  (`! (\! (X!Ax! (T@Ax!	

Ax!	A 

 A j @ (TAxG@ A j A j( 6   )T7p

 A j 
 (p"AxG@Ax!	Ax!

 - t!Ax!Ax!	A

 A j  (pAxG@Ax!

 A j  (`! (\! (X!	 (T@Ax!
	
Ax!A 

 A j @ (TAxG@ A j A j( 6   )T7p

 A j 
Ax!	 (p"AxG@ )t!Ax!

Ax!A 
! Aj  - E
 - !@ !
 !
 A,G@Ax! A G
 E


  Aj  - E@Ax!

 - "A"G@Ax! A F
Ax!

 A j 
 (T"AxG@ !


@@@@@@@@ - X" 
 A j @ (TAxF@ A j 

 A j A j( 6   )T7p
 (p"AxG


 
 A j @ (TAxF@ A j 

 A j A j( 6   )T7p
 (p"AxG
 - t!A!

 AxG@ A0jA A

 A j  (pAxG
 A j  (`! (\! (X! 
 (TE


 AxG@ A0jA A

 A j  (pAxG

 A j  (`! (X! (\" (TE


 )t!
	
 	AxG@ A0jA AA ! 	E
  	A

 A j  (pAxG
	 A j  (`! (\! (X!	 
 (TE



 A0jA A

 
! 

! Aj  - 	! - 
 





 
A:   
Ax6

Ax!Ax!	
 A jA A - h! (d"AxF
 A8j A j(  6    ( i6 5  : 4  60

  74  60


  )p7  Aj A j( 6  (X!	 (\! (`!
  68  64  	60A !


  )p7  Aj A j( 6  (X! (\! (`!
  68  64  60A !Ax!A !


  )p7  Aj A j( 6  (X! (\! (`!
  68  64  60

  ( Y6p  A j(  6 s - X!

 AxG
 A0jA A
A !Ax!A !

@ AxG"E@ A0jA A

 	AxG@  : - - 
Aj"Aq G
  : 
 A j  (TAxF@ 
A:   
 6$ 
 6  
 	6
 
 6 
 
6 
 6 
 6
 
 
6 
 6 
 A,jAr"/  ;  
Aj Aj-  :  



-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:1951-2100
 
 )T7 
A
j A j( 6  
A:   @ 
 A
 @ 
 A
 	E

  	A


 A jA A  (`68  )X70 E
  
 A
A! E@A !

 
 A

 !
 !

 A8j ( s6    (p6 5  : 4  60

 A8j A j(  6    ( u6 5  - t: 4  60
A !A !
 	AxrAxF@ 


  	A 

 AxrAxF
  
 A E


 

 AxrAxF
  
 A
 - 
Aj"Aq G
  : 
 
 )07 
A:   
A
j A8j( 6 
 Aj$ 
 
@@ 
- "AG@ 
Aj 
- 
:   
 
/ 	; 
(
! 
(!
 
(! 
(!
 
(
! 
( !	 
($! 
((! 
(,!
 
  
-  
 A:   Ax6 @ 
 A
 
@  
A
 E AGr
  A

 
)
!  
(6
  7 A:  

 
- A G@ A:   Ax6 @ 
 A
 
@  
A
 E AGr
  A

   :    
6$  6   6
  	6  6  
6  6
  
6  6  
/;  Aj 
Aj-  :  
 
A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j  (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG
 A j  (\!
 (X! (T! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG@Ax!

 A j  (\! (X!
 (T!	Ax! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2101-2250

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 AxG
 A jA A  (\64  )T7,Ax!

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j  (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T! (PE



 	AxG@ A,jA A	 	E


 A j  (`AxG
	 A j  (\! (X!
 (T!	 
! (PE



 	AxG
 A jA A	  (\64  )T7, E
 
 A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  	6  
6
  
6  6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   @ 
 A
 	E
 
 	A

   - ! -  
 
 !

	


 A:   Ax6

Ax!
 A,jA A

  )`7  Aj A j( 6  (T!	 (X!
 (\!
  64  
60  	6,

  )`7  Aj A j( 6  (T! (X! (\!

  
64  60  6,Ax!

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 	AxrAxF

 
 	A
 AxrAxF
  
 A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2251-2400
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 

 !A !A !
# A0k"$  Aj!# A k"$  A j @@ -  E@ A:   Ax6

@@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ A:   Ax6

  Aj Ax!Ax!	 - E@Ax!


 - "A"G@ A F
Ax!Ax!


 A j ' (P"
AxG@Ax! 
!
	
 A j!@@@@ - T"
 
 A j  (`AxG@Ax!


 A j  (\!
 (X! (T!	Ax! (P

A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`"AxG@Ax!

 - d!Ax!A

 A j  (`AxG
 A j  (\! (X!
 (T! (P
A 

 A j @ (PAxG@ A j A j( 6   )P7`

 A j 
 (`AxG@Ax!


Ax!A 
! Aj  - E@ !



 - !@ !
@@@@ A,G@Ax! A G
 E
	 	AxG
 A,jA AAx!	

  Aj  - E@Ax!

 - 	"A"G@Ax! A F
Ax!

 A j ' (P"AxG@ !

@@@@@ - T"
 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`AxG


 
 A j @ (PAxF@ A j 

 A j A j( 6   )P7`
 (`"AxG
 - d!A!
 
!

 	AxG@ A,jA A

 A j  (`AxG

 A j  (\!
 (X! (T!	 (PE



 AxG@ A,jA A
 E


 A j  (`AxG
	 A j  (\! (X!
 (T! 
! (PE



 AxG
 A jA A
  (\64  )T7, 	E
 
 	A

 A,jA A

  6@  : ) - 
Aj"Aq G
  : 
 A j  (PAxF@ A:    
6  6  
6
  
6  	6  A(jAr"/  ;   A@k"
) 7 Aj Aj-  :   A j 
Aj) 7 

  )P7 A
j A j( 6  A:   	@ 
 	A
 E
 
 A

   - ! -  
 
 !

	


 A:   Ax6

-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2401-2550

Ax!
 A,jA A

  )`7  Aj A j( 6  (T! (X!
 (\!
  64  
60  6,

  )`7  Aj A j( 6  (T!	 (X! (\!

  
64  60  	6,Ax!	

  ( U6`  A j(  6 c - T!

 A4j ( c6    (`6 1  
: 0  6,

 A4j A j( 6   )`7,

 A4j A j(  6    ( e6 1  - d: 0  6,
 AxrAxF

 
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
  ),7 A:   A
j A4j( 6 
 A j$ 
 
@@ - "
AG@ Aj - 
:    / 	; (
! (! (!	 (!
 (
! ( !
 ($! ((! (,!
   -  
 A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

 )
!  (6
  7 A:  

 - A G@ A:   Ax6 @  A
 
@  
A
 E 
AGr
  A

   
:    
6$  6   6
  
6  6  
6  	6
  6  6  /;  Aj Aj-  :  
 A0j$ 
 Aj$  - 
Aj"Aq F@  : 
   )7   Aj Aj) 7   Aj Aj) 7   Aj A j) 7   A j A(j) 7 

A  
 A0j$ 
A  
A  
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak	 







 /  A /  F


	
  Aj" A A

	 A:  


 A A
  A: 


@@@ Ak	 
 /  A /  F


  Aj" A A

 A:  

 A A
  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
~# A k"$   @ -  E@  B7 

@@@ - A F@ - 
"E
  Ak": 
 AqE@  B7 

  Aj!
A!# A k"$  A 6
 B7 Aj @@ - E@Ax!

 A j! - !@@@ Aq"A,G@ A F
 @A !

Ax!

  Aj  - E@Ax!

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2551-2700

 - 	!
 AqA F@Ax!

 A0j!A !	A !
A !
B !B !# A k"$  A j @ -  E@ Ax6 Ax6 

@@@@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ Ax6 Ax6 


  Aj Ax!Ax! - E
 - "
A"G@ 
A F
	Ax!

 A(j 6 (("AxG
~@@@ - ,"
Ak 
 A(j  ((AxG
 A j ) (H
 A j) ! )P!B

 A j  (HAxG
 A(j  (4!
 (0!	 (,! ((
B 

 A(j @ ((AxG@ A j A0j( 6   )(7H

 A j 
 (HAxG
B 
! Aj  - E
 - ! A j!
@@@ A,G@Ax! A G

 AxG



  Aj  - E@Ax!


 - 	"A"G@Ax! A F

Ax!


 A(j 6 (("AxG
	@@@@ - ,"
Ak 
 A(j @ ((AxF@ A j 

 A j A0j( 6   )(7H
 (HAxG


 AxG@ A(jA A

 A j  (HAxG
	 A(j  (4!
 (0!	 (,! ((E



 
 A(j  ((AxG
 A j ) (H
 
) ! )P!B!
   - ! -  




 P@ A(jA AAx! E

 	 A


  7(  
6@  	6<  70 !


 A(jA A


 Ax6 Ax6 


A  
 A j A0j( 6   )(7L
  )P7,  (L6(

 A,j" )H7  Aj A j( 6  (,! (0!	 (4!

  
60  	6,  6(Ax!

 !  ( -6H  A0j(  6 K - ,!

 A0j ( K6    (H6 -  
: ,  6(

 A(jA AAx!

 A0j A j( 6   )H7(
Ax! AxrAxF
  	 A
@ - 
Aj"Aq F@  : 
 AxF
 )@! (<! A j  (HAxF@  )(7   7  6  6 Aj A0j) 7 

  )H7  Aj A j( 6  Ax6 E
  A

A  
  )(7  Ax6 Aj A0j( 6 
 A j$  )4! (0! (@"
AxF
 A(j"
 Aj( 6   ) 7  (<!
 (
" (F@# A k"$  Aj"( "AF@A A  
A At Aj A J"	 	AM"At!    At6
  (6AA 
6 Aj 	A IAt  Aj (@ (
 ( 
 (
!  6   6 A j$ 
 ( Atj" 
6  
6
  7  6   ) 7 A
j 
( 6   Aj6
   - ! -  
 
Ax!

 
 )7 
A 6  
A

-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2701-2850
j A
j( 6 

 
 7 
 6 
A6  (
"@ (Aj!@ Ak( "@ (  A
 A j! Ak"
 

 ("E
  ( AtA
 A j$  - 
Aj"Aq G
  : 
 (
 (! (
! (! Aj  (AxF@   6
   6   6  A 6 

   )7  A
j A
j( 6   A6  @ Aj!@ Ak( " @ (   A
 A j! Ak"
 

 E
  AtA

  B7 

Á  
Á  
  A6    Aj") 7  A
j Aj( 6 
 A j$ 
# Ak"$  Aj @ - E@  B7 

@ - 	A"F@  A@k  (L! (H! (D! (@
 AxF@  6  6 Aj   - A
F@   ) 7  Aj A(j) 7   A 6 

 A j A8j) 7  A j A0j) 7  A j A(j) 7  A j A j) 7   )7@ A6l A 6h B7t  A@k"B 7  AjB7  Aj6p  Aj A j I  A6 

  6  6 Aj     - A
F@   ) 7  Aj A(j) 7 A 

 A j A8j) 7  A j A0j) 7  A j A(j) 7  A j A j) 7   )7@ A6l A 6h B7t  A@k"B 7  AjB7  Aj6p  Aj A j IA
6  E
  A

  B7 

   6
   6   6  A6 
 Aj$ 
~# Ak"$  Aj Ax!@ - E
 Ax!@@@ - 	"A-k 
 A !

Ax! A1kAqA	O
 A0kAq!  (" (O
 @ (  j-  A0kAq"A	K
  B
~"B PE@Ax!

  "j" I@Ax!

 (" (I
 

   6Ax!
   6  Aj$ 
~# A k"$  Aj    - E@  Ax6A

@@@@ - "A-k 
  Ax6A

   B 7

 A1kAqA	O@  Ax6A

 A0kB! @ (" (O
 @ (  j-  A0k"AqA
O
  Aj B B
@ )B R
  )" B|" T
  (" (I



  Ax6A

   7
A 
6  A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 A A	E


 )  A )  R
  Ax6   A: 

@@ Ak 
 A A	E


 )  A )  R
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@    

     E

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:2851-3000
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 A AE


 A A
  Ax6   A: 

@@ Ak 
 A AE


 A A
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak 





 A AE


	
  Aj" )  A )  R
	 A:  


 A A

  A: 


@@@ Ak 
 A AE


  Aj" )  A )  R
 A:  

 A A

  A: 

  Ax6 
	
   6   6   6 

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! A
F@ A A
A G!
  Ax6    : 

A! A
F@ A A
A G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3001-3150

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 )  A )  Q

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 )  A )  Q

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  Ax6 

   6   6   6 

  A : 

  A : 
  Ax6  E
  A

  Ax6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@ - 	A"F@  Aj  (
! (! (! (
 AxF@A! AF@ A AA G!
  Ax6    : 

A! AF@ A AA G!
  Ax6    :  E
  A

  Ax6 

   6   6   6 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@@ Ak
 


 A AE


	
  Aj" )  A )  R
	 A:  


 (  A (  G
  A: 


@@@ Ak 
 A AE


  Aj" )  A )  R
 A:  

 (  A (  G
  A: 

  Ax6 
	
   6   6   6 

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3151-3300

  Aj
A:  

  A : 
  Ax6  E
  A

  Aj
A:  

  A : 
  Ax6 
 A j$ 
	# A k"$  A(j @ - (E@  B7 

@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@  B7 

  A j Ax!Ax! -  E
 - !"A"G@ A F
Ax!

 A0j"	 7 (0"AxG
@ - 4"@ 	 @ (0AxG@ A j A8j( 6   )07@

 A@k 
 (@AxG
	

 A@k  (@AxG
 A0j : (<! (8! (4! (0

 Aj  - E
 - !@@@ A,G@Ax! A G
	 AxG



  Aj  - E@Ax!
	
 - "A"G@Ax! A F
	Ax!
	
 A0j"	 7 (0"AxG
 - 4"@ 	 @ (0AxF@ A@k 

 A j A8j( 6   )07@
 (@AxG



 AxG@ A4jA A E



 A@k  (@AxG
 A0j : (<! (8! (4! (0E


 - 
Aj"Aq G

  : 
 A0j  (0AxF@   6
   6   6  A 6 

   )07  A
j A8j( 6   A6  E
  A

 Aj  - 	! - 
 


A  
  B7 


 A4j" )@7  Aj A j( 6  (4! (8! (<!
  6<  68  64

 !  ( 56@  A8j(  6 C - 4!
 A<j ( C6    (@6 9  : 8  64

 A4jA A

 A<j A j( 6   )@74
 AxrAxF

  A
 - 
Aj"Aq F

A  
  : 
   )47  A6   A
j A<j( 6 
 A j$ 
~# A@j"$  Aj Ax!A!@  @ - E
 Ax! - 	A"G
   A0j  (<! (8! (4! (0E@@ AxG@ !

@ E@A!

A ! A H
A -  A! A"E

    !
 Aj 6   6(  6$  )$"7  A
j 6    7A 

  6(  6$A
!
 A j j 6  Aj A,j( "6   )$"7  A
j 6    7A
6  A@k$ 
   
~# A k"$  A(j @ - (E@  Ax6  Ax6 

@@@@@@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@  Ax6  Ax6 

  A j Ax!Ax! -  E
 - !"A"G@ A F
Ax!


 A0j 8 (0"AxG
	~~@@@@ - 4" 
 A0j  (0AxG
 A j < (P

 )X!
B!	B 

 A0j  (0AxG

 A j + (P

 )X!
B

 A j  (PAxG
 A0j  (<! (8! (4! (0
B 

 A0j @ (0AxG@ A j A8j( 6   )07P

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3301-3450

 A j 
 (PAxG

B 
!	B 
!
 Aj  - E
 - !@@@@@ A,G@Ax! A G
 
P
 	
 A jA A  )T74  (P60

  Aj  - E@Ax!

 - "A"G@Ax! A F
Ax!

 A0j 8 (0"AxG
@@@@ - 4" 
 A0j @ (0AxF@ A j 

 A j A8j( 6   )07P
 (PAxG


 

 A0j  (0AxG
 A j + (P
 )X!
B!


 	
 A0j  (0AxG

 A j < (P

 )X!
B!	

 AxG@ A0jA A 


 A j  (PAxG
 A0j  (<! (8! (4! (0E

	
Ax! AxF@ A0jA A

  6H  6D  
78  
70 !

 A0jA A

 A0jA A

 Aj  - 	! - 
 



A  
  Ax6  Ax6 

 A jA A  )T74  (P60
	
 A4j" )P7  Aj A j( 6  (4! (8! (<!
  68  64  60
	
 A j A8j( 6   )07T
  )X74  (T60

 A j A8j( 6   )07T
  )X74  (T60

 !  ( 56P  A8j(  6 S - 4!
 A8j ( S6    (P6 5  : 4  60

 A8j A j( 6   )P70
Ax! AxrAxF

  A
Ax!
@ - 
Aj"Aq F@  : 
 AxF
 )H!	 (D! A j  (PAxF@   )07    	7   6   6  Aj A8j) 7 

   )P7   Aj A j( 6   Ax6 E
  A

A  
   )07   Ax6  Aj A8j( 6 
 A j$ 
~# Ak"$  Aj Ax!A!  @@@@ - E
 Ax! - 	A"G
   A j  (\! (X! (T! (PE@ AxF@  6$  6  A(j   - (A
G
  )07A !

  6$  6  A(j   - (A
F@  )07A 

 A j A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7P A6| A 6x B7  A j"B 7  A jB7  Aj6 AjAr A j IA
! E
  A

  6  6A
!
 Aj j 6 

 A j A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7P A6| A 6x B7  A j"B 7  A jB7  Aj6 AjAr A j IA!
 
  )!A 

 )!   (6A
6    7 Aj$ 
# A0k"$  Aj ( "@ - E@  Ax6 

@@@@ - "A,G@ A F
 - 
  Ax6 

 - 
   Aj  - E
 - !

 A : 

  Ax6   A : 

  Ax6 

 A"G@Ax!  Ax  A F6 

 Aj @@ - E@Ax!

 - 	A"G@Ax!

  A j  ((! ($! ( E@ AxrAxF
  A

 AxF
 (,!
   6   6   6 


-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3451-3600
  Ax6   A: 
 A0j$ 

	# Ak"$  Aj ( "@ (AxF@   -  E@  Ax6 

@ - A F@  Aj A A (AxG
  B7 

 Aj!# A k"$  A j @ -  E@ Ax6 

@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ Ax6 


  Aj  - E@Ax!

Ax! - "A"G@ A F


 A j" 0 (D"AxG
 - H"@  @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8AxG
A 

 A j @ (DAxG@ A@k A j( 6   )D78

 A8j *
 (8"AxG
 (<!	A
! Aj  - E@Ax!

 - !@@ Aq"A,G@Ax! A G
	 



  Aj  - E@Ax!
	
 - 	"A"G@ A G
	Ax!
	
 A j"
 0 (D"AxG
@ - H"@ 
 @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8AxF


 
 A j @ (DAxF@ A8j *

 A@k A j( 6   )D78
 (8"AxG
 (<!	A!
   - ! -  
 
Ax!

 Ax6(  	6,

 Ax6 

A  
  )<7,  6(

 A(jAǀ A

 A0j A@k( 6   )87(

  ( I68  A j(  6 ; - H! !
 A0j ( ;6    (86 -  : ,  6(

 A(jAǀ A
@ - 
Aj"Aq F@  : 
 (,! (("AxG
 A j  (DAxF@ Ax6   6

  )D7  Aj A j( 6 

A  
  (06  6  6 
 A j$  (AxF@   (6  B7 

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 
 Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  ) @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!# Ak"$  (! Aj  ("@ (AxF@ - 
! (!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj   ("AxG
 AF
  A j! AtA k!@ (" ( F@ 
 ( jA,:    Aj6 Aj   ("AxG
 A j! A k"
 

  

  )7  6 

  )7  Aj A
j( 6 
 Aj$ @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ Aj 

 Aj  ( (
@ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 


-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3601-3750

# Ak"	$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 	Aj!# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
# Ak"$  A
j"
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj! Aj!
# A k"$  Aj"
  - 
! (!
@@ ("AxF@  :   
6
 
 A
j"AȘ A 
? (AxG
 
 AИ A 
Aj? (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  6 

  )7  Aj A
j( 6 
 A j$ 
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxG
 Aj!# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 ( jA":    Aj"6 (  kA	I  A	 ( 
 (jA A	  (A	j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj!# A@j"$  A 6 B7
 A: 8 A 6( A 64 AȤ 60 A 6  A 6  A
j6,@ Aj AjE@ (
!   (" ( @  A
 A@k$ 

A A7 A?jA A  

@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   6  6 

  )7  Aj A
j( 6 
 A j$ @ 	(AxF@  Ax6 

   	)7   Aj 	A
j( 6 
 	Aj$ 
# A k"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  Aj  (" (
 ("@  A
@ (AxF@  Ax6 

   )7   Aj Aj( 6 
 A j$ 
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  ( (@ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 

~# A@j"$  Aj  -  ! (
!@@@@@ ("AxF@ (! - ! E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"A (  6   AjA /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj  F ("AxG
 (" ( F


   / !; 	  A
j A#j-  :     :    6   6 

 

   )
7   6 

 ( jA,:    Aj"6 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"Aă (  6   AjAȃ /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6, Aj!# Ak"$  ) ! Aj) !# A k"$  !
# A k"$ @ "
PE@ 
B֭
Z@ 
B֭
R@ 
 
B֭
"B֭
~}"P 
B֭
Tq
Bȝ!B!
@@  } 
 T}"

-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3751-3900
B Y@ 
 }!
 
 ! 
P
 
!
 B? B! 
B!
 B!


 
B֭
"
 !
 
 
B֭
~}!
B !

 
 
 
"
 
~}!
B!

B֭
!
@A?A  
y"k BQ"A qE@ E
B  A?q"
B֭
A  kA?q!B֭
 
!


B֭
 A?q!B !

  
7   7B A?q! Aj) ! ) !@@ 
 } 
 T}"
B Y@ 
 }!
  ! 
P
 
!

 B? B! B! B!


 
B֭
"
 !
 
 
B֭
~}!
B !

 
 
B֭
"
B֭
~}!

  
7  
7  Aj 7   7 A j$  ) !
 Aj" Aj) 7  
7  A j$   Aj) "
7(  )"
7   
 
B֭
   Aj) }  ) "
T}"
78   
}"
70@ 
 
P@ A6| A 6x B7  A jB7P  A j6 ( ( A j!

 B7p  A0jB7h A6d A6T A 6P A6\ A:  A 6 B07 B7 A6x  A j"6`  A j6X A j A j" A 6X B7P A:  A 6 A 6 A 6 A 6 A 6x  6 A j E@ (P!  (T" (X! @  A
@ 
  A.
  (L! (H!@ "@  j"
Ak"-  "AtAu"	A H@ 	A?q 
Ak"-  "AtAu"	A@N@ Aq

 	A?q 
Ak"-  "AtAu"	A@N@ Aq

 	A?q 
Ak"-  AqAtr
Atr
Atr!
  k! A0F


   
  (D"@  A
A !

 (D"@ (H A
A!

A A7 AjA A  
 Aj$  
 (
!   (" ( @  A
 ( "AxF@   A 

   )7   6 
 A@k$ 
A A7 A?jA A  
X @@@@ AqAk 
   A A
   A A
   A A
   A A

# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kA
I  A
 ( 
 (j A
  (A
j"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!# Ak"$  (! Aj  ("@ (AxF@ - 
! (!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj   ("AxG
 AF
  Aj! AlAk!@ (" ( F@ 
 ( jA,:    Aj6 Aj   ("AxG
 Aj! Ak"
 

-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:3901-4050

  

  )7  6 

  )7  Aj A
j( 6 
 Aj$ @ (AxF@  Ax6 

   )7   Aj A
j( 6 
 Aj$ 
# A k"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6  (  kK    ( 
 (j    ( j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ Aj 

 Aj  Aj  (" (
 ("E
   A
@ (AxF@  Ax6 

   )7   Aj Aj( 6 
 A j$ 
@@@@@@@@@@@@@@@  -  
	


 
  (!  (" ( "@   
  ("E




@  - 
A
I
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E




@  (
AG
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E



  (
"@  ( A
  (!  (" ( "@   
  ("E
	


  (
"@  ( A
  (!  (" ( "@   
  ("E

	
  (!  (
" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E
     (

    (
@  ( AxG@    ( "@  ( AlA
  ("@  (!@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

  (
"@  ( AlA
  Aj  ("@  (
 AlA
A$  ($"AxG


  (!A
! E
    j( A

	A -  A!@AA"@ A A!
 @A ! A H
A -  A! A"E

   !
 (" (
F@# A k"$  A
j"( "AF@A A  
A!	A At" Aj"  K" AM"Al!
 A֪*IAt!@ E@A !	

  Al6

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4051-4200
  (6
  	6 Aj  
 Aj (@ (
 ( 
 (
!  6   6 A j$ 
 Aj"(  Alj" 6  
6  6
 A6  
6 A6   Aj6   ) 7   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7   Aj ) 7 
AA 
   
2 (
"AqE@ A qE@   
   
   
~ (
"AqE@ A qE@   
# Ak"$   ) !A ! @   jA j Aq"A0r A7j A
I:    Ak!  BT! B! E
 
  Aj"AO@ AA  
 AA A   jAjA   k!  Aj$   
   
  ( "@  ( A

D@  -  A
I
   (!  (
" ( "@   
  ("E
     (

D@  ( AG
   (!  (
" ( "@   
  ("E
     (

  A A
# Ak"$ @@@@@A  ( Ak" AOAk 
   Aj6 A A AjA 

 A A

   6
 A؋ A A
jAȋ 

 A݋ A


 A A
!  Aj$   
   (  ( 
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
  ( j :     Aj6

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ A 
C   (   ("kK@      (!
  ( j      j6A 
# Ak"$ @@@@@@@@@@@@@  -  Ak
	


 
   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A܌ AA A  A
jǍ A A	 A
jA 


   Aj6
 A A
A A  A
jA A A	 A
jA 


   Aj6
 A A
A A  A
jA A A	 A
jA 
	
   Aj6
 A AA A  AjA A A  AjA A  A
jA 

   Aj6
 Aō A
A A  A
jA A A	 A
jA 

   Aj6
 Aύ A
A A  A
jA A A	 A
jA 

   Aj6
 Aڍ AA A  A
jA A A	 A
jA 

   Aj6
 A AA A
  A
jA A A  AjA A  A
jA 

   Aj6
 A A
A A
  A
jA A A  AjA A  A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 

   Aj6
 A A
A A  AjA A A	 A

-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4201-4350
jA 

   Aj6
 AԎ AA A  AjAĎ A A	 A
jA 
!  Aj$   
<# Ak"$    6
 A A
A A	 A
jA !  Aj$   
  A A
M# Ak"$    Aj6
 A AA A
  A A A
 A
jA !  Aj$   
# Ak"$ @@@@@@@@@@@  -  Ak
	
 
   Aj6 A A
A A AjA؏ 


 A A
	
 A A


 A A

 A A

 A A

 A A

 Aɐ A


 AՐ A

   Aj6 A AA A AjA 

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
# Ak"$ @@@@  ( Ak 
 A A

 A A

 A A

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
	# Ak"$ @ Aj"@@ Ak"@ At! A K
A -  A!
 A"E
  6  6

 A 6
 B 7# A k"$  Aj"( "AF@A A  
A!
A At"	 Aj"
 	 
K"	 	AM"
At!
 	AIAt!	@ E@A !


  At6
  (6
  
6 Aj 	 
 Aj (@ (
 ( 
 (
!  
6   6 A j$  (!
  6  6 A! A6
 @  Atj"
Ak"	 k"
Av" (AkK@ Aj!# A k"$  Aj"E@A A  
A!A ( "At"
   
I" AM"
At!
 AIAt!@ E@A !

  At6
  (6
  6 Aj  
 Aj (@ (
 ( 
 (
!  
6   6 A j$  (
!
 ( Atj  
   j"6
   (  	(  
Ak(  (" @ (  AtA
 Aj$ 
Aș  
A  
 
  
)

~# Ak"
$  
A
j"
  
A jB 7  
A jB 7  
A jB 7  
B 7P 
A0j" 
A j 
 
- , 
Aj" 
A j"
) 7  
Aj" 
A@k"
) 7  
Aj" 
A8j"
) 7  
 
)07 
Aj"
 
Aj"  
Aj" 
  Aԛ ) 7  A̛ ) 7  Aě ) 7  
A ) 7 
   
Aj"  
 A ) 7  A ) 7  A ) 7  
Aܛ ) 7 

-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4351-4500
A j"  # Ak"$  Aj"      A j" Aj) " 7  A j" Aj) "!7  A j" Aj) ""7   ) "#7` Aj"  7  Aj"
 !7  Aj"
 "7   #7  Aj"   Aj") 7  
 Aj") 7  
 Aj"	) 7   )7     ) " 7  Aj" 	) 7  Aj" ) 7  Aj"  7   )" 7   7 A j A j" Aj"  A8j) " 7   A0j) "!7   A(j) ""7   ) "#7`   7  
 !7  
 "7   #7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7 A@k"    A j) 7  
 A j) 7  
 A j) 7   )@7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7     ) 7  
 ) 7  
 ) 7   )`7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7        ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) 7  
 ) 7  
 	) 7   )7     ) " 7   	) 7   ) 7    7   )" 7   7   A !@ Aj" Aj"   ) 7  
 ) 7  
 	) 7   )7 Ak"
 
 Aj" Aj") 7  Aj" Aj"	) 7  Aj"
 Aj"
) 7   )7   A !@ Aj" Aj"   ) 7  	 ) 7  
 
) 7   )7 Ak"
 
 Aj Aj) " 7  Aj Aj) "!7  Aj Aj) ""7   )"#7 
Aj  7  
Aj !7  
Aj "7  
 #7   Aj"  
A  (  (F ( (Fq ( (Fq (
 (Fq ( (Fq ( (Fq ( (Fq (
 (Fqk:   Aj$  
AjB 7  
AjB 7  
AjB 7  
B 7 
Aj"  
 
-   
Aj) 7   
Aj) 7   
Aj) 7  

-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4501-4650
 
)7  # A k"$  A0j ) " B B A@k  B Bp A j   )""|"! )0|" B Bp Aj  B "# )"$   !T A8j)  ! "T|||"%|"!B Bp  !B "' ! #T  B |"# )@"& )|"" $ %V|"$|"%|" B Bp  B "(   'T !B |"' " $V A j)  " &T||"$ ) |"! # %V|"#|"%|"&B|")PB}"" " & (T  B |"& ! #V A(j)  ! $T||"# )|"  % 'T|"$|"%|"! "T| !B} !T|B}B?"" "   $V Aj)    #T||"# ) |"  % &T|"!| !T|B?"" "   !V Aj)    #T||"!|"  !T|  B|  T|B}B? )|Aq!
 A j$  
Aj    
sAsAq  
) 7   
) 7   
) 7  
A :  
 
)07 
- , 
- q!   A  : D 
Aj$ 
~# A@j"$   ) "BT@ - @" B"BX@  j"A:   A?s"@ AjA  
 BB BB B%B BB8 B+B  B; BB? B
B!@ A8sAM@   A A0jB 7  A(jB 7  A jB 7  AjB 7  AjB 7  AjB 7  B 7   78   A

  7 8   A
 A : @   (
"At AqAtr AvAq Avrr6 
   ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    (
"At AqAtr AvAq Avrr6 
   ("At AqAtr AvAq Avrr6    ("At AqAtr AvAq Avrr6    ( " At  AqAtr  AvAq  Avrr6   A@k$ 
A  
A  

# Ak"$  Aj"A A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  AjA A  A	jA A  A	jA A  A
jA A  A
jA A  A A "A j A A!@@ AqE@ Aj  AvA lj

 Aj" A kA  Aj  
  AjA A j! Aj"AG
 
 A
jA A  Aj! Aj!
 Aj!
 A
j!
 A
j!
A!A!@  j-  ! A
jA A   AqvAq! !A!@ Aj" A
j" A@j  sAkAvAq"	 
 
 A k 	 
 
  	  A  A j! Aj"AG
 
  A
j"A  Aj"    A  @     Aj"  A
j"   A  Ak"Av!


   A
jA  Aj$ 
#  A A   ( -  " A
A  
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A@k Aj) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A j Aj$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  A@k Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj A j) 7   ) 7P  ) 78  ) 7h A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7    A j  A8j A j Aj$ 
# Ak"$  A(jA A ! AjA ) 7  AjA ) 7  AjAء ) 7  B 7  AС ) 7 @ A O@  Av"7       A@qj A?q"

   
  : h A j" A  Aj"B 7  Aj"B 7  Aj"B 7  B 7  Aj Aj^A -  A A"E@AA  
  )7    A 6   6  A 6  Aj ) 7   Aj ) 7   Aj ) 7   Aj$ 
L"~# Ak"$ A ( !#  " (!  (!  ( !  A
A "(!
 (!  ( ! A
A "(! (! ( ! A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 A(j Aj( 6   )7  A jA A A j A6H
 @  A
@@ (HAG@ Aj A j) 7  Aj A j") 7   )H7 (`! (d! )h!& (p! (t! )x!' Aj  
@ (AxG@ A4j Aj) 7  A,j Aj) 7   )7$ A
:  

  Aj( 6   )7H A jA A  A j
  @   A
 -  A
F@ (8! (4!
 (0!
 (,!$ ((!" ($!
 Aj!A !# A k"$  A: 
 A 6  6  6  A j!
# A0k"$   Ax! @@@ -  @@ - " A"G@  A F
 
A:   
Ax6

 Aj .@ (" AxF@Ax! 

 
 / 
; 	 
A
j Aj-  :   - 
! 
 (6
 
 : 
 
A:   
  6

 - 
" E
   Ak" : 
  Aq
Ax! 
 
A:   
  6

A  
  Aj!# Ak"
$  
Aj" . 
- !@@@@@ 
(" AxF@   
(" AxG@ 
Aj 
A
j-  :   
 
/ 	;  
- !

 Ak
 
Aj 
A
j-  :   
 
/ 	; 
 
(
!  
/ ; 	 A
j 
Aj-  :    6
  :    6 A:  

# A k"$  A j!A ! # Ak"$  A j @@@ -  E@ A:   Ax6

@@@@@@@@@@@@ - !A F@ - 
"E
  Ak": 
 AqE@ A:   Ax6


-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4651-4800
  Aj Ax!A! - E
 - " A"G@  A F
Ax!

 A j" % (X" AxG
 Ar!@ - \" @  @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG


 Aj  (AxG
 A j & - X"AF
 A j Aj-  "	:   A j 	:    /  "	;T  	;P (\!	 (`! (d! (h!
 (l! (p!  (t!
 (x! (|!!
 Aj  - E
 - !@@ A,G@Ax! A G
	 AG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A j" % (X" AxG
@ - \" @  @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 AG@ A,jA A

 Aj  (AxG
 A j & - X"AF
 A j Aj-  "	:   A j 	:    /  "	;T  	;P (\!	 (`! (d! (h!
 (l! (p!  (t!
 (x! (|!!
   - ! -  



  /P; )  !6L  6H  
6D   6@  6<  
68  64  60  	6,  A j-  : + - 
Aj" Aq  G
   : 
 AF

 A j"  A j) 7  A j" A@k) 7  A j A0j)  7    )87h  ) )7 Y  : X Aj  (AxF
  )7 A
j Aj( 6  A:  A! @@ AkA  AqAFAq 
 (\" @ (`  A
 (h" @ (l  A
A
!  AG

 A j  j" ( "E

  ( A


 A:   Ax6


A  
  )X7  A j  ) 7  Aj ) 7  Aj A j) 7  Aj A j) 7 


 A j"  )7   Aj Aj( 6 
  (d64  )\7,

  !  ( ]6  A j(  6  - \! 
 A4j ( 6    (6 1   : 0  6,

 AjA A A4j Aj( 6   )"%7 [  %7,

 A4j Aj( 6   )7,
 AF

 	@  	A
 
@  
A
 
E AGr
   
A
 - 
Aj" Aq  G
   : 

  ),7 A:   A
j A4j( 6 
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 

# A k"$  A j!# Ak"$  A(j @@@ - (E@ A:   Ax6

@@@@@@@@ - )A F@ - 
" E
   Ak" : 
  AqE@ A:   Ax6


  A j  -  E@Ax! 

Ax!  - !"A"G@ A F


 A j"
 
 (X"AxG
@ - \"@ 
 @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG


 A j @ (XAxG@ Aj A j( 6   )X7

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4801-4950

 Aj 
 ("AxG
 - !	
 Aj  - E@Ax! 

 E!
 - !@@ Aq"A,G@Ax!  A G
	 




  Aj  - E@Ax! 
	
 - "A"G@ A G
	Ax! 
	
 A j"
 
 (X"AxG
@ - \"@ 
 @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxF


 

 A j @ (XAxF@ Aj 

 Aj A j( 6   )X7
 ("AxG
 - !	A!

 Aj  - 	! - 
 
Ax! 

  	: 1 - 
Aj" Aq  G
   : 
 A j"  A0jAr"Aj)  7   A: X  )  7 Y Aj  (AxF@  )X7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj  ) 7 


  )7 A
j Aj( 6  A:   A j
	
 A:   Ax6

A  
 A<j Aj(  6    ( 6 9  - : 8  64

 A4jA A

 A<j Aj( 6   )74

  ( ]6  A j(  6  - \! ! 
 A<j ( 6    (6 9  : 8   64

 A4jA A
 - 
Aj" Aq  G
   : 
 A
j A<j( 6   )47 A:  
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 

# A k"$  A j!A ! # Ak"$  A(j @@@ - (E@ A:   Ax6

@@@@@@@@@ - )A F@ - 
"@  Ak": 
 AqE@ A:   Ax6


  A j Ax!Ax! -  E
 - !" A"G@  A F
Ax!

 A j"
 " (X" AxG
@ - \" @ 
 @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG
	

 Aj  (AxG
 A j  (d!
 (`!	 (\! (X

 Aj  - E
 - !
@@@ 
A,G@Ax! 
A G
	 AxG



  Aj  - E@Ax!
	
 - "
A"G@Ax! 
A F
	Ax!
	
 A j"
 " (X" AxG
 - \" @ 
 @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 AxG@ A4jA A E



 Aj  (AxG

-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:4951-5100
 A j  (d!
 (`!	 (\! (XE


  
6<  	68  64 - 
Aj" Aq  G
   : 
 A j"  A8j)  7    ) 17 Y A: X Aj  (AxF@  )X7  A j A j) 7  Aj A j) 7  Aj A j) 7  Aj  ) 7 

  )7 A
j Aj( 6  A:   A j


 Aj  - 	!
 - 
 


A  
 A:   Ax6
	
 A j"  )7   Aj Aj( 6  (\! (`!	 (d!

  
6<  	68  64

  !  ( ]6  A j(  6  - \! 
 A<j ( 6    (6 9   : 8  64

 A4jA A

 A<j Aj( 6   )74
 AxrAxF

 	 A
 - 
Aj" Aq  G
   : 
 A
j A<j( 6   )47 A:  
 Aj$ 

A  
@@ - H"AG@ A(j A j) 7  A0j A j) 7   ) I78  A j)  7 ? Aj ) ?7    )X7   :   )87  Aj  - 
 A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  

 - 	A G@ A:   Ax6A! @@ AkA  AqAFAq 
 (" @ (  A
 ( " @ ($  A
A
!  AG

 Aj  j" ( "E
  ( A

  A j A0j) 7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7   )7 
 A j$ 
 
Aj$  - 
Aj" Aq  F@   : 
 
 )7  
Aj Aj) 7  
Aj Aj) 7  
Aj A j) 7  
A j A(j) 7 

A  
 A0j$ @ - H" AG@ A(j" A j) 7  A0j" A j) 7   ) I78  A j)  7 ? Aj" ) ?7    )X7    :   )87  
  (HAxF@  )7  A j ) 7  Aj ) 7  Aj A j) 7  Aj ) 7 

  )H7 A
j A j( 6  A:  A!@@  AkA   AqAFAq 
 ("@ ( A
 ( "@ ($ A
A
!  AG

 Aj j" ( "E
  ( A

 A j A j( " 6    )L"%7 ; A
j  6    %7  A:  
 A j$ @ - " AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7L

 A(j Aj( 6   )7  A jA A
 A j
 @  A
  AG@ Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )L7  )7 A 6 A 6 A 6  6  
6  
6  $6  "6  
6  '7  6  6  &7  6  6  Aj" 6   6   6 A j" A Aj Aj" Aj Aj #    e

 A@k A j) 7  A8j A j) 7  A0j A j) 7  A(j A j) 7   )P7  A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ Aj Aj( 6   )7 Ax6  I 
@ " 
A
 @ 
Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 
@ 
 
AtA
 @  A
 E
  A



 A j A@k) 7  A j A8j) 7  A j A0j) 7  A j A(j) 7   ) 7H A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ Aj Aj( 6   )7 Ax6  I @  A
 @  A
 E
  A



 A@k A j) 7  A8j A j) 7  A0j A j) 7  A(j A j) 7   )P7  A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j" Aj
 Aj Aj( 6   )7 Ax6 I @  A
  E
    A
 A j Aj A j! @@@ (HE@ A,j  Aj( 6    ) 7$

 Aj  Aj( 6    ) 7 A jA A  Aj -  A
G

A -   (,! ($! ((!A
A" E
   6   6   6  AjJ Aj$   

 A j A@k) 7  A j A8j) 7  A j A0j) 7  A j A(j) 7   ) 7HA؅ A+ A jAȅ A  
AA
 
A A7 AjA A  


~# Ak"$ @@ ( A3F@   )7   A(j A,j) 7   A j A$j) 7   Aj A
j) 7   Aj Aj) 7   Aj A

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5101-5250
j) 7 

 A@k A8j) 7  A8j A0j) 7  A0j A(j) 7  A(j A j) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 A 6T B7L A: x A 6h A 6t AȤ 6p A 6` A 6X  A j6l A j!# A0k"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A	 Aj"( Ak" AOAk
	






 
 Aj 


# A0k"$  A6
 A 6 B7  Aj"AjB7(  B7   A j6 ( ( Aj! A0j$  


 Aj!# A@j"$ A!@ A A#
  ( "("@ (" Atj! AjB!
 AjB!
@ ( !	  (6
  	6  )7 A6
 A 6 B7$  
78  
70  A0j6  ( ( Aj
 Aj" G
 

  ( (!
 A@k$  


 Aj 

 Aj 

# A0k"$ @@@ Aj"( "A kA  A qA FAk 
  6   (6 A6
 A 6 B7  AjB7(  B
7   A j6 ( ( Aj

 (A A ((
 

 (A A ((
 
! A0j$  

# A0k"$ @@@@@@@ Aj"-  Ak 
 A6 A 6 B7
 B7(  A(j6 ( ( Aj

 (A A ((
 

 (A A ((
 

  (6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

  - : 
 A6 AԆ 6 B7
  A
jB7(  A(j6 ( ( Aj

 (A A ((
 

 (A A
 ((
 
! A0j$  

 Aj 

# A0k"$ @@@@ Aj"-  Ak 
  (6   - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A+ ((
 

  (6   - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A ((
 
! A0j$  

# A0k"$ @@@@@@@@@@@@@@@@@@@@ ( Ak	



 
 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A A5 ((
 


 (A A ((
 


 (A A ((
 


 (A A ((
 


 (A A ((
 
	
 (A A ((
 

 (A A ((
 

 (A A ((
 

  Aj6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

  Aj6

-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5251-5400
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj

 (A A ((
 

 (A A ((
 

 (A A ((
 

 (A΀ A ((
 
! A0j$  

 AΈ A


 A6 A 6 B7   Aj6,  A,jB7   6
 ( ( Aj

 A A

 AĶ A

  Aj6 A6 A 6 B7   A,jB7  AjB7   Aj6,  6
 ( ( Aj

 A A

 A A

 A A-


 A A+


 A A6


 Aø A$


  Aj6 A6 A 6 B7   A,jB7  AjB7   Aj6,  6
 ( ( Aj
	
 A A

 A A


 A6 Aع 6 B7   Aj6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7   Aj6,  A,jB7   6
 ( ( Aj

 A A

 A6 A 6 B7   Aj6,  A,jB7   6
 ( ( Aj

 Aj 

 A A

 A6 Aܺ 6 B7   Aj6,  A,jB7   6
 ( ( Aj
! A0j$  
   )L7  A
j A j( 6   Ax6 @@@@@@@@@A	 (Ak"   AO
 																					
 AjI

 (
" (
"AxF ErE@  ( A
  ( "@  ( AtA
  AA

 - 
A
I
 (!  ("( "@    
 ("E
    (

 (
AG
 (!  ("( "@    
 ("E
    (

 (
" E
 (  A

 (
" @ (  A
 (" E
 (
  A

 (
" E
 (  A

 (
" E
 (  A

 (
" E
  (  A
 Aj$ 
A A7 A jA A  

   (  
# Ak"$ @@@@@@@@@@  ( " -  Ak		 
   Aj6 Aĩ A AjA 
	
 Aʩ A

 A۩ A

 A A

 A A

 A A

 A A

 A A

 A A

   Aj6
 AЪ AA A A
jA 
! Aj$  
	~# A k"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7  : Y  : X A@k! Aj!	# A k"$ @@@ @ A(j! ( ! (!# Ak"$  A jA    @@@@@@ - H"A
F@ Aj A j") 7  Aj A j) 7  A j A j( 6   )L7 Aj" A(j Aj  ((AxF
 A j A0j( 6   )(7p ("@ ( A
 Aj A j( 6   )p7 A jA A! Aj - H"A
F
  )X7 Aj A j) 7  A j A j) 7   ) I7(  A j)  7 /  :    )(7  Aj ) /7  

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5401-5550

 A?j" A j)  7   A8j" A j)  7  A0j A j)  "7   ) I"7( )h! Aj )  7   Aj ) 7   A	j 7    7   7   :  

  Aj( 6   )7L
 A3j A j( "6    )L"7 + Aj 6   7 A 6 B7 A: h A 6X A 6d AȤ 6` A 6P A 6H  Aj6\# A0k"$  A$j" Aj"( ( A6 A 6   B7 B7
  Aj6 A j"( ( ! ($"@ (( A
 A0j$  
  )7 A
j Aj( 6  A
:   ("E
  ( A
 (! (
"@ ( A
 AG AMq
  ("E
  (
 A
 Aj$ 

A A7 AjA A  
 - ("A
F
   )87  Aj A@k) 7   A j A j) 7   ) )7P  A0j)  7 W  Aj ) W7     )P7    :   	(" @ 	(
  A
 	((" E
 	(,  A

 (! ( ! A: P A0j A j) 7   )P7(# A k"$  Aj"A ( A (  Aj    A(j" A j" (
! (! ("@ ( A
  6  6  A j$  Ar!
 ( ! (!# A k"$  Aj  (
"
 @@@@ - "AF@ 
A 6 
B7  ( "@   
 ("E
   (

 - !
 A
G
 A8j  (" A !A (8Aj"A " AM"A H
A -  A! A"
E
 
 
:   A6
  
6  6 Aj  
  - "AG@A!@ - !
@@ A
F@  (F




 A8j    Aj  (8Aj"A  (!

  
j 
:    Aj"6
 Aj  
  - "AG
 

 ( "@   
 ("@   (
 
 )7  
Aj A
j( 6 
 A j$ 

   
 A j Aj) 7  A j A"j) 7  A j A*j) 7  A j A0j) 7   
: 9  : 8  )7:A A+ A8jA A  
 A#j A4j"
( "6   Aj 6   ),"7   7# A0k"$  A
j" Aj"(! A$j  (" @@ ($AxF@ - ,! ((!@@ E
  E@ (" ( F@ 
 ( jA,:    Aj6
 A$j  -   ($"AxG
 AF
  Ak!
 Aj!@ (" ( F@ 
 ( jA,:    Aj6 A$j  -   ($"AxG
 Aj! 
Ak"

 

 Aj 

  )(7
  6

 A j A,j( 6   )$7
 (AxG
   )
7 A
j Aj( 6 A 

  )7 A
j A j( 6  (
"@ ( A
A
6  A0j$  A j!@@@ (PE@ 
 Aj( 6   ) 7,

 A j Aj( 6   ) 7` A(jA A A j - (A
G

   ),7  A
:    A
j A4j( 6 

   )(7   A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj A0j) 7 
 (" E
 (
  A

 A j A4j( "6   A j 6   ),"7 S  7# A k"$  A j" A j  Aj"( (@@ (TAxG@ A0j" A j( 6   )T7( (H"@ (L A
 A@k ( 6   )(78 A A A8j -  A
F
   ) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 

 A
j A j( 6   )H7
   )7  A
:    A
j A
j( 6 
 A j$  (" E
  (
  A
 	(" @ 	(
  A
 	((" E
  	(,  A
 A j$  A j$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A j A j) 7  A(j A(j) 7  A0j A0j) 7   ) 7P  ) 7  A j Aj) 7  A@k Aj) 7  Aj A j) 7  Aj Aj) 7  A j Aj) 7  A j Aj) 7   ) 78  ) 7h   A j  A8j A j Aj$ 
 # Ak"$  A j Aj) 7  A j Aj) 7  A@k Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj A j) 7   ) 7P  ) 78  ) 7h A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7    A j  A8j A j Aj$ 
=# Ak"$  AԚ 6
   6 AjA  A
jA  A  
  A A
# Ak"$ @@@@@@@@@@@@@  -  Ak
	



-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5551-5700
 
   Aj6
 A AA A  A
jA A A	 A
jA 


   Aj6
 A̬ AA A  A
jA A A	 A
jA 


   Aj6
 A A
A A  A
jAܬ A A	 A
jA 


   Aj6
 A A
A A  A
jAܬ A A	 A
jA 
	
   Aj6
 A AA A  AjA A A  AjA A  A
jA 

   Aj6
 A A
A A  A
jAܬ A A	 A
jA 

   Aj6
 A A
A A  A
jAܬ A A	 A
jA 

   Aj6
 A­ AAʭ A  A
jAܬ A A	 A
jA 

   Aj6
 Aέ AA֭ A
  A
jAܬ A A  AjAܬ A  A
jA 

   Aj6
 A A
A A
  A
jAܬ A A  AjAܬ A  A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 

   Aj6
 A A
A A  AjA A A	 A
jA 

   Aj6
 A AA A  AjA A A	 A
jA 
!  Aj$   
<# Ak"$    6
 A A
A A	 A
jAЮ !  Aj$   
  A A
M# Ak"$    Aj6
 A AA A
  A A֭ A
 A
jA !  Aj$   
# Ak"$ @@@@@@@@@@@  -  Ak
	
 
   Aj6 A A
A A AjAЯ 


 A A
	
 A A


 A A

 A A

 A A

 A A

 A A


 AͰ A

   Aj6 A AA A AjA 

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
# Ak"$ @@@@  ( Ak 
 A A

 A A

 A A

   Aj6
 A A
A A
  AjA A A	 A
jA 
!  Aj$   
# A0k"$   6
 A 6 B7
  A
jB7(  A(j6 A6  Aj Aj  A/6 @@@ (
" (  
  ("E
  ( A

  - AG
   ("( ! Aj( "( "@   
 ("@   (
 A
A
  AA A0j$ 
#~# Ak"$ A ( !   " (!  (!  ( !  A
A "(!	 (!  ( ! A
A "(! (! ( ! A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 A(j Aj( 6   )7  A jA A A j A6H
 @  A

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5701-5850
@@ (HAG@ Aj A j) 7  Aj A j") 7   )H7 (`! (d! )h!# (p! (t! )x!$ Aj  	@ (AxG@ A4j Aj) 7  A,j Aj) 7   )7$ A
:  

  Aj( 6   )7H A jA A  A j
  @   A
 -  A
F@ (8! (4!
 (0!
 (,!! ((! ($!
 Aj!# A@j"$  A:  A 6
  6  6 Aj!# Ak"$  A j Aj"@ -  E@ A:   Ax6

@@@@@@@@@@@@ - !A F@ - 
" E
   Ak" : 
  AqE@ A:   Ax6

  Aj Ax! A!	 - E
 - "A"G@ A F
Ax! 

 A j" 3 (X"AxG
 Ar!@ - \"@  @ (XAxG@ Aj A j( 6   )X7

 Aj 
 (AxG
	

 A(j  ((AxG
 A j & - X"	AF
 A j Aj-  ":   A j :    /  ";T  ;P (\!
 (`! (d! (h!
 (l!
 (p! (t!
 (x! (|!
 Aj  - E
 - !@@ A,G@Ax!  A G
 	AG

	
  Aj  - E@Ax! 

 - 	"A"G@Ax!  A F
Ax! 

 A j" 3 (X"AxG
@ - \"@  @ (XAxF@ Aj 

 Aj A j( 6   )X7
 (AxG



 	AG@ A,jAՂ A



 A(j  ((AxG
 A j & - X"	AF
 A j Aj-  ":   A j :    /  ";T  ;P (\!
 (`! (d! (h!
 (l!
 (p! (t!
 (x! (|!
   - ! -  



  /P; )  6L  6H  
6D  6@  
6<  
68  64  60  
6,  A j-  : + - 
Aj" Aq  G

   : 
 (8!  (<!
 (@!
 (D! (H!
 (L! (,! (0!
 (4! A j  (XAxF@  	:    / );   6$  
6   6
  
6  
6   6  6
  
6  6 Aj - +:  

  )X7 A
j A j( 6  A:   @ 
 A
  @ 
  A
 E 	AGr

 
 A


 A:   Ax6


A  
 A j"  )(7   Aj A0j( 6 
  (d64  )\7,

 !   ( ]6  A j(  6  - \!
 A4j ( 6    (6 1  : 0   6,

 AjAՂ A
 A4j Aj( 6   )""7 [  "7,

 A4j Aj( 6   )7,
 	AF

 
@  
A
 
@ 
 
A
 
E 	AGr
   
A
 - 
Aj" Aq  F

A  
   : 
  ),7 A:   A
j A4j( 6 
 Aj$ @ - "	AG@ Aj"
 - :    / ; (
!  ( ! ($!
 ((! (,!
 (0! (4! (8!
 (<!   (AxF@  	:    /;   6$  
6   6
  6  
6  6  
6
  6   6 Aj 
-  :  

  )7 A
j A j( 6  A:    @   A
 @ 
 A

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:5851-6000
 E 	AGr
 
 A

 )
!"  ($6
  "7 A:  
 A@k$ @ - " AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7L

 A(j Aj( 6   )7  A jA A! A j
 @  A
  AG@ Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )L7  )7 A 6 A 6 A 6  6  
6  
6  !6  6  
6  $7  6  6  #7  6  6  Aj" 6   6   6 A j" A Aj Aj" Aj Aj      e

 A@k A j) 7  A8j A j) 7  A0j A j) 7  A(j A j) 7   )P7  A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ Aj Aj( 6   )7 Ax6  I 
@  
A
 @ 
Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 
@ 
 
AtA
 @  A
 E
  A



 A j A@k) 7  A j A8j) 7  A j A0j) 7  A j A(j) 7   ) 7H A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ Aj Aj( 6   )7 Ax6  I @  A
 @  A
 E
  A



 A@k A j) 7  A8j A j) 7  A0j A j) 7  A(j A j) 7   )P7  A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j" Aj
 Aj Aj( 6   )7 Ax6 I @  A
  E
    A
 A j Aj A j! @@@ (HE@ A,j  Aj( 6    ) 7$

 Aj  Aj( 6    ) 7 A jA A  Aj -  A
G

A -   (,! ($! ((!A
A" E
   6   6   6  AjJ Aj$   

 A j A@k) 7  A j A8j) 7  A j A0j) 7  A j A(j) 7   ) 7HA؅ A+ A jAȅ A  
AA
 
A A7 AjA A  

)~# Ak"$ A ( !  " (!  (!  ( !  A
A " (!  (!  ( !  A
A A j  @ (`AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A@k A j) 7  A8j A j) 7  A0j A j) 7   )`7(

 Aj A j( 6   )d7 A0jA A Aj A6(
 @  A
@@@@ ((AG@ A j" A8j") 7  Aj" A0j") 7   )(7 (@! (D! )H! (P! (T! )X!
  6h  6d  6` A(j!
# A0k"$  A j"(! (!  A:   A 6
   6  6# Ak"	$  	 Aj"@@@ A$j"
 	-  @ 	- " A"G@  A F
 
Ax6 

 	Aj / 	(" AxF@ 
Ax6 

 
 	/ 	;  
Aj 	A
j-  :   	- ! 
 	(
6 
 :  
  6 

 - 
" E
   Ak" : 
  Aq
AxAx
6 

A  
  	Aj!# A k"$  Aj" / - ! @@@ ("AxF@   ("AxF
 Aj Aj-  :    / ; - ! 

 Aj Aj-  :    / ;
 (
!  /;  Aj Aj-  :    6   :   6 

  @ Aj!# A k"$  A j @ -  E@ Ax6 

@@@@@@@@ - !A F@ - 
" E
   Ak" : 
  AqE@ Ax6 


  Aj  - E@Ax! 

Ax!  - "A"G@ A F


 A j" 
 (D"AxG
@ - H"
@  @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8AxG


 A j @ (DAxG@ A@k A j( 6   )D78

 A8j 
 (8"AxG
 - <!

 Aj  - E@Ax! 

 
E! - !@@ Aq"A,G@Ax!  A G
	 



  Aj  - E@Ax! 
	
 - 	"A"G@ A G
	Ax! 
	
 A j" 
 (D"AxG
@ - H"
@  @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8AxF



-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6001-6150
 
 A j @ (DAxF@ A8j 

 A@k A j( 6   )D78
 (8"AxG
 - <!
A!
   - ! -  
 
Ax! 

  
: - A: , Ax6(

 Ax6 

A  
 A0j A@k(  6    ( =6 -  - <: ,  6(

 A(jA A

 A0j A@k( 6   )87(

  ( I68  A j(  6 ; - H!
 ! 
 A0j ( ;6    (86 -  
: ,   6(

 A(jA A
@ - 
Aj" Aq  F@   : 
 - -!  - ,! (("
AxG
 A j  (DAxF@   :   :  Ax6 

  )D7  Aj A j( 6 

A  
  (.6   :   :   
6  A
j A2j/ ; 
 A j$  - !  - ! ("AxF@ Aj  - E@ Ax6 

  - 	A F    :   : AxAx
6 

  (6 A
j A
j/ ;    :   :   6 

 Aj!# A0k" $    @  -  E@ Ax6 

@@  - A F@ - 
"E
  Ak": 
 AqE@ Ax6 

   A:    6  A$j  Aj=@@  ($"AxF@@  - (E
  A$j  ("@  ($AxF@  Aj 

  A j  A,j( 6     )$7
  ("AxG
  A$j  Aj=  ($"AxF
 

  A
j  A.j/ ;     (*6  - (!  - )

  A
j  A"j/ ;     (
6  - 
!  - 

!
 - 
Aj"
Aq 
G
  
: 
   (6  
:   :   6  A
j  A
j/ ; 

 - 
Aj"Aq G
  : 
  A$j   ($AxF@ Ax6  A : 

   )$7  Aj  A,j( 6 

 Ax6 

A  
A  
  A0j$  - !  - ! ("AxF@   -  E@ Ax6 

  - A F    :   : AxAx
6 

  (6 A
j A
j/ ;    :   :   6 
 A j$  - 
Aj" Aq  F@   : 
 
 	)7  
Aj 	A
j( 6 

A  
 	Aj$  - )!  - (!@@ ($"AxF@ 
  ($"AxG@ Aj A.j/ ;   (*6  - )!  - (!

 
  :  
 :  
A
:  

 Aj A.j/ ;   (*6 
 Aj Aj/ ;    : 
  : 
  6  ( 6 
A A Aj
 ( " @   A
 A0j$  - (A
F@ - )!  - *! A j ) 7  A j ) 7   )7`  :    :  A 6 A 6 A 6  
7  6  6  7  6|  6x  Aj"6  6  6 
A Aj       - (A
F@ A
j A4j( 6   ),7 A 6 

 Aj A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7` A 6 B7 A:  A 6 A 6 AȤ 6 A 6 A 6  Aj6 A j"  Aj
 A
j Aj( 6   )7 A6   I

 Aj A j) 7  A j A@k) 7  A j ) 7  A j ) 7   )(7` A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ A
j Aj( 6   )7 A6   I @  A
 E
  A



 Aj A j) 7  A j A j) 7  A j A@k) 7  A j A8j) 7   )07` A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  Aj
 A
j Aj( 6   )7 A6   I E
   A
 A j!# A k"$  Aj! Aj" @ ( E@# A k"$   ("  ( F@  

-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6151-6300
 Aj!  ( jA :     Aj6 Aj  A A@@ (AxF@  ("  ( F@  
  ( jA::     Aj6 Aj  Aj   (" (
 ("@  A
 (AxG
  ("  ( F@  
  ( jA :   Ax6    Aj6

  )7  Aj A
j( 6 

  )7  Aj Aj( 6 
 A j$ 

 Aj Aj 
  (AxF@  )7 A
j Aj( 6 A 

  )7 A
j A
j( 6  (" @ (
  A
A
6  A j$  A j! @@ (`E@ A4j  Aj( 6    ) 7,

 Aj  Aj( 6    ) 7 A(jA A  Aj - (A
G

A -   (4! (,! (0!A
A" E
   6   6   6  ("@ ( A
 Aj$   

 Aj A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7`A؅ A+ A jAȅ A܉  
A A7 AjA A  
AA
 
A A7 AjA A  

C~# A k"
$  
Aj"  
- 
! 
(!@@@@@ 
("AxF@ 
 :  
 6
  
A
j"A A Aj? 
(AxG
  A A AjC 
(AxG
 Aj!# A k"	$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6@@@@@@@@A ) B}" BZAk 
# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@ (
AxG@ Aj"
 A A - 
! (!
 ("
AxG
  :   
6
 
 A
j"A A
 D (AxG
 
 A A A
j@ (AxF@  (
 - 

  )7  Aj A
j( 6 

 Aj A A - 
!
 (! ("
AxG@  / 
; 	 A
j Aj-  :    
:   6  
6 

  
:   6
 Aj A
jA A @ (AxF
  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  
6 

  )7  Aj A
j( 6 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

 	 A 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$  Aj"
  - 
! (!
@@ ("
AxF@  :   
6
 
 A
j"A A D (AxG
 
 A A A
jC (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  
6 

  )7  Aj A
j( 6 
 A j$  (AxG
 (" ( F@ 

-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6301-6450
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

# Ak"
$  (" ( F@ 
 ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$ @@@@@@ ) B}"AjA  BTAk 
 Aj Aؗ A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 A jD (AxG@  )7  Aj A
j( 6 

 Aj A
jA A
 A jD (AxG@  )7  Aj A
j( 6 

# Ak"
$  A
j"
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 Aj!
 A(j! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj  @ 
(AxF@ 
Ax6 

 
 
)7  
Aj 
A
j( 6 
 
Aj$  (AxG@  )7  Aj A
j( 6 

 Aj A
j B (AxG@  )7  Aj A
j( 6 

 Aj A
jA A A jA (AxF
  )7  Aj A
j( 6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 A0jD ("AxG@  )7  6 

 Aj A
jA A A<jC ("AxG@  )7  6 

 Aj A
j AjB ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 AjD ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 
)7  	Aj 
A
j( 6 

 	 
)7  	Aj 
A
j( 6 
 
Aj$ 

# Ak"
$  (" ( F@ 
 Aj! ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$ @@@@@@@@@@@@ ( Ak 
 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 


  :   6
 Aj A
jA A
 AjD ("AxG@  )7  6 


 Aj A
jAƄ A AjC ("AxG@  )7  6 

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6451-6600


 Aj A
jAɄ A A
j@ ("AxF
	  )7  6 


 Aj A΄ A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 


  :   6
 Aj A
jAل A AjA ("AxG@  )7  6 


 Aj A
jAބ A A8j? ("AxG@  )7  6 


 Aj A
jAƄ A AjC ("AxG@  )7  6 


 Aj A
jAɄ A A
j@ ("AxG@  )7  6 


 Aj A
jA A A(jD ("AxF
  )7  6 
	
 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 
	
  :   6
 Aj A
jAل A AjA ("AxG@  )7  6 
	
 Aj A
jAބ A A@k? ("AxG@  )7  6 
	
 Aj A
jA A AjD ("AxG@  )7  6 
	
 Aj A
jAƄ A A
jC ("AxG@  )7  6 
	
 Aj A
jAɄ A A(j@ ("AxG@  )7  6 
	
 Aj A
jA A A4jC ("AxF
  )7  6 

 Aj A A - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 AjD ("AxG@  )7  6 

 Aj A
jA A
 A j? ("AxG@  )7  6 

 Aj A
jAƄ A AjC ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 AjD ("AxG@  )7  6 

 Aj A
jAل A AjD ("AxF
  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jA A
 AjD ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 
)7  	Aj 
A
j( 6 

 	 
)7  	Aj 
A
j( 6 
 

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6601-6750
Aj$ 

# Ak"$  (" ( F@ 
 Aj!
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@ 
-  E@ Aj"
 Aփ A - 
! (! ("
AxG
  :   6
 
 A
jAڃ A
 
Aj? (AxG
 (
"(! 
- !
 - E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 (  kAM  A ( 
 (j"A (  6   AjA /  ;    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj 
 F ("AxF@  A 

  )7  6 

 Aj A A
 - 
! (! ("
AxG@  / 
; 	 A
j Aj-  :    :   6  
6 

  :   6
 Aj A
jAڃ A
 
Aj? (AxF
  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   6  
6 

  )7  Aj A
j( 6 

 (
"(! - E@ (  F@ 
 ( jA,:    Aj"6
 (  F@ 
 ( jA":    Aj"6 
Aj!
 (  kAM  A ( 
 (j"A (  6   AjA (  6    (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!
# Ak"
$  
(! 
Aj  
("
@ 
(AxF@ 
- 
! 
(!@@ 
E
  E@ (" ( F@ 
 ( jA,:    Aj6
 
Aj  E 
("AxG
 
AF
  Aj! 
AlAk!
@ (" ( F@ 
 ( jA,:    Aj6 
Aj  E 
("AxG
 Aj! 
Ak"

 

 
 

 
 
)7 
 6 

 
 
)7  
Aj 
A
j( 6 
 
Aj$  ("AxF@  A 

  )7  6 
 A j$  (AxG
 (" ( F@ 
 ( jA :   	Ax6   Aj6

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 Aj$ 

 	Aj A A 	- 
! 	(! 	("AxG@ 	A
j 	Aj-  :   	 	/ 
; 	 	 :  	 6 	 6 

 	 :  	 6
 	Aj 	A
jA A AjD 	(AxG@ 	Aj 	A
j( 6  	 	)7 

 	Aj 	A
jA A AjC 	(AxG@ 	Aj 	A
j( 6  	 	)7 

 	 	(
 	- 
@ 	( AxF@ Ax6 

  	) 7  Aj 	Aj( 6 
 	A j$  
(AxG
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kA	I  A	 ( 
 (jA A	  (A	j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ) P@ Aj 

 Aj  )
@ (AxF@ Ax6 

-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6751-6900

  )7  Aj A
j( 6 
 Aj$  
(AxG
# Ak"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 Aj!@@@@@ -  Ak 
  A A

  A A

  A A

  A A
@ (AxF@ Ax6 

  )7  Aj A
j( 6 
 Aj$  
(AxF@   
(
 
- 

   
)7   Aj 
A
j( 6 

   
/ 
; 	  A
j 
Aj-  :     :    6   6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 

   
)7   Aj 
A
j( 6 
 
A j$ 
R# Ak"$    ( " 6
 Aл AAջ A  AjA Aٻ A A
jA !  Aj$   
8# Ak"$    ( 6
 A̼ A A
jA !  Aj$   
W# Ak"$   ( " -  E@ A A

   Aj6
 A A A
jAȿ 
!  Aj$   
  ( !# Ak" $    6
A !A!@@@@@@@@@@@@@@@@@@@@@@@ /   Aj-  Atr"AqAk 	




A!

A!

A!

A!

A!

A	!

A
!

A
!

A0!


A1!


A!


A!


A!
	
A!

A!

A!

A!

A!

A
!

A!

A!
 A
vA q Avr r!
   : ?    A
jB70    A?jB7(  A jA:    A jA 6   A jB7   A jA6   A6$  A6  AЎ 6  A6`  A: \  A6X  B 7P  B 7H  A6@    A@k6   A6
    A(j6 ( (  Aj!  Aj$  
W# Ak"$   ( " ( E@ A A

   Aj6
 A A A
jA 
!  Aj$   
# Ak"$ @@@@A  ( " ( Ak" AOAk 
 A A

   6 A A AjA 

 A A


   Aj6
 A A
A A A
jA 
!  Aj$   

-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:6901-7050
# Ak"$ @@@@  ( " ( Ak 
   Aj6 A A AjA 

 A A


 AҼ A

   Aj6
 A A	 A
jA 
!  Aj$   
5# Ak"$    6
 A̼ A A
jA !  Aj$   
# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@  -  Ak	



 
 A A

 A A

 A A


   Aj6
 A A
Aƽ A
  AjA Aҽ A
 A
jA 

   Aj6
 A A A
jAܽ 

 A A

   Aj6
 A̼ AA A A
jA 

   Aj6
 A A
A A A
jA 

 A A


   Aj6
 A A
A A A
jA 

 A A



 A A



 A¾ A


 Aʾ A



   Aj6
 A A A
jAԾ 
	
 A A

 A A

 A A

 A A

   Aj6
 A A
A A  AjA A A A
jA 

   Aj6
 Aؿ A
A A A
jAȿ 

   Aj6
 A A
A A  AjA A A	 A
jA 

   Aj6
 A A A
jA 

   Aj6
 A AA A A
jA 
!  Aj$   
~@ ( "Aj"( "E
   Ak6   ( "Aj6  ,  "A q!@@ A N
  AF
 Aj" Ak6   Aj6  , "A qB ! A N
  AF
  Ak6   Aj6  , "A qB ! A N
  AF
  Ak6   Aj6  , "A qB ! A N
  AF
  Ak6   Aj6  , "A qB
 ! A N
  AF
  Ak6   Aj6  , "A qB# ! A N
  AF
  Ak6   Aj6  , "A qB* ! A N
  AF
  Ak6   Aj6  , "A qB1 ! A N
  AF
  A	k6   A	j6  , "A qB8 ! A N
  A	F
  A
k6   A
j6  , 	"A H
 AK
 BB? !
   7  A 6 
  A A6  A6 
  A A6  A6 
Q# Ak"$   -  AF@ A A

   6
 A A A
jA 
!  Aj$   
  ( !  (
"AqE@ A qE@   
# Ak"$   -  ! @  jA j  Aq"A0r A7j A
I:   Ak!  "Av!  AO
 
 Aj" AO@  AA  
 AA A  jAjA  k!  Aj$   
   
9  ( !  (

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7051-7200
"AqE@ A qE@   
   
   
   ( " (   ( 
   (   ( 
R# Ak"$    ( " Aj6
 A A	A A
  A A A	 A
jA !  Aj$   
i# Ak"$   (!  ( !  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   

   (  
   (   ( 

   (  
  A A
 # Ak"$  A j Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X   A@k Aj A j Aj$ 
g   Ax6(  B7   B 7  B 7  B7  B37  (,! ((!  ("@ (
 A
  @   A

 # Ak"$  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  A j Aj) 7  A(j A j) 7  A0j A(j) 7  A8j A0j) 7   ) 7@  ) 7X  ) 7   A@k Aj A j Aj$ 
>  ("  ( F@   A  (!
  ( j A   Aj6
~# A k"$ @@ E@A A!

B!@@@@@@@@@@@  AqAk	 
 A0j  (0E
 (4!


 Ak! @@@ A0j  (0
  )8"7 @@@ BX@  B"7 BV
A !@@@ Ak 
A!

A!

A!

 A64 A 60 B7<  B7   A j68 A
j"  A0j  !

A!
 "AI
  Av   "E




 A64 A 60 B7<  AjB7H  A j68 A j!A ! A0j" (
!@@@@@@@  ( 
 
A!A ! A!

 E

   

  ( " ( !  (" E@A!A ! 

  A H
A -  A!  A"E

    !   6  6   6 

    
 !


 " AO

A A!
	
A A!

B!

 A0j  (0E
 (4!

  Av F
 A A!

 ( "Aj"( !B !

 (4!

 )8!
  ( "Aj"( "X
 A A!

  " I
    k6   (   j6 A !
 A j$  
  64   60 A0j 
~@ ( "Aj( "E@

@@@@@@@@@ ( ",  "A H@@@ A
M@  jAk,  A H

 Aq , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
  , "AqAtjAk! A N
 AI
 Ak! , "A H@ Aq , "AqAtjAk! A H@ AI
  , "AqAtjAk! A H@ AI

  , "AqAtjAk! A H@ AI
 , "! AkB
 |! A H@ 1 	"BV
   B? B B8|"X@A
!

A  
 BB8 |!A	!

 B
 |!A!

 B
 |!A!


 B
 |!A!


 BB
 |!A!


   
 !A!
	
   B7  A 6  Aj Ak6   Aj6 
A  
 !A!

A  
 !A!

A  

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7201-7350
A  
A  
A  
   7  A 6  Aj  k6    j6 
A A!  A6    6
i# Ak"$   (!  (!  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   

~  ("@  (!@  Alj" ("@  ( A
@@@@@@@A  )"B}" BZ 
  - E
  (
"E
  (  AlA

  Aj!@  ($AxG@ ( "@  (
 A
  A$j!  (,"E
  ((Aj! @  Ak( "@  (  A
  A j!  Ak"
 


  ( "E
   (
Aj! @  Ak( "@  (  A
  A j!  Ak"
 

 ( " E
 (  AtA

  ("@  (
 A
  ($"E
  (( A

  ("@  (
 A
  ($"E
  (( A

A!@@@@ B}"AjA  BT 
  (X"@  (\ A
  (d"@  (h A
  (H"@  (L A
A !  (p"AxG


A !  (@"E
   (D A
   j( !
 E
   j( A

@@@@@@  ( 
  (
"E
  (  A

  (
"@  (  A
  (("@  (, A
  (<"@  (8Aj!@ Ak( "@ (  A
 A j! Ak"
 

  (4"E
  (8 AtA

  (
"AxF ErE@  (  A
  (("@  (, A
  (<"@  (8Aj!@ Ak( "@ (  A
 A j! Ak"
 

  (4"@  (8 AtA
  (@"E
  (D A

  (
"AxF ErE@  (  A
  (("@  (, A
  (4"@  (8 A
  (H"@  (DAj!@ Ak( "@ (  A
 A j! Ak"
 

  (@"@  (D AtA
  (L"E
  (P A

  (
"@  (  A
  (("E
  (, A

  (
"@  (  A
  (("E
   (, A
 Aj" G
 


]  ("@  (! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 


  ("@  (!@  Alj"( " @ (  A
 ("@ (! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 (
" @ (  AlA
 Aj" G
 


B!~# Ak"$ A ( !!  " (!
  (!  ( !  A
A "(!  (! ( !
 A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7@

 A j Aj( 6   )7 A jA A Aj A6@
 
@  
A
@@ (@AG@ Aj A j) 7  Aj A j"") 7   )@7  (X!
 (\! )`!$ (h!
 (l!  )p!% Aj!A !A !
# A@j"$  A:  A 6   6
  
6 Aj!# A0k"$   Aj"Ax! @@@ -  @@ - " A"G@  A F
 Ax6
 Ax6 

 Aj ,@ (" AxF@Ax! 

-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7351-7500

  / 
;  Aj Aj-  :   - 
!  (6  : 
 Ax6
   6 

 - 
" E
   Ak" : 
  Aq
Ax! 
 Ax6
   6 

A  
  Aj!
# Ak"$  Aj"  , - !@@@ ("AxF@    ("AxF
 Aj A
j-  :    / 	;  - !

 Aj A
j-  :    / 	; 
 (
!  
 / ;  
Aj Aj-  :   
Ax6
 
  6 
 :  
 6 

 @# A0k"$  Aj!# A k"$  A(j @@@ - (E@ Ax6
 Ax6 

@@@@@@@@ - )A F@ - 
" E
   Ak" : 
  AqE@ Ax6
 Ax6 


  A j  -  E@Ax! 

Ax!  - !"A"G@ A F


 A j" $ (d"AxG
 - h"	@  @ (dAxG@ A j A j( 6   )d7X

 A j 
 (XAxG
A

 A j @ (dAxG@ A j A j( 6   )d7X

 A j !
 (X"AxG
 - \
!
 Aj  - E@Ax! 

 - !@@ Aq"A,G@Ax!  A G
 
AG

	
  Aj  - E@Ax! 

 - "A"G@ A G
Ax! 

 A j" $ (d"AxG
@ - h"	@  @ (dAxF@ A j 

 A j A j( 6   )d7X
 (XAxF


 
AG@ A0jA͂ A


 A j @ (dAxF@ A j !

 A j A j( 6   )d7X
 (X"AxG
 - \!

 Aj  - 	! - 
 
Ax! 

  
Aq: 0 - 
Aj" Aq  G
   : 
 A j  (dAxF@  )07  Ax6
 Aj A8j( 6 


  )d7  Aj A j( 6 

 Ax6
 Ax6 

A  
 A8j A j(  6    ( ]6 5  - \: 4  60

 A8j A j( 6   )X70

  ( i6X  A j(  6 [ - h!	 ! 
 A8j ( [6    (X6 5  	: 4   60

 A0jA͂ A
 - 
Aj" Aq  G
   : 
  )07  Aj A8j( 6 
 Ax6

 A j$ 

A  
 (! (
! (!@@@ ("
AxG@ )(!# ($! ( !	 (
!  (!
   -  
 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

 

-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7501-7650
Ax6


 - A G@ 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

  
 #7  
 6
 
 	6 
  6 
 
6 
 
6

 
 6 
 6 
 6 
 A0j$ 

# A0k"$  Aj!A !A !# Ak"$  A8j @ - 8E@ Ax6
 Ax6 

@@@@@@@@@@@@@@@@@@@@@ ~@@ - 9A F@ - 
" @   Ak" : 
  AqE@ Ax6
 Ax6 

  A0j Ax!	Ax!Ax! - 0E@Ax!


 - 1" A"G@  A F
Ax!
Ax!	

 A j  (h" AxG@Ax!
  !	


 A j!
@@@@@@@ - l" 
 A j  (h"AxG
 A(j  - (E@Ax!Ax!



 - )A G@ A j  (t! (p! (l! (h@Ax!



A!Ax!


  A j A A (h"AxG
A!Ax!Ax!


 Aj  (AxG@Ax!



 A j  (t! (p! (l!Ax!
 (h

A!

 Aj  (AxG

 A j   (t!  (p! (l!
 (hE


 A j @ (hAxG@ Aj A j( 6   )h7

 Aj !
 ("AxG@Ax!

	
 - !Ax!


 A j @ (hAxG@ Aj A j( 6   )h7

 Aj 
A!Ax!
 ("AxG


A!
 A j  -  E

 - !!@ !
@@@@@@ Aq"A,G@Ax!	 A G
 
AxG
  ! !


  Aj  - E@Ax!	

 - "A"G@Ax!	 A F
  ! !Ax!	

 A j  (h"AxG@ !  ! !	

@@@@@ - l" 
 A j @ (hAxF@ Aj 

 Aj A j( 6   )h7
 ("AxF
	 !  ! )

 
AxG@ A@kA A

 Aj  (AxG@ !  !

 A j   (l!
 !  ! (t!  (p! 
 (hE
	

 AxG@ A@kA A

 Aj  (AxG
 A j  (t! (l! (p" (hE


 AxG@ A@kAÂ A



-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7651-7800
 A j  (h"AxG

 Aj  - E@Ax!
 
 - A F@  A j A A (h"AxG
Ax!

 A j  (t! (p! (l! 
 (hE


 AG@ A@kA͂ A

 A j @ (hAxF@ Aj !

 Aj A j( 6   )h7
 ("AxF
 !  !


   6  6  
6 AxG"	E@ A jA A  (t6H  )l7@A !

 Ax AxG"! AF


 - !

 A jA͂ A - l! (h"AxF
  A j A j(  6    ( m6 E  : D  6@ AxrAxG@  A
 E
 
 A

 A j Aj( 6   )7@  6`  6\  6X  6T  
6P  Aq: d


 Aj 
@  
AlAA! !  ! AqE


A!A !
 !  ! Aq


 

! Aj  - 	! - 
 



A  
 Ax6
 Ax6 

 A@kA A

 )
7D  6@


 A j Aj(  6    ( 6 E  - : D  6@


 
 )7  
Aj Aj( 6  (l! (p! (t!
  6H  6D  6@Ax!
A !A !	 !  !

 
 )7  
Aj Aj( 6  (l!
 (p! (t! 
   6H  6D  
6@
Ax!


  ( m6  A j(  6  - l!

 !

  ! !
 A j ( 6    (6 E  : D  	6@
A !A !	
 AxNA  
 !  !
 	


  A ! !  	E


Ax!

 (p! (l!
  6H  6D  6@A !
 AxrAxF
  
 A
Ax! 
AxF r
   @ !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj!  Ak" 
 

 
E
   
AlA
@ - 
Aj" Aq  F@   : 
 AxF
 Aj" A j) 7  Aj" A j) 7  A j"  A j( 6   )P7x  )@7h  6t Aj  (AxF@  )h7  A j ) 7  Aj ) 7  Aj A j) 7  Aj  ) 7 

  )7  Aj Aj( 6  Ax6
 A j (h" @ (l  AlA
 @ (x A
 (" AxF  Er
 (  A

A  
  )@7  Ax6
 Aj A j( 6 
 Aj$  (! (
! (!@@@ ("
AxG@ )(!# ($! ( !	 (
!  (!
   -  
 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 

-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7801-7950
A
 	AxrAxF
  	A

 
Ax6


 - A G@ 
Ax6
 
Ax6  
AxF
 @ ! @  ( "@  Aj(  A
  A
j( "@  Aj(  A
  Aj!  Ak"
 

 @  AlA
 
@ 
 
A
 	AxrAxF
  	A

  
 #7  
 6
 
 	6 
  6 
 
6 
 
6

 
 6 
 6 
 6 
 A0j$ 
 Aj$  - 
Aj" Aq  F@   : 
  )7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  A j A(j) 7 

A  
 A0j$  ( ! (
!  (!@@ ($"
AxG@ )8!# (4! (0!	 (,! ((!
   (AxF@  #7   6
  	6  6  
6  
6


  )7  Aj A j( 6  Ax6
 
AxF
 @  !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

 @   AlA
 
@ 
 
A
 	AxrAxF
  	A

 Ax6

  6   6  6 
 A@k$ @ (" AxG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7D

 A j Aj( 6   )7 "A A& Aj
 @ 
 A
  AxG@ Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7   )D7  ) 7 A 6 A 6 A 6  %7   6  
6  $7  6  
6  Aj" 6   6   6 A@k"A Aj Aj"  Aj !    e

 A8j A j) 7  A0j A j) 7  A(j A j) 7  A j A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  AjE@ Aj Aj( 6   )7 Ax6  I 
@  
A
 
E
   
A



 A8j A j) 7  A0j A j) 7  A(j A j) 7  A j A j) 7   )H7 A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 Aj"  Aj
 Aj Aj( 6   )7 Ax6  I E
  
 A
 A@k Aj A j! @@@ (@E@ A$j  Aj( 6    ) 7


 Aj  Aj( 6    ) 7 AjA A  Aj - A
G

A -   ($! (
! ( ! A
A"E
  6  6   6  AjJ Aj$  

 A j A8j) 7  A j A0j) 7  A j A(j) 7  A j A j) 7   )7@A؅ A+ A@kAȅ Ả  
AA
 
A A7 AjA A  

~# Ak"$ A ( !  " (!  (!  ( !  A
A " (!  (!  ( !  A
A Aj  @ (AG@ A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   )7H

 A(j Aj( 6   )7  A jA A A j A6H
 @  A
@@ (HAG@ Aj" A j") 7  Aj" A j") 7   )H7 (`! (d!	 )h! (p! (t!
 )x!  6  6  6 A j!
# A0k"$  Aj"(!
 (!  A:   A 6
   6  
6 A$j!# A0k" $   Aj Aj"@  - E@ Ax6 

@@  - 	A F@ - 
"E
  Ak": 
 AqE@ Ax6 

   A:    6  A$j  Aj=@~@  ($"AxF@@  - (E
  A$j  ("@  ($AxF@  Aj 

  A j  A,j( 6     )$7
  ("AxG
  A$j  Aj=  ($"AxF
 

  )(

  )

! - 
Aj"
Aq 
G

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:7951-8100
  7  6   
: 


 - 
Aj"Aq G
  : 
  A$j   ($AxF@ Ax6 

   )$7  Aj  A,j( 6 

 Ax6 

A  
A  
  A0j$ @@ ($" AxF@   ($" AxF

  )(7
   6 
A A
 Aj

 
A
:  
 ( " @ 
  A
 A0j$  -  A
F@ Aj ) 7  Aj ) 7   )7 A 6 A 6 A 6  7  
6  6  7  	6  6  Aj" 6   6   6 A j" A Aj      e

 A j A@k) 7  A j A8j) 7   A0j) 7   A(j) 7   ) 7H A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  AjE@ Aj Aj( 6   )7 Ax6  I @ 	 A
 E
 
 A



 A@k A j) 7  A8j A j) 7  A0j A j) 7  A(j A j) 7   )P7  A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj6 A j"  Aj
 Aj Aj( 6   )7 Ax6  I E
   A
 A j Aj A j! @@@ (HE@ A,j  Aj( 6    ) 7$

 Aj  Aj( 6    ) 7 A jA A  Aj -  A
G

A -   (,! ($! ((!A
A" E
   6   6   6  AjJ Aj$   

 A j A@k) 7  A j A8j) 7  A j A0j) 7  A j A(j) 7   ) 7HA؅ A+ A jAȅ A  
AA
 
A A7 AjA A  

# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"A A AjD (AxG
# A@j"$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 A 6 B7
 A: 8 A 6( A 64 AȤ 60 A 6  A 6  A
j6,@  AjE@ (
!   (" ( @  A
@ ( AxF@ Ax6 

  ) 7  Aj Aj( 6 
 A@k$ 

A A7 A?jA A  
 (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
  Aj!@@@@@@ -  Ak 
  Aj  A 6 
  Aj  A6 
 (!@ (
"E@A!

A ! A H
A -  A! A"E

   !   6
   6   6  A 6 
 (!A! (
"@A ! A H
A -  A! A"E

   !   6
   6   6  A6 
   
   
@@ @ A H
 (@@ ("E@

 (    


  E
 A -    
"@   6   6  A 6 
   6   6

  A 6

  A 6
  A6 
# A k"$    j"K@A A  
A!A  ( "At"   I" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A At Aj A J" AM"Al!    Al6
   (6A 
6 Aj A֪*IAt  Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A!A At" Aj"  K" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
NA -  AA"@  6   6 B7 B 7  
AA 
QA -  AA"@ A 6 B 7    ) 7
 Aj  Aj( 6  

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8101-8250
AA 
'~# Ak"$  Aj"
 Aj") 7  Aj"
 Aj") 7  Aj"
 Aj") 7   ) 7 Aj" Aj") 7  Aj" Aj") 7  Aj" Aj") 7   ) 7  Aj" Aj" 
 A8j") 7  
 A0j") 7  
 A(j") 7   ) 7  A8j") 7   A0j"
) 7   A(j"
) 7   ) 7 A j"'   
 A j"
) 7  
 A j") 7  
 A j" ) 7   )@7  A j"!) 7   A j"") 7   A j"#) 7   )@7 A@k"(   
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   ) 7 Aj"
   
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   
) 7   
) 7   ) 7 Aj"	   Aj" 
 	 
 Aj") 7  
 Aj") 7  
 Aj") 7   ) 7  A8j"$) 7   A0j"%) 7   A(j"&) 7   ) 7 	   A j")  	 
 ) 7  
 ) 7  
 ) 7   ) 7  
) 7   ) 7    ) 7   )@7 
   
 ) 7  
 
) 7  
 
) 7   ) 7  !) 7   ") 7   #) 7   )@7 	    
 	 
 A j") 7  
 A j") 7  
 A j") 7   )@7  $) 7   %) 7   &) 7   ) 7 	   Aj"  	 
 ) 7  
 ) 7  
 ) 7   ) 7  
) 7   ) 7    ) 7   )@7 
   
 ) 7  
 ) 7  
 ) 7   ) 7  !) 7   ") 7   #) 7   )@7 	    
 	 
 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   )@7 	   Aj"  	 
 ) 7  
 ) 7  
 ) 7   )@7 A ) "*7  A ) "+7  A ) ",7  A ) "-7 	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"  	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"   
 $) 7  
 %) 7  
 &) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 Aj"   Aj" '   (  ) 7   ) 7   ) 7   )@7 Aj"    *7   +7   ,7   -7 
   
 ) 7  
 ) 7  
 ) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 	    
 	    Aj) 7   Aj) 7   Aj) 7   )7 Aj"      ) 7   ) 7   ) 7   ) 7 	   Aj" 	  
 Aj) 7  
 Aj) 7  
 Aj) 7   )7  A j) 7   A j) 7   A j) 7   )`7 
   
 Aj) 7  
 Aj) 7  
 Aj) 7   )7  Aj) 7   Aj) 7   Aj) 7   )7 	     
 	  Aj) 7   Aj) 7   Aj) 7   )7 	    Aj) 7   Aj) 7   Aj) 7   )7     A j 	      )   A@k   Aj$ 


~# Ak"$    A j" A j A@k" A@k Aj"	 Aj") 7  Aj"
 Aj") 7  Aj"
 Aj") 7   ) 7 Aj" A8j") 7  Aj" A0j") 7  Aj" A(j") 7   ) 7 Aj" Aj" Aj" A j"
  	 ) 7  
 ) 7  
 ) 7   ) 7  A j") 7   A j") 7   A j") 7   )@7    Aj"  	 A j"
) 7  
 A j") 7  
 A j") 7   )@7 A ) "
7  A ) "7  A ) " 7  A ) "!7     Aj) 7   Aj) 7   Aj) 7   )7 Aj"      Aj) 7   Aj) 7   Aj) 7   )7 Aj"   	 A8j") 7  
 A0j") 7  
 A(j"
) 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7 Aj"
    ) 7   ) 7   
) 7   ) 7 Aj"    Aj) 7   Aj) 7   Aj) 7   )7 Aj"   Aj" 
 
    
) 7   ) 7   ) 7   )@7 Aj"    
7   7    7   !7 Aj"
   	 Aj"
) 7  
 Aj") 7  
 Aj") 7   ) 7  Aj) 7   Aj) 7   Aj) 7   )7    Aj" 
     Aj) 7   Aj) 7   Aj) 7   )7 Aj"
      
) 7   ) 7   ) 7   ) 7    Aj"
    Aj) 7   Aj) 7   Aj) 7   )7  
  Aj   	 ) 7  
 ) 7  
 ) 7   ) 7  ) 7   ) 7   ) 7   )@7    Aj"   Aj) 7   Aj) 7   Aj) 7   )7  
            A@k   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7    )7  Aj$ 
(    ( -  At" A j(   A j( 

   ( " Aj(   Aj(  
   A  
    ( "@  ( AlA
  ("@  (!@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj! Ak"
 

  (
"@  ( AlA
  Aj  ("@  (
 AlA
  ($"AxF ErE@  (( A

  A A

    A 
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
  ( j :     Aj6

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ 
%    -  At" A j(   A j( 
~# Ak"$ @  B X
  (" ( F@  A (!

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8251-8400
  Aj"6 (" j  Ar:    B!  BT@ ! 

  ( F@  A (! (!
  Aj"6  j Ar:    B!  BT@ ! 

  ( F@  A (! (!
  Aj"6  j Ar:    B!  BT@ ! 

  ( F@  A (!
  Aj"6 (" j Ar:    B
!  BT@ ! 

  ( F@  A (! (!
  Aj6  j Ar:    B#!  BT@ ! 

  Ar:   Aj  B*!  BT@ ! 

  Ar:   Aj  B1!  BT@ ! 

  Ar:   Aj  B8!  B Y@ ! 

  <   AjB! 
 (" ( F@  A (!
  Aj6 ( j  <   Aj$ 
l~# Ak"$ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -  Ak
 
 (!@ (
"E@A!

 A H
A -  A! A"E

   !  6  6  6 A 6  )7  )7  ("6  ( "6 Aj" (, (0 Aj Aj Aj   Aj - ! ("A3G
 ("@ ( A
 
A!!
&
 (!A! (
"@ A H
A -  A! A"E

   !  6  6  6 A6  )7  )7  ("6  ( "6 Aj" (, (0 Aj Aj Aj   Aj - ! ("A3G
 ("@ ( A
 
A!!
$
 Aj Aj Aj Aj Aj Aj( 6  A6  )7  )7  )7  ("6  ( "
6 Aj (, (0 (!@ ("E@A!

A ! A H
A -  A! A"E

   !  6  6  6 Aj Aj Aj (  ($ ( (
 ( ( ("A3G
 ("@ ( A
 ("@  A
A-! 
  - "E
	
!
 (!@ (
"E@A!

 A H
A -  A! A"E

   !  6  6  6 A6  )7  )7  ("6  ( "6 Aj" (, (0 Aj Aj Aj   Aj - ! ("A3G

 ("@ ( A
 

A!!

  )7  )7  ("
6  ( "
6 Aj A(j Aj Aj"" (!@ ("E@A!

 A H
A -  A! A"E

   !  6  6  6 Aj! Aj! Aj!
A !A !# Ak"$  A j Aj" A0j" ( ( A j  Aj"
(!@@@@@@ 
("E@A!	

 A H
A -  A! A"	E

 	  ! Aj A j( 6  Aj A j( 6  A j 
Aj( 6   6,  6(  6$  )t7   )h7
  
) 7 (0"@ (4 A
 A0j!# Ak"$  A 6
 B7 (!@@@@@@@@@ ("
@ 
ArgAsA	lA jAvAj" 
j" I

 (!
 ("
@ 
ArgAsA	lA jAvAj" 
j" I

@@   j"M@ (
! ( "	
A !

A  
 	ArgAsA	lA jAvAj" 	j" I

@@   j"M@ ((! (,"
A !

A  
 ArgAsA	lA jAvAj"
 j" 
I

   j"K
 A N@ 
@B
 Aj" 
  
 ( (
"kK@   
 (
!
 ( j  
   
j6

 
@B Aj" 
  
 ( (
"kK@   
 (
!
 ( j 
 
   
j6

 	@B Aj" 	  	 ( (
"kK@   	 (
!
 ( j  	   	j6

 E

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8401-8550
B" Aj"   ( (
"k" I


 A6  6 Ax6 

Aħ  
Aħ  
Aħ  
A  
A  
 Aj   ( (
"k!
  I@ Aj   (
!
 ( j     j6

  )7  Aj A
j( 6 
 Aj$  (8! (4! (0"AxG@A -  A%A"E
 A
jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   A%6d  6` A%6\  6p  6l  6h  Aj A j A j - 0"A
G
 (4! (8" ! (<!# A k"
$  
 6
 
 6 
A 6 
B7 
 
Aj6
@@@@@@@@@@@@@@@@ 
(
"("@ ( ",  "A H@@ A
M@  jAk,  A H

 Aq , "
AqAtjAk! 
A N
 AI
  , "
AqAtjAk! 
A N
 AI
  , "
AqAtjAk! 
A N
 AI
	 Ak!# , "A H@ Aq , "
AqAtjAk! 
A H@ AI

  , "
AqAtjAk! 
A H@ AI
  , "
AqAtjAk! 
A H@ AI
 , "
!% AkB
 #|!$ 
A H@ 1 	"#BV
 $ $ #B? %B B8|"#X@A
!

A  
 %BB8 $|!#A	!

 B
 #|!#A!

 B
 #|!#A!

 B
 #|!#A!

 BB
 #|!#A!


 
A j 
A
j 
(PE@ 
)X!#

 
(T!

 B!#  Ak6  Aj6 


  
)7  Aj 
Aj( 6 

Aԧ A!


 !#A!

AĨ  
 !#A!

AԨ  
 !#A!

A  
A  
A  
A  
   k6   j6 
 
 #7  #BX
  
A6T 
AЦ 6P 
B7\ 
 
A jB7@ 
 
A@k6X 
A,j" 
A j !

 
 #B"$78 $BT@ #"AI@A A!

 $! Av"AF@ 
Aj! 
A
j!	# A@j"
$  
 : 
 
A: 
 AqAG@ 
A6
 
A 6 
B7$ 
 
A
jB
78 
 
A

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8551-8700
jB
70 
 
A0j6  
A
j" 
Aj 

@@@ 	( "Aj( "E
 @@@@@@@@@ ( ",  "A H@@ A
M@  jAk,  A H

 Aq , "	AqAtjAk! 	A N
 AI
  , "	AqAtjAk! 	A N
 AI
  , "	AqAtjAk! 	A N
 AI
 Ak!# , "A H@ Aq , "	AqAtjAk! 	A H@ AI
  , "	AqAtjAk! 	A H@ AI

  , "	AqAtjAk! 	A H@ AI
 , "	!% AkB
 #|!$ 	A H@ 1 	"#BV
 $ $ #B? %B B8|"#X@A
!

A  
 %BB8 $|!#A	!

 B
 #|!#A!

 B
 #|!#A!

 B
 #|!#A!


 BB
 #|!#A!


 
Aj 	 
(@ 
(


 	( "Aj( ! 
) !#


 B!# Aj Ak"6   Aj6 


 !#A!
	
A  
 !#A!

A  
 !#A!

A  
A  
A  
A  
A A

 Aj  k"6    j6 
  #Z@ 
Aj!A !	# A k"$ @@@ (" #"O@  E@A!A

 A H
A -  A!	 A"E
A
A A
vgAtk AK
6
  6 A 6  6 # Ak"$ @@@@ ("   K@ (! (!	 ( !@  	I
@    K"  	kKA !# Ak"$  (!
@@@@@@@@@@@@@@@@ (
"	AqE@ 
 
 j"
K@AĤ AA̤  
 	(AG@@@ 
 	(
" A	j"
 I
 
A O
A 
tA 
"
 
 
I"
E@A!


 
A H
A -  A! 
A"
E

A ! A 6
  
6  
6 ( ! 
 ("I AjA   (
! ( 

 j   	 	("
Ak6   j6
 
AF@ 	( "
@ 	( 
A
 	AA
  (6   (6  AtAr6


  
 
 ( "! 	("I
 
 ! k"j" 
I
  	( "K@ 
 M 
 Mq
 
 j"
 I
 	 
6 At"
  
 K"
 
I
 
 
k"
  
kK
	

-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8701-8850

  
6

 (" 
I
  
k" 	Av"
j" I
	  M 
 
MqE@ 
 
j"	 
I

 
 j"
 I

 ( !  	6
  
6   
k"6 
 	k I



 ( " 
k  
!
  	Aq6
  
6   
 j"	M@  	6

A  
AԦ  
# A k" $   A 6  A6
  A 6  B7  AjA  
A  
Aĥ  
   ! 
6   	( 6


Aԥ  
A  
 	 
 
 	( ! 	(!

A  
A  
A  
A  
 Aj 	  (!
 (!
  
 j6  
 
O@  
 
k6

A  
   j6   M@   k6

A  
 Aj$  (!	 ( 
 	O@ (  	j   (" ("
I
  
k"	 I
 
 
 j"	M
A  
A  
  	6   k"6   j"6    k"  K
 

 Aj$ 

A  
A  
  	6
  6 Aj 
 (! ( !	@ (
"AqE@  6
  6  	6 A 6 

 Aj! (!@   Av"j"
M@   j"M
A  
A  
  
6  6   	 k6 A
j! (!@@@ ("
 ( "	G@A -  A
A"E
 A6  	6  6 A !	

 
E@A !	A !A!

A !	 AqE
 !

AA
 
 Ar!A !	
  6
  
6  6  	6   6, ($" I
 A$j"  k6   (  j6  Aj ) 7   )
7 
 A j$ 

  64  60 A0j 
 	  
 A64 A 60 B7<  6\  A jB
7P  A,jB
7H  A j68 A0jA  
A !# Ak"$  A 6 (" ( "K@ A   (! ( !
 Aj Aj) "#7   ) 7 @@ #"  k"M@ 
 (!

    (  ("k!
 (!	  I@    (!
 ( j 	    j6 A 6   	j"6
 A
j A  ( (  Aj$ A 

A A
! 
A@k$ A  E
 
 6P 
A j( "(" ( F@# A k"$  ( "AF@A A  
A At Aj A J"
 
AM"	At!    At6
  (6AA 
6 Aj 
A IAt  Aj (@ (
 ( 
 (
!  	6   6 A j$ 
 ( Atj"A

-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:8851-9000
6
 Aף 6 A#6 A 6   Aj6 
(P!

   
A
jA 
"E



 
A6T 
A 6P 
B7\ 
 
A8jB7h 
 
A j6X 
A@k" 
A j !
  6 Ax6  
("E
  
( A
 
A j$  (4! (0"AxG@  (86
  6  6 A36  @   A
 ( "@ ( A
 (
"@ ( A
 ("@ (
 A
 ($"E
 (( A

  6 A6  E
   A

  6  6 A6 

   
AA% 
  / 1; 	  )@7 A
j - 3:   A j A j) 7  A(j A j) 7  )4!#  (<6  #7
  :  A6 
 ( "@ ( A
 (
"@ ( A
 ("@ (
 A
 ($"E
  (( A
 
( "@  A
 ( "@ ( A
 Aj$  (! (! (! ("A3G
  " 

A!

   ) 7   A<j Aj(  6    A5j Aj)  7    A-j Aj)  7    A%j Aj)  7    A
j Aj)  7    Aj Aj)  7    A
j Aj)  7     :    6  (" E
 (  A

A-!   - "E@ Aj    Aj - A
F
 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj Aj") "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  A'j Aj(  6   A j )  7  Aj )  7  Aj )  7  Aj )  7   ) 7 A!
   :    6    ) 7   A
j Aj) 7    Aj Aj) 7    A
j Aj) 7    A%j A j) 7    A-j A(j) 7    A5j A0j) 7    A<j A7j(  6  
 (!  ("@ ( A
  AG  AMq
" (" E
" (  A
"
   ) 7   A<j Aj(  6    A5j Aj)  7    A-j Aj)  7    A%j Aj)  7    A
j Aj)  7    Aj Aj)  7    A
j Aj)  7     :    6  (" E
 (  A

A-!   - "E@ Aj    Aj - A
F
 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj Aj") "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  A j Aj(  6   A j )  7  A j )  7  A j )  7  A j )  7   ) 7@A!
   :    6    )@7   A
j A j) 7    Aj A j) 7    A
j A j) 7    A%j A j) 7    A-j A j) 7    A5j A j) 7    A<j A j(  6  
 (!  ("@ ( A
  AG  AMq
 (" E
 (  A

 Aj Aj A6  )7  )7  ("6  ( "6 Aj" (, (0 Aj Aj Aj   Aj - ! ("A3F
   ) 7   A<j Aj(  6    A5j Aj)  7    A-j Aj)  7    A%j Aj)  7    A
j Aj)  7    Aj Aj)  7    A
j Aj)  7     :    6  (" E
 (  A

 Aj 
   Aj - A
F
 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj Aj") "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  Aj Aj(  6   Aj )  7  Aj )  7  Aj )  7  Aj )  7   ) 7A!

   ) 7   A
j Aj)  7    Aj Aj)  7    A
j Aj)  7    A%j Aj)  7    A-j Aj)  7    A5j Aj)  7    A<j Aj(  6     - :    6  (" @ (  A
 (" E
   A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

   ) 7   A<j Aj(  6    A5j Aj)  7    A-j Aj)  7    A%j Aj)  7    A
j Aj)  7    Aj Aj)  7    A
j Aj)  7     :    6  (" E
 (  A

A-!   - "E@ Aj    Aj - A
F

 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj Aj") "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  Aj Aj(  6   Aj )  7  Aj )  7  Aj )  7  Aj )  7   ) 7A!
   :    6    )7   A
j Aj) 7    Aj Aj) 7    A
j Aj) 7    A%j Aj) 7    A-j Aj) 7    A5j Aj) 7    A<j Aj(  6  
 (!  ("@ ( A
  AG  AMq
 (" E
 (  A

A ! A H

A -  A! A"E


   ! Aj Aj"
( 6   6  6  6A! A6  )7A-! 
 
 - "
E@ Aj 
 
 
 Aj - A
F
 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj 
) "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  Aj Aj(  6   Aj )  7  Aj )  7  Aj )  7  Aj 
)  7   ) 7A! (!
   

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9001-9150
:    6    )7   A
j Aj) 7    Aj Aj) 7    A
j Aj) 7    A%j Aj) 7    A-j Aj) 7    A5j Aj) 7    A<j Aj(  6   (" @ (  A
@ AG AMq
  (" E
  (  A
 E
  A

   )7  A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7    6
   6   6   6 

 ("@ ( A
  6  6  6 (! ("@ ( A
 AG AMq
 ("E
 ( A

   
   
   
   
   
A3!


A3!
	
A3!

   
 ("@ ( A
A! E
A-!   - "E@ Aj    Aj - A
F
 Aj Aj") "#7  Aj Aj") "$7  Aj Aj") "%7  Aj Aj") "&7   )"'7 Aj #7   Aj $7   Aj %7   Aj &7    '7  Aj Aj(  6   Aj )  7  Aj )  7  Aj )  7  Aj )  7   ) 7A!
   :    6    )7   A
j Aj) 7    Aj Aj) 7    A
j Aj) 7    A%j Aj) 7    A-j Aj) 7    A5j Aj) 7    A<j Aj(  6  
 (!  ("@ ( A
  AG  AMq
	 (" E
	 (  A
	
A3
! (! ("@ ( A
 AG AMq
 ("E
 ( A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

   :    6    )7   A
j Aj) 7    Aj Aj) 7    A
j Aj) 7    A%j Aj) 7    A-j Aj) 7    A5j Aj) 7    A<j Aj(  6  
 (!  ("@ ( A
  AG  AMq
 (" E
 (  A

 (! ("@ ( A
 AG AMq
 ("E
 ( A

 (! ("@ ( A
 AG AMq
  ("E
  ( A
 A3F
    6 

 B7 B 7 B7 B 7 B7A -  @@@@@AA"@A -   AjA )  7   A )  7  AA"E
 A 6  6 B7  6 A6A -  A(A"E
 Aj" A(j A 6 B7 A:  A 6 A 6 A 6 A 6 A 6  Aj"6  Aj"

A -   (!
 (! (!AA"E
 A 6  6 A6  
6  "@ ("E
 ( A

 (! ("AxF
 (! A 6  
6  6
  6 A6 A 6  A$j 6  A j 6  A
j 6  AjA
6   A(j6 A6  6  6  6 A 6  Aj6 Aj Aj Aj" Aj) 7  Aj" Aj) 7   )7 (" (F@ Aj
 ( Alj" )7  Aj ) 7  Aj ) 7  Aj" Aj6   Aj" )7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A(j Aj) 7  A j ) 7   A36  (" E
 (  A

AA 
AA 
AA( 
AA 
A A7 AjA A  
   s @  A
 A(A AA AA Aj (" E
  (  A
 Aj$ 
 A|

 ( "(  ("F@  A (!
  Aj"6 ( jA":   Ak!
 As!  j! !
@@@A !@@@   
j"G@  jAj"
A  
  G@ @  M
  j,  AL

  k" (  kK@    (!
 ( j  j    j"6
  ( F@  A (!
  A:    Aj6 ( jA":  
 Aj! -  "	A j-  "
E
 
  j"Ak"
 K@@ E
   K@  j,  AJ


  G

@  
K@  
j j,  AJ


  j

 As j"
 j" (  kK@    (!
 ( j  j    
j j"6
@@@@@@@@@ 
A k 










-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9151-9300










A !

A !

A !

A !

A !

A !

 	AqA j-  ! 	AvA j-  !	 (  kAM@  A (!
 ( j" :   	:  A6   Aj

A ! 
A"G

 (  kAM@  A (!
 ( j /  ;   Aj
!  
j!
  6 ! !


    A  
A A(A  
     jAkA  
# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj  ( ( (AxG
 (" ( F@ 
 ( jA :    Ax6   Aj6

   )7   Aj A
j( 6 

   )7   Aj A
j( 6 
 Aj$ 
# A k"
$  
Aj"@ ( AxG@# Ak"
$  (" ( F@ 
 
Aj! ( jA :    Aj6 
Aj A A@@ 
(AxF@ (" ( F@ 
 ( jA::    Aj6 
Aj!# A k"$  Aj"  - 
! (!@@@@ ("AxF@  :   6
# Ak"
$  A
j"( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj!
# Ak"$  (! Aj  ("	@ (AxF@ - 
! (!@@ 	E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj  v ("AxG
 	AF
  Aj! 	AlAk!	@ (" ( F@ 
 ( jA,:    Aj6 Aj  v ("AxG
 Aj! 	Ak"	
 

 
 

 
 )7 
 6 

 
 )7  
Aj A
j( 6 
 Aj$ @ 
(AxF@ Ax6 

  
)7  Aj 
A
j( 6 
 
Aj$  (AxG
  A  A
jG (AxG
# Ak"
$  ( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 
Aj!
# Ak"$  (! Aj  ("	@ (AxF@ - 
! (!@@ 	E
  E@ (" ( F@ 
 ( jA,:    Aj6
 Aj   ("AxG
 	AF
  Aj! 	AlAk!	@ (" ( F@ 
 ( jA,:    Aj6 Aj   ("AxG
 Aj! 	Ak"	
 

 
 

 
 )7 
 6 

 
 )7  
Aj A
j( 6 
 Aj$ @ 
(AxF@ Ax6 

  
)7  Aj 
A
j( 6 
 
Aj$  (AxG
  A A A$jH (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9301-9450
j Aj-  :    :   6  6 

  )7  Aj A
j( 6 

  )7  Aj A
j( 6 

  )7  Aj A
j( 6 
 A j$  
(AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  
)7  Aj 
A
j( 6 

  
)7  Aj 
A
j( 6 
 
Aj$ 

 
Aj 
Aj Aj
   
(AxF@   
)7  A
j 
Aj( 6 A 

   
)7  A
j 
A
j( 6  
(" @ 
(
  A
A
6  
A j$ 
# Ak"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:      -  AG@  ) 7 Aj

 (! (! ( " (   ("F@   A  (!
   Aj6  ( jA::       -  AG@  ) 7 Aj

A 
!  Aj$   
# A k"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:  Aj   @ - AG@  )7  ! 

 ( " (   ("F@   A  (!
   Aj6  ( jA::     Aj  (" (A !  - AG@  )7 Aj! 
 ( "E
   A
 A j$   
# A0k"$   ( !  - AG@ ( "(  ("F@  A (!
  Aj6 ( jA,:  
  A:   A A -  AG@  ) 7 Aj

 -  ! ( " (   ("F@   A  (!
   Aj6  ( jA::   ( !@@@ A M@A!  A
O
 !

   A n"A lkAqAtA j/  ; 	A ! 
 Aj  j A0r:  

A!   AtA j/  ; 	
  As" (  ("kK@    (!
 ( j Aj  j    j6A 
!  A0j$   
# Ak"  :  - 
# A k"$  (" ( F@ 
 ( jA :    Aj6 Aj  A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj  - 
! (! ("AxG@ Aj Aj-  :    / 
;   :   6
  6

 Aj  A G (AxG
 (" ( F@ 
 ( jA :    Ax6   Aj6

   )7   Aj A
j( 6 

   )7   Aj Aj( 6 
 A j$ 
# A k"$  Aj (  ((
 @@ ("AxF@  A:  

 (! (
AF@ -  !A


 A 68 B70 A: \ A 6L A 6X A 6T A 6D A 6<  A0j6PA A  A<j
 A(j A8j( 6   )07  Aj (
! (!A
! @  A
   6   6   :    :     ) 7
  Aj A(j( 6 
 A j$ 
A A7 A jA A  
# Ak"$ @@@@ ("E@A!

    ("  I"k6  ( " j6  E
 (
"A H
 Aj" -   At"	@ ("A G
  AF
 - 
!  -  	Ar ("A G
  - 
 Atr!A

  (
"6  6 A 
!  Aj6

   :    :   Aj$ 
A A A  
A  
AAA  
    (  (( 
# A@j"$ @@@ E@A!

 A H
A -  A! A"E

   ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6, Aj!# A0k"$  ( AxF@ (A A ((
 

  6 A6
 A 6 B7  A,jB
7   A j6  Aj6, ( ( Aj
! A0j$  
   )
7  A j Aj( 6   ( ! (!   6   6   6

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9451-9600
   6   6  A	:   ( " AxF  ErE@ (  A
 A@k$ 
   
A A7 A?jA A  
# A@j"$ @@@ E@A!

 A H
A -  A! A"E

   ! A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj
   )
7  A j Aj( 6   ( ! (!   6   6   6
   6   6  A:   ( " AxH  ErE@ (  A
 A@k$ 
   
A A7 A?jA A  
# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"A A D (AxG
  A  A
jG (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
# A k"$  Aj"  - 
! (!@@ ("AxF@  :   6
  A
j"A A D (AxG
  A A A
jD (AxF@   (
 - 

   )7   Aj A
j( 6 

   / 
; 	  A
j Aj-  :     :    6   6 

   )7   Aj A
j( 6 
 A j$ 
# Ak"	$ A -  AA"E@AA 
  6  6  	 6 	A6
 	A6# A0k"$ A" "j!
 Aj!@@@@@ ( "Aj" I
  j" I
 Aj! ! Ak"
 
A!@@ @A ! A H
A -  A! A"E

A ! A 6  6  6
@ ("AO
 ( ! (
 kAM A
j A (! ( 
 j At AqAvr;    (Aj"6  (
 kK@ A
j   (!
 (" j     j"6 Aj" 
G
 


   
   )
7   Aj Aj( 6  A0j$ 

A  
A  
 A 6( A6
 A 6 B7  AjA  
 	(" @   AtA
 	Aj$ 
# A@j"$  (! (!@ -  AF@ A6

 A8j Aj) 7   ) 70 Aj A0j - 0AI
  (4"E
  (8 A
@ -  AF@ A6 

 A8j Aj) 7   ) 70 A j A0j - 0AI
  (4"E
  (8 A
 Aj! Aj! A j!# A k"$ @@@ E@A!	

 A H
A -  A! A"	E

 	  ! Aj! !# Ak"
$ @@@@@@ ( Ak 
@ E@A!


 A H
A -  A!
 A"
E

 
  !  6  6  6 

 (
! (!
 (!	@ E@A!


 A H
A -  A!
 A"
E

 
  ! 
 6
 
 6 
 6 @ 
Aj   
(!
 
(
!
  
j 
  Aj  j6   
)7  	E
 
 	A

 (! (!
A!	@ (
"@ A H
A -  A!
 A"	E

 	  ! 

-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9601-9750
 6
 
 6 
 6 
AjA !
 
(" jA :   
(!
A! @ A H
A -  A!
 A"E

   !	 
A
j" 6  
 	6 
 6 
Aj  Aj" ( " 
(j   Aj  j6   
)7  
@  
A
 
E
  
A

 
  
 
Aj$ 

 
  
 Aj!
 !A !
# Ak"$ @@@@@@@@ ( Ak 
 E@ 
A 6 
B7 

A !
 A H
A -  A!
 A"E
   !	 
 6 
 	6 
 6  	Ak!@  j"-  "AF@ A :   Ak"



  	jAk Aj:  

 (! (!
A! (
"@ A H
A -  A!
 A"E

   !  6
  6  6 AjA !
 ("	 jA :   (!A! @ A H
A -  A!
 A"E

   ! A
j" 6   6  6 Aj  Aj" ( " (j 	  
Aj  j6  
 )7  @ 	 A
 
E
  
A

 (
!	 (! (!@ E@A!


 A H
A -  A!
 A"
E

 
  !  6
  6  6 	@ Aj  	 (!
 (
!
  
j  	 
Aj  	j6  
 )7  E
  A

 
  
 
  
 
  
 
  
 Aj$    (
" ( (" (
A (	  (! ( ! ("@  A
 ("@  A
A -  AA"
AA 
   
  6
  6  6  6   6 A 6  6  A j$ A -   (
! (!AA"@  6   6  A 6   6  A@k$ 
AA 

    ( -  AtA j( A
#  A A   ( -  " A
A  
m  ( !# A0k" $    6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj!  A0j$  
(    ( -  At" A j(   A j( 
@@  -  "AF A
Fr
 @@@@@@@@@@@@@ 
	


 
  (!  (" ( "@   
  ("E




@  - 
A
I
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E




@  (
AG

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9751-9900
   (!  ("( "@   
 ("E
    (
  (!  (" ( "@   
  ("E



  (
"@  ( A
  (!  (" ( "@   
  ("E
	


  (
"@  ( A
  (!  (" ( "@   
  ("E

	
  (!  (
" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (
"@  ( A
  ("@  (
 A
  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E


  (!  (" ( "@   
  ("E
     (

    (
7  ( !  (" ( "@   
  ("@    (

	# Ak"$ @@ E@A !

 Aj!  ( !  ((
!@@ A4j    (4" AxF
 (8! (<AF@ -  !A


 A 6X B7P A: | A 6l A 6x A 6t A 6d A 6\  A j6pA A  A j
 A j A j( 6   )P7@  (! ( !	A
!
  @   A
  )@7  Aj A j( 6   6  	6
  : 	  
:  Aj Ak"
 
A !

 A:  Aj
 Aj$  
A A7 A@kA A  

# Ak"$ @@@ @ Aj! ( ! ((
!@ A4j    (4"AxF
 (8! (<AF@ -  !	A


 A 6X B7P A: | A 6l A 6x A 6t A 6d A 6\  A j6pA A  A j
 A j A j( 6   )P7@  (!
 ( !
A
!
 @  A
  )@7  Aj A j( 6   
6  
6
  	: 	  
:  Aj Ak"
 

   

A A7 A@kA A  
 A:  Aj  A:  
 Aj$ 
  A A
 - !@@@@@@@@@@ -  "Ak 
 (!A!A! (
"@ A H
	A -  A! A"E
	
   !   6
   6   6 (! ("@A ! A H
A -  A! A"E

   

 (!A!A! (
"@ A H
A -  A! A"E

   !   6
   6   6 (! ("@A ! A H
	A -  A! A"E
	
   

  Aj Aj (! ("E@A!A  

 A H
A -  A! A"E
   

  Aj Aj  Aj Aj ( !@ ($"E@A!

 A H
A -  A! A"E

      6

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:9901-10050
A$!A 

 (!A!A! (
"@ A H
A -  A! A"E

   !   6
   6   6 (! ("@A ! A H
A -  A! A"E

   

  Aj Aj (!@ ("E@A!

 A H
A -  A! A"E

   
   6A!A
  j 6    j 6    :     : 
 
   
   

~# A k"$ A -   (!
 ( !
@AA"
@A -   
AjA (  6   
A (  6  AA"	E
 	AjA -  :   	A (  6   A6L  	6H B 7@  
6< A68 A8j!# A k"$ A ( !A ( !
 A j"	 A j!# A k"$  Aj" 	 - 
! (!
@@ ("	AxF@  :   
6
  A
j"	A A D (AxG
  	A A A
jD (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    :   
6  	6 

  )7  Aj A
j( 6 
 A j$ @@ (TAxG@ A0j"
 A j( 6   )T7( (H"	@ (L 	A
 A@k 
( 6   )(78 A A A8j -  "
A
F
  / ;   )7 Aj - :   Aj Aj) 7  A j A j) 7  )!  (
6
  7

 A
j A j( 6   )H7
 (!	 
  
 ("
 (
 
(
 A
!
 	E
  
 	A
  
:   A j$  (8"
@ (< 
A
 (D"
@ (H 
A
@ -  A
F@ A0j A0j) 7  A(j"
 A(j) 7  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  A8j" # Ak"$  A j    A@k" A j) 7  A j"
 A j) 7  A j"
 Aj) 7  A j"	 Aj) 7  A j"
 Aj) 7   )l78@@@@@@@@@ (h"A3F@ Aj ) 7  Aj 
) 7  A j 
) 7  A(j 	) 7  A0j 
) 7   )87 Aj B7 B 7 B7x B 7p B7hA -  AA"
E
A -   
AjA )  7   
AjA )  7   
A )  7  AA"E
 A 6
  6 B7  
6
 A6A -  A<A"E
 A 6 B7 A: X A 6H A 6T A 6P A 6@ A 68  Aj"	6L 
 A8j"

A -   (!
 (! (!AA"E
 A 6@  6< A68  
6  	"@ (8"E
 (< A

 (<! (8"	AxF
 (@!
A -   - !AA"E
 A 6@  6< A68 A8j"
 Aq"A	K A O@ 
 A n"A0r  A lk!
 A8j AqA
n"A0r  A
lk 
A0rAq A8j A@k( 6  A0j )87  A,jA6  A 6( A$j 
6  A j 6  A
j 	6  AjA
6  A 6  
6  6
  6 A6 A 6   A<j6D A6@  6<  68  6 A 6  A
j6 
 Aj Aj" Aj) 7  Aj" Aj) 7   )7 ("	 (F@ Aj
 ( 	Alj"
 )7  
Aj ) 7  
Aj ) 7  Aj" 	Aj6   Aj" )h7  Aj A j) 7  Aj A j) 7  Aj Aj) 7  A(j Aj) 7  A j ) 7   A36  (" E
	 (
  A
	
   )74  A<j Aj( 6   A,j 
) 7   A$j 	) 7   A
j 
) 7   Aj 
) 7   A
j ) 7    )87   6 

AA 
AA 
AA< 
AA 
A A7 AjA A  
AA 
   s @  A
 A<A 
AA AA A j
 (" @ (

-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10051-10200
  A
 A(j!

 
( " @ (,  A
 Aj$  - 8! (<" @ (@  A
 (H" @ (L  A
@ AG
  (T" E
  (X  A
 -  ! (" @ (  A
 (" @ (  A
@ AG
  (
" E
  (   A
 ( " @ (  A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" E
   AtA

 A j A j"	) "7  A j Aj"
) "7  A j Aj"
) "7  A@k Aj") "7   ) "78 A
j 7  Aj 7  A
j 7  A$j 7   A6   7   ) 7  A
j ) 7   Aj 
) 7   A
j 
) 7   A$j 	) 7   A,j A(j( 6  -  ! (" @ (  A
 (" @ (  A
@ AG
  (
" E
  (   A
 ( " @ (  A
 (!
 (" @ 
Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @ 
  AtA
 (" @ (
  A
 ((" E
  (,  A
 A j$ 
AA 
AA 

	~# A k"$ @ (
"
AxG@ (! (!
 Aj A j( 6   )7 - $!	  )70  )7(  ) 7  Aj" 
  A j! ! AjA  ("AxG!# Ak"$ @@ 	E@ 
  A#6 

 B7` B 7X B7P B 7H B7@  Aj A@kA A	K  A36 

@@ ("	A O@ A@kA  (  ( ("-   - @"
A
F@ A;j A j( "
6   Aj A j) 7  Aj A j) 7  Aj 
6   )D7  A j Aj 	AkA ( "tAqE@A tA(q
 ((A F
  A$6 

 ((A F
  A$6 

 A7j" A j)  7   A0j" A j)  7  A(j A j)  "
7   ) A"7  )`!  A j )  7    Aj ) 7    Aj 
7     7 	   7(   
:   A6 

  A$6 

 A@k     A j - D!@ (@"A3F@ 
  A!6 

   ) E7   A<j A j(  6    A5j A j)  7    A-j A j)  7    A%j A j)  7    A
j A j)  7    Aj A j)  7    A
j A j)  7     :    6 

 B7` B 7X B7P B 7H B7@  Aj A@kA A	K  A36 
 ( " @ ($  A
 ( !  ("@ ( A
  AG  AMq
  (" E
  (  A
 Aj$  (" @ (  A (!
 E AxFrE@ (
 A
 
@ 
 
A
 (! (" @ !@ ( "@ Aj(  A
 A
j( "@ Aj(  A
 Aj!  Ak" 
 

 ( " E
   AlA

 B7@ B 78 B70 B 7( B7   Aj A jA AK  A36 
 (" @ (
  A
 ((" @ (,  A
 A j$ 
'# Ak"$ @@@@@ (" (0G
  (" (, 
 A!@@@@ -  "AkA  AqAFAqAk 
   -  !

 A:    - : 

 Aj AjA! A:  
 AkA  AqAFAqAk
  A%6 A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @ (  A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @   AtA
 (" @ (
  A
 ((" E
 (,  A

     A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10201-10350
A
!  AG

  j" ( "E
   ( A
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" @   AtA
 (" @ (
  A
 ((" E
 (,  A

 A j A0j) 7  A j A(j) 7  A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7( A(j! - !
# Ak"$  A:  (! ( ! A j"A AA! Aj    Aj"  (
! (! ( "@ ($ A
 A j  (
" @@@@@ -  "AG@@ Aj"E
 (<!
 (8!	 (4!
 (0!
 (,! ((! ($!@@@@@@@@@@@@@@ 	


 
 
 	( "@ 
  
 	("E

 
  	(


@ AqA
I
  	( "@ 
  
 	("E
  
  	(
 ( "@   
 ("E

   (


@ AG
  	( "@ 
  
 	("E
  
  	(
 ( "@   
 ("E
   (


 @ 
 A
 ( "@   
 ("E
	   (
	
 @ 
 A
 ( "@   
 ("E
   (

 
( "@ 	  
 
("E
 	  
(

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 ( "@   
 ("E
   (

 @ 
 A
 	@ 
 	A
 ( "@   
 ("E
   (

 @ 
 A
 	@ 
 	A
 ( "@   
 ("E
   (

 ( "@   
 ("E
   (

 ( "@   
 ("E
    (
 A j    -  "AG
 
 AI!
 ( "@   
 ("@   (
@@@@ E@   
E@   
:   A26 

 !A !# A k"
$ A ( !A ( ! 
 
:  
Aj 
Aj 
(!@@@ 
(
"E@ 
Aj  AA \


-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10351-10500
A -   At"A"	E
 ! 	! !
@  Alj!
@@@@@@ -  Ak 
 Aj( !
 Aj( 

 Aj!
A

 
Aj!
A

 
Aj!
A

 
Aj!
A

 
Aj!
A
!  
6  Aj 6  Aj! Aj! Aj! 
Ak"

 
 
Aj   	 \ 	 AtA
 
("@  AlA
  
(" 
(
 (   
("@  A
 
A j$ 

A  
 B7@ B 78 B70 B 7( B7 A -  AA"E
A -   AjA /  ;   AjA )  7   A )  7  AA"E
 A 6d  6` B7X  6T A6PA -  A(A"E
 A 6 B7 A:  A 6x A 6 A 6 A 6p A 6h  Aj6| A(j" A jE
A A7 AjA A  
  A(6 
 (" @ (
  A
 A(j!

AA( 
 Aj Aj( 6   )7A -  AA"E
 A 6p  6l A6h A j" 
Aq"A	K A O@  A n"A0r 
 A lk!

 A j 
AqA
n"A0r 
 A
lk 

A0rAq A$j A j"( 6  A
j )h7  A6 A 6   )7 Aj Aj( 6  AjA6  A 6  A(j6 A6  6  6  6 A 6  A j6 Aj Aj  A j) 7  A j" A j) 7   )P7h A8j" (<" )h7  Aj ) 7  Aj ) 7  A@k"A6    ) 7  A
j A(j) 7   Aj A0j) 7   A
j ) 7   A,j A j) 7   A$j ) 7   A36  (" E
  (
  A
 ( " @ (,  A
 Aj$ 

A  
AA 
AA 
AA 
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (
" E
   AtA

 A j A0j) 7  A j A(j) 7  A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7( A 6t B7l A:  A 6 A 6 A 6 A 6 A 6x  A j6 ( (
 A jE@ A j A j( 6   )l7` A(j!# A0k"$ @@@@@@ A j"(AM@A -  A
A"	E
A -   	AjA (  6   	A )  7  AA"E
A -  AA"
E
 A6  
6 A6   )(7
A -   
AjA (  6   
A (  6   Aj A0j( 6 AA"
E
 A6 
Aы6   A jA6  A
j 
6  A$j ) 7  A,j Aj( 6  A j"
B7 A! Aj"B 7  Aj"
B7  Aj"
B 7  B7   (
"A6  6 B7  	6 A
6  
A6    ) 7  A
j 
) 7   Aj 
) 7   A
j ) 7   A,j A(j) 7   A$j 
) 7 A3!

 ( "@ ( A
A.!A(! ("E
  (
 A
  j"( "@ ( A
   6  A0j$ 

AA
 
AA 
AA 
AA 
 (" @ (  A
A!@@@ -  " AkA   AqAFAq 
 ("@ ( A
 ("@ ( A
A
!  AG

  j" ( "E
   ( A
 ( " @   A
 (! (" @ Aj!@ Ak( "@ (  A
 A j!  Ak" 
 

 (

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10501-10650
" E
   AtA

A A7 AjA A  
 Aj$ 
 @@@@@ Ak 
 A A
  Ax6   A: 
 A AE


 (  AڥG
   Ax6   A: 
    A A
  Ax6   A : 
F# Ak"$  Aj" Aj( 6  Aj Aj( 6   ) 7 A,j ) 7  A4j Aj) 7  A
6   ) 7$ (! ( ! A j" Aj!# A k"
$ @@@@@@@@A A j"( Ak" AOAk 
# A k"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@@@@@@ (AxF@ (" ( F@ 
 ( jA::    Aj6@@@@@ ( Ak 
 Aj A A - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 


  :   6
 Aj A
jA A AjD (AxF
	 Aj A
j( 6   )7 


 Aj A A - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 


  :   6
 Aj A
jA A AjD (AxG@ Aj A
j( 6   )7 


 Aj A
jA A AjD (AxF
 Aj A
j( 6   )7 
	
 Aj A A
 - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 
	
  :   6
 Aj A
jA A AjD (AxF
 Aj A
j( 6   )7 

 Aj A A - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 

  :   6
 Aj A
jA A AjD (AxF
 Aj A
j( 6   )7 

 Aj A A - 
! (! ("AxG@ A
j Aj-  :    / 
; 	  :   6  6 

  :   6
# Ak"
$  A
j"( "(! - E@ (  F@ 
 ( jA,:    Aj"6
 A :  (  F@ 
 Aj! Aj! ( jA":    Aj"6 (  kA
I  A
 ( 
 (jA A
  (A
j"6 (  kAM  A ( 
 (jA ;    (Aj6@ ( AxF@ 
Aj 

 
Aj!	# A k"$  Aj"
  - 
! (!@@@ ("AxF@  :   6
 
 A
j"
A A H (AxG
# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 A
j! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 
 (jA ;    (Aj6 ( !# Ak"$  AjA :   B 7    A
n"A
lkA0r: 	A
A	 A
I
   A
pA0r: A A M
   A nA
pA0r: A AI
   AnA
pA0r: A A I
   A nA
pA0r: A AI
   AnA
pA0r: A A=I
   A=nA
pA0r: A AI
   AnA
pA0r: A A/I
   A/nA
pA0r: A AI
   AnA0r:  A 
"k" (  ("kK@    (!
 ( j  j  AjAx6    j6 Aj$ @ (AxF@ 
Ax6 

 
 )7  
Aj A
j( 6 
 Aj$  (AxG
# Ak"$  
( "(! 
- E@ (  F@ 
 ( jA,:    Aj"6
 
A :  (  F@ 
 Aj! ( jA":    Aj"6 (  kAI  A ( 
 (jA A  (Aj"6 (  kAM  A ( 

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10651-10800
 (jA ;    (Aj6 Aj! (  ("k!
 -  E@ 
AM@  A (!
 ( j"
A (  6   
AjA -  :  A

 
AM@  A (!
 ( jAի6  A
!
 Ax6    
j6@ (AxF@ 
Ax6 

 
 )7  
Aj A
j( 6 
 Aj$  (AxF@ 	 (
 - 

 	 )7  	Aj A
j( 6 

 	 / 
; 	 	A
j Aj-  :   	 :  	 6 	 6 

 	 )7  	Aj A
j( 6 

 	 )7  	Aj A
j( 6 
 A j$ 
@ 
(AxF@ Ax6 

  
)7  Aj 
A
j( 6 
 
Aj$  ("AxF
  )7  6 

  )7  Aj A
j( 6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 ( AxF@ (" ( F@ 
 ( jA :   Ax6   Aj6

  ) 7  Aj Aj( 6 
 A j$ 

  A 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A
@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@@@@@A (
Axs" AOAk 
 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A D (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A D (AxG@  )7  Aj A
j( 6 

 Aj A
jA A A
jD (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A D (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A D (AxG@  )7  Aj A
j( 6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  )7  Aj A
j( 6 


-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10801-10950
  )7  Aj A
j( 6 
 Aj$ 

# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@@@A ( Axs" AOAk 
 Aj A A - 
! (! ("	AxF
  / 
; 	 A
j Aj-  :    :   6  	6 

 Aj A A
 - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A AjA (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A
 D (AxG@  )7  Aj A
j( 6 

 Aj A
jA A A
jA (AxG@  )7  Aj A
j( 6 

  (
 - 

  (
 - 

   A G
 A j$  (AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  )7  Aj A
j( 6 

  )7  Aj A
j( 6 
 Aj$ 

# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$ @@@@@@@@ ( Ak 
 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A
 AjD (AxG@  )7  Aj A
j( 6 

 Aj A
jA A AjC (AxF
  )7  Aj A
j( 6 

 Aj A A - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A
 AjD (AxG@  )7  Aj A
j( 6 

 Aj A
jA A AjC (AxF
  )7  Aj A
j( 6 

 Aj A A
 - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A
 AjD (AxF
  )7  Aj A
j( 6 

 Aj A A	 - 
! (!	 ("
AxG@  / 
; 	 A
j Aj-  :    :   	6  
6 

  :   	6
 Aj A
jA A Aj? ("AxG@  )7  6 

  (
 - 

  (
 - 

  (
 - 

  (
 - 
 A j$  (AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  )7  Aj A
j( 6 

  )7  Aj A
j( 6 
 Aj$ 


-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:10951-11100
# Ak"$  (" ( F@ 
 Aj! ( jA :    Aj6 Aj A A@@ (AxF@ (" ( F@ 
 ( jA::    Aj6 Aj!# A k"$  Aj"  - 
!	 (!
@@ ("
AxF@  	:   
6
  A
j"	A A D (AxG
  	A A A
jC (AxF@  (
 - 

  )7  Aj A
j( 6 

  / 
; 	 A
j Aj-  :    	:   
6  
6 

  )7  Aj A
j( 6 
 A j$  (AxG
 (" ( F@ 
 ( jA :   Ax6   Aj6

  )7  Aj A
j( 6 

  )7  Aj A
j( 6 
 Aj$ 

 
Aj A A 
- 
! 
(! 
("AxG@  
/ 
; 	 A
j 
Aj-  :    :   6  6 

 
 :  
 6
 
Aj 
A
jA A AjD 
(AxG@  
)7  Aj 
A
j( 6 

 
Aj 
A
jA A AjC 
(AxG@  
)7  Aj 
A
j( 6 

  
(
 
- 
 
A j$ @@@ (AxG@ Aj ( 6   )7 (h"@ (l A
 Aj Aj( 6   )7 A@kA A! Aj - @A
G


 A j A j( 6   )h7D

 Aj A j) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   )@7 A6 A 6 B7  Aj"B 7  Aj6 A j Aj Aj  (
"6p  ("6l I  Aj - k:     / i;    )x7  Aj Aj) 7   A j Aj) 7    (t6
   6   6  A:  

 (D! A j  (H" (L (
 @@ (hAF@ (l
   )p7  A
:    A
j A j( 6  


 Aj Aj) 7  Aj A j) 7  Aj A j) 7   )h7 A6D A 6@ B7L  AjB7  Aj6H  A
j A@k Aj (!   (6   6  A:  A! @@@ (  
 (" @ (  A
A! 
 Aj  j" ( "E
   ( A
 


 A j A j( 6   )p7@ A6 A 6 B7  A@kB7  Aj6  A
j Aj Aj (!   (
6   6  A:   (@" @ (D  A
 E

  A
@@@@@@@@@@A ( "Ak"   AO	 
 ($" @ ((  A
 A0j! 

 A(j! @ ($ 
 ((" @ (,  A
 A4j! 

 (0Axs! ($" @ ((  A
 A0j!  AF AKr


 ($" @ ((  A
 A0j! 

@@A ($" Axs" AO 
  @ ((  A
 (0"AxF
 A0j! 

 (("AxF
 A(j! 

A! @@   
A!  ($"E
  (( A
 A j  j! 

 (("AxN


  ( !
 E
   ( A
 Aj$ 
   (  ( 

# A k"$ A ( !	A ( !
  :  Aj Aj (!@@ (
"E@ Aj 
 	AA \

A -   At"A"E
 ! ! !
@  

-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11101-11250
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!
  6  Aj 
6  Aj! Aj! 
Aj!
 
Ak"

 
 Aj 
 	  \  AtA
 ("@  AlA
 Aj   (" (
 (
  (" AxF  ErE@ (  A
 ("@  A
 A j$   AxG
A  
_# A k"$  (!
 (!
  :  Aj Aj (!@@ (
"E@ Aj 
 
AA \

A -   At"A"
E
 ! 
! !@  Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! Aj! Ak"
 
 Aj 
 
 
 \ 
 AtA
 ("@  AlA
# Ak"$  A
j  Aj"(" (" (
 @ (
"AxG@ A j! ("! (!A !
A !
A !# A0k"$  A:  A 6
  6  6 Aj!# A k"$   Aj"Ax!@@@@@@ -  @@ - "A"G@ A F
 B7 

 Aj -@ ("AxF@Ax!

  / 	; 	 A
j A
j-  :   - !  (
6
  : 
 A6   6

 - 
"E
  Ak": 
 Aq
Ax!
 A6   6

A  
  Aj!# Ak"$  Aj" - - !@@@@@@@@ ("AxF@   ("AxG@ Aj A
j-  :    / 	;  - !

 Ak
 Aj A
j-  :    / 	; 
 (
!  / ; 	 A
j Aj-  :    6
  :   6 A6 

A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax!	 - E
 - "A"G@ A F
Ax!

 A@k" 
 (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 	AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k" 
 (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 	AxG@ A(jA A 	E



 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@E

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11251-11400


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  
6  	6 A 6 

  )@7 A
j A j( 6  A6  	E

 
 	A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D!	 (H!
 (L!

  
60  
6,  	6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 	AxrAxF

 
 	A
 - 
Aj"Aq G
	  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 

A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax!	 - E
 - "A"G@ A F
Ax!

 A@k" 
 (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 	AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k" 
 (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 	AxG@ A(jA A 	E



 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6

-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11401-11550
  
6  	6 A6 

  )@7 A
j A j( 6  A6  	E

 
 	A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D!	 (H!
 (L!

  
60  
6,  	6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 	AxrAxF

 
 	A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 

A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax!	 - E
 - "A"G@ A F
Ax!

 A@k"  (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 	AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!
	
 A@k"  (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 	AxG@ A(jA A 	E



 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  
6  	6 A6 

  )@7 A
j A j( 6  A6  	E

 
 	A


-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11551-11700

   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D!	 (H!
 (L!

  
60  
6,  	6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A(jA A

 A0j A j( 6   )P7(
 	AxrAxF

 
 	A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 

 !A !A !A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 

  Aj Ax!Ax!
 - E@Ax!	


 - "
A"G@ 
A F
Ax!	Ax!


 A@k  (@"AxG@Ax!	
	
 A j!
@@@@ - D"Ak 
 A j  (PAxG
 A@k  (L!
 (H! (D!	 (@


 A j  (PAxG@Ax!	
	
 A@k  (L! (H! (D!
Ax!	 (@E

	
 A@k @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG@Ax!	


Ax!	
 Aj  - E@ !


 - !@@@ Aq"A,G@Ax! A G@ !

 
AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A@k  (@"AxG@ !

 - D"Ak
 !Ax!

 A@k @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxF
 !

 
AxG@ A(jA A !

 A j  (PAxG@ !


 A@k  (L! (D!
 ! (H! (@E




-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11701-11850
 	AxG@ A(jA A ! 	


 A j  (PAxG
 A@k  (L!
 (H! (D!	 (@E


 	AxF@ A(jA A 
E
  
A

 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6  6  	6  6
  6  
6 A6 

  )@7 A
j A j( 6  A6  
@  
A
 	E
  	A

   - ! -  
 
 !
	


 B7 


Ax!	
 A(jA AAx!


 
 )P7  
Aj A j( 6  (D!	 (H! (L!

  
60  6,  	6( !

 
 )P7  
Aj A j( 6  (D!
 (H! (L!
  60  6,  
6(Ax!


 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A0j A j( 6   )P7(
 	AxrAxF

  	A
 
AxrAxF
   
A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 

A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 


  Aj Ax!Ax!	 - E
 - "A"G@ A F
Ax!

 A@k" 
 (@"AxG
@ - D"@  @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG
	

 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@

 Aj  - E
 - !@@@ A,G@Ax! A G
	 	AxG



  Aj  - E@Ax!
	
 - 	"A"G@Ax! A F
	Ax!

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:11851-12000
	
 A@k" 
 (@"AxG
 - D"@  @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxG



 	AxG@ A(jA A 	E



 A j  (PAxG
 A@k  (L!
 (H!
 (D!	 (@E


 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6
  
6  	6 A6 

  )@7 A
j A j( 6  A6  	E

 
 	A


   - ! -  
 




 B7 
	
 A j" )P7  Aj A j( 6  (D!	 (H!
 (L!

  
60  
6,  	6(

 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A jA A  (L60  )D7(

 A0j A j( 6   )P7(
 	AxrAxF

 
 	A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 

 !A !A !A !# A k"
$  
Aj!# A k"$  A j @ -  E@ B7 

@@@@@@@@@@@@@ - !A F@ - 
"@  Ak": 
 AqE@ B7 

  Aj Ax!Ax!
 - E@Ax!	


 - "
A"G@ 
A F
Ax!	Ax!


 A@k # (@"AxG@Ax!	
	
 A j!
@@@@ - D"Ak 
 A j  (PAxG
 A@k  (L!
 (H! (D!	 (@


 A j  (PAxG@Ax!	
	
 A@k  (L! (H! (D!
Ax!	 (@E

	
 A@k @ (@AxG@ A j A j( 6   )@7P

 A j 
 (PAxG@Ax!	


Ax!	
 Aj  - E@ !



-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12001-12150
 - !@@@ Aq"A,G@Ax! A G@ !

 
AxG
 !

  Aj  - E@Ax! !


@@@@ - 	"A"G@Ax! A G
 !

 A@k # (@"AxG@ !

 - D"Ak
 !Ax!

 A@k @ (@AxF@ A j 

 A j A j( 6   )@7P
 (PAxF
 !

 
AxG@ A(jA A !

 A j  (PAxG@ !


 A@k  (L! (D!
 ! (H! (@E



 	AxG@ A(jA A ! 	


 A j  (PAxG
 A@k  (L!
 (H! (D!	 (@E


 	AxF@ A jA A  (L60  )D7( 
E
  
A

 - 
Aj"Aq G
  : 
 A@k  (@AxF@  
6  6  	6  6
  6  
6 A6 

  )@7 A
j A j( 6  A6  
@  
A
 	E
  	A

   - ! -  
 
 !
	


 B7 


Ax!	
 A(jA AAx!


 
 )P7  
Aj A j( 6  (D!	 (H! (L!

  
60  6,  	6( !

 
 )P7  
Aj A j( 6  (D!
 (H! (L!
  60  6,  
6(Ax!


 !  ( E6P  A j(  6 S - D!
 A0j ( S6    (P6 -  : ,  6(

 A0j A j( 6   )P7(
 	AxrAxF

  	A
 
AxrAxF
   
A
 - 
Aj"Aq G
  : 
  )(7 A6  A
j A0j( 6 
 A j$  
(! 
(
! 
(!
@@ 
("AG@ 
(
! 
(! 
(!
 
  
-  
 B7  
@  
A
 
E AG AMqr
  
A

  6
  6  
6 A6 

 
- A G@ B7  
@  
A
 
E AG AMqr
  
A

   6  6  
6  6
  6  
6  6 
 
A j$ 
 Aj$  - 
Aj"Aq F@  : 
  )7  Aj A

-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12151-12300
j) 7  Aj Aj) 7  Aj A
j( 6 

A  
 A j$  ( ! (
!
 (!@ ("AG@ (,! ((! ($!   (AxF@  6  6  6  6
  
6  6  6 

  )7 A
j A
j( 6  A6  @ 
 A
 E AG AMqr
  A

  6
  
6  6 A6 
 A0j$ 

A  
A  
@ (PAG@   )P7  A
:    A
j A j( 6   Aj A j) 7   A
j A j) 7 

 A0j A j( 6   )T7(  A A! A(j
 E
  A

  6
  6 A!6$ A 6   AjB7H  A jB7@ AjA:   AjA(6  AjB7  A jB 7  A6< A6, A 6( A64 A6p A: l A 6h B 7` A6X A6P  A j68  A@k60  A
j A(j  ( !   (6   6  A:  
 Aj$  (" @ (  A
 A j$ 
A  

~# A k"$ A ( !
A ( !
  :  Aj Aj (!	@@ (
"E@ Aj 
 
AA \

A -   At"A"
E
 	! 
! !
@ 	 Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! Aj! 
Ak"

 
 Aj 
 
 
 \ 
 AtA
 ("@ 	 AlA
# A k"$  Aj"(! (!	 A j" A j  @@ (TAxG@ A0j" A j( 6   )T7( (H"@ (L A
 A@k ( 6   )(78 A A! A8j -  "A
F
   / ;    )7  Aj - :    Aj Aj) 7   A j A j) 7  )!   (
6
   7

 A
j A j( 6   )H7
 (!  	  (" (
 (
 A
! E
   A
   :   A j$  (" @ (  A
 A j$ 
A  

# Ak"$  Aj @ (
"@ (" Alj"Ak"
 kAn!  
F"
@A!	A 

A -   At"A"	E
 ! 	! !
@  
Alj!@@@@@@ -  Ak 
 Aj( ! Aj( 

 Aj!A

 Aj!A

 Aj!A

 Aj!A

 Aj!A
!  6  Aj 6  Aj! Aj! 
Aj!
 
Ak"

 
 
!   	 @@@@@@ 
-  Ak 
 Ak"
Aj( ! 
Aj( 

A! Ak

A! Ak

A! Ak

A! Ak

A! Ak
  (" @   AlA
 
E@ 	 AtA
 Aj$ 
A  
A  
@@@@@@@@@@@@A	  ( Ak" AO
 																					
  AjI
  (" (
"AxF ErE@  ( A
  ( "@  ( AtA
  AA
  - A
I
  (

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12301-12450
!  (" ( "@   
  ("E


  (AG
  (
!  (" ( "@   
  ("E


  ("E
  ( A

  ("@  ( A
  ("E
  ( A
  ("E


  ("E


  ("E
   ( A

    (
  ( A
M# Ak"$    A
j6
 A A
A A  A A A A
jA !  Aj$   
~# A k"
$  
  -  "@@ 
( @@ 
("E@A!


 A H
A!	 "
E

 !	@ AI
  Ak"A   M! 	Aj!@  AjO@@ 
 
A j"
M@  
O
 
 A  
A  
 
 
j"   j")  "B8"B:j-  :   Aj  BB"B"j-  :   Aj   BB("B4A?qj-  :   Aj   BB "B.A?qj-  :   Aj  B(A?qj-  :   Aj  BB BB B(B B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   A	j   BB("B4A?qj-  :   A
j   BB" BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   Aj  "AvA?qj-  :   Aj  AvA?qj-  :   Aj  A
j)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"j-  :   Aj  BB BB B(B B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  Aj)  "B8"B:j-  :   Aj   BB("B4A?qj-  :   Aj   BB" BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"j-  :   A
j   BB BB B(B B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   
A j!
  Aj"O



 Aj A  
@  Ap"k" M@ 
!

 	Aj!@  Aj"K@A  
  M@@ 
 
Aj"M@  O
  Aе  
A  
 
 
j"   j"-  "
Avj-  :   Aj  Aj-  "A?qj-  :   Aj  Aj-  "At AvrA?qj-  :   Aj  
At AvrA?qj-  :   
Aj!
 " O



  A  
@@@@@@@@@@ Ak 	
  M
  
j 	Aj"
  j-  "AqAvj-  :   Aj"E
  M
 Aj" O
  
j 
 At  j-  "AvrA?qj-  :   Aj" O
 AtA<q!A!

  M
A!  
j 	  j-  "AvjAj-  :    Aj"K@ AtA0q!

  A  
  A  
A  
  Aд  
  A  
  A  
  A  
  
j  	jAj-  :    j!
 !	 E@A !

  	O@ 	 
j!  	k!@@A  	kAq"E
  E
 A=:   AF
  AF
 A=:  AF
  AF
 A=: 
 

  A  
!

 	 A  
A A-A  
 	  
 	  	jK@A A*A  
 
A
j" 
  
(
@ 
 
)"B >
 
 > 
 6 
 
6 

-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12451-12600
 6
A A
 A A  
   6   
6   6  
A j$ 
J
~# Ak"
$ A!	A!
@@@@@@ @ A H
A -  A! A"
E

 
  ! @A !
 A H
A -  A!
 A"	E

 	  !@ E@A!


A ! A H
A -  A! A"
E

 
A0j" 
  " @@ 
(0E@ 
 6, 
 6( 
 6$ 
 6  
 6
 
 6 
 6 
 6 
 6
A !A !	# Ak"
$  
A 6
 
B7 
A
j"
(!@@@@@ 
("
@ 
ArgAsA	lA jAvAj" 
j" I

 
(! 
("@ ArgAsA	lA jAvAj" j"	 I

@@   	j"M@ 
(
! 
( "

A !

A  
 
ArgAsA	lA jAvAj" 
j" I

  j" I
@ A N@ 
@B
 
Aj" 
  
 
( 
(
"kK@   
 
(
!
 
( j  
 
  
j6

 @B 
Aj"    
( 
(
"kK@    
(
!
 
( j   
  j6

 
@B 
Aj" 
  
 
( 
(
"kK@   
 
(
!
 
( j  
 
  
j6

  
)7  Aj 
A
j( 6 

 A6  6 Ax6 
 
Aj$ 

A  
A  
A  
A  
 
(8! 
(4! 
(0"AxG
   6   6  A6 

   
)4"B >   >   6
   6   6  A06  @  A
 E
  A

A -  A
A"E
 AjA )  7   AjA )  7   AjA )  7   A )  7   
A
6x 
 6t 
A
6p 
 6 

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12601-12750
 6 
 6 
A0j Aj 
A j 
Aj 
- 0"A
F@ 
(4"@ 
(8 A
@ @A !@  j"-  A.F
  Aj"G
 

 
A+60 
A0j  A+6 

 
A+60 
A0jA !@ Ak F
  As j!  k!@  jAj-  A.F
  j! Aj! A~G
 
 !
 
A+60 
A0j 
 Av AqA Gj6  
 Av AqA GjAl6 
( !A! 
("@A !	 A H
A!	 "E

 
A0j!
 Aj!A !A !A -  !A -  !@@@@@@@@@@@ "Aq" 
A!

A
!

A
!

A
!
  k"A   M"A O
A !

 E
  Ak"j-  "A=F
 A j-  AG
 
 6 
 :  
A :  
A6 

 A k!@@@@@@ A`F
 A j" K
 Aj K
@@  j"
-  "A j1  "BQ
  
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "
BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "BQ@ Aj!

 
Aj-  "A j1  "
BQ@ Aj!

 
Aj-  "A j1  "BR
 Aj!
 
A :  
A6  
A
j Av<   
A	j Av=   
 At r6 


  j"
 B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   
Aj-  "A j1  "BQ@A!	

A	!	 
A	j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "
BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A!	 
Aj-  "A j1  "
BQ
A!	 
Aj-  "A j1  "BQ
 
Aj B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87  A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "
BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "BQ
A! 
Aj-  "	A j1  "
BQ
A! 
Aj-  "	A j1  "BQ
 
A

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12751-12900
j B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   
Aj-  "A j1  "BQ@A!	
	
A!	 
Aj-  "A j1  "BQ
A!	 
Aj-  "A j1  "BQ
A!	 
Aj-  "A j1  "
BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "BQ
A
!	 
A
j-  "A j1  "
BQ
A!	 
Aj-  "A j1  "BQ
 
Aj B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   AO@ Ak! Aj!  "I



A  
 
A :  
A6  
A
j  j"Av<   
A	j Av=   
 At 	r6 

A`A A  
  A  
 Aj A  


 
A6  
A: 

@@ AI
   Ak"
O
 @@@@@@@ Aj! AxF
   K
 Aj" I
@  Aj"M@  I
  K
@  j"-  "A j1  "BQ
  Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "
BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "BQ@ Aj!

 Aj-  "A j1  "
BQ@ Aj!

 Aj-  "A j1  "BR
 Aj!
 
A :  
A6  
A
j Av<   
A	j Av=   
 At r6 


A  
  j B4 B:" B." 
B( B"" B
" 
B B"BB( BB BB BB BB B(B B87   E
 Aj! Ak! 
 "K



Ax A  
  A  
Aа  
  A  
  A  
A  
 ! !
A  AM! Ak!
 Ak!	 Ak!A  k! Ak!
@@@@@@@@@@@ Ak"E@ ! A G!	A !B !A !# A k"$ @@@@  "O@  G
A !

  A  
@ A   j"-  "A=F
 @@ A j1  "BQ@A !

 B:!  j" AjF@A!

A - "A=F
 A j1  "BQ@A!

 B4 !  Aj"F@A!

A!
 Aj!A! - "A=F
 A j1  "BQ@A! !

 B. !  F@A! !

A!
 Aj!
A! - "A=F@ ! ! 
!

 A j1  "BQ@A!

 B( ! 
 F@A!

A - "A=F
 A j1  "BQ@A!

 B" !  AjF@A!

A - "A=F
 A j1  "BQ@A!

 B
 !  Aj"F@A!

A!
 Aj!A! - "A=F

-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:12901-13050
 A j1  "BQ@A! !

 B !  F@A! !

A!
 Aj!
A! - "A=F@ ! ! 
!

 A j1  "BQ@A!

 B ! 
 F@A!

A - "A=F
 A j1  "BQ@A!

 B
 !  A	jF@A	!

A	 - 	"A=F
 A j1  "BQ@A	!

 B !  A
j"F@A
!

 - 
A=F@A
!
 A
j!A
!

A  
   j"M@ 
 6 
 :  
A :  
A6 

A̬  
  k!  F@ !

A !@@@@ 
 j"
Aj"E
  j"-  A=G
@ 
Aq@ Aj"E
 Aj" G
 !
	
 Aj!

 AF
 -  A=G
 AqE@ !


 Aj! Aj G
 
 !

A  
Aԩ  
  
 
 j"M@ 
 6 
A ; 
A6 

A  
   j"M@ 
 6 
A ; 
A6 

Aܬ  
A !
@@@@@ AqAk 
 


  j" I
 AqE
 
A6  
A: 

 
A6  
A: 

Aܪ  
B !A !A !A !A !A !
A !@@@@@@@@@ 		   
 A6 A 6  B7
 B7  Aj6 A  
B!A!

B!A!A!

B!A!A!A

B !A!A!A!A!


B(!A!A!A!A!
A!

B0!A!A!A!A!
A!A!

A 
!
@@@@ 	E  B RqE@ 


  j" I
 @ 
 :  
A:  
A6  
 Ak6

A  
  O@ !

  j B8<   Aj! E@ !

    K!  F
  j B0<   Aj! E@ !

  F
  j B(<   Aj! 
E@ !

  F
  j B <   Aj! E@ !

  F
  j B<   Aj! E@ !

  F
  j B<   Aj!

A  
  A  

-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13051-13200
@   j" I
AA 
! 
 6 
 6 
 6 

A  
 A j$ 


  K
@  Aj"M@  K
@@  G@  j"-  "A j1  "BR


A A Aб  
  
F
 Aj-  "A j1  "
BR@  j"AM
 Aj-  "A j1  "
BR@  	F
 Aj-  "A j1  "BR@ AM

 Aj-  "A j1  "BR@  F
 Aj-  "A j1  "BR@ AM
 Aj-  "A j1  "BR@  
F
 Aj-  "A j1  "BR
  Aj"M
Aв  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
  Aj"M
A  
 Aj"E


 
A :  
A6  
A
j Av<   
A	j Av=   
 At r6 

A  
 Ak!  j" 
B4 B: 
B. B( B" B
 B"BB BB B(B B8>   Aj  B"BB BBB =   Aj!  Aj"M
 
A  
  A  
  A  
AAA  
AAA  
AAA  
AAA  
AAA  
AAA  
AAA  
A  
 
A :  
A6  
A
j  	j"Av<   
A	j Av=   
 At r6 
 
(0AF@ 
)4! @  A
   7  A
6 

 
A0j!  
(8"  K!# A0k"$  A: 
 A 6  6  6 A j!
A !A !A !# A k"	$  	A(j Aj"
@ 	- (E@ 
B7 

@@@@@@@@@@@ 	- )A F@ 
- 
"@ 
 Ak": 
 AqE@ 
B7 

 
 	A j 
Ax!Ax! 	-  E
 	- !"A"G@ A F
Ax!

 	A j" 
1 	(P"AxG
@ 	- T"@  
@ 	(PAxG@ 	A j 	A j( 6  	 	)P7@

 	A@k 

 	(@AxG
	

 	A0j 
 	(0AxG
 	A j 
 	(\! 	(X! 	(T! 	(P

 	Aj 
 	- E
 	- !@@@ A,G@Ax! A G
	 AxG



 
 	Aj 
 	- E@Ax!
	
 	- "A"G@Ax! A F
	Ax!
	
 	A j" 
1 	(P"AxG
 	- T"@  
@ 	(PAxF@ 	A@k 


 	A j 	A j( 6  	 	)P7@
 	(@AxG



 AxG@ 	A4jA A E



 	A0j 
 	(0AxG

-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13201-13350
 	A j 
 	(\! 	(X! 	(T! 	(PE


 
- 
Aj"Aq G

 
 : 
 	A j 
 	(PAxF@ 
 6
 
 6 
 6 
A 6 

 
 	)P7 
A
j 	A j( 6  
A6  E
  A

 	Aj 
 	- 	! 	- 
 


A  
 
B7 


 	A j" 	)07  Aj 	A8j( 6  	(T! 	(X! 	(\!
 	 6< 	 68 	 64

 ! 	 	( U6@ 	 	A j(  6 C 	- T!
 	A<j 	( C6   	 	(@6 9 	 : 8 	 64

 	A jA A 	 	(\6< 	 	)T74

 	A<j 	A j( 6  	 	)@74
 AxrAxF

  A
 
- 
Aj"Aq F

A  
 
 : 
 
 	)47 
A6  
A
j 	A<j( 6 
 	A j$  (,! ((! ($!@@@ ( @ ! !

 A j Aj ( "AxF
 ((! ($! E
   A
  6
  6  6 A A Aj

  6
  6  6 A
:  
 A0j$  
- 0"A
G@   
)@7  A j 
A j) 7   A(j 
A j) 7  
 
) 17 
 
A8j)  7   Aj 
) 7     
)7 	   :   A6  E
  A

 
A j 
A<j( 6  
 
)47p@ (" 
A j"(F ( ( A
@  AjA  ( ( 
(p!  AjA  
(t" 
(xA"! E
  A

  A: A3! 
(p"E
  
(t A
   6  @  A
 
A
j"( " @ (  A
 (
" @ (  A
 (" @ (
  A


   
/ 1; 	   
)@7  A
j 
- 3:    A j 
A j) 7   A(j 
A j) 7  
)4!   
(<6   7
   :   A6 
 
(
" @ 
(  A
 
(" @ 
(
  A
 
($" E
 
((  A

   
 
  
   
AA
 
 	  
 
Aj$ 

~# A k"$ @@  ("  (
"	F@ (!

 ( ("Alj! Aj!@   Aj"
6  Aj( 6   )7 ( !
A! ("@A ! A H
A -  A! A"E

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13351-13500

  
 ! Aj ( "6   )"
7  Aj 6  Aj 6   6  A
j 
7  Aj 6   Aj"6 Aj! 
" 	G
 

 (  6   ("@  (  AlA
 A j$ 
   

# A k"$ @@@@@@@@@@@@ ( Ak 
 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 


  :   6
 Aj A
jA A AjC (AxF
	   )7   Aj A
j( 6 


 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 


  :   6
 Aj A
jA A AjC (AxF
   )7   Aj A
j( 6 
	
 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 
	
  :   6
 Aj A
jA A AjD (AxF
   )7   Aj A
j( 6 

 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A AjD ("AxG@   )7   6 

 Aj A
jA A AjD ("AxF
   )7   6 

 Aj A A	 - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A AjC ("AxF
   )7   6 

 Aj A A - 
! (! ("AxG@   / 
; 	  A
j Aj-  :     :    6   6 

  :   6
 Aj A
jA A AjD ("AxG@   )7   6 

 Aj A
jA A AjC ("AxG@   )7   6 

   (
 - 

   (
 - 

   (
 - 

   (
 - 

   (
 - 

   (
 - 
 A j$ 
 A AA  
 A AA  
 A AA  
 A AA  
 A AA  
 A AA  
 A AA  
`# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
`# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6   Aj A0j$ 
# A@j"$   6
  6@ E@ A6 A 6 B7


 A6 A 6 B7
  6<  68  A8jB70
  AjB7(  A(j6   Aj A@k$ 
1~# Ak"$ @  @@@@@@@@@@@@@ ( Ak	 
 Aj ("0 ("1c A j ("
 ("- ( ("2 ("3 (" (
"
 (
".(
  - X"(A
F@ - Y

 Aj!# A k"$ # Ak"$  AjA A ! AjA ) 7  AjA ) 7  AjAء ) 7  B 7 AС ) 7@ 
"A O@  Av"7 Aj     A@qj A?q"

   
  :  Aj"
 Aj"*A  A@k"B 7  A8j"B 7  A0j"B 7  B 7( 
 Aj A(j^A -  @@@@@A A"&@ & )(7   &Aj" ) 7   &Aj" ) 7   &Aj" ) 7   Aj"B 7  Aj"B 7  A j"B 7  A4j )  7  A<j )  7  A j )  7  B 7  &)  7, Aj"A ) 7  Aj"A ( 6  B 7 A ) 7 Aj ) 7  Aj ) 7  Aj ) 7  Aj A j( 6   )(7 Aj ) 7  Aj ) 7  Aj ) 7   )7 A :  Aj Aj(  6    ( 6  )"7BZ
 7BB "7BV
 Aj"A j"A:   A j"4 ( 6  A j"5 ) 7   )7h AjA A  7B7 A j" ( ," ( (" ( "  ( 4"   ( 
" ( $" (  "  ( ""   " ( " (")j ("+A
w" ("'s (  "# ( "/ (
" ' +ssjjA
w )j" sjAw j"
A
w"	j ( "! 'A
w"
j ( "$ j 
  s 

-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13501-13650
sjAw j"
 	s ( 
"% j 
  A
w" s 
sjA
w 
j"
sjAw  j" 
A
w"s   j 
 
A
w" s sjAw 	j"
sjAw  j"	A
w"
j  A
w"j   j  
s 	sjA	w j"  
s  j 	 
A
w"
s  sjA
w j"	sjA
w 
j" 	A
w"s 
  
j 	  A
w"s sjAwj"	sjAw j"
A
w"j 	A
w" ( <" j  j  ( 0"
j 	 A
w"s 
sjAw j"	 
 ssjAw j"
 	A
w"s  ( 8"j 	 s 
sjA	w j"sjAw j"	 q 
A
w" 	AsqrjAjAw j"
A
w"j  	A
w"j   A
w"j  j  !j 	 
q  
AsqrjAjAw j"	 
q  	AsqrjAjAw j"
 	q  
AsqrjAjA
wj" 
q 	A
w" AsqrjAjA
w j"	 q 
A
w" 	AsqrjAjA	w j"
A
w"j # 	A
w"j  
 A
w"j  %j   j 	 
q  
AsqrjAjAw j"	 
q  	AsqrjAjAw j"
 	q  
AsqrjAjAwj" 
q 	A
w" AsqrjAjA
w j"	 q 
A
w" 	AsqrjAjAw j"
A
w"j  	A
w"j  A
w"j  $j  j 	 
q  
AsqrjAjA	w j"	 
q  	AsqrjAjA
w j"
 	q  
AsqrjAjAw j" 
q 	A
w"	 AsqrjAjA
w j" q 
A
w"
 As"qrjAjA
w 	j"A
w"j ! A
w"j   A
w"j  
j  	 %j  r sjAjA
w 
j"	 AsrsjAjA
w j"
 	Asr sjAjAwj" 
Asr 	A
w"	sjAjAw j" Asr 
A
w"
sjAjAw 	j"A
w"j  $ A
w"j   A
w"j  
 j 	  j  Asr sjAjA	w 
j"	 Asr sjAjA
w j"
 	AsrsjAjAwj" 
Asr 	A
w"	sjAjAwj" Asr 
A
w"
sjAjAw 	j"A
w"j   A
w"j   A
w"j  
 "j 	 #j  Asr sjAjA
w 
j"	 Asr sjAjAw j"
 	AsrsjAjAwj" 
Asr 	A
w"sjAjA
wj" Asr 
A
w"sjAjAw j"A
w"	j 	  A
w"
j 
  A
w"j   j  
j  Asr sjAjAw j" 
q  
AsqrjAkA
wj" 	q  	AsqrjAkA
wj" A
w"
q  
AsqrjAkAwj" A
w"	q  	AsqrjAkAw 
j"A
w"j ! A
w"j 
 A
w"j 	 j 
 #j  q  AsqrjAkAw 	j"	 q  AsqrjAkAw j"
 q 	 AsqrjAkA	w j" 	A
w"	q 
 	AsqrjAkAw j" 
A

-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13651-13800
w"
q  
AsqrjAkA	w 	j"A
w"j  A
w"j   A
w"j  
j 	 %j  q  AsqrjAkAw 
j"	 q  AsqrjAkAw j"
 q 	 AsqrjAkAw j" 	A
w"	q 
 	AsqrjAkAw j" 
A
w"
q  
AsqrjAkAw 	j"A
w"j  # A
w"j ! A
w"j 
 $j 	 "j  q  AsqrjAkAw 
j"	 q  AsqrjAkA
w j"
 	 AsrsjAkA	w j" 
 	A
w"	AsrsjAkAwj"  
A
w"
AsrsjAkAw 	j"A
w"j $ A
w"j  
 A
w"j  
j 	 j   AsrsjAkA
w 
j"	  AsrsjAkAw j"
 	 AsrsjAkAwj" 
 	A
w"	AsrsjAkA
w j"  
A
w"
AsrsjAkA
w 	j"A
w"j  A
w"j % A
w"j 
 j  	j   AsrsjAkAw 
j"	  AsrsjAkA
w j"
 	 AsrsjAkA
w j" 
 	A
w"AsrsjAkAw j"  
A
w"AsrsjAkA
w j"A
w"6 j    # ! #  %    # 
   $ / + Asr 'sj jA旊jAw )j"	A
w"
j 
 
 j  #j  j ) 	 ' Asrsj jA旊jA	w j" 	 
AsrsjA旊jA	w j"  
AsrsjA旊jA
w 
j"
  A
w"AsrsjA旊jA
wj"	 
 A
w"AsrsjA旊jAw j"
A
w"
j " 	A
w"j   
A
w"
j  !j  j 
 	 
AsrsjA旊jAw j" 
 AsrsjA旊jAw 
j"  
AsrsjA旊jAwj"
  A
w"AsrsjA旊jAw 
j"	 
 A
w"AsrsjA旊jAw j"
A
w"
j 
 % 	A
w"j  
A
w"
j  j  j 
 	 
AsrsjA旊jA
w j" 
 AsrsjA旊jAw 
j"  
AsrsjA旊jAw j"
  A
w"	AsrsjA旊jA
wj"
 
 A
w"
AsrsjA旊jAw 	j"A
w"j   
A
w"j  % 
A
w"
j 
  
j 	 "j 
 q 
 
AsqrjAjA	w 
j"	 q  AsqrjAjA
wj"
 q 	 AsqrjAjAwj"
 	A
w"q 
 AsqrjAjAwj"
 
A
w"q 
 AsqrjAjA
w j"A
w"
j  
A
w"	j  
A
w"
j  j  j 
 q 
 
AsqrjAjAw j" 	q  	AsqrjAjA	w 
j" 
q  
AsqrjAjA
w 	j"
 A
w"q  AsqrjAjAw 
j"
 A
w"q 
 AsqrjAjAw j"A

-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13801-13950
w"
j 
  
A
w"	j ! 
A
w"
j  
j  j 
 q 
 
AsqrjAjA
w j" 	q  	AsqrjAjAw 
j" 
q  
AsqrjAjAw 	j"	 A
w"q  AsqrjAjAwj"
 A
w"q 	 AsqrjAjA
w j"
A
w"j   
A
w",j  	A
w"
j    j  $j 
 
q 
 
AsqrjAjA
w j" 
Asr ,sjAjA	w 
j" AsrsjAjAw ,j"
 Asr A
w"sjAjAwj"	 
Asr A
w"sjAjA
w j"
A
w"
j 
  	A
w"j  " 
A
w"
j 
  j  j 
 	Asr 
sjAjAw j" 
Asr sjAjAw 
j" AsrsjAjAwj"
 Asr A
w"sjAjAwj"	 
Asr A
w"sjAjA
w j"
A
w"
j 
  	A
w"j $ 
A
w"
j 
  
j  j 
 	Asr 
sjAjA
w j" 
Asr sjAjAw 
j" AsrsjAjAw j"
 Asr A
w"sjAjA
wj"	 
Asr A
w"sjAjA
w j"
A
w"
j " 	A
w"j   
A
w"
j 
  j   !j 
 	Asr 
sjAjAw j"	 
AsrsjAjAwj" 	q 
 AsqrjAjAwj" q 	A
w"	 AsqrjAjAw 
j"
 q A
w"
 
AsqrjAjAw 	j"A
w"
j   
A
w"j   A
w",j , 
 %j  	 j 
 q , AsqrjAjA
w 
j"q  AsqrjAjAwj" q 
 AsqrjAjAwj"
 q A
w"	 
AsqrjAjAw 
j" 
q A
w"
 AsqrjAjAw 	j"A
w"
j  A
w"j  $ 
A
w"
j 
 
j   	j  q 
 AsqrjAjAw 
j"q  AsqrjAjA	w 
j" q 
 AsqrjAjA
wj"
 q A
w"	 
AsqrjAjA	w 
j" 
q A
w"
 AsqrjAjA
w 	j"A
w"
  j  
A
w"j   
j   	j  q  AsqrjAjAw 
j"
q A
w" 
AsqrjAjAwj" 
q 
 AsqrjAjAw j"	 A
w"
s  
j  
A
w"
s 	sjAw 

-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:13951-14100
j"sjAw 
j"A
w"
j  	A
w"j  
j  s sjA
w 
j" 
s  
 !j  A
w"s sjA	wj"sjA
w j"! A
w"
s  j  A
w"s !sjAw 
j"sjAw j"A
w"j !A
w" $j  j  s sjAw 
j" s  
 "j  A
w"s sjAwj"sjA
w j" A
w"s  j  A
w"s sjAw j"sjAw j"A
w"j6   #j  A
w"s sjAw j"A
w"$ +  "j   A
w""AsrsjAkAw j"#A
wjj6  '   j #  A
w"!AsrsjAkAw "j" j  %j  A
w"s sjA
w j"A
wj6    j  s sjA
w j" ! /j  "j   # 6AsrsjAkAwjj6  ! )j j  j  $s sjA
wj6
 Aj"# 5) 7  Aj" 4( 6   )h7A -  AA""E
 " )7   "Aj ( 6   "Aj #) 7   A6p  "6l A6h &A AA !# Ak"$  A 6 B7 @@@ ("E
  (!A !@@@ -  !@ AM@ Aj!

  AqAv
 Ak"AK
 Ak! At! !
  AqAv  vr
 Aj! A kt! ! Ak"



# A k" $   A 6  A6
  A 6  B7  AjA  
  AO  AqAv
 AF
 At 
AqAv

 
 ) 7  
Aj Aj( 6  Aj$ 

A A+ AjA A  
A!A !# A k"$  A 6 B7  A8j!A !A !@@@A -  "A!kAqA M@A !A!@ !@@@@ A kAqAO@ A kAqAO@  qAq
 As q! 
 AqE@ Aq!A! E

	
 Aq!A ! 

	
 Aq
A!A ! E


 AqE

 A:  

A A(A  
 E
A !A!
 Aj! Ak! -  "A!kAqA I
 

 A:    6

A!
 A:    : 
@@@ - 8AF@@ - 9E@ A
jA A (! (!

 Ax6

 Aj!# A k"$  A :  A6 AȤ 6  6
@@@@  " AԤ (  
  A1Aؤ (   
  E@A !

 ! !A!@ AtAq -  Avr! Av"Aq As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq 
! Aj! Ak"
 


 A: 
 A
jE
AȄ A- AjA A  
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
@ AtAq -  Aqr! Av"Aq As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq 
! Aj! Ak"
 

 Aj" 6   )
7  Aj ) 7 
 A j$ A - $AF
 A0j A j) 7   )7( 
(! 
(!@ E
 Ak! -  ! Aj! A(j"("AtAq s!  Av"Aq As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq 
6 A O@ A A  
 (  AtAЂ j(  ((  E
 
 A@k A0j) 7   )(78# Ak"$ @ A8jE@ Aj$ 




A

 )8"7B!8 
( "@ 
( A
 8! 7BBQ
 * :  * 7<  *Ax6  *A
j 7B0=  * 7B>

 A j A0j) 7   )(7H# Ak"$ @ A j""@ 

 Aj$  




! (
"AxrAxG@  A
 
( "E
  
( A
 AqE@ * ) 7  *Aj Aj( 6 

A A+ A jA A  
 A j$   (AxG@  )7 A

-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14101-14250
j #( 6 A3

  )7A
6  "AA Aj$ 

AA  
A  
A  
AA 
AȄ A- AjA A  
 (
! (! (!@@@ ( "A3F@  
   .(
  -  "A
G
 A j A
j( 6   )7P# A k"$  A  0 1  (6D  ("6@ A6
 A 6 B7$  A jB78  A@kB70  A j"(6L  ("6H  A0j6  A
j" Aj"   A@k (
" ( c (
"@ ( A
 ( "@  A
 ("@  A
 ( "@  A
 A j$   
 (D" (H 2 3  
 .(
  - ! -  "A
F@ A36   :  (@"@  A
 E
  A

  )7 A
j Aj) 7   :   :  A6  (@"E
  A

  )7 A8j A8j) 7  A0j A0j) 7  A(j A(j) 7  A j A j) 7  Aj Aj) 7   6
  6  6  6 

  )7 A j Aj) 7  A(j A j) 7   ) 7@  Aj)  7 G Aj ) G7    )@7 	  :  A6 
 E
   A
 A j$  - 
! ("A3F
   ) 
7   A<j A j(  6    A5j A j)  7    A-j A j)  7    A%j A=j)  7    A
j A5j)  7    Aj A-j)  7    A
j A%j)  7     :    6  (A
F (A
Ir
 (`!  (d"( "@    
 ("E
    (

 (
"AI A*GrE@ ("/  AF

  A16 


 Aj" ( (c     ( ( ( (
 ( ( (" E

 (
  A


  A36   A: 
 (" E
	 -  A
	
  A36    : @ (A
F (A
Ir
  (`!  (d"( "@    
 ("E
     (
 (" E
 -  A

 A j ( (c Aj ( (\" (` ( ( ( (
 (
(<
  - A
F
   )7  A
j A j) 7 A

 A j A* (\!
@ (`"AO@ 
, AJ


 AG

 Aj! 
Aj!# A k"$ @@@@@ Ak"AqE@ A 6  B70  6,  6(  A j"68 Aj A(j @ - AqE@A!

 - !@ (8( A G
  (,E
  (0E

A -  A!
A!AA"E
  :   A6D  6@ A6< A j A8j( "6  A j A0j) 7   )(7H Aj A j  - AqE
  - !@ (< 
F@@ (X( A G
  (LE
  (PE

 A<j 
A (@!
  
j :    
Aj"
6D Aj A j (X - 	! - Aq
 
 (@! (<!
 ( "A F@  
6  6  6 

  ($6  6 Ax6  E
  A

 B7 
 A j$ 

 
 
AA 
@@ ("AxG@ (! (
! (! (! (!
 (! (
! ( !
# Ak"$ @@@ A O@ A 60 B7( A(j""A A (," (0"j"A )  7   AjA )  7   AjA )  7   AjA /  ;    6L  Aj"60 A 6x B7p A:  A 6 A 6 A 6 A 6 A 6  A j6 A j Aj
 (t! (p! (x" (( kK@ "   (0! (,!
  j     j"60 @  A
 (L" (( kK A(j   (,! (0 
 j    (0 j"60 A j"B 7  A j"B 7  A j"B 7  B 7P A j"    Aj" A  A j Aj ) 7  Aj ) 7  A j ) 7   )P7 (("@  A
@@@@ 
- @"
                          
 A&6 

A !

A!
 Aj"  AjA  
A   (
	  (! (! (! ("

-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14251-14400
AG
 @ A j"B 7  A j"B 7  A j"B 7  B 7P A j"
 
 Aj Ak  
A  A j A0j ) 7  A8j ) 7  A@k ) 7   )P7(  
AFA'A3  A4jAA'
6  E
  A

AA Aԑ  
 A$6 

A A7 A jA A  
  6  6
  6  
6 A6 
 Aj$  (A3G
  A36   A: 

  A16  (X" E
 
  A

   )7   A8j A j) 7   A0j A j) 7   A(j A@k) 7   A j A8j) 7   Aj A0j) 7   Aj A(j) 7   Aj A j) 7 
 @  A
 (X" E
 
  A

 A j ( (c Aj!" (\"*! (`! (! (!# Ak"$ @@ Aj"("E
  ("-  "AkAOA  
 @@@@ Ak 
 
A !

A !
 Aj"@ 

A  
 G
  Aj"A A @@@ A I@    Aj Aj-  :   A@k" Aj)  7  A j" Aj)  7  A j" Aj)  7  A j"
 Aj)  7  A j"
 Aj)  7  A j" Aj)  7  A j" Aj-  :    / ;  ) 78 - ! ( !
 Aj -  :   Aj ) 7  Aj 
) 7  Aj 
) 7  Aj ) 7  Aj ) 7  Aj ) 7   
6   :   )87 - "AkAO@ E
 A6A A
 A A  
 AjAr!
@ AqAG@ AG
 Aj" 
A ] Aj"A A  Aj"   - " A8j" Aj Aj  AF
 Aj" )87  Aj" Aj"
) 7  Aj" Aj") 7  Aj"
 Aj"#) 7  Aj"! A@k"$) 7  Aj"% A j" ) 7  Aj"
 A j"&) 7   )7 - ! - !
 Aj" ) 7  Aj"' ) 7  Aj"
 
) 7  Aj" ) 7  Aj" !) 7  Aj"! %) 7  Aj"% 
) 7   
A  k 
 sqs":   )7 Aj ) 7  Aj !) 7  Aj %) 7   ) 7 A j"
 Aj & 
) 7    ) 7  $ ) 7   : x  )78 Aj"  Aj  Aj" 
 Aj  5 5} 5 5 5 5 5 5 5 5 5 5 5 5 ( (I|T|T|T|T|T|T}B ! 
 ) 7   ') 7  # 
) 7   )7 Aj  
   :  - !  A   : |

 A8j 
 Aq] - |!

 Aj" Aj"Aj)  7  Aj" Aj)  7  Aj" Aj)  7   )  7 Aj"
 Aj" AjB 7  AjB 7  AjB 7  B 7 Aj" Aj 
 -  A8j"
 
 AjB 7  AjB 7  AjB 7  B 7 Aj"
 Aj 
 - X  Aj") 7   Aj") 7   Aj"
) 7   )7 Aj"    Aj"#) 7   Aj"!) 7   Aj"$) 7   )7 Aj"  
 Aj"
  
 Aԛ ) 7  A̛ ) 7  Aě ) 7  A ) 7 Aj"%  
 Aj" 
 % AjA ) 7  AjA ) 7  AjA ) 7  Aܛ ) 7 
    $) 7   !) 7   #) 7  Aj"
 )7  Aj" 
) 7  Aj"
 ) 7  Aj" ) 7   )7  
 - Xq - q! A j ) 7  A j 
) 7  A j ) 7  A j 
) 7  A j ) 7  A j ) 7  A@k ) 7   : | A : x  )78

 A A  
A! A8jA A   : |

 
 Aj"A A  Aj  A8j  Aj Aj A j @@ AqAG@ Aj" Aj) 7  Aj"
 Aj) 7  Aj"
 Aj) 7  Aj" Aj) 7  Aj" Aj) 7   )7  )7 (!% (!  - x! - ! - "AkAOA  
 EAsAq - |qAqAG
 A0j ) 7  A(j ) 7  A j 
) 7  Aj Aj) 7  Aj 
) 7  Aj ) 7   )7 A !  68 A G
A  k  sq s!
 A j!A !@@@ A G@ Aj j  j-  :   Aj! AG
 A F
A A*A  
A ! AF

 Aj!


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7A !A !@@@ A G@ Aj j  j-  :   Aj! AG
 A F
A A*A  
A ! AF

 Aj!


 Aj" Aj"
) 7  Aj"! Aj"
) 7  Aj"$ Aj") 7   )7 A j"& Aj") 7  A j" Aj"') 7  A@k"
 Aj") 7   )78 Aj" A8j"@@ ("BpBpBpBp (" ("qAG ("B
B
 ("B޸
B޸
 ("
BÕB ("AʌcITTT ("#|B AqAG
  & ) 7   !) 7  
 $) 7   )78   5BpBpBpBp ( (qAG 5B
B
 5B޸
B޸
 ("BÕB ("&AʌcITTT (|B AqAG
  Aj"! Aj) 7  Aj"$ Aj) 7   ) 7  6  &6A A  
r r r r r #r rAq
 A A Aj"&"(
 ( ( ( (
 ( ( ( rrrrrrrAq
  Aj !) 7  Aj $) 7  Aj Aj) 7   )7  6  #6  6  6  6  6  
6  6 AjA A  
A ) 7  
A ) 7  Aء ) 7  B 7 AС ) 7 A(j!@@@A  - h"k" M@ E
  j   ) B|"7P
  77   A  j!  k!

  j     j: h

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14401-14550

A  
@ A O@ ) "7 Av"|"8 7T
  87    
   A@qj A?q"  : h

A  
  A  
B 7  
B 7  B 7  B 7  A j ^  
) 7  ' 
) 7   ) 7   )7 Aj A0j) 7  Aj A(j) 7  Aj A j) 7  AjAȞ ) 7  AjAО ) 7  AjA؞ ) 7   )7  %6   6 $ Aj) 7  ! Aj) 7  A ) 7  ) 7 A A  Aj" &  
" Aj Aj Aj  Aj Aj Aj  Aj!&# Ak"$   Aj Aj" Aj"Aj) 7  Aj" Aj) 7  Aj"
 Aj) 7   ) 7 Aj"B 7  Aj"B 7  Aj"B 7  B 7  Aj"
 Aj"AsAq"
: @@@ 
AqAF@  A8j) 7   A0j) 7  
 A(j) 7   ) 7 B 7  B 7  B 7  B 7  
 AsAq":  AqAG
 A j A j"Aj) 7  A j Aj) 7  A j Aj) 7   ) 7@ A8j"# Aj) 7  A0j"! Aj) 7  A(j"$ Aj) 7   ) 7 # Ak"$  Aj"% A@k"Aj) 7  Aj"  Aj) 7  Aj"
 Aj) 7   ) 7  A8j"A ) 7  A0j"A ) 7  A(j"'A ) 7  A ) 7  A j"Ȧ ) 7  A j"
Ać ) 7  A j"
A ) 7  A ) 7@ A j"B 7  A j"B 7  A j"B 7  B 7`@@@A A (
 ( ( ( (
 ( ( ( rrrrrrrAqE@ ( AqAsAqAqE
@  (
"
Av6
  
At ("
Avr6  
At ("
Avr6  
At ("
Avr6  
At (
"
Avr6
  
At ("
Avr6  
At ("
Avr6  
At ( Avr6  (@Aq!
  (\"Av6\  At (X"Avr6X  At (T"Avr6T  At (P"Avr6P  At (L"Avr6L  At (H"Avr6H  At (D"Avr6D  At (@Avr6@ 
Aq@ Aj"
 A@k"Aԇ   Aj"() 7  
 Aj")) 7  
 Aj"+) 7   )7@ 
 A   () 7  
 )) 7  
 +) 7   )7@
 ( AqAsAqAq
 


  )`7  Aj A j) 7  Aj A j) 7  Aj A j) 7  A A (
 ( ( ( (
 ( ( ( rrrrrrrAsAq:   Aj$ 

 ( AqAsAqAq@@  (<"
Av6<  
At (8"
Avr68  
At (4"
Avr64  
At (0"
Avr60  
At (,"
Avr6,  
At (("
Avr6(  
At ($"
Avr6$  
At ( Avr6  (`Aq!
  (|"Av6|  At (x"Avr6x  At (t"Avr6t  At (p"Avr6p  At (l"Avr6l  At (h"Avr6h  At (d"Avr6d  At (`Avr6` 
Aq@ Aj"
 A j"Aԇ   Aj"() 7   Aj")) 7   Aj"+) 7   )7` 
 A   () 7   )) 7   +) 7   )7`
 ( AqAsAqAq
 

 5< 5
} 58 5} 54 5} 50 5} 5, 5
} 5( 5} 5$ 5} 5  5 }"7B?|"8B?|"9B?|":B?|";B?|"<B?|"=B?|">B B R 7 8 9 : ; < = >BPr@ Aj"
  A j % Aj") 7    Aj"() 7  
 Aj")) 7   )7  
 A@k A j  ) 7  
 () 7  
 )) 7   )7@ Aj"
 A j   Aj") 7   Aj"() 7  ' Aj")) 7   )7  
 A j A@k  ) 7   () 7   )) 7   )7`



  - ":  AG
 A j ) 7  A j ) 7  A j ) 7   )7` Aj"  A j"  #) 7   !) 7   $) 7   ) 7 Aj"   A A  Aj"#  _  A  
  _  # 
# Ak"$  A j!!# Ak"$  Aj" A@k"  Aj"   Aj"      Aj" Aj) 7  Aj"
 Aj) 7  Aj" Aj) 7   ) 7     Aj") 7  
 Aj") 7   Aj"
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  Aj"$ 
) 7  Aj"% ) 7  Aj"  77   )"77  77 A j"
    A8j) 7  
 A0j) 7   A(j) 7   ) 7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  $ 
) 7  % ) 7    77   )"77  77   
     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  Aj 
) 7  Aj ) 7  Aj 77   )"77  77 A@k"
 Aj   
 
 A j"    A j) 7  
 A j) 7   A j) 7   )`7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  

-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14551-14700
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  $ 
) 7  % ) 7    77   )"77  77        ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  Aj" 
) 7  Aj" ) 7  Aj"' 77   )"77  77 Aj 
 Aj  ') 7  
 ) 7   ) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) 7  
 ) 7   
) 7   )7     ) "77  $ 
) 7  % ) 7    77   )"77  77   A!@ Aj Aj"   ) 7  
 ) 7   
) 7   )7 Ak"
 
 Aj Aj"
) 7  Aj Aj") 7  Aj Aj") 7   )7  Aj AjA/!@ Aj" Aj"  
 Aj") 7   Aj") 7   Aj"
) 7   )7 Ak"
 
 Aj Aj") 7  Aj Aj"
) 7  Aj Aj") 7   )7  Aj Aj     ) 7  
 ) 7   
) 7   )7     ) "77  Aj 
) 7  Aj ) 7  Aj 77   )"77  77 ! Aj  Aj$  !A A (
 ( ( ( (
 ( ( ( rrrrrrrAsAq:   Aj"B 7  Aj"B 7  Aj"B 7  B 7 Aj" Aj ! - h Aj" Aj) 7  Aj" Aj) 7  Aj"
 Aj) 7   ) 7  A j"
    A8j) 7   A0j) 7  
 A(j) 7   ) 7  Aj"   A :  - h!  
A " : D A j"
A A  Aj 
   A j  A j  AF@ 
 
 )7  
 )H7  
Aj ) 7  
Aj ) 7  
Aj ) 7  
A(j A j) 7  
A0j A j) 7  
A8j A j) 7  
A  k - " - @sq s: @ Aj$  # 
  # &A  (  A j"( F ( (Fq ( (Fq (
 (
Fq ( (Fq ( (Fq ( (Fq (
 (
FqkAqA  &A 6A
6  Aj$ 



 A 6 Aj Ajk 
 A 6 Aj Ajk 
 (
 "A36  "A: 

 A 6 A6 A 6 B7  AjB78  A8j6 "Aj Aj "A6  ("E
 ("( "@   
 ("E
   (

 (! (!# A0k"$   6
  6 A6 A 6 B7
  AjB7(  A(j6 "Aj Aj "A6 @ ("E
  (
"( "@   
 ("E
    (
 A0j$ 

 
 A6A A
 AjA A  
 A 6# Ak" $   A 6
   A8j6  AjA   A
jA  AjA  
 A 6 A6 A 6 B7  AjB78  A8j6 "Aj Aj "A6  ("E
  ("( "@   
 ("E
    (
 Aj$  ("A3F
   ) 
7   A
j A%j)  7    Aj A-j)  7    A
j A5j)  7    A%j A=j)  7    A-j A j)  7    A5j A j)  7    A<j A j(  6     - 
:    6  (X" E
 *  A


-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14701-14850
 A
j" ( (c )!7 )!8 A j Aj ) !9 Aj"
 A(j  87h  77`  97X Aj" Aj# Ak"$  AjA  (" ( ( "@  A
 AjA  (" ( ("@  A
 Aj! Aj"(!A!
A!@@@@@@ ("@A ! A H
A -  A! A"E

   ! (! ("@A ! A H
A -  A! A"
E

 
  ! Aj 
Aj( 6  A$j A
j( 6  A0j Aj( 6   6H  6D  6@  6<  68  64  
) 7  )7
  ) 7( A j!A !A !# Ak"$  A 6
 B7 Aj"(!@@@@@@@@@@ ("
@ 
ArgAsA	lA jAvAj"
 
j" 
I

 (!
 ("
@ 
ArgAsA	lA jAvAj" 
j" I

@@   j"M@ (
!" ( "
A !




 ArgAsA	lA jAvAj" j" I

@@   j"M@ ((! (,"
A !




 ArgAsA	lA jAvAj" j" I

@@   j"M@ (4!# (8"
A !




 ArgAsA	lA jAvAj" j" I

  j" I
 A N@ 
@B
 Aj" 
  
 ( (
"kK@   
 (
!
 ( j  
   
j6

 
@B Aj"
 
 
 
 ( (
"kK@ 
  
 (
!
 ( j 
 
   
j6

 @B Aj"
  
  ( (
"kK@ 
   (
!
 ( j "    j6

 E
B" Aj"
  
 ( (
"k"
 O
 
   ( (
"k!


 A6  6 Ax6 

Aħ  
Aħ  
Aħ  
A  
A  
  
K@ Aj   (
!
 ( j     j6

 @B* Aj"    ( (
"k"
K    ( (
"k 

 I@ Aj   (
!
 ( j #    j6

  )7  Aj A
j( 6 
 Aj$ 

A  
 (X! (T! (P"AxG@A -  A)A"E
 A(jAї -  :   A jAɗ )  7   AjA )  7   AjA )  7   AjA )  7   A )  7   A)6  6| A)6x  6  6  6  Aj A j Aj - P"A
G
 (T"@ (X A
 A36  A:  ("@ ( A
 (
"@ (  A
 (("@ (, A
 (4"@ (8 A
 (@"E
 (D A

  6  6 A6 

   
   
AA) 
  / Q; 	  )`7 A
j - S:   A j A j) 7  A(j A j) 7  )T!7  (\6  77
  :  A6 
 ("@ ( A

-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:14851-15000
 (
"@ (  A
 (("@ (, A
 (4"@ (8 A
 (@"E
  (D A
 Aj$  ("A3G@   ) 
7   A
j A%j)  7    Aj A-j)  7    A
j A5j)  7    A%j A=j)  7    A-j A j)  7    A5j A j)  7    A<j A j(  6     - 
:    6  (p" E
 (t  A

 (p"@ (t A
  A36   A: 

  A36   A:  (X" E
 *  A

 
 A A  
   - : A3
6  (X" E
    A
 Aj$ 
# A k"$ @@@@@@@@@@@@@@  -  Ak 
 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!


 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!
	
 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A	 - AF
  )7 Aj!

 ( "(  ("F@  A (!
  Aj6 ( jA :   Aj A A - AF
  )7 Aj!

 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A  Aj"
 A A  A
j"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A	  Aj"


 ( "(  ("F@  A (!
  Aj6 ( jA::   ( "(  ("F@  A (!
 ( jA :   A: 
  Aj6  6 Aj"  Aj"
 A A  Aj"
 A A
  Aj"

 (( ! @ - 
E@  (!

  ("  ( F@   A  (!
   Aj"6  ( jA :  
   ( F@   A  (!
   Aj6  ( jA :  A !
 A j$  
 @@@@@@@@ Ak 
 A A@ A A
  A: 

  A: 

 /  AF

  Aj!

  Aj! A AE

 A:  

 A:  

  A : 
  Ax6 
 @@@@@@@@ Ak 
 A AE
 A A
  Ax6   A: 
 A A	E
 A A	
  Ax6   A: 
  Ax6   A: 
 A A	
  Ax6   A: 
 A AE

    A A
  Ax6   A: 
  Ax6   A : 
  A	O@   

  

b@@  Ak( "Axq"AA Aq" jO@ A   A'jK
  

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15001-15150

A݋ A.A  
A A.Ǎ  

@@@@@  Ak"( "Axq"AA Aq" jO@ A  A'j"	 I
@@ A	O@  "
A 
	
 A{K
A A
jAxq A
I!@ E@ AI  ArIr  kAOr

	
  Ak" j!@@@@  K@ A̽ ( F
 AȽ ( F
 ("Aq
 Axq" j" I
    k"AI
   ( AqrAr6   j" Ar6  j" (Ar6  


  k"AK



   ( AqrAr6   j" (Ar6


A (  j" I
@  k"AM@  Aq rAr6   j" (Ar6A !A !

   AqrAr6   j" Ar6  j" 6   (A~q6
AȽ  6 A  6 


   AqrAr6   j" Ar6  (Ar6  
	
AĽ (  j" K

 "E
   A|Ax ( "Aq Axqj"   I!   

       I ( "Axq" AA Aq"jI
 A   	K
  
 

A݋ A.A  
A A.Ǎ  
A݋ A.A  
A A.Ǎ  
   AqrAr6   j"  k"Ar6AĽ  6 A̽  6   

  

  ( !# A0k" $ @@@@ ( Ak 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A'

 A A%

   Aj6
  A6  Å 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  
  ( !# A0k" $ @@@@A ( Ak" AOAk 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A

   6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A
!  A0j$  
  ( !# A0k" $   A6  AЕ 6  B7
   AjB7(    A(j"6A (" ("  Aj"
 A  ( E
    (6
  A6  A 6  B7
    A
jB7(   6   
!  A0j$  
# Ak"$  Aj (
 ((
 @@@ ("AxF@  Ax6 

 (
" ("I
 (!  k!A!  G@A ! A H
A -  A! A"E

   j ! @  A
   6   6   6 
 Aj$ 
   
  A  
    (
 (( 
M  (
!  ("( "@   
 ("@   (
  ( "@  ( A

# Ak"$ @@ E
   (!  (
!  ((
!	@@ Aj  	  ("AxF
 (
" I
 (!  k! A!@  G@A !  A H
A -  A!  A"E

   j  ! @  A
  @  AxF
   A
 Ak"E



    
  A  
A !
 Aj$  
	# Ak"$  (
! ((
!	@@@@@@ @ (!@ Aj  	  ("
AxF
 (
" I
 (!
  k!A!  G@A ! A H
A -  A! A"E

   
j ! 
@ 
 
A

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15151-15300
 @ AxF
  A
 Ak"
 

 Aj  	  ("AxF@  Ax6 

 (
" ("I
 (!  k!A!  G@A ! A H
A -  A! A"E

   j ! @  A
   6   6   6 

   
  A  
  Ax6 

   
  A  
 Aj$ 
A!A! E A HrE@@@ (@ ("E@ E@

A -   A

 (  A 

 E@

A -   A
"E

   6A 

  A6A
!A! !
   j 6    6 
# A k"$    j"K@A A  
A!A  ( "At"   I" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
# A k"$   ( "AF@A A  
A!A At" Aj"  K" AM"AsAv!@ E@A !

  6
   (6
  6 Aj   Aj (@ (
 ( 
 (
!   6    6 A j$ 
HA -  AA"@ A:    A6   6  A6   -  : 
AA 
2  ("  ( F@  
   Aj6  ( j :  A 
  AȂ A
  ("AtAq! Av"Aq@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
 AtAq! Av"@ As  Aq"A²s  Aq"As  Aq"As  Aq"As  Aq!
   6A!@  ( "AA  - 
 s"AvAqAЂ j(   (("   
   AvA qAЂ j(     
   A
vA qAЂ j(     
   AvA qAЂ j(     
   AvA qAЂ j(     
   AqAtAЂ j(     !
 
~# Ak"$  Aj!# A@j"A<jA 6  A4jB 7  A,jB 7  B 7$ 5!  5 " 5 "~">    ~ B |">   5"~ B |">   5
"	~ B |">
   5"
~ B |">   5"~ B |">   5"~ B |">   5
"~ B |">
  B "
>  Aj!
A!@  j"Aj"
 
5   
j5 " ~|">  B !@@@@@@@@@ AO@ Aj" 5    ~||">  B !

 Aj"
 
5    ~||">  B ! AG

  jA
j" 5    ~||">  B !

 A
j"
 
5    ~||">  B ! AI

  jAj" 5    	~||">  B !

 Aj"
 
5    	~||">  B ! A
G

  jAj" 5    
~||">  B !

 Aj"
 
5    
~||">  B ! AI

  jAj" 5    ~||">  B !

 Aj"
 
5    ~||">  B ! AF
  A
j

 At jAj
" 5    ~||">  A j j"  ~ B | 
|">  Aj B "
>  Aj! Aj"A
G
 
  ) 7   ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  A(j A(j) 7  A0j A0j) 7  A8j A8j) 7  )! )! )!
 )! )! )! )!  )7  7  7  7  7# Ak"$   Aj") "B Bް Aj B B  A j B Bo A0j B B A@k )"B Bް A j B B  A j B Bo A j B B Aj )"B Bް Aj B B  Aj B Bo Aj B B Aj )"	B Bް Aj 	B B  Aj 	B Bo Aj 	B B Aj ) "
B Bް Aj 
B B  Aj 
B Bo Aj 
B B    A8j)  A(j)  Aj)  Aj) " )|"
 T|" ) |" T|"
 )0|" 
T|"
|" 
T"|" A j)    )p|"
V| 
 
 A j)    )`|"V|   A j)    )P|"V|  A j)  
B~" )@| T||" T||"V||"V||" )|"
 Aj)    )|"
V| 
 
 Aj)    )|"V|  Aj)  B~" )| T||" T||"V||" )|"
 Aj)    )|"V|  Aj)  B~" )| T||" T||" )|" Aj)  B~" )| T||"7     T  V|"|"  
T Aj)   

-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15301-15450
V|||" )|"  
T Aj)   
V|||" )|"
  V Aj)   V|||"
7  	  T  T|"|"  T Aj)   V|||" )|" 
 
V Aj)   
V|||"	7  
  T  V|"|"  	V Aj)   T|||"7   T  V|7  Aj$  Aj )"B Bʌs Aj B B޸վ A(j B B A8j B Bp A j )"B Bʌs A j B B޸վ A j B B A j )"B Bʌs Aj B B޸վ Aj )"B Bʌs Aj B B¡ǥ  Aj ) BЧ
   
 )"	}"BЧ
|" TB}"   B  	 
V}"	 Aj) " )|"
 )H|"
}"
|"|"V| B¡ǥ |" T|B}B?"    A j)   
V|" )(|" )X|" A j)  
 
V||"
 )x|"
}" 
 V 	 	 
T}|B?"|"|"V| B|"P|B}B?"    A0j)   T|" )8|"	 )h|"
  
V A j)   V|||" )|" Aj)  
 
V||"
 )|"
}"  V  
 V}|B?"|"
|"V| B|" T|B}B?"   ) )  B ||| A@k)  	 T|  
T A j)  	 
V|||  
V Aj)   V||| Aj)  
 
V||}| 
 T   
T}|B?||"	 T|"Bʌs" |"BЧ
|"
 TB}"  B޸վ"
 |"  T|"|" T| B¡ǥ |" T|B}B?"   |"  
T  T||"|" T| B|"
P|B}B?"  Bp" |"  V  T||"|" T| B|" T|B}B?"   T  T| 	|| T|"Bʌs" 
|">    B >   B޸վ"	 |"  T|">   B >
    
|"  	T  T||">   B >   Bp |  V  T||">   B >
 Aj$ 
~   (  "At AqAtr AvAq Avrr"  ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr"	Bʌ}"
B?|B}"
B?|B޸
}"
B?|B
}"
B?|B}"B?|B}"B?|"B?|B}"sA  B?AsAqAqk"q s6
    s q s6    s q s6    s q s6    
s q s6
    
s q s6    
s q s6   	 
s q 	s6 
g A  (   ( F (  (Fq (  (Fq (
  (
Fq (  (Fq (  (Fq (  (Fq (
  (
Fqk

~# Ak"$  A@k ) "B  ) " A j )"B   A j )"B   A j )"B   Aj B  )" Aj B   Aj B   Aj B   Aj B  )" Aj B   Aj B   Aj B   Aj B  )" Aj B   Aj B   Aj B   A j )@"B Bp A0j )P" A j) |" )|" B |"B Bp Aj B "
 A j)   T|"
 )`|" )|"	 Aj)   V||" )|"
  T B ||"|"B Bp  B " ) "  
T|" A j)   
T|" )p|"
 )|"
  	T Aj)   	V|||" )|"	 Aj)   
V||" )|"|"
  
T B ||"
|"B Bp   B " )0"  
V A(j)   T||" A j)  
 T|" )|"  
T Aj)  
 
V|||"
 )|"
  	T Aj)   	V|||" )|"	 Aj)   V||"|"|" 
 
V|"
  T B ||"
|"B|"PB}"    T B |"  
V Aj)   T||" )|"  
T Aj)  
 
V|||" )|"
 	 V Aj)   	V|||"  V|"	  
V A8j)   T|||" )|"
 
 
V|"
|"
|"V| B}" T|B}B?"   	V  	T|"	  V Aj)   T||" )|"  
T Aj)   
V|||"
|" 
 
T Aj)   
V|||" ) |" 
 T|"|"
 T|B?"
 
  	T  V|"	  
V Aj)   T|||"  V Aj)   V|||"|" T| B|" T|B}B?"   	T  T|| T|" |">    B >   B" |"  T|">   B >
    T  T|" 
|">   B >    T Bp ||">   B >
 Aj$ 
	~   ) " ) |"B|"	PB}"   )" )|"  V|"|"V| B}" T|B}B?"  )"
 )|"  T  V||"|" T|B?"  )"
 )|"  
T  T||"|" T| B|" T|B}B?"   
T  T|| T|" 	|">    B >    B"|"  T|">   B >
    T  T|" |">   B >    T Bp ||">   B >

~  B  ) " ) "T}"  )"T}  }" )|" T|B?" )" )"T}   }|" T|B?" )" )"	T}   	}|" T|B?"  }|">    B >    B"|"  V|">   B >
    T  T|" |">   B >    T Bp ||">   B >

	~  B  ) "B R}"  )"T}B?"  )"T}B?"  )"	T}B?" }">    B >   B"
  }|"  T|">   B >
    
T  T|"  }|">   B >    V  	} Bp||">   B >

	# A k"$  (  "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr" ( "At AqAtr AvAq Avrr"	 ( "At AqAtr AvAq Avrr" ( 
"At AqAtr AvAq Avrr"B}B?|B}B?|B}B?|B?|B?|B?B|B?|B}B !
  6
  6  6  6  6
  	6  6  6    A    
:   A j$ 

~# A k"
$  
A0j ) "B B 
A@k B Bp 
A j  )"|" 
)0|"B Bp 
Aj B " )"  T 
A8j)   T|||"|"B Bp 
 B "  T B |" 
)@"	 )|"  T|"|"|"B Bp   B "
  T B |"  V 

-- Chunk 104 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15451-15600
A j)   	T||" 
) |"  V|"|"|"	B|"
PB}"  	 
T B |"	  V 
A(j)   T||" 
)|"  T|"|"|" T| B}" T|B}B?"   V 
Aj)   T||" 
) |"  	T|"|" T|B?"   V 
Aj)   T||"|" T| B|" T|B}B?" 
|""At AqAtr AvAq Avrr6 
   B "At AqAtr B8 B(Aqrr6    B" |"  T|""At AqAtr AvAq Avrr6    B "At AqAtr B8 B(Aqrr6     T  T|" |""At AqAtr AvAq Avrr6 
   B "At AqAtr B8 B(Aqrr6     T Bp ||""At AqAtr AvAq Avrr6    B " At  AqAtr B8 B(Aqrr6   
A j$ 
~   ) " |"B|"PB}"   V )"B|" T| B}" T|B}B?"  )"B B?|" T|B?"  )"B B?"|" T| B|" T|B}B?"  B?| T|" |">    B >   B" |"  V|">   B >
    T  T|" |">   B >    T Bp ||">   B >

  A  Aqk" (
" (
sq s6
   (" (s q s6   (" (s q s6   (" (s q s6   (
" (
s q s6
   (" (s q s6   (" (s q s6   ( "  ( s q  s6 

     
~   ( "
 ( j"
A ( "
}"B 
 5
 5
| 5 5| 5 5| 5 5| 5
 5
| 5 5| 5 5 
 
K||"B |"B |"B |"B |"B |"	B |"
BA ( "} 	BA ( "
} BA ( "
} BA ( "} BA ( "} BA ( "} BA ( "} B?|"B?|"B?|"B?|"B?|"B?|"B?|"	B? 
B |B "q|"
>     q B| 
B |">    q B| B |">    q B| B |">
    q B| B |">    
q B| B |">    
q B| B |">   B  	|  qj6

~A ( !
A ( !
A ( !
A ( !A ( !A ( !A ( !   5  5 }"B 5
 5
} 5 5} 5 5} 5 5} 5
 5
} 5 5} 5 B? 5}|"B?|"B?|"B?|"B?|"B?|"B?|"	B "A ( q|"
>     q B| 
B |">    q B| B |">    q B| B |">
    q B| B |">    
q B| B |">    
q B| B |">   B  	|  
qj6

   (  "At AqAtr AvAq Avrr6
   ( "At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6   ( 
"At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6
   ( "At AqAtr AvAq Avrr6   ( "At AqAtr AvAq Avrr6   ( 
" At  AqAtr  AvAq  Avrr6 

   ( " (    Aj( (  
# A0k"$ A!@ A A
 @  ( @   6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( AjE


 AȈ A

 Ä A!
 A0j$  
  ( !# A0k" $ @@@@A ( Ak" AOAk 
 AԊ A&

   6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj

 A A%

   Aj6
  A6  A؋ 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  
~  ( !# A@j" $   A 6
   6  A j  A
j@@@  ( E@@  ($E
 AF
 Aj!  A j  A
j  ( E
 



  A 6   6  A 6
 (! (!  A j  A
j@  ( E@  A
jB!@  ($"E
  (Aj"E@A  
  ((!   6   6
  A6$  A 6   B7,   78    A8j6(    A j
  K@ A A (
 

  A j  A
j  ( E
 



  A@k$  

A  
    )$78A A
  A8jA A  

  ( !# A0k" $ @@@@@@@@@@@@@@@@@@@@@@@ -  Ak	



 
 A A

 A A

 A A


 A A


 A A

 A A

 A A

 A A



-- Chunk 105 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15601-15750
 A A


 A A


 A A


 A A



 AɌ A


 A، A

	
 A A

 A A	

 A A

 A A

 A A


 A A	

 - !   - :   A 6  B7    AjB7   A6
   AtA jB7(    A j6 ( (  Aj

 - !   - :   A 6  B7    AjB7   A6
   AtA jB7(    A j6 ( (  Aj

 - !   - :   A 6  B7    AjB7   A6
   AtA jB7(    A j6 ( (  Aj
!  A0j$  
(    ( -  At" A j(   A j( 

   (  

   (  
	    

     

~# A k"$ @@@@@@@@@@@@@@@@@@@@@@@@  -  Ak	



 
 (A A ((
 

 (A A ((
 

 (A A ((
 

   Aj6L   Aj6  A60 AЖ 6, B78 B" A j7   A j7  Aj64 ( ( A,j

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

 (A A
 ((
 

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

   Aj6  A60 Aؗ 6, B78  A jB7  Aj64 ( ( A,j

 (A A
 ((
 

   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j

 (A A ((
 


 (A A ((
 


 (AƘ A ((
 


 (A֘ A
 ((
 


   Aj6  A60 A 6, B78  A jB7  Aj64 ( ( A,j
	
 (A A ((
 

 (A A/ ((
 

 (Aș A ((
 

 (Aؙ A ((
 

   Aj6L  A jB7  A6
 A6
 AԚ 6 A6 A: H A6D B 7< B 74 A6,  A,j6  A j6 ( ( Aj

   Aj6L   Aj6  A60 A 6, B78 B" A j7   A j7  Aj64 ( ( A,j

   Aj6  A60 AЕ 6, B78  A jB7  Aj64 ( ( A,j

   Aj6  A60 Aܛ 6, B78  A jB7  Aj64 ( ( A,j

   Aj6L@ ("A A ("(
 
 @  - AF@B!

   Aj6  A60 A 6, B78 B" A j7  Aj64   A,j

 A60 A 6, B78   A j7  Aj64   A,j

A
! A j$  
Y# A k"$  A6 A 6  B7
   B7  Aj6 ( ( !  A j$   
  ( !# A0k" $ @@@@@@@@@@ -  Ak		 
   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj
	
 A A


 A A


 A A!

 A A

-- Chunk 106 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15751-15900

 A A

 A A-

 A A'

 Aߝ A(

   Aj6
  A6  A 6  B7
    A
jB7(    A(j6 ( (  Aj
!  A0j$  

   (  
#  A A՞   ( -  " AA  
   ( " (   Aj(  

   Aq
  A A

!   A 6
   6   6  A 6 
[@ E@A!

 A N@A -  A! A"

   
   !   6   6   6 
w@ E@A!

 A N@A -  A! A"

   
   !   6   6   6   A
A A
vgAtk AK6

 A 
 
_ ( "Aq@     A~q  
  ("Aj6 A N@   6
   6   6  A 6 
 
@@@  M@  k" j" I
A -  A
A"E
 A6  6  6    ( "  F"6  @   6
   6   6  A 6 
  ("Aj6 A H
   6
   6   6  A 6  A
A
A  
Aأ  
AA
 
 
q@ ( "Aq@ A~q" K
  k" j" O@   !   6   6   6 
A  
     
A  
# Ak"$ A!  ("A  AG6@@@ AF@ (! ( ! A
A   

 @A ! A H
A -  A! A"E

     ("Ak6 ! AG
  Aj( "A H
 (  A A
A
   6   6   6  Aj$ 
   
A A+ AjAآ A  
# Ak"$ @@ ( "Aq@  A~q"I
  k" j" O@ Aj" 6   6  6  A
A A
vgAtk AK6
    Aj ) 7    ) 7 

A  
     
 Aj$ 
A  
# Ak"$ A!@@@@@ (AF@ (! ( ! A
A  I
   k"j" I
 Aj" 6   6  6  A
A A
vgAtk AK6
    Aj ) 7    ) 7 

 @ A H
A -  A! A"E

   !  ("Ak6 AF@ Aj( "A H
 (  A A
A
   6   6   6   A
A A
vgAtk AK6

 Aj$ 
A  
Aȣ  
   
A A+ Aآ A  
# Ak"$ @@@@@  ( " Aq@  A~q"  K
    k"j" I
 A H
   A

    ("Ak6 AG
   Aj( "A H
  (  A  A
A
 Aj$ 
A  
AȢ  
A A+ AjAآ A  
A A+ AjAآ A  
\ ( "Aq@       
  ("Aj6 A N@   6
   6   6  A 6 
 
l@ ( "Aq@  K
  k" j" O@   !   6   6   6 
A  
     
A  
# Ak"$ @@ ( "Aq@  K
   k"j" O@ Aj" 6   6  6  A
A A
vgAtk AK6
    Aj ) 7    ) 7 

A  
     
 Aj$ 
A  
# Ak"$ @@@@@  ( " Aq@   K
    k"j" I
 A H
   A

    ("Ak6 AG
   Aj( "A H

-- Chunk 107 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:15901-16050
  (  A  A
A
 Aj$ 
A  
AȢ  
A A+ AjAآ A  
A A+ AjAآ A  
 A!  ( " Aq   (AF

C ( " ("Aj6 A H@ 
   6
   6   6  A 6 
    (   
    (   

   ( (AF
p # Ak"$   ( "   ("Ak6@ AF@  Aj( "A H
  (  A  A
A
 Aj$ 
A A+ AjAآ A  
@ @  (
"Aq@@@@@ Av" j" O@ A I@ Aq Atr!

  (" j" I
  (" j" I
  ( !A -  AA"E
 A6  6  6    k6  AvAq6


A  
A  
A  
AA 
   6

    (  j6     (" k"A   O6  (" I
    k6

AĦ  
C ( " ("Aj6 A H@ 
   6
   6   6  A 6 
A!@@ ( "(AG@ @A ! A H
A -  A! A"E

     ("Ak6 ! AG
 ( "@ ( A
 AA !

 A 6 (! ( ! B7   ("Ak6 AF@ ( "@ ( A
 AA
   
   6   6   6 
   
A!@@@ ( "(AG@ @ A H
A -  A! A"E

     ("Ak6 AF@ ( "@ ( A
 AA
A
A A
vgAtk AK! !

 (" K
 ( "  k"O@  k! !

A  
   
A  
   6
   6   6   6 

   ( (AF
=   ( "   ("Ak6 AF@  ( "@  ( A
  AA

 A AA  
_~# A0k"$  A6
 Aب 6 B7 B"  7(    Aj7   A j6 AjA  
r An!@ A{K@A !

 At!  Alk"E@A!

 E@A!AA AF r!

 A|G! Aj!
   6   6 
)~  )!  )!  )p!  )H!  ) !  )!  )!  )h!  )@!  )!	  )!  )!  )`!  )8!
  )!  )!  )!  )X!  )0!
  )!  )!
  )x!
  )P!
  )(!
  ) !A~!*@ 
  
 
 
"  
   "B" 
!(  	    " B"!)  B"
      "B "B7"   
   " B"B>" B!   B" 
B)"!  B'""B!  B
"#  B8"$  B"B!  B"% #  
B$"&B!
  
B"  
B"
  B"'B!  B"  B"B 
!  B="
  B"  	B
"	B!  B-"
 	 
B!  
B"
 
 
B!
 
 
B !
 	 
 B!
  B"  " )B"B!	  B+"  B! (B,"  B! *A j)   B !  
B '"!
 " B  !
 &  #B!   B! 
 !B "! ' B ! % $B ! !   
B!  B "! $ & %B"! *Aj"*
 
   
7   
7x   7P   
7(   7    7   7   7X   
70   7   7   7   7`   
78   7   7   7   7h   7@   	7   7   7   7p   7H   7 

   A A" A;  A6
@@@@@@@@@  - E@  ("  ("I
  k" K
  Aj

  A :     A 6  (" K
  Aj
!	 !@@@@  I@  A  
 AK
 A k"M@  k I
@ E
   j!   j! AO@ A|q!@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! Ak"

-- Chunk 108 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16051-16200
 

 Aq"E
 @  -   -  s:   Aj! Aj! Ak"
 

     j"K
A !  k" 	( "I



  A  
A A(Aķ  
 AA  
A  
 AK

 !

 AA  
  I
  j!  k!
A k" I
  I
@ E
    j! Aq! AO@ A|q!@  -   -  s:    -  - s:   -  - s:   -  - s:  Aj! Aj! Ak"
 

 E
 @  -   -  s:   Aj! Aj! Ak"
 

    j6
  A  
  A  
A A(Aķ  
A  
A !# Ak"$  Aj  A@@@@@@@@@ - E@ A: @ (" AM@  AG
AA A  
  AA  
 (! Aj  j"   -   - s:   @ Ak" AM@  AG
AA A  
  AA  
AԷ  
 ("  ("I
   k" A K
 AK


   Aj" j" -  As:     A 6 (" A M
A !

 AM@A !

 AA  
 AA  
A  
@@  A k"K@  !

  Aj" j  ! A   k" ("I@  !

@@  A M@ AO@A!

 A   k"M
  A  
  A AԸ  
   j Aj"       j"M@ !   k" ("I



Aĸ  
  A  
 A K
A  k!A !
A k"  I
  M
  A  
 A A  
  j Aj j  Aj$ 
   A  
~# A@j"$ # A0k"$  @@@@@@@@@@  
A! -  A+k
 -  A+G
 Aj! A"I! Ak! 


 A : 

 A K

 Aj!

 A(j!@ E
 Aj B B
 A j B B
 -  A0k"A
O
 )B R ) " )|"	 Tr@ A: 

 Aj! Ak! ) "
 |" 
T" 	 	 |"V  
ZAG
 
 A: 

@ -  A0k"A
O
   B
 Aj! )  ) " |" T|! Ak"
 


 A: A

A

  7 Aj 7 A 
:   A0j$ @   -  E@   )7  Aj Aj) 7 A


  - :  A6$ Aܻ 6  B7,  AjB78  A8j6(  A
j A jA -  AA"E
  A 6   6 A6 A
:   A@k$ 
AA 
	    
W# Ak"$   ( " -  E@ A A

   Aj6
 A A A
jA 
!  Aj$   

   (  
# A0k"$ @@@@  ( Ak 
 A A

 A A

 A A6

 A6
 A 6 B7   Aj6,  A,jB7   A j6 ( ( Aj
!  A0j$   
A @@@  ( -  Ak 
 Aý A

 A߽ A


-- Chunk 109 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16201-16350
 A A$

   (  
# A0k"$ @@@@@@@@@@@  -  Ak
	
 
 A 6 B7 A6
   Aj6,  A,jB7   A j6 ( ( Aj


 A A

	
 AǾ A


 A A

 A A

 AԾ A

 A A6

 A A


 A A

 A 6 B7 A6
   Aj6,  A,jB7   A j6 ( ( Aj

 A6
 A 6 B7   Aj6,  A,jB7   A j6 ( ( Aj
! A0j$  
'   ( -  E@ A A
 A A 
~# A@j"$ # Ak"$  Aj"@@@@@@@@@  
A! -  A+k
 -  A+G
 Aj! AI! Ak! 


 A : 

 AK
 

@ E
  B B
 -  A0k"A
O
 )PE@ A: 

 Aj! Ak! ) " |" Z
 
 A: 

@ -  A0k"A
O
 Aj!  B
~|! Ak"
 


 A: A

A

  7A 
:   Aj$ @   - E@   )7A


  - 	:  A6$ A 6  B7,  AjB78  A8j6(  A
j A jA -  AA"E
  A 6   6 A6 A
:   A@k$ 
AA 
  A A
# A0k"$  Aj  @ - A
F@   )
7  A
:    A
j Aj( 6 

   )7   A j A(j) 7   Aj A j) 7   Aj Aj) 7   Aj Aj) 7 
 A0j$ 
    ( (
[@ E@A!

 A N@A -  A! A"

   
   !   6   6   6 
# A k"$ @@ ("AK@@@ Ak"  ("j(  "At AqAtr AvAq Avrr"O@ ( !  G
 ! !A !A!

A  
   k"I
@  k"E@A!

A ! A H
A -  A! A"E

   j  !
   6   6
   6   6   6       I6 A j$ 
 A 6 A6
 A 6 B7 AjA  
# A0k" $    6   6   A6
  Aȱ 6  B7    AjB7(    B7     A j6  AjA  
   
# Ak"$ @@@@ E@

 Aj! !@  ( j" I
 Aj! ! Ak"
 
 AK

  Atj" I
@@ E@A!

A ! A H
A -  A! A"E

A ! A 6
  6  6 @  Atj!@ ("AvAq Avr!	 ( !  (" kK@ Aj   (! (
! (!
  j     j"6
  kAM@ Aj A (
! (!
  j 	 At AqAtrr6    (
Aj"6
 Aj" G
 

   )7   Aj A
j( 6  Aj$ 
   
A  
A  
A  
 
v@@@  E@A!

  A H
A -  A!  A"E

A -  A
A"E

-- Chunk 110 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16351-16500
 A 6   6  6  
    
AA
 
# A k"$ @  @  ( "E
  ("@  A
  A
A A j$ 
 A 6 A6
 A 6 B7 AjA  
 A 6 A6
 A 6 B7 AjA  

    ( -  AtA j( A
m# A0k"$   ( !  A6
 A 6 B7  A,jB7    6,  A j6 ( ( Aj!  A0j$   
i# A0k"$    ( 6
 A6 A 6 B7
  A
jB7(  A(j6 ( ( Aj!  A0j$   
  A A
# A@j" $   A 6  B7
  A: 8  A 6(  A 64  A 60  A 6   A 6    A
j6,# A k"$ A!@  Aj"AҔ A

  (!# A0k"$  A6 A 6  B7
  A
jB7(  AjB7   B%7  Aj6 ( ( ! A0j$  
  Aj ( " (A
j"(   )BŹQ@A!  )Bͅ Q

   (  A ! ) BċfR
 )Bԯ R
A! Aj
!  j( ! ( ! Aޔ AE@A !   E

A!
 A j$  E@  (
!  (!    ("6    6
   6   @  A
  A@k$ 
A A7  A?jA A  
o# A k"$ @ @@ Aj   ("AxF
 @ (
 A
 ("@ ( A
 Ak"
 

A !
 A j$  
# A@j"$  ( "@  (6  ( 6  (6
 A(j" A
j A j A0j( 6   )(7 (4! (8! (<!  Aj (<! (8! (4! (("	@ (, 	A
@ E@  Ax6  @  A
 E
  A

   6   6   6
   6   6   6 
 A
A A@k$ 
 A 68 A6, A 6( B70 A(jA  
@@ E
   ( !  - @A ! @ "E
 (! ( ! A
A @ AxF
  A
   Aj" G
 


A ! @ "E
 (! ( ! A
A @ AxF
  A
   Aj" G
 

A 
   k
	   B 7 
  A A
# A0k"$  At!
 !@@@@ @ Aj!	 
! !@ 	( "Aj"
 I
  
j" I
 	Aj!	 ! Ak"
 

@ E@A!

A !	 A H
A -  A!	 A"E

A ! A 6  6  6
    
j!@ ("AO
 ( !
 (
 kAM@ A
j A (! (!
  j At AqAvr;    (Aj"6  (
 kK@ A
j   (!
 (" j 
    j"6 Aj" G
 
 (
 
 kK@ A
j   (! (!
  j    Aj  j6    )
7  A0j$ 
A  
A  
 A 6( A6
 A 6 B7  AjA  
 	  
l # Ak"$   6
  6  6@ Aj"E@Ax!

   (6   ( 6 (! A
A
   6  Aj$ 
{ # A0k" $  E@  A 6
  A6  A 6
  B7  A
jA  
   6,   6(   6$   6   6   6
  A$j  A
j  A0j$ 
. # Ak" $    6
   6   6  Aj  Aj$ 
# A k"$     6
  6  6A 
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@  6   A 6   6  A j$ 
AA 
# A k"$     6
  6  6A 
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@ A :   6   A 6   6  A j$ 
AA 
# A k"$     6
  6  6A 

-- Chunk 111 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16501-16650
6     6
  6  6A 
6 AjA   AjA   Aq!A -  AA"@ A:   6   A 6   6  A j$ 
AA 
# A k"$  ( !@@ E
 @ "E
 ( "E
 ("@  A
 A
A Ak"
 

@ - E@ 

 
"E@Ax!

   (6   ( 6 (! A
A
   6  A j$ 
 A 6 A6
 A 6 B7 AjA  
^ ( ! - E@ 

 
"E@  Ax6 
   (6   ( 6 (! A
A   6 
# A k"$ @@ E
  ( !@ "E
 ( "E
 ("@  A
 A
A Ak"
 

    A j$ 
 A 6 A6
 A 6 B7 AjA  
# A@j"$ @@@@@@@@ AM@  6  6
  6 Aj"
 
A!

A -  A A"E
A -   AjA )  7   AjA )  7   AjA )  7   A )  7  AA"E
  A 6   6  A 6
  A 6   6  A:   A6 

A -   A"E

   !   6
   6   6  A
:  

 (! ( ! (! A
A  6
  6  6 A6$ A 6  B7,  AjB78  A8j6(  A
j A jA -  AA"E
  A 6   6  A:   A6  (" E
  (  A
 A@k$ 
AA  
AA 
A  
AA 
# A k"$ @@@@@@@ AM@  6  6  6
A -  A A"E
 B 7
  6 A
j Aj	"
   ( 6
   (6   (
6  A
:  

A -  A$A"E
A -   A jA (  6   AjA )  7   AjA )  7   AjA )  7   A )  7  AA"E
  A$6   6  A$6
  A 6   6  A:   A6 

 (! ( ! (! A
A  6,  6(  6$ A6< A 68 B7D  A$jB70  A0j6@  A
j A8jA -  AA"E
  A 6   6  A:   A6  ($" @ ((  A
 (" E
 (
"E
    A
 A j$ 
AA  
AA$ 
AA 
AA 
 A 6H A6< A 68 B7@ A8jA  
# A k"$   ("6  6  (6
A -  @@A A"@ B 7
  6   A
j Aj
"E@   ( 6
   (6   (
6A


 (! ( ! (! A
A  6,  6(  6$ A6< A 68 B7D  A$jB70  A0j6@  A
j A8jA -  AA"E
  A 6   6 A6  ($"@ (( A
 ("E
 (
"@  A
A
:   A j$ 
AA  
AA 
 A 6H A6< A 68 B7@ A8jA  
 # A@j"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j
"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, A 6( B70 A(jA  
A!

A!

A!
   :   A@k$ 
AA 
~# A0k"$   6  6  6   6  6  6
A !@@@@@@@@  A
j Aq
"B "   
A -  AA"E
  A 6
   6   6 A6 A!

 "E

-- Chunk 112 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16651-16800
 (! ( ! (!A! A
A   6
   6   6

 A 6( A6
 A 6 B7  AjA  
A!

A!
   6  A0j$ 
AA 
 A 6( A6
 A 6 B7  AjA  
 # A@j"$   6
  6  6  6  6  6  6$  6   6
A!@@@@@@@@@ Aj Aj A
j
"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 68 A6, A 6( B70 A(jA  
 A 68 A6, A 6( B70 A(jA  
A!

A!
   :   A@k$ 
AA 
 # A k"$      (6  ( 6  (6
 Aj    ( 6,  (6(  (
6$ A0j    (86D  (06@  (46<A!@@@@@@@@@@ A
j A$j A<j"
     
A -  AA"E
  A 6
   6   6 A6 A
!

  A: A
!

  A : A
!

 A 6X A6L A 6H B7P A jA  
 A 6X A6L A 6H B7P A jA  
A!

A!
   :   (<" E
 (@"@   A
 ($" E
 (("@   A
 (
" E
 ("@   A
 A j$ 
AA 
 A 6X A6L A 6H B7P A jA  
. # Ak" $    6
   6   6  Aj  Aj$ 
{~# Ak"$   6  6  6
@ A
j"@ (! (!
 ( !
 A
A A@k!# A k"
$  
A: 
 
A 6 
 
6 
 
6  
A@k!# A0k"$  Aj 
Ax!@@@ - @@ - 	"A"G@ A F
 B7 

 Aj 
@ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 
 Aj!# A0k"$  Aj" 
 - !@@@ ("AxF@  
 ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!  /
; 	 A
j Aj-  :    6
  :   6 A6 

@ @ Aj!# A k"
$  
A@k!# A0k"$  Aj 
Ax!@@@ - @@ - 	"A"G@ A F
 B7 

 Aj!# A k"$   
@@Ax -  E
 Ax - A"G
  
 Aj 
 (
!	 (! (!@ (E@@ AxF@ Aj  	

 Aj  	 E
   A
 - ! (!

  	6
  6
Ax!
 AxF
 
!
  ( 	6  Aj A
j(  6  

  
6
  

-- Chunk 113 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16801-16950
6   :  A j$ @ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 
 Aj!# Ak"$  Aj!# A k"$   
@@ -  E@Ax!	

 - A"G@Ax!	

 
 Aj 
 (
! (! (!	@ (E@@ 	AxF@ Aj  

 Aj   	E
   	A
 - ! (!	

  6
  6
 	AxG
  Aj 
 (AxF@  
6  :  Ax6 

  )7  Aj Aj( 6 

  ( 	6  Aj A
j(  6    :   	6 
 A j$  - !@@@@@@@@@@ ("AxF@ (
! Ak
  / 	; 	 A
j A
j-  :    (
6
  :   6 A6 

 !# Ak"$  A@k @@ - @E@Ax!

 - AA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!


	
  A8j @@@@@@@ - 8E@Ax!Ax!	Ax!

Ax! - 9"A"G@Ax!Ax!	 A G


 A0j Ax! - 0E@Ax!Ax!	

 - 1A"G@Ax!Ax!	

  A j  (|!	 (x! (t!@ (p@  	6  6  6

@ AxG@ Aj  	 E
  A

 Aj  	
 - ! (!
@ AxG@Ax!	

 A j!@@@@@@@ AqAk 
 Aj  (AxG@Ax!	

 A j  (p@Ax!	

 (|! (x!
 (t!Ax

 Aj  (AxG
 A j  (p
 (|! (x!
 (t

 A j @ (pAxG@ Aj A j( 6   )p7

 Aj 
 (AxG@Ax!	

Ax
!	 A(j  - (E@Ax!

 - )!@@@@@@@@ Aq"A,G@Ax! A G
 	AxF
 AxG
 A jA A  (|6T  )t7L 	E
 
 	A

  A j  -  E@Ax!

 - !"A"G@ A G
Ax!

 Aj  - E@Ax! - !

 - A"G@Ax! - !

  A j  (|! (x! (t!@ (pE@ AxF@ Aj   (!

 Aj   @  A
 (!

  6  6  6
 - ! AxF



  6` - 
Aj"Aq G

  : 
 )`!
 A j  (p"AxG@ )t!
 	@ 
 	A
 E
 
 A

 Aj  - E@ B7  	@ 
 	A
 E
 
 A

 - 	A F
 B7  	@ 
 	A
 E
 

-- Chunk 114 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:16951-17100
 A

 Ak
   
7  
6  6  6
  
6  	6 A 6 

 AxG@ A jArA A

 Aj  (AxG
 A j  (p
 (|! (x!
 (t!

 	AxG@ A jArA A


 Aj  (AxG
 A j  (p
 (|! (x!
 (t!	

 A j @ (pAxF@ Aj 

 Aj A j( 6   )p7
 (AxG

 Aj  - ! - 
 
Ax!

  )7  Aj Aj( 6 
  (|6T  )t7L

  )7  Aj Aj( 6 
  (|6T  )t7LAx!	

 !  Aj"(  6h  Aj(  6 k
 A j ( k6    : P  6L  (h6 Q

 A j Aj( 6   )7L

 A jArA AAx!	
 AxF

 E
  
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
	  : 
 )P!
 (L!
  
7  6 A6 
 Aj$ 

 !# Ak"$  A@k @@ - @E@Ax!

 - AA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A8j @@@@@@@ - 8E@Ax!Ax!	Ax!

Ax! - 9"A"G@Ax!Ax!	 A G


 A0j Ax! - 0E@Ax!Ax!	

 - 1A"G@Ax!Ax!	

  A j  (|!	 (x! (t!@ (p@  	6  6  6

@ AxG@ Aj  	 E
  A

 Aj  	
 - ! (!
@ AxG@Ax!	

 A j!@@@@@@@ AqAk 
 Aj  (AxG@Ax!	

 A j  (p@Ax!	

 (|! (x!
 (t!Ax

 Aj  (AxG
 A j  (p
 (|! (x!
 (t

 A j @ (pAxG@ Aj A j( 6   )p7

 Aj 
 (AxG@Ax!	

Ax
!	 A(j  - (E@Ax!

 - )!@@@@@@@@ Aq"A,G@Ax! A G
 	AxF
 AxG
 A jA A  (|6T  )t7L 	E
 
 	A

  A j  -  E@Ax!

 - !"A"G@ A G
Ax!

 Aj  - E@Ax! - !

 - A"G@Ax! - !

  A j  (|! (x! (t!@ (pE@ AxF@ Aj   (!

 Aj   @  A
 (!

  6  6  6
 - ! AxF



  6` - 
Aj"Aq G
  : 
 )`!
 A j  (p"AxG@ )t!
 	@ 
 	A
 E
 
 A

 Aj  - E@ B7  	@ 

-- Chunk 115 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17101-17250
 	A
 E
 
 A

 - 	A F
 B7  	@ 
 	A
 E
 
 A

 Ak
   
7  
6  6  6
  
6  	6 A6 

 AxG@ A jArA A

 Aj  (AxG
 A j  (p
 (|! (x!
 (t!

 	AxG@ A jArA A


 Aj  (AxG
 A j  (p
 (|! (x!
 (t!	

 A j @ (pAxF@ Aj 

 Aj A j( 6   )p7
 (AxG

 Aj  - ! - 
 
Ax!

  )7  Aj Aj( 6 
  (|6T  )t7L

  )7  Aj Aj( 6 
  (|6T  )t7LAx!	

 !  Aj"(  6h  Aj(  6 k
 A j ( k6    : P  6L  (h6 Q

 A j Aj( 6   )7L

 A jArA AAx!	
 AxF

 E
  
 A
 	AxrAxF
  
 	A
 - 
Aj"Aq G
  : 
 )P!
 (L!
  
7  6 A6 
 Aj$ 

 !A !# Ak"$  A8j "@@ - 8E@Ax!

 - 9A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A0j Ax!	Ax!
@@@@@@ - 0E
  - 1"A"G@ A F
Ax!	

 A(j  - (E@Ax!	

 - )A"G@Ax!	

  A j  (l!
 (h! (d!@@ (`E@ AxG@A! 
AF@ (  A (  G!
 E
  A

A! 
AG
 (  A (  G!

 AxG
 !
@@@@ Aq@ A j @ (`AxG@ A j A j( 6   )`7p

 A j 
 (pAxG


 A j  (pAxG
 A j  (`
 (l! (h! (d!

 A j  -  E
 - !! !@@@ Aq"A,G@Ax!	 A G
 
AxG

	
  Aj  - E@ !Ax!	

@ - "A"G@ A F
 !Ax!	
	
 Aj  - E@Ax!	
	
 - A"G@Ax!	
	
  A j  (l!
 (h! (d! (`E@ AxF@ 
AF (  A (  GA
 A~qr!

 
AF (  A (  GA
 A~qr! E
  A

 AxF@ !

 !

Ax!	

 - 
Aj"Aq G
  : 
 A j  (`"AxG@ )d!
 

-- Chunk 116 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17251-17400
E

  
A


   -  E@ B7  
E
  
A

 - A G@ B7  
E
  
A

   6
  6  
6 A6 


@@ AqE@ 
AxF
 A@kArA A


 A j @ (`AxF@ A j 

 A j A j( 6   )`7p
 (pAxG
	

 A j  (pAxG
 A j  (`
 (l! (h! (d!

 Aj  - 	! ! - 
 


 A j" )p7  Aj A j( 6 
  (l6L  )d7D

 !

 !	 Av!
  ; I A j Av:    
6L  : H  	6D

 A@kArA A

 A j A j( 6   )p7D
 
AxF

 
E
   
A
 - 
Aj"Aq G
  : 
 )H!
 (D!
  
7  6 A6 
 Aj$ 

A !	A !# Ak"$  A j  "@@ - HE@Ax!

 - IA G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A@k Ax!@@ - @E
  - A!@@@@@ Aq"A,G@ A F
 	AqE
Ax!

 	AqE@Ax!

  A8j  - 8E@Ax!

 - 9!
 Aq"A"G@Ax! A G
Ax!

 A(j  - (E@Ax!

 - )A"G@Ax!

  Aj  (! (! (!	 (E@ 	AxF@ AF A AA GA
 A~qr!

A!
 AF@ A AA G!

 A~q 
r! 	E
  	A

 	AxF@ !

 Av!
 	! !

  PE@ - 
Aj"Aq G

  : 
 Aj  ("AxG@ )!


 A0j  - 0E@ Ax6

 - 1A G@ Ax6

   7A

 A jArA A

@@ AqE@  P
 A jArA A

 Aj @ (AxF@ A j 

 A j Aj( 6   )7p
 (pAxF
 A j A j( 6   )p7T

 Aj @@ ("	AxF@ A j  -  E@Ax!	

Ax!	@ - !"A-k   
 A1kAqA	O@Ax!	

 A0kB!
 B!  (" (O@ 
!

@ (  j-  A0k"AqA	K@ 
!

  Aj 
B B
 )B R

-- Chunk 117 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17401-17550
 )"! B|"
 !T
 (" (I
 
 
!

 )!
  7X  	6T

 B! B !
 Aj A!	 - 	! - 



  
; Y A j 
Av:    6\  : X  6T
 - 
Aj"Aq G
  : 
 )X!
 (T!
  
7  6
A
6  Aj$ 

A !A !# A k"$  A(j  "@@ - (E@Ax!

 - )A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A j Ax!@ -  E
  - !!A!	@@@@ Aq"A,G@ A G@ 	
Ax!

 A~q

 	@Ax!

  Aj  - E@Ax!

 - !
 Aq"	A"G@Ax! 	A G
Ax!

 Aj  - E@Ax!

 - A"G@Ax!

  A@k  (H! (D!	@ (@E@ 	AxrAxF
  	A

 	AxF
  (L! 	! !

A !	 A~qAr
"AqE@ - 
Aj"Aq G

  : 
 A@k  (@"AxF
 / E A j-  Atr! (H! - D!

 A@k @ (@AxF@ A0j 

 A8j A j( 6   )@70
 (0"AxF@ Aj  - 	! - 



 (8! - 4! ! / 5 - 7Atr

   -  E@ Ax6

 - A G@ Ax6

 A


 Av
! - 
Aj"	Aq 	G
  	: 

  ; 	  6
  :   6 A
j Av:  
A
6  A j$ 

 !A !# Ak"$  A8j "@@ - 8E@Ax!

 - 9A G@Ax!

@ - 
"@  Ak": 
 Aq
Ax!



  A0j Ax!	Ax!
@@@@@@ - 0E
  - 1"A"G@ A F
Ax!	

 A(j  - (E@Ax!	

 - )A"G@Ax!	

  A j  (l!
 (h! (d!@@ (`E@ AxG@A! 
AF@ (  A (  G!
 E
  A

A! 
AG
 (  A (  G!

 AxG
 !
@@@@ Aq@ A j @ (`AxG@ A j A j( 6   )`7p

 A j 
 (pAxG


 A j  (pAxG
 A j  (`
 (l! (h! (d!

 A j  -  E
 - !! !@@@ Aq"A,G@Ax!	 A G
 
AxG

	
  Aj  - E@ !Ax!	

@ - "A"G@ A F
 !Ax!	

-- Chunk 118 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17551-17700
	
 Aj  - E@Ax!	
	
 - A"G@Ax!	
	
  A j  (l!
 (h! (d! (`E@ AxF@ 
AF (  A (  GA
 A~qr!

 
AF (  A (  GA
 A~qr! E
  A

 AxF@ !

 !

Ax!	

 - 
Aj"Aq G
  : 
 A j  (`"AxG@ )d!
 
E

  
A


   -  E@ B7  
E
  
A

 - A G@ B7  
E
  
A

   6
  6  
6 A6 


@@ AqE@ 
AxF
 A@kArA A


 A j @ (`AxF@ A j 

 A j A j( 6   )`7p
 (pAxG
	

 A j  (pAxG
 A j  (`
 (l! (h! (d!

 Aj  - 	! ! - 
 


 A j" )p7  Aj A j( 6 
  (l6L  )d7D

 !

 !	 Av!
  ; I A j Av:    
6L  : H  	6D

 A@kArA A

 A j A j( 6   )p7D
 
AxF

 
E
   
A
 - 
Aj"Aq G
  : 
 )H!
 (D!
  
7  6 A6 
 Aj$ 
 Aj$ 

A  
A  
 
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7 

A  
 A0j$  
A8j" 
A j( 6  
 
)D70@@ 
(@"AG@ 
A(j 
A j) 7  
A
j ( 6  
 
)P7  
 
)07 
 6 
Aj 
 
- 
 B7 A!@@   
A! 
("E
  
( A
 
Aj j"( "E
 ( A

  
)07 A6  A
j ( 6 

 
- 	A G@ B7 A!@@   
A! 
("E
  
( A
 
Aj j"( "E
 ( A

 
 Aj 
A(j) 7  Aj 
A j) 7  Aj 
Aj) 7   

-- Chunk 119 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17701-17850
)7 
 
A j$  (AF
  )7  Aj A(j) 7  Aj A j) 7  Aj Aj) 7 

 Aj!# A k"$  Aj!# A k"$  Aj 
Ax!@@@ - @@ - 	"A"G@ A F
 B7 

 Aj 
@ ("AxF@Ax!

  / ; 	 A
j Aj-  :   - !  (6
  : 
 A6   6

 
- 
"E
 
 Ak": 
 Aq
Ax!
 A6   6

A  
 
 Aj!	# A k"$  Aj"
 
 - !@@@ ("AxF@ 
 
 ("AxF
 Aj Aj-  :    / ;
 - !

 Aj Aj-  :    / ;

 (!
 	 /
; 	A!
 	A
j Aj-  :   	 
6
 	 :  	 6

 @ Aj 
 (
!
 (!
 (!A!
@@ (E@ Aj 
 - E@Ax! E


 - 	A G@Ax! 


 
A!

 !

 
 A
 	 
6
 	 
6 	 6

 Aj 
 (
!
 (!
 (!A!
@@ (E@  
 -  E@Ax! E


 - A G@Ax! 


 
A !

 !

 
 A
 	 
6
 	 
6 	 6
 	 
6  A j$  
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7 

A  
 A j$  (
! (! (!@@ ("AG@ Aj 
 - 
 B7  E
  A

  6
  6  6 A6 

 - 	A G@ B7  E
  A

 
  6
  6  6  6 
 A j$  (AG@  )7 A
j Aj) 7  A6 

  )7 A
j A
j( 6  A6 

  )7 A6  A
j A
j( 6 
 A0j$  
- 
Aj"Aq F@ 
 : 
  )7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7 

A  
 A0j$  
A8j" 
A j( 6  
 
)D70@ 
(@"AG@ 
A(j" 
A j) 7  
A
j ( 6  
 
)P7  
 
)07 
 6  
 
(@AxF@  

-- Chunk 120 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:17851-18000
)7  Aj ) 7  Aj 
A j) 7  Aj 
Aj) 7 

  
)@7A! A
j 
A j( 6  A6 @@@   
A! 
("E
 
( A

A!
 
Aj j"( "E
 ( A

  
)07 A6  A
j ( 6 
 
A j$ @@@ (@AG@ A8j A j) 7  A0j A j) 7  A(j A j) 7   )@7 

 Aj A j( 6   )D7x Aj! A j!# A@j"$ A -  @@@AA"@ A A!	 A 6 B7
 A: 8 A 6( A 64 A 60 A 6  A 6  A
j6,  Aj
  )
7 A j Aj( 6 A -  AA"E
 A6  	6 A6
 A6  A 6  6 A:   ( "AxH ErE@ ( A
 A@k$ 

AA 
A A7 A?jA A  
AA 
 - A
G

   ) 7   Aj A8j) 7   Aj A0j) 7   Aj A(j) 7  E
 
 A

 A j A8j) 7  A j A0j) 7  A j A(j) 7  A j A j) 7   )7@ A 6t B7l A:  A 6 A 6 A 6 A 6 A 6x  A j6 A@k A j
   )l7  A
j A j( 6    
6   
6   6  A6 @@@@@@@@@@@@@ - @
	


 
 (T!  (X"( "@    
 ("E

    (


@ - LA
I
  (T!  (X"( "@    
 ("E
     (
 (D!  (H"( "@    
 ("E

    (


@ (LAG
  (T!  (X"( "@    
 ("E
     (
 (D!  (H"( "@    
 ("E
    (


 (L" @ (P  A
 (D!  (H"( "@    
 ("E
	    (
	
 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (X!  (\"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (X" @ (\  A
 (D!  (H"( "@    
 ("E
    (

 (L" @ (P  A
 (X" @ (\  A
 (D!  (H"( "@    
 ("E
    (

 (D!  (H"( "@    
 ("E
    (

 (D!  (H"( "@    
 ("E
     (
 Aj$ 
 A 6P A6D A 6@ B7H A@kA  
A A7 AjA A  
~# A0k"$ @@@@@@@@@@@@@  -  Ak
	


 
 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj


 A6 A 6 B7    A

-- Chunk 121 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18001-18150
j6,  A,jB7   6
 ( ( Aj
	
   Aj6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

 A6 A 6 B7    A
j6,  A,jB7   6
 ( ( Aj

   A
j6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

   A
j6 A6 A 6 B7  B" A,j7   Aj7    Aj6,  6
 ( ( Aj

 A 6 B7  A6   Aj6,  A,jB7   6
 ( ( Aj

 A 6 B7  A6   Aj6,  A,jB7   6
 ( ( Aj

 A A
!  A0j$   
R# Ak"$    ( " Aj6
 A A	A A
  A A A	 A
jA !  Aj$   
i# Ak"$   (!  (!  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
# A@j"$ @@@@@@@  ( Ak 
   Aj6 A
j"  (  (  B
7  AjB7 A6, A 6( B74  Aj60 ( ( A(j!  (
"AxF Er
 (  A

   Aj6 A
j"  (  (  B
7  AjB7 A6, A 6( B74  Aj60 ( ( A(j!  (
"AxF Er
 (  A

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 

 (A A ((
 ! 

   Aj6
 A6, A 6( B74  A
jB7  Aj60 ( ( A(j! 
 A@k$   
I# A k"$   E@ A 6 A6
 A 6 B7 AjA  
 A j$   
 @@@@@@@ Ak
 
 A A@ A A
  Ax6   A: 
  Ax6   A: 
 A A

  Ax6   A: 
 A A
  Ax6   A: 
 A AE


 A A
   Ax6   A: 
    A A
  Ax6   A : 
t @@@@@@@ Ak 
 A AE

  Aj!

  Aj! A AE

 A:  

 A:  

  A : 
  Ax6 
y @@@@@@@ Ak 
 A AE

  Aj!

  Aj! )  B̓۹ Q

 A:  

 A:  

  A : 
  Ax6 
f# A0k"$  A6
 A 6 B7   6,  A,jB7   A j6 ( ( Aj!  A0j$   
   ( " (  ( 
   A  
	# A k"$ @  ( AI
 @@  - Ak 
 A6 A 6 B 7  A
j6
 AjA  
  Aj"("@ (!@  A
lj"("@ (A$j!@ Ak( "AxF ErE@ (  A
@ Ak( "	AF
  Ak! 	E@ ( "E
 A
k(  A

 ( "E
  A
k(  AtA
 A,j! Ak"
 

 ( "@ ( A,lA
 Aj" G
 

  ("E
   ( A
lA
 A j$ 
:A -  AA"@ A6   A 6   6 
AA 

-- Chunk 122 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18151-18300
   (    ((
  
a# A0k"$   6
  6 A6 A 6 B7
  AjB
7(  A(j6   Aj A0j$ 
a# A0k"$   6
  6 A6 A 6 B7
  AjB
7(  A(j6   Aj A0j$ 
# A@j"$   6
  6@ E@ A6 A 6 B7


 A6 A 6 B7
  6<  68  A8jB70
  AjB
7(  A(j6   Aj A@k$ 
(~# A k"
$  
Aj!# A@j"$  Aj" Aq"6   Av A GjAl6 (!@@@ (
"E@A!

 A H
A!
 "E

 Aj! !
 !	 ! !A -  !A -  !@@@@@@@@ AG
  	E
 
 	Ak"
j-  "A=F
  A j-  AG
  B 
B !


B!
 	 k"
A  	 
O"
 EAtk"A   
M"Av"Al"
 K
 A`q" 	K
 E
@ Aj" K
@@ 
 
j"-  "A j1  "!BQ
  Aj-  "A j1  "
BQ@ 
Aj!


 Aj-  "A j1  "BQ@ 
Aj!


 Aj-  "A j1  ""BQ@ 
Aj!


 Aj-  "A j1  " BQ@ 
Aj!


 Aj-  "A j1  "
BQ@ 
Aj!


 Aj-  "A j1  "#BQ@ 
Aj!


 Aj-  "A j1  "$BR
 
Aj!

 A6   B 
B 7

  j" 
B4 !B:"
 B." "B(  B""  
B
"
BB  BB B(B 
B8>   Aj 
 #B $B"
BB 
BBB =  A!@@ Aj-  "A j1  "!BQ
 A	! A	j-  "A j1  "
BQ
 A
! A
j-  "A j1  "BQ
 A
! A
j-  "A j1  ""BQ
 A
! A
j-  "A j1  " BQ
 A
! A
j-  "A j1  "
BQ
 A! Aj-  "A j1  "#BQ
 A! Aj-  "A j1  "$BQ
  Aj 
B4 !B:"
 B." "B(  B""  
B
"
BB  BB B(B 
B8>   A
j 
 #B $B"
BB 
BBB =  A!@ Aj-  "A j1  "!BQ
 A! Aj-  "A j1  "
BQ
 A! Aj-  "A j1  "BQ
 A! Aj-  "A j1  ""BQ
 A! Aj-  "A j1  " BQ
 A! Aj-  "A j1  "
BQ
 A! Aj-  "A j1  "#BQ
 A! Aj-  "A j1  "$BQ
  A
j 
B4 !B:"
 B." "B(  B""  
B
"
BB  BB B(B 
B8>   Aj 
 #B $B"
BB 
BBB =   Aj-  "A j1  "!BR
A!

 A :  A6  A
j  
j"Av<   A	j Av=    At r6 
	
 A6   B  
jB 7

-- Chunk 123 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18301-18450

A! Aj-  "A j1  "
BQ
A! Aj-  "A j1  "BQ
A! Aj-  "A j1  ""BQ
A
! A
j-  "A j1  " BQ
A
! A
j-  "A j1  "
BQ
A
! A
j-  "A j1  "#BQ
A! Aj-  "A j1  "$BQ
 Aj 
B4 !B:"
 B." "B(  B""  
B
"
BB  BB B(B 
B8>   Aj 
 #B $B"
BB 
BBB =   !  
A j"
G
 


A  
 Aj A  
 A :  A6  A
j  
j"Av<   A	j Av=    At r6 

 Av"Al!@@  M@ 	 I
@ Aq Aqk"AO@  j! 
 k!  
j! AkAvAs!
A !A!@  K
  j" I
@@  j"-  "A j-  "
AF
  Aj-  "A j-  "AF@ Ar!

 Aj-  "A j-  "AF@ Ar!

 Aj-  "A j-  "AG
 Ar!
 A :  A6  A
j Av<   A	j Av=    At r6 
	
  jAk"Aj At" AtrAv:     At"rAvAq  
AtrAvr;   Aj! Aj! 
Aj"

 

 ! ! A G!A !A !A !A !A !A !
@@@@@@@@@@@@ @@@@@@@@@@@ 	 O@ 	 F
 
 j"-  "A=F
 A j-  "AG
A !


  	A  
 	 
j" AjF@A!


A! - "A=F
  A j-  "
AF@A!


A !  Aj"F@A!

 Aj!	 - "A=G
  k!  	F

A!@ AF
  j"-  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 Aj" F

 -  A=G
 Aj!A! Aj G
 
A!


   j"M
A  
 A j-  "AF@A!
 !

  	F@A! !


 Aj! - "A=F@  	k!  F
A!@A  j"-  A=G
 Aj" F
A -  A=G
 Aj" F
A -  A=G
 Aj" F
 A|F
A -  A=G
 Aj!A! Aj G
 


 A j-  "
AF@A!
 !

  F@A! !


 -  "A=F@  k!A! Aj F
A!@ Aj"	E
A  j"-  A=G
 Aj" F
 	Aj"E
A -  A=G
 Aj"	 F
 Aj"E
A 	-  A=G
 Ak"Aj O@ Aj!A! 	Aj G



A  
A!
 A j-  AG

 
 j" I
 A6   B  B7

AAA  
A  

-- Chunk 124 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18451-18600
A!
A! !

A!
A! !

A
 j"M
	A  
A!A!

 	
A !
A !
@@@ AqAk 
  j" I
 AqE

	
 

@@ A At 
Atr"	 
At Atr"r"
 Al"Aqt@ AI
  
jA  
 I"! E
  Av:   
AF
 
Aj! AG
 !


  j" I
 @ A6   AkB  BB7


A  
  jA   I!  
k"A   M"AF
  
Av:   
A~F
  
Aj!
 A8qAF@ 
!


  
jA  
 I! AF
  	Av:   
A}F
  
Aj!


A  
   j"M@ A6   B B7

A  
A  
A  
  6 A:  A6 

@   j"
 I
AA 
!  
6  
6  6 

A  
A  
 A6   B B 7

 A6  B7


A  
  
A  
  	A  
  A  
  	A  
  
<  A6   
B > Aj 
"Av:    Av; 
 (AG@ A
j( !  6  6      K6

 1 "
BR@ Aj1  ! A
j3  !   
 5 "
B> Ax6   
 B0  B B> E
  A

 A6$ A 6  B7, B
78  A8j6( A jA  
 
  
 A@k$ @@@ 
(AxG@   
)7  A
:    A
j 
A
j( 6 

 
 
)7 
A 6$ 
B7
 
A: H 
A 68 
A 6D 
A 6@ 
A 60 
A 6( 
 
A
j6< 
A(j!# A0k"$ @@@@ 
Aj"-  Ak 
  (6   - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

  (6  A6
 A 6 B7  B7   A j6 ( ( Aj

  (6   - :  A6
 A 6 B7  B7(  AjB7   A j6 ( ( Aj

 (A A ((
 
! A0j$  
   
)
7
  Aj 
A$j( 6 A -  AA"E
  A 6   6 A6   A:  

-- Chunk 125 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18601-18750
 
A j$ 
A A7 
A jA A  
AA 
M# Ak"$    A
j6
 A A
A A  A A A A
jA !  Aj$   
~
# A k"	$  	 A -  "@@ 	( @@ 	("E@A!


 A H
A! "
E

 !A !@ AI
  Ak"A   M!@  AjO@@ 
 
A j"M@  O
  A  
A  
 
 
j"  j"
)  "B8"B:A j-  :   Aj BB"B"A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB "B.A?qA j-  :   Aj B(A?qA j-  :   Aj BB BB B(B B8""
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj  B
A?qA j-  :   Aj 
Aj)  "B8"B:A j-  :   A	j  BB("B4A?qA j-  :   A
j  BB" BB"B.A?qA j-  :   A
j B(A?qA j-  :   A
j B"A j-  :   A
j  BB BB B(B B8"B
A?qA j-  :   Aj "
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj 
A
j)  "B8"B:A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB" BB"B.A?qA j-  :   Aj B(A?qA j-  :   Aj B"A j-  :   Aj BB BB B(B B8""
AvA?qA j-  :   Aj 
AvA?qA j-  :   Aj  B
A?qA j-  :   Aj 
Aj)  "B8"B:A j-  :   Aj  BB("B4A?qA j-  :   Aj  BB" BB"B.A?qA j-  :   Aj B(A?qA j-  :   A
j B"A j-  :   A
j  BB BB B(B B8"B
A?qA j-  :   A
j "
AvA?qA j-  :   Aj 
AvA?qA j-  :   
A j!
  Aj"O



 Aj A  
@  Ap"
k"
 M@ !

@  Aj"
K@A  
  
O@@  Aj"M@  M
  A  
A  
  
j"  j"-  "AvA j-  :   Aj Aj-  "A?qA j-  :   Aj Aj-  "At AvrA?qA j-  :   Aj At AvrA?qA j-  :   Aj! 
" 
O



 
 A  
@@@@@@@@@@ 
Ak 	
  O
  
j 
 j-  "AqAvA j-  :   
Aj"E
  M
 Aj" O
  
j At  j-  "AvrA?qA j-  :   Aj" O
 AtA<q!A!

  O
A!  
j 
 j-  "AvA j-  :    Aj"K@ AtA0q!

  A  
  A  
A  
  A  
  A  
  A  
  A  
  
j A j-  :    j!
 E@A !

  M@  
j!  k!@@A  kAq"E
  E
 A=:   AF
  AF
 A=:  AF
  AF
 A=: 
 

  A  
!

  A  
A A-A  
   
   jK@A A*A  
 	A
j" 
  	(
@ 	 	)"B >
 	 > 	 6 	 
6 	 6
A A
 A A  
   6   
6   6  	A j$ 

~# A k"$  A0j @ - 0E@  Ax6 

Ax!@@@@@@@@@@@@@@@ - 1"A k# 
 A"k
          
Ax! (" (O
 @ (  j-  "A,F A Fr A Fr
  (" (I
 

   6 


 Aj  - E@  Ax6 


 - 	A"G

-- Chunk 126 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18751-18900
  A4j  (<! (8! (4
 AxF@  Ax6 


  Ax6  E

  A


 A j  -  E@  Ax6 


Ax!@ - !A G
  - 
"E
  Ak": 
 AqE@  Ax6 


 A!@@@ Aj  - E@Ax!

~@@ - ""A,G@ A F
 !A ! 
Ax!

  Aj  - E@Ax!

 - !
 AqA F@Ax!

 A4j  (4"AxG
 
B~B

 
B~
"
BPE
 
 - 
Aj"Aq G

  : 
 A4j Ax! (4AxF
   )47   Aj A<j( 6 


 )8!

 - 
Aj"Aq G
   
7   6   : 



   6 


 A(j  - (E@  Ax6 


 - )A G
 - 
"E
  Ak": 
 AqE@  Ax6 


 # A@j"$  Aj Ax!@ A j"@ - E
  - !A!@@@ "	A,G@ A G@ 
Ax!

 A~q

 @Ax!

  Aj  - E@Ax!

 - !
 A"G@Ax! A G
Ax!

 Aj  - E@Ax!

 - 	A"G@Ax!

  A0j  (8! (4!@ (0E@ AxrAxF
  A

 AxF
  (<!	 ! !

A ! A~qAr
"AqE@ Ax6 

 A0j @ (0AxF@ A j 

 A(j A8j( 6   )07 
 ( "AxF@   - ! -  



 ((!	 - $! ! / % - 'Atr


 Av
";   	6  :   6  Aj Av:  
 A@k$  - 
Aj"Aq G
  : 
 (D"AxG
 A4j  (4AxF@  Ax6 


   )47   Aj A<j( 6 
	
  Ax6 

  Ax6 

   (@6   6   6 

A  
  Ax6 

A  
A  
   )H7   6 

A  
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

@@ Ak 
 /  A /  F


 A A
  Ax6   A: 


-- Chunk 127 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:18901-19050
  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
# A k"$  Aj @ - E@  Ax6 

@@@@@@ - 	A"F@  Aj  (
! (! (! (
 AxF@@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

@@ Ak 
 /  A /  F


 A A
  Ax6   A: 

  Ax6 

   6   6   6 

    A A

  Ax6   A : 
 E
  A

    A A

  Ax6   A : 
 A j$ 
~# A k"$  Aj @ - E@  B7 

@ - 	A"F@  A j"  (T! (P! (L! (H
 AxF@  6  6   @@ - HA
F@ A$j A j( 6   )L7


 A8j A j) 7  A0j A j) 7  A(j A j) 7  A j A j) 7   )H"7 AqA
G

   )
7  A 6   A
j A$j( 6 

 A6L A 6H B7T  AjB
7@  A@k6P  Aj A j  A6  AjI

  6  6 A j  @@@ - HA
F@ A$j A j( 6   )L7


 A8j A j) 7  A0j A j) 7  A(j A j) 7  A j A j) 7   )H"7 AqA
G

   )
7  A 6   A
j A$j( 6 

 A6L A 6H B7T  AjB
7@  A@k6P  Aj A j  A6  AjI
 E
  A

  B7 

   6
   6   6  A6 
 A j$ 
:A -  AA"@  A 6   6  A6 
AA 
# Ak"$  A ;
   Aq""A
n"A
lkA0r: A A
I
   A
pA0r: 
A A M
   A nA0r: 
A 
"As" (  ("kK@    (!
 ( j A
j j   Ax6    j6 Aj$ 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A!@ B
Z@@ E
 Ak" Ajj B
"B
A0r:   B T! ! E
 

A k" (  ("kK@    (!
 ( j Aj j   Ax6    j6 A j$ 
A  

# Ak"$  (" ( F@ 
 ( jA":    Aj"6 A 6
@ E
   j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
! @@@@@@@@@ Ak 
 A G@ A G



 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA":  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

-- Chunk 128 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19051-19200

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :  

@ A O@ AO@ AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

 (  F@ 
 ( j :   Aj

 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA :    Aj"6 (  F@ 
 ( jA0:    Aj"6 (  F@ 
 ( jA0:    Aj"6 Aq"A
I!	 (  F@ 
 ( j AqAvA0r:    Aj"6 (  F@ 
 ( j A0r A7j 	:   Aj

  A?qAr: 
  AvAr: 
A
!  (  kK    ( 
 (j A
j  ( j

 Aj
"6  G
 

 (  F@ 
 ( jA":    Ax6   Aj6 Aj$ 
M (  ("kAM@  A (!
  Ax6   Aj6 ( jA6  

      
H  (" ( F@ 
 ( jA :    A:    6  Ax6   Aj6
J (" ( F@ 
 ( jA :    A:    6  Ax6   Aj6
# Ak"$  (" ( F@ 
 ( jA :    Aj6 Aj   @ (AxF@ (" ( F@ 
 ( jA::    Aj"6 (  F@ 
 ( jA :    A:    6  Ax6   Aj6

   )7   Aj A
j( 6 
 Aj$ 
   ( ( " Aj(   Aj(  
# A0k"$  @@@@@@@@@@@@@@@@@@@@@@A  ( Axs" AOAk	



 
 A 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A 6(A7

 A 6(A'


 A 6(A8


 A 6(A8


 A 6(A.


 A 6(A
	
 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

 A 6(A8

   (6(  (
6, A6
 A 6 B7  A(jB
7   A j6 ( ( Aj!  A0j$   
"  (Aj"@   6
A  
x   ("  ("I@ ( !A!@   j-  A	k"AKA tAqErE@   Aj" 6   I!   G


Ax 

Ax
6 
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
@@ A,G@ A G@  Ax6 
 Aj"E
  Ax6   6
 Aj"E
  6Ax!    IA!@  j-  "A	k"AKA tAqErE@  Aj"6  I!  G


AxAxAx  A G 
6 
A  
A  
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
@ A,G@ A G@  Ax6 

-- Chunk 129 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19201-19350
 Aj"E
  Ax6   6
  Ax6 
A  
 (" ("  K! ( !@ E@  Ax6 
  G@ -  !  Aj"6  j!	 Ak! Aj! !  	-  F


  Ax6 
@ (" ("I@ ( !A!@@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 
 !
 

  A ;   Ax6   AjA :  
Ax!@   A:F Aj"E
  6Ax 
6 
A  

~# A k"
$ @ (" ("I@  k! (  j!A !@ !
  	j!@  	j-  "A"G@A ! A G
A! 
As!

 
Aq@A !

  Aj6@@@@ E@  K
 
Aj  	 
(
   
)7  B7 

  K
 
Aj!
 !A !A !A !A !A !
# A0k"$ @@@@@@ Aj 	E@A ! A 6
 B7A

 	A H
A -  A! 	A"E
 A 6
  6  	6 A 6 A 6A !@ -  "A I@Ax!

@@ @@@@@@@@@@ AqE@ Aq
 A G
A!A !


 A0kAqA
I
	Ax! A k&												
A!Ax!A! A"kT

 
@Ax!

 ( F@ Aj
 ( j :  A !
 Aj

 ( F@ Aj
 ( j :  

 ( F@ Aj
 ( jA:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA
:  

 ( F@ Aj
 ( jA	:  
 Aj

@@@ AM@ Aj j :  A! Aj"AG
@ ("A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
@ Av"A0k"AqA
I
  A kAqAO@ A kAqAO
 A k!

 A7k!
 Aq At A
tj AtAqrj"AqAG@ Aq"AsAI@Ax!


 AI
 AI@  A?qAr:   AvAr: A!

  A?qAr:   AvA?qAr:   AqA
vAr: A!

 

 AqAM@A !A!
 !


Ax!


 AA  
  : A!

 AqAI@Ax!

 A jAq 
A jAqA
tr"Aj"AsA kAI@Ax!

  A?qAr:   AvA?qAr:   A
vA?qAr:   AvAqAr:  ( kAM Aj A (
 
 (j (6  A !
A ! (
Aj

  ( kK Aj   (
 

-- Chunk 130 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19351-19500
 (j Aj A ! (
 j
"6

A !A !
 Aj! 	Ak"	
 
 (!  
rAq@AxAx Aq!

 (
" @@ 
 (A!A E
 AxG
 !	 ! (
! 	 
6 
 6A !	A
!

  AA
!	Ax!
 
 	6   
j 6 

  	 
 (!
 
A6  
 6 E
  ( A
 A0j$ 

 A 6( A6
 A 6 B7  AjA  
 
Aj 
A
j( "6  
 
)"7  
(!  A
j 6    7 
  A 6 

  B7 

  A6 

  A  
  A  
  Aj6  	Aj"	j
 

  B7 
 
A j$ 
r@ (" ("O@

 ( !A!@  j-  "A	k"AKA tAqEr
  Aj"6  I!  G
 

   :    :  
< (" ( F@ 
  Ax6   Aj6 ( jA :  
:  (" ( F@ 
  Ax6   Aj6 ( jA :  
r (" ( "F@  ( !
  Aj"6 (" jA :    F@  (!
  Ax6   Aj6  jA :  
 A kAqAO@ A kAqAO@ A0k"AqA
O@   6   Aq6 
  A 6    : 
  A 6    A k: 
  A 6    A7k: 
  A A
@~A -    ) !AA" @  B 7
   7  A6   
AA 
	# A k"$   ( !  A 6D B7< A: h A 6X A 6d A 6` A 6P A 6H  A<j6\ A j!@@@@@@@@@@@@@@@@@@@@@@@@@  ( Ak	



 
   (  (

# A@j"$ @@@@@@  Aj"-  Ak 
  (6A -  AA"E
 AjA (  6   AjA )  7   A )  7   A6  6
 A6 A6, A 6( B74  AjB 7   AjB!7  Aj60 ( ( A(j! ("E
 (
 A

 - ! A6, A 6( B74  AjB 7  At"A j( 6
  A j( 6  Aj60 ( ( A(j!

 ("(  ( !

 ("(   ((  !
 A@k$  

AA 


 A A

 A A

 A A

 A A

 A A


 A A

 A A

 A A

 A A

 A A



 A A


 A A


 A A


 A A
	
 A A>

 A A

 A A4

 A A,

 A A$


-- Chunk 131 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19501-19650
 A A

 A A

 A A


 A A
E@ A8j A j( 6   )<70 A6 A 6  B7
   AjB7(   A
jB7   A0jB
7  Aj6 ( ( !  (0"@ (4 A
 A j$   
A A7 A jA A܁  
   A  
>!  (
!!  (!  (!
  (!
  (
!"  (!   (!
  ( ! @  Atj!#@  (  "At AqAtr AvAq Avrr" ! 
Aw 
Aws 
Awsj 
 s 
q sjjAߨj" 
  s q 
  qs A
w Aws A
wsjj"A
w Aws A
ws   
sq  
qsj  ( "At AqAtr AvAq Avrr"j  "j"	 
 
sq 
sj 	Aw 	Aws 	AwsjA݉j"j"A
w Aws A
ws   sq  qsj 
 ( "At AqAtr AvAq Avrr"j   j"
 	 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
 ( 
"At AqAtr AvAq Avrr"j  
j" 	 
sq 	sj Aw Aws AwsjAȨk"j"A
w Aws A
ws   sq  qsj 	 ( "At AqAtr AvAq Avrr"j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAۄj"j"A
w Aws A
ws   sq  qsj 
 ( "
At 
AqAtr 
AvAq 
Avrr"j  j"
  	sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( "At AqAtr AvAq Avrr"j  j" 	 
sq 	sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	 ( 
"	At 	AqAtr 	AvAq 	Avrr"j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAk"j"A
w Aws A
ws   sq  qsj 
 (  "
At 
AqAtr 
AvAq 
Avrr"j  j"
  	sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj  ( $"At AqAtr AvAq Avrr"j  j" 	 
sq 	sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 	 ( ("	At 	AqAtr 	AvAq 	Avrr"
j  j"	  
sq 
sj 	Aw 	Aws 	AwsjAơj"j"A
w Aws A
ws   sq  qsj 
 ( ,"
At 
AqAtr 
AvAq 
Avrr"
j  j"
  	sq sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj  ( 0"At AqAtr AvAq Avrr"
j  j" 	 
sq 	sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 	 ( 4"	At 	AqAtr 	AvAq 	Avrr"j  j"  
sq 
sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj ( 8"	At 	AqAtr 	AvAq 	Avrr"	 
j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj ( <"
At 
AqAtr 
AvAq 
Avrr"
 j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 	Aw 	A
ws 	A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAƻ j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAòj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAؤj"j"A

-- Chunk 132 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19651-19800
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAڑj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjA݆k"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj" j  j"
  sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 
j j Aw A
ws A
vsj" j  j"
 
 sq sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj" j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 	j j Aw A
ws A
vsj"	 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAƩ6j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"
 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAҤj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 	Aw 	A
ws 	A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAܽj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA۱j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 

-- Chunk 133 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19801-19950
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA橨j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA߮k"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA篴k"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjAk"j"A
w Aws A
ws   sq  qsj 
Aw 
Aws 
Avs 	j j Aw A
ws A
vsj"	 
j  j"
 
 
sq 
sj 
Aw 
Aws 
AwsjA k"j"A
w Aws A
ws   sq  qsj Aw Aws Avs 
j j Aw A
ws A
vsj"
 
j  j"
 
 
sq 
sj 

-- Chunk 134 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:19951-20100
Aw 
Aws 
AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 	Aw 	A
ws 	A
vsj"
j  j" 
 
sq 
sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"
j  j"  
sq 
sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj 
 Aw Aws Avs j j 
Aw 
A
ws 
A
vsj"
j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjA¥j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j 
Aw 
A
ws 
A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 	j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAϔj"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjA߹j"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j 
j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAj"j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j 
j Aw A
ws A
vsj"j  j"  sq sj Aw Aws AwsjAƕj"
j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  
j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj Aw Aws Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj  Aw Aws Avs j j Aw A
ws A
vsj"j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	Aw 	Aws 	Avs j j Aw A
ws A
vsj" j  j"  sq sj Aw Aws AwsjAk"j"A
w Aws A
ws   sq  qsj 	 
Aw 
Aws 
Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"j"	  sq  qsj 	A
w 	Aws 	A
wsj 
 
Aw 
Aws 
Avsj j Aw A
ws A
vsj j  j"  sq sj Aw Aws AwsjAk"
j! 	 
j!
  
j 
j!
   j!   
j!
  "j!"  j!  !j!! A@k" #G
 

   !6
   6   
6   
6   "6
    6   
6   6 
@@@@@@@@@@@ ( E@ ("-  "A(O
 E
 - "A(n! A K

  A6 B7    A(n6


 (! ("E
 -  "A'K
  O
 Aj" j,  "A q!A A N
 Aj" O
  j,  "A q Atr!A A N
 Aj" O
  j,  "A q Atr!A A N
 Aj" O
  j,  "A q Atr!A A N
  Aj"M
  j-  "AI
  A:   A6 
A A A܅  
 -  "A(O
 E
 - "A(n! A M@  A6 B7    A(p6




 A'A  
  A 6


-- Chunk 135 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20101-20250
  A:   A6 
 At r!A
! A6    6  A6   j6

 A'A  
 A'A  
A A A  
  A ;  A
jB =    At6  A6 
  A 6 
# Ak"$ @@@@@@@@  -  Ak 
   Aj6 A A
Aʈ A AjA 

 A͈ A	

 Aֈ A

   Aj6
 A A
A A A
jA 

 A A

 A A

 A A


 A A

!  Aj$   
"   Bͅ 7  BŹ7 
   ( " (   ( 
	   A 6 
# Ak"$   ( E@ 
 Aj!# A k"$  Aj  AЉ ( " @   )BŹQ@A )Bͅ Q

     AИ !A
! ) BċfR
 )Bԯ R
  Aj! A
j( !  ( !
  6  6  A j$   ( (
!  Aj$   

  ( E@ 
  Aĉ 6   6 
] ( ! A 6 @ @ (!A -  AA"
AA 
 
  6  6   Aĉ 6   6 
~# A0k"$   ( !@@@@@@  (" 
A!  A A
  6 (!  (! A6
 AЊ 6 B7$  AjB"7   6     Aj
 Aj! AtAk!@  6 A A
 A6
 AЊ 6 B7$  7   6  ( ( Aj
 Aj!A !  Ak"
 


 A6
 A 6 B7$  AjB7  B7   6  ( ( Aj! 

 A6
 AЊ 6 B7$  B7   6  ( ( Aj! 

# Ak" $   A 6
  A6  AՉ 6# Ak"$    Aj" ) 7 AjA   (AA  
A! 
 A0j$   
!   Bԯ 7  Bċf7 
# A k"$ @ E@AA  ! 

  6
   6 Aj Aj ("@@ (! (
E@   ! 

A!    
 A
 Aj Aj ("
 

A ! 
 A j$   
+   ( -  E@ A A

 A A

   A  
# Ak"$  ( @A !A	

 Aj ( (A  ( ("!A	 (
 
!   !@  ( "AxG@ E
  ( A

  - AG
   (" ( !  Aj( "( "@   
 ("@   (
  A
A
 Aj$  
x@  ( "AxG@ E
  ( A
  - AG
   (" ( !  Aj( "( "@   
 ("@   (
  A
A

(  ( "AxrAxG@  ( A

  ( !# Ak"$  (! ( ! (
"! @ AqE
  Ar!  
  B7 
   Ar6
A ! @   jA j Aq"A0r A j A
I:    Ak!  AI! Av! E
 
  Aj"AI@ AA A   jAjA   k!   6
  6  6  Aj$   

 AA  

# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6

-- Chunk 136 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20251-20400
 Aj$ A 
  (
!@@ AO@  (!@@   F@  AA  ("j( "
A !

  (" 6
  6

  Aj  Aj !@ ! "Aj Aj ("! AA j( "
 
 A 6 
 E
    (
AtA j"( G@ AA (  Fj 6  E


  6  
A A ( A~  (
wq6 

  ("  G@   6
   6
A A ( A~ Avwq6 
  6  ("@  6  6
  (" E
    6   6

   j!@@  ("Aq
  AqE
  ( " j!   k" AȽ ( F@ (AqAG
A  6   (A~q6   Ar6  6 

   
@@@ ("AqE@ A̽ ( F
 AȽ ( F
  Axq"    j"Ar6   j 6   AȽ ( G
A  6 
  A~q6   Ar6   j 6 
 AO@   
 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6
A̽   6 AĽ AĽ (  j"6    Ar6  AȽ ( G
A A 6 AȽ A 6 
AȽ   6 A A (  j"6    Ar6   j 6 

  B 7  A  AI
 A AK
  A Avg"kvAq AtkA>j
"6
 AtA j!A t"A ( qE@   6    6    6
    6A A (  r6 
@@  ( "(AxqF@ !

 A AvkA  AGt!@  A
vAqjAj"( "E
 At! ! (Axq G
 

 ("  6
   6  A 6   6
   6
   6    6    6
    6
  Ak"  Ak( "Axq" j!@@ Aq
  AqE
 ( "  j!   k"AȽ ( F@ (AqAG
A   6   (A~q6   Ar6   6 
  
@@@@@ ("AqE@ A̽ ( F
 AȽ ( F
  Axq"    j" Ar6   j  6  AȽ ( G
A   6 
  A~q6   Ar6   j  6 
  AI
   A !A A ( Ak" 6   
A ( " @@ Aj!  (" 
 

A A  AM6 
A̽  6 AĽ AĽ (   j" 6    Ar6AȽ (  F@A A 6 AȽ A 6 
  Aؽ ( "M
A̽ ( "E
A ! AĽ ( "A)I
A !@  ( "O@   (jI

 (!
 
 
AȽ  6 A A (   j" 6    Ar6   j  6 
  AxqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6
A ( "@@  Aj!  ("
 

A A    AM6   O
 Aؽ A6 

$	~# Ak"$ @@@@@@@  AO@  A{O
  A
j" Axq!A ( "	E
A  k!A  AI
 A AK
  A  Avg" kvAq  AtkA>j
"AtA j( "E@A ! 

A !  A AvkA  AGt!@@ (Axq" I
   k" O
  ! "
 A ! ! 

 ("     A
vAqjAj( "G   !  At! 
 


A ( "A  A
jAq  A
I"Av" v"Aq@@ AsAq  j"At" A j"  A j( " ("G@  6
  6

A  A~ wq6 
  Aj!   At"Ar6   j"   (Ar6

 A ( M
@@ E@A ( " E
  hAtA j( "(Axq k! !@@ (" 
  (" 
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E



-- Chunk 137 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20401-20550
   6   
A A ( A~ (
wq6 

  (Axq k"   I"!    !  !
 
 
@A  t"A  kr   tqh"At" A j"  A j( " ("G@  6
  6

A  A~ wq6 
   Ar6   j" At" k"Ar6   j 6 A ( "@ AxqA j!AȽ ( !A ( "A Avt"qE@A   r6  

 (
!  6  6
  6
  6
  Aj!AȽ  6 A  6 

   6 ("@   6   6
 ("E
    6   6
@@ AO@  Ar6  j" Ar6  j 6 A ( "E
 AxqA j! AȽ ( !A ( "A Avt"qE@A   r6   

  (
!   6  6
   6
  6

   j" Ar6   j"   (Ar6

AȽ  6 A  6 
 Aj!

   rE@A !A t" A   kr 	q" E
  hAtA j( ! 
  E

@     (Axq" k" I"!	  ("E@  (!
  	  I" !      ! " 
 

 E
  A ( " M    kOq
  (!@@  (
" F@ AA (" j( "
A ! 

 ("  6
   6

 Aj Aj  !@ ! " Aj  Aj  ("!  AA j( "
 
 A 6 
 E
  (
AtA j"( G@ AA ( Fj  6   E


   6   
A A ( A~ (
wq6 

@@@@@ A ( "K@ AĽ ( " O@ AjA|q"Av@ !  Aj"A 6 A  A|q  AF"6 A   At 6  ("E@A !


 (
!Aн  ("Aн ( j" 6 AԽ AԽ ( "     I6 @@A̽ ( "@A ! @   ( "  ("jF
  (" 
 


Aܽ ( " A    ME@Aܽ  6 
A A6 A  6 A  6 A  6 A A 6 AĻ A 6 A A 6 A̻ A 6 A A 6 AԻ AȻ 6 AȻ A 6 Aܻ Aл 6 Aл AȻ 6 A Aػ 6 Aػ Aл 6 A A 6 A Aػ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aļ A 6 A A 6 A̼ A 6 A A 6 AԼ Aȼ 6 Aȼ A 6 Aܼ Aм 6 Aм Aȼ 6 A Aؼ 6 Aؼ Aм 6 A A 6 A Aؼ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A̽  AjAxq" Ak"6 A A 6 AĽ  A(k"   kjAj" 6    Ar6  jA(6Aؽ A6 

  I  Mr
   (
"Aq
  Av F

Aܽ Aܽ ( "     I6   j!A ! @@@   ( G@  (" 



  (
"Aq
  Av F

A ! @@   ( "O@    (j"I

  (! 


A̽  AjAxq" Ak"6 AĽ  A(k"	   kjAj" 6    Ar6  	jA(6Aؽ A6   A kAxqAk"    AjI"A6A ) !
 AjA ) 7   
7A  6 A  6 A  6 A  Aj6  A
j! @  A6   Aj"  I
 
  F
  (A~q6   k" Ar6   6   AO@   

  AxqA j!A ( "A  Avt" qE@A    r6  

 (
!   6   6
  6
   6

   6     ( j6 AjAxqAk" Ar6 AjAxqAk"  j" k! A̽ ( F
 AȽ ( F
 ("AqAF@  Axq"  j!  j"(!
  A~q6   Ar6   j 6  AO@   

 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6

AĽ    k"6 A̽ A̽ ( "  j"6   Ar6   Ar6  Aj!

AȽ ( ! @  k"AM@AȽ A 6 A A 6    Ar6   j" (Ar6

A  6 AȽ    j"6   Ar6   j 6    Ar6
  Aj!

    j6A̽ A̽ ( " AjAxq"Ak"6 AĽ AĽ (  j"   kjAj"6   Ar6   jA(6Aؽ A6 

A̽   6 AĽ AĽ (  j"6    Ar6

AȽ   6 A A (  j"6    Ar6   j 6 
 Aj!

A !AĽ ( "  M
AĽ    k"6 A̽ A̽ ( "  j"6   Ar6   Ar6  Aj!

   6 ("@   6   6
 ("E
    6   6
@ AO@  Ar6  j"  Ar6   j 6  AO@   

 AxqA j!A ( "A Avt"qE@A   r6  

 (
!   6   6
   6
   6


-- Chunk 138 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20551-20700
   j" Ar6   j"   (Ar6
 Aj!
 Aj$  
@A{A    AM" k M
   A A
jAxq A
I"jA
j"E
  Ak!@  Ak" qE@ ! 

 Ak"( "Axq  jA   kqAk"  A   kAMj"  k"k! Aq@     (AqrAr6   j" (Ar6   ( AqrAr6   j" (Ar6  

 ( !   6    j6 
@  ("AqE
  Axq" AjM
     AqrAr6   j"  k"Ar6   j" (Ar6  
  Aj!
 
# Ak"$ @@@@  ( Ak 
 A܌ A


 A A


  - AG@   Aj6
  Aj A
j
  ("  (
" K
A (A A
 ((
 
  Aj"    
!  Aj$   
   A  
# A k"$ @@@@@@@  -  Ak 
  A:   ( ! A 6  E
A -  !A A:    :  
A A :    A:  
 A j$ 
 A 6 A6
 A 6

A  
 B 7 B 7
 A 6# Ak" $   A 6
   Aj6  AjA   A
jA  AjA  
 A 6 A6
 A 6
 B7 AjA  
~# Ak"$ @@  ( AG@# A k"$ @  ( E@A   (  (


   Aj6 (
!  6 B7
 AjB#!@ Aq@  70 A6, A6
 A 6 A6$ A: X A6T B 7L A6D A6<  A<j6(  A0j6  A
jA  Aj

 A6@ A 6< B7H  7  Aj6D A
jA  A<j
"A  (
"E@ 
 E
A A7 A jA A̬  
 A AE

A

   (  (

!  A j$   !

  ($"E
   ( ! @ Aj   @@ (E@ ( (
 


 - 
! - 
! (!A A E

A!

 AqE
   j"I
   j!   k"
 

 Aj$  
  A  
 "~# Ak"$ @@@@@@@@@  ( Ak 
 A A
	
  - AG@   Aj68  Aj A8j
  (
! - 
AqE
  (!A

 A A

   ("I
  k!  ( A
lj!A 
!  Ax6
   :  A ) 7   : , A 6(  6
 A 6$  A
j6  E
  A
lj! A<j! Aj!@@ (" E@ A 6d  A
j6` A68 A6 A j A8j AjA  A  !  (`" (
Aj6
  E


  A,l! (!A !@ A 64  A
j60@  j"A j( AxF@ A68

 Aj" A$j( "
 A(j( "
A! @ (
  (! (!# A k"$ # A k"$  Aj  A A@@@@@@@@@@@@@@@@@@ (E@@ A j Aj (T" AF
 
  Ak
 Aj! (@! (H! (4AF!@ (L"
Ak"
 Aj"
("	j"  (D"
I@A  
("k! 
 
(" k! 
(
! 
) !$@@@@@@@ $   j1  BP@ 
 	 
j"	6

     K "
 
 
 
I! 	 j!! 
! @   F@A   ! ! @   M@ 
 	 
j" 6 E@ 
A 6

-- Chunk 139 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20701-20850

   6  	6 A6 


  Ak"  
O
   	j"
 
O
   j-   
 j-  F
 
 
 	  j"	6 !  E


   	j 
O
   !j!"   j!#  Aj!  #-   "-  F
 
 	 j  j!	
A !  E


 
 
A  
 
 	 
j"    
I 
A  
   
A  
 
  6
  !
 	 
j"  
I
 

 
 
6 A 6 
 (

  (X6A

A 
E
@ ("Aj" E
    I@   j,  AJ


   G

  j!	   j! @@   	F
   ,  "A N@ Aq!  Aj

  - A?q! Aq!
 A_M@ 
At r!  Aj

  - A?q Atr! ApI@  
A
tr!  Aj

 
AtA q  - A?q Atrr"A F
  Aj
!  A@jAI A0kA
Ir



 E@A !

@  K@  j,  AL
 !

  F

  A  Aث  
 
@@ AO@@@@Aܡ  A@ /  AڜF
 AF
 (  A߾G
A|!A!  AO
A!

A! A}! AF@A!

 , AJ
  A A  
 , AL
A! A~!

 , AJ
  A A  
  A A  
A!  AG
 /  AڜG@A!

A~!A!
   j"  j"
j!
 
!  !@@  @  Ak!  ,  ! Aj! A N



 
E
  ,  " A N@  Aq!  Aj

 - A?q!  Aq!  A_M@ At r!  Aj

 - A?q Atr!  ApI@  A
tr!  Aj

 AtA q - A?q Atrr!  Aj
!@  A F@A !	

  A F
A !	@  A0kA	K
A !@  A0k"
A
O@ @@  
F
 ,  " A N@  Aq!  Aj

 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr" A F
 Aj
! Ak"

-- Chunk 140 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:20851-21000
 

 	Aj!	  A G


 B
~"$B 
  
F $"  
j"  Ir
 ,  " A N@  Aq!  Aj

 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr!  Aj
!  A G
 



 
 k!



 AM

 /  AߤG
 , "AL
 Aj!
A~!

A! A !	 AG
 -  A F


 -  A G
 ! 
 , "AJ@ Aj!
A!  !

   A  A  
  A Aĥ  
A! A !	 AF
A  A
 , "AJ@ Aj!
A}!

  A A  
A !	 A kAqAK
   j!	A ! @@   	F
   
j!  Aj!  ,  A N
 
A !	

 A jB 7  B 7  	6  
6 AjA 
 - !@ ("E
  ("  /  Aj-  AtrAt r"O
   j-  A kAqAO
 (
! B 7   6
   6  6  6 AjA 
 - ! ("E
  (!  /  Aj-  AtrAt r!

 Aq!	
 ! 
A!A !
A !A !
A !


@@  E
    I@   j,  AJ


   G

   k!
   j!A !

     A  
@ 
E@A !


A.!A !
 -  A.G@ ! A !
A!

  
j! ! @ AtAuA H@  - A?q! Aq!
 Aq"AM@ 
At r!  Aj

  - A?q Atr! AI@  
A
tr!  Aj

 
AtA q  - A?q Atrr"A F
  Aj

 Aq!  Aj
! @ A!kAI A qA kAIr
 @ A:k'                           
 A kAM
 A! ! A !


   F
  -  !
 
 
A!
 ! 
  
6
  6   6  6  	6
  
6  6  
6  A j$ 

     Aȫ  
A A= A jAԥ A  
@ ( @  ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7 

 A6 
 A j$  (" AF
  A j Aj( 6  A j Aj) 7  A j Aj) 7   ) 7`
  )`7  Aj A j( 6  Aj A j) 7  Aj A j) 7   
6\  
6X   68
 Aj( " AG@  Aj) 7
   6 A0j A8j Aj (  Aj(  Aj(  A

-- Chunk 141 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21001-21150
j( !  (0" (
Aj6
  
  A,j"G
 

  A
j"G
 


  A  
 (
" AxF
   E
 (  AA 

 - AG
  (" ( !  Aj( "( "@   
 ("@   (
  A
A
A 

@ (
" AxG@  E
 (  AA

 - AG
  (" ( !  Aj( "( "@   
 ("@   (
  A
A
A
!  Aj$   

~# A k"$   (!
  ( ! A 6@ - E
  ( !	@@@ 
E@  A
jB7 A: d A 6` B 7X B 7P A6H A6< A6, A 6( A64 	Aj( !
 	Aj( !	  A j"
68  Aj"
60 
 	 A(j
 - AG
 ( !	 B
7  AjB 7 A: d A 6` B 7X B7P A6H A6< A6, A 6( A64 	Aj( !
 	Aj( !	  
68  
60 
 	 A(j


 	Aj( Aę A 	Aj( (
 
 - AG
  ( !	 B
7 A 6( B 7 A: d A 6` B 7X B7P A6H A6< A6, A64 	Aj( !
 	Aj( !	  A j68  Aj60 
 	 A(j

@@ ( AF
 @@ - Ak 
 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7H ( !  A jB 7  A: D A6@ B 78 A60 A6( A6
 A6
 A 6 A6 Aj( !	 Aj( !  A(j6  A j6 	  AjE


 A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7H ( !  A jB 7 A6, A 6( B74 Aj( !	 Aj( !  Aj60 	  A(j


 ( "Aj( A A	 Aj( (
 

 ( A A
  AG
 ( AF
  6  - AF@ ( ! B
7 A 6( B 7 A: d A 6` B 7X B7P A6H A6< A6, A64 Aj( ! Aj( !  A j68  Aj60   A(j

 ( "Aj( Aʙ A Aj( (
 
  (! (! A j Aj( 6   ( "6H  ) 7L   A j ( 
  ( ! B" A j7( A6L Aܙ 6H B7T Aj( ! Aj( !  A(j"6P   A j
  AG
  6 ( !   Aj7( A6L Aܙ 6H B7T Aj( ! Aj( !  6P   A jE

A

A ( "Aj( A A Aj( (
 

   
Aj6A 
! A j$  
i# Ak" $  ( @A !A	

  Aj ( (A   (  ("!A	  (
 
!   !  Aj$  
g # A0k" $ A -  @  A6
  AԖ 6  B7   6,    A,jB7     A j6  AjA  
  A0j$ 
+@  "E
  Ak-  AqE
  A   
 
# A k" $ @@A ( Aq@A ( 

A ( 
A ( !A A 6 A ( !A A6 A A 6 @ E
  ( "@   
 ("E
    (
  A j$ 
  A 6  A6
  A 6  B7  AjA  
 
~# A@j"$  ( AxF@ (
! A$j"A 6  B7
 A8j Aj) 7  A0j Aj) 7   ) 7( A
jA  A(j Aj ( "6   )
"7 Aj 6   7 
 ) ! B7  Aj" Aj"( 6  A 6 A -    7 A
A"@  ) 7  Aj ( 6   A 6   6  A@k$ 
AA
 
~# A0k"$  ( AxF@ (
! Aj"A 6  B7
 A(j Aj) 7  A j Aj) 7   ) 7 A
jA  Aj Aj ( "6   )
"7  Aj 6   7 
  A 6   6  A0j$ 
|# A k"$   ( AxG@   (  (

 Aj  (
" Aj) 7  Aj  Aj) 7    ) 7 ( ( Aj
!  A j$   
OA -   (! ( !AA"@  6  6   A 6   6 
AA 
   A 6   6 

    ) 7 
    (   (
# A k"$ A A ( "Aj6 @ A H
 A -  E@A A:  A A ( Aj6 A ( "A H
A  Aj6 A A (     (   : 
  : 
  6  ) 7A (  AjA ( ( A ( Ak 

-- Chunk 142 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21151-21300
6 A A :   E
 
 Aj   ( 
 


# A k"$ A !@@  ("  ("I
     k"
6    ( " j"	6 @@@@@ AF@ - ! -  "A0k"A
O@A A r"A k"  A kI"AO

 A0k"
A
O@A A r"A k"  A kI"
AO

 At 
r"AtAuA N
A ! Aq"AI
A!
 AI
 AI@A!
A!

A!
 AI


A A(A  
A!
 A6 A :  A ; 
  : 
  A
j6

  
6 A :  A ; 
  : 
  A
j6 
AI
   
Ak"6   	Aj6  	- ! 	-  "A0k"A
O@A A r"A k"  A kI"AK

 A0k"A
O@A A r"A k"  A kI"AK

  At r: 
 AqAI
  AI
   
Ak"6   	Aj6  	- ! 	- "A0k"A
O@A A r"A k"  A kI"AK

 A0k"A
O@A A r"A k"  A kI"AK

  At r:  
  AI
   
Ak6   	Aj6  	- ! 	- " A0k"A
O@A  A r"A k"    A kI"AK

 A0k"A
O@A A r"A k"    A kI"AK

  At r: 
 A0j A
j 
 (0
  (4!   (8"6   6   j!@ E
   ,  "A N@ Aq!  Aj

  - A?q! Aq! A_M@ At r!  Aj

  - A?q Atr! ApI@  A
tr!  Aj

 AtA q  - A?q Atrr!  Aj
 G
  A G

   k"AO@   

A !A  E
  Aq!@ AI@A !

 A|q!A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 @   j! @   ,  AJj!  Aj!  Ak"
 

 

!   A jB7@  AjB#78  AjB#70   6L A6
 A 6 B7$  A0j6  AjAȨ  
A !



 A j$  
A  
i# Ak"$   (!  ( !  Aj  @@   6
 Aj A
jA   Aj!  Ak"
 

 Aj!  Aj$   
(    ( -  At" A j(   A j( 
~# A k"$   ( " ( @ !
# A0k"$   (!  (!  ( !@@@@@@  "	F@A !

 E
 	 G! 	Aj! Ak! "-  ! A !@@@@@@  AtAuA H@  Aq!  j"Aj-  A?q!  Aq"AM@ At r! 

 Aj-  A?q Atr!  AI@   A
tr! 

 AtA q Aj-  A?q  Atrr" A G



  Aq! 
@@  A0kA	M@  F

  j"Aj,  " AJ
   k" A  A  
 @  j,  AL

 Aj! !A !@@@@@@@ "  
A! -  A+k
 -  A+F@ Aj!  A
I!  Ak"!  


  !  AK

A !@ -  A0k" A	K@A!

 Aj!   A
lj! Ak"
 


A !@  E
 -  A0k"A	K@A!

A! B

-- Chunk 143 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21301-21450
~"B 
 Aj!  Ak!   "
j" 
O
 

  :  A:  

  6 A :  
 - 
  ("k!
@ E
   k"  K@  j j",  AL
 ,  AJ
  j  A  A  
  
G

  j" !  j j! E  Gr
 
(
AqE
 -  A G
 AG@  Aj,  AL

  jAj! @A !   F
  ,  "A N@ Aq!  Aj

  - A?q!
 Aq! A_M@ At 
r!  Aj

  - A?q 
Atr!
 ApI@ 
 A
tr!  Aj

 AtA q  - A?q 
Atrr"A F
	  Aj
!  A0kA
I A rA kAIr
 


 Aj!


  A  A  
  - : A A+ AjAԤ A  
  j     A  
   A A  
@ 	E
  
A AE
  !

@@@ AI
  /  A G
   j" Aj",  AL
 Ak!
 
 k!@ !@@@@@@@@ "E
 @ -  A$k
 
 AF
 , AJ
  A A  
  j!	A ! ! @ !  " 	F
  ,  "A N@ Aq!  Aj

 - A?q! Aq!  A_M@  At r! Aj

 - A?q Atr! ApI@   A
tr! Aj

  AtA q - A?q Atrr! Aj
"   kj! A$k
          
 
 AF
 , AJ
  A Aԣ  
@@@ @@  O" E@  j,  AL
 
  E
A!

  F

  A  A  
 
  E
A!


 
  E
 A!


  E@  j,  AJ


  G


  j!  k!

  Ak" 6$ A 6    6
 A$6 A$6( A: ,  Aj"6 Aj Aj (E
@ (
"AG@ Aj!  AG


# A k" $   A 6  A6
  A 6  B7  AjA  
 ,  AJ



@ , " A N@  Aq

 - A?q"  Aq"Atr  A_M
  - A?q Atr" A
tr  ApI
  AtA q - A?q Atrr
A.G@A! 
A A
 , A@H


 
A A@A!

@ AO@ , A@H

 Aj! Ak!

  A A  
  A AĤ  
A! 
A A

 Aj! Ak!

@@@@@@@   I@   j,  A@H
 Aj! 


-- Chunk 144 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21451-21600
   G

 Aj" E

@   I@   j,  AJ



   G


   j!   k!@ 	 
 /  AӠF@A ! 

 /  A F@A ! 

 /  AҌF@A ! 

 /  ĄF@A ! 

 /  AǨF@A ! 

 /  A̠F@A ! 

 /  AҠG
 A ! 

 - A G
 AI
 , AL


A !  -  A G

A! 
  AE


  A A  
 -  A G

  j! Ak! Aj"	!@@A!
  F
 ,  " A N@  Aq!  Aj

 - A?q!
  Aq!
  A_M@ 
At 
r!  Aj

 - A?q 
Atr!
  ApI@ 
 
A
tr!  Aj

 
AtA q - A?q 
Atrr" A F
 Aj
!  A0kA
I  A kAIr
 
A !

 Aj!
 	!@@@@@@@ "  
 
A : 

 -  "A+k
 -  !
@@@ AqA+F@  Ak! Aj!  A	K@ ! 

 " 
A !

  AK
 

A !@@  E
 -  "
A0k"	A
O@A 
A r"	A k"
 
 	A kI"	AO

 B"B 
 Aj!  Ak!  	 "
j" 
O
 
 
A: 

 
A: 

A !@ -  "
A0k"	A
O@A 
A r"	A k"
 
 	A kI"	AO

 Aj! 	 Atj!  Ak" 
 

 
 6 
A :  

 
A:  
A:  

 
A:  
 - 
 
EA  ("   AsA kAI" A Fr
   6  A
tAxO@AAA  
  A I  A kA!Ir
 Aj 
E
 
A!

   A A  
 ! 
  E


 A0j$  

     A  
  A  A  
    Aģ  
AТ  


 A 6
  6 B 7   )7 AjA
!  A j$   

~# A k"$ @@@@@  ( "@    (

-- Chunk 145 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21601-21750
Aj"6
 AI
  ("@A!A A 

  A: 

  (" E
A A  !

@@@@@@@@@@@@  ("  ("I@A!   Aj"6@@@@@@@@@  j-  "A k                 
 
  ("E

A A E



   
 


 A0j"   - 0
  )8"
7  ( @    (0E
 A(j A8j) 7   )07   ("E
 A j 
  ("E 
Pr
 (
Aq
 A A
 Aj  (
  (A AE


  (" E@A !

A A  !

A !# A k"	$ @@@@~@@@  ( "@  ("  ("I@  j-  A F

    K! !@  I@  j-  A F

  F
@  j-  "
A0k"
AqA
I
  
A kAqAO@ 
A kAqAO
 
A
k!


 
A k!

   Aj"6 	 
B B> 	)B R
 	) "
 
B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!
  (!  (
Aj"AK
 E@A !

 	Aj"  Aj") 7    6
  
>  	  ) 7   AqA G!  ) 7    	)7 

A !
  ("E
A!A A 


 E
 A!A A 

   
: A !  A 6 
 	A j$  


  (! - 4"E
 E
A A 


  (! - 1"E

 E

A A 



@  O
    Aj6  j-  "A kAqAO@ A k!A ! AqAO

   @

@@@@@@@  ( E@A !  ("E

A A @A!


  ( E

 A0j"   - 0
  ( E
 )8!
    (0E
 A j A8j) 7   )07@ A G
 (D (LrE
  ("E
A A E
A!

  (" E
A A  !

  (" E@A !

A A  !

A   ("E
A A E
A!

-- Chunk 146 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21751-21900

  ("E
A! A@k E


  (
!@@ A k"@ AF
  60 E
A! A0j E


 E
A!A A E


 E
 A!A A 

  (! (D (LrE

 E
A!A A 
  ("E
 A@k 
  (!


  (! - 4"E
 E

A!A A 



  (! - 1"E
 E
A!A A 


  ("E
A A 


  O
  j-  A G
   Aj"6@@@  I@  j-  A F

    K!@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6 Aj 
B B> )B R
 )"
 B|"
 
Z
 


   Aj6

   Aj6 
B}X

  ("E
A!A A E


  ("E
A A E


  ("E
A!A A E


# Ak"$   (!  A 6@  A E@   6 Aj$ 

A A= AjAԥ Aة  

  ("@A!A A 

A!  

 A G@  ("@A A 

  A 

  ("E

A A E




A !  A :   A 6 


 E
 A!A A 


   : 

 E
 A!A A 
	
   : 

 E
A!A A 
  (!  
70 E
 A0j 
  ("E
Aަ A E


 E
 A A 

   : 

 E
 A A 

   : 
A !  A 6 

  ("@A A 

A !  ( "@@@  ("  (O
   j-  A G
    Aj6A 

@ E
   ("E
 A A E
 A

A  
 Ak!  ( "
 

-- Chunk 147 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:21901-22050

A 

  ("E
 A A 

A !  ( E
     (
Ak6

 A j$  
  A A
# Ak"$  A 6
@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A
!    (" k6    ( A G  Kr"6 A! E@  ( A
j !
 Aj$  
   A  
# Ak"$ @@@@@@@@@@@@ ( 
 A F

 AK


  A;
  B 7  A ; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

  A;
  B 7  A ; 

 E
  AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
I@ Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
A  
 @   6  A:  

 AjA :   A ; A :   AqA j-  :   AvAqA j-  : 
  AvAqA j-  : 
  A
vAqA j-  : 
  AvAqA j-  : 
  AvAqA j-  : 	 ArgAv"Ak"A
I@ Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
A  
 Aj$ 
  AϠ A
<# Ak"$    6
 A A
A A A
jA !  Aj$   
~@@@@@ ( E@ - 
  - 
"As: 
 (4! (0!@ ("E
   K@  j,  AJ


  G

@  G@  j",  "A N@ Aq

 - A?q! Aq! At r A_M
  - A?q Atr!  A
tr ApI
  AtA q - A?q Atrr
! 
   6  A6   A AI
 A AI
 AA AI
 j" 6   6
 E

   6   6  A 6 
 (
" (4"F
 (0!
 !@  (<"	Ak"j" O
  (8!  
j!  	j!
  ("
k! (" j! 	 k! )! ($"AF!
 ! !@  G
@@   
j1  AqE@  
6
A ! 
! 



 
 
   
I 
" 	  	K! !@@@@  F@A   
! 
!@  M@  
6
 AG@ A 6$
   
6   6  A 6 
 Ak" 	O
  j" O

-- Chunk 148 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22051-22200
  j-   
 j-  F
 
  6
 ! ! 
E


  j O
  j!  j! Aj! -   -  F
 
  j!A ! 
E


  A  
   j"    I A  
  	A  
  6$ !
  j" I
 
 !
A ! E
 !@@  I@  
j,  AL
 !

  G
  !

 Aj"
 


  A6 
   6   6  A6      I6

  A6 
  A6  A: 
    A  

# Ak"$ @ (" (
"I@

 ("
 I@

 Aj"
 - "jAk-  !	 (!
@@ AM@@  
j!@  k"AM@  F
A !@  j-   	F
  Aj"G
 


 Aj 	   ("AG
 (
!
   jAj"6
@  I  
Kr
  
  k"j 
 
    6   6A!

  M
 
A !

@@  
j!@  k"AO@  	   ( "AG
 (!

  F
A !@  j-   	F
 Aj" G
 


   jAj"6
  
M  Oq
  M
 
A !

 AA̡  
A !
  6

   6  Aj$ 
	~# Ak"
$  
A
jA A@  (
"E@   (   (!

  ( !
  ("-  !
@@  ("E
  
 j! 
A
j! 
! @  ,  "A N@ Aq!  Aj

  - A?q! Aq!	 A_M@ 	At r!  Aj

  - A?q Atr! ApI@  	A
tr!  Aj

 	AtA q  - A?q Atrr"A F
  Aj
!  AF
  6  Aj! Aj!   G
 

  j! Ak! At" Aj!
   
jAj! 
Ak!A!A ! !A!	@@ 
A k" AqAO@ 
A0kAqA	K
 
Ak! 
 Aj!@AAA$ k"A  A$M" AO A$O"  Aq"M@A$ k!A ! @  F
 -  "
A k"AqAO@ 
A0kAqA	K
 
Ak!
 " Aq"~"B 
  j" I
 AA   k"A    O" AO   M"O@ Aj!  A$j!  A$ k~"! ! B P



 Aj!

 !
  j"  I
 	   Aj"n" 	j"	K 	AsAkA Kr 	A F A Krr
@    lk" I@  kAq"@A ! ! @  Aj  ( 6   Ak!   Aj"G
 
  k!
  j kAI
  Atj! @  A
j  Aj) 7   Aj  ) 7   Ak!  Ak" K

-- Chunk 149 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22201-22350
 


 AO

 
A
j Atj 	6   G@ -  !
A ! @  n" n j"AI@ !

@  A$j!  A K! A#n"! 
 

 Aj!   A$lAq A&jAqnj! Aj! 
Aj!
 Aj!A! !


 
A
j! @ 
  ( 6 
Aj "
  Aj!  
Ak"

 


 AAĦ  
A! AԦ A	
  @  
 
 Aݦ A

   
  Aަ A!
 
Aj$  
~# A k"$    Aߦ A@ A j  (D"E
 
@  AG@ (H

 
"kAK@

B!  F
   j!  j!@ ,  "A N@ Aq! Aj

 - A?q! Aq! A_M@ At r! Aj

 - A?q Atr! ApI@  A
tr! Aj

 AtA q - A?q Atrr! Aj
!@ A0k"A
O@A A r"A k"  A kI"AO

  B!  F



A  
   7   7  A j$ 
 (" ("  K! ( !A! !@@@  F
  Aj"6 Aj!  j!	 ! 	-  "A0kAqA
I A kAqAIr
 
 A G
   Ak"K
@ @  I@  j,  A@H  Kr


  G
  M


  K

   6    j6 
  A 6   A : 
    A  
~# Ak"$  ( !@@@@@ (" ("I@  j-  A F

    K!@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
  Aj"6  	B B> )B R
 ) "
 B|"	 
Z
 


A!  Aj6 	BQ
   	B|7A !

  B 7  Aj6

 
  A : 

  A : A!
   :   Aj$ 
~# Ak"$   @@ (" ("I@ ( " j-  A F

  B 7

  Aj"6@@@  I@  j-  A F

    K!@@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
  Aj"6  	B B> )B R
 ) "
 B|"	 
Z



  Aj6 	BR

  A : A

  Aj6

 	B|"	BR
   A : A

   	B|7
A 
:   Aj$ 
~@ (" ("O
  (  j-  A G
 A!  Aj"6
@@  O

-- Chunk 150 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22351-22500
 ( " j-  A0k"Aq"A	K
  Aj"6 E@A !

    K! Aq!@  F
  j-  A0kAq"A	K
  Aj"6 B
~"
B P@  
"j" O




@  O
   j-  A G
   Aj"6
@@@@   j"M@  6  I
 E
  I




  j,  AL

 E  MrE@  j,  AL

  j! 
  B7   6   6 
    A  
A !A  k!  j"Ak!A !@@@  F@ !A

  j!	 Ak"! 	-  A G
 
  j!@@A  k F
   K@  j,  AJ


 
A ! As F

  Aj"K@  jAj,  AL
 !

 ! AG

  j!  k! 
! E@

   6
   6   6   6 
    Aȩ  
  A  A  
  A 6   A : 

~# A k"$ @@@@@@@@@@@@  ( "@  ("  (O
   Aj6  j-  "A k"Aq"AKA
 vAqEr
  (" 
A !


  (" E@A !


A A  !


 AqAt"A j(  A j(   !


    (
Aj"6
 AM@@@@@@@@@@@@@@@ A k









  

  ("@A!A A 
  ( "E

  ("  (O
  j-  A G
   Aj6 Aj   - 
 )"
PE


  ("@A!A A 

  (! A G
 E
A!A A E


  ("@A!A A 

A!  
 A F@  ("@A A 

  A

  ("E
A A E


  ("@A!A A 

 Aj!A !@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

A  
 Aj!  ( "
 

A 
!  6  6 A! (
 (
AF@  ("E
A A 

  ("E
A A E


  ("@A!A A 

A!A !# Ak"$ @  ( "@@  ("  ("O
   j-  A G
    Aj"6~@  I@  j-  A F

    K!	@@@@@  I@  j-  A F

  	F
  j-  "A0k"AqA
I

-- Chunk 151 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22501-22650
 A kAqAI
 A kAqAO
 A
k!

   Aj6 
B}V
 
B|

 A k!
   Aj"6  
B B> )B R
  ) "
 B|"
 
Z


  ("@A!A A 

A !  A :   A 6 

   Aj6B 
B|!

  ("E@A !@@  ("  (O
   j-  A G
    Aj6A !

@ E
   ("E
 Aª A E
 A!

  @A!

 Ak!  ( "
 
A !

@ 
P
 A!A A 
    (Aj6  B
B!
@ 
 
Q@  ("E
A A E


@ 
P
   ("E
 A A E
 A!

A!    (Aj6 
B|!
  BE
 


A   ( "E
 A !@@@  ("  (O
   j-  A G
    Aj6A 

@ E
   ("E
 Aª A 

  
 Ak!  ( "
 
A 

A
!    ( 
k6

  ("E
 A A !
 Aj$  
  ( "E
  ("  (O
  j-  A G
   Aj6 Aj   - 
 )"
P
  ("@Aª A 

   
E


A!A !# A k"$ @@@@~@@@  ( "@  ("  ("	I@  j-  A F

  	  	K!
 !@  	I@  j-  A F

  
F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!  (!  (
Aj"AK
 E@A !

 Aj"  Aj") 7    6
  
>    ) 7  !  ) 7    )7 

A !  ("E
A!A A 


 E
 A!A A 

   : A !  A 6 

-- Chunk 152 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22651-22800
 A j$  E


A!   

  ("E
A A E


A!A !# Ak"$ @@@@@  ( "@@  ("  ("O
   j-  A G
    Aj"6~@  I@  j-  A F

    K!	@@@@@  I@  j-  A F

  	F
  j-  "A0k"AqA
I
 A kAqAI
 A kAqAO
 A
k!

   Aj6 
B}V
 
B|

 A k!
   Aj"6  
B B> )B R
  ) "
 B|"
 
Z


  ("@A!A A 
	
A !  A :   A 6 

   Aj6B 
B|!

  ("E
 
PE


  ("


A!A A 
    (Aj6  B
B!
@ 
 
Q@  ("E
A A E


@ 
P
   ("E
 A A E
 A!

A!    (Aj6 
B|!
  BE
 


  !

A A !

  !    ( 
k6
 Aj$  


  (! - "E
 E

A!A A 



 E
 A!A A 

A!  E




  ("E
A A 



  (! - "E
 E
A A 



   6A!  A E
	


  ("@A!A A 

  A: 

  ("E
A!A A E


 E
 A A 

   : 

A !  A :   A 6 

 E
 A!A A 

   : 
A !  A 6 

@ A F
   ("E
 A!A A 

A!  

A !  ( E
     (
Ak6

 A j$  

~# A0k"	$ @@@@@  ( "
@  ("
  ("I
  ("E
A!A A E

-- Chunk 153 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22801-22950


  (" E
A A  !

   
Aj"6 
 
j-  !    (
Aj"6
@@@@@@@@@ AM@@@@@@@@@@@@@@@ A k9
              	 
 
             

 

  
   
 
  ("E
A!A A E


  ("E
A!A A E


  M
  
j-  A F


A!A !# A k"$ @@@@~@@@  ( "@  ("  ("I@  j-  A F

    K!
 !@  I@  j-  A F

  
F
@  j-  "
A0k"AqA
I
  
A kAqAO@ 
A kAqAO
 
A
k!

 
A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


  ("E
A A !

   Aj6 
BR


   Aj6B 

 
B|
!
 
 AkZ
 A!  (!  (
Aj"AK
 E@A !

 Aj"  Aj"
) 7    6
 
 
>    ) 7   AqA G! 
 ) 7    )7 

A !  ("E
A!A A 


 E
 A!A A 

   : A !  A 6 
 A j$  E


   
Aj6  ("E
A!Aݦ A E


 	A(j   	(("@ 	  	(,@@@ 	) AG
  	)"
BV
  
Ak


  ("E
A!A A 


  ("E
A!A A E


  ("E
A!A A E


  (! 	- ,"E
 E
A!A A 


 	A(j   	(("@ 	Aj  	(,@ 	(E
  	)"
BZ
  
"AsA kAI
  A G

  ("E
A!A A E


  (! 	- ,"E

 E

A!A A 



@ 
   ("E
 A!A A 

  ("@A!A A 

-- Chunk 154 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:22951-23100

A!  E


  M
   
j-  A F

@ 
   ("E
 A!A A 

  ("@A!A A 

 A F
  ("E
A!A A E


@ 
   ("E
 A!A A 

  ("@A!A A 

A!  
  ("E
A A E


@ 
   ("E
 A!A A 

  ("@A!A A 

 	A j!
A !@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

A  A
 Aj!  ( "
 

A 
! 
 6 
 6 A! 	( 
 	($AF@  ("E
A A 

  ("E
A A E


@ 
   ("E
 A!A A 

A!  A
@@@@  ( "@  ("  (O
   Aj6  j-  A k

  (" E@A !

A A  !

  ("E
A A E


  ("@A A 

  
  ("E
A A E


  ("@A A 

A !
# A0k"$ @@  ( "
E
 @@  ("  (O
   
j-  A G
    Aj6

@@@@@@@@ 
E
   ("E
 A A @A!


  ( "
E

  ("  ("O
  
j-  A G
   Aj"6@@@  K@  
j-  A F

    I!B !
@  K@  
j-  A F

  F
@  
j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  
B B> )B R
 ) "
 B|"
 
Z
 


   Aj6

   Aj6 
B}X

  ("@A A 

  A :   A 6 

  ("E
A!A A 


 Aj   (@ A(j Aj) 7   )7   ("@ A j 
A A 

A!  AE


-- Chunk 155 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23101-23250

  (! - "E
 E
A A E


A!

 E
 A A 

   :   A 6 

A!

 
Aj!
  ( "

 

A !
 A0j$  
  ("E
A A E


  ("E

A A E



A!   




  ("@A!A A 


  A: 

A!  (!# Ak"$ A  E
 A A'
  Aj!
@@@@ A"G@ A F@ A'

   -  AG
A!@@ AG@ - 
" - 
O
  Aj: 
  j-  !

A ! 
A 6  (! B 7 
  E
 


A ! A"E


 - 
" - 
"  K!@  F
  j! Aj!  -  E
 


A !


A
! Aj$  E



   
Aj6A!  E
	


A!  A
	
 
  ("E
Aަ A E


 E
 A!A A 

   : 

 E
 A!A A 

   : 
A !  A 6 

A !  A :   A 6 

A!   

A !  ( E
     (
Ak6

 	A0j$  
~# Ak"$ @  ("E@

A!A A 
  P@A A !

@   5"X@  }"BT
A A 
  7 Aj !

A A 
A !  A :   A 6 

  A j6 Aj !
 Aj$  
	# A k"$ @  ( "E
 @  ("  ("O
   j-  A G
 A!   Aj"6
@@@  I@  j-  A F

 E
A !

   Aj"6@@  M
   j-  A G
    Aj6A!A !

 A(j   (("@ (,"@ (4E

  ("@AA A 

  A :   A 6 A 

  (!@ - ,"@ E
AA A 


 E
 AA A 

-- Chunk 156 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23251-23400

   :   A 6 A 

 E

  ("@AAŪ A 

 E

  ("@AA̪ A 

 A;$  6  A 6
 A:  A 6  6 A 6
  6  6 A 6  A(j  ((E@@ - %
  A: %@ - $@ ( ! (
!

 ( " (
"F

 ( j!  k

AԪ  
 (
!  (06
  j! (, k
!@ @   

 A j A j) 7  A@k Aj) 7  A8j Aj) 7  A0j Aj) 7   ) 7(@ - M
  !@ (,! A j A(j (TE@ - M
 A: M@ - L@ (H! (D!

 (H" (D"F

 (, j!  k

 (D!  (\6D  j! (X k
!@ E@A !

Aݦ A 
  ("E@A !A !

   "

 - ME
 

 E
A A E

A

  ("@AA A 

@@@  ( "E@A !

A !@@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A

  
 Ak!  ( "
 
A !
  ("@AA A 
  ( !
 E
  ("  (O
  j-  A G
   Aj6A 

A

  ("@AA A 

  
! A j$  
# A k"$ A!@  "AqAF
 @@@  ( "E
   ("  (O
   j-  A G
    Aj6  (!@ AqE@ E
A!A A E


 E
 A!A A 

@@  ( E
     ( E
 Aj Aj) 7   ) 7@  ("E
 A! Aj 
  ("E
 A A 

A!  
@  ( "E
  ("  (O
  j-  A G
   Aj6  ("@A A @A!

  ( E

    ( E
 Aj Aj) 7   ) 7@  ("E
 A! Aj 
  ("E
 A A 

A!  E
 


  (" E
A A  !

  (!@ - "@ E
A!A A 


 E
 A!A A 

   : A !  A 6 

 AqE

  (" E
 A!A A  

A !
 A j$  
@  ( "E
 @@  ("  (O
   j-  A G
    Aj6

@ E
   ("E
 A A E
 A
A  A
 Ak!  ( "
 


-- Chunk 157 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23401-23550
A 

~# Ak"$ @  ( "E
   ("  ("O
   j"-  A F@   Aj"6  ~@  I@  j-  A F

    K!@@@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  B B> )B R
 ) "	 B|" 	Z



   Aj6 BR

  ("@AA A 

  A :   A 6 A 

 B|

   Aj6B 


 -  A G
    Aj6  A 

  
! Aj$  
~# A k"$ @@@  ( "E
   ("  ("O
   j"-  A F@   Aj"6@@@@@ ~@  I@  j-  A F

    K!@@  I@  j-  A F

  F
@  j-  "A0k"AqA
I
  A kAqAO@ A kAqAO
 A
k!

 A k!
   Aj"6  B B> )B R
 ) "	 B|" 	Z



   Aj6 BQ
 B|

   Aj6B 
"X
 A!  (!  (
Aj"AK
 E
 Aj"  Aj") 7    6
  >    ) 7  !  ) 7    )7 

A !  ("E
A A 


 E
A A E

A!

   :   A 6 
A !

 -  A G
    Aj6  A E
A!

AA   A !

@  ("E
 A A E
 A!

  ( "E@A!

A !@@@  ("  (O
   j-  A G
 A!   Aj6

@ E
   ("E
 A!A A 

  
 Ak!  ( "
 
A!

A!
 A j$  
# A0k"$ @@@@  ( "@  ("   ("  Kk! !@  jE
    jAj6 Aj!  j! Aj! -  "A0kAqA
I A kAqAIr
 
 A G
  jAk!@ @  I@  I
  j,  A@H


  O


  I

 Ak"AqE@ B 7   jAk"6  6   j"6
@ A
j"A I
 
 A F

  ("E
AA A 


A   (" E
A A  

A   (" E
A  A"
 B 7  6  6  6
 A
j"A G@ A(j!@@@@@ A G@ A'F
 A j  -  AG
A!@@ AG@ - *" - +O
  Aj: * A j j-  !

A ! A 6  ($! B 7 
   E
 


A A+ A jA A  
  A'E


-- Chunk 158 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23551-23700

 - *" - +"  K!@  F
 A j j! Aj!   -  E
 

A

 A
j"A G
 

  A"

  ("E
 AA A 

  A :   A 6 A 
! A0j$  
    A  
	# A k"$ @@@@@@@  ( "@  ("  ("  K!	A! !@  	F
   Aj"6 Aj!  j!
 ! 
-  "A0kAqA
I A kAqAIr
 
 A G
 Ak!@ @  I@  K
  j,  A@H


  M

	
  K

 Aj  j"  )
  (" 
A !

  (" E@

A A  !

A!A A  
    E


  (!   )7  E@A !

A! Aj  

A !  - 
Aq
 A k"Aq"AOA
 vAqEr
 AtAq"A j(  A j(   !

  ("@A!A A 

A !  A :   A 6 

A  
 A j$  
    A  
@    (" k6    ( A G  Kr"6 A!    (  

  Aܬ A
   A  
  A A
F   E@# A k" $   A 6  A6
  A 6  B7  AjA  
    
    A ( " A    
# A0k"$   6  6 A j Aj@@ ( "E@A !A!

 ($! (,E
 @@ E@A!

 A H
A -  A! A"E

A ! A 6  6  6
  K@ A
jA   (! (! (
!
  j     j"6  kAM@ A
j A (! (!
  j"A /  ";   AjA -  ":    Aj"6  )7 A j Aj ( "@@ (,! ($" (
 kK@ A
j   (!
 (" j     j"6 @ (
 kAM@ A
j A (! (!
  j" ;   Aj :    Aj"6
 A j Aj ( "
 

   )
7   Aj Aj( 6 

   
   6   6  Ax6 
 A0j$ 
# Ak"$ @@@@@ ("E
  ( ! Aq!@ AI@A !

 A
j! A|q!A !@ (  Ak(  Ak(  Ak(  jjjj! A j!  Aj"G
 

 @ At jAj!@ (  j! Aj! Ak"
 

 (
@ A H
 (E AIq
 At!
 

A!A !

A ! A H
A -  A! A"E

 A 6  6  6  A  E
A A  AjAЯ Aа  
   
   ) 7   Aj Aj( 6  Aj$ 


# A k"$ @@@@ E@A!


 A H
A -  A! A"
E
 AI
 @  
j"Aj(  " (  "rAxq
 
 
j"Aj A kAqAIAt r:    A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   Aj Av"A kAqAIAt r:   
Aj! 
Aj!
  O
 

  
6
  6  

-- Chunk 159 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23701-23850
6  
G@  j!  
j!A !@@@ ,  "A H@ - A?q! Aq!
 A_M@ 
At r! Aj

 - A?q Atr! ApI@  
A
tr! Aj

 
AtA q - A?q Atrr! Aj
"  kj!
 AG
@  
j"E
   K@  j,  AJ

	
  G

  j!A !	@@A!
  F
 Ak"-  "AtAu"
A H@ 
A?q Ak"-  "AtAu"
A@N@ Aq

 
A?q Ak"-  "AtAu"
AJ@ Aq

 
A?q Ak"-  AqAtr
Atr
Atr"A F

@ 	
  E
 A !A 

A
!	 ! A F
 
 E
 @ Aj"E
   K@  j,  AJ

	
  G

  j!A !@A!
  F
 ,  "A N@ Aq! Aj

 - A?q!	 Aq! A_M@ At 	r! Aj

 - A?q 	Atr!	 ApI@ 	 A
tr! Aj

 AtA q - A?q 	Atrr"A F
 Aj
!@ Aq
  E
 A !A 

A
! A F
 
AA !

 Aj 


 Aq! Aj"  kj!

 Aj!A !@@ AO@A
!
A
!@ 
Av j"
AtA j( "	 F
 
   	I" 
Aj   	K"k!
  I
 
 A 6  6 

 A 6  A kAqAIAt r6 

 AA  
AtA j( "AsA kAI"6 A   6 
 A 6@ ("E@ (!

 (
! Aj" (   E

 Aj 
 
! " G
 

   )7   Aj Aj( 6  A j$ 
   
    A  
  A  A  
# Ak"$ @@ AO@ A 6
 AI
 AI@  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  A?qAr:   AvA?qAr:   A
vA?qAr: 
  AvAqAr: 
A

  ("  ( F@  
   Aj6  ( j :  

  A?qAr: 
  AvAr: 
A
!   (   ("kK@      (!
  ( j A
j     j6
 Aj$ 
g (!@ ("E@A!

 A N@A -  A! A"

   
   !   6   6   6 
C   (   ("kK@      (!
  ( j      j6A 

    A 
# A k"$  Aj"  Aj) 7  Aj"  Aj) 7  A;
  6   ) 7 # A k" $  (!  Aj ) 7   Aj ) 7    6
   6   ) 7 A !# Ak"$   (
!@@@@  ( 
 
A!

 
   ( "(! ( !

 Ax6    6

-- Chunk 160 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:23851-24000
 A   (  (
" - 
  - 
 
  6  6  A   (  (
" - 
  - 
 
j~# A0k"$    6   6 A6
 A 6 B7 B" Aj7(   7   A j6 Aj  
j~# A0k"$   6   6  A6
 A 6 B7 B" 7(   Aj7   A j6 Aj  
j~# A0k"$    6   6 A6
 A 6 B7 B" Aj7(   7   A j6 Aj  
@  ( "	  ("r@@ E
   j!@  (
"E@ !

 !@ " F
 Aj ,  "A N
  Aj A`I
  Aj ApI
  Aj
" k j! Ak"
 

  F
  ,  @@ E
   K@A !  j,  AJ


A !  G

 !
   !   !
 	E
  (!@ AO@  !

 E@A !

 Aq!@ AI@A !A !

 A
q!A !A !@   j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
   j!@  ,  AJj! Aj! Ak"
 

@  I@  k!A !@@@  -  Ak 
 !A !

 Av! AjAv!
 Aj!  (!  (!  (! @ Ak"E
    (  E
 
A


A!     (
  A !@   F
 Aj!    (  E
 
 Ak
 I

  (    ((
 
  (    ((
 
B# A k"$  A 6 A6 B7  6
   6  Aj6    
:# A k" $   A 6  A6
  A 6  B7  AjA  
%    -  At" A j(   A j( 
   5 A 
# Ak"$ @@ (
"AqE@ A q
  5 A 

  ( ! A !@  jA j  Aq"A0r A j A
I:   Ak!  AI!  Av!  E
 


  ( ! A !@  jA j  Aq"A0r A7j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AA  
 AA A  jAjA  k

 Aj" AO@  AA  
 AA A  jAjA  k
!  Aj$   

# A0k"$  A: , A 6
 A 6(  6$   6  A 6 A 6
@@@ ("
E@ (
" E
 (!  At!  AkAqAj! ( ! @  Aj( "@ (   (   ($(
 

 (  A
j (  
 Aj!  Aj!  Ak"
 


 (" E
   At!
  AkA?qAj! (! ( ! @  Aj( "@ (   (   ($(
 

   
j"Aj( 6
  A
j-  : ,  Aj( 6( A
j( !A !	A !@@@ Aj( Ak 
 At j"
(
 
( !
A!
  6  6
 Aj( !@@@ ( Ak 
 At j"(
 ( !
A!	
  6  	6  Aj( Atj"(  A
j (  
  Aj!  
 A j"G
 

  (O
 (  (  Atj" (   ( ($(
 E

A

A 
! A0j$  
;A!@   
  (Aٵ A ((
 
   Aj !
 
# Ak"$ @@@@@@@@@@@@@@ ( 

-- Chunk 161 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24001-24150
 A F

 AqE AIr
 E
 AjA :   A ; A :   AqA۵ j-  :   AvAqA۵ j-  : 
  AvAqA۵ j-  : 
  A
vAqA۵ j-  : 
  AvAqA۵ j-  : 
  AvAqA۵ j-  : 	 ArgAv"Ak"A
O
 Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 



  A;
  B 7  A; 


  A;
  B 7  A; 
	
  A;
  B 7  A; 

  A;
  B 7  Aܸ; 

  A;
  B 7  A ; 

 AqE
  A;
  B 7  A ; 

 Aq

 @   6  A:  

 AjA :   A ; A :   AqA۵ j-  :   AvAqA۵ j-  : 
  AvAqA۵ j-  : 
  A
vAqA۵ j-  : 
  AvAqA۵ j-  : 
  AvAqA۵ j-  : 	 ArgAv"Ak"A
O
 Aj jA :    jAjA;     )7    Aj Aj/ ;    A
: 
   : 


 A
A  
 A
A  
  A;
  B 7  A ; 
 Aj$ 
  A
t!A!!A!!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ A M@ At"A j"( Av!A!@ A F
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 A!A  
 AA  
 @  A I
 @A  A I
   AI
@  AO@  A
kAк+I  A˦
kAIr
  A
kA
I  A
kAIr
  A
kAI  A
kAIr
  A~qA
F
  A`qA
G


  A A,A AA A
A   A
kAI
   A kAtI

  A A(A AA A
A 
~@ E
  Ak"A   O! AjA|q k!A !@@@@  j-  "AtAu"A N@  kAq
  O
@  j"Aj(  ( rAxq
 Aj" I
 


B !
B!	@@~@@@@@@@@@ A j-  Ak 

 Aj" I
B !
B !	
	
B !
 Aj" I
B !	

B !
 Aj" I
B !	

  j,  AJ


  j,  !@@ Ak"@ A
F@


 
 A`qAF


 AJ


 AjAqA
O@ A~qAnG
 A@H


 A@H

-- Chunk 162 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24151-24300


  j,  !@@@@ Ak    
 AjAqAK A@Nr


 A jAqA0O


 AJ

  Aj"M@B !	

  j,  AJ
B !	 Aj" O
  j,  AL
B 

B 

B !	 Aj" O
  j,  AL

B 
!
B!	
   
  	7  A6 
 Aj!

 Aj!

  M
 @  j,  A H
  Aj"G
 


  K
 

   6   6  A 6 
~# A@j"$ A!@  - 
   - !	  ( "(
"AqE@ (Aø A  	AA 	 ((
 
 (   ((
 
 (A A ((
 
   (
  !

 	E@ (AŸ A ((
 
 (
!
 A:   )7
 A 64  Aj6  )7$ ) !
  68  (6,  -  : <  
7
  A
j"60   
  A A
   A
j (
  
  (0Aȸ A (4(
 !
  A:    :  A@k$   
   1  A 
|# A@j"$   6
   6  6  6 A6
 A 6 B7$  AjB%78  AjB%70  A0j6  Aj  
j~# A0k"$    6   6 A6
 Aļ 6 B7 B" Aj7(   7   A j6 Aj  
 A A+   
[# A0k"$   6
   6 A6 A 6 B7
  AjB%7(  A(j6 Aj  
    (   (
# Ak"$   ( ! @  jA j  Aq"A0r A j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AA  
 AA A  jAjA  k!  Aj$   
# A k"$   6
   6  6  6 A 6 A6
@ ( E@ A6\ A 6X B7d  AjB%7H  AjB%7@

 A0j Aj) 7  A(j Aj) 7   ) 7  A6\ A 6X B7d  AjB%7P  AjB%7H  A jB&7@
  AjB%78  A8j6` A j  
  ( (  

 Ak!
  (!
  ( !
  (!
@@@  I
 @  j!@@@  k"AM@  G
 !

@ AjA|q" k"@A ! @   j-  A
F
   Aj" G
 
  Ak" M


 Ak! 
@ Aj( "	A sAk 	Asq ( "	A sAk 	AsqrAxq
 Aj! Aj"  M
 


A ! @   j-  A
F
   Aj" G
 
 !

  F@ !

@  j-  A
F@ ! 

  Aj"G
 
 !

   j"Aj!@  M
    j-  A
G
 A ! ! ! 

  O
 

A! "  "G
 A 
@ 
-  E
  
A A 
(
 E
 A
A !   G@   
j-  A
F!

-- Chunk 163 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24301-24450
   k!   j! 
 :   ! 
    
(
 "  rE
 
  
O  (!  ( !@  (" -  E
  A A (
 E
 A
   A
F:     (  
~# A@j"$ A!@  - 
   - !@  ( "(
"AqE@ E
A! (Aø A ((
 E


 E@A! (AѸ A ((
 
 (
!
A! A:   )7
 A 64  Aj6  )7$ ) !  68  (6,  -  : <  7
  A
j60  A
j (
  
 (0Aȸ A (4(
 !

   (
  !
  A:    :  A@k$ 
/A!  -    ( " (AҸ A  ((
 

~ ( "AK@@  BZ@  Ak"6   j"    B" B~}"B郱AtA j/  ;   A
j B "	B AtA j/  ;   A
j B B AtA j/  ;   Aj B=B AtA j/  ;   Aj B/A pAtA j/  ;   Aj Bȯ%A pAtA j/  ;   Aj B
AqA pAtA j/  ;    	B ~}! Aj

  B/T
  Ak"j"    B/" B/~}"A=nAtA j/  ;   Aj A n"A pAtA j/  ;   Aj A nAqA pAtA j/  ;    A lk! Aj
 AtA j/  ;  
@  "A I@ !

  Ak"j  A n"A lk"AqA n"AtA j/  ;    jAk  A lkAqAtA j/  ;  
@ Aq"A I@ !

  Ak"j  A n"A lkAqAtA j/  ;  
 Aq"A
O@  Ak"j AtA j/  ;    6 
  Ak"j A0r:    6 
Aʺ A
A  
~  ) !  Aj) !# Ak" $   A'6  Aj~ B Z@  A0j B B̕  A j B Bɇ   A j B B̕  A@k B Bɇ   A j)   A(j)   A8j) "  ) |" T|"  )@|" T|   A j)    )P| T||" T|"B>! B B>

 B- BB
" Bష   ) |  A j"  Aj" AAA   ("  P
   A jA0 Ak  A6   B- B"B" Bష   )  |    (" BT
   A jA0 Ak   A0r: eA 
"  A jjA' k!  Aj$  
 E@  (
!A-!
 Aj

A+A   (
"Aq"!
  j
!@ AqE@A !

@ AO@  !

 E@A !

 Aq!	@ AI@A !

 A
q!
A !@   j"
,  AJj 
Aj,  AJj 
Aj,  AJj 
Aj,  AJj! 
 Aj"G
 

 	E
   j!@  ,  AJj! Aj! 	Ak"	
 

  j!
@@  ( E@A!  ("  ("  
  


   ("O@A!  ("  ("  
  


 Aq@  (!
  A06  -  !
A!  A:    ("  ("	 
  
  kAj!@@ Ak"E
 A0 	(  E
 
A
A!    	(
 
   
:     
6A !

  k!@@@  -  "Ak  
 !A !

 Av! AjAv!
 Aj!  (!  (!  (! @@ Ak"E
    (  E
 
A
A!    
  
      (
 
 A !@  F@A 
 Aj!    (  E
 
 Ak I
 
     (
 
   A  
@@   AjA|q"  k"I
   k"AI
  Aq!A !@   F"	
 @   k"A|K@A !

A !@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj! Aj"
 

 	
    j!@  ,  AJj! Aj! Aj"
 

   j!@ E

-- Chunk 164 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24451-24600
   A|qj" ,  AJ! AF
    , AJj! AF
    , AJj!
 Av!  j!@ !  E
A  AO"Aq! At!A ! AO@   Aqj!	  !@ ( "AsAv AvrAq j ("AsAv AvrAqj ("AsAv AvrAqj (
"AsAv AvrAqj! Aj" 	G
 

  k!   j! AvAq AqjAlAv j! E
 
   AqAtj" ( "AsAv AvrAq" AF
    ("AsAv AvrAqj" AF
   (" AsAv  AvrAq j
"AvA
q AqjAlAv j
 E@A 
 Aq!@ AI@

 A|q!@    j",  AJj Aj,  AJj Aj,  AJj Aj,  AJj!  Aj"G
 

 E
    j!@  ,  AJj! Aj! Ak"
 

 
9 @ A G@A    (  

 
A 

     (
 
   (    ((
 
# Ak"$   (    ((
 ! A : 
  : 
   6 Aj    ! - 
! A G - 
E
 A 
  ( " - 
AqE@  (A˸ A  ((
 

  (Aʸ A  ((
 
!  Aj$   
# Ak"
$   (    ((
 ! 
A : 
 
 : 
 
  6 
Aj       	 
! 
- 
! A G 
- 
E
 A 
  ( " - 
AqE@  (A˸ A  ((
 

  (Aʸ A  ((
 
!  
Aj$   
# Ak"$   (    ((
 ! A : 
  : 
   6 Aj       	 
 
A	 
 
!  - 
"A G - 
E
 A 
   ( " - 
AqE@  (A˸ A  ((
 

  (Aʸ A  ((
 
!  Aj$   
~# Ak"$    (    ((
 : 
   6  E: 
 A 6# A@j" $  Aj"( ! A - 
  ("(
"AqE@A (Aø A͸  AA  ((
 
   (
  

 E@A (Aθ A ((
 
 (
!
  A:    )7
  A 64    Aj6   )7$ ) !   68   (6,   -  : <   7
    A
j60A   A
j (
  
   (0Aȸ A  (4(
 
:   Aj6   A@k$  - 
" A G ( "E
 A  
  (! @ AG
  - 
E
   - 
Aq
 A  (Aи A  ((
 

  (Aص A  ((
 
!  Aj$   
2 (A A ((
 !  A :    :    6 
   (   ((  
# Ak"$ A!
@ ("	A" ("
("  
 @ E@A !

A  k!  ! !@@@@  j!A !@@  j"
-  "A kAqAI A"Fr A Fr
  Aj"G
 
  j

 
Aj!@ 
,  "
A N@ 
Aq!

 -  A?q! 
Aq! 
Aj! 
A_M@ At r!

-- Chunk 165 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24601-24750

 -  A?q Atr! 
Aj! 
ApI@  A
tr!

 AtA q -  A?q Atrr! 
Aj!
 Aj A@@ - AF
  -  - kAqAF
    j"K
@ E
   K@   j,  AJ


  G

@ E
   K@   j j,  AL


  j

 	   j  k j 
(
" 
@ - AF@ 	 (   E


 	 - " Ajj -  k  

A AI
 A AI
 AA AI
 j j!
A AI
 A AI
 AA AI
 j" j!  k"E





     A  
  j
" I
 A !@ E
   K@ "  j,  AL


 " G

 E@A !

  K@ !   j,  AJ


 !  F

     A  
 	   j  k 
(
 
  	A"   !

 Aj$  

# A k"$   6
  6@@ AO@  A  , AJ
 A  , AJ
   , AJ
Aj"j,  AL
  6   6A!A !

  6   6A!

   A    
  6
  6@@@@@  I"  IrE@  K
 E  MrE@ A
j Aj   j,  AJ( !
  6   "I@ Aj" Ak"A   M"I
@  F
    j   j"k!   j"	,  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  	Ak",  AJ@ Ak!

  F
  Ak!
  j!
@ E
   K@   j,  AJ


  G

  F
@@   j",  " A H@ - A?q!  Aq!  A_K
 At r!

   Aq6$A

 - A?q Atr!  ApI@  A
tr!

 AtA q - A?q Atrr"A F

  6$A AI
 A AI
 AA AI
!   6(    j6, A64 A 60 B7<  AjB%7h  AjB%7`  A(jB&7X  A$jB
7P  A jB7H

    6( A64 A 60 B7<  AjB%7X  AjB%7P  A(jB7H

 A64 A 60 B7<  AjB%7`  AjB%7X  A
jB7P  AjB7H

  A  
  
       
  A j68 A0j  

     
# Ak"$ A!@ ("A' ("("  
  Aj  ( A@ - AF@  (   E


  - "  Ajj -   k (
 

 A'   !
 Aj$  
# Ak"$   ( !  (  (r@ A 6
  A
j@@  AO@  AI
  AO
   A?qAr:    A
vAr: 
   AvA?qAr: 
A


-- Chunk 166 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24751-24900
   : 
A

   A?qAr: 
   AvAr: 
A

   A?qAr:    AvAr: 
   AvA?qAr:    A
vA?qAr: 
A


 (   ((  
! Aj$  
@@@@ AjA|q" F
   k"   K"E
 A ! Aq!A!@  j-   F
  Aj"G
 
  Ak"K


 Ak!A !
 AqAl!@  j"Aj(  s"Ak Asq (  s"Ak AsqrAxq
 Aj" M
 

  G@ Aq!A!@   j-  F@ !

  Aj"G
 

A !
   6   6 
# A0k"$   - @   - :  A6
 A 6 B7$   B7  AjB7  Aj6  ( ( Aj

 A6
 A 6 B7$   B7  Aj6  ( ( Aj
!  A0j$   


~ E@  A 6<   68   64   60  A :   A;
   6  B 7 
A!
@@@@@@@@@@ AF@A!	

A!A!@  
j" O
 !
@  j-  "  j-  "I@  jAj" 
k!
A !

  G@A!
 
Aj!A ! 
!


A  Aj"  
F"! A   
j!
  j" I
 
A!A !A!A !A!	@  j"
 O
 !
@  j-  "  
j-  "
K@  jAj" k!	A !

  
G@A!	 
Aj!A ! 
!

A  Aj"  	F"! A   
j!
  j" I
 
 
!
     K""
I
 
 	 " 
j" I
  I
   j 
@ 
  
k"K!
 Aq!@ AkAI@A !

 A|q!
A !@B  j"Aj1  B 1   B Aj1  B Aj1  ! 
 Aj"G
 

 @  j!@B 1   ! Aj! Ak"
 

 
  
Aj!A!
 
!
A

A!A !A!A !
@  "
 j"
K@  k Asj" O
 As j 
k"	 O
	@  j-  "  	j-  "	I@ 
Aj" 
k!A !

  	G@ 
Aj!A !A! 
!


A  Aj"  F"	! A  	 
j!
  G


A!A !A!A !	@  "
 j"K@  k Asj" O
 As j 	k"
 O

@  j-  "  
j-  "
K@ Aj" 	k!A !

  
G@ 
Aj!A !A! 
!	

A  Aj"  F"
! A  
 
j!
  G

-- Chunk 167 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:24901-25050


  
 	 	 
Ik!
@ E@A !A !


 Aq!A !
@ AI@A !

 A|q!	A !@B  j"Aj1  B 1   B Aj1  B Aj1  ! 	 Aj"G
 

 E
   j!@B 1   ! Aj! Ak"
 

 
!   6<   68   64   60   6(   
6$   6   A 6
   6   
6   
6   7  A6 
  A  
 
 A  
 
 A  
  A  
  A  
  A  
 	 A  
  A  
 
 A  
 ("@ ( !@@ Aj!   j-  "AtAu"	A N
 @@@@@@@@@@@ A j-  Ak 

A   j  O-  AqAG

 Aj


A   j  O,  ! Ak"E
 A
F


A   j  O,  ! Ak
 A`qAG


 AJ


 	AjAqA
O@ 	A~qAnG A@Nr


 A@N


 	AjAqAK A@Nr


 A jAqA0O


 AJ

A   Aj"j  O-  AqAG
A   Aj"j  O-  AqAG
 Aj

A   Aj"j  O-  AqAG
 Aj
"" I


   6   6    k6   j6     k6
    j6
  A 6 
   ) A 
A!	@@ E
   Atj!
  AqAv!
  Aq!
@ Aj!
  - "j! 
 -  "G@  
K
 ! 
" 
F


@@  M@  I
  j!@ E
 Ak! -  ! Aj!  
G
 
A !	

  A  
  A  
 ! 
" 
G
 

 E
   j!  Aq!@ Aj! @ -  "AtAu"A N@  !

   G@ -  A qAtr! Aj!

A  
  k"A H
 	As!	  G
 

 	Aq
# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Ak!  "Av! AO
 
  Aj"AO@ AA  
 AA A   jAjA   k!  Aj$   
7# A k"$  A 6 A6
 A 6 B7 Aj   
7# A k"$  A 6 A6
 A 6 B7 Aj   
7# A k"$  A 6 A6
 A 6 B7 Aj   
:# A k" $   A 6  A6
  A 6  B7  AjA  
~# A0k"$ A'!@  B T@  !

@ A	j j"Ak    B "B ~}"AqA n"AtA j/  ;   Ak  A lkAqAtA j/  ;   Ak!  B/V! !  
 

 "A K@ Ak" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
O@ Ak" A	jj AtA j/  ;  

 Ak" A	jj A0r:  
  AA  A	j jA' k! A0j$  
# Ak"$   ( ! @  jA j  Aq"A0r A7j A
I:   Ak!  AI!  Av!  E
 
 Aj" AO@  AA  

-- Chunk 168 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25051-25200
 AA A  jAjA  k!  Aj$   
~# Ak"$   ) !A ! @   jA j Aq"A0r A j A
I:    Ak!  BT! B! E
 
  Aj"AO@ AA  
 AA A   jAjA   k!  Aj$   
$  ( "   Au"s k  AsAv 
  A
t!A#!A#!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ A"M@ At"A j"( Av!A!@ A"F
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 A#A  
 AA  
  A
t!A!A!@@  Av j"AtA j( A
t"G@    I" Aj   K"k!  I



 Aj!
@ AM@ At"A j"( Av!A!@ AF
  Aj( Av! 
 A 

 A j( A q
!@  AsjE
    k!A  AM! Ak! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 AA  
 AA  
 !@ AI@  !

  A   kAq"j! @  !@  :   Aj" I
 

   k"A|q"j! A J@ AqAl!@  6  Aj" I
 

 Aq!
 @  j!@  :   Aj" I
 

  
h~   B" B"~"  B "~"  B "~|"B |"7     T  ~  TB  B ||  ~|7
@@ "   kK@  j"!   j!   AI
 A|q!A  Aq"k! @ Ak!@ Ak" -  :   Ak!  K
 

   k"A|q"k!  j"Aq@ A L
 At"Aq! A|q"	Ak!A  kAq!
 	( !@ Ak"  
t ( " vr6  Ak!  I
 


 A L
  jAk!@ Ak" ( 6  Ak!  I
 


@ AI@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq@ A L
 At"Aq! A|q"	Aj!A  kAq!
 	( !@   v ( " 
tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 E
  j!@  -  :   Aj! Aj" I
 


 Aq"E
  k!  k
! Ak!@ Ak" -  :   Ak!  K
 

  
C@ E
 @  -  " -  "F@  Aj!  Aj! Ak"



  k!
 
@ "AI@  !

  A   kAq"j! @  ! !@  -  :   Aj! Aj" I
 

   k"A|q"j!@  j"Aq@ A L
 At"Aq!	 A|q"Aj!A  kAq! ( !@   	v ( " tr6  Aj! Aj" I
 


 A L
  !@  ( 6  Aj! Aj" I
 

 Aq!  j!
 @  j!@  -  :   Aj! Aj" I
 

  

ɶ" A 
denomamountblocktransactioncontractheighttimechain_idsenderfundsaddressindextype_urlvalue/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs Y  b   9  
   Y  b        ruealse Y  b   a     ulltransaction_hashidpubkeysignatureaudsubtokenurlcredentialpasskeymsgstx_bytescred_bytessimulateauthenticatoradd_authenticatordataCosmosMsgbankcustomstargatetype_urlvalueanyibcwasmgovWeightedVoteOptionoptionweightAnyMsgGovMsgvoteproposal_idvote_weightedoptions           BankMsgsendto_addressamountburnWasmMsgexecutecontract_addrmsgfundsinstantiateadmincode_idlabelinstantiate2saltmigratenew_code_idupdate_adminclear_adminVoteOptionyesnoabstainno_with_veto      (         called `Result::unwrap()` on an `Err` value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/exports.rs  `          `       A 
               	   
 A 
=   
   
   
                                     A 

         
      
   
   
 A 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  _ K   

-- Chunk 169 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25201-25350
      `          `          `   .     Responsemessagesattributeseventsdata/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sec1-0.7.3/src/point.rs   V   k          8          invalid tag  V      %   Error             !   Asn1Crypto            "   Pkcs8PointEncodingVersioninvalid base64:        #         $             %   VerificationErrsourcebacktrace  &         '   RecoverPubkeyErr   
      (   GenericErrmsgInvalidBase64            )   InvalidDataSizeexpectedactualInvalidHexInvalidUtf8NotFoundkindParseErrtarget_typeSerializeErrsource_type          *   Overflow           +   DivideByZero          ,   ConversionOverflow            -   OverflowErroroperationDivideByZeroError           .             /   ConversionOverflowError           0   AggregationBatchErrInvalidHashFormatInvalidSignatureFormatInvalidPubkeyFormatInvalidRecoveryParamInvalidPointUnknownHashFunction          1   PairingEquality           2   UnknownErrerror_codecontracts/account/src/auth/eth_crypto.rs (   .   #   Ethereum Signed Message:
/xion.v1.Query/WebAuthNVerifyRegister ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_>456789:;<= 	



?


 !"#$%&'()*+,-./0123/xion.v1.Query/WebAuthNVerifyAuthenticateIbcMsgtransferchannel_idto_addressamounttimeoutmemosend_packetdataclose_channelIbcTimeoutblocktimestampIbcTimeoutBlockrevisionheight/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/path.rs  V
 `   )   
   V
 `   ,   !   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/errors/std_error.rs   
 i         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/subtle-2.6.1/src/lib.rs U
 V     	    Aԛ 
(   ߽)bߜؐ0x.! 4H
0 A 
 A 
 A 
 A 
/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/generic-array-0.14.7/src/lib.rsWasmQuerysmartcontract_addrmsgrawkeycontract_infocode_infocode_id  A̞ 
    Slice must be the same length as the array   ^   \      ^   <  	   InvalidEncodingInvalidLength/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/ripemd-0.1.3/src/lib.rs   V         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sha2-0.10.8/src/core_api.rs  0 Z   $   	   0 Z   >   6   0 Z   >      U
 V   
         g	jgrn<:ORQhك[@       #EgܺvT2           5   6   7          /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/xion-cosmos-sdk-proto-0.26.1/src/prost/xion/xion.v1.rs   , u   D   
   QueryWebAuthNVerifyRegisterResponsecredential   , u   d   
   IbcQueryport_idlist_channelschannelchannel_idokerrorinvalid $t '' - ( 
   4    =   
      >   ?   
 A 
   @   a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs   K   
               A             B   Errorinvalid tag value: 0invalid key value: =    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.5/src/encoding.rs X [        X [   `     invalid varint/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.5/src/encoding/varint.rs b   Y       b   _       b   e       b   s       b   y       b          b                   C   Base64CharacterEncodingEncapsulatedTextHeaderDisallowedLabelLengthPreamblePreEncapsulationBoundaryPostEncapsulationBoundary           /   UnexpectedTypeLabelexpectedcalled `Result::unwrap()` on an `Err` value/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs V     2   D         E             %   VerificationErrsourcebacktrace  F         G   RecoverPubkeyErr=   
      H   GenericErrmsgInvalidBase64            I   InvalidDataSizeactualInvalidHexInvalidUtf8NotFoundkindParseErrtarget_typeSerializeErrsource_type          J   Overflow           K   DivideByZero          L   ConversionOverflow            -   OverflowErroroperationDivideByZeroErrorinvalid wire type value:               .   ConversionOverflowError           0   AggregationBatchErrInvalidHashFormatInvalidSignatureFormatInvalidPubkeyFormatInvalidRecoveryParamInvalidPointUnknownHashFunction          1   PairingEquality           M   UnknownErrerror_codexion ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123{"account_number":"0","chain_id":"","fee":{"amount":[],"gas":"0"},"memo":"","msgs":[{"type":"sign/MsgSignData","value":{"data":"","signer":""}}],"sequence":"0"}     k 
   w    authenticators         N   (      O   contracts/account/src/query.rs   
       A 

   P   Q   R A 
   S   T   U   error rebuilding keysignature is invalidsignature is invalid. expected: , received  X     x 
   signature is emptyshort signatureonly the contract itself can call this methodrecovery id can only be one of 0, 1, 27, 28the pubkey recovered from the signature does not matchcannot delete the last authenticatorinvalid time on signature. current:  received:   g
 $   
 
   invalid jwt audinvalid tokenurl parse error:    
    cannot override existing authenticator at index 
 0   emit data too largeinvalid ethereum addressauthenticator  not found C
    Q
 
   SubMsgidpayloadmsggas_limitreply_onReplyOnalwayserrorsuccessnever       ,      W             X   ErrorkindpositionAlgorithmParametersMissing           !   Asn1KeyMalformed          Y   OidUnknownoid             Z   LengthParametersMalformed             [   PublicKeyDateTimeFailedFileNotFound           \             ]   Incompleteexpected_lenactual_len          ^   IoIndefiniteLength            _   tagNoncanonicalOidMalformedSetDuplicateSetOrderingOverflowOverlength          `   PemPermissionDeniedReaderTagModeUnknownTagNumberInvalid           a   TagUnexpectedexpectedactual           B   TagUnknownbyteTrailingDatadecodedremaining            b   Utf8Valueinvalid varintcannot advance past `remaining`:  <= +  !   L     /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/bytes.rs`  X     	   NoneSome/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs    V   ,  
   ()/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/bytes_mut.rs  :! \   R     :! \   \     invalid tag value: 0invalid key value:  !    recursion limit reachedunexpected end group tagbuffer underflowinvalid varint/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.5/src/encoding/varint.rs 5" b   Y      5" b   _      5" b   e      5" b   s      5" b   y      5" b         5" b                   c             d   Utf8Errorvalid_up_toerror_len A 
   e   called `Result::unwrap()` on an `Err` value   V     %   :! \        :! \        invalid wire type value:    #    /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/slice/iter.rs  # N      A 

   f   g   h A 
   i   j   k   PageRequestkeylimitreverseCoindenomamount   $    $    ߽)bߜؐ0x.! 4H
0/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/iterator.rs$ X         Errorbuffer underflowinvalid varint/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.5/src/encoding/varint.rs   O% b   Y      O% b   _      O% b   e      O% b   s      O% b   y      O% b         O% b         invalid wire type:  (expected ) $&    7& 
   B&    NotFoundPermissionDeniedConnectionRefusedConnectionResetHostUnreachableNetworkUnreachableConnectionAbortedNotConnectedAddrInUseAddrNotAvailableNetworkDownBrokenPipeAlreadyExistsWouldBlockNotADirectoryIsADirectoryDirectoryNotEmptyReadOnlyFilesystemFilesystemLoopStaleNetworkFileHandleInvalidInputInvalidDataTimedOutWriteZeroStorageFullNotSeekableFilesystemQuotaExceededFileTooLargeResourceBusyExecutableFileBusyDeadlockCrossesDevicesTooManyLinksInvalidFilenameArgumentListTooLongInterruptedUnsupportedUnexpectedEofOutOfMemoryOtherUncategorizedusize overflow when calculating b64 length/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/encode.rs  ( Z   W   
   ( Z   P   3   VarintSixtyFourBitLengthDelimitedStartGroupEndGroupThirtyTwoBit m   
      n   o   
   create_abstract_accountcontract_addressauthenticatorauthenticator_id           p   a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  * K   
     authenticators     `*    methodbefore_txafter_txadd_auth_methodremove_auth_methodaccount_emitaddress                      
   	      
   
   
   
   
   
               
   
      	   
   
      
   
            
         
   
   
   
      
   \& d& t& & & & & & & & & &  ' 
' ' $' 0' A' S' a' w' ' ' ' ' ' ' ' ' ' ' ' 
( ( '( :( E( P( ]( h( m(    
      
      
    ) &) 2) A) K) S) /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/xion-cosmos-sdk-proto-0.26.1/src/prost/xion/xion.jwk.v1.rs   @, y      
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_json-1.0.140/src/ser.rs, \   L  3   , \   ?  @   internal error: entered unreachable code, \   
     \"\\\b\f\n\r\t/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs   - [   2   	   BankQuerysupplydenombalanceaddressall_balancesdenom_metadataall_denom_metadatapaginationblocktransactioncontractheighttimechain_idsenderfundsTransactionInfoindex   .    00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/prost-0.13.5/src/encoding.rs p/ [   `     GrpcQuerypathdataQueryRequestbankcustomdistributionstargateibcwasmgrpc/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/errors/std_error.rs "0 i         "0 i         EventtypeattributesAttributekeyvalue/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/prefix.rs  0 b   <   
   q         r   s   t   u   ContractVersioncontractversioncontract_info    ~1 
   v   
      w   x   
 A 
   y   a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  1 K   
     Error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/hex-0.4.3/src/lib.rsY2 S      %   Y2 S      .   Y2 S      A   could not convert slice to array"0 i   l      <0y_u%bw+syU7v_
VWS\J%!݈҅]%q A 

    AddSubMulPowShrShlEmptyNotMultipleNotMultipleG1NotMultipleG2UnequalPointAmountaccount0.1.1before_txafter_tx 3 	   3    msgstx_bytescred_bytessimulate  3    3    3 
   3    3    authenticatoradd_auth_methodremove_auth_methodemit  =4    L4    ^4    add_authenticator   |4    id  4    /    QueryMsgauthenticator_i_dsauthenticator_by_i_d  4    4    MigrateMsg  l3 o3 r3 u3 x3 {3 
   
      3 3 3 DistributionQuerydelegator_withdraw_addressdelegator_addressdelegation_rewardsvalidator_addressdelegation_total_rewardsdelegator_validatorsQuerier contract error:  5    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/errors/std_error.rs   5 i   l      Querier system error:   P6    Serializing QueryRequest:   p6    Empty/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/keys.rs   6 `   H      xion_account::auth::Authenticatortype: ; key:   -7    37              B   |   
      }             b   FromUtf8Errorbyteserrorinteger overflow when calculating buffer size/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/mod.rs  7 ^   |      ~            Invalid UTF87 ^      $   /xion.jwk.v1.Query/ValidateJWT  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_>456789:;<= 	



?


 !"#$%&'()*+,-./0123Claimstransaction_hash 9    cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>alloc::vec::Vec<u8>xion_account::auth::Authenticatorcw2::ContractVersionalloc::string::Stringcosmwasm_std::query::QueryRequestcosmwasm_std::types::Envxion_account::msg::InstantiateMsgcosmwasm_std::types::MessageInfoxion_account::msg::MigrateMsgxion_account::auth::jwt::Claimsxion_account::msg::ExecuteMsgxion_account::msg::QueryMsgxion_account::contract::AccountSudoMsgnot implemented/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/traits.rs< _   
  	   < _     	   < _     	   < _      	   < _      	   < _   +  	   < _      	   missing field ``<    <    duplicate field `    =    <    unknown variant ``, there are no variants   $=    5=    `, expected $=    `= 
   contracts/account/src/auth.rs   |= 
   t   A   Secp256K1idpubkeysignatureEd25519EthWalletaddressJwtaudsubtokenSecp256R1Passkeyurlcredential= 	   =    = 	   =    = 	   =    =    =    = 	   =    =    = 	   =    =    =    =    =    =    = 
   Authenticatorpasskey=    =    =    =    =    >    invalid padding schemedecryption errorverification errormessage too longinput must be hashednprimes must be >= 2too few primes of given length to generate an RSA keyinvalid prime valueinvalid modulusinvalid exponentinvalid coefficientmodulus too largepublic exponent too smallpublic exponent too large          internal errorlabel too longinvalid padding lengthinvalid argumentsPKCS#1 ASN.1 error:  _@    PKCS#1 cryptographic error         PKCS#1 version error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cw-storage-plus-2.0.0/src/iter_helpers.rs@ h   
                           Error   q   p   z   r   y   9   x   8   g   f   2   t   v   d   w   0   s   3   j   n   5   4   k   h   c   e   6   m   u   a   7   l   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bech32-0.9.1/src/lib.rs  A V   b   	 A 
      Unhandled error writing the checksum on drop.   A V         internal error: entered unreachable codeA V        1   missing human-readable separator, ""B #   B    invalid checksuminvalid lengthinvalid character (code=) C    .C    invalid data point (@C    .C    invalid paddingmixed-case strings not allowed   Q%cʹ     Aԇ 
1~ayBϋV}s             signature::Error { source: Some()   /D    4D    None }crypto error/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/sec1-0.7.3/src/point.rsZD V   
  "   ZD V   	  	   PKCS#8 ASN.1 error: D    PKCS#8 cryptographic key data malformedPKCS#8 algorithm parameters malformedpublic key error:   8E    AlgorithmIdentifier parameters missingASN.1 error:  zE 
   SPKI cryptographic key data malformedunknown/unsupported algorithm OID: E #   BOOLEANINTEGERBIT STRINGOCTET STRINGNULLOBJECT IDENTIFIERREALENUMERATEDUTF8StringSEQUENCESETNumericStringPrintableStringTeletexStringVideotexStringIA5StringUTCTimeGeneralizedTimeVisibleStringBMPStringprimitiveconstructedF 	   F 
   APPLICATION [] ()   F 
   F    F    CONTEXT-SPECIFIC [  F    F    F    PRIVATE [   $G 	   F    F    Tag(0x: HG    NG    F    NotFoundPermissionDeniedConnectionRefusedConnectionResetHostUnreachableNetworkUnreachableConnectionAbortedNotConnectedA

-- Chunk 170 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25351-25500
K *   GK 	   I/O error:  `K 
   indefinite length disallowedincorrect length for    K    ASN.1  not canonically encoded as DER   K    K    malformed OIDunknown/unsupported OID:   K    SET OF contains duplicateSET OF ordering errorinteger overflowASN.1 DER message is too longPEM error:   sL 
   permission deniedreader does not support the requested operationunknown tag modeinvalid tag numberunexpected ASN.1 DER tag: expected ,  M 	   
M    got  M    unknown/unsupported ASN.1 DER tag: 0x   ,M %   trailing data at end of DER message: decoded  bytes,  bytes remaining   \M -   M    M    malformed ASN.1 DER value for   M 
          PEM Base64 error:   M    PEM character encoding errorPEM error in encapsulated textPEM headers disallowed by RFC7468PEM type label invalidPEM length invalidPEM preamble contains invalid data (NUL byte)PEM error in pre-encapsulation boundaryPEM error in post-encapsulation boundaryunexpected PEM type label: expecting ""  O &   -O    invalid Base64 lengthinvalid Base64 encodingfailed to decode Protobuf message: .:          O    O    failed to encode Protobuf message; insufficient buffer capacity (required: , remaining: )   O K   O 
   P    LayoutError                /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/bytes.rs                              /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/lib.rs  P V         @P X        @P X        @P X   G   A 

      called `Result::unwrap()` on an `Err` value @P X   H  2   @P X   V  I                  @P X     *   @P X        /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/bytes_mut.rsoverflowQ \        /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/lib.rs  \R V         Q \     "   Q \        Q \        Q \         Q \   }     Q \         Q \        Q \        Q \     	   Q \     
   Q \        Q \        Q \        Q \   #                    abort/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/bytes-1.10.1/src/lib.rs S V   n   	   advance out of bounds: the len is  but advancing by $T "   FT    S V         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs xT [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/decode_suffix.rsT x   c      T x      
   T x         T x      	   Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengthsU T   internal error: entered unreachable code:   U *   T x         T x   V      T x   Y   1   T x   M      T x   C   
   T x   .   )   T x   
      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/encode.rs  V Z      	   Invalid byte , offset . W 
   W 	   
W    Encoded text cannot have a 6-bit remainder.Invalid last symbol  cW    W 	   
W    Invalid padding/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/decode.rsW q   r   )   W q   s   /   W q         W q         W q      )   W q      (   W q         W q         W q      '   W q         W q      	   W q         W q         W q         W q         W q         W q         W q        W q   
     W q        W q     
   W q     
   W q     
   W q      
   W q      
   W q      
   W q      
   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.21.7/src/engine/general_purpose/mod.rs  Y n      
   Y n      F   Y n      @   Y n      
   Y n      
   Y n      
   Y n      
   Y n      3   Y n      %   Y n      :   Y n      +   Y n   @      Y n   B   /   Y n   B       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/tiny-keccak-2.0.2/src/lib.rs [ [   8      [ [   8     [ [   M  /   assertion failed: dst.len() <= src.len()[ [   R  
   [ [   b     [ [        [ [     !   [ [     
   [ [     %   [ [        [ [     '   [ [     
   [ [     +                                              	                   	     
                                      
      
                        usize overflow when calculating b64 length/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rsR] Z   W   
   R] Z   P   3   Parsing u128:   ]    NoneSome             Parsing u64:    ] 
   Invalid hash formatInvalid signature formatInvalid recovery parameter. Supported values: 0 and 1.Unknown error: u^    List of points is emptyList is not an expected multipleList is not a multiple of 48List is not a multiple of 96Not the same amount of points passedAggregation error:   _    Batch errorGeneric errorInvalid public key formatInvalid pointUnknown hash functionAggregation pairing equality error:  _ $   Error/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/accum.rs  _ U         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/vec/mod.rs(` L   	  
          invalid base64: `       
             A 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  a K   
     /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/sections.rs   `a a         `a a         Cannot read section length  a    `a a   8   	   `a a   :         
             A 
      a Display implementation returned an error unexpectedly/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rs  b K   
     Error    A 
            /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/storage_keys/length_prefixed.rs   
c u         
c u      	   only supports namespace components up to length 0xFFFF  c 6   
c u   &   	   
c u   6      
c u   6   	   TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other.d   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/imports.rs$f `      
                                               addr_validate errored:  f    input too long for addr_validateaddr_canonicalize errored:  
g    input too long for addr_canonicalizeaddr_humanize errored:  Tg    MessageTooLong must not happen. This is a bug in the VM.tg 8   $f `   '     $f `   E     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   g A   $f `        InvalidHashFormat must not happen. This is a bug in the VM. 0h ;   $f `        $f `        $f `        Verification error: h    Recover pubkey error:   h    Generic error:  h    Invalid Base64 string:  h    Invalid data size: expected= actual=i 
   4i    Invalid hex string: Li    Cannot decode UTF8 bytes into string:   hi &    not found         i 
   Error parsing into type :   i    i    Error serializing type  i    i    Overflow:   j 
   Divide by zero: 
j    Conversion error: AddSubMulPowShrShlCannot  with given operands Xj    _j    Cannot divide by zero   Fj Ij Lj Oj Rj Uj                           Utf8Errorvalid_up_toerror_lenCannot parse request:  in: j    k    Cannot parse response:  
k    k    No such contract:   Dk    No such code:   `k    Unknown system errorUnsupported query type: k    Region pointer is null  k    /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/cosmwasm-std-2.2.2/src/memory.rs k _   >   	   Region starts at null pointer   <l 
   k _      
   invalid_requestinvalid_responseno_such_contractno_such_codeunknownunsupported_request   tl    l    l    l 
   l    l    errorrequestl    m    responsel    m    addr0m    code_id <m    kindLm     A 
&            
               okerror m    m                               m okerror m    m    missing field ``m    m    duplicate field `    n    m    unknown variant ``, there are no variants   $n    5n    `, expected $n    `n 
     ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/>?456789:;<= 	






 !"#$%&'()*+,-./0123cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>    
                      FromUtf8ErrorbyteserrorVec is sized conservatively  p    internal error: entered unreachable code:   p *   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/mod.rs  p ^        integer overflow when calculating buffer size   p ^   y                  Invalid UTF8p ^      $   internal error: entered unreachable code: invalid Once stateq <   /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/std/src/sys/sync/once/no_threads.rs q [   6      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs  dr b   9  
   dr b        dr b   a     requestresponseaddrcode_idkindBuffer is full       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/ser/mod.rsfalse,s c      	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/unescape.rs s g   '      Non-hex ASCII character found   
t 
   s g         Control character found in string.EOF while parsing a list.EOF while parsing an object.EOF while parsing a string.EOF while parsing a JSON value.Expected this character to be a `':'`.Expected a high surrogate (D800–DBFF).Expected this character to be either a `','` ora `']'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` or a `'}'`.Expected to parse either a `true`, `false`, or a `null`.Expected this character to start a JSON value.Invalid escape sequence.Invalid number.Invalid typeInvalid unicode code point.Object key is not a string.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.JSON has non-whitespace trailing characters after the value.JSON has a comma after the last value in an array or map.JSON is nested too deeply, exceeded the recursion limit.       /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-json-wasm-1.0.1/src/de/mod.rs  w b   ,   	   w b      A   w b      ,   Invalid character  at position  0x    Bx 
   Odd number of digitsInvalid string length/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rsx [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rs   x q         /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode_suffix.rsxy x   b      xy x      
   xy x         xy x      	   xy x   [   /   xy x   T   	   xy x   Q   1   xy x   G   *   xy x   =   
   xy x   5   )   xy x      &   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/encode.rs  z Z      	   Invalid symbol , offset .   
{    { 	   ${    Invalid input length:   @{    Invalid last symbol `{    { 	   ${    Invalid padding/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/decode.rs{ q   8   &   { q   ^   .   { q   a   
   { q   e   8   { q   i      { q   =   '   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/base64-0.22.1/src/engine/general_purpose/mod.rs  l| n      
   l| n      F   l| n      @   l| n      
   l| n      
   l| n      
   l| n      
   l| n      3   l| n      %   l| n      :   l| n      +   l| n   @      l| n   B   /   l| n   B       Error/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/alloc/src/string.rsEOF while parsing a listEOF while parsing an objectEOF while parsing a stringEOF while parsing a valueexpected `:`expected `,` or `]`expected `,` or `}`expected identexpected valueexpected `"`invalid escapeinvalid numbernumber out of rangeinvalid unicode code pointcontrol character (\u0000-\u001F) found while parsing a stringkey must be a stringinvalid value: expected key to be a number in quotesfloat key must be finite (got NaN or +/-inf)lone leading surrogate in hex escapetrailing commatrailing charactersunexpected end of hex escaperecursion limit exceeded   
               Error(, line: , column: )   X    ^    f 
   p  A 
      a Display implementation returned an error unexpectedly } K   
        
               0123456789abcdefuuuuuuuubtnufruuuuuuuuuuuuuuuuuu  " A 
\ A 
/rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/adapters/enumerate.rs  [   2   	   /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/const-oid-0.9.6/src/arcs.rs   Z   7   /    Z   <   /                OID malformed    Z   m      /usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/const-oid-0.9.6/src/lib.rs   , Y         /rustc/eeb90cda1969383f56a2637cbd3037bdf598841c/library/core/src/iter/traits/iterator.rs X         ObjectIdentifier()                  .                ArcInvalidarcArcTooBigBase128                DigitExpectedactualEmptyLengthNotEnoughArcsTrailingDot                                  `explicit panic/usr/local/cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.219/src/de/mod.rs    Z        Ԅ    Ԅ    ` or `  Ԅ    `    Ԅ    one of ,              
  
  
      
  
    /rust/deps/dlmalloc-0.2.6/src/dlmalloc.rsassertion failed: psize >= size + min_overhead  )     	   assertion failed: psize <= size + max_overhead   )     
   <unsupported><disabled>library/std/src/backtrace.rs s 
      %   Backtrace operation not supported on this platform   (   $      Ԇ unsupported backtracedisabled backtrace s 
     
                      entity not foundpermission deniedconnection refusedconnection resethost unreachablenetwork unreachableconnection abortednot connectedaddress in useaddress not availablenetwork downbroken pipeentity already existsoperation would blocknot a directoryis a directorydirectory not emptyread-only filesystem or storage mediumfilesystem loop or indirection limit (e.g. symlink loop)stale network file handleinvalid input parameterinvalid datatimed outwrite zerono storage spaceseek on unseekable filefilesystem quota exceededfile too largeresource busyexecutable file busydeadlockcross-device link or renametoo many linksinvalid filenameargument list too longoperation interruptedunsupportedunexpected end of fileout of memoryother erroruncategorized error (os error )          ) 
   4    : panicked at :
library/std/src/sync/lazy_lock.rs   ` !         cannot recursively acquire mutex     library/std/src/sys/sync/mutex/no_threads.rs ,      	   library/std/src/sync/once.rs 
      2   <unknown>�memory allocation of  bytes failed  0    E 
   library/std/src/alloc.rsd    d  	   cannot modify the panic hook from a panicking thread 4   library/std/src/panicking.rsȋ 
      	   
   
  
                                                    
  Box<dyn Any>library/std/src/../../backtrace/src/symbolize/mod.rs\ 

-- Chunk 171 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25501-25650
    &                is out of bounds of `   
   
        library/core/src/str/mod.rs L      ,   library/core/src/unicode/printable.rs   x %      6   x %   
   +    	




$jk
	 
';>NO{	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_ZbST./'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юno^"{-f/.
1
$	
+D*$$(4
NC7	
;E9c	0!@8K/
	@ '
	6:
PI73
3.
&RK+*&
	N$	D

H'	u
B>*;
Qb
H
^"E


:
6,<dS
H	
FEHS
I
F

GI7
9
6;
V2
fu
ĊLc
0G9*\&
F
([eK9@
*	3
k
	`G	t<
spFz

W	GBP+>!p-@:*)L
DL=<U4,d
V
8

,	
w_

8
("NT

	6		%
 	





	
 +-
.012	xy0WX
KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
):;EIW[\^_de
EIde񃅋HINOWY^_[\mqno

_}~
FGNOXZ\^~rstu&./ߚ @0NOZ['/no7=?BESgu  _"D	/4
PU

	

NW
PC-
:
%_ mj%Y		

j
Y+F
,
1
,

/1M<<8+/-!!
/;	"t

7	\
;
8F
t

ZY	

	L
1&
 *L
library/core/src/unicode/unicode_data.rs ; (   P   (   ; (   \      library/core/src/escape.rs      M      library/core/src/num/mod.rs          attempt to divide by zero   ܧ      ] "`"|, 00`45`7
7
7 CaD!H
H$
I!K/aK;aY0
Y
a]04!ajabOobcd aege af g!i!kkk nll'
#G 	1-,


#
e
!
[
:
+,):7

:9

9:

=
27

:
9
HZ
	b		I7
$	f
^  


@
-3A"v	:
'10(	

-- Chunk 172 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25651-25800
 8:@R
2?
"e 





1


3! q}` / $]]   b

P"Ng
&
.0B
#
3d	y  
"
#/-C  *	 (  PF
1{6)
1
2$>
4	
_9%TUje 	  
(	.
 RzH 
4  ;	 ?@   . 	
 72 >! =  m  
`    
 $	 , @`0 `!  !

@na
 ԡ

 ߁"0a% !&0a&&A/
$
`*S&	) &+ V 	+@@ &5
t

e
  4 
& .
f; +P 
  P`$$t

 *	 3
3 @ @ UG
A
  
 > D        ` ]  
 `,+*0 ,o,`-
`.  6`66
!7$
7a9/90
aH
L@4aPjQOo!RR aSeѡS !T UaW!YY  YZ p  -H
0e#
[
:			+<* 7

:	
9

9:

;
	(7

:

9	

HQ
b	
I7
$	f
  


@
	-u"v	:
010(	
 8:
@ ! `  i 
 P 
&
.0'C
/3*     (  PF
1{6)
1=$>
4	
_9QUje 	
 
(	.
 RzH 
4  ; ?Q  . 
 72 d =  m `                                                                                                                                                                                                         	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0    @ 2  3  4  5  6  7  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x     y  z  {  |  }  ~    S            T        V    W            Y    [        `    c    i    h        o    r    u                                                                                                                                                                                                                     	  
  
  
  
                              
  
  
         "  #  $  %  &  '  (  )  *  +  ,  -  .  /  0  1  2  3  :  e,  ;  <  =    >  f,  A  B  C    D    E    F  G  H  I  J  K  L  M  N  O  p  q  r  s  v  w                                                                                                                                                                                                                {    |    }     P    Q    R    S    T    U    V    W    X  	  Y  
  Z  
  [  
  \  
  ]    ^    _    0    1    2    3    4    5    6    7    8    9    :    ;  
  <  
  =  
  >    ?     @  !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  p  q  r  s  t  u  v  w  x  y  z  {  |  }  ~                                                                                                                                                                                                                                                                       	  
  
  
  
                              
  
  
       !  "  #  $  %  &  '  (  )  *  +  ,  -  .  /  1  a  2  b  3  c  4  d  5  e  6  f  7  g  8  h  9  i  :  j  ;  k  <  l  =  m  >  n  ?  o  @  p  A  q  B  r  C  s  D  t  E  u  F  v  G  w  H  x  I  y  J  z  K  {  L  |  M  }  N  ~  O    P    Q    R    S    T    U    V       -    -    -    -    -    -    -    -    -    	-    
-    
-    
-    
-    -    -    -    -    -    -    -    -    -    -    -    -    -    -    
-    
-    
-    -     -    !-    "-    #-    $-    %-    '-    --    p    q    r    s    t    u    v    w    x    y    z    {    |    }    ~                                                                                                                                                                                                                                                                                              
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

-- Chunk 173 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25801-25950
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
     
  
  
  
  
  
  
  
  
  	
  

  

  

  

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  

  

  

  
   
  !
  "
  #
  $
  %
  &
  '
  (
  )
  *
  +
  ,
  -
  .
  /
  0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  :
  ;
  <
  =
  >
  ?
  @
  A
  B
  C
  D
  E
  F
  G
  H
  I
  J
  K
  L
  M
  N
  O
  P
  Q
  R
  S
  T
  U
  V
  W
  X
  Y
  Z
  [
  \
  ]
  ^
  _
  `
  a
  b
  c
  d
  e
  f
  g
  h
  i
  j
  k
  l
  m
  n
  o
  p
  q
  r

-- Chunk 174 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:25951-26100
  s
  t
  u
  v
  w
  x
  y
  z
  {
  |
  }
  ~
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
     
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
       	    
    
    
    
                            
    
    (     )  !  *  "  +  #  ,  $  -  %  .  &  /  '  8  0  9  1  :  2  ;  3  <  4  =  5  >  6  ?  7  H  @  I  A  J  B  K  C  L  D  M  E  Y  Q  [  S  ]  U  _  W  h  `  i  a  j  b  k  c  l  d  m  e  n  f  o  g                                                                                                            p    q        r    s    t    u                v    w            z    {        x    y    |    }      &!    *!  k   +!     2!  N!  `!  p!  a!  q!  b!  r!  c!  s!  d!  t!  e!  u!  f!  v!  g!  w!  h!  x!  i!  y!  j!  z!  k!  {!  l!  |!  m!  }!  n!  ~!  o!  !  !  !  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $  $   ,  0,  ,  1,  ,  2,  ,  3,  ,  4,  ,  5,  ,  6,  ,  7,  ,  8,  	,  9,  
,  :,  
,  ;,  
,  <,  
,  =,  ,  >,  ,  ?,  ,  @,  ,  A,  ,  B,  ,  C,  ,  D,  ,  E,  ,  F,  ,  G,  ,  H,  ,  I,  ,  J,  ,  K,  
,  L,  
,  M,  
,  N,  ,  O,   ,  P,  !,  Q,  ",  R,  #,  S,  $,  T,  %,  U,  &,  V,  ',  W,  (,  X,  ),  Y,  *,  Z,  +,  [,  ,,  \,  -,  ],  .,  ^,  /,  _,  `,  a,  b,  k  c,  }
  d,  }  g,  h,  i,  j,  k,  l,  m,  Q  n,  q  o,  P  p,  R  r,  s,  u,  v,  ~,  ?  ,  @  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  ,  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m                                                          "  #  $  %  &  '  (  )  *  +  ,  -  .  /  2  3  4  5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C  D  E  F  G  H  I  J  K  L  M  N  O  P  Q  R  S  T  U  V  W  X  Y  Z  [  \  ]  ^  _  `  a  b  c  d  e  f  g  h  i  j  k  l  m  n  o  y  z  {  |  }  y
  ~                          e                                                    f    \    a    l    j                S                              §  ç  ħ    ŧ    Ƨ  
  ǧ  ȧ  ɧ  ʧ  Ч  ѧ  ֧  ק  ا  ٧      !  A  "  B  #  C  $  D  %  E  &  F  '  G  (  H  )  I  *  J  +  K  ,  L  -  M  .  N  /  O  0  P  1  Q  2  R  3  S  4  T  5  U  6  V  7  W  8  X  9  Y  :  Z    (  )  *  +  ,  -  .  /  0 	 1 
 2 

-- Chunk 175 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/contracts/account_updatable-aarch64.wasm:26101-26216
 3 
 4 
 5  6  7  8  9  :  ;  <  =  >  ?  @  A  B  C 
 D 
 E 
 F  G   H ! I " J # K $ L % M & N ' O                                                                         p  q  r  s  t  u  v  w  x  y  z  |  }  ~                                            
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                                                                 @n `n An an Bn bn Cn cn Dn dn En en Fn fn Gn gn Hn hn In in Jn jn Kn kn Ln ln Mn mn Nn nn On on Pn pn Qn qn Rn rn Sn sn Tn tn Un un Vn vn Wn wn Xn xn Yn yn Zn zn [n {n \n |n ]n }n ^n ~n _n n   "  #  $  %  &  '  (  )  * 	 + 
 , 
 - 
 . 
 /  0  1  2  3  4  5  6  7  8  9  :  ;  <  = 
 > 
 ? 
 @  A   B ! C &   
   &   &   &     # I o

=== File: integration_tests/testdata/unsigned_msgs/bank_send_unsigned.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/unsigned_msgs/bank_send_unsigned.json:1-32
{
  "body": {
    "messages": [
      {
        "@type": "/cosmos.bank.v1beta1.MsgSend",
        "from_address": "xion1e2fuwe3uhq8zd9nkkk876nawrwdulgv460vzg7",
        "to_address": "xion1qaf2xflx5j3agtlvqk5vhjpeuhl6g45hxshwqj",
        "amount": [
          {
            "denom": "uxion",
            "amount": "100000"
          }
        ]
      }
    ],
    "memo": "",
    "timeout_height": "0",
    "extension_options": [],
    "non_critical_extension_options": []
  },
  "auth_info": {
    "signer_infos": [],
    "fee": {
      "amount": [],
      "gas_limit": "200000",
      "payer": "",
      "granter": ""
    },
    "tip": null
  },
  "signatures": []
}

=== File: integration_tests/testdata/unsigned_msgs/plain_config.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/unsigned_msgs/plain_config.json:1-89
{
  "grant_config": [
    {
      "msg_type_url": "/cosmos.bank.v1beta1.MsgSend",
      "grant_config": {
        "description": "Bank grant",
        "authorization": {
          "@type": "/cosmos.authz.v1beta1.GenericAuthorization",
          "msg": "/cosmos.bank.v1beta1.MsgSend"
        },
        "optional": true
      }
    },
    {
      "msg_type_url": "/cosmos.staking.v1beta1.MsgDelegate",
      "grant_config": {
        "description": "Staking grant",
        "authorization": {
          "@type": "/cosmos.authz.v1beta1.GenericAuthorization",
          "msg": "/cosmos.staking.v1beta1.MsgDelegate"
        },
        "optional": false
      }
    },
    {
      "msg_type_url": "/cosmos.gov.v1beta1.MsgVote",
      "grant_config": {
        "description": "Governance vote grant",
        "authorization": {
          "@type": "/cosmwasm.wasm.v1.ContractExecutionAuthorization",
          "grants": [
            {
              "contract": "cosmos1contractaddress",
              "limit": {
                "@type": "/cosmwasm.wasm.v1.MaxCallsLimit",
                "remaining": "5"
              },
              "filter": {
                "@type": "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter",
                "keys": ["key1", "key2"]
              }
            },
            {
              "contract": "cosmos1anothercontractaddress",
              "limit": {
                "@type": "/cosmwasm.wasm.v1.CombinedLimit",
                "calls_remaining": "5",
                "amounts": [
                  {
                    "denom": "uxion",
                    "amount": "1000"
                  }
                ]
              },
              "filter": {
                "@type": "/cosmwasm.wasm.v1.AllowAllMessagesFilter"
              }
            }
          ]
        },
        "optional": true
      }
    }
  ],
  "fee_config": {
    "description": "Fee allowance for user1",
    "allowance": {
      "@type": "/cosmos.feegrant.v1beta1.AllowedMsgAllowance",
      "allowance": {
        "@type": "/cosmos.feegrant.v1beta1.AllowedMsgAllowance",
        "allowance": {
          "@type": "/cosmos.feegrant.v1beta1.BasicAllowance",
          "spend_limit": [
            {
              "denom": "atom",
              "amount": "1000"
            }
          ],
          "expiration": "2025-01-01T00:00:00Z"
        },
        "allowed_messages": [
          "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
        ]
      },
      "allowed_messages": ["/cosmos.staking.v1beta1.MsgDelegate"]
    },
    "expiration": 1715151235
  }
}

=== File: integration_tests/testdata/unsigned_msgs/config.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/integration_tests/testdata/unsigned_msgs/config.json:1-34
{
  "grant_config": [
    {
      "msg_type_url": "/cosmos.bank.v1.MsgSend",
      "grant_config": {
        "description": "Bank grant",
        "authorization": {
          "type_url": "/cosmos.authz.v1.GenericAuthorization",
          "value": "CgRQYXk="
        },
        "optional": true
      }
    },
    {
      "msg_type_url": "/cosmos.staking.v1.MsgDelegate",
      "grant_config": {
        "description": "Staking grant",
        "authorization": {
          "type_url": "/cosmos.authz.v1.GenericAuthorization",
          "value": "CgREZWxlZ2F0ZQ=="
        },
        "optional": false
      }
    }
  ],
  "fee_config": {
    "description": "Fee allowance for user1",
    "allowance": {
      "type_url": "/cosmos.feegrant.v1.BasicAllowance",
      "value": "CgQICAI="
    },
    "expiration": 1715151235
  }
}

=== File: scripts/release-info.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/scripts/release-info.sh:1-46
#!/bin/bash
set -Eeuo pipefail

if [ -n "${DEBUG:-}" ]; then
  set -x
fi

# Get the directory of this script, used to source other scripts
: ${scripts_dir:="$(realpath $(dirname $0))"}
: ${base_dir:="$(dirname $scripts_dir)"}
: ${release_dir:="$base_dir/release"}

# set ref name if not set
: ${GITHUB_REF_NAME:=$(git describe --tags)}

binaries=$(
  find "$release_dir" -name 'xiond_*.zip' ! -name 'xiond_*darwin_all.zip'
) 

binaries_list=$(
  for file in ${binaries[@]}; do
    platform=$(basename "$file" ".zip" | cut -d_ -f3- | sed -E 's/^rc[0-9]*-//g; s/_/\//g')
    checksum=$(sha256sum "$file" | awk '{ print $1 }')
    echo "\"$platform\": \"https://github.com/burnt-labs/xion/releases/download/${GITHUB_REF_NAME}/$(basename "$file")?checksum=sha256:$checksum"\"
  done
)

binaries_json=$(echo "{\"binaries\": {$(paste -s -d "," <(echo "${binaries_list[@]}"))}}" | jq -c .)

upgrade_name=$(echo $GITHUB_REF_NAME | cut -d. -f1)
  
go mod edit -json | 
  jq --argjson binaries "$binaries_json" --arg name $upgrade_name --arg tag $GITHUB_REF_NAME '{
    name: $name,
    tag: $tag,
    go_version: .Go,
    cosmos_sdk_version: (.Require[] | select(.Path == "github.com/cosmos/cosmos-sdk") | .Version),
    cosmwasm_enabled: (.Require[] | select(.Path == "github.com/CosmWasm/wasmd") != null),
    cosmwasm_version: (.Require[] | select(.Path == "github.com/CosmWasm/wasmd") | .Version),
    ibc_go_version: (.Require[] | select(.Path == "github.com/cosmos/ibc-go/v8") | .Version),
    consensus: {
      type: "cometbft",
      version: (.Require[] | select(.Path == "github.com/cometbft/cometbft") | .Version)
    },
    binaries: $binaries.binaries
}' | tee "$release_dir/version.json"

=== File: scripts/proto-gen.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/scripts/proto-gen.sh:1-143
#!/usr/bin/env bash

set -eo pipefail

if [ -n "$DEBUG" ]; then
  set -x
fi

# Get the directory of this script, used to source other scripts
: ${scripts_dir:="$(realpath $(dirname $0))"}
: ${base_dir:="$(dirname $scripts_dir)"}
: ${proto_dir:="$base_dir/proto"}
: ${client_dir:="$base_dir/client"}
: ${docs_dir:="$client_dir/docs"}

# Define dependencies
deps=$(cat <<EOF
  github.com/cosmos/cosmos-sdk
  github.com/cosmos/cosmos-proto
  github.com/cosmos/ibc-go/v8
  github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v8
  github.com/osmosis-labs/fee-abstraction/v8
  github.com/CosmWasm/wasmd
EOF
)

# Install selected dependencies from go.mod
go mod download $deps

# Get dependency paths
proto_paths=$(go list -f '{{ .Dir }}' -m $deps | sed "s/$/\/proto/")

use_tmp_dir() {
  local path="$1"
  if [ -n "$path" ]; then
    mkdir -p $path
    tmp_dir=$(mktemp -d -p $path -t tmp-XXXXXX)
  else
    tmp_dir=$(mktemp -d -t tmp-XXXXXX)
  fi
  trap 'rm -rf -- "$tmp_dir"' EXIT
  cd $tmp_dir
}

get_proto_dirs() {
  # Find all subdirectories with .proto files
  find $@ -path -prune -o -name '*.proto' -print0 \
    | xargs -0 -n1 dirname | sort -u 
}

gen_gogo() {
  local dirs=$(get_proto_dirs $proto_dir)

  for dir in $xion_dirs; do
    for file in $(find "${dir}" -maxdepth 1 -name '*.proto'); do
      if grep "option go_package" $file &> /dev/null ; then
      buf generate --output $proto_dir --template $proto_dir/buf.gen.gogo.yaml $file
      fi
    done
  done

  # move proto files to the right places
  if [ -e "$base_dir/github.com/burnt-labs/xion" ]; then
  cp -rv $base_dir/github.com/burnt-labs/xion/* $base_dir/
  rm -rf $base_dir/github.com
  fi
}

gen_swagger() {
  local dirs=$(get_proto_dirs $proto_dir $proto_paths)

  use_tmp_dir $docs_dir
  # Generate swagger for each path
  for dir in $dirs; do
    # generate swagger files (filter query files)
    query_file=$(find "${dir}" -maxdepth 1 \( -name 'query.proto' -o -name 'service.proto' \))
    [[ -n "$query_file" ]] || continue

    buf generate --template $proto_dir/buf.gen.swagger.yaml $query_file
  done
  # find ./ -type f

  # combine swagger files
  # uses nodejs package `swagger-combine`.
  # all the individual swagger files need to be configured in `config.json` for merging
  swagger-combine ${docs_dir}/config.yaml \
    --format "json" \
    --output ${docs_dir}/static/swagger.json \
    --includeDefinitions true \
    --continueOnConflictingPaths true

  # Generate OpenAPI spec using Swagger2Openapi
  # Install required dependencies if not already installed
  npm install --prefix ./ swagger2openapi
  npm exec -- swagger2openapi ../static/swagger.json --outfile ../static/openapi.json
}

gen_ts() {
  local dirs=$(get_proto_dirs $proto_dir $proto_paths)
  ts_dir=$client_dir/ts
  types_dir=$ts_dir/types
  mkdir -p $types_dir

  cd $ts_dir
  npm install
  # Generate swagger for each path
  for dir in $dirs; do
    # generate swagger files (filter query files)
    query_file=$(find "${dir}" -maxdepth 1 \( -name 'query.proto' -o -name 'service.proto' \))
    [[ -n "$query_file" ]] || continue

    buf generate --template $proto_dir/buf.gen.ts.yaml $query_file
  done
}

# Parse CLI parameters
if [[ $# -eq 0 ]]; then
  gen_gogo
else
  while [[ $# -gt 0 ]]; do
    case $1 in
    --gogo)
      gen_gogo
      shift
      ;;
    --swagger)
      gen_swagger
      shift
      ;;
    --ts|--js)
      gen_ts
      shift
      ;;
    *)
      echo "Unknown option: $1"
      exit 1
      ;;
    esac
  done
fi

# clean up tmp dir
#rm -rf $tmp_dir

=== File: scripts/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/scripts/README.md:1-7
# Scripts

These scripts are copied from the [Cosmos-SDK](https://github.com/cosmos/cosmos-sdk/tree/v0.42.1/scripts) repository 
with minor modifications. All credits and big thanks go to the original authors.

Please note that a custom [fork](github.com/regen-network/protobuf) by the Regen network team is used.
See [`go.mod`](../go.mod) for version.

=== File: proto/buf.gen.docs.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.gen.docs.yaml:1-5
version: v1
plugins:
  - name: gocosmos
    out: ./docs
    opt: ./docs/protodoc-markdown.tmpl,proto-docs.md

=== File: proto/buf.gen.swagger.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.gen.swagger.yaml:1-5
version: v1
plugins:
  - name: swagger
    out: .
    opt: logtostderr=true,fqn_for_swagger_name=true,simple_operation_ids=true

=== File: proto/buf.gen.ts.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.gen.ts.yaml:1-6
version: v1
plugins:
  - name: ts
    out: types/generated
    path: node_modules/.bin/protoc-gen-ts_proto
    opt: "esModuleInterop=true,forceLong=long,useOptionals=messages,outputClientImpl=grpc-web"

=== File: proto/buf.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.yaml:1-23
# This module represents buf.build/cosmos/cosmos-sdk
version: v1
name: buf.build/cosmos/xion
deps:
  - buf.build/cosmos/cosmos-sdk
  - buf.build/cosmos/cosmos-proto
  - buf.build/cosmos/gogo-proto
  - buf.build/googleapis/googleapis
  - buf.build/cosmos/ics23
breaking:
  use:
    - FILE
lint:
  use:
    - DEFAULT
    - COMMENTS
    - FILE_LOWER_SNAKE_CASE
  except:
    - UNARY_RPC
    - COMMENT_FIELD
    - SERVICE_SUFFIX
    - PACKAGE_VERSION_SUFFIX
    - RPC_REQUEST_STANDARD_NAME

=== File: proto/buf.gen.gogo.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.gen.gogo.yaml:1-8
version: v1
plugins:
  - name: gocosmos
    out: ..
    opt: plugins=grpc,Mgoogle/protobuf/any.proto=github.com/cosmos/cosmos-sdk/codec/types
  - name: grpc-gateway
    out: ..
    opt: logtostderr=true,allow_colon_final_segments=true

=== File: proto/buf.lock ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.lock:1-19
# Generated by buf. DO NOT EDIT.
version: v1
deps:
  - remote: buf.build
    owner: cosmos
    repository: cosmos-proto
    commit: 1935555c206d4afb9e94615dfd0fad31
  - remote: buf.build
    owner: cosmos
    repository: cosmos-sdk
    commit: 954f7b05f38440fc8250134b15adec47
  - remote: buf.build
    owner: cosmos
    repository: gogo-proto
    commit: 34d970b699f84aa382f3c29773a60836
  - remote: buf.build
    owner: googleapis
    repository: googleapis
    commit: 75b4300737fb4efca0831636be94e517

=== File: proto/buf.gen.js.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/buf.gen.js.yaml:1-6
version: v1
plugins:
  - name: ts
    out: types/generated
    path: node_modules/.bin/protoc-gen-ts_proto
    opt: "esModuleInterop=true,forceLong=long,useOptionals=messages,outputClientImpl=grpc-web"

=== File: proto/xion/jwk/v1/params.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/jwk/v1/params.proto:1-12
syntax = "proto3";
package xion.jwk.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/burnt-labs/xion/x/jwk/types";

// Params defines the parameters for the module.
message Params {
  uint64 time_offset = 1 [(gogoproto.moretags) = "yaml:\"time_offset\""]; // in nanoseconds
  uint64 deployment_gas = 2 [(gogoproto.moretags) = "yaml:\"deployment_gas\""]; // gas to deploy a new project/audience
}

=== File: proto/xion/jwk/v1/query.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/jwk/v1/query.proto:1-85
syntax = "proto3";

package xion.jwk.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "xion/jwk/v1/params.proto";
import "xion/jwk/v1/audience.proto";

option go_package = "github.com/burnt-labs/xion/x/jwk/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/xion/jwk/params";
  }

  rpc AudienceClaim (QueryGetAudienceClaimRequest) returns (QueryGetAudienceClaimResponse) {
    option (google.api.http).get = "/xion/jwk/audience_claim/{hash}";
  }

  // Queries a list of Audience items.
  rpc Audience    (QueryGetAudienceRequest) returns (QueryGetAudienceResponse) {
    option (google.api.http).get = "/xion/jwk/audience/{aud}";
  }

  rpc AudienceAll (QueryAllAudienceRequest) returns (QueryAllAudienceResponse) {
    option (google.api.http).get = "/xion/jwk/audience";
  }

  // Queries a list of ValidateJWT items.
  rpc ValidateJWT (QueryValidateJWTRequest) returns (QueryValidateJWTResponse) {
    option (google.api.http).get = "/xion/jwk/validate_jwt/{aud}/{sub}/{sigBytes}";
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAudienceClaimRequest {
  bytes hash = 1;
}

message QueryGetAudienceClaimResponse {
  AudienceClaim claim = 1;
}

message QueryGetAudienceRequest {
  string aud = 1;
}

message QueryGetAudienceResponse {
  Audience audience = 1 [(gogoproto.nullable) = false];
}

message QueryAllAudienceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAudienceResponse {
  repeated Audience                               audience   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryValidateJWTRequest {
  string aud      = 1;
  string sub      = 2;
  string sigBytes = 3;
}

message PrivateClaim {
  string key = 1;
  string value = 2;
}

message QueryValidateJWTResponse {
  repeated PrivateClaim privateClaims = 1;
}

=== File: proto/xion/jwk/v1/audience.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/jwk/v1/audience.proto:1-14
syntax = "proto3";
package xion.jwk.v1;

option go_package = "github.com/burnt-labs/xion/x/jwk/types";

message Audience {
  string aud = 1; 
  string key = 2; 
  string admin = 3;
}

message AudienceClaim {
  string signer = 1;
}

=== File: proto/xion/jwk/v1/genesis.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/jwk/v1/genesis.proto:1-16
syntax = "proto3";

package xion.jwk.v1;

import "gogoproto/gogo.proto";
import "xion/jwk/v1/params.proto";
import "xion/jwk/v1/audience.proto";

option go_package = "github.com/burnt-labs/xion/x/jwk/types";

// GenesisState defines the jwk module's genesis state.
message GenesisState {
           Params   params       = 1 [(gogoproto.nullable) = false];
  repeated Audience audienceList = 2 [(gogoproto.nullable) = false];
}


=== File: proto/xion/jwk/v1/tx.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/jwk/v1/tx.proto:1-71
syntax = "proto3";

package xion.jwk.v1;

import "xion/jwk/v1/audience.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/burnt-labs/xion/x/jwk/types";

// Msg defines the Msg service.
service Msg {
  rpc CreateAudienceClaim (MsgCreateAudienceClaim) returns (MsgCreateAudienceClaimResponse);
  rpc DeleteAudienceClaim (MsgDeleteAudienceClaim) returns (MsgDeleteAudienceClaimResponse);
  rpc CreateAudience (MsgCreateAudience) returns (MsgCreateAudienceResponse);
  rpc UpdateAudience (MsgUpdateAudience) returns (MsgUpdateAudienceResponse);
  rpc DeleteAudience (MsgDeleteAudience) returns (MsgDeleteAudienceResponse);
}

message MsgCreateAudienceClaim {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1;
  bytes aud_hash = 2;
}

message MsgCreateAudienceClaimResponse {}

message MsgDeleteAudienceClaim {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1;
  bytes aud_hash = 2;
}

message MsgDeleteAudienceClaimResponse {}


message MsgCreateAudience {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1;
  string aud   = 2;
  string key   = 3;
}

message MsgCreateAudienceResponse {
  Audience audience = 1;
}

message MsgUpdateAudience {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1;
  string new_admin  = 2;
  string aud    = 3;
  string key    = 4;
}

message MsgUpdateAudienceResponse {
  Audience audience = 1;
}

message MsgDeleteAudience {
  option (cosmos.msg.v1.signer) = "admin";

  string admin = 1;
  string aud   = 2;
}

message MsgDeleteAudienceResponse {}


=== File: proto/xion/mint/v1/mint.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/mint/v1/mint.proto:1-59
syntax = "proto3";
package xion.mint.v1;

option go_package = "github.com/burnt-labs/xion/x/mint/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Minter represents the minting state.
message Minter {
  // current annual inflation rate
  string inflation = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // current annual expected provisions
  string annual_provisions = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// Params defines the parameters for the x/mint module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  option (amino.name) = "xion/x/mint/Params";

  // type of coin to mint
  string mint_denom = 1;
  // maximum annual change in inflation rate
  string inflation_rate_change = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // maximum inflation rate
  string inflation_max = 3 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // minimum inflation rate
  string inflation_min = 4 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // goal of percent bonded atoms
  string goal_bonded = 5 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  // expected blocks per year
  uint64 blocks_per_year = 6;
}

=== File: proto/xion/mint/v1/query.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/mint/v1/query.proto:1-67
syntax = "proto3";
package xion.mint.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "xion/mint/v1/mint.proto";
import "amino/amino.proto";

option go_package = "github.com/burnt-labs/xion/x/mint/types";

// Query provides defines the gRPC querier service.
service Query {
  // Params returns the total set of minting parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/xion/mint/v1/params";
  }

  // Inflation returns the current minting inflation value.
  rpc Inflation(QueryInflationRequest) returns (QueryInflationResponse) {
    option (google.api.http).get = "/xion/mint/v1/inflation";
  }

  // AnnualProvisions current minting annual provisions value.
  rpc AnnualProvisions(QueryAnnualProvisionsRequest)
      returns (QueryAnnualProvisionsResponse) {
    option (google.api.http).get = "/xion/mint/v1/annual_provisions";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryInflationRequest is the request type for the Query/Inflation RPC method.
message QueryInflationRequest {}

// QueryInflationResponse is the response type for the Query/Inflation RPC
// method.
message QueryInflationResponse {
  // inflation is the current minting inflation value.
  bytes inflation = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryAnnualProvisionsRequest is the request type for the
// Query/AnnualProvisions RPC method.
message QueryAnnualProvisionsRequest {}

// QueryAnnualProvisionsResponse is the response type for the
// Query/AnnualProvisions RPC method.
message QueryAnnualProvisionsResponse {
  // annual_provisions is the current minting annual provisions value.
  bytes annual_provisions = 1 [
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

=== File: proto/xion/mint/v1/genesis.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/mint/v1/genesis.proto:1-19
syntax = "proto3";
package xion.mint.v1;

import "gogoproto/gogo.proto";
import "xion/mint/v1/mint.proto";
import "amino/amino.proto";

option go_package = "github.com/burnt-labs/xion/x/mint/types";

// GenesisState defines the mint module's genesis state.
message GenesisState {
  // minter is a space for holding current inflation information.
  Minter minter = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  // params defines all the parameters of the module.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

=== File: proto/xion/mint/v1/event.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/mint/v1/event.proto:1-34
syntax = "proto3";
package xion.mint.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/burnt-labs/xion/x/mint/types";

// MintIncentiveTokens defines an event emitted on each block from the mint
// module EndBlocker
message MintIncentiveTokens {
  string bonded_ratio = 1 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.moretags) = "yaml:\"bonded_ratio\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string inflation = 2 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.moretags) = "yaml:\"inflation\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string annual_provisions = 3 [
    (gogoproto.moretags) = "yaml:\"annual_provisions\"",
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  uint64 needed_amount = 4;
  uint64 collected_amount = 5;
  uint64 minted_amount = 6;
  uint64 burned_amount = 7;
}

=== File: proto/xion/mint/v1/tx.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/mint/v1/tx.proto:1-45
syntax = "proto3";
package xion.mint.v1;

option go_package = "github.com/burnt-labs/xion/x/mint/types";

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "xion/mint/v1/mint.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the x/mint Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a governance operation for updating the x/mint module
  // parameters. The authority is defaults to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xion/x/mint/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/mint parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}

=== File: proto/xion/v1/query.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/v1/query.proto:1-51
syntax = "proto3";
package xion.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";


option go_package = "github.com/burnt-labs/xion/x/xion/types";

service Query {
  rpc WebAuthNVerifyRegister(QueryWebAuthNVerifyRegisterRequest) returns (QueryWebAuthNVerifyRegisterResponse) {}
  rpc WebAuthNVerifyAuthenticate(QueryWebAuthNVerifyAuthenticateRequest) returns (QueryWebAuthNVerifyAuthenticateResponse) {}
  rpc PlatformPercentage(QueryPlatformPercentageRequest) returns (QueryPlatformPercentageResponse) {}
  rpc PlatformMinimum(QueryPlatformMinimumRequest) returns (QueryPlatformMinimumResponse) {}
}

message QueryWebAuthNVerifyRegisterRequest {
  string addr = 1;
  string challenge = 2;
  string rp = 3;
  bytes data = 4;
}

message QueryWebAuthNVerifyRegisterResponse {
  bytes credential = 1;
}

message QueryWebAuthNVerifyAuthenticateRequest {
  string addr = 1;
  string challenge = 2;
  string rp = 3;
  bytes credential = 4;
  bytes data = 5;
}

message QueryWebAuthNVerifyAuthenticateResponse {}

message QueryPlatformPercentageRequest {}

message QueryPlatformPercentageResponse {
  uint64 platform_percentage = 1;
}

message QueryPlatformMinimumRequest {}

message QueryPlatformMinimumResponse {
  repeated cosmos.base.v1beta1.Coin minimums = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

=== File: proto/xion/v1/genesis.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/v1/genesis.proto:1-17
syntax = "proto3";
package xion.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/burnt-labs/xion/x/xion/types";

message GenesisState {
  uint32 platform_percentage = 1;
  repeated cosmos.base.v1beta1.Coin platform_minimums = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "platform_minimums,omitempty",
    (gogoproto.moretags) = "yaml:\"platform_minimums\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

=== File: proto/xion/v1/tx.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/v1/tx.proto:1-98
syntax = "proto3";
package xion.v1;

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/bank/v1beta1/bank.proto";

option go_package = "github.com/burnt-labs/xion/x/xion/types";

service Msg {
  option (cosmos.msg.v1.service) = true;

  // Send defines a method for sending coins from one account to another
  // account.
  rpc Send(MsgSend) returns (MsgSendResponse);

  // MultiSend defines a method for sending coins from some accounts to other
  // accounts.
  rpc MultiSend(MsgMultiSend) returns (MsgMultiSendResponse);

  // SetPlatformPercentage defines the method for updating the platform
  // percentage fee
  rpc SetPlatformPercentage(MsgSetPlatformPercentage)
      returns (MsgSetPlatformPercentageResponse);

  // SetPlatformMinimum defines the method for updating the platform
  // percentage fee
  rpc SetPlatformMinimum(MsgSetPlatformMinimum)
      returns (MsgSetPlatformMinimumResponse);
}

// MsgSend represents a message to send coins from one account to another.
message MsgSend {
  option (cosmos.msg.v1.signer) = "from_address";
  option (amino.name) = "xion/MsgSend";

  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from_address = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string to_address = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  repeated cosmos.base.v1beta1.Coin amount = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// MsgSendResponse defines the Msg/Send response type.
message MsgSendResponse {}

// MsgMultiSend represents an arbitrary multi-in, multi-out send message.
message MsgMultiSend {
  option (cosmos.msg.v1.signer) = "inputs";
  option (amino.name) = "xion/MsgMultiSend";

  option (gogoproto.equal) = false;

  // Inputs, despite being `repeated`, only allows one sender input. This is
  // checked in MsgMultiSend's ValidateBasic.
  repeated cosmos.bank.v1beta1.Input inputs = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  repeated cosmos.bank.v1beta1.Output outputs = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgMultiSendResponse defines the Msg/MultiSend response type.
message MsgMultiSendResponse {}

message MsgSetPlatformPercentage {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xion/MsgSetPlatformPercentage";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // platform_percentage is the platform fee percentage to multiplied by 10000
  uint32 platform_percentage = 2;
}

message MsgSetPlatformPercentageResponse {}

message MsgSetPlatformMinimum {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xion/MsgSetPlatformMinimum";

  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  repeated cosmos.base.v1beta1.Coin minimums = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

message MsgSetPlatformMinimumResponse {}

=== File: proto/xion/v1/feegrant.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/v1/feegrant.proto:1-46
syntax = "proto3";
package xion.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "amino/amino.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/burnt-labs/xion/x/xion/types";

// AuthzAllowance creates allowance only authz message for a specific grantee
message AuthzAllowance {
  option (gogoproto.goproto_getters)         = false;
  option (cosmos_proto.implements_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI";
  option (amino.name)                        = "xion/AuthzAllowance";

  // allowance can be any of basic and periodic fee allowance.
  google.protobuf.Any allowance = 1 [(cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];

  string authz_grantee = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// ContractsAllowance creates allowance only for specific contracts
message ContractsAllowance {
  option (gogoproto.goproto_getters)         = false;
  option (cosmos_proto.implements_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI";
  option (amino.name)                        = "xion/ContractsAllowance";

  // allowance can be any allowance interface type.
  google.protobuf.Any allowance = 1 [(cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];

  repeated string contract_addresses = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MultiAnyAllowance creates an allowance that pays if any of the internal allowances are met
message MultiAnyAllowance {
  option (gogoproto.goproto_getters)         = false;
  option (cosmos_proto.implements_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI";
  option (amino.name)                        = "xion/MultiAnyAllowance";

  // allowance can be any allowance interface type.
  repeated google.protobuf.Any allowances = 1 [(cosmos_proto.accepts_interface) = "cosmos.feegrant.v1beta1.FeeAllowanceI"];
}

=== File: proto/xion/globalfee/v1/query.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/globalfee/v1/query.proto:1-25
syntax = "proto3";
package xion.globalfee.v1;

import "xion/globalfee/v1/genesis.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/burnt-labs/xion/x/globalfee/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/xion/globalfee/v1/params";
  }
}

// QueryMinimumGasPricesRequest is the request type for the
// Query/MinimumGasPrices RPC method.
message QueryParamsRequest {}

// QueryMinimumGasPricesResponse is the response type for the
// Query/MinimumGasPrices RPC method.
message QueryParamsResponse {
  Params params = 1 [ (gogoproto.nullable) = false ];
}

=== File: proto/xion/globalfee/v1/genesis.proto ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/proto/xion/globalfee/v1/genesis.proto:1-43
syntax = "proto3";
package xion.globalfee.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/burnt-labs/xion/x/globalfee/types";

// GenesisState - initial state of module
message GenesisState {
  // Params of this module
  Params params = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "params,omitempty"
  ];
}

// Params defines the set of module parameters.
message Params {
  // minimum_gas_prices stores the minimum gas price(s) for all TX on the chain.
  // When multiple coins are defined then they are accepted alternatively.
  // The list must be sorted by denoms asc. No duplicate denoms or zero amount
  // values allowed. For more information see
  // https://docs.cosmos.network/main/modules/auth#concepts
  repeated cosmos.base.v1beta1.DecCoin minimum_gas_prices = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "minimum_gas_prices,omitempty",
    (gogoproto.moretags) = "yaml:\"minimum_gas_prices\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];

  // bypass_min_fee_msg_types defines a list of message type urls
  // that are free of fee charge.
  repeated string bypass_min_fee_msg_types = 2 [
    (gogoproto.jsontag) = "bypass_min_fee_msg_types,omitempty",
    (gogoproto.moretags) = "yaml:\"bypass_min_fee_msg_types\""
  ];

  // max_total_bypass_min_fee_msg_gas_usage defines the total maximum gas usage
  // allowed for a transaction containing only messages of types in
  // bypass_min_fee_msg_types to bypass fee charge.
  uint64 max_total_bypass_min_fee_msg_gas_usage = 3;
}

=== File: wasmbindings/wasm.go ===

-- Chunk 1 --
// wasm.go:10-19
func RegisterStargateQueries(queryRouter baseapp.GRPCQueryRouter, codec codec.Codec) []wasmkeeper.Option {
	queryPluginOpt := wasmkeeper.WithQueryPlugins(&wasmkeeper.QueryPlugins{
		Stargate: StargateQuerier(queryRouter, codec),
		Grpc:     GrpcQuerier(queryRouter),
	})

	return []wasmkeeper.Option{
		queryPluginOpt,
	}
}

=== File: wasmbindings/grpc_plugin.go ===

-- Chunk 1 --
// grpc_plugin.go:16-46
func GrpcQuerier(queryRouter baseapp.GRPCQueryRouter) func(ctx sdk.Context, request *wasmvmtypes.GrpcQuery) (proto.Message, error) {
	return func(ctx sdk.Context, request *wasmvmtypes.GrpcQuery) (proto.Message, error) {
		protoResponse, err := GetWhitelistedQuery(request.Path)
		if err != nil {
			return nil, err
		}

		route := queryRouter.Route(request.Path)
		if route == nil {
			return nil, wasmvmtypes.UnsupportedRequest{Kind: fmt.Sprintf("No route to query '%s'", request.Path)}
		}

		res, err := route(ctx, &abci.RequestQuery{
			Data: request.Data,
			Path: request.Path,
		})
		if err != nil {
			return nil, err
		}

		if res.Value == nil {
			return nil, fmt.Errorf("res returned from abci query route is nil")
		}
		err = proto.Unmarshal(res.Value, protoResponse)
		if err != nil {
			return nil, err
		}

		return protoResponse, nil
	}
}

=== File: wasmbindings/query_plugin_test.go ===

-- Chunk 1 --
// query_plugin_test.go:29-34
type StargateTestSuite struct {
	suite.Suite

	ctx sdk.Context
	app *xionapp.WasmApp
}

-- Chunk 2 --
// query_plugin_test.go:38-42
func (suite *StargateTestSuite) SetupTest() {
	suite.app = xionapp.Setup(suite.T())
	suite.ctx = suite.app.NewContext(true).WithBlockTime(time.Now())
	suite.app.Configurator()
}

-- Chunk 3 --
// query_plugin_test.go:44-46
func TestStargateTestSuite(t *testing.T) {
	suite.Run(t, new(StargateTestSuite))
}

-- Chunk 4 --
// query_plugin_test.go:48-72
func SetUpAudience(suite *StargateTestSuite) {
	privKey, err := wasmbinding.SetupKeys()
	suite.Require().NoError(err)
	jwkPrivKey, err := jwk.New(privKey)
	suite.Require().NoError(err)
	pubKey, err := jwkPrivKey.PublicKey()
	suite.NoError(err)
	err = pubKey.Set("alg", "RS256")
	suite.NoError(err)
	pubKeyJSON, err := json.Marshal(pubKey)
	suite.NoError(err)
	msgServer := jwkMsgServer.NewMsgServerImpl(suite.app.JwkKeeper)
	sum := sha256.Sum256([]byte("test-aud"))
	_, err = msgServer.CreateAudienceClaim(suite.ctx, &jwktypes.MsgCreateAudienceClaim{
		Admin:   admin,
		AudHash: sum[:],
	})
	suite.NoError(err)
	_, err = msgServer.CreateAudience(suite.ctx, &jwktypes.MsgCreateAudience{
		Admin: admin,
		Aud:   "test-aud",
		Key:   string(pubKeyJSON),
	})
	suite.NoError(err)
}

-- Chunk 5 --
// query_plugin_test.go:74-171
func (suite *StargateTestSuite) TestWebauthNStargateQuerier() {
	testCases := []struct {
		name                   string
		testSetup              func()
		path                   string
		requestData            func() []byte
		responseProtoStruct    proto.Message
		expectedQuerierError   bool
		expectedUnMarshalError bool
		resendRequest          bool
		checkResponseStruct    bool
	}{
		{
			name: "WebAuthNVerifyRegister",
			path: "/xion.v1.Query/WebAuthNVerifyRegister",
			requestData: func() []byte {
				bz, err := proto.Marshal(&xiontypes.QueryWebAuthNVerifyRegisterRequest{
					Addr:      "xion1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvq8akzpz",
					Rp:        "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
					Challenge: "eGlvbjF5bnU1enU3N3BqeXVqOXVlZXBxdzB2dmVxMmZwZDJ4cDZqZ3gwczdtMnJsY2d1eGxkeHZxOGFrenB6",
					Data:      []byte(`{"type":"public-key","id":"y0zUQQMndks_wh4naaNRL_PZJOFgwusbO2LYVVhHvZg","rawId":"y0zUQQMndks_wh4naaNRL_PZJOFgwusbO2LYVVhHvZg","authenticatorAttachment":"platform","response":{"clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiZUdsdmJqRjViblUxZW5VM04zQnFlWFZxT1hWbFpYQnhkekIyZG1WeE1tWndaREo0Y0RacVozZ3djemR0TW5Kc1kyZDFlR3hrZUhaeE9HRnJlbkI2Iiwib3JpZ2luIjoiaHR0cHM6Ly94aW9uLWRhcHAtZXhhbXBsZS1naXQtZmVhdC1mYWNlaWQtYnVybnRmaW5hbmNlLnZlcmNlbC5hcHAiLCJjcm9zc09yaWdpbiI6ZmFsc2V9","attestationObject":"o2NmbXRkbm9uZWdhdHRTdG10oGhhdXRoRGF0YViksGMBiDcEppiMfxQ10TPCe2-FaKrLeTkvpzxczngTMw1BAAAAAK3OAAI1vMYKZIsLJfHwVQMAIMtM1EEDJ3ZLP8IeJ2mjUS_z2SThYMLrGzti2FVYR72YpQECAyYgASFYIP00VX-FAxs2eClWYI-wgmmBwSt5qPduwIC6JqaVeEwwIlggzFwyKvRH0UvJTLzZQa0fKPr0gCdbT2A-nuNa0Jcp1_k","transports":["internal"]},"clientExtensionResults":{}}`),
				})
				suite.Require().NoError(err)
				return bz
			},
			responseProtoStruct: &xiontypes.QueryWebAuthNVerifyRegisterResponse{},
		},
		{
			name: "WebAuthNVerifyAuthenticate",
			path: "/xion.v1.Query/WebAuthNVerifyAuthenticate",
			requestData: func() []byte {
				bz, err := proto.Marshal(&xiontypes.QueryWebAuthNVerifyAuthenticateRequest{
					Addr:       "xion1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvq8akzpz",
					Challenge:  "eGlvbjF5bnU1enU3N3BqeXVqOXVlZXBxdzB2dmVxMmZwZDJ4cDZqZ3gwczdtMnJsY2d1eGxkeHZxOGFrenB6",
					Rp:         "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
					Credential: []byte(`{"ID":"y0zUQQMndks/wh4naaNRL/PZJOFgwusbO2LYVVhHvZg=","PublicKey":"pQECAyYgASFYIP00VX+FAxs2eClWYI+wgmmBwSt5qPduwIC6JqaVeEwwIlggzFwyKvRH0UvJTLzZQa0fKPr0gCdbT2A+nuNa0Jcp1/k=","AttestationType":"none","Transport":["internal"],"Flags":{"UserPresent":true,"UserVerified":false,"BackupEligible":false,"BackupState":false},"Authenticator":{"AAGUID":"rc4AAjW8xgpkiwsl8fBVAw==","SignCount":0,"CloneWarning":false,"Attachment":"platform"}}`),
					Data:       []byte(`{"type":"public-key","id":"y0zUQQMndks_wh4naaNRL_PZJOFgwusbO2LYVVhHvZg","rawId":"y0zUQQMndks_wh4naaNRL_PZJOFgwusbO2LYVVhHvZg","authenticatorAttachment":"platform","response":{"clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiZUdsdmJqRjViblUxZW5VM04zQnFlWFZxT1hWbFpYQnhkekIyZG1WeE1tWndaREo0Y0RacVozZ3djemR0TW5Kc1kyZDFlR3hrZUhaeE9HRnJlbkI2Iiwib3JpZ2luIjoiaHR0cHM6Ly94aW9uLWRhcHAtZXhhbXBsZS1naXQtZmVhdC1mYWNlaWQtYnVybnRmaW5hbmNlLnZlcmNlbC5hcHAiLCJjcm9zc09yaWdpbiI6ZmFsc2UsIm90aGVyX2tleXNfY2FuX2JlX2FkZGVkX2hlcmUiOiJkbyBub3QgY29tcGFyZSBjbGllbnREYXRhSlNPTiBhZ2FpbnN0IGEgdGVtcGxhdGUuIFNlZSBodHRwczovL2dvby5nbC95YWJQZXgifQ","authenticatorData":"sGMBiDcEppiMfxQ10TPCe2-FaKrLeTkvpzxczngTMw0BAAAAAA","signature":"MEUCIQC7pTqOWJ5zm40pJOr9W6Bi3xW27fs07mfr6LF_KSOUhgIgBDC3o0P1-7XjMsVFMLtI1a94i1-lkxwYN0W8T_bMxKs","userHandle":"eGlvbjF5bnU1enU3N3BqeXVqOXVlZXBxdzB2dmVxMmZwZDJ4cDZqZ3gwczdtMnJsY2d1eGxkeHZxOGFrenB6"},"clientExtensionResults":{}}`),
				})
				suite.Require().NoError(err)
				return bz
			},
			responseProtoStruct: &xiontypes.QueryWebAuthNVerifyRegisterResponse{},
		},

		// TODO: errors in wrong query in state machine
	}

	for _, tc := range testCases {
		suite.Run(fmt.Sprintf("Case %s", tc.name), func() {
			suite.SetupTest()
			if tc.testSetup != nil {
				tc.testSetup()
			}

			stargateQuerier := wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
			stargateRequest := &wasmvmtypes.StargateQuery{
				Path: tc.path,
				Data: tc.requestData(),
			}
			stargateResponse, err := stargateQuerier(suite.ctx, stargateRequest)
			if tc.expectedQuerierError {
				suite.Require().Error(err)
				return
			}
			if tc.checkResponseStruct {
				expectedResponse, err := proto.Marshal(tc.responseProtoStruct)
				suite.Require().NoError(err)
				expJSONResp, err := wasmbinding.ConvertProtoToJSONMarshal(tc.responseProtoStruct, expectedResponse, suite.app.AppCodec())
				suite.Require().NoError(err)
				suite.Require().Equal(expJSONResp, stargateResponse)
			}

			suite.Require().NoError(err)

			protoResponse := tc.responseProtoStruct

			// test correctness by unmarshalling json response into proto struct
			err = suite.app.AppCodec().UnmarshalJSON(stargateResponse, protoResponse)
			if tc.expectedUnMarshalError {
				suite.Require().Error(err)
			} else {
				suite.Require().NoError(err)
				suite.Require().NotNil(protoResponse)
			}

			if tc.resendRequest {
				stargateQuerier = wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
				stargateRequest = &wasmvmtypes.StargateQuery{
					Path: tc.path,
					Data: tc.requestData(),
				}
				resendResponse, err := stargateQuerier(suite.ctx, stargateRequest)
				suite.Require().NoError(err)
				suite.Require().Equal(stargateResponse, resendResponse)
			}
		})
	}
}

-- Chunk 6 --
// query_plugin_test.go:173-322
func (suite *StargateTestSuite) TestJWKStargateQuerier() {
	privKey, err := wasmbinding.SetupKeys()
	suite.Require().NoError(err)
	jwkPrivKey, err := jwk.New(privKey)
	suite.Require().NoError(err)
	publicKey, err := jwkPrivKey.PublicKey()
	suite.NoError(err)
	err = publicKey.Set("alg", "RS256")
	suite.NoError(err)
	publicKeyJSON, err := json.Marshal(publicKey)
	suite.NoError(err)

	testCases := []struct {
		name                   string
		testSetup              func()
		path                   string
		requestData            func() []byte
		responseProtoStruct    proto.Message
		expectedQuerierError   bool
		expectedUnMarshalError bool
		resendRequest          bool
		checkResponseStruct    bool
	}{
		{
			name: "JWKAudience",
			path: "/xion.jwk.v1.Query/Audience",
			requestData: func() []byte {
				bz, err := proto.Marshal(&jwktypes.QueryGetAudienceRequest{
					Aud: "test-aud",
				})
				suite.Require().NoError(err)
				return bz
			},
			testSetup: func() {
				SetUpAudience(suite)
			},
			responseProtoStruct: &jwktypes.QueryGetAudienceResponse{
				Audience: jwktypes.Audience{
					Admin: admin,
					Aud:   "test-aud",
					Key:   string(publicKeyJSON),
				},
			},
		},
		{
			name: "JWKAllAudience",
			path: "/xion.jwk.v1.Query/AudienceAll",
			requestData: func() []byte {
				bz, err := proto.Marshal(&jwktypes.QueryAllAudienceRequest{
					Pagination: &query.PageRequest{
						CountTotal: true,
					},
				})
				suite.Require().NoError(err)
				return bz
			},
			testSetup: func() {
				SetUpAudience(suite)
			},
			responseProtoStruct: &jwktypes.QueryAllAudienceResponse{
				Audience: []jwktypes.Audience{
					{
						Admin: admin,
						Aud:   "test-aud",
						Key:   string(publicKeyJSON),
					},
				},
				Pagination: &query.PageResponse{
					Total: 1,
				},
			},
		},
		{
			name: "JWKValidateJWT",
			path: "/xion.jwk.v1.Query/ValidateJWT",
			requestData: func() []byte {
				now := time.Now()
				fiveAgo := now.Add(-time.Second * 5)
				inFive := now.Add(time.Minute * 5)
				token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
					"iss":              "test-aud",
					"sub":              "subject",
					"aud":              "test-aud",
					"exp":              inFive.Unix(),
					"nbf":              fiveAgo.Unix(),
					"iat":              fiveAgo.Unix(),
					"transaction_hash": "test-tx-hash",
				})
				signedToken, err := token.SignedString(privKey)
				suite.Require().NoError(err)
				suite.NotEmpty(signedToken)
				bz, err := proto.Marshal(&jwktypes.QueryValidateJWTRequest{
					Aud:      "test-aud",
					Sub:      "subject",
					SigBytes: signedToken,
				})
				suite.Require().NoError(err)
				return bz
			},
			testSetup: func() {
				SetUpAudience(suite)
			},
			responseProtoStruct: &jwktypes.QueryValidateJWTResponse{},
		},

		// TODO: errors in wrong query in state machine
	}

	for _, tc := range testCases {
		suite.Run(fmt.Sprintf("Case %s", tc.name), func() {
			suite.SetupTest()
			if tc.testSetup != nil {
				tc.testSetup()
			}

			stargateQuerier := wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
			stargateRequest := &wasmvmtypes.StargateQuery{
				Path: tc.path,
				Data: tc.requestData(),
			}
			stargateResponse, err := stargateQuerier(suite.ctx, stargateRequest)
			if tc.expectedQuerierError {
				suite.Require().Error(err)
				return
			}
			if tc.checkResponseStruct {
				expectedResponse, err := proto.Marshal(tc.responseProtoStruct)
				suite.NoError(err)
				expJSONResp, err := wasmbinding.ConvertProtoToJSONMarshal(tc.responseProtoStruct, expectedResponse, suite.app.AppCodec())
				suite.Require().NoError(err)
				suite.Require().Equal(expJSONResp, stargateResponse)
			}

			suite.Require().NoError(err)

			protoResponse := tc.responseProtoStruct

			// test correctness by unmarshalling json response into proto struct
			err = suite.app.AppCodec().UnmarshalJSON(stargateResponse, protoResponse)
			if tc.expectedUnMarshalError {
				suite.Require().Error(err)
			} else {
				suite.Require().NoError(err)
				suite.Require().NotNil(protoResponse)
			}

			if tc.resendRequest {
				stargateQuerier = wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
				stargateRequest = &wasmvmtypes.StargateQuery{
					Path: tc.path,

-- Chunk 7 --
// query_plugin_test.go:323-331
					Data: tc.requestData(),
				}
				resendResponse, err := stargateQuerier(suite.ctx, stargateRequest)
				suite.Require().NoError(err)
				suite.Require().Equal(stargateResponse, resendResponse)
			}
		})
	}
}

-- Chunk 8 --
// query_plugin_test.go:333-349
func createAuthzGrants(suite *StargateTestSuite) {
	authzKeeper := suite.app.AuthzKeeper

	authorization, err := types.NewAnyWithValue(&authztypes.GenericAuthorization{
		Msg: "/" + string(proto.MessageReflect(&banktypes.MsgSend{}).Descriptor().FullName()),
	})
	suite.NoError(err)
	grantMsg := &authztypes.MsgGrant{
		Granter: "cosmos1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvqag9wce",
		Grantee: "cosmos1e2fuwe3uhq8zd9nkkk876nawrwdulgv4cxkq74",
		Grant: authztypes.Grant{
			Authorization: authorization,
		},
	}
	_, err = authzKeeper.Grant(suite.ctx, grantMsg)
	suite.NoError(err)
}

-- Chunk 9 --
// query_plugin_test.go:351-448
func (suite *StargateTestSuite) TestAuthzStargateQuerier() {
	testCases := []struct {
		name                   string
		testSetup              func()
		path                   string
		requestData            func() []byte
		responseProtoStruct    func() proto.Message
		expectedQuerierError   bool
		expectedUnMarshalError bool
		resendRequest          bool
		checkResponseStruct    bool
	}{
		{
			name: "AuthzGrants",
			path: "/cosmos.authz.v1beta1.Query/Grants",
			testSetup: func() {
				createAuthzGrants(suite)
			},
			responseProtoStruct: func() proto.Message {
				authorization, err := types.NewAnyWithValue(&authztypes.GenericAuthorization{
					Msg: "/" + string(proto.MessageReflect(&banktypes.MsgSend{}).Descriptor().FullName()),
				})
				suite.NoError(err)
				return &authztypes.QueryGrantsResponse{
					Grants: []*authztypes.Grant{
						{Authorization: authorization},
					},
					Pagination: &query.PageResponse{
						Total:   1,
						NextKey: nil,
					},
				}
			},
			requestData: func() []byte {
				bz, err := proto.Marshal(&authztypes.QueryGrantsRequest{
					Granter: "cosmos1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvqag9wce",
					Grantee: "cosmos1e2fuwe3uhq8zd9nkkk876nawrwdulgv4cxkq74",
				})
				if err != nil {
					panic(err)
				}
				return bz
			},
			checkResponseStruct: true,
		},
	}

	for _, tc := range testCases {
		suite.Run(fmt.Sprintf("Case %s", tc.name), func() {
			suite.SetupTest()
			if tc.testSetup != nil {
				tc.testSetup()
			}

			stargateQuerier := wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
			stargateRequest := &wasmvmtypes.StargateQuery{
				Path: tc.path,
				Data: tc.requestData(),
			}
			stargateResponse, err := stargateQuerier(suite.ctx, stargateRequest)
			if tc.expectedQuerierError {
				suite.Require().Error(err)
				return
			}
			if tc.checkResponseStruct {
				expectedResponse, err := proto.Marshal(tc.responseProtoStruct())
				suite.NoError(err)
				expJSONResp, err := wasmbinding.ConvertProtoToJSONMarshal(&authztypes.QueryGrantsResponse{}, expectedResponse, suite.app.AppCodec())
				suite.Require().NoError(err)
				suite.Require().Equal(expJSONResp, stargateResponse)
			}

			suite.Require().NoError(err)

			protoResponse := tc.responseProtoStruct()

			// test correctness by unmarshalling json response into proto struct
			err = suite.app.AppCodec().UnmarshalJSON(stargateResponse, protoResponse)
			if tc.expectedUnMarshalError {
				suite.Require().Error(err)
			} else {
				suite.Require().NoError(err)
				suite.Require().NotNil(protoResponse)
			}

			if tc.resendRequest {
				stargateQuerier = wasmbinding.StargateQuerier(*suite.app.GRPCQueryRouter(), suite.app.AppCodec())
				stargateRequest = &wasmvmtypes.StargateQuery{
					Path: tc.path,
					Data: tc.requestData(),
				}
				resendResponse, err := stargateQuerier(suite.ctx, stargateRequest)
				suite.Require().NoError(err)
				suite.Require().Equal(stargateResponse, resendResponse)
			}
		})
	}
}

=== File: wasmbindings/query_plugin.go ===

-- Chunk 1 --
// query_plugin.go:18-49
func StargateQuerier(queryRouter baseapp.GRPCQueryRouter, cdc codec.Codec) func(ctx sdk.Context, request *wasmvmtypes.StargateQuery) ([]byte, error) {
	return func(ctx sdk.Context, request *wasmvmtypes.StargateQuery) ([]byte, error) {
		protoResponseType, err := GetWhitelistedQuery(request.Path)
		if err != nil {
			return nil, err
		}

		route := queryRouter.Route(request.Path)
		if route == nil {
			return nil, wasmvmtypes.UnsupportedRequest{Kind: fmt.Sprintf("No route to query '%s'", request.Path)}
		}

		res, err := route(ctx, &abci.RequestQuery{
			Data: request.Data,
			Path: request.Path,
		})
		if err != nil {
			return nil, err
		}

		if res.Value == nil {
			return nil, fmt.Errorf("res returned from abci query route is nil")
		}

		bz, err := ConvertProtoToJSONMarshal(protoResponseType, res.Value, cdc)
		if err != nil {
			return nil, err
		}

		return bz, nil
	}
}

-- Chunk 2 --
// query_plugin.go:54-69
func ConvertProtoToJSONMarshal(protoResponseType proto.Message, bz []byte, cdc codec.Codec) ([]byte, error) {
	// unmarshal binary into stargate response data structure
	err := cdc.Unmarshal(bz, protoResponseType)
	if err != nil {
		return nil, wasmvmtypes.Unknown{}
	}

	bz, err = cdc.MarshalJSON(protoResponseType)
	if err != nil {
		return nil, wasmvmtypes.Unknown{}
	}

	protoResponseType.Reset()

	return bz, nil
}

=== File: wasmbindings/grpc_plugin_test.go ===

-- Chunk 1 --
// grpc_plugin_test.go:23-28
type GrpcTestSuite struct {
	suite.Suite

	ctx sdk.Context
	app *xionapp.WasmApp
}

-- Chunk 2 --
// grpc_plugin_test.go:30-34
func (suite *GrpcTestSuite) SetupTest() {
	suite.app = xionapp.Setup(suite.T())
	suite.ctx = suite.app.NewContext(true).WithBlockTime(time.Now())
	suite.app.Configurator()
}

-- Chunk 3 --
// grpc_plugin_test.go:36-38
func TestGrpcTestSuite(t *testing.T) {
	suite.Run(t, new(GrpcTestSuite))
}

-- Chunk 4 --
// grpc_plugin_test.go:40-56
func createAuthzGrantsGrpc(suite *GrpcTestSuite) {
	authzKeeper := suite.app.AuthzKeeper

	authorization, err := types.NewAnyWithValue(&authztypes.GenericAuthorization{
		Msg: "/" + proto.MessageName(&banktypes.MsgSend{}),
	})
	suite.NoError(err)
	grantMsg := &authztypes.MsgGrant{
		Granter: "cosmos1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvqag9wce",
		Grantee: "cosmos1e2fuwe3uhq8zd9nkkk876nawrwdulgv4cxkq74",
		Grant: authztypes.Grant{
			Authorization: authorization,
		},
	}
	_, err = authzKeeper.Grant(suite.ctx, grantMsg)
	suite.NoError(err)
}

-- Chunk 5 --
// grpc_plugin_test.go:58-144
func (suite *GrpcTestSuite) TestAuthzGrpcQuerier() {
	testCases := []struct {
		name                   string
		testSetup              func()
		path                   string
		requestData            func() []byte
		responseProtoStruct    func() proto.Message
		expectedQuerierError   bool
		expectedUnMarshalError bool
		resendRequest          bool
		checkResponseStruct    bool
	}{
		{
			name: "AuthzGrantsGrpc",
			path: "/cosmos.authz.v1beta1.Query/Grants",
			testSetup: func() {
				createAuthzGrantsGrpc(suite)
			},
			responseProtoStruct: func() proto.Message {
				authorization, err := types.NewAnyWithValue(&authztypes.GenericAuthorization{
					Msg: "/" + proto.MessageName(&banktypes.MsgSend{}),
				})
				suite.NoError(err)
				return &authztypes.QueryGrantsResponse{
					Grants: []*authztypes.Grant{
						{Authorization: authorization},
					},
					Pagination: &query.PageResponse{
						Total:   1,
						NextKey: nil,
					},
				}
			},
			requestData: func() []byte {
				bz, err := proto.Marshal(&authztypes.QueryGrantsRequest{
					Granter: "cosmos1ynu5zu77pjyuj9ueepqw0vveq2fpd2xp6jgx0s7m2rlcguxldxvqag9wce",
					Grantee: "cosmos1e2fuwe3uhq8zd9nkkk876nawrwdulgv4cxkq74",
				})
				if err != nil {
					panic(err)
				}
				return bz
			},
			checkResponseStruct: true,
		},
	}

	for _, tc := range testCases {
		suite.Run(fmt.Sprintf("Case %s", tc.name), func() {
			suite.SetupTest()
			if tc.testSetup != nil {
				tc.testSetup()
			}

			grpcQuerier := wasmbinding.GrpcQuerier(*suite.app.GRPCQueryRouter())
			grpcRequest := &wasmvmtypes.GrpcQuery{
				Path: tc.path,
				Data: tc.requestData(),
			}
			grpcResponse, err := grpcQuerier(suite.ctx, grpcRequest)
			if tc.expectedQuerierError {
				suite.Require().Error(err)
				return
			}
			suite.Require().NoError(err)

			if tc.checkResponseStruct {
				responseBz, err := proto.Marshal(grpcResponse)
				suite.Require().NoError(err)
				expectedResponseBz, err := proto.Marshal(tc.responseProtoStruct())
				suite.Require().NoError(err)
				suite.Require().Equal(responseBz, expectedResponseBz)
			}

			if tc.resendRequest {
				grpcQuerier = wasmbinding.GrpcQuerier(*suite.app.GRPCQueryRouter())
				grpcRequest = &wasmvmtypes.GrpcQuery{
					Path: tc.path,
					Data: tc.requestData(),
				}
				resendResponse, err := grpcQuerier(suite.ctx, grpcRequest)
				suite.Require().NoError(err)
				suite.Require().Equal(grpcResponse, resendResponse)
			}
		})
	}
}

=== File: wasmbindings/test_utils.go ===

-- Chunk 1 --
// test_utils.go:10-26
func SetupKeys() (*rsa.PrivateKey, error) {
	// CreateAudience
	privateKeyBz, err := os.ReadFile("./keys/jwtRS256.key")
	if err != nil {
		return nil, err
	}
	jwKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	if err != nil {
		return nil, err
	}
	var privateKey rsa.PrivateKey
	err = jwKey.Raw(&privateKey)
	if err != nil {
		return nil, err
	}
	return &privateKey, nil
}

-- Chunk 2 --
// test_utils.go:28-49
func SetupPublicKeys(rsaFile ...string) (*rsa.PrivateKey, jwk.Key, error) {
	// CreateAudience
	if rsaFile[0] == "" {
		rsaFile[0] = "./keys/jwtRS256.key"
	}
	privateKeyBz, err := os.ReadFile(rsaFile[0])
	if err != nil {
		return nil, nil, err
	}
	jwKey, err := jwk.ParseKey(privateKeyBz, jwk.WithPEM(true))
	if err != nil {
		return nil, nil, err
	}

	var privateKey rsa.PrivateKey
	err = jwKey.Raw(&privateKey)
	if err != nil {
		return nil, nil, err
	}

	return &privateKey, nil, nil
}

=== File: wasmbindings/stargate_whitelist.go ===

-- Chunk 1 --
// stargate_whitelist.go:38-89
func init() {
	// ibc queries
	setWhitelistedQuery("/ibc.applications.transfer.v1.Query/DenomTrace", &ibctransfertypes.QueryDenomTraceResponse{})

	// cosmos-sdk queries

	// auth
	setWhitelistedQuery("/cosmos.auth.v1beta1.Query/Account", &authtypes.QueryAccountResponse{})
	setWhitelistedQuery("/cosmos.auth.v1beta1.Query/Params", &authtypes.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.auth.v1beta1.Query/ModuleAccounts", &authtypes.QueryModuleAccountsResponse{})

	// authz
	setWhitelistedQuery("/cosmos.authz.v1beta1.Query/Grants", &authztypes.QueryGrantsResponse{})

	// bank
	setWhitelistedQuery("/cosmos.bank.v1beta1.Query/Balance", &banktypes.QueryBalanceResponse{})
	setWhitelistedQuery("/cosmos.bank.v1beta1.Query/DenomMetadata", &banktypes.QueryDenomMetadataResponse{})
	setWhitelistedQuery("/cosmos.bank.v1beta1.Query/DenomsMetadata", &banktypes.QueryDenomsMetadataResponse{})
	setWhitelistedQuery("/cosmos.bank.v1beta1.Query/Params", &banktypes.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.bank.v1beta1.Query/SupplyOf", &banktypes.QuerySupplyOfResponse{})

	// distribution
	setWhitelistedQuery("/cosmos.distribution.v1beta1.Query/Params", &distributiontypes.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.distribution.v1beta1.Query/DelegatorWithdrawAddress", &distributiontypes.QueryDelegatorWithdrawAddressResponse{})
	setWhitelistedQuery("/cosmos.distribution.v1beta1.Query/ValidatorCommission", &distributiontypes.QueryValidatorCommissionResponse{})

	// feegrant
	setWhitelistedQuery("/cosmos.feegrant.v1beta1.Query/Allowance", &feegranttypes.QueryAllowanceResponse{})
	setWhitelistedQuery("/cosmos.feegrant.v1beta1.Query/AllowancesByGranter", &feegranttypes.QueryAllowancesByGranterResponse{})

	// gov
	setWhitelistedQuery("/cosmos.gov.v1beta1.Query/Deposit", &govtypesv1.QueryDepositResponse{})
	setWhitelistedQuery("/cosmos.gov.v1beta1.Query/Params", &govtypesv1.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.gov.v1beta1.Query/Vote", &govtypesv1.QueryVoteResponse{})

	// slashing
	setWhitelistedQuery("/cosmos.slashing.v1beta1.Query/Params", &slashingtypes.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.slashing.v1beta1.Query/SigningInfo", &slashingtypes.QuerySigningInfoResponse{})

	// staking
	setWhitelistedQuery("/cosmos.staking.v1beta1.Query/Delegation", &stakingtypes.QueryDelegationResponse{})
	setWhitelistedQuery("/cosmos.staking.v1beta1.Query/Params", &stakingtypes.QueryParamsResponse{})
	setWhitelistedQuery("/cosmos.staking.v1beta1.Query/Validator", &stakingtypes.QueryValidatorResponse{})

	// xion queries
	setWhitelistedQuery("/xion.v1.Query/WebAuthNVerifyRegister", &xiontypes.QueryWebAuthNVerifyRegisterResponse{})
	setWhitelistedQuery("/xion.v1.Query/WebAuthNVerifyAuthenticate", &xiontypes.QueryWebAuthNVerifyAuthenticateResponse{})
	setWhitelistedQuery("/xion.jwk.v1.Query/AudienceAll", &jwktypes.QueryAllAudienceResponse{})
	setWhitelistedQuery("/xion.jwk.v1.Query/Audience", &jwktypes.QueryGetAudienceResponse{})
	setWhitelistedQuery("/xion.jwk.v1.Query/Params", &jwktypes.QueryParamsResponse{})
	setWhitelistedQuery("/xion.jwk.v1.Query/ValidateJWT", &jwktypes.QueryValidateJWTResponse{})
}

-- Chunk 2 --
// stargate_whitelist.go:93-103
func GetWhitelistedQuery(queryPath string) (proto.Message, error) {
	protoResponseAny, isWhitelisted := stargateWhitelist.Load(queryPath)
	if !isWhitelisted {
		return nil, wasmvmtypes.UnsupportedRequest{Kind: fmt.Sprintf("'%s' path is not allowed from the contract", queryPath)}
	}
	protoResponseType, ok := protoResponseAny.(proto.Message)
	if !ok {
		return nil, wasmvmtypes.Unknown{}
	}
	return protoResponseType, nil
}

-- Chunk 3 --
// stargate_whitelist.go:105-107
func setWhitelistedQuery(queryPath string, protoType proto.Message) {
	stargateWhitelist.Store(queryPath, protoType)
}

=== File: wasmbindings/keys/jwtRS256.key ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/wasmbindings/keys/jwtRS256.key:1-51
-----BEGIN RSA PRIVATE KEY-----
MIIJKAIBAAKCAgEAolg7TF3aai+wR4HTDe5oR+WRhEsdW3u+O3IJHl0BiHkmR4ML
skHG9HzivWoXsloUBnBMrFNxOH0x5cNMI07oi4PeRbHySiogRW9CXPjJaNlTi+pT
/IgKFsyJNXsLyzrnajLkDbQU6pRsHmNeL0hAOUv48rtXv8VVWWN8okJehD2q9N7L
HoFAOmIUEPg/VTHTt8K//O+9eMZKN4eMjh/4+sxRX6NXPSPT87XRlrK4GZ4pUdp8
6K0tOFLhwO4Uj0JkMNfI82eVZ1tAbDlqjd8jFnAb8fWm8wtdaTNbL/AAXmbDhsww
JOyrw8fARZIhrXSdKBWa6e4k7sLwTIy+OO8saebnlARsjGst7ZCzmw5KCm2ctEVl
3hYhHwyXu/A5rOblMrV3H0G7WqeKMCMVSJ11ssrlsmfVhNIwu1Qlt5GYmPTTJiCg
GUGRxZkgDyOyjFNHglYpZamCGyJ9oyofsukEGoqMQ6WzjFi/hjVapzXi7Li+Q0Oj
EopIUUDDgeUrgjbGY0eiHI6sAz5hoaD0Qjc9e3Hk6+y7VcKCTCAanZOlJV0vJkHB
98LBLh9qAoVUei/VaLFe2IcfVlrL/43aXlsHhr/SUQY5pHPlUMbQihE/57dpPRh3
1qDX/w6ye8dilniP8JmpKM2uIwnJ0x7hfJ45Qa0oLHmrGlzY9wi+RGP0YUkCAwEA
AQKCAgBdvr1fN8LsFmWgpSMOpGCrQ7Fnx0hIj4gmI4+IbQR5nhuwp8eVQ85zV7pG
zoCoiMOPhEGCMRzsFb8+givxJ5u5FIjBjiPvF6xS7BBSR4dmeDh6TvH4nUXWLH3+
1/LThEwlUwXFs/twCgz070Rv4TTU4T38TJo7LuQ+HejWeaTCkCmsBQsdrl08WW5k
7jUEKSWss1TR5k5u83Hf5vIPD/9iM6G5rESwFYRK8u74KnOMt3v8vEHsyjOWlqWu
FszgfOIGIlTz2Ri4+kSVOgKBshw81LgOXF/vcNyb5v/9CoXr/UNjD32tlM0K3Mn2
Yo/37aLihrdR5iaFiSPh0FP35ISsJwnIrYGPnOsxN6VMl2MfS0TfGRHvqcYV1xiD
D7MLVzAlUGcyOkPtzqgA84UjQEhvlrhfPXPtcn45Ynbj0Mdz0OygSd+WGMV8qUkK
k/pPD9ocZcQW9Hvn2uUEpjuV2mRSZ9L601WCDDCxReu8ZqbGPrmtcXV4CBNAan1z
mht3MD2se/x+F5JXiG/I4yldzOPSBoTia5Y9ycw8cpxwz7XlyIm6IyLEnlL4bFNd
UZDUTZy+ZfLgC+m5HrvJDGq1hHSehpFRf7mTnM1EGShOd5sShig73mrWmAaPWB5f
27t0SojWRGzYgdPEl+1THhsvxQdffKd0Z8OAt4vAQep9BV2mAQKCAQEA0ukT+Ee9
OJ6zaSdBgodDOFEo7HymtzDov+bcw+4gL+Gw6Q+l7J6atWytXWvMlAvcken2DHoe
LprMa5AYfMt5ExsybnX8wkR3HgxodfG7Zk/pDaE+ljPGfI1y+v/bJTkFTlpTvupE
+ycTOtBDxF5+LF/S3SzVl2ysIEtxXKpdX1rW2EeiRsrkCt74H1Shy/xxwngA9n5f
UrOx0Zd4wlPO62wdhM6edbK6QdXYqeBKVU2I9PnrqUNneMRgw6Yw4RiD4zJfffkI
vStxnv1mqD0lNXZqSB4CMI3Xpzm8DSrT53C1+IU+mlzQZLDOYjOUDxeFwK5u9CmE
rRU2BWmB26KrEQKCAQEAxQ0x4WBUlDHHpqbdjzns6VdFjOkMig7DgneZ+68Tv58r
v7XYMIPCxPgzK1xSdyM3EgvnSUmhh2SbRCX9aMTCa1W4t/ugBqayr7+ADzYzwWwV
bacaRdvfAZRNAaM2BejQljx41CQGAgnJfnGWUwA+x656EOIjGO8fsJjDm+lkL/MU
Vp2Kn6dwd0vjCiwbi/TuBAR+LweDTYKibpj74I90KkbYRUPSg/X5IheaMpg3VRJH
IpXcSbqr2yaailIJfoTlE3I9xqDcEdpc4Tn9cqIXtNOqXuBieeM6U7UW5T7Sdrt8
dEGeZEO5Hgk5C3wpjVMcvRp12VV552u1A8ywrMaiuQKCAQBZEd/CIaHSsIr6JH7w
/eiwdu3+eWH6yWfx6zBeekkTj4+jzVz4Qb76UWwhoO3js+KxqImlmUj3y5366v68
bT2ziO/SYHefH0Ti5sCS1sSan7K/c9I3oqP3Y9EkGTtWS+9muJTXcp4xJr5jPyLv
YiyM1ub5Sv7lFRrYBKRaSwRlyboj2pS4quSFhsZojNhLilAMnZtifdoJ1iOJbRut
jbE8EQuiU5PuBs3MEeCPVU5vGfB17LnOYM3o3Z4z4hKQbUb9gv969tnu8dLpHwDk
mfYFzv1xeWLZWH2zfJljQiv9eMcQrkzS6dGERHrUVA36FagByGjJKmOCqQuIW5dg
xyDRAoIBAFE9FmJvf481UrVvOArTe8vbsg3dCtFkMtB4FKDB1md67ON1yfJ+b+8a
0KXAwzLg7tRe2fTKCXEzVhvreaUW8Xyk86nOcHQth5+TWO1skDvfHpp9eQRyGGej
R3g0XJJlIJG/zqTPUTbH6C1cEPiZMkjKswKA6K1f8HWzFXoS574o/iqTetJFisV0
IN9Rve2ehf5cB9XFyClNgUANjFJRcjf3yzQLOSA0aYjXqDfRr4ZAKdmlZRN0hWOt
b6s1FTr2+SZiQ/u+19v4ZbBpYwc+sn1XgnbpFVBhEOvvzcendceDllSrtOxrS0eJ
z93fS5Y7PK7t2MZISiDRs+gkHHau0ekCggEBAI7Dq4IaaKF4FSYziuL4nrwtabyX
R42vN1fULd+gL5xWrkH0R6U38mQjUf8kgDrEiIbgHE38W/UNob3lul9aWPfb3nhC
pjDhg7WkB+79zWP4zKoZmXa7n+6DqaYBhJzJVIs9FmBKPOFuI/EGlCMD/FcnQu2O
sgA+ufWrO12MEvxUagG2ZJlGxwsREZvTSJcuqgC8E64gELlHsPN4rJP0fVwUgADe
xxiq9l/SAJOht/qPz9cm2BjRvgOui4USHa+GMN39q8uOCFkmWKx5CDqFXk8iyB5Z
wcYmLe1F7mUW1ST8FmHPbL1Bq77g/jg0iQTVMIyKIEj5QAmWSM0wLuZHBQk=
-----END RSA PRIVATE KEY-----

=== File: app/upgrades.go ===

-- Chunk 1 --
// upgrades.go:16-32
func (app *WasmApp) RegisterUpgradeHandlers() {
	app.WrapSetUpgradeHandler(UpgradeName)
	upgradeInfo, err := app.UpgradeKeeper.ReadUpgradeInfoFromDisk()
	if err != nil {
		panic(fmt.Sprintf("failed to read upgrade info from disk %s", err))
	}
	app.Logger().Info("upgrade info", "name", upgradeInfo.Name, "height", upgradeInfo.Height)

	if upgradeInfo.Name == UpgradeName {
		if !app.UpgradeKeeper.IsSkipHeight(upgradeInfo.Height) {
			storeUpgrades := storetypes.StoreUpgrades{}

			app.Logger().Info("setting upgrade store loaders")
			app.SetStoreLoader(upgradetypes.UpgradeStoreLoader(upgradeInfo.Height, &storeUpgrades))
		}
	}
}

-- Chunk 2 --
// upgrades.go:34-44
func (app *WasmApp) WrapSetUpgradeHandler(upgradeName string) {
	app.Logger().Info("setting upgrade handler", "name", upgradeName)
	app.UpgradeKeeper.SetUpgradeHandler(
		upgradeName,
		func(ctx context.Context, plan upgradetypes.Plan, fromVM module.VersionMap) (vm module.VersionMap, err error) {
			sdkCtx := sdk.UnwrapSDKContext(ctx)
			sdkCtx.Logger().Info("running module migrations", "name", plan.Name)
			return app.ModuleManager.RunMigrations(ctx, app.Configurator(), fromVM)
		},
	)
}

=== File: app/ante.go ===

-- Chunk 1 --
// ante.go:29-39
type HandlerOptions struct {
	ante.HandlerOptions

	IBCKeeper             *keeper.Keeper
	NodeConfig            *wasmTypes.NodeConfig
	TXCounterStoreService corestoretypes.KVStoreService
	GlobalFeeSubspace     paramtypes.Subspace
	StakingKeeper         *stakingkeeper.Keeper
	AbstractAccountKeeper aakeeper.Keeper
	FeeAbsKeeper          *feeabskeeper.Keeper
}

-- Chunk 2 --
// ante.go:41-104
func NewAnteHandler(options HandlerOptions) (sdk.AnteHandler, error) {
	if options.AccountKeeper == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "account keeper is required for AnteHandler")
	}
	if options.BankKeeper == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "bank keeper is required for AnteHandler")
	}
	if options.StakingKeeper == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "stakin keeper is required for AnteHandler")
	}
	if options.SignModeHandler == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "sign mode handler is required for ante builder")
	}
	if options.NodeConfig == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "wasm config is required for ante builder")
	}
	if options.GlobalFeeSubspace.Name() == "" {
		return nil, errorsmod.Wrap(sdkerrors.ErrNotFound, "globalfee param store is required for AnteHandler")
	}
	if options.TXCounterStoreService == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "wasm store service is required for ante builder")
	}
	if options.FeeAbsKeeper == nil {
		return nil, errorsmod.Wrap(sdkerrors.ErrLogic, "fee abstraction keeper is required for AnteHandler")
	}

	anteDecorators := []sdk.AnteDecorator{
		ante.NewSetUpContextDecorator(), // outermost AnteDecorator. SetUpContext must be called first
		wasmkeeper.NewLimitSimulationGasDecorator(options.NodeConfig.SimulationGasLimit), // after setup context to enforce limits early
		wasmkeeper.NewCountTXDecorator(options.TXCounterStoreService),
		ante.NewExtensionOptionsDecorator(options.ExtensionOptionChecker),
		// this changes the minGasFees,
		// and must occur before gas fee checks
		globalfeeante.NewFeeDecorator(options.GlobalFeeSubspace, func(context sdk.Context) string {
			bondDenom, err := options.StakingKeeper.BondDenom(context)
			if err != nil {
				panic(err)
			}
			return bondDenom
		}),
		feeabsante.NewFeeAbstrationMempoolFeeDecorator(*options.FeeAbsKeeper),

		// validation checks
		ante.NewValidateBasicDecorator(),
		ante.NewTxTimeoutHeightDecorator(),
		ante.NewValidateMemoDecorator(options.AccountKeeper),
		ante.NewConsumeGasForTxSizeDecorator(options.AccountKeeper),
		// fee abstraction fee deduction replaces sdk fee deduction
		feeabsante.NewFeeAbstractionDeductFeeDecorate(options.AccountKeeper, options.BankKeeper, *options.FeeAbsKeeper, options.FeegrantKeeper),
		ante.NewSetPubKeyDecorator(options.AccountKeeper), // SetPubKeyDecorator must be called before all signature verification decorators
		ante.NewValidateSigCountDecorator(options.AccountKeeper),
		ante.NewSigGasConsumeDecorator(options.AccountKeeper, options.SigGasConsumer),
		// BeforeTxDecorator replaces the default NewSigVerificationDecorator
		abstractaccount.NewBeforeTxDecorator(
			options.AbstractAccountKeeper,
			options.AccountKeeper,
			options.SignModeHandler,
		),
		ante.NewIncrementSequenceDecorator(options.AccountKeeper),
		ibcante.NewRedundantRelayDecorator(options.IBCKeeper),
	}

	return sdk.ChainAnteDecorators(anteDecorators...), nil
}

-- Chunk 3 --
// ante.go:106-111
type PostHandlerOptions struct {
	posthandler.HandlerOptions

	AccountKeeper         ante.AccountKeeper
	AbstractAccountKeeper aakeeper.Keeper
}

-- Chunk 4 --
// ante.go:113-123
func NewPostHandler(options PostHandlerOptions) (sdk.PostHandler, error) {
	if options.AccountKeeper == nil {
		return nil, sdkerrors.ErrLogic.Wrap("account keeper is required for AnteHandler")
	}

	postDecorators := []sdk.PostDecorator{
		abstractaccount.NewAfterTxDecorator(options.AbstractAccountKeeper),
	}

	return sdk.ChainPostDecorators(postDecorators...), nil
}

=== File: app/app.go ===

-- Chunk 1 --
// app.go:244-313
type WasmApp struct {
	*baseapp.BaseApp
	legacyAmino       *codec.LegacyAmino
	appCodec          codec.Codec
	txConfig          client.TxConfig
	interfaceRegistry types.InterfaceRegistry

	// keys to access the substores
	keys    map[string]*storetypes.KVStoreKey
	tkeys   map[string]*storetypes.TransientStoreKey
	memKeys map[string]*storetypes.MemoryStoreKey

	// keepers
	AccountKeeper         authkeeper.AccountKeeper
	BankKeeper            bankkeeper.BaseKeeper
	CapabilityKeeper      *capabilitykeeper.Keeper
	StakingKeeper         *stakingkeeper.Keeper
	SlashingKeeper        slashingkeeper.Keeper
	MintKeeper            mintkeeper.Keeper
	DistrKeeper           distrkeeper.Keeper
	GovKeeper             govkeeper.Keeper
	CrisisKeeper          *crisiskeeper.Keeper
	UpgradeKeeper         *upgradekeeper.Keeper
	ParamsKeeper          paramskeeper.Keeper
	AuthzKeeper           authzkeeper.Keeper
	EvidenceKeeper        evidencekeeper.Keeper
	FeeGrantKeeper        feegrantkeeper.Keeper
	GroupKeeper           groupkeeper.Keeper
	NFTKeeper             nftkeeper.Keeper
	ConsensusParamsKeeper consensusparamkeeper.Keeper

	IBCKeeper             *ibckeeper.Keeper // IBC Keeper must be a pointer in the app, so we can SetRouter on it correctly
	IBCFeeKeeper          ibcfeekeeper.Keeper
	ICAControllerKeeper   icacontrollerkeeper.Keeper
	ICAHostKeeper         icahostkeeper.Keeper
	TransferKeeper        ibctransferkeeper.Keeper
	WasmKeeper            wasmkeeper.Keeper
	WasmClientKeeper      ibcwasmkeeper.Keeper
	AbstractAccountKeeper aakeeper.Keeper
	IBCHooksKeeper        *ibchookskeeper.Keeper
	ContractKeeper        *wasmkeeper.PermissionedKeeper
	PacketForwardKeeper   *packetforwardkeeper.Keeper
	FeeAbsKeeper          feeabskeeper.Keeper

	XionKeeper         xionkeeper.Keeper
	JwkKeeper          jwkkeeper.Keeper
	TokenFactoryKeeper tokenfactorykeeper.Keeper

	ScopedIBCKeeper           capabilitykeeper.ScopedKeeper
	ScopedICAHostKeeper       capabilitykeeper.ScopedKeeper
	ScopedICAControllerKeeper capabilitykeeper.ScopedKeeper
	ScopedTransferKeeper      capabilitykeeper.ScopedKeeper
	ScopedIBCFeeKeeper        capabilitykeeper.ScopedKeeper
	ScopedWasmKeeper          capabilitykeeper.ScopedKeeper
	ScopedFeeabsKeeper        capabilitykeeper.ScopedKeeper

	// IBC middleware wrappers
	Ics20WasmHooks   *ibchooks.WasmHooks
	HooksICS4Wrapper ibchooks.ICS4Middleware

	// the module manager
	ModuleManager      *module.Manager
	BasicModuleManager module.BasicManager

	// simulation manager
	sm *module.SimulationManager

	// module configurator
	configurator module.Configurator
}

-- Chunk 2 --
// app.go:316-465
func NewWasmApp(
	logger log.Logger,
	db dbm.DB,
	traceStore io.Writer,
	loadLatest bool,
	appOpts servertypes.AppOptions,
	wasmOpts []wasmkeeper.Option,
	baseAppOptions ...func(*baseapp.BaseApp),
) *WasmApp {
	overrideWasmVariables()

	interfaceRegistry, err := types.NewInterfaceRegistryWithOptions(types.InterfaceRegistryOptions{
		ProtoFiles: proto.HybridResolver,
		SigningOptions: signing.Options{
			AddressCodec: address.Bech32Codec{
				Bech32Prefix: sdk.GetConfig().GetBech32AccountAddrPrefix(),
			},
			ValidatorAddressCodec: address.Bech32Codec{
				Bech32Prefix: sdk.GetConfig().GetBech32ValidatorAddrPrefix(),
			},
		},
	})
	if err != nil {
		panic(err)
	}
	appCodec := codec.NewProtoCodec(interfaceRegistry)
	legacyAmino := codec.NewLegacyAmino()
	txConfig := authtx.NewTxConfig(appCodec, authtx.DefaultSignModes)

	std.RegisterLegacyAminoCodec(legacyAmino)
	std.RegisterInterfaces(interfaceRegistry)

	baseAppOptions = append(baseAppOptions, baseapp.SetOptimisticExecution())

	bApp := baseapp.NewBaseApp(appName, logger, db, txConfig.TxDecoder(), baseAppOptions...)
	bApp.SetCommitMultiStoreTracer(traceStore)
	bApp.SetVersion(version.Version)
	bApp.SetInterfaceRegistry(interfaceRegistry)
	bApp.SetTxEncoder(txConfig.TxEncoder())

	keys := storetypes.NewKVStoreKeys(
		authtypes.StoreKey, banktypes.StoreKey, stakingtypes.StoreKey,
		crisistypes.StoreKey, minttypes.StoreKey, distrtypes.StoreKey,
		slashingtypes.StoreKey, govtypes.StoreKey, paramstypes.StoreKey,
		consensusparamtypes.StoreKey, upgradetypes.StoreKey, feegrant.StoreKey,
		evidencetypes.StoreKey, capabilitytypes.StoreKey, authzkeeper.StoreKey,
		nftkeeper.StoreKey, group.StoreKey,
		// non sdk store keys
		ibcexported.StoreKey, ibctransfertypes.StoreKey, ibcfeetypes.StoreKey,
		ibcwasmtypes.StoreKey, wasmtypes.StoreKey, icahosttypes.StoreKey,
		aatypes.StoreKey, icacontrollertypes.StoreKey, globalfee.StoreKey,
		xiontypes.StoreKey, ibchookstypes.StoreKey, packetforwardtypes.StoreKey,
		feeabstypes.StoreKey, jwktypes.StoreKey, tokenfactorytypes.StoreKey,
	)

	tkeys := storetypes.NewTransientStoreKeys(paramstypes.TStoreKey)
	memKeys := storetypes.NewMemoryStoreKeys(capabilitytypes.MemStoreKey)

	// register streaming services
	if err := bApp.RegisterStreamingServices(appOpts, keys); err != nil {
		panic(err)
	}

	app := &WasmApp{
		BaseApp:           bApp,
		legacyAmino:       legacyAmino,
		appCodec:          appCodec,
		txConfig:          txConfig,
		interfaceRegistry: interfaceRegistry,
		keys:              keys,
		tkeys:             tkeys,
		memKeys:           memKeys,
	}

	app.ParamsKeeper = initParamsKeeper(
		appCodec,
		legacyAmino,
		keys[paramstypes.StoreKey],
		tkeys[paramstypes.TStoreKey],
	)

	// set the BaseApp's parameter store
	app.ConsensusParamsKeeper = consensusparamkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[consensusparamtypes.StoreKey]),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		runtime.EventService{},
	)
	bApp.SetParamStore(app.ConsensusParamsKeeper.ParamsStore)

	// add capability keeper and ScopeToModule for ibc module
	app.CapabilityKeeper = capabilitykeeper.NewKeeper(
		appCodec,
		keys[capabilitytypes.StoreKey],
		memKeys[capabilitytypes.MemStoreKey],
	)

	scopedIBCKeeper := app.CapabilityKeeper.ScopeToModule(ibcexported.ModuleName)
	scopedICAHostKeeper := app.CapabilityKeeper.ScopeToModule(icahosttypes.SubModuleName)
	scopedICAControllerKeeper := app.CapabilityKeeper.ScopeToModule(icacontrollertypes.SubModuleName)
	scopedTransferKeeper := app.CapabilityKeeper.ScopeToModule(ibctransfertypes.ModuleName)
	scopedWasmKeeper := app.CapabilityKeeper.ScopeToModule(wasmtypes.ModuleName)
	scopedFeeabsKeeper := app.CapabilityKeeper.ScopeToModule(feeabstypes.ModuleName)
	app.CapabilityKeeper.Seal()

	// add keepers
	app.AccountKeeper = authkeeper.NewAccountKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[authtypes.StoreKey]),
		authtypes.ProtoBaseAccount,
		maccPerms,
		authcodec.NewBech32Codec(sdk.GetConfig().GetBech32AccountAddrPrefix()),
		sdk.GetConfig().GetBech32AccountAddrPrefix(),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)
	app.BankKeeper = bankkeeper.NewBaseKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[banktypes.StoreKey]),
		app.AccountKeeper,
		BlockedAddresses(),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		logger,
	)
	app.StakingKeeper = stakingkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[stakingtypes.StoreKey]),
		app.AccountKeeper,
		app.BankKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		authcodec.NewBech32Codec(sdk.GetConfig().GetBech32ValidatorAddrPrefix()),
		authcodec.NewBech32Codec(sdk.GetConfig().GetBech32ConsensusAddrPrefix()),
	)

	app.MintKeeper = mintkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[minttypes.StoreKey]),
		app.StakingKeeper,
		app.AccountKeeper,
		app.BankKeeper,
		authtypes.FeeCollectorName,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.DistrKeeper = distrkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[distrtypes.StoreKey]),
		app.AccountKeeper,
		app.BankKeeper,
		app.StakingKeeper,
		authtypes.FeeCollectorName,

-- Chunk 3 --
// app.go:466-615
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.SlashingKeeper = slashingkeeper.NewKeeper(
		appCodec,
		legacyAmino,
		runtime.NewKVStoreService(keys[slashingtypes.StoreKey]),
		app.StakingKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	invCheckPeriod := cast.ToUint(appOpts.Get(server.FlagInvCheckPeriod))
	app.CrisisKeeper = crisiskeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[crisistypes.StoreKey]),
		invCheckPeriod,
		app.BankKeeper,
		authtypes.FeeCollectorName,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		app.AccountKeeper.AddressCodec(),
	)

	app.FeeGrantKeeper = feegrantkeeper.NewKeeper(appCodec, runtime.NewKVStoreService(keys[feegrant.StoreKey]), app.AccountKeeper)

	// register the staking hooks
	// NOTE: stakingKeeper above is passed by reference, so that it will contain these hooks
	app.StakingKeeper.SetHooks(
		stakingtypes.NewMultiStakingHooks(app.DistrKeeper.Hooks(), app.SlashingKeeper.Hooks()),
	)

	app.AuthzKeeper = authzkeeper.NewKeeper(
		runtime.NewKVStoreService(keys[authzkeeper.StoreKey]),
		appCodec,
		app.MsgServiceRouter(),
		app.AccountKeeper,
	)
	app.AuthzKeeper = app.AuthzKeeper.SetBankKeeper(app.BankKeeper)

	groupConfig := group.DefaultConfig()
	/*
		Example of setting group params:
		groupConfig.MaxMetadataLen = 1000
	*/
	app.GroupKeeper = groupkeeper.NewKeeper(
		keys[group.StoreKey],
		appCodec,
		app.MsgServiceRouter(),
		app.AccountKeeper,
		groupConfig,
	)

	// get skipUpgradeHeights from the app options
	skipUpgradeHeights := map[int64]bool{}
	for _, h := range cast.ToIntSlice(appOpts.Get(server.FlagUnsafeSkipUpgrades)) {
		skipUpgradeHeights[int64(h)] = true
	}
	homePath := cast.ToString(appOpts.Get(flags.FlagHome))
	// set the governance module account as the authority for conducting upgrades
	app.UpgradeKeeper = upgradekeeper.NewKeeper(
		skipUpgradeHeights,
		runtime.NewKVStoreService(keys[upgradetypes.StoreKey]),
		appCodec,
		homePath,
		app.BaseApp,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.IBCKeeper = ibckeeper.NewKeeper(
		appCodec,
		keys[ibcexported.StoreKey],
		app.GetSubspace(ibcexported.ModuleName),
		app.StakingKeeper,
		app.UpgradeKeeper,
		scopedIBCKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.FeeAbsKeeper = feeabskeeper.NewKeeper(
		appCodec,
		keys[feeabstypes.StoreKey],
		app.GetSubspace(feeabstypes.ModuleName),
		app.StakingKeeper,
		app.AccountKeeper,
		app.BankKeeper,
		app.TransferKeeper,
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper,
		scopedFeeabsKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	feeabsModule := feeabs.NewAppModule(appCodec, app.FeeAbsKeeper)
	feeabsIBCModule := feeabs.NewIBCModule(appCodec, app.FeeAbsKeeper)

	// Register the proposal types
	// Deprecated: Avoid adding new handlers, instead use the new proposal flow
	// by granting the governance module the right to execute the message.
	// See: https://docs.cosmos.network/main/modules/gov#proposal-messages
	govRouter := govv1beta1.NewRouter()
	govRouter.AddRoute(govtypes.RouterKey, govv1beta1.ProposalHandler).
		AddRoute(paramproposal.RouterKey, params.NewParamChangeProposalHandler(app.ParamsKeeper)).
		AddRoute(feeabstypes.ModuleName, feeabs.NewHostZoneProposal(app.FeeAbsKeeper))
	govConfig := govtypes.DefaultConfig()
	/*
		Example of setting gov params:
		govConfig.MaxMetadataLen = 10000
	*/
	govKeeper := govkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[govtypes.StoreKey]),
		app.AccountKeeper,
		app.BankKeeper,
		app.StakingKeeper,
		app.DistrKeeper,
		app.MsgServiceRouter(),
		govConfig,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.GovKeeper = *govKeeper.SetHooks(
		govtypes.NewMultiGovHooks( // register the governance hooks
		),
	)

	app.NFTKeeper = nftkeeper.NewKeeper(
		runtime.NewKVStoreService(keys[nftkeeper.StoreKey]),
		appCodec,
		app.AccountKeeper,
		app.BankKeeper,
	)

	// create evidence keeper with router
	evidenceKeeper := evidencekeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[evidencetypes.StoreKey]),
		app.StakingKeeper,
		app.SlashingKeeper,
		app.AccountKeeper.AddressCodec(),
		runtime.ProvideCometInfoService(),
	)
	// If evidence needs to be handled for the app, set routes in router here and seal
	app.EvidenceKeeper = *evidenceKeeper

	app.JwkKeeper = jwkkeeper.NewKeeper(
		appCodec,
		keys[jwktypes.StoreKey],
		app.GetSubspace(jwktypes.ModuleName))

	app.TokenFactoryKeeper = tokenfactorykeeper.NewKeeper(
		appCodec,

-- Chunk 4 --
// app.go:616-765
		keys[tokenfactorytypes.StoreKey],
		maccPerms,
		app.AccountKeeper,
		app.BankKeeper,
		app.DistrKeeper,
		tokenFactoryCapabilities,
		func(_ context.Context, _ string) bool {
			return false
		},
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	// Configure the hooks keeper
	hooksKeeper := ibchookskeeper.NewKeeper(
		keys[ibchookstypes.StoreKey],
	)
	app.IBCHooksKeeper = &hooksKeeper

	xionPrefix := sdk.GetConfig().GetBech32AccountAddrPrefix()
	wasmHooks := ibchooks.NewWasmHooks(app.IBCHooksKeeper, nil, xionPrefix) // The contract keeper needs to be set later
	app.Ics20WasmHooks = &wasmHooks
	app.HooksICS4Wrapper = ibchooks.NewICS4Middleware(
		app.IBCKeeper.ChannelKeeper,
		app.Ics20WasmHooks,
	)

	// IBC Fee Module keeper
	app.IBCFeeKeeper = ibcfeekeeper.NewKeeper(
		appCodec, keys[ibcfeetypes.StoreKey],
		app.HooksICS4Wrapper, // replaced with IBC middleware
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper, app.AccountKeeper, app.BankKeeper,
	)

	// Initialize packet forward middleware router
	app.PacketForwardKeeper = packetforwardkeeper.NewKeeper(
		appCodec,
		keys[packetforwardtypes.StoreKey],
		app.TransferKeeper, // Will be zero-value here. Reference is set later on with SetTransferKeeper.
		app.IBCKeeper.ChannelKeeper,
		app.BankKeeper,
		app.IBCKeeper.ChannelKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	// Create Transfer Keepers
	app.TransferKeeper = ibctransferkeeper.NewKeeper(
		appCodec,
		keys[ibctransfertypes.StoreKey],
		app.GetSubspace(ibctransfertypes.ModuleName),
		app.IBCFeeKeeper, // ISC4 Wrapper: fee IBC middleware
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper,
		app.AccountKeeper,
		app.BankKeeper,
		scopedTransferKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.PacketForwardKeeper.SetTransferKeeper(app.TransferKeeper)

	app.ICAHostKeeper = icahostkeeper.NewKeeper(
		appCodec,
		keys[icahosttypes.StoreKey],
		app.GetSubspace(icahosttypes.SubModuleName),
		app.IBCFeeKeeper, // use ics29 fee as ics4Wrapper in middleware stack
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper,
		app.AccountKeeper,
		scopedICAHostKeeper,
		app.MsgServiceRouter(),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)
	app.ICAHostKeeper.WithQueryRouter(app.GRPCQueryRouter())

	app.ICAControllerKeeper = icacontrollerkeeper.NewKeeper(
		appCodec,
		keys[icacontrollertypes.StoreKey],
		app.GetSubspace(icacontrollertypes.SubModuleName),
		app.IBCFeeKeeper, // use ics29 fee as ics4Wrapper in middleware stack
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper,
		scopedICAControllerKeeper,
		app.MsgServiceRouter(),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	wasmDir := filepath.Join(homePath, "wasm")
	nodeConfig, err := wasm.ReadNodeConfig(appOpts)
	if err != nil {
		panic(fmt.Sprintf("error while reading wasm config: %s", err))
	}

	// The last arguments can contain custom message handlers, and custom query handlers,
	// if we want to allow any custom callbacks
	// See https://github.com/CosmWasm/cosmwasm/blob/main/docs/CAPABILITIES-BUILT-IN.md

	availableCapabilities := append(wasmkeeper.BuiltInCapabilities(), "token_factory")

	tokenFactoryOpts := bindings.RegisterCustomPlugins(app.BankKeeper, &app.TokenFactoryKeeper)
	wasmOpts = append(owasm.RegisterStargateQueries(*app.GRPCQueryRouter(), appCodec), wasmOpts...)
	wasmOpts = append(wasmOpts, tokenFactoryOpts...)

	// instantiate the Wasm VM with the chosen parameters
	// we need to create this double wasm dir because the wasmd Keeper appends an extra `wasm/` to the value you give it
	doubleWasmDir := filepath.Join(wasmDir, "wasm")
	wasmVM, err := wasmvm.NewVM(
		doubleWasmDir,
		availableCapabilities,
		WasmContractMemoryLimit, // default of 32
		nodeConfig.ContractDebugMode,
		nodeConfig.MemoryCacheSize,
	)
	if err != nil {
		panic(err)
	}

	wasmOpts = append(wasmOpts, wasmkeeper.WithWasmEngine(wasmVM))

	app.WasmKeeper = wasmkeeper.NewKeeper(
		appCodec,
		runtime.NewKVStoreService(keys[wasmtypes.StoreKey]),
		app.AccountKeeper,
		app.BankKeeper,
		app.StakingKeeper,
		distrkeeper.NewQuerier(app.DistrKeeper),
		app.IBCFeeKeeper, // ISC4 Wrapper: fee IBC middleware
		app.IBCKeeper.ChannelKeeper,
		app.IBCKeeper.PortKeeper,
		scopedWasmKeeper,
		app.TransferKeeper,
		app.MsgServiceRouter(),
		app.GRPCQueryRouter(),
		wasmDir,
		nodeConfig,
		wasmtypes.VMConfig{},
		availableCapabilities,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		wasmOpts...,
	)

	app.WasmClientKeeper = ibcwasmkeeper.NewKeeperWithVM(
		appCodec,
		runtime.NewKVStoreService(keys[ibcwasmtypes.StoreKey]),
		app.IBCKeeper.ClientKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
		wasmVM,
		app.GRPCQueryRouter(),
	)


-- Chunk 5 --
// app.go:766-915
	app.AbstractAccountKeeper = aakeeper.NewKeeper(
		appCodec,
		keys[aatypes.StoreKey],
		app.AccountKeeper,
		wasmkeeper.NewGovPermissionKeeper(app.WasmKeeper),
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	app.ContractKeeper = wasmkeeper.NewDefaultPermissionKeeper(app.WasmKeeper)
	app.Ics20WasmHooks.ContractKeeper = &app.WasmKeeper

	app.XionKeeper = xionkeeper.NewKeeper(
		appCodec,
		keys[xiontypes.StoreKey],
		app.GetSubspace(xiontypes.ModuleName),
		app.BankKeeper,
		app.AccountKeeper,
		app.ContractKeeper,
		app.WasmKeeper,
		app.AbstractAccountKeeper,
		authtypes.NewModuleAddress(govtypes.ModuleName).String())

	// Set legacy router for backwards compatibility with gov v1beta1
	app.GovKeeper.SetLegacyRouter(govRouter)

	// Create Transfer Stack
	var transferStack porttypes.IBCModule
	transferStack = transfer.NewIBCModule(app.TransferKeeper)
	transferStack = ibcfee.NewIBCMiddleware(transferStack, app.IBCFeeKeeper)
	transferStack = ibchooks.NewIBCMiddleware(transferStack, &app.HooksICS4Wrapper)
	transferStack = packetforward.NewIBCMiddleware(
		transferStack,
		app.PacketForwardKeeper,
		0,
		packetforwardkeeper.DefaultForwardTransferPacketTimeoutTimestamp,
	)

	// Create Interchain Accounts Stack
	// SendPacket, since it is originating from the application to core IBC:
	// icaAuthModuleKeeper.SendTx -> icaController.SendPacket -> fee.SendPacket -> channel.SendPacket
	var icaControllerStack porttypes.IBCModule
	// integration point for custom authentication modules
	// see https://medium.com/the-interchain-foundation/ibc-go-v6-changes-to-interchain-accounts-and-how-it-impacts-your-chain-806c185300d7
	var noAuthzModule porttypes.IBCModule
	icaControllerStack = icacontroller.NewIBCMiddleware(noAuthzModule, app.ICAControllerKeeper)
	icaControllerStack = ibcfee.NewIBCMiddleware(icaControllerStack, app.IBCFeeKeeper)

	// RecvPacket, message that originates from core IBC and goes down to app, the flow is:
	// channel.RecvPacket -> fee.OnRecvPacket -> icaHost.OnRecvPacket
	var icaHostStack porttypes.IBCModule
	icaHostStack = icahost.NewIBCModule(app.ICAHostKeeper)
	icaHostStack = ibcfee.NewIBCMiddleware(icaHostStack, app.IBCFeeKeeper)

	// Create fee enabled wasm ibc Stack
	var wasmStack porttypes.IBCModule
	wasmStack = wasm.NewIBCHandler(app.WasmKeeper, app.IBCKeeper.ChannelKeeper, app.IBCFeeKeeper)
	wasmStack = ibcfee.NewIBCMiddleware(wasmStack, app.IBCFeeKeeper)

	// Create static IBC router, add app routes, then set and seal it
	ibcRouter := porttypes.NewRouter().
		AddRoute(ibctransfertypes.ModuleName, transferStack).
		AddRoute(wasmtypes.ModuleName, wasmStack).
		AddRoute(icacontrollertypes.SubModuleName, icaControllerStack).
		AddRoute(icahosttypes.SubModuleName, icaHostStack).
		AddRoute(feeabstypes.ModuleName, feeabsIBCModule)
	app.IBCKeeper.SetRouter(ibcRouter)

	/****  Module Options ****/

	// NOTE: we may consider parsing `appOpts` inside module constructors. For the moment
	// we prefer to be more strict in what arguments the modules expect.
	skipGenesisInvariants := cast.ToBool(appOpts.Get(crisis.FlagSkipGenesisInvariants))

	// NOTE: Any module instantiated in the module manager that is later modified
	// must be passed by reference here.
	app.ModuleManager = module.NewManager(
		genutil.NewAppModule(
			app.AccountKeeper,
			app.StakingKeeper,
			app,
			txConfig,
		),
		auth.NewAppModule(appCodec, app.AccountKeeper, authsims.RandomGenesisAccounts, app.GetSubspace(authtypes.ModuleName)),
		vesting.NewAppModule(app.AccountKeeper, app.BankKeeper),
		bank.NewAppModule(appCodec, app.BankKeeper, app.AccountKeeper, app.GetSubspace(banktypes.ModuleName)),
		capability.NewAppModule(appCodec, *app.CapabilityKeeper, false),
		feegrantmodule.NewAppModule(appCodec, app.AccountKeeper, app.BankKeeper, app.FeeGrantKeeper, app.interfaceRegistry),
		gov.NewAppModule(appCodec, &app.GovKeeper, app.AccountKeeper, app.BankKeeper, app.GetSubspace(govtypes.ModuleName)),
		mint.NewAppModule(appCodec, app.MintKeeper, app.AccountKeeper, nil, app.GetSubspace(minttypes.ModuleName)),
		slashing.NewAppModule(appCodec, app.SlashingKeeper, app.AccountKeeper, app.BankKeeper, app.StakingKeeper, app.GetSubspace(slashingtypes.ModuleName), app.interfaceRegistry),
		distr.NewAppModule(appCodec, app.DistrKeeper, app.AccountKeeper, app.BankKeeper, app.StakingKeeper, app.GetSubspace(distrtypes.ModuleName)),
		staking.NewAppModule(appCodec, app.StakingKeeper, app.AccountKeeper, app.BankKeeper, app.GetSubspace(stakingtypes.ModuleName)),
		upgrademodule.NewAppModule(app.UpgradeKeeper, app.AccountKeeper.AddressCodec()),
		evidence.NewAppModule(app.EvidenceKeeper),
		params.NewAppModule(app.ParamsKeeper),
		authzmodule.NewAppModule(appCodec, app.AuthzKeeper, app.AccountKeeper, app.BankKeeper, app.interfaceRegistry),
		groupmodule.NewAppModule(appCodec, app.GroupKeeper, app.AccountKeeper, app.BankKeeper, app.interfaceRegistry),
		nftmodule.NewAppModule(appCodec, app.NFTKeeper, app.AccountKeeper, app.BankKeeper, app.interfaceRegistry),
		consensus.NewAppModule(appCodec, app.ConsensusParamsKeeper),
		tokenfactory.NewAppModule(app.TokenFactoryKeeper, app.AccountKeeper, app.BankKeeper, app.GetSubspace(tokenfactorytypes.ModuleName)),
		jwk.NewAppModule(appCodec, app.JwkKeeper, app.GetSubspace(jwktypes.ModuleName)),
		globalfee.NewAppModule(app.GetSubspace(globalfee.ModuleName)),
		wasm.NewAppModule(appCodec, &app.WasmKeeper, app.StakingKeeper, app.AccountKeeper, app.BankKeeper, app.MsgServiceRouter(), app.GetSubspace(wasmtypes.ModuleName)),
		aa.NewAppModule(app.AbstractAccountKeeper),
		xion.NewAppModule(app.XionKeeper),
		ibc.NewAppModule(app.IBCKeeper),
		ibctm.NewAppModule(),
		ibcwasm.NewAppModule(app.WasmClientKeeper),
		transfer.NewAppModule(app.TransferKeeper),
		ibcfee.NewAppModule(app.IBCFeeKeeper),
		ica.NewAppModule(&app.ICAControllerKeeper, &app.ICAHostKeeper),
		ibchooks.NewAppModule(app.AccountKeeper),
		packetforward.NewAppModule(app.PacketForwardKeeper, app.GetSubspace(packetforwardtypes.ModuleName)),
		feeabsModule,
		crisis.NewAppModule(app.CrisisKeeper, skipGenesisInvariants, app.GetSubspace(crisistypes.ModuleName)), // always be last to make sure that it checks for all invariants and not only part of them
	)

	// BasicModuleManager defines the module BasicManager is in charge of setting up basic,
	// non-dependant module elements, such as codec registration and genesis verification.
	// By default, it is composed of all the module from the module manager.
	// Additionally, app module basics can be overwritten by passing them as argument.
	app.BasicModuleManager = module.NewBasicManagerFromManager(
		app.ModuleManager,
		map[string]module.AppModuleBasic{
			genutiltypes.ModuleName: genutil.NewAppModuleBasic(genutiltypes.DefaultMessageValidator),
			govtypes.ModuleName: gov.NewAppModuleBasic(
				[]govclient.ProposalHandler{
					paramsclient.ProposalHandler,
				},
			),
		})
	app.BasicModuleManager.RegisterLegacyAminoCodec(legacyAmino)
	app.BasicModuleManager.RegisterInterfaces(interfaceRegistry)

	// NOTE: upgrade module is required to be prioritized
	app.ModuleManager.SetOrderPreBlockers(
		upgradetypes.ModuleName,
	)
	// During begin block slashing happens after distr.BeginBlocker so that
	// there is nothing left over in the validator fee pool, to keep the
	// CanWithdrawInvariant invariant.
	// NOTE: staking module is required if HistoricalEntries param > 0
	// NOTE: capability module's beginblocker must come before any modules using capabilities (e.g. IBC)
	app.ModuleManager.SetOrderBeginBlockers(
		capabilitytypes.ModuleName,
		minttypes.ModuleName, distrtypes.ModuleName, slashingtypes.ModuleName,
		evidencetypes.ModuleName, stakingtypes.ModuleName, authtypes.ModuleName,
		banktypes.ModuleName, govtypes.ModuleName, crisistypes.ModuleName,
		genutiltypes.ModuleName, authz.ModuleName, feegrant.ModuleName,
		nft.ModuleName, group.ModuleName, paramstypes.ModuleName,

-- Chunk 6 --
// app.go:916-1065
		vestingtypes.ModuleName, consensusparamtypes.ModuleName,
		tokenfactorytypes.ModuleName,
		globalfee.ModuleName,
		jwktypes.ModuleName,
		// additional non simd modules
		ibctransfertypes.ModuleName,
		ibcexported.ModuleName,
		feeabstypes.ModuleName,
		icatypes.ModuleName,
		ibcfeetypes.ModuleName,
		ibcwasmtypes.ModuleName,
		wasmtypes.ModuleName,
		aatypes.ModuleName,
		xiontypes.ModuleName,
		ibchookstypes.ModuleName,
		packetforwardtypes.ModuleName,
	)

	app.ModuleManager.SetOrderEndBlockers(
		crisistypes.ModuleName, govtypes.ModuleName, stakingtypes.ModuleName,
		capabilitytypes.ModuleName, authtypes.ModuleName, banktypes.ModuleName,
		distrtypes.ModuleName, slashingtypes.ModuleName, minttypes.ModuleName,
		genutiltypes.ModuleName, evidencetypes.ModuleName, authz.ModuleName,
		feegrant.ModuleName, nft.ModuleName, group.ModuleName,
		paramstypes.ModuleName, upgradetypes.ModuleName, vestingtypes.ModuleName,
		consensusparamtypes.ModuleName,
		tokenfactorytypes.ModuleName,
		globalfee.ModuleName,
		xiontypes.ModuleName,
		jwktypes.ModuleName,
		// additional non simd modules
		ibctransfertypes.ModuleName,
		ibcexported.ModuleName,
		feeabstypes.ModuleName,
		icatypes.ModuleName,
		ibcfeetypes.ModuleName,
		ibcwasmtypes.ModuleName,
		wasmtypes.ModuleName,
		aatypes.ModuleName,
		ibchookstypes.ModuleName,
		packetforwardtypes.ModuleName,
	)

	// NOTE: The genutils module must occur after staking so that pools are
	// properly initialized with tokens from genesis accounts.
	// NOTE: The genutils module must also occur after auth so that it can access the params from auth.
	// NOTE: Capability module must occur first so that it can initialize any capabilities
	// so that other modules that want to create or claim capabilities afterwards in InitChain
	// can do so safely.
	// NOTE: wasm module should be at the end as it can call other module functionality direct or via message dispatching during
	// genesis phase. For example bank transfer, auth account check, staking, ...
	genesisModuleOrder := []string{
		capabilitytypes.ModuleName, authtypes.ModuleName, banktypes.ModuleName,
		distrtypes.ModuleName, stakingtypes.ModuleName, slashingtypes.ModuleName,
		govtypes.ModuleName, minttypes.ModuleName, crisistypes.ModuleName,
		genutiltypes.ModuleName, evidencetypes.ModuleName, authz.ModuleName,
		feegrant.ModuleName, nft.ModuleName, group.ModuleName,
		paramstypes.ModuleName, upgradetypes.ModuleName, vestingtypes.ModuleName,
		consensusparamtypes.ModuleName,
		tokenfactorytypes.ModuleName,
		globalfee.ModuleName, xiontypes.ModuleName,
		jwktypes.ModuleName,
		// additional non simd modules
		ibctransfertypes.ModuleName,
		ibcexported.ModuleName,
		feeabstypes.ModuleName,
		icatypes.ModuleName,
		ibcfeetypes.ModuleName,
		ibcwasmtypes.ModuleName,
		// wasm after ibc transfer
		wasmtypes.ModuleName,
		aatypes.ModuleName,
		ibchookstypes.ModuleName,
		packetforwardtypes.ModuleName,
	}
	app.ModuleManager.SetOrderInitGenesis(genesisModuleOrder...)
	app.ModuleManager.SetOrderExportGenesis(genesisModuleOrder...)

	// Uncomment if you want to set a custom migration order here.
	// app.ModuleManager.SetOrderMigrations(custom order)

	app.ModuleManager.RegisterInvariants(app.CrisisKeeper)
	app.configurator = module.NewConfigurator(app.appCodec, app.MsgServiceRouter(), app.GRPCQueryRouter())
	err = app.ModuleManager.RegisterServices(app.configurator)
	if err != nil {
		panic(err)
	}

	// RegisterUpgradeHandlers is used for registering any on-chain upgrades.
	// Make sure it's called after `app.ModuleManager` and `app.configurator` are set.
	app.RegisterUpgradeHandlers()

	autocliv1.RegisterQueryServer(app.GRPCQueryRouter(), runtimeservices.NewAutoCLIQueryService(app.ModuleManager.Modules))

	reflectionSvc, err := runtimeservices.NewReflectionService()
	if err != nil {
		panic(err)
	}
	reflectionv1.RegisterReflectionServiceServer(app.GRPCQueryRouter(), reflectionSvc)

	// add test gRPC service for testing gRPC queries in isolation
	// testdata_pulsar.RegisterQueryServer(app.GRPCQueryRouter(), testdata_pulsar.QueryImpl{})

	// create the simulation manager and define the order of the modules for deterministic simulations
	//
	// NOTE: this is not required apps that don't use the simulator for fuzz testing
	// transactions
	overrideModules := map[string]module.AppModuleSimulation{
		authtypes.ModuleName: auth.NewAppModule(app.appCodec, app.AccountKeeper, authsims.RandomGenesisAccounts, app.GetSubspace(authtypes.ModuleName)),
	}
	app.sm = module.NewSimulationManagerFromAppModules(app.ModuleManager.Modules, overrideModules)

	app.sm.RegisterStoreDecoders()

	// initialize stores
	app.MountKVStores(keys)
	app.MountTransientStores(tkeys)
	app.MountMemoryStores(memKeys)

	// initialize BaseApp
	app.SetInitChainer(app.InitChainer)
	app.SetPreBlocker(app.PreBlocker)
	app.SetBeginBlocker(app.BeginBlocker)
	app.SetEndBlocker(app.EndBlocker)
	app.setAnteHandler(txConfig, nodeConfig, keys[wasmtypes.StoreKey])

	// must be before Loading version
	// requires the snapshot store to be created and registered as a BaseAppOption
	// see cmd/xiond/root.go: 206 - 214 approx
	if manager := app.SnapshotManager(); manager != nil {
		err := manager.RegisterExtensions(
			wasmkeeper.NewWasmSnapshotter(app.CommitMultiStore(), &app.WasmKeeper),
		)
		if err != nil {
			panic(fmt.Errorf("failed to register snapshot extension: %s", err))
		}
	}

	app.ScopedIBCKeeper = scopedIBCKeeper
	app.ScopedTransferKeeper = scopedTransferKeeper
	app.ScopedWasmKeeper = scopedWasmKeeper
	app.ScopedICAHostKeeper = scopedICAHostKeeper
	app.ScopedICAControllerKeeper = scopedICAControllerKeeper

	// set the contract keeper for the Ics20WasmHooks
	app.ContractKeeper = wasmkeeper.NewDefaultPermissionKeeper(app.WasmKeeper)
	app.Ics20WasmHooks.ContractKeeper = &app.WasmKeeper

	// In v0.46, the SDK introduces _postHandlers_. PostHandlers are like
	// antehandlers, but are run _after_ the `runMsgs` execution. They are also

-- Chunk 7 --
// app.go:1066-1098
	// defined as a chain, and have the same signature as antehandlers.
	//
	// In baseapp, postHandlers are run in the same store branch as `runMsgs`,
	// meaning that both `runMsgs` and `postHandler` state will be committed if
	// both are successful, and both will be reverted if any of the two fails.
	//
	// The SDK exposes a default postHandlers chain, which comprises of only
	// one decorator: the Transaction Tips decorator. However, some chains do
	// not need it by default, so feel free to comment the next line if you do
	// not need tips.
	// To read more about tips:
	// https://docs.cosmos.network/main/core/tips.html
	//
	// Please note that changing any of the anteHandler or postHandler chain is
	// likely to be a state-machine breaking change, which needs a coordinated
	// upgrade.
	app.setPostHandler()

	if loadLatest {
		if err := app.LoadLatestVersion(); err != nil {
			logger.Error("error on loading last version", "err", err)
			os.Exit(1)
		}
		ctx := app.BaseApp.NewUncachedContext(true, tmproto.Header{})

		// Initialize pinned codes in wasmvm as they are not persisted there
		if err := app.WasmKeeper.InitializePinnedCodes(ctx); err != nil {
			tmos.Exit(fmt.Sprintf("failed to initialize pinned codes %s", err))
		}
	}

	return app
}

-- Chunk 8 --
// app.go:1100-1124
func (app *WasmApp) setAnteHandler(txConfig client.TxConfig, nodeConfig wasmtypes.NodeConfig, txCounterStoreKey *storetypes.KVStoreKey) {
	anteHandler, err := NewAnteHandler(
		HandlerOptions{
			HandlerOptions: ante.HandlerOptions{
				AccountKeeper:   app.AccountKeeper,
				BankKeeper:      app.BankKeeper,
				SignModeHandler: txConfig.SignModeHandler(),
				FeegrantKeeper:  app.FeeGrantKeeper,
				SigGasConsumer:  aa.SigVerificationGasConsumer,
			},

			AbstractAccountKeeper: app.AbstractAccountKeeper,
			IBCKeeper:             app.IBCKeeper,
			NodeConfig:            &nodeConfig,
			TXCounterStoreService: runtime.NewKVStoreService(txCounterStoreKey),
			GlobalFeeSubspace:     app.GetSubspace(globalfee.ModuleName),
			StakingKeeper:         app.StakingKeeper,
			FeeAbsKeeper:          &app.FeeAbsKeeper,
		},
	)
	if err != nil {
		panic(fmt.Errorf("failed to create AnteHandler: %s", err))
	}
	app.SetAnteHandler(anteHandler)
}

-- Chunk 9 --
// app.go:1126-1139
func (app *WasmApp) setPostHandler() {
	postHandler, err := NewPostHandler(
		PostHandlerOptions{
			HandlerOptions:        posthandler.HandlerOptions{},
			AccountKeeper:         app.AccountKeeper,
			AbstractAccountKeeper: app.AbstractAccountKeeper,
		},
	)
	if err != nil {
		panic(err)
	}

	app.SetPostHandler(postHandler)
}

-- Chunk 10 --
// app.go:1142-1142
func (app *WasmApp) Name() string { return app.BaseApp.Name() }

-- Chunk 11 --
// app.go:1145-1147
func (app *WasmApp) PreBlocker(ctx sdk.Context, _ *abci.RequestFinalizeBlock) (*sdk.ResponsePreBlock, error) {
	return app.ModuleManager.PreBlock(ctx)
}

-- Chunk 12 --
// app.go:1150-1152
func (app *WasmApp) BeginBlocker(ctx sdk.Context) (sdk.BeginBlock, error) {
	return app.ModuleManager.BeginBlock(ctx)
}

-- Chunk 13 --
// app.go:1155-1157
func (app *WasmApp) EndBlocker(ctx sdk.Context) (sdk.EndBlock, error) {
	return app.ModuleManager.EndBlock(ctx)
}

-- Chunk 14 --
// app.go:1159-1161
func (app *WasmApp) Configurator() module.Configurator {
	return app.configurator
}

-- Chunk 15 --
// app.go:1164-1175
func (app *WasmApp) InitChainer(ctx sdk.Context, req *abci.RequestInitChain) (*abci.ResponseInitChain, error) {
	var genesisState GenesisState
	if err := json.Unmarshal(req.AppStateBytes, &genesisState); err != nil {
		panic(err)
	}
	err := app.UpgradeKeeper.SetModuleVersionMap(ctx, app.ModuleManager.GetVersionMap())
	if err != nil {
		panic(err)
	}
	response, err := app.ModuleManager.InitGenesis(ctx, app.appCodec, genesisState)
	return response, err
}

-- Chunk 16 --
// app.go:1178-1180
func (app *WasmApp) LoadHeight(height int64) error {
	return app.LoadVersion(height)
}

-- Chunk 17 --
// app.go:1186-1188
func (app *WasmApp) LegacyAmino() *codec.LegacyAmino {
	return app.legacyAmino
}

-- Chunk 18 --
// app.go:1194-1196
func (app *WasmApp) AppCodec() codec.Codec {
	return app.appCodec
}

-- Chunk 19 --
// app.go:1199-1201
func (app *WasmApp) InterfaceRegistry() types.InterfaceRegistry {
	return app.interfaceRegistry
}

-- Chunk 20 --
// app.go:1204-1206
func (app *WasmApp) TxConfig() client.TxConfig {
	return app.txConfig
}

-- Chunk 21 --
// app.go:1209-1211
func (app *WasmApp) DefaultGenesis() map[string]json.RawMessage {
	return app.BasicModuleManager.DefaultGenesis(app.appCodec)
}

-- Chunk 22 --
// app.go:1216-1218
func (app *WasmApp) GetKey(storeKey string) *storetypes.KVStoreKey {
	return app.keys[storeKey]
}

-- Chunk 23 --
// app.go:1223-1225
func (app *WasmApp) GetTKey(storeKey string) *storetypes.TransientStoreKey {
	return app.tkeys[storeKey]
}

-- Chunk 24 --
// app.go:1230-1232
func (app *WasmApp) GetMemKey(storeKey string) *storetypes.MemoryStoreKey {
	return app.memKeys[storeKey]
}

-- Chunk 25 --
// app.go:1237-1240
func (app *WasmApp) GetSubspace(moduleName string) paramstypes.Subspace {
	subspace, _ := app.ParamsKeeper.GetSubspace(moduleName)
	return subspace
}

-- Chunk 26 --
// app.go:1243-1245
func (app *WasmApp) SimulationManager() *module.SimulationManager {
	return app.sm
}

-- Chunk 27 --
// app.go:1249-1267
func (app *WasmApp) RegisterAPIRoutes(apiSvr *api.Server, apiConfig config.APIConfig) {
	clientCtx := apiSvr.ClientCtx
	// Register new tx routes from grpc-gateway.
	authtx.RegisterGRPCGatewayRoutes(clientCtx, apiSvr.GRPCGatewayRouter)

	// Register new tendermint queries routes from grpc-gateway.
	cmtservice.RegisterGRPCGatewayRoutes(clientCtx, apiSvr.GRPCGatewayRouter)

	// Register node gRPC service for grpc-gateway.
	nodeservice.RegisterGRPCGatewayRoutes(clientCtx, apiSvr.GRPCGatewayRouter)

	// Register grpc-gateway routes for all modules.
	app.BasicModuleManager.RegisterGRPCGatewayRoutes(clientCtx, apiSvr.GRPCGatewayRouter)

	// register swagger API from root so that other applications can override easily
	if err := RegisterSwaggerAPI(clientCtx, apiSvr.Router, apiConfig.Swagger); err != nil {
		panic(err)
	}
}

-- Chunk 28 --
// app.go:1270-1286
func RegisterSwaggerAPI(_ client.Context, rtr *mux.Router, swaggerEnabled bool) error {
	if swaggerEnabled {
		docsServer := http.FileServer(http.FS(docs.Docs))
		rtr.Handle("/static", docsServer)
		rtr.Handle("/static/", docsServer)
		rtr.Handle("/static/swagger.json", docsServer)
		rtr.Handle("/static/openapi.json", docsServer)

		rtr.PathPrefix("/static").Handler(http.StripPrefix("/static/", docsServer))
		rtr.PathPrefix("/static/").Handler(http.StripPrefix("/static/", docsServer))

		rtr.Handle("/", http.RedirectHandler("/static/", http.StatusMovedPermanently))
		rtr.Handle("/swagger", http.RedirectHandler("/static/", http.StatusMovedPermanently))
		rtr.Handle("/swagger/", http.RedirectHandler("/static/", http.StatusMovedPermanently))
	}
	return nil
}

-- Chunk 29 --
// app.go:1289-1291
func (app *WasmApp) RegisterTxService(clientCtx client.Context) {
	authtx.RegisterTxService(app.BaseApp.GRPCQueryRouter(), clientCtx, app.BaseApp.Simulate, app.interfaceRegistry)
}

-- Chunk 30 --
// app.go:1294-1301
func (app *WasmApp) RegisterTendermintService(clientCtx client.Context) {
	cmtservice.RegisterTendermintService(
		clientCtx,
		app.BaseApp.GRPCQueryRouter(),
		app.interfaceRegistry,
		app.Query,
	)
}

-- Chunk 31 --
// app.go:1303-1305
func (app *WasmApp) RegisterNodeService(clientCtx client.Context, cfg config.Config) {
	nodeservice.RegisterNodeService(clientCtx, app.GRPCQueryRouter(), cfg)
}

-- Chunk 32 --
// app.go:1310-1317
func GetMaccPerms() map[string][]string {
	dupMaccPerms := make(map[string][]string)
	for k, v := range maccPerms {
		dupMaccPerms[k] = v
	}

	return dupMaccPerms
}

-- Chunk 33 --
// app.go:1320-1331
func BlockedAddresses() map[string]bool {
	modAccAddrs := make(map[string]bool)
	for acc := range GetMaccPerms() {
		modAccAddrs[authtypes.NewModuleAddress(acc).String()] = true
	}

	// allow the following addresses to receive funds
	delete(modAccAddrs, authtypes.NewModuleAddress(govtypes.ModuleName).String())
	delete(modAccAddrs, authtypes.NewModuleAddress(feeabstypes.ModuleName).String())

	return modAccAddrs
}

-- Chunk 34 --
// app.go:1334-1365
func initParamsKeeper(appCodec codec.BinaryCodec, legacyAmino *codec.LegacyAmino, key, tkey storetypes.StoreKey) paramskeeper.Keeper {
	paramsKeeper := paramskeeper.NewKeeper(appCodec, legacyAmino, key, tkey)

	paramsKeeper.Subspace(authtypes.ModuleName)
	paramsKeeper.Subspace(banktypes.ModuleName)
	paramsKeeper.Subspace(stakingtypes.ModuleName)
	paramsKeeper.Subspace(minttypes.ModuleName)
	paramsKeeper.Subspace(distrtypes.ModuleName)
	paramsKeeper.Subspace(slashingtypes.ModuleName)
	paramsKeeper.Subspace(govtypes.ModuleName)
	paramsKeeper.Subspace(crisistypes.ModuleName)
	paramsKeeper.Subspace(tokenfactorytypes.ModuleName)
	paramsKeeper.Subspace(globalfee.ModuleName)
	paramsKeeper.Subspace(xiontypes.ModuleName)
	paramsKeeper.Subspace(jwktypes.ModuleName)
	paramsKeeper.Subspace(wasmtypes.ModuleName)
	paramsKeeper.Subspace(aatypes.ModuleName)
	paramsKeeper.Subspace(packetforwardtypes.ModuleName)
	paramsKeeper.Subspace(feeabstypes.ModuleName)
	paramsKeeper.Subspace(ibcwasmtypes.ModuleName)

	// IBC params migration - legacySubspace to selfManaged
	// https://github.com/cosmos/ibc-go/blob/main/docs/docs/05-migrations/11-v7-to-v8.md#params-migration
	keyTable := ibcclienttypes.ParamKeyTable()
	keyTable.RegisterParamSet(&ibcconnectiontypes.Params{})
	paramsKeeper.Subspace(ibcexported.ModuleName).WithKeyTable(keyTable)
	paramsKeeper.Subspace(ibctransfertypes.ModuleName).WithKeyTable(ibctransfertypes.ParamKeyTable())
	paramsKeeper.Subspace(icacontrollertypes.SubModuleName).WithKeyTable(icacontrollertypes.ParamKeyTable())
	paramsKeeper.Subspace(icahosttypes.SubModuleName).WithKeyTable(icahosttypes.ParamKeyTable())

	return paramsKeeper
}

-- Chunk 35 --
// app.go:1368-1386
func (app *WasmApp) AutoCliOpts() autocli.AppOptions {
	modules := make(map[string]appmodule.AppModule, 0)
	for _, m := range app.ModuleManager.Modules {
		if moduleWithName, ok := m.(module.HasName); ok {
			moduleName := moduleWithName.Name()
			if appModule, ok := moduleWithName.(appmodule.AppModule); ok {
				modules[moduleName] = appModule
			}
		}
	}

	return autocli.AppOptions{
		Modules:               modules,
		ModuleOptions:         runtimeservices.ExtractAutoCLIOptions(app.ModuleManager.Modules),
		AddressCodec:          authcodec.NewBech32Codec(sdk.GetConfig().GetBech32AccountAddrPrefix()),
		ValidatorAddressCodec: authcodec.NewBech32Codec(sdk.GetConfig().GetBech32ValidatorAddrPrefix()),
		ConsensusAddressCodec: authcodec.NewBech32Codec(sdk.GetConfig().GetBech32ConsensusAddrPrefix()),
	}
}

-- Chunk 36 --
// app.go:1390-1394
func overrideWasmVariables() {
	// Override Wasm size limitation from WASMD.
	wasmtypes.MaxWasmSize = 2 * 1024 * 1024
	wasmtypes.MaxProposalWasmSize = wasmtypes.MaxWasmSize
}

=== File: app/genesis.go ===

-- Chunk 1 --
// genesis.go:17-17
type GenesisState map[string]json.RawMessage

-- Chunk 2 --
// genesis.go:20-22
func NewDefaultGenesisState(cdc codec.JSONCodec, manager module.BasicManager) GenesisState {
	return manager.DefaultGenesis(cdc)
}

=== File: app/encoding.go ===

-- Chunk 1 --
// encoding.go:18-23
func MakeEncodingConfig(t testing.TB) params.EncodingConfig {
	// we "pre"-instantiate the application for getting the injected/configured encoding configuration
	// note, this is not necessary when using app wiring, as depinject can be directly used (see root_v2.go)
	tempApp := NewWasmApp(log.NewNopLogger(), dbm.NewMemDB(), nil, true, simtestutil.NewAppOptionsWithFlagHome(t.TempDir()), []wasmkeeper.Option{})
	return makeEncodingConfig(tempApp)
}

-- Chunk 2 --
// encoding.go:25-33
func makeEncodingConfig(tempApp *WasmApp) params.EncodingConfig {
	encodingConfig := params.EncodingConfig{
		InterfaceRegistry: tempApp.InterfaceRegistry(),
		Codec:             tempApp.AppCodec(),
		TxConfig:          tempApp.TxConfig(),
		Amino:             tempApp.LegacyAmino(),
	}
	return encodingConfig
}

=== File: app/export.go ===

-- Chunk 1 --
// export.go:23-52
func (app *WasmApp) ExportAppStateAndValidators(forZeroHeight bool, jailAllowedAddrs, modulesToExport []string) (servertypes.ExportedApp, error) {
	// as if they could withdraw from the start of the next block
	ctx := app.NewContextLegacy(true, cmtproto.Header{Height: app.LastBlockHeight()})

	// We export at last height + 1, because that's the height at which
	// CometBFT will start InitChain.
	height := app.LastBlockHeight() + 1
	if forZeroHeight {
		height = 0
		app.prepForZeroHeightGenesis(ctx, jailAllowedAddrs)
	}

	genState, err := app.ModuleManager.ExportGenesisForModules(ctx, app.appCodec, modulesToExport)
	if err != nil {
		return servertypes.ExportedApp{}, err
	}

	appState, err := json.MarshalIndent(genState, "", "  ")
	if err != nil {
		return servertypes.ExportedApp{}, err
	}

	validators, err := staking.WriteValidators(ctx, app.StakingKeeper)
	return servertypes.ExportedApp{
		AppState:        appState,
		Validators:      validators,
		Height:          height,
		ConsensusParams: app.BaseApp.GetConsensusParams(ctx),
	}, err
}

-- Chunk 2 --
// export.go:58-207
func (app *WasmApp) prepForZeroHeightGenesis(ctx sdk.Context, jailAllowedAddrs []string) {
	applyAllowedAddrs := false

	// check if there is a allowed address list
	if len(jailAllowedAddrs) > 0 {
		applyAllowedAddrs = true
	}

	allowedAddrsMap := make(map[string]bool)

	for _, addr := range jailAllowedAddrs {
		_, err := sdk.ValAddressFromBech32(addr)
		if err != nil {
			log.Fatal(err)
		}
		allowedAddrsMap[addr] = true
	}

	/* Just to be safe, assert the invariants on current state. */
	app.CrisisKeeper.AssertInvariants(ctx)

	/* Handle fee distribution state. */

	// withdraw all validator commission
	err := app.StakingKeeper.IterateValidators(ctx, func(_ int64, val stakingtypes.ValidatorI) (stop bool) {
		valBz, err := app.StakingKeeper.ValidatorAddressCodec().StringToBytes(val.GetOperator())
		if err != nil {
			panic(err)
		}
		_, _ = app.DistrKeeper.WithdrawValidatorCommission(ctx, valBz)
		return false
	})
	if err != nil {
		panic(err)
	}

	// withdraw all delegator rewards
	dels, err := app.StakingKeeper.GetAllDelegations(ctx)
	if err != nil {
		panic(err)
	}

	for _, delegation := range dels {
		valAddr, err := sdk.ValAddressFromBech32(delegation.ValidatorAddress)
		if err != nil {
			panic(err)
		}

		delAddr := sdk.MustAccAddressFromBech32(delegation.DelegatorAddress)

		if _, err = app.DistrKeeper.WithdrawDelegationRewards(ctx, delAddr, valAddr); err != nil {
			panic(err)
		}
	}

	// clear validator slash events
	app.DistrKeeper.DeleteAllValidatorSlashEvents(ctx)

	// clear validator historical rewards
	app.DistrKeeper.DeleteAllValidatorHistoricalRewards(ctx)

	// set context height to zero
	height := ctx.BlockHeight()
	ctx = ctx.WithBlockHeight(0)

	// reinitialize all validators
	err = app.StakingKeeper.IterateValidators(ctx, func(_ int64, val stakingtypes.ValidatorI) (stop bool) {
		valBz, err := app.StakingKeeper.ValidatorAddressCodec().StringToBytes(val.GetOperator())
		if err != nil {
			panic(err)
		}
		// donate any unwithdrawn outstanding reward fraction tokens to the community pool
		scraps, err := app.DistrKeeper.GetValidatorOutstandingRewardsCoins(ctx, valBz)
		if err != nil {
			panic(err)
		}
		feePool, err := app.DistrKeeper.FeePool.Get(ctx)
		if err != nil {
			panic(err)
		}
		feePool.CommunityPool = feePool.CommunityPool.Add(scraps...)
		if err := app.DistrKeeper.FeePool.Set(ctx, feePool); err != nil {
			panic(err)
		}

		if err := app.DistrKeeper.Hooks().AfterValidatorCreated(ctx, valBz); err != nil {
			panic(err)
		}
		return false
	})
	if err != nil {
		panic(err)
	}

	// reinitialize all delegations
	for _, del := range dels {
		valAddr, err := sdk.ValAddressFromBech32(del.ValidatorAddress)
		if err != nil {
			panic(err)
		}
		delAddr := sdk.MustAccAddressFromBech32(del.DelegatorAddress)

		if err := app.DistrKeeper.Hooks().BeforeDelegationCreated(ctx, delAddr, valAddr); err != nil {
			// never called as BeforeDelegationCreated always returns nil
			panic(fmt.Errorf("error while incrementing period: %w", err))
		}

		if err := app.DistrKeeper.Hooks().AfterDelegationModified(ctx, delAddr, valAddr); err != nil {
			// never called as AfterDelegationModified always returns nil
			panic(fmt.Errorf("error while creating a new delegation period record: %w", err))
		}
	}

	// reset context height
	ctx = ctx.WithBlockHeight(height)

	/* Handle staking state. */

	// iterate through redelegations, reset creation height
	err = app.StakingKeeper.IterateRedelegations(ctx, func(_ int64, red stakingtypes.Redelegation) (stop bool) {
		for i := range red.Entries {
			red.Entries[i].CreationHeight = 0
		}
		err = app.StakingKeeper.SetRedelegation(ctx, red)
		if err != nil {
			panic(err)
		}
		return false
	})
	if err != nil {
		panic(err)
	}

	// iterate through unbonding delegations, reset creation height
	err = app.StakingKeeper.IterateUnbondingDelegations(ctx, func(_ int64, ubd stakingtypes.UnbondingDelegation) (stop bool) {
		for i := range ubd.Entries {
			ubd.Entries[i].CreationHeight = 0
		}
		err = app.StakingKeeper.SetUnbondingDelegation(ctx, ubd)
		if err != nil {
			panic(err)
		}
		return false
	})

	// Iterate through validators by power descending, reset bond heights, and
	// update bond intra-tx counters.
	store := ctx.KVStore(app.GetKey(stakingtypes.StoreKey))
	iter := storetypes.KVStoreReversePrefixIterator(store, stakingtypes.ValidatorsKey)


-- Chunk 3 --
// export.go:208-255
	for ; iter.Valid(); iter.Next() {
		addr := sdk.ValAddress(stakingtypes.AddressFromValidatorsKey(iter.Key()))
		validator, err := app.StakingKeeper.GetValidator(ctx, addr)
		if err != nil {
			if errors.Is(err, collections.ErrNotFound) {
				panic(fmt.Errorf("expected validator, not found: %w", err))
			}
			panic(err)
		}

		validator.UnbondingHeight = 0
		if applyAllowedAddrs && !allowedAddrsMap[addr.String()] {
			validator.Jailed = true
		}

		err = app.StakingKeeper.SetValidator(ctx, validator)
		if err != nil {
			panic(err)
		}
	}

	if err := iter.Close(); err != nil {
		app.Logger().Error("error while closing the key-value store reverse prefix iterator: ", err)
		return
	}

	_, err = app.StakingKeeper.ApplyAndReturnValidatorSetUpdates(ctx)
	if err != nil {
		log.Fatal(err)
	}

	/* Handle slashing state. */

	// reset start height on signing infos
	err = app.SlashingKeeper.IterateValidatorSigningInfos(
		ctx,
		func(addr sdk.ConsAddress, info slashingtypes.ValidatorSigningInfo) (stop bool) {
			info.StartHeight = 0
			if err := app.SlashingKeeper.SetValidatorSigningInfo(ctx, addr, info); err != nil {
				panic(err)
			}
			return false
		},
	)
	if err != nil {
		panic(err)
	}
}

=== File: app/test_helpers.go ===

-- Chunk 1 --
// test_helpers.go:50-55
type SetupOptions struct {
	Logger   log.Logger
	DB       *dbm.MemDB
	AppOpts  servertypes.AppOptions
	WasmOpts []wasmkeeper.Option
}

-- Chunk 2 --
// test_helpers.go:57-85
func setup(t testing.TB, chainID string, withGenesis bool, invCheckPeriod uint, opts ...wasmkeeper.Option) (*WasmApp, GenesisState) {
	db := dbm.NewMemDB()
	nodeHome := t.TempDir()
	snapshotDir := filepath.Join(nodeHome, "data", "snapshots")

	snapshotDB, err := dbm.NewDB("metadata", dbm.GoLevelDBBackend, snapshotDir)
	require.NoError(t, err)
	t.Cleanup(func() { snapshotDB.Close() })
	snapshotStore, err := snapshots.NewStore(snapshotDB, snapshotDir)
	require.NoError(t, err)

	appOptions := make(simtestutil.AppOptionsMap, 0)
	appOptions[flags.FlagHome] = nodeHome // ensure unique folder
	appOptions[server.FlagInvCheckPeriod] = invCheckPeriod
	app := NewWasmApp(
		log.NewNopLogger(),
		db,
		nil,
		true,
		appOptions,
		opts,
		bam.SetChainID(chainID),
		bam.SetSnapshot(snapshotStore, snapshottypes.SnapshotOptions{KeepRecent: 2}),
	)
	if withGenesis {
		return app, app.DefaultGenesis()
	}
	return app, GenesisState{}
}

-- Chunk 3 --
// test_helpers.go:88-127
func NewWasmAppWithCustomOptions(t *testing.T, isCheckTx bool, options SetupOptions) *WasmApp {
	t.Helper()

	privVal := mock.NewPV()
	pubKey, err := privVal.GetPubKey()
	require.NoError(t, err)
	// create validator set with single validator
	validator := cmttypes.NewValidator(pubKey, 1)
	valSet := cmttypes.NewValidatorSet([]*cmttypes.Validator{validator})

	// generate genesis account
	senderPrivKey := secp256k1.GenPrivKey()
	acc := authtypes.NewBaseAccount(senderPrivKey.PubKey().Address().Bytes(), senderPrivKey.PubKey(), 0, 0)
	balance := banktypes.Balance{
		Address: acc.GetAddress().String(),
		Coins:   sdk.NewCoins(sdk.NewCoin(sdk.DefaultBondDenom, sdkmath.NewInt(100000000000000))),
	}

	app := NewWasmApp(options.Logger, options.DB, nil, true, options.AppOpts, options.WasmOpts)
	genesisState := app.DefaultGenesis()
	genesisState, err = GenesisStateWithValSet(app.AppCodec(), genesisState, valSet, []authtypes.GenesisAccount{acc}, balance)
	require.NoError(t, err)

	if !isCheckTx {
		// init chain must be called to stop deliverState from being nil
		stateBytes, err := cmtjson.MarshalIndent(genesisState, "", " ")
		require.NoError(t, err)

		// Initialize the chain
		_, err = app.InitChain(
			&abci.RequestInitChain{
				Validators:      []abci.ValidatorUpdate{},
				ConsensusParams: simtestutil.DefaultConsensusParams,
				AppStateBytes:   stateBytes,
			})
		require.NoError(t, err)
	}

	return app
}

-- Chunk 4 --
// test_helpers.go:130-152
func Setup(t *testing.T, opts ...wasmkeeper.Option) *WasmApp {
	t.Helper()

	privVal := mock.NewPV()
	pubKey, err := privVal.GetPubKey()
	require.NoError(t, err)

	// create validator set with single validator
	validator := cmttypes.NewValidator(pubKey, 1)
	valSet := cmttypes.NewValidatorSet([]*cmttypes.Validator{validator})

	// generate genesis account
	senderPrivKey := secp256k1.GenPrivKey()
	acc := authtypes.NewBaseAccount(senderPrivKey.PubKey().Address().Bytes(), senderPrivKey.PubKey(), 0, 0)
	balance := banktypes.Balance{
		Address: acc.GetAddress().String(),
		Coins:   sdk.NewCoins(sdk.NewCoin(sdk.DefaultBondDenom, sdkmath.NewInt(100000000000000))),
	}
	chainID := "testing"
	app := SetupWithGenesisValSet(t, valSet, []authtypes.GenesisAccount{acc}, chainID, opts, balance)

	return app
}

-- Chunk 5 --
// test_helpers.go:158-196
func SetupWithGenesisValSet(
	t *testing.T,
	valSet *cmttypes.ValidatorSet,
	genAccs []authtypes.GenesisAccount,
	chainID string,
	opts []wasmkeeper.Option,
	balances ...banktypes.Balance,
) *WasmApp {
	t.Helper()

	app, genesisState := setup(t, chainID, true, 5, opts...)
	genesisState, err := GenesisStateWithValSet(app.AppCodec(), genesisState, valSet, genAccs, balances...)
	require.NoError(t, err)

	stateBytes, err := json.MarshalIndent(genesisState, "", " ")
	require.NoError(t, err)

	// init chain will set the validator set and initialize the genesis accounts
	consensusParams := simtestutil.DefaultConsensusParams
	consensusParams.Block.MaxGas = 100 * simtestutil.DefaultGenTxGas
	_, err = app.InitChain(&abci.RequestInitChain{
		ChainId:         chainID,
		Time:            time.Now().UTC(),
		Validators:      []abci.ValidatorUpdate{},
		ConsensusParams: consensusParams,
		InitialHeight:   app.LastBlockHeight() + 1,
		AppStateBytes:   stateBytes,
	})
	require.NoError(t, err)

	_, err = app.FinalizeBlock(&abci.RequestFinalizeBlock{
		Height:             app.LastBlockHeight() + 1,
		Hash:               app.LastCommitID().Hash,
		NextValidatorsHash: valSet.Hash(),
	})
	require.NoError(t, err)

	return app
}

-- Chunk 6 --
// test_helpers.go:199-202
func SetupWithEmptyStore(t testing.TB) *WasmApp {
	app, _ := setup(t, "testing", false, 0)
	return app
}

-- Chunk 7 --
// test_helpers.go:206-232
func GenesisStateWithSingleValidator(t *testing.T, app *WasmApp) GenesisState {
	t.Helper()

	privVal := mock.NewPV()
	pubKey, err := privVal.GetPubKey()
	require.NoError(t, err)

	// create validator set with single validator
	validator := cmttypes.NewValidator(pubKey, 1)
	valSet := cmttypes.NewValidatorSet([]*cmttypes.Validator{validator})

	// generate genesis account
	senderPrivKey := secp256k1.GenPrivKey()
	acc := authtypes.NewBaseAccount(senderPrivKey.PubKey().Address().Bytes(), senderPrivKey.PubKey(), 0, 0)
	balances := []banktypes.Balance{
		{
			Address: acc.GetAddress().String(),
			Coins:   sdk.NewCoins(sdk.NewCoin(sdk.DefaultBondDenom, sdkmath.NewInt(100000000000000))),
		},
	}

	genesisState := app.DefaultGenesis()
	genesisState, err = GenesisStateWithValSet(app.AppCodec(), genesisState, valSet, []authtypes.GenesisAccount{acc}, balances...)
	require.NoError(t, err)

	return genesisState
}

-- Chunk 8 --
// test_helpers.go:236-238
func AddTestAddrsIncremental(app *WasmApp, ctx sdk.Context, accNum int, accAmt sdkmath.Int) []sdk.AccAddress {
	return addTestAddrs(app, ctx, accNum, accAmt, simtestutil.CreateIncrementalAccounts)
}

-- Chunk 9 --
// test_helpers.go:240-254
func addTestAddrs(app *WasmApp, ctx sdk.Context, accNum int, accAmt sdkmath.Int, strategy simtestutil.GenerateAccountStrategy) []sdk.AccAddress {
	testAddrs := strategy(accNum)
	bondDenom, err := app.StakingKeeper.BondDenom(ctx)
	if err != nil {
		panic(err)
	}

	initCoins := sdk.NewCoins(sdk.NewCoin(bondDenom, accAmt))

	for _, addr := range testAddrs {
		initAccountWithCoins(app, ctx, addr, initCoins)
	}

	return testAddrs
}

-- Chunk 10 --
// test_helpers.go:256-266
func initAccountWithCoins(app *WasmApp, ctx sdk.Context, addr sdk.AccAddress, coins sdk.Coins) {
	err := app.BankKeeper.MintCoins(ctx, minttypes.ModuleName, coins)
	if err != nil {
		panic(err)
	}

	err = app.BankKeeper.SendCoinsFromModuleToAccount(ctx, minttypes.ModuleName, addr, coins)
	if err != nil {
		panic(err)
	}
}

-- Chunk 11 --
// test_helpers.go:271-300
func NewTestNetworkFixture() network.TestFixture {
	dir, err := os.MkdirTemp("", "simapp")
	if err != nil {
		panic(fmt.Sprintf("failed creating temporary directory: %v", err))
	}
	defer os.RemoveAll(dir)

	app := NewWasmApp(log.NewNopLogger(), dbm.NewMemDB(), nil, true, simtestutil.NewAppOptionsWithFlagHome(dir), emptyWasmOptions)
	appCtr := func(val network.ValidatorI) servertypes.Application {
		return NewWasmApp(
			val.GetCtx().Logger, dbm.NewMemDB(), nil, true,
			simtestutil.NewAppOptionsWithFlagHome(val.GetCtx().Config.RootDir),
			emptyWasmOptions,
			bam.SetPruning(pruningtypes.NewPruningOptionsFromString(val.GetAppConfig().Pruning)),
			bam.SetMinGasPrices(val.GetAppConfig().MinGasPrices),
			bam.SetChainID(val.GetCtx().Viper.GetString(flags.FlagChainID)),
		)
	}

	return network.TestFixture{
		AppConstructor: appCtr,
		GenesisState:   app.DefaultGenesis(),
		EncodingConfig: testutil.TestEncodingConfig{
			InterfaceRegistry: app.InterfaceRegistry(),
			Codec:             app.AppCodec(),
			TxConfig:          app.TxConfig(),
			Amino:             app.LegacyAmino(),
		},
	}
}

-- Chunk 12 --
// test_helpers.go:303-325
func SignAndDeliverWithoutCommit(t *testing.T, txCfg client.TxConfig, app *bam.BaseApp, msgs []sdk.Msg, fees sdk.Coins, chainID string, accNums, accSeqs []uint64, blockTime time.Time, priv ...cryptotypes.PrivKey) (*abci.ResponseFinalizeBlock, error) {
	tx, err := simtestutil.GenSignedMockTx(
		rand.New(rand.NewSource(time.Now().UnixNano())),
		txCfg,
		msgs,
		fees,
		simtestutil.DefaultGenTxGas,
		chainID,
		accNums,
		accSeqs,
		priv...,
	)
	require.NoError(t, err)

	bz, err := txCfg.TxEncoder()(tx)
	require.NoError(t, err)

	return app.FinalizeBlock(&abci.RequestFinalizeBlock{
		Height: app.LastBlockHeight() + 1,
		Time:   blockTime,
		Txs:    [][]byte{bz},
	})
}

-- Chunk 13 --
// test_helpers.go:329-405
func GenesisStateWithValSet(
	codec codec.Codec,
	genesisState map[string]json.RawMessage,
	valSet *cmttypes.ValidatorSet,
	genAccs []authtypes.GenesisAccount,
	balances ...banktypes.Balance,
) (map[string]json.RawMessage, error) {
	// set genesis accounts
	authGenesis := authtypes.NewGenesisState(authtypes.DefaultParams(), genAccs)
	genesisState[authtypes.ModuleName] = codec.MustMarshalJSON(authGenesis)

	validators := make([]stakingtypes.Validator, 0, len(valSet.Validators))
	delegations := make([]stakingtypes.Delegation, 0, len(valSet.Validators))

	bondAmt := sdk.DefaultPowerReduction

	for _, val := range valSet.Validators {
		pk, err := cryptocodec.FromCmtPubKeyInterface(val.PubKey)
		if err != nil {
			return nil, fmt.Errorf("failed to convert pubkey: %w", err)
		}

		pkAny, err := codectypes.NewAnyWithValue(pk)
		if err != nil {
			return nil, fmt.Errorf("failed to create new any: %w", err)
		}

		validator := stakingtypes.Validator{
			OperatorAddress:   sdk.ValAddress(val.Address).String(),
			ConsensusPubkey:   pkAny,
			Jailed:            false,
			Status:            stakingtypes.Bonded,
			Tokens:            bondAmt,
			DelegatorShares:   sdkmath.LegacyOneDec(),
			Description:       stakingtypes.Description{},
			UnbondingHeight:   int64(0),
			UnbondingTime:     time.Unix(0, 0).UTC(),
			Commission:        stakingtypes.NewCommission(sdkmath.LegacyZeroDec(), sdkmath.LegacyZeroDec(), sdkmath.LegacyZeroDec()),
			MinSelfDelegation: sdkmath.ZeroInt(),
		}
		validators = append(validators, validator)
		delegations = append(delegations, stakingtypes.NewDelegation(genAccs[0].GetAddress().String(), sdk.ValAddress(val.Address).String(), sdkmath.LegacyOneDec()))

	}

	// set validators and delegations
	stakingGenesis := stakingtypes.NewGenesisState(stakingtypes.DefaultParams(), validators, delegations)
	genesisState[stakingtypes.ModuleName] = codec.MustMarshalJSON(stakingGenesis)

	signingInfos := make([]slashingtypes.SigningInfo, len(valSet.Validators))
	for i, val := range valSet.Validators {
		signingInfos[i] = slashingtypes.SigningInfo{
			Address:              sdk.ConsAddress(val.Address).String(),
			ValidatorSigningInfo: slashingtypes.ValidatorSigningInfo{},
		}
	}
	slashingGenesis := slashingtypes.NewGenesisState(slashingtypes.DefaultParams(), signingInfos, nil)
	genesisState[slashingtypes.ModuleName] = codec.MustMarshalJSON(slashingGenesis)

	// add bonded amount to bonded pool module account
	balances = append(balances, banktypes.Balance{
		Address: authtypes.NewModuleAddress(stakingtypes.BondedPoolName).String(),
		Coins:   sdk.Coins{sdk.NewCoin(sdk.DefaultBondDenom, bondAmt.MulRaw(int64(len(valSet.Validators))))},
	})

	totalSupply := sdk.NewCoins()
	for _, b := range balances {
		// add genesis acc tokens to total supply
		totalSupply = totalSupply.Add(b.Coins...)
	}

	// update total supply
	bankGenesis := banktypes.NewGenesisState(banktypes.DefaultGenesisState().Params, balances, totalSupply, []banktypes.Metadata{}, []banktypes.SendEnabled{})
	genesisState[banktypes.ModuleName] = codec.MustMarshalJSON(bankGenesis)
	println(string(genesisState[banktypes.ModuleName]))
	return genesisState, nil
}

=== File: app/sim_test.go ===

-- Chunk 1 --
// sim_test.go:46-48
func init() {
	simcli.GetSimulatorFlags()
}

-- Chunk 2 --
// sim_test.go:50-54
type StoreKeysPrefixes struct {
	A        storetypes.StoreKey
	B        storetypes.StoreKey
	Prefixes [][]byte
}

-- Chunk 3 --
// sim_test.go:58-60
func fauxMerkleModeOpt(bapp *baseapp.BaseApp) {
	bapp.SetFauxMerkleMode()
}

-- Chunk 4 --
// sim_test.go:64-66
func interBlockCacheOpt() func(*baseapp.BaseApp) {
	return baseapp.SetInterBlockCache(store.NewCommitKVStoreCacheManager())
}

-- Chunk 5 --
// sim_test.go:68-91
func TestFullAppSimulation(t *testing.T) {
	config, db, _, app := setupSimulationApp(t, "skipping application simulation")
	// run randomized simulation
	_, simParams, simErr := simulation.SimulateFromSeed(
		t,
		os.Stdout,
		app.BaseApp,
		simtestutil.AppStateFn(app.AppCodec(), app.SimulationManager(), app.DefaultGenesis()),
		simtypes.RandomAccounts, // Replace with own random account function if using keys other than secp256k1
		simtestutil.SimulationOperations(app, app.AppCodec(), config),
		BlockedAddresses(),
		config,
		app.AppCodec(),
	)

	// export state and simParams before the simulation error is checked
	err := simtestutil.CheckExportSimulation(app, config, simParams)
	require.NoError(t, err)
	require.NoError(t, simErr)

	if config.Commit {
		simtestutil.PrintStats(db)
	}
}

-- Chunk 6 --
// sim_test.go:93-190
func TestAppImportExport(t *testing.T) {
	config, db, appOptions, app := setupSimulationApp(t, "skipping application import/export simulation")

	// Run randomized simulation
	_, simParams, simErr := simulation.SimulateFromSeed(
		t,
		os.Stdout,
		app.BaseApp,
		simtestutil.AppStateFn(app.AppCodec(), app.SimulationManager(), app.DefaultGenesis()),
		simtypes.RandomAccounts, // Replace with own random account function if using keys other than secp256k1
		simtestutil.SimulationOperations(app, app.AppCodec(), config),
		BlockedAddresses(),
		config,
		app.AppCodec(),
	)

	// export state and simParams before the simulation error is checked
	err := simtestutil.CheckExportSimulation(app, config, simParams)
	require.NoError(t, err)
	require.NoError(t, simErr)

	if config.Commit {
		simtestutil.PrintStats(db)
	}

	fmt.Printf("exporting genesis...\n")

	exported, err := app.ExportAppStateAndValidators(false, []string{}, []string{})
	require.NoError(t, err)

	fmt.Printf("importing genesis...\n")

	newDB, newDir, _, _, err := simtestutil.SetupSimulation(config, "leveldb-app-sim-2", "Simulation-2", simcli.FlagVerboseValue, simcli.FlagEnabledValue)
	require.NoError(t, err, "simulation setup failed")

	defer func() {
		require.NoError(t, newDB.Close())
		require.NoError(t, os.RemoveAll(newDir))
	}()

	newApp := NewWasmApp(log.NewNopLogger(), newDB, nil, true, appOptions, emptyWasmOpts, fauxMerkleModeOpt, baseapp.SetChainID(SimAppChainID))
	require.Equal(t, "WasmApp", newApp.Name())

	var genesisState GenesisState
	err = json.Unmarshal(exported.AppState, &genesisState)
	require.NoError(t, err)

	defer func() {
		if r := recover(); r != nil {
			err := fmt.Sprintf("%v", r)
			if !strings.Contains(err, "validator set is empty after InitGenesis") {
				panic(r)
			}
			t.Log("Skipping simulation as all validators have been unbonded")
			t.Logf("err: %s stacktrace: %s\n", err, string(debug.Stack()))
		}
	}()

	ctxA := app.NewContext(true)
	ctxB := newApp.NewContext(true)
	_, err = newApp.ModuleManager.InitGenesis(ctxB, app.AppCodec(), genesisState)
	require.NoError(t, err)
	err = newApp.StoreConsensusParams(ctxB, exported.ConsensusParams)
	require.NoError(t, err)

	fmt.Printf("comparing stores...\n")

	storeKeysPrefixes := []StoreKeysPrefixes{
		{app.GetKey(authtypes.StoreKey), newApp.GetKey(authtypes.StoreKey), [][]byte{}},
		{
			app.GetKey(stakingtypes.StoreKey), newApp.GetKey(stakingtypes.StoreKey),
			[][]byte{
				stakingtypes.UnbondingQueueKey, stakingtypes.RedelegationQueueKey, stakingtypes.ValidatorQueueKey,
				stakingtypes.HistoricalInfoKey, stakingtypes.UnbondingIDKey, stakingtypes.UnbondingIndexKey, stakingtypes.UnbondingTypeKey, stakingtypes.ValidatorUpdatesKey,
			},
		}, // ordering may change but it doesn't matter
		{app.GetKey(slashingtypes.StoreKey), newApp.GetKey(slashingtypes.StoreKey), [][]byte{}},
		{app.GetKey(minttypes.StoreKey), newApp.GetKey(minttypes.StoreKey), [][]byte{}},
		{app.GetKey(distrtypes.StoreKey), newApp.GetKey(distrtypes.StoreKey), [][]byte{}},
		{app.GetKey(banktypes.StoreKey), newApp.GetKey(banktypes.StoreKey), [][]byte{banktypes.BalancesPrefix}},
		{app.GetKey(paramtypes.StoreKey), newApp.GetKey(paramtypes.StoreKey), [][]byte{}},
		{app.GetKey(govtypes.StoreKey), newApp.GetKey(govtypes.StoreKey), [][]byte{}},
		{app.GetKey(evidencetypes.StoreKey), newApp.GetKey(evidencetypes.StoreKey), [][]byte{}},
		{app.GetKey(capabilitytypes.StoreKey), newApp.GetKey(capabilitytypes.StoreKey), [][]byte{}},
		{app.GetKey(authzkeeper.StoreKey), newApp.GetKey(authzkeeper.StoreKey), [][]byte{authzkeeper.GrantKey, authzkeeper.GrantQueuePrefix}},
	}

	for _, skp := range storeKeysPrefixes {
		storeA := ctxA.KVStore(skp.A)
		storeB := ctxB.KVStore(skp.B)

		failedKVAs, failedKVBs := simtestutil.DiffKVStores(storeA, storeB, skp.Prefixes)
		require.Equal(t, len(failedKVAs), len(failedKVBs), "unequal sets of key-values to compare")

		fmt.Printf("compared %d different key/value pairs between %s and %s\n", len(failedKVAs), skp.A, skp.B)
		require.Equal(t, 0, len(failedKVAs), simtestutil.GetSimulationLog(skp.A.Name(), app.SimulationManager().StoreDecoders, failedKVAs, failedKVBs))
	}
}

-- Chunk 7 --
// sim_test.go:192-258
func TestAppSimulationAfterImport(t *testing.T) {
	config, db, appOptions, app := setupSimulationApp(t, "skipping application simulation after import")

	// Run randomized simulation
	stopEarly, simParams, simErr := simulation.SimulateFromSeed(
		t,
		os.Stdout,
		app.BaseApp,
		simtestutil.AppStateFn(app.AppCodec(), app.SimulationManager(), app.DefaultGenesis()),
		simtypes.RandomAccounts, // Replace with own random account function if using keys other than secp256k1
		simtestutil.SimulationOperations(app, app.AppCodec(), config),
		BlockedAddresses(),
		config,
		app.AppCodec(),
	)

	// export state and simParams before the simulation error is checked
	err := simtestutil.CheckExportSimulation(app, config, simParams)
	require.NoError(t, err)
	require.NoError(t, simErr)

	if config.Commit {
		simtestutil.PrintStats(db)
	}

	if stopEarly {
		fmt.Println("can't export or import a zero-validator genesis, exiting test...")
		return
	}

	fmt.Printf("exporting genesis...\n")

	exported, err := app.ExportAppStateAndValidators(true, []string{}, []string{})
	require.NoError(t, err)

	fmt.Printf("importing genesis...\n")

	newDB, newDir, _, _, err := simtestutil.SetupSimulation(config, "leveldb-app-sim-2", "Simulation-2", simcli.FlagVerboseValue, simcli.FlagEnabledValue)
	require.NoError(t, err, "simulation setup failed")

	defer func() {
		require.NoError(t, newDB.Close())
		require.NoError(t, os.RemoveAll(newDir))
	}()

	newApp := NewWasmApp(log.NewNopLogger(), newDB, nil, true, appOptions, emptyWasmOpts, fauxMerkleModeOpt, baseapp.SetChainID(SimAppChainID))
	require.Equal(t, "WasmApp", newApp.Name())

	_, err = newApp.InitChain(&abci.RequestInitChain{
		ChainId:       SimAppChainID,
		AppStateBytes: exported.AppState,
	})
	require.NoError(t, err)

	_, _, err = simulation.SimulateFromSeed(
		t,
		os.Stdout,
		newApp.BaseApp,
		simtestutil.AppStateFn(app.AppCodec(), app.SimulationManager(), app.DefaultGenesis()),
		simtypes.RandomAccounts, // Replace with own random account function if using keys other than secp256k1
		simtestutil.SimulationOperations(newApp, newApp.AppCodec(), config),
		BlockedAddresses(),
		config,
		app.AppCodec(),
	)
	require.NoError(t, err)
}

-- Chunk 8 --
// sim_test.go:260-282
func setupSimulationApp(t *testing.T, msg string) (simtypes.Config, dbm.DB, simtestutil.AppOptionsMap, *WasmApp) {
	config := simcli.NewConfigFromFlags()
	config.ChainID = SimAppChainID

	db, dir, logger, skip, err := simtestutil.SetupSimulation(config, "leveldb-app-sim", "Simulation", simcli.FlagVerboseValue, simcli.FlagEnabledValue)
	if skip {
		t.Skip(msg)
	}
	require.NoError(t, err, "simulation setup failed")

	t.Cleanup(func() {
		require.NoError(t, db.Close())
		require.NoError(t, os.RemoveAll(dir))
	})

	appOptions := make(simtestutil.AppOptionsMap, 0)
	appOptions[flags.FlagHome] = dir // ensure a unique folder
	appOptions[server.FlagInvCheckPeriod] = simcli.FlagPeriodValue

	app := NewWasmApp(logger, db, nil, true, appOptions, emptyWasmOpts, fauxMerkleModeOpt, baseapp.SetChainID(SimAppChainID))
	require.Equal(t, "WasmApp", app.Name())
	return config, db, appOptions, app
}

-- Chunk 9 --
// sim_test.go:286-353
func TestAppStateDeterminism(t *testing.T) {
	if !simcli.FlagEnabledValue {
		t.Skip("skipping application simulation")
	}

	config := simcli.NewConfigFromFlags()
	config.InitialBlockHeight = 1
	config.ExportParamsPath = ""
	config.OnOperation = false
	config.AllInvariants = false
	config.ChainID = SimAppChainID

	numSeeds := 3
	numTimesToRunPerSeed := 5
	appHashList := make([]json.RawMessage, numTimesToRunPerSeed)

	appOptions := make(simtestutil.AppOptionsMap, 0)
	appOptions[flags.FlagHome] = t.TempDir() // ensure a unique folder
	appOptions[server.FlagInvCheckPeriod] = simcli.FlagPeriodValue

	for i := 0; i < numSeeds; i++ {
		config.Seed = rand.Int63()

		for j := 0; j < numTimesToRunPerSeed; j++ {
			var logger log.Logger
			if simcli.FlagVerboseValue {
				logger = log.NewTestLogger(t)
			} else {
				logger = log.NewNopLogger()
			}

			db := dbm.NewMemDB()
			app := NewWasmApp(logger, db, nil, true, appOptions, emptyWasmOpts, interBlockCacheOpt(), baseapp.SetChainID(SimAppChainID))

			fmt.Printf(
				"running non-determinism simulation; seed %d: %d/%d, attempt: %d/%d\n",
				config.Seed, i+1, numSeeds, j+1, numTimesToRunPerSeed,
			)

			_, _, err := simulation.SimulateFromSeed(
				t,
				os.Stdout,
				app.BaseApp,
				simtestutil.AppStateFn(app.AppCodec(), app.SimulationManager(), app.DefaultGenesis()),
				simtypes.RandomAccounts, // Replace with own random account function if using keys other than secp256k1
				simtestutil.SimulationOperations(app, app.AppCodec(), config),
				BlockedAddresses(),
				config,
				app.AppCodec(),
			)
			require.NoError(t, err)

			if config.Commit {
				simtestutil.PrintStats(db)
			}

			appHash := app.LastCommitID().Hash
			appHashList[j] = appHash

			if j != 0 {
				require.Equal(
					t, string(appHashList[0]), string(appHashList[j]),
					"non-determinism in seed %d: %d/%d, attempt: %d/%d\n", config.Seed, i+1, numSeeds, j+1, numTimesToRunPerSeed,
				)
			}
		}
	}
}

=== File: app/app_test.go ===

-- Chunk 1 --
// app_test.go:22-47
func TestWasmdExport(t *testing.T) {
	db := dbm.NewMemDB()
	gapp := NewWasmAppWithCustomOptions(t, false, SetupOptions{
		Logger:  log.NewLogger(os.Stdout),
		DB:      db,
		AppOpts: simtestutil.NewAppOptionsWithFlagHome(t.TempDir()),
	})
	_, err := gapp.FinalizeBlock(&types.RequestFinalizeBlock{
		Height: 1,
	})
	require.NoError(t, err, "FinalizeBlock should not have an error")
	_, err = gapp.Commit()
	require.NoError(t, err, "Commit should not have an error")

	// Making a new app object with the db, so that initchain hasn't been called
	newGapp := NewWasmApp(
		log.NewLogger(os.Stdout),
		db,
		nil,
		true,
		simtestutil.NewAppOptionsWithFlagHome(t.TempDir()),
		emptyWasmOpts,
	)
	_, err = newGapp.ExportAppStateAndValidators(false, []string{}, nil)
	require.NoError(t, err, "ExportAppStateAndValidators should not have an error")
}

-- Chunk 2 --
// app_test.go:50-64
func TestBlockedAddrs(t *testing.T) {
	gapp := Setup(t)

	for acc := range BlockedAddresses() {
		t.Run(acc, func(t *testing.T) {
			var addr sdk.AccAddress
			if modAddr, err := sdk.AccAddressFromBech32(acc); err == nil {
				addr = modAddr
			} else {
				addr = gapp.AccountKeeper.GetModuleAddress(acc)
			}
			require.True(t, gapp.BankKeeper.BlockedAddr(addr), "ensure that blocked addresses are properly set in bank keeper")
		})
	}
}

-- Chunk 3 --
// app_test.go:66-69
func TestGetMaccPerms(t *testing.T) {
	dup := GetMaccPerms()
	require.Equal(t, maccPerms, dup, "duplicated module account permissions differed from actual module account permissions")
}

=== File: app/params/proto.go ===

-- Chunk 1 --
// proto.go:10-22
func MakeEncodingConfig() EncodingConfig {
	amino := codec.NewLegacyAmino()
	interfaceRegistry := types.NewInterfaceRegistry()
	marshaler := codec.NewProtoCodec(interfaceRegistry)
	txCfg := tx.NewTxConfig(marshaler, tx.DefaultSignModes)

	return EncodingConfig{
		InterfaceRegistry: interfaceRegistry,
		Codec:             marshaler,
		TxConfig:          txCfg,
		Amino:             amino,
	}
}

=== File: app/params/doc.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/app/params/doc.go:1-19
/*
Package params defines the simulation parameters in the gaia.

It contains the default weights used for each transaction used on the module's
simulation. These weights define the chance for a transaction to be simulated at
any gived operation.

You can replace the default values for the weights by providing a params.json
file with the weights defined for each of the transaction operations:

	{
		"op_weight_msg_send": 60,
		"op_weight_msg_delegate": 100,
	}

In the example above, the `MsgSend` has 60% chance to be simulated, while the
`MsgDelegate` will always be simulated.
*/
package params

=== File: app/params/encoding.go ===

-- Chunk 1 --
// encoding.go:11-16
type EncodingConfig struct {
	InterfaceRegistry types.InterfaceRegistry
	Codec             codec.Codec
	TxConfig          client.TxConfig
	Amino             *codec.LegacyAmino
}

=== File: app/params/weights.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/app/params/weights.go:1-42
package params

// Default simulation operation weights for messages and gov proposals
const (
	DefaultWeightMsgSend                        int = 100
	DefaultWeightMsgMultiSend                   int = 10
	DefaultWeightMsgSetWithdrawAddress          int = 50
	DefaultWeightMsgWithdrawDelegationReward    int = 50
	DefaultWeightMsgWithdrawValidatorCommission int = 50
	DefaultWeightMsgFundCommunityPool           int = 50
	DefaultWeightMsgDeposit                     int = 100
	DefaultWeightMsgVote                        int = 67
	DefaultWeightMsgUnjail                      int = 100
	DefaultWeightMsgCreateValidator             int = 100
	DefaultWeightMsgEditValidator               int = 5
	DefaultWeightMsgDelegate                    int = 100
	DefaultWeightMsgUndelegate                  int = 100
	DefaultWeightMsgBeginRedelegate             int = 100

	DefaultWeightCommunitySpendProposal int = 5
	DefaultWeightTextProposal           int = 5
	DefaultWeightParamChangeProposal    int = 5

	DefaultWeightMsgStoreCode           int = 50
	DefaultWeightMsgInstantiateContract int = 100
	DefaultWeightMsgExecuteContract     int = 100
	DefaultWeightMsgUpdateAdmin         int = 25
	DefaultWeightMsgClearAdmin          int = 10
	DefaultWeightMsgMigrateContract     int = 50

	DefaultWeightStoreCodeProposal                   int = 5
	DefaultWeightInstantiateContractProposal         int = 5
	DefaultWeightUpdateAdminProposal                 int = 5
	DefaultWeightExecuteContractProposal             int = 5
	DefaultWeightClearAdminProposal                  int = 5
	DefaultWeightMigrateContractProposal             int = 5
	DefaultWeightSudoContractProposal                int = 5
	DefaultWeightPinCodesProposal                    int = 5
	DefaultWeightUnpinCodesProposal                  int = 5
	DefaultWeightUpdateInstantiateConfigProposal     int = 5
	DefaultWeightStoreAndInstantiateContractProposal int = 5
)

=== File: .goreleaser/integration.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.goreleaser/integration.yaml:1-18
version: 2

project_name: tests

# Docs: https://goreleaser.com/customization/build/
builds:
  - id: tests
    goos:
      - linux
      - darwin
    goarch:
      - arm64
      - amd64
    command: test
    dir: integration_tests
    binary: "{{ .ProjectName }}-{{ .Os }}-{{ .Arch }}"
    no_unique_dist_dir: true
    no_main_check: true

=== File: .goreleaser/build.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.goreleaser/build.yaml:1-102
version: 2

project_name: xiond

# Docs: https://goreleaser.com/customization/hooks/
before:
  # hooks:
  #   - apt update && apt install -y musl-dev

# Docs: https://goreleaser.com/customization/build/
builds:
  - id: xiond
    goos:
      - linux
      - darwin
      # - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    goarm:
      - v8.0
    main: ./cmd/xiond
    binary: bin/xiond-{{ .Os }}-{{ .Arch }}
    hooks:
      pre:
        - cmd: mkdir -p {{ .Env.LIB_PATH }}
        - cmd: sh -c '[ "{{ .Os }}" = "windows" ] || grep "github.com/CosmWasm/wasmvm" go.mod | cut -d " " -f 1 | xargs -I {} go list -m {} | cut -d " " -f 2 | xargs -I {} wget https://github.com/CosmWasm/wasmvm/releases/download/{}/{{ .Env.WASM_LIB }} -O {{ .Env.LIB_PATH }}/{{ .Env.WASM_LIB}}'
        - cmd: echo Starting build...
    ldflags:
      - -X main.Date={{ .CommitDate }}
      - -X github.com/cosmos/cosmos-sdk/version.Name={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.AppName={{ .ProjectName }}
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger
      - -w -s
      - -linkmode=external
      - >-
        {{- if eq .Os "linux" -}}
          -extldflags '-Wl,-z,muldefs -static -lm'
        {{- end }}
    mod_timestamp: "{{ .CommitTimestamp }}"
    tags:
      - netgo
      - ledger
      - >-
        {{- if eq .Os "linux" -}}
          osusergo
        {{- end }}
      - >-
        {{- if eq .Os "darwin" -}}
          static_wasm
        {{- else if eq .Os "linux" -}}
          muslc
        {{- end }}
    flags:
      - -mod=readonly
      - -trimpath
    env:
      - CGO_ENABLED=1
      - CGO_LDFLAGS='-L./dist/lib'
      - LIB_PATH=./dist/lib
      - >-
        {{- if eq .Os "darwin" }}MACOSX_DEPLOYMENT_TARGET=10.12{{- end }}
      - >-
        {{- if eq .Os "darwin" }}WASM_LIB=libwasmvmstatic_darwin.a{{- end }}
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}WASM_LIB=libwasmvm_muslc.x86_64.a{{- end }}
          {{- if eq .Arch "arm64" }}WASM_LIB=libwasmvm_muslc.aarch64.a{{- end }}
        {{- end }}
        {{- if eq .Os "windows" }}WASM_LIB=​wasmvm.dll{{- end }}
      - >-
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64"}}CC=o64-clang{{- end }}
          {{- if eq .Arch "arm64"}}CC=oa64-clang{{- end }}
        {{- end }}
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CC=x86_64-linux-gnu-gcc{{- end }}
          {{- if eq .Arch "arm64" }}CC=aarch64-linux-gnu-gcc{{- end }}
        {{- end }}
        {{- if eq .Os "windows" }}
          {{- if eq .Arch "amd64" }}CC=x86_64-w64-mingw32-gcc{{- end }}
          {{- if eq .Arch "arm64" }}CC=/llvm-mingw/bin/aarch64-w64-mingw32-gcc{{- end }}
        {{- end }}
      - >-
        {{- if eq .Os "darwin" }}
          {{- if eq .Arch "amd64"}}CXX=o64-clang++{{- end }}
          {{- if eq .Arch "arm64"}}CXX=oa64-clang++{{- end }}
        {{- end }}
        {{- if eq .Os "linux" }}
          {{- if eq .Arch "amd64" }}CXX=x86_64-linux-gnu-g++{{- end }}
          {{- if eq .Arch "arm64" }}CXX=aarch64-linux-gnu-g++{{- end }}
        {{- end }}
        {{- if eq .Os "windows" }}
          {{- if eq .Arch "amd64" }}CXX=x86_64-w64-mingw32-g++{{- end }}
          {{- if eq .Arch "arm64" }}CXX=/llvm-mingw/bin/aarch64-w64-mingw32-g++{{- end }}
        {{- end }}




=== File: .goreleaser/docker.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.goreleaser/docker.yaml:1-118
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json

version: 2

project_name: xiond

dist: dist/dist

# Docs: https://goreleaser.com/customization/build/
builds:
  - # Set the builder to prebuilt
    builder: prebuilt

    # When builder is `prebuilt` there are no defaults for goos, goarch,
    # goarm, gomips, goamd64 and targets, so you always have to specify them:
    goos:
      - linux
    goarch:
      - amd64
      - arm64

    # prebuilt specific options
    prebuilt:
      # Path must be the template path to the binaries.
      path: dist/xiond_{{ .Os }}_{{ .Arch }}/xiond

    # Use 'binary' to set the final name of your binary.
    # This is the name that will be used in archives et al.
    binary: xiond

dockers:
  - id: heighliner-linux-arm64
    ids:
      - xiond-linux-arm64
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - 'heighliner:{{ .ShortCommit }}-arm64'
    build_flag_templates:
      - "--pull"
      - "--target=heighliner"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://xion.burnt.com"
      - "--label=org.opencontainers.image.source=https://github.com/burnt-labs/xion"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--build-arg=XIOND_BINARY=xiond_linux_arm64/xiond"

  - id: heighliner-linux-amd64
    ids:
      - xiond-linux-amd64
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - 'heighliner:{{ .ShortCommit }}-amd64'
    build_flag_templates:
      - "--pull"
      - "--target=heighliner"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://xion.burnt.com"
      - "--label=org.opencontainers.image.source=https://github.com/burnt-labs/xion"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--build-arg=XIOND_BINARY=xiond_linux_amd64/xiond"

  - id: xiond-linux-arm64
    ids:
      - xiond-linux-arm64
    use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - 'xiond:{{ .ShortCommit }}-arm64'
    build_flag_templates:
      - "--pull"
      - "--target=release"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://xion.burnt.com"
      - "--label=org.opencontainers.image.source=https://github.com/burnt-labs/xion"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--build-arg=XIOND_BINARY=xiond_linux_arm64/xiond"

  - id: xiond-linux-amd64
    ids:
      - xiond-linux-amd64
    use: buildx
    goos: linux
    goarch: amd64
    image_templates:
      - 'xiond:{{ .ShortCommit }}-amd64'
    build_flag_templates:
      - "--pull"
      - "--target=release"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.description={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://xion.burnt.com"
      - "--label=org.opencontainers.image.source=https://github.com/burnt-labs/xion"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
      - "--build-arg=XIOND_BINARY=xiond_linux_amd64/xiond"

=== File: .goreleaser/release.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/.goreleaser/release.yaml:1-148
# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json

# using this file requires goreleaser pro

version: 2

project_name: xiond

dist: release

metadata:
  mod_timestamp: "{{ .CommitTimestamp }}"
  maintainers:
    - "Burnt <support@burnt.com>"
  license: "Apache2.0"
  homepage: "https://xion.burnt.com/"
  description: "Xiond is the Cosmos SDK based blockchain cli/daemon for the Xion Network."

snapshot:
  version_template: "{{ .Version }}-{{ .ShortCommit }}"

# includes:
#   - from_file:
#       path: ./.goreleaser/build.yaml
# Docs: https://goreleaser.com/customization/build/
builds:
  - builder: prebuilt
    binary: xiond
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    goarm64:
      - v8.0
    prebuilt:
      path: "dist/xiond_{{ .Os }}_{{ .Arch }}_{{ with .Arm64 }}{{ . }}{{ end }}{{ with .Amd64 }}{{ . }}{{ end }}/bin/xiond-{{ .Os }}-{{ .Arch }}"

# Docs: https://goreleaser.com/customization/universalbinaries/
universal_binaries:
  - id: xiond

# Docs: https://goreleaser.com/customization/source/
source:
  enabled: true

archives:
  - id: tgz
    formats: [tar.gz]
    meta: false
    wrap_in_directory: false
    strip_binary_directory: false

# docs: https://goreleaser.com/customization/checksum/
checksum:
  name_template: "xiond-{{ .Version }}-checksums.txt"
  algorithm: sha256

nfpms:
  - if: '{{ eq .Os "linux" }}'
    formats:
      - apk
      - deb
      - rpm
    apk:
      signature:
        key_file: "{{ .Env.PEM_KEY_PATH }}"
    deb:
      signature:
        key_file: "{{ .Env.GPG_KEY_PATH }}"
    rpm:
      signature:
        key_file: "{{ .Env.GPG_KEY_PATH }}"

# not used
# signs:
#   - artifacts: package
#     cmd: gpg2
#     #- args: ["-u", "<key id, fingerprint, email, ...>", "--output", "${signature}", "--detach-sign", "${artifact}"]

# docs https://goreleaser.com/customization/fury/
furies:
  - account: burnt

# Docs: https://goreleaser.com/customization/homebrew/
brews:
  - alternative_names:
      - xiond@{{ .Version }}
      - xiond@{{ .Major }}
    # Repository to push the generated files to.
    skip_upload: false
    ids:
      - tgz
    test: |
      system "#{bin}/xiond version"
    commit_author:
      name: developer
      email: 197779235+isburnt@users.noreply.github.com
    directory: Formula
    repository:
      owner: burnt-labs
      name: homebrew-xion
      branch: "{{.ProjectName}}-v{{.Version}}"
      token: "{{ .Env.GORELEASER_ACCESS_TOKEN }}"
      pull_request:
        enabled: true
        draft: false
        base:
          owner: burnt-labs
          name: homebrew-xion
          branch: main


# Docs: https://goreleaser.com/customization/changelog/
# changelog:
  # disable: "{{ .Env.CREATE_CHANGELOG }}"
  # ai:
  #  use: openai
  # groups:
  # - title: Features
  #   regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
  #   order: 0
  # - title: "Bug fixes"
  #   regexp: '^.*?(bug|fix)(\([[:word:]]+\))??!?:.+$'
  #   order: 1
  # - title: Others
  #   order: 999
  # filters:
  #   exclude:
  #     - '^revert:'
    #include:

# Docs: https://goreleaser.com/customization/release/
release:
  github:
    owner: burnt-labs
    name: xion
  draft: true
  use_existing_draft: true
  replace_existing_artifacts: true
  prerelease: "true"
  make_latest: false
  # disable: "{{ .Env.SKIP_GITHUB_RELEASE }}"
  mode: keep-existing


=== File: contrib/local/setup_wasmd.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/setup_wasmd.sh:1-36
#!/bin/bash
set -o errexit -o nounset -o pipefail

PASSWORD=${PASSWORD:-1234567890}
STAKE=${STAKE_TOKEN:-ustake}
FEE=${FEE_TOKEN:-ucosm}
CHAIN_ID=${CHAIN_ID:-testing}
MONIKER=${MONIKER:-node001}

wasmd init --chain-id "$CHAIN_ID" "$MONIKER"
# staking/governance token is hardcoded in config, change this
## OSX requires: -i.
sed -i. "s/\"stake\"/\"$STAKE\"/" "$HOME"/.wasmd/config/genesis.json
if ! wasmd keys show validator --keyring-backend=test; then
  (
    echo "$PASSWORD"
    echo "$PASSWORD"
  ) | wasmd keys add validator --keyring-backend=test
fi
# hardcode the validator account for this instance
echo "$PASSWORD" | wasmd genesis add-genesis-account validator "1000000000$STAKE,1000000000$FEE" --keyring-backend=test
# (optionally) add a few more genesis accounts
for addr in "$@"; do
  echo "$addr"
  wasmd genesis add-genesis-account "$addr" "1000000000$STAKE,1000000000$FEE" --keyring-backend=test
done
# submit a genesis validator tx
## Workraround for https://github.com/cosmos/cosmos-sdk/issues/8251
(
  echo "$PASSWORD"
  echo "$PASSWORD"
  echo "$PASSWORD"
) | wasmd genesis gentx validator "250000000$STAKE" --chain-id="$CHAIN_ID" --amount="250000000$STAKE" --keyring-backend=test
## should be:
# (echo "$PASSWORD"; echo "$PASSWORD"; echo "$PASSWORD") | xiond gentx validator "250000000$STAKE" --chain-id="$CHAIN_ID"
wasmd genesis collect-gentxs

=== File: contrib/local/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/README.md:1-26
# Dev scripts
For manual testing. Works on my box(*) ...


*) OSX

```
make install
cd contrib/local
rm -rf /tmp/trash
HOME=/tmp/trash bash setup_wasmd.sh
HOME=/tmp/trash bash start_node.sh
```

Next shell:

```
cd contrib/local
./01-accounts.sh
./02-contracts.sh
```

## Shell script development

[Use `shellcheck`](https://www.shellcheck.net/) to avoid common mistakes in shell scripts.
[Use `shfmt`](https://github.com/mvdan/sh) to ensure a consistent code formatting.

=== File: contrib/local/02-contracts.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/02-contracts.sh:1-112
#!/bin/bash
set -o errexit -o nounset -o pipefail -x

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

echo "-----------------------"
echo "## Add new CosmWasm contract"
RESP=$(wasmd tx wasm store "$DIR/../../x/wasm/keeper/testdata/hackatom.wasm" \
  --from validator --gas 1500000 -y --chain-id=testing --node=http://localhost:26657 -b sync -o json --keyring-backend=test)
sleep 6
RESP=$(wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json)
CODE_ID=$(echo "$RESP" | jq -r '.logs[0].events[]| select(.type=="store_code").attributes[]| select(.key=="code_id").value')
CODE_HASH=$(echo "$RESP" | jq -r '.logs[0].events[]| select(.type=="store_code").attributes[]| select(.key=="code_checksum").value')
echo "* Code id: $CODE_ID"
echo "* Code checksum: $CODE_HASH"

echo "* Download code"
TMPDIR=$(mktemp -t wasmdXXXXXX)
wasmd q wasm code "$CODE_ID" "$TMPDIR"
rm -f "$TMPDIR"
echo "-----------------------"
echo "## List code"
wasmd query wasm list-code --node=http://localhost:26657 -o json | jq

echo "-----------------------"
echo "## Create new contract instance"
INIT="{\"verifier\":\"$(wasmd keys show validator -a --keyring-backend=test)\", \"beneficiary\":\"$(wasmd keys show fred -a --keyring-backend=test)\"}"
RESP=$(wasmd tx wasm instantiate "$CODE_ID" "$INIT" --admin="$(wasmd keys show validator -a --keyring-backend=test)" \
  --from validator --amount="100ustake" --label "local0.1.0" \
  --gas 1000000 -y --chain-id=testing -b sync -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq

CONTRACT=$(wasmd query wasm list-contract-by-code "$CODE_ID" -o json | jq -r '.contracts[-1]')
echo "* Contract address: $CONTRACT"

echo "## Create new contract instance with predictable address"
RESP=$(wasmd tx wasm instantiate2 "$CODE_ID" "$INIT" $(echo -n "testing" | xxd -ps) \
  --admin="$(wasmd keys show validator -a --keyring-backend=test)" \
  --from validator --amount="100ustake" --label "local0.1.0" \
  --fix-msg \
  --gas 1000000 -y --chain-id=testing -b sync -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq


predictedAdress=$(wasmd q wasm build-address "$CODE_HASH" $(wasmd keys show validator -a --keyring-backend=test) $(echo -n "testing" | xxd -ps) "$INIT")
wasmd q wasm contract "$predictedAdress" -o json | jq

echo "### Query all"
RESP=$(wasmd query wasm contract-state all "$CONTRACT" -o json)
echo "$RESP" | jq
echo "### Query smart"
wasmd query wasm contract-state smart "$CONTRACT" '{"verifier":{}}' -o json | jq
echo "### Query raw"
KEY=$(echo "$RESP" | jq -r ".models[0].key")
wasmd query wasm contract-state raw "$CONTRACT" "$KEY" -o json | jq

echo "-----------------------"
echo "## Execute contract $CONTRACT"
MSG='{"release":{}}'
RESP=$(wasmd tx wasm execute "$CONTRACT" "$MSG" \
  --from validator \
  --gas 1000000 -y --chain-id=testing -b sync -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq


echo "-----------------------"
echo "## Set new admin"
echo "### Query old admin: $(wasmd q wasm contract "$CONTRACT" -o json | jq -r '.contract_info.admin')"
echo "### Update contract"
RESP=$(wasmd tx wasm set-contract-admin "$CONTRACT" "$(wasmd keys show fred -a --keyring-backend=test)" \
  --from validator -y --chain-id=testing -b sync -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq

echo "### Query new admin: $(wasmd q wasm contract "$CONTRACT" -o json | jq -r '.contract_info.admin')"

echo "-----------------------"
echo "## Migrate contract"
echo "### Upload new code"
RESP=$(wasmd tx wasm store "$DIR/../../x/wasm/keeper/testdata/burner.wasm" \
  --from validator --gas 1000000 -y --chain-id=testing --node=http://localhost:26657 -b sync -o json --keyring-backend=test)
sleep 6
RESP=$(wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json)
BURNER_CODE_ID=$(echo "$RESP" | jq -r '.logs[0].events[]| select(.type=="store_code").attributes[]| select(.key=="code_id").value')
echo "### Migrate to code id: $BURNER_CODE_ID"

DEST_ACCOUNT=$(wasmd keys show fred -a --keyring-backend=test)
RESP=$(wasmd tx wasm migrate "$CONTRACT" "$BURNER_CODE_ID" "{\"payout\": \"$DEST_ACCOUNT\"}" --from fred \
  --chain-id=testing -b sync -y -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq

echo "### Query destination account: $BURNER_CODE_ID"
wasmd q bank balances "$DEST_ACCOUNT" -o json | jq
echo "### Query contract meta data: $CONTRACT"
wasmd q wasm contract "$CONTRACT" -o json | jq

echo "### Query contract meta history: $CONTRACT"
wasmd q wasm contract-history "$CONTRACT" -o json | jq

echo "-----------------------"
echo "## Clear contract admin"
echo "### Query old admin: $(wasmd q wasm contract "$CONTRACT" -o json | jq -r '.contract_info.admin')"
echo "### Update contract"
RESP=$(wasmd tx wasm clear-contract-admin "$CONTRACT" \
  --from fred -y --chain-id=testing -b sync -o json --keyring-backend=test)
sleep 6
wasmd q tx $(echo "$RESP"| jq -r '.txhash') -o json | jq
echo "### Query new admin: $(wasmd q wasm contract "$CONTRACT" -o json | jq -r '.contract_info.admin')"

=== File: contrib/local/start_node.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/start_node.sh:1-4
#!/bin/bash
set -eu

wasmd start --rpc.laddr tcp://0.0.0.0:26657 --log_level=info  --trace #remove trace flag if you don't wantg the stack trace to be printed

=== File: contrib/local/03-grpc-queries.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/03-grpc-queries.sh:1-24
#!/bin/bash
set -o errexit -o nounset -o pipefail

DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

echo "-----------------------"

echo "### List all codes"
RESP=$(grpcurl -plaintext localhost:9090 cosmwasm.wasm.v1.Query/Codes)
echo "$RESP" | jq

CODE_ID=$(echo "$RESP" | jq -r '.codeInfos[-1].codeId')
echo "### List contracts by code"
RESP=$(grpcurl -plaintext -d "{\"codeId\": $CODE_ID}" localhost:9090 cosmwasm.wasm.v1.Query/ContractsByCode)
echo "$RESP" | jq

echo "### Show history for contract"
CONTRACT=$(echo "$RESP" | jq -r ".contracts[-1]")
grpcurl -plaintext -d "{\"address\": \"$CONTRACT\"}" localhost:9090 cosmwasm.wasm.v1.Query/ContractHistory | jq

echo "### Show contract state"
grpcurl -plaintext -d "{\"address\": \"$CONTRACT\"}" localhost:9090 cosmwasm.wasm.v1.Query/AllContractState | jq

echo "Empty state due to 'burner' contract cleanup"

=== File: contrib/local/01-accounts.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/local/01-accounts.sh:1-18
#!/bin/bash
set -o errexit -o nounset -o pipefail

BASE_ACCOUNT=$(wasmd keys show validator -a --keyring-backend=test)
wasmd q account "$BASE_ACCOUNT" -o json | jq

echo "## Add new account"
wasmd keys add fred --keyring-backend=test

echo "## Check balance"
NEW_ACCOUNT=$(wasmd keys show fred -a --keyring-backend=test)
wasmd q bank balances "$NEW_ACCOUNT" -o json || true

echo "## Transfer tokens"
wasmd tx bank send validator "$NEW_ACCOUNT" 1ustake --gas 1000000 -y --chain-id=testing --node=http://localhost:26657 -b sync -o json --keyring-backend=test | jq

echo "## Check balance again"
wasmd q bank balances "$NEW_ACCOUNT" -o json | jq

=== File: contrib/relayer-tests/test_ibc_transfer.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/test_ibc_transfer.sh:1-26
#!/bin/bash

set -e

# Ensure relayer is installed
if ! [ -x "$(which rly)" ]; then
  echo "Error: rly is not installed." >&2
  exit 1
fi

rly tx link demo -d

rly tx transfer ibc-0 ibc-1 1000000test $(rly chains address ibc-1)

sleep 2

EXPECTED_BALANCE="100000000000test"
CHAIN_1_BALANCE=$(rly q bal ibc-1)

if [[ "$CHAIN_1_BALANCE" == *"$EXPECTED_BALANCE" ]]; then
    echo "Token not sent correctly"
    echo "$EXPECTED_BALANCE not found in $CHAIN_1_BALANCE"
    exit 1
fi

echo "IBC transfer executed successfully"

=== File: contrib/relayer-tests/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/README.md:1-14
# Relayer tests

These scripts helps to test go-relayer with two local wasmd chains. \
Make sure you run below scripts under `wasmd/contrib/relayer-tests` directory.

- `./init_two_chainz_relayer.sh` will spin two chains and runs
- `./one_chain.sh` will spin a single chain. This script used by the one above
- `./test_ibc_transfer.sh` will setup a path between chains and send tokens between chains.

## Thank you
The setup scripts here are taken from [cosmos/relayer](https://github.com/cosmos/relayer)
Thank your relayer team for these scripts.



=== File: contrib/relayer-tests/.gitignore ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/.gitignore:1-3
# Testing
.relayer
data

=== File: contrib/relayer-tests/one_chain.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/one_chain.sh:1-115
#!/bin/sh

set -e

display_usage() {
	echo "\nMissing $1 parameter. Please check if all parameters were specified."
	echo "\nUsage: ./one-chain [BINARY] [CHAIN_ID] [CHAIN_DIR] [RPC_PORT] [P2P_PORT] [PROFILING_PORT] [GRPC_PORT]"
  echo "\nExample: ./one-chain $BINARY test-chain-id ./data 26657 26656 6060 9090 \n"
  exit 1
}

KEYRING=--keyring-backend="test"
SILENT=1

redirect() {
  if [ "$SILENT" -eq 1 ]; then
    "$@" > /dev/null 2>&1
  else
    "$@"
  fi
}

BINARY=$1
CHAINID=$2
CHAINDIR=$3
RPCPORT=$4
P2PPORT=$5
PROFPORT=$6
GRPCPORT=$7

if [ -z "$1" ]; then
  display_usage "[BINARY] ($BINARY|akash)"
fi

if [ -z "$2" ]; then
  display_usage "[CHAIN_ID]"
fi

if [ -z "$3" ]; then
  display_usage "[CHAIN_DIR]"
fi

if [ -z "$4" ]; then
  display_usage "[RPC_PORT]"
fi

if [ -z "$5" ]; then
  display_usage "[P2P_PORT]"
fi

if [ -z "$6" ]; then
  display_usage "[PROFILING_PORT]"
fi

if [ -z "$7" ]; then
  display_usage "[GRPC_PORT]"
fi

echo "Creating $BINARY instance: home=$CHAINDIR | chain-id=$CHAINID | p2p=:$P2PPORT | rpc=:$RPCPORT | profiling=:$PROFPORT | grpc=:$GRPCPORT"

# Add dir for chain, exit if error
if ! mkdir -p $CHAINDIR/$CHAINID 2>/dev/null; then
    echo "Failed to create chain folder. Aborting..."
    exit 1
fi

# Build genesis file incl account for passed address
chain_one_coins="100000000000stake,100000000000umuon,100000000000test"
chain_two_coins="100000000000stake,100000000000umuon"
delegate="100000000000stake"

redirect $BINARY --home $CHAINDIR/$CHAINID --chain-id $CHAINID init $CHAINID
sleep 1
$BINARY --home $CHAINDIR/$CHAINID keys add validator $KEYRING --output json > $CHAINDIR/$CHAINID/validator_seed.json 2> /dev/null
sleep 1
$BINARY --home $CHAINDIR/$CHAINID keys add user $KEYRING --output json > $CHAINDIR/$CHAINID/key_seed.json 2> /dev/null
sleep 1
redirect $BINARY --home $CHAINDIR/$CHAINID add-genesis-account $($BINARY --home $CHAINDIR/$CHAINID keys $KEYRING show user -a) $chain_one_coins
sleep 1
redirect $BINARY --home $CHAINDIR/$CHAINID add-genesis-account $($BINARY --home $CHAINDIR/$CHAINID keys $KEYRING show validator -a) $chain_two_coins
sleep 1
redirect $BINARY --home $CHAINDIR/$CHAINID gentx validator $delegate $KEYRING --chain-id $CHAINID
sleep 1
redirect $BINARY --home $CHAINDIR/$CHAINID collect-gentxs
sleep 1

# Check platform
platform='unknown'
unamestr=`uname`
if [ "$unamestr" = 'Linux' ]; then
   platform='linux'
fi

# Set proper defaults and change ports (use a different sed for Mac or Linux)
echo "Change settings in config.toml file..."
if [ $platform = 'linux' ]; then
  sed -i 's#"tcp://127.0.0.1:26657"#"tcp://0.0.0.0:'"$RPCPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's#"tcp://0.0.0.0:26656"#"tcp://0.0.0.0:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's#"localhost:6060"#"localhost:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/timeout_commit = "5s"/timeout_commit = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/timeout_propose = "3s"/timeout_propose = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i 's/index_all_keys = false/index_all_keys = true/g' $CHAINDIR/$CHAINID/config/config.toml
  # sed -i '' 's#index-events = \[\]#index-events = \["message.action","send_packet.packet_src_channel","send_packet.packet_sequence"\]#g' $CHAINDIR/$CHAINID/config/app.toml
else
  sed -i '' 's#"tcp://127.0.0.1:26657"#"tcp://0.0.0.0:'"$RPCPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's#"tcp://0.0.0.0:26656"#"tcp://0.0.0.0:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's#"localhost:6060"#"localhost:'"$P2PPORT"'"#g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/timeout_commit = "5s"/timeout_commit = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/timeout_propose = "3s"/timeout_propose = "1s"/g' $CHAINDIR/$CHAINID/config/config.toml
  sed -i '' 's/index_all_keys = false/index_all_keys = true/g' $CHAINDIR/$CHAINID/config/config.toml
  # sed -i '' 's#index-events = \[\]#index-events = \["message.action","send_packet.packet_src_channel","send_packet.packet_sequence"\]#g' $CHAINDIR/$CHAINID/config/app.toml
fi

# Start the gaia
redirect $BINARY --home $CHAINDIR/$CHAINID start --pruning=nothing --grpc.address="0.0.0.0:$GRPCPORT" > $CHAINDIR/$CHAINID.log &

=== File: contrib/relayer-tests/init_two_chainz_relayer.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/init_two_chainz_relayer.sh:1-64
#!/bin/bash
# init_two_chainz_relayer creates two xiond chains and configures the relayer

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
WASMD_DATA="$(pwd)/data"
RELAYER_CONF="$(pwd)/.relayer"

# Ensure relayer is installed
if ! [ -x "$(which rly)" ]; then
  echo "Error: wasmd is not installed. Try running 'make build-wasmd'" >&2
  exit 1
fi

# Ensure xiond is installed
if ! [ -x "$(which xiond)" ]; then
  echo "Error: wasmd is not installed. Try running 'make build-wasmd'" >&2
  exit 1
fi

# Display software version for testers
echo "WASMD VERSION INFO:"
xiond version --long

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Delete data from old runs
rm -rf $WASMD_DATA &> /dev/null
rm -rf $RELAYER_CONF &> /dev/null

# Stop existing xiond processes
killall xiond &> /dev/null

set -e

chainid0=ibc-0
chainid1=ibc-1

echo "Generating wasmd configurations..."
mkdir -p $WASMD_DATA && cd $WASMD_DATA && cd ../
./one_chain.sh xiond $chainid0 ./data 26657 26656 6060 9090
./one_chain.sh xiond $chainid1 ./data 26557 26556 6061 9091

[ -f $WASMD_DATA/$chainid0.log ] && echo "$chainid0 initialized. Watch file $WASMD_DATA/$chainid0.log to see its execution."
[ -f $WASMD_DATA/$chainid1.log ] && echo "$chainid1 initialized. Watch file $WASMD_DATA/$chainid1.log to see its execution."


echo "Generating rly configurations..."
rly config init
rly config add-chains configs/xiond/chains
rly config add-paths configs/xiond/paths

SEED0=$(jq -r '.mnemonic' $WASMD_DATA/ibc-0/key_seed.json)
SEED1=$(jq -r '.mnemonic' $WASMD_DATA/ibc-1/key_seed.json)
echo "Key $(rly keys restore ibc-0 testkey "$SEED0") imported from ibc-0 to relayer..."
echo "Key $(rly keys restore ibc-1 testkey "$SEED1") imported from ibc-1 to relayer..."
echo "Creating light clients..."
sleep 3
rly light init ibc-0 -f
rly light init ibc-1 -f

=== File: contrib/relayer-tests/configs/wasmd/paths/demo.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/configs/wasmd/paths/demo.json:1-1
{"src":{"chain-id":"ibc-0","client-id":"","connection-id":"","channel-id":"","port-id":"transfer","order":"unordered","version":"ics20-1"},"dst":{"chain-id":"ibc-1","client-id":"","connection-id":"","channel-id":"","port-id":"transfer","order":"unordered","version":"ics20-1"},"strategy":{"type":"naive"}}

=== File: contrib/relayer-tests/configs/wasmd/chains/ibc-1.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/configs/wasmd/chains/ibc-1.json:1-1
{"key":"testkey","chain-id":"ibc-1","rpc-addr":"http://localhost:26557","account-prefix":"wasm","gas-adjustment":1.5,"gas-prices":"0.025stake", "trusting-period":"336h"}

=== File: contrib/relayer-tests/configs/wasmd/chains/ibc-0.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/relayer-tests/configs/wasmd/chains/ibc-0.json:1-1
{"key":"testkey","chain-id":"ibc-0","rpc-addr":"http://localhost:26657","account-prefix":"wasm","gas-adjustment":1.5,"gas-prices":"0.025stake","trusting-period":"336h"}

=== File: contrib/prometheus/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/prometheus/README.md:1-53
# Setup
Enable prometheus metrics in wasmd:

* Edit `$HOME/config/app.toml`
```toml
[telemetry]

# Enabled enables the application telemetry functionality. When enabled,
# an in-memory sink is also enabled by default. Operators may also enabled
# other sinks such as Prometheus.
enabled =true
# ...

# PrometheusRetentionTime, when positive, enables a Prometheus metrics sink.
prometheus-retention-time = 15
```

`retention-time` must be >0 (see prometheus scrape config)


* Edit `$HOME/config/config.toml`
```toml
[instrumentation]

# When true, Prometheus metrics are served under /metrics on
# PrometheusListenAddr.
# Check out the documentation for the list of available metrics.
prometheus = true
```

Test manually at:
`http://localhost:1317/metrics?format=prometheus`

Note the `format` parameter in the request for the endpoint:


# Local testing
## Run Prometheus
```sh
# port 9090 is used by xiond already
docker run -it -v $(pwd)/contrib/prometheus:/prometheus  -p9091:9090  prom/prometheus --config.file=/prometheus/prometheus.yaml
```
* Open [console](http://localhost:9091) and find `wasm_`service metrics

## Run Grafana

```shell
docker run -it -p 3000:3000 grafana/grafana
```
* Add Prometheus data source
`http://host.docker.internal:9091`
### Labels
* `wasm_contract_create` = nanosec

=== File: contrib/prometheus/prometheus.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/prometheus/prometheus.yaml:1-11
global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
rule_files:

scrape_configs:
- job_name: xiond

  scrape_interval: 5s
  static_configs:
    - targets: ['host.docker.internal:26660']

=== File: contrib/devtools/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/contrib/devtools/README.md:1-6
## Contributors

Thanks to the entire Cosmos SDK team and the contributors who put their efforts into making simulation testing
easier to implement. 🤗

https://github.com/cosmos/cosmos-sdk/blob/master/contrib/devtools/Makefile

=== File: benchmarks/cw20_test.go ===

-- Chunk 1 --
// cw20_test.go:3-8
type cw20InitMsg struct {
	Name            string    `json:"name"`
	Symbol          string    `json:"symbol"`
	Decimals        uint8     `json:"decimals"`
	InitialBalances []balance `json:"initial_balances"`
}

-- Chunk 2 --
// cw20_test.go:10-13
type balance struct {
	Address string `json:"address"`
	Amount  uint64 `json:"amount,string"`
}

-- Chunk 3 --
// cw20_test.go:15-17
type cw20ExecMsg struct {
	Transfer *transferMsg `json:"transfer,omitempty"`
}

-- Chunk 4 --
// cw20_test.go:19-22
type transferMsg struct {
	Recipient string `json:"recipient"`
	Amount    uint64 `json:"amount,string"`
}

=== File: benchmarks/bench_test.go ===

-- Chunk 1 --
// bench_test.go:21-135
func BenchmarkTxSending(b *testing.B) {
	cases := map[string]struct {
		db          func(*testing.B) dbm.DB
		txBuilder   func(*testing.B, *AppInfo) []sdk.Tx
		blockSize   int
		numAccounts int
	}{
		"basic send - memdb": {
			db:          buildMemDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(bankSendMsg),
			numAccounts: 50,
		},
		"cw20 transfer - memdb": {
			db:          buildMemDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(cw20TransferMsg),
			numAccounts: 50,
		},
		"basic send - leveldb": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(bankSendMsg),
			numAccounts: 50,
		},
		"cw20 transfer - leveldb": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(cw20TransferMsg),
			numAccounts: 50,
		},
		"basic send - leveldb - 8k accounts": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(bankSendMsg),
			numAccounts: 8000,
		},
		"cw20 transfer - leveldb - 8k accounts": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(cw20TransferMsg),
			numAccounts: 8000,
		},
		"basic send - leveldb - 8k accounts - huge blocks": {
			db:          buildLevelDB,
			blockSize:   1000,
			txBuilder:   buildTxFromMsg(bankSendMsg),
			numAccounts: 8000,
		},
		"cw20 transfer - leveldb - 8k accounts - huge blocks": {
			db:          buildLevelDB,
			blockSize:   1000,
			txBuilder:   buildTxFromMsg(cw20TransferMsg),
			numAccounts: 8000,
		},
		"basic send - leveldb - 80k accounts": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(bankSendMsg),
			numAccounts: 80000,
		},
		"cw20 transfer - leveldb - 80k accounts": {
			db:          buildLevelDB,
			blockSize:   20,
			txBuilder:   buildTxFromMsg(cw20TransferMsg),
			numAccounts: 80000,
		},
	}

	for name, tc := range cases {
		b.Run(name, func(b *testing.B) {
			db := tc.db(b)
			defer db.Close()
			appInfo := InitializeWasmApp(b, db, tc.numAccounts)
			txs := tc.txBuilder(b, &appInfo)

			// number of Tx per block for the benchmarks
			blockSize := tc.blockSize
			height := int64(3)
			txEncoder := appInfo.TxConfig.TxEncoder()

			b.ResetTimer()

			var appendedTxs [][]byte
			for i := 0; i < b.N/blockSize; i++ {
				for j := 0; j < blockSize; j++ {
					idx := i*blockSize + j
					bz, err := txEncoder(txs[idx])
					require.NoError(b, err)
					rsp, err := appInfo.App.CheckTx(&abci.RequestCheckTx{
						Tx:   bz,
						Type: abci.CheckTxType_New,
					})
					require.NoError(b, err)
					require.True(b, rsp.IsOK())

					appendedTxs = append(appendedTxs, bz)
					dRsp, err := appInfo.App.FinalizeBlock(&abci.RequestFinalizeBlock{
						Txs: [][]byte{bz},
					})
					require.NoError(b, err)
					require.True(b, dRsp.TxResults[0].IsOK())
				}

				_, err := appInfo.App.FinalizeBlock(&abci.RequestFinalizeBlock{
					Time:   time.Now(),
					Height: height,
					Txs:    appendedTxs,
				})
				require.NoError(b, err)
				height++
			}
		})
	}
}

-- Chunk 2 --
// bench_test.go:137-143
func bankSendMsg(info *AppInfo) ([]sdk.Msg, error) {
	// Precompute all txs
	rcpt := sdk.AccAddress(secp256k1.GenPrivKey().PubKey().Address())
	coins := sdk.Coins{sdk.NewInt64Coin(info.Denom, 100)}
	sendMsg := banktypes.NewMsgSend(info.MinterAddr, rcpt, coins)
	return []sdk.Msg{sendMsg}, nil
}

-- Chunk 3 --
// bench_test.go:145-162
func cw20TransferMsg(info *AppInfo) ([]sdk.Msg, error) {
	rcpt := sdk.AccAddress(secp256k1.GenPrivKey().PubKey().Address())
	transfer := cw20ExecMsg{Transfer: &transferMsg{
		Recipient: rcpt.String(),
		Amount:    765,
	}}
	transferBz, err := json.Marshal(transfer)
	if err != nil {
		return nil, err
	}

	sendMsg := &wasmtypes.MsgExecuteContract{
		Sender:   info.MinterAddr.String(),
		Contract: info.ContractAddr,
		Msg:      transferBz,
	}
	return []sdk.Msg{sendMsg}, nil
}

-- Chunk 4 --
// bench_test.go:164-168
func buildTxFromMsg(builder func(info *AppInfo) ([]sdk.Msg, error)) func(b *testing.B, info *AppInfo) []sdk.Tx {
	return func(b *testing.B, info *AppInfo) []sdk.Tx {
		return GenSequenceOfTxs(b, info, builder, b.N)
	}
}

-- Chunk 5 --
// bench_test.go:170-172
func buildMemDB(_ *testing.B) dbm.DB {
	return dbm.NewMemDB()
}

-- Chunk 6 --
// bench_test.go:174-178
func buildLevelDB(b *testing.B) dbm.DB {
	levelDB, err := dbm.NewGoLevelDBWithOpts("testing", b.TempDir(), &opt.Options{BlockCacher: opt.NoCacher})
	require.NoError(b, err)
	return levelDB
}

=== File: benchmarks/app_test.go ===

-- Chunk 1 --
// app_test.go:37-44
func setup(db dbm.DB, withGenesis bool, _ uint, _ ...wasmkeeper.Option) (*app.WasmApp, app.GenesisState) { //nolint:unparam
	wasmApp := app.NewWasmApp(log.NewLogger(os.Stdout), db, nil, true, simtestutil.EmptyAppOptions{}, nil)

	if withGenesis {
		return wasmApp, app.NewDefaultGenesisState(wasmApp.AppCodec(), wasmApp.BasicModuleManager)
	}
	return wasmApp, app.GenesisState{}
}

-- Chunk 2 --
// app_test.go:48-132
func SetupWithGenesisAccountsAndValSet(b testing.TB, db dbm.DB, genAccs []authtypes.GenesisAccount, balances ...banktypes.Balance) *app.WasmApp {
	wasmApp, genesisState := setup(db, true, 0)
	authGenesis := authtypes.NewGenesisState(authtypes.DefaultParams(), genAccs)
	appCodec := wasmApp.AppCodec()

	privVal := mock.NewPV()
	pubKey, err := privVal.GetPubKey()
	require.NoError(b, err)

	genesisState[authtypes.ModuleName] = appCodec.MustMarshalJSON(authGenesis)

	validator := tmtypes.NewValidator(pubKey, 1)
	valSet := tmtypes.NewValidatorSet([]*tmtypes.Validator{validator})

	validators := make([]stakingtypes.Validator, 0, len(valSet.Validators))
	delegations := make([]stakingtypes.Delegation, 0, len(valSet.Validators))

	bondAmt := sdk.DefaultPowerReduction

	for _, val := range valSet.Validators {
		pk, _ := cryptocodec.FromCmtPubKeyInterface(val.PubKey)
		pkAny, _ := codectypes.NewAnyWithValue(pk)
		validator := stakingtypes.Validator{
			OperatorAddress:   sdk.ValAddress(val.Address).String(),
			ConsensusPubkey:   pkAny,
			Jailed:            false,
			Status:            stakingtypes.Bonded,
			Tokens:            bondAmt,
			DelegatorShares:   math.LegacyOneDec(),
			Description:       stakingtypes.Description{},
			UnbondingHeight:   int64(0),
			UnbondingTime:     time.Unix(0, 0).UTC(),
			Commission:        stakingtypes.NewCommission(math.LegacyZeroDec(), math.LegacyZeroDec(), math.LegacyZeroDec()),
			MinSelfDelegation: math.ZeroInt(),
		}
		validators = append(validators, validator)
		delegations = append(delegations, stakingtypes.NewDelegation(
			genAccs[0].GetAddress().String(),
			val.Address.String(),
			math.LegacyOneDec(),
		))

	}
	// set validators and delegations
	stakingGenesis := stakingtypes.NewGenesisState(stakingtypes.DefaultParams(), validators, delegations)
	genesisState[stakingtypes.ModuleName] = appCodec.MustMarshalJSON(stakingGenesis)

	totalSupply := sdk.NewCoins()

	// add bonded amount to bonded pool module account
	balances = append(balances, banktypes.Balance{
		Address: authtypes.NewModuleAddress(stakingtypes.BondedPoolName).String(),
		Coins:   sdk.Coins{sdk.NewCoin(sdk.DefaultBondDenom, bondAmt)},
	})
	// update total supply
	for _, b := range balances {
		// add genesis acc tokens and delegated tokens to total supply
		totalSupply = totalSupply.Add(b.Coins...)
	}
	bankGenesis := banktypes.NewGenesisState(banktypes.DefaultGenesisState().Params, balances, totalSupply, []banktypes.Metadata{}, nil)
	genesisState[banktypes.ModuleName] = appCodec.MustMarshalJSON(bankGenesis)

	stateBytes, err := json.MarshalIndent(genesisState, "", " ")
	if err != nil {
		panic(err)
	}

	consensusParams := simtestutil.DefaultConsensusParams
	consensusParams.Block.MaxGas = 100 * simtestutil.DefaultGenTxGas

	_, err = wasmApp.InitChain(
		&abci.RequestInitChain{
			Validators:      []abci.ValidatorUpdate{},
			ConsensusParams: consensusParams,
			AppStateBytes:   stateBytes,
		},
	)
	require.NoError(b, err)

	_, err = wasmApp.Commit()
	require.NoError(b, err)
	// wasmApp.BeginBlock(abci.RequestBeginBlock{Header: tmproto.Header{Height: wasmApp.LastBlockHeight() + 1}})

	return wasmApp
}

-- Chunk 3 --
// app_test.go:134-143
type AppInfo struct {
	App          *app.WasmApp
	MinterKey    *secp256k1.PrivKey
	MinterAddr   sdk.AccAddress
	ContractAddr string
	Denom        string
	AccNum       uint64
	SeqNum       uint64
	TxConfig     client.TxConfig
}

-- Chunk 4 --
// app_test.go:145-249
func InitializeWasmApp(b testing.TB, db dbm.DB, numAccounts int) AppInfo {
	// constants
	minter := secp256k1.GenPrivKey()
	addr := sdk.AccAddress(minter.PubKey().Address())
	denom := "uatom"

	// genesis setup (with a bunch of random accounts)
	genAccs := make([]authtypes.GenesisAccount, numAccounts+1)
	bals := make([]banktypes.Balance, numAccounts+1)
	genAccs[0] = &authtypes.BaseAccount{
		Address: addr.String(),
	}
	bals[0] = banktypes.Balance{
		Address: addr.String(),
		Coins:   sdk.NewCoins(sdk.NewInt64Coin(denom, 100000000000)),
	}
	for i := 0; i <= numAccounts; i++ {
		acct := sdk.AccAddress(secp256k1.GenPrivKey().PubKey().Address()).String()
		if i == 0 {
			acct = addr.String()
		}
		genAccs[i] = &authtypes.BaseAccount{
			Address: acct,
		}
		bals[i] = banktypes.Balance{
			Address: acct,
			Coins:   sdk.NewCoins(sdk.NewInt64Coin(denom, 100000000000)),
		}
	}
	wasmApp := SetupWithGenesisAccountsAndValSet(b, db, genAccs, bals...)

	// add wasm contract
	height := int64(2)
	txGen := moduletestutil.MakeTestEncodingConfig().TxConfig
	// wasmApp.BeginBlock(abci.RequestBeginBlock{Header: tmproto.Header{Height: height, Time: time.Now()}})

	// upload the code
	cw20Code, err := os.ReadFile("./testdata/cw20_base.wasm")
	require.NoError(b, err)
	storeMsg := wasmtypes.MsgStoreCode{
		Sender:       addr.String(),
		WASMByteCode: cw20Code,
	}
	r := rand.New(rand.NewSource(time.Now().UnixNano()))
	storeTx, err := simtestutil.GenSignedMockTx(r, txGen, []sdk.Msg{&storeMsg}, nil, 55123123, "", []uint64{0}, []uint64{0}, minter)
	require.NoError(b, err)
	_, _, err = wasmApp.SimDeliver(txGen.TxEncoder(), storeTx)
	require.NoError(b, err)
	codeID := uint64(1)

	// instantiate the contract
	initialBalances := make([]balance, numAccounts+1)
	for i := 0; i <= numAccounts; i++ {
		acct := sdk.AccAddress(secp256k1.GenPrivKey().PubKey().Address()).String()
		if i == 0 {
			acct = addr.String()
		}
		initialBalances[i] = balance{
			Address: acct,
			Amount:  1000000000,
		}
	}
	init := cw20InitMsg{
		Name:            "Cash Money",
		Symbol:          "CASH",
		Decimals:        2,
		InitialBalances: initialBalances,
	}
	initBz, err := json.Marshal(init)
	require.NoError(b, err)
	initMsg := wasmtypes.MsgInstantiateContract{
		Sender: addr.String(),
		Admin:  addr.String(),
		CodeID: codeID,
		Label:  "Demo contract",
		Msg:    initBz,
	}
	gasWanted := 500000 + 10000*uint64(numAccounts) // nolint:gosec
	initTx, err := simtestutil.GenSignedMockTx(r, txGen, []sdk.Msg{&initMsg}, nil, gasWanted, "", []uint64{0}, []uint64{1}, minter)
	require.NoError(b, err)
	_, res, err := wasmApp.SimDeliver(txGen.TxEncoder(), initTx)
	require.NoError(b, err)

	// TODO: parse contract address better
	evt := res.Events[len(res.Events)-1]
	attr := evt.Attributes[0]
	contractAddr := attr.Value

	_, err = wasmApp.FinalizeBlock(&abci.RequestFinalizeBlock{
		Height: height,
		Time:   time.Now(),
	})
	require.NoError(b, err)

	return AppInfo{
		App:          wasmApp,
		MinterKey:    minter,
		MinterAddr:   addr,
		ContractAddr: contractAddr,
		Denom:        denom,
		AccNum:       0,
		SeqNum:       2,
		TxConfig:     moduletestutil.MakeTestEncodingConfig().TxConfig,
	}
}

-- Chunk 5 --
// app_test.go:251-275
func GenSequenceOfTxs(b testing.TB, info *AppInfo, msgGen func(*AppInfo) ([]sdk.Msg, error), numToGenerate int) []sdk.Tx {
	fees := sdk.Coins{sdk.NewInt64Coin(info.Denom, 0)}
	txs := make([]sdk.Tx, numToGenerate)

	r := rand.New(rand.NewSource(time.Now().UnixNano()))
	for i := 0; i < numToGenerate; i++ {
		msgs, err := msgGen(info)
		require.NoError(b, err)
		txs[i], err = simtestutil.GenSignedMockTx(
			r,
			info.TxConfig,
			msgs,
			fees,
			1234567,
			"",
			[]uint64{info.AccNum},
			[]uint64{info.SeqNum},
			info.MinterKey,
		)
		require.NoError(b, err)
		info.SeqNum++
	}

	return txs
}

=== File: benchmarks/testdata/cw20_base.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1-150
 asm   
` `` `` ` `` ` `  ` `~~~~ `~` `~~ ``~~ `	~~~~ `~~ `~`	~~ `~~ `~ `~~ `~ `~ ` ``~`~~envdb_read envdb_write  env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize env
addr_humanize envsecp256k1_verify envsecp256k1_recover_pubkey enved25519_verify enved25519_batch_verify envdebug env
query_chain                               
   	  
  
     
	                               



        

               	   	  
              	    
  



p A 
 A 
 A 

memory 
instantiate execute query allocate 
deallocate requires_iterator interface_version_8 
__data_end
__heap_base	 A
RQLTUYZV`]S_\^TTTTTRTTTTTRTTRRTTT_VT_T
# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A j$ 
# A k"$ @  j" I
   Aj( "At"   K"A AK!@ @ AjA6   6   ( 6

 A 6
  A Aja ( AF@ Aj( " E
 (   
   )7  A j$ 
 
~# A0k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A /  ;   AjA -  :    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  A j  Aj  ( " (( ($@ 
A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A0j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  (  (A!@ (AG@A !

 Aj A
j( "6   )"	7   A
j 6    	7
   6  A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( ! A@k  ("@@@@ (@AG@ A j-  ! (D!@ @ At! AqE! A@kAr!@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 A@k  (@AF
  - H: <  (D68 A@k A8jA܀ A Aj (@AF
 A@k A8jA A  (@AF@ A4j A j( 6   )D7,

 A(j (8 - < ((AF
 A j!A! A`j"
 
A !
A ! Aj  AqA G (AF


 A4j Aj( 6   ) 7,

 A$j A@kAr"Aj( 6   ) 7


 A4j A j( 6   )D7,
 A$j A4j( 6   ),7

 Aj A$j( "6   )
"	7  A
j 6    	7A!
   6  A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  B 7$ A ( 6  A0j A jA   A0jE@ Aj  (  ((@ ( "E
  ($E
  
A!@ (AG@A !

 Aj A
j( "6   )"	7   A
j 6    	7
   6  A j$ 
A A7 A jA A  
# A0k"$   (  ((
  @ ( E@  B7 

 A
j( ! Aj( ! Aj( ! A
j( ! (! A(j Aj) 7  A j Aj) 7   ) 7       Aj  
 A0j$ 
    (  ((  

~# Ak"$   ~@@ ("E
  (
! Aj ( "
 ((
"
   )"BQ
  Aj! Aj! A j!
 A8j!
 Aj!	@@ 
) ! )0! )H! )@! (,! ((! ($! ( !  6@@@~ BR@ Aj   (AG
  )7  6  6  6 
 Aj )! )

  6  6  6|  6x ! 

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:151-300
! 	) ! )x! ( A
G@ 
  7   7  7  7B!

 	 7   7x  6  6  6  7  7 BR@ A j Aj) 7   ) 7` E BRr


 
B!
 A j A j) 7   )`7P BR

 Aj 
 
   Aj! )"BR



 Aj" A j) 7   )P7 BR

B

 A j ) 7   )7pB BQ
    7    7   7  A j )p7   A(j A j) 7  
7 Aj$ 
@@@@@@@@@@@  ( 
			 
  Aj( "E
  Aj( E
 

  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


  Aj( "E
   Aj( E
  

 


~# A k"$  A8j   A0j A8j  ~@@ - 0AqE
 @ - 1A G
  A8j A(j A8j - ,! A j (("@ -  AqE
  - !! Aq! A jAr! A jAr!	 A j! A j!
B!@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"
A"G@A! 
A G
A!

 Aj  - AqE
 - A"G
  A j  (X! (T! (P! (L! (HAF
 E@ Ayj


@@@ Ayj 
 A A	
A 

 A A
 A

A
 @ 


 BR@ A jArA A	


 BR
 A jArA A


 A A	
	
 BR
 A jA A	 A j( ! A j( 

 A A

 BQ
 A jA A A j( ! A j( 
! (L! (H!


 A j  (`"AG@  ) 7  Aj Aj( 6 

 A j  (HAF
 )X! )P!

 A j  (`"AG@  ) 7  Aj Aj( 6 

 A j 
 (HAF
 )P"B !
 
) "B !
 ! !B!

 A j A8j@ (H"AG
  A j A8j (H"AG
   A j 7   Aj 7   Aj 
6   Aj 6   A
j 
6    6B 


 A j( ! A j( ! (L!

-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:301-450
	
 (L!
 (X! (T! (P!

 A j @ (H"AG@  	) 7  Aj 	Aj( 6 

 A j 
 (`"AF

 A j( ! A j( ! (d!

 Aj A ! - 	! - Aq



 A j( ! A j( ! (P! (L!

A!

A!

A!
 A j 6  A j 6   6L  6H  AjA A
 A j
B
7  A j$ 
# A k"$   6
  6 A$jA6  B7 AĔ 6 A6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 

~# Ak"$  A j @@@@@@ - PAq@@ - Q"A"G@ A F
  B7 

 A j P - XAG@  B7 

 A j - _":    / ]";p A j( ! A j) !
   - \:    ;   Aj :    A
j 
7   Aj 6   A6 

  A j P@@@ - XAG@ - Y A j  (X"AG@ A j) !
A ! (\

Ak
 (\"A~q! A j) !
 A j( 
!  A6   A
j 
7   Aj 6    Aq r6
	
 A j $   (XAG@ A j) !
 Aj A - AqE
A
 - 	A G
   Aj 
7   AjB 7   A 6 


 A j( ! A j) !
 (\
6  Aj 6   Aj 
7   A6 

 A j #   (XAG@ A j) !
 Aj A - AqE
A
 - A G
   Aj 
7   AjB7   A 6 
	
 A j( ! A j) !
 (\
6  Aj 6   Aj 
7   A6 

 A j  - HAqE@A!

 - IA G@A!

  A@k  - D! A8j (@" - 8AqE
 - 9! Aq! A jAr! A jAr!@@@@ Aq"A,G@ A F
 Aq
A	!
	
 Aq@A!
	
  A0j  - 0AqE
 - 1!
 Aq"	A"G@A! 	A G
A!

 A j  -  AqE
 - !A"G@A!

  A j  (d! (`! (\! (XAG@ E E Err
 

 AF
 (h!

 A j  (X"AG@ A j( ! )\!


 A(j  - (Aq@ - )A F@   A 6   AjB7 


  B7 
	
  B 7 

 A j  (X"AG@  ) 7  Aj Aj( 6 

 A j 
 (p"AG
 Aj A ! - ! - Aq
 


  B 7 

 A j( ! A j( ! (t!

A!

A!
  B !

   6  A6   Aj 6   Aj 
7 
 Aj$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    h

    h E
 

  B 7 

  B7 

   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 

-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:451-600
	~# Ak"$  A8j @@@@@@@@@@@@@@@ - 8Aq@@@ - 9"Aj# 
 A^j
          
 Aj  - Aq@ - 	!@ A,F A Fr A Fr
    - ! -  Aq
 

  A6 

  A6 

 Aj  - AqE
 - A"G
  A j  A j( ! A j( ! (l! (hAF
 E@  A6 

  A6  E Er

 


 A j  -  AqE
 - !A G
  Aj  (!  - 
Aq: d  6` A j A jg@ - hAG@@ - iE
 A j A jg - hAG
 

 A j" A j( 6   A j) 7P (l"AG
	
 A j  (h"AF@  A6 


 A j A j( "6   )l"7P  A
j 6    7   6 


 A0j  - 0AqE
 - 1A G
	  A(j  ((!  - ,Aq: d  6` A j A je@ - hAG@@ - iE
 A j A je - hAG
 

 A j" A j( 6   A j) 7P (l"AG


 A j  (h"AF@  A6 


 A j A j( "6   )l"7P  A
j 6    7   6 


  A
6 


  A6 
	
  A6 

  A6 

  A
j A j( 6   Aj 6    6   6 

  A6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 

  A6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 
 Aj$ 
# A@j"$ @@@ A N@ 
A!

 
 ! A"E

   ! B 7 A ( 6  Aj A   AjE@  A
j 6   Aj 6    6  Aj ) 7   A6   Aj Aj( 6 @ ( AI
  Aj( " E
  Aj( E
   
 A@k$ 
A A7 A8jA A  
 A 

~# Ak"$  Aj   Aj AjA!@@ - AqE@A!

 - A G@A!

 Aj A j Aj - |! A j (x" - pAqE@A!

 - q! Aq! AjAr! AjAr! Aj! Aj!@@@@@@@@@@@@@@@@@@@@@@@ Aq"	A,G@ 	A F
 Aq
A	! 


 Aq@A! 


  A j  - hAqE
 - i!
 Aq"A"G@AA A F! 


 A j  - `AqE
 - aA"G@A! 


  Aj  (!
 (!	 (! (! (AF
 E@ 	A{j
@@@ 
A{j 
 A A
A 

 A A
 A

A
 	@ 

 
E
 
 AjArA A Aj( !
 Aj( !	 Aj( ! (! E
 


 A A

 
E
 AjA A Aj( !
 Aj( !	 (! (! 


 A A


-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:601-750

 @ AjA A Aj( !
 Aj( !	 (! (!

 Aj  ("AG
 A j  - XAqE@A!


 - YA G@A!


  A j  - T! (P!
 A 6 B7 A j 
A! - HAqE@A!


 - I! Aq!A !A!@@@@ Aq"A,G@ A F@A !


 E
A !

 
 A@k 
 - @AqE@A!


 - A!

A!


 AqA F@A!


 A8j 
 - 8AqE@A!


 - 9A G@A!


 
 A0j 
 - 4! A(j (0" - (AqE@A!


 - )! Aq!A !
B !A !	A !
A !@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  -  AqE
 - !!
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (! (AF
 E@ A{j

@@@ A{j 
 A܀ A
A 

 A A
 A

A
 @ 


 
E
 BQ
 AjArA A Aj( !
 Aj( !	 (! (! E
 


 A܀ A

 
E
 AjA܀ A Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 
! (! (!

 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj 
 (AG@ )"B !	 ) "
B ! ! 
!
B!

 (!
 (! (! (!

 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj   (AG@ (! (! (!


 (!
 Aj( !
 (!	 (!

 Aj 
 ("AG@ Aj( !
 Aj( !	 (! E
 


 !

 AjArA܀ A Aj( !
 Aj( !	 Aj( ! (!


 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( ! Aj( ! (!


 Aj A ! - 	! - Aq
 
A!
	
 
@ ( F@ Aj ! (! (!
  Atj" 
6 Aj 7  Aj 6   
 B 7   	B 7 A!  Aj"6 Aj 
 - ! - Aq




-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:751-900

 (! (! Aj  ("AF

 Aj( !
 Aj( !	 (! @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 E AtE Err
 

 AjArA A Aj( !
 Aj( ! (! Aj( 

 Aj Aj ("AG@ Aj( !
 Aj( !	 (! @ 

 @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 E AtEr
 

 Aj Aj ("AG@ Aj( !
 Aj( !	 (! @ 

 @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 E AtEr
 

  Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    
6A !

 Aj( !
 Aj( !	 (!

 Aj  ("AF@ Aj   (! (! (!
 (AG
 Aj( !
 
! 

 Aj( !
 (! Aj( 
!	A !

 



A!
 E 
ErE@ 

 ! !	 !

 (! E
  At!A !@@  j"Aj( "E
  Aj( E
  
  A j"G
 

 ("E AtEr
 

 ! !	

 !

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

 Aj( !
 Aj( !	 (! 


  A ! - ! -  Aq
 
A! 


A! E

 @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 AtE E Err
  
 E 
Er
  

 Aj 
6  Aj 	6   6  6  AjAю A  Aj

   6  Aj$ 
# A k"$   A!@@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
@ E@A !@@ A N@ 
A!

 
 ! A"E

   !  A
j 6   Aj 6    6

   6  A
j 6   Aj 6 
A !

  A6

  A6

   6  Aj 6   A
j 6   Aj 6 
   6  A j$ 
 A 
# A k"$ @ Aj" I
   Aj( "At"   K"A AK"A?q FAt! At!@ @ AjA6   At6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( Av6    6  A j$ 
 
*~# Ak"$  Aj   Aj Aj  ~@ - AqE@A!

 - A G@A!

 Aj Aj Aj - ! Aj ("@@@@A - AqE

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:901-1050
  - ! Aq! AjAr! AjAr! Aj!A!@@@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	

A Aq
  Aj  - AqE
 - !
 Aq"A"G@A A G
A

 Aj  - AqE
A - A"G
  Aj  (! (! (! (" (AF
 E@ A{j
@@@@ A{j 
 A A
A 

 A A

A

 )  B޹ر R
 A

A
 @ 

 	E@ AjArA A  Aj) 7 (! (!

 
 AjArA A  Aj) 7 Aj( ! (! E
 	

 A A

 	E
 AjA A

 A A


 AF
 AjA A

  Aj) 7 (! (!

 )  B޹ر R


 @ AjA A  Aj) 7 (! (! 



 Aj  ("AG
 Aj  - AqE@A! 
!


 - A G@A! 
!


  Aj  -  Aj (" - AqE@A !A

 - !Aq!A !@@@@@@@ Aq"A,G@ A F
 Aq
A	!


 Aq@A!


  Aj  - AqE@A!


 - !
 Aq"
A"G@A!A 
A F




 Aj  - AqE@A!


 - A"G@A!


  Aj  (!
 (! (! (" (AF

@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 E
 AjArA A 
E



 
 AjArA A Aj Aj) 7   )7


 Aj @ ("AG@ Aj Aj( 6   )7  6

 Aj 
 (AF

 Aj Aj) 7   )7


 Aj  Aj ("AF@ Aj   (! (!
 (! (AG
 Aj( 

 Aj( ! (!
 Aj( 
6  Aj 6  Aj 
6   6


 Aj  ("AF
 Aj( ! Aj( ! (! 
E

 


 A j A ! - y! - xAq
 
A!

  7  6 )! Aj Aj ("AG@ Aj) ! (! @ 	
 
E
 

 Aj Aj ("AG@ Aj) ! (! @ 	
 
E
 


-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1051-1200
  A8j 7   A4j 
6   A0j 6   A,j 6   A j 7   A
j 6   Aj 	6   Aj B >   A
j 7    6  A(jA   AF6 B 

 Aj @@@@ ("AF@ A8j  - 8AqE@A! !

 - 9A G@A! !

  A0j  - 4 A(j (0" - (AqE@A! !

 - )!Aq!A !	B !B !@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  -  AqE
 - !!
 Aq"A"G@AA A F!

 Aj  - AqE
 - A"G@A!

  Aj  (!
 (! (! (! (AF
 E@ A|j
@@@@ 
A|j 
 A A
A 

 (  AҵG
A

 )  BЅ״ R
 A

A
 @ 

 BR
 BR

 	
	 AjArA A Aj( !
 Aj( ! Aj( ! (!

 A A


 BR
 AjA A Aj( !
 Aj( 

 (  AҵG

 BR
 AjA A Aj( !
 Aj( 
! (! (!


 )  BЅ״ R

 	@ AjA A Aj( !
 Aj( ! (! (! 
E



 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	
	
 (!
 Aj( !
 (! (!


 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj # (AG@ )!B!

 (!
 Aj( !
 Aj( ! (!


 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj $ (AG@ )!B!

 (!
 Aj( !
 Aj( ! (!
	
 Aj  ("AG@ Aj( !
 Aj( ! (! 
E

 	


 B ! !
 ! 
! 
!

 AjArA A Aj( !
 Aj( ! Aj( 

 AjArA A Aj( !
 Aj( ! Aj( 
! (!

 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( !
 Aj( ! (!

 Aj A ! - ! - Aq
 
A!

 Aj( !
 Aj( ! (!

A!
 
E 	Er

 	
  
6  6


 Aj @@@@~ ("AF@ A j A! - pAqE
@ - qA F@  Aj  ("AG
A !

 A j  - hAqE
 - iA G@A! ! B 7

  A j  - d A j (`" - XAqE

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1201-1350
 - Y!Aq!A !
@@@@@@@@ Aq"A,G@ A F
 Aq
A	

A Aq

  A j  - PAqE

 - Q!
 Aq"A"G@A A G

A


 A j  - HAqE
A - IA"G

  Aj  (!
 (! (! (" (AF

@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 
AG
 AjArA A


 
AF
 AjArA A Aj Aj) 7   )7


 Aj @ ("AG@ Aj Aj( 6   )7  6

 Aj 
 (AF

 Aj Aj) 7   )7


 Aj @ ("AG@ Aj )7  Aj Aj( 6   6

 Aj % (AG

 Aj Aj) 7   )7


 Aj  ("AF
 Aj) 

 (!A!

 A@k A ! - A! - @Aq
 


 Aj) 

 Aj) 
! (!  7

A

A
! Aj 
6  Aj 6  Aj 6   6
 Aj( ! (!  Aj) 7

 ! B 7

 Aj( ! Aj( ! (!

 
! Aj 
6  Aj 6  Aj 6   6
 
E Er

 
 Aj( ! Aj( ! Aj( ! (!
  6  6
	
A!

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

  Aj) 7 (!

 Aj A ! - 	! - Aq
 
A

A !	

A
!  6  6
 
E Er

 
 E 	Er
  	 )!

 )!
 Aj 7   6  6  AjA A Aj
B
7  Aj$ 
# A@j"$  Aj @@@ - Aq@ - 	A"G
  A(j  A8j( ! A4j( ! A0j( ! (,! ((AF
 E@ Aj  i

 Aj  i E
 

 B 7

 B7

 A j 6  A
j 6  Aj 6   6 A6
A!@ (AG@  Aj Aj) 7 A !

   )7  A
j A
j) 7 
   6  A@k$ 
~# A0k"$  A(j A!@@@@@ - (Aq@ - )"ASj
  A6

  A
6

   AjB 7 A !

 AOjAqA	O@  A6

  A j  APjB!@@ - !"APjAqA	K
  -  AqE
 @  Aj B B
B  )PE@  A

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1351-1500
6  AjA 6   AjB 7 

 )" APjB|" T
 Aj  - 	"APjAqA	K
 - Aq
 

  Aj 7 A !

  A
6  AjA 6   AjB 7 
A!
   6  A0j$ 
~# A k"$  Aj A!A!@ - AqE
 A
!@@ - "ASj 
 A !A !

A! AOjAqA	O
   Aj  APjAq!A ! - "APjAqA	K
  - AqE
 @@  B
~"B 
  " APjAqj" I
  Aj  - 	"APjAqA	K
 - Aq



A
!A!
   6    6 A j$ 
~# A@j"$  Aj A0j Aj  @@@ (0AG@  (46   A8j-  :  A0j A A	  (0AF
 A0j  Aj' (0AF@ A,j A<j( 6   )47$

 A j (  -  ( AG


 A,j A0jAr"Aj( 6   ) 7$

 A,j A<j( 6   )47$

 Aj Aj( "6   )"7   A
j 6    7A 

 Aj" A,j( 6   )$7 @ ("E
  (E
  
 A8j ( 6   ) 70  AjA A
 A0j(A
6  A@k$ 
	~# Ak"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA (  6    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj"6   @@@@@@@@@ ( Ak 
 )! Aj(  F@  A Aj( !
 Aj" Aj6  (  jA :   A j A A	 (PAF
 ( " Aj( F@  A Aj( !
 Aj" Aj6  (  jA::   A j   (PAG@ ( " Aj( G
  A Aj( !

 A
j A j( 6   )T7

 Aj(  F@  A Aj( !
 Aj" Aj6  (  jA :   A j A A (PAF
 ( " Aj( F@  A Aj( !
 Aj Aj6  (  jA::   B 7D A ( 6@ A j A@kA  Aj A j
 A0j  (@ (H@ (@"E
  (DE
  
 (0AF
 Aj" ( " Aj( G
   A  ( !
 (  jA :   Aj Aj6 A 

 A
j A<j( 6   )47

 A j A܃ A (PAF@ A
j A jAr"Aj( 6   ) 7

 Aj (T A j-   (AF
A 

 A
j A j( 6   )T7

A A7 A jA A  
 A
j A j( 6   )T7
 Aj A
j( "6   )"7   A
j 6    7A
6  Aj$ 
# A@j"$ @@@ A N@ 
A!

 
 ! A"E

   ! B 7 A ( 6  Aj A   AjE@  A
j 6   Aj 6    6  Aj ) 7   A6   Aj Aj( 6 @ ( " E
  Aj( E
   
 A@k$ 
A A7 A8jA A  
 A 
	~# A k"$  Aj A@k Aj@@@@@@ (@AG@  (D6(  A j-  : , A@k A(jAȄ A * (@AF
 A@k A(jAτ A
 A
j* (@AF
 ((!@ - ,@ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : , Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jAޝ6    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6 @ (AG@ A@k 

 A
j"( @ A@k A A +

 A@k A A
 (@AF
 Aj"( " Aj"( F@  A ( !
 (  jA,:    Aj"6  A : , (  F@  A Aj( !
 (  jA":   Aj" Aj"6  Aj"(  kAM@  A	 ( !
 (  j"Aڄ )  7   AjA -  :    A	j"6  (  kAM@  A Aj( !
 (  jA ;   Aj Aj6 @ (("E@ A@k 

 A@k   A0j( 
 (@AF@ A$j A j( 6   )D7


A ! Aj A  (AG


 A$j A@kAr"Aj( 6   ) 7


 A$j A j( 6   )D7


 A$j A j( 6   )D7

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1501-1650


 A$j A j( 6   )D7


 A8j Aj( "6   )"70  A
j 6    7

 A8j" A$j( 6   )
70@ ("E
  (
E
  
 A j ( 6   )07@  AjA A" A@k(A!
   6  A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6 @ ( "E@ Aj 

 Aj   Aj( 
A!@ (AG@A !

 Aj A
j( "6   )"	7   A
j 6    	7
   6  A j$ 
~# A k"$  (" Aj( F@  A (!
  Aj6 (  jA :   Aj   @@ (AG@ (" Aj( F@  A (!
  Aj6 (  jA::   Aj  (  ( (AF
 (" Aj( F@  A (!
  A 6   Aj6 (  jA :  

 Aj A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
0~# Ak"$    @@@@@@@@@@ ( AG@ (" (F@  A (!
 (  jA :    Aj6 Aj A A (AF
 (" (F@  A (!
 (  jA::    Aj6 Aj  (AF
  ("60@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : 4 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jB͛ٲ 7    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  (! Aj  A
j( " (AF
 Aj-  !@@ A8j ("
   A lj! A,j! E! AjAr!
 AjAr!
@ Aq@ 
(" 
Aj( F@ 
 A 
(!
 
 Aj6 
(  jA,:  
 Aj 
@@@@@@@@@@@@ (AG@ (! ATj"
) !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jA;    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj6  Aj  @ (AG@ ( " ( F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A ( !
 (  j"A /  ;   AjA -  :    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj"6 @@@ 
Aj( Ak 
 (  F@  A ( !
  Aj6  (  jA :   Aj AƂ A (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @ A`j( AG@ Aj AՂ A (AF
  - : l  (6h Aj A jAق A
 Adj (AF
 Aj A jA A Apj (AF
 Aj (h - l


 Aj Aт A (AF
	  - : l  (6h Aj A jA A Adj (AG@ Aj (h - l



	


 (  F@  A ( !
  Aj6  (  jA :   Aj A A@@ (AG@ ( " ( F@  A ( !
  Aj6  (  jA::   Aj  (AG
 Aj 
Aj( 6   
) 7

 A j Aj( 6   )7H


 Aj ( -  (AG

 A j Aj( 6   )7H


 (  F@  A ( !
  Aj6  (  jA :   Aj A A (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @@@@@ Adj( Ak 
 Aj A A
 (AF
  - : l  (6h Aj A jA A
 Ahj (AG@ Aj (h - l




 Aj A A
 (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A jA A Atj (AG@ Aj (h - l
	


 Aj A A (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A jA A
 Aj)  (AF
 Aj A j Atj (AG@ Aj (h - l



 Aj A A
 (AF
  ("6h@ - @ Aj( !


-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1651-1800
 ("	 Aj( F@  	A (!	
  	Aj"6 (  	jA,:  
 A : l Aj"(  F@  A Aj( !
 (  jA":   Aj"	 Aj"6  (  kAM@  A 	( !
 (  j"A (  6   AjA -  :   	 Aj"6  (  kAM@  A 	( !
 (  jA ;   	 Aj6 @ Ahj( "E@ Aj 

 Aj   Apj( 
 (AF
 Aj A jA A A
j)  (AF
 Aj A j Atj (AF
 Aj A jA A  (AF
 Aj A jA A A
j (AG@ Aj (h - l



 Aj A A (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A j Atj (AF
 Aj A jA A  (AG@ Aj (h - l



 A j Aj( 6   )7t

 A j Aj( 6   )7H

 A j 
Aj( 6   
) 7t

 A j Aj( 6   )7H

 
 
) 7  
Aj 
Aj( 6  A6
 (AG
 A j 
Aj( 6   
) 7H

 
 
) 7  
Aj 
Aj( 6  A6
 (AG
  A j 
Aj( 6   
) 7H

 ( " ( F@  A ( !
 (  jA :    Aj"6  
A j) ! 
A j) ! (  F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A	 ( !
 (  j"Ã )  7   AjAԃ -  :    A	j"6  (  kAM@  A ( !
 (  jA ;    Aj6 @ BR@ Aj 

 Aj  
 (AF
 
A j-   ( " ( F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A ( !
 (  jB׷ 7    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj6 Ak
 A j A j( 6   )H7t

 Aj A A

 Aj A A

 Aj A A

 Aj A܃ A
 (AF@ A j Aj( 6   )7t


 A j A  (pAF

 A j!A!  
A jG
 
A  
AqA G (8AF
 Aj A0j Aj- (AF@ A,j Aj( 6   )7$


 (0!@ - 4@ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : 4 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  (
! Aj  A$j( "@ (AG@ Aj-  !@@@ A j ("   Alj! E! AjAr!@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 Aj  (AF
  - : <  (68 Aj A8jA A  (AF
 Aj A8j A
j"- (AF@ Aj Aj( 6   )7

 Aj (8 - < (AF

A!  A
j"G
 
A  
AqA G (pAF

 Aj"( " Aj"( F@  A ( !
 (  jA,:    Aj"6  A : 4 (  F@  A Aj( !
 (  jA":   Aj" Aj"6  A(j! Aj"(  kAM@  A ( !
 (  jAы6    Aj"6  (  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( 
 Aj 

 Aj Aj( 6   ) 7


 Aj  Aj  (" ( (E
  
 (AG
 A,j Aj( 6   )7$


 A j AjAr"Aj( 6   ) 7t

 A j A  ( AF

 (" (F@  A (!
 (  jA :    Aj6

 A j Aj( 6   )7t

 Aj Aj( 6   )7

 Aj A A Aj+ (AG

	
 A,j AjAr"Aj( 6   ) 7$


-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1801-1950
 Aj Aj( "6   ) "7  A
j 6    7A 

 A
j Aj( 6   )7

 A j Aj( 6   )7t
 A,j A j( 6   )t7$

 A j AjAr"Aj( 6   ) 7<

 A j A j( 6   )t7<
 A,j A j( 6   )<7$
 A
j A,j( 6   )$7
 Aj" A
j( 6   )7@ ( "E
  (E
  
 Aj ( 6   )7  AjA A  Aj(A
6  Aj$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kA	M@  A
 ( !
 (  j"A )  7   AjA /  ;    A
j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( ! A@k  ("@@@@ (@AG@ A j-  ! (D!@ @  Alj! AqE! A@kAr!@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 A@k  (@AF
  - H: <  (D68 A@k A8jA A  (@AF
 A@k A8jA A A
j" (@AF@ A4j A j( 6   )D7,

 A(j (8 - < ((AF
A!  A
j"G
 
A !
A ! Aj  AqA G (AF


 A4j Aj( 6   ) 7,

 A$j A@kAr"Aj( 6   ) 7


 A4j A j( 6   )D7,
 A$j A4j( 6   ),7

 Aj A$j( "6   )
"7  A
j 6    7A!
   6  A j$ 
U:~# A	k"$  Aj  Aj  Aj  Aj ( ("@@@@@@@@@@@@ )BR@ Aj Aj") 7  Aj Aj) 7   )7  Aj") 7 Aj"( !% Aj( !1 Aj( !& Aj( !2 Aj) !? Aj ( ( (AF
 ( !' Aj( !( ( !) Aj( !9 (!3 (!* Aj ( ( Aj Aj - Aq
A!

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj

   )7  A6   A
j Aj( 6  Aj
	
 - A G@A!

 Aj Aj AjA!4 (!  - Aq:   6 A6 Aj  - AqE@A!B!@

 - ! AjAr!
 AjAr!5 Aj!
 Aj!6B!@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 - 
A	!
&
 - 
   Aj  - AqE@A!
&
 - !

 A : 
 Aq"A"G@AA A F!
$
 Aj  - AqE@A!
#
 - A"G@A!
#
  Aj  (! (! (! (! (AF
	@ E@ Aj  /

 Aj  / E
  
 - AF@ (!
#
 - 
 E
	@ @ 7AF
 AjArA A
!
 AjArA A Aj( ! Aj) !? (!
!
 E
B @ @BQ!>A! ("AG@ Aj Aj( 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7  )7 !
 Aj )7  Aj Aj( 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 Aj Aj-  :    / ;  Aj CB  AB 7  Aj 6  Aj +6  Aj ,6  Aj :6  Aj -6  Aj ;6  Aj #6  Aj B7  Aj .6     AB 7  <:   6  6  6  86  >7 Aj Aj ("AF
 Aj( ! )!? Aj0
$
 Aj @ ("AG@ 
 5) 7  
Aj 5Aj( 6 

 Aj 
 ("AF


 )">B ! Aj( ! >!

 (AF
 AjAڄ A	 )">B ! Aj( ! (! >!

 @BQ

 AjA A )">B ! Aj( ! (! >!

 E
 AjA A )">B ! Aj( ! (! >!


 7@ AjA A )">B ! Aj( ! (! >!


 Aj Aj1 - AG@ - !<A!7

 Aj) ">B ! Aj( ! (! >!


 E
 AjA A )">B ! Aj( ! (! >!


 E
 AjA A )">B ! Aj( ! (! >!


 Aj Aj"A !   6  >7 Aj Aj ("AG@ ( ! )!? Aj0


 Aj A ! Aj"  6   >7 Aj Aj"A AjAȀ 6  AjA 6  AjA 6   Aj) 7   16  Aj" )7  Aj" Aj) 7  Aj '6  Aj (6  Aj )6  Aj 96  Aj 36  Aj ?7  Aj 26  Aj Aj6  Aj Aj6   )7  %6  *6  &6  Aj6 Aj Aj Aj Aj Aj AjA2  ) 7   Aj) 7   Aj) 7   Aj) 7  Aj Aj) 7   )7@ (AG@  A 6    AjAr") 7  A,j A(j) 7   A$j A j) 7   A
j Aj) 7   Aj Aj) 7   A
j Aj) 7 

-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:1951-2100

 Aj Aj) 7  Aj ) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj3
!   )7  A6   A
j Aj( 6  (" A
GA   AtjA	I
  Aj
@ (" E
  (E
   
@ (" E
  (E
   
 (" E
 (E
  

 Aj 6  Aj 6  Aj 6   6

 AjArA A Aj) ">B ! Aj( ! (! >

 AjArA A

 Aj @ ("AG@ 
 
) 7  
Aj 
Aj( 6 

 Aj   (AG@ (!; (!# (!

 (!
 )">B ! Aj( ! >
!A !A!


 Aj @ ("AG@ 
 
) 7  
Aj 
Aj( 6 

 Aj   (AG@ (!: (!- (!

 (!
 )">B ! Aj( ! >!A !A!


 Aj @@@@@@ ("AF@ A j A!
A ! - XAqE@A!

 - YA G@A!

  A j  - T (P! A 6 B7 A j A! - HAqE@A!

 - I!Aq!A !A!@@@@ Aq"A,G@ A F@A !


 AqE
A !

  A@k  - @AqE@A!
	
 - A!

A!

 AqA F@A!

 A8j  - 8AqE@A!

 - 9A G@A!

  A0j  - 4 A(j (0" - (AqE@A!

 - )!Aq!A !
B !>A !
A !A !@@@@@@@@@@@@@ Aq"
A,G@ 
A F
 Aq
A	!

 Aq@A!

  A j  -  AqE
 - !!
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (!	 (! (!
 (! (AF
 E@ Azj

@@@ 	Azj 
 
A A
A 

 
A A
 A

A
 @ 



 
E
 >BQ
 AjArA A Aj( ! Aj( !
 (! (! E
 


 
A A

 
E
 AjA A Aj( !	 Aj( 

 
A A

 >BR
 AjA A Aj( !	 Aj( 
! (!
 (!


 Aj @ ("AG@ 
 )7  
Aj Aj( 6 

 Aj 
 (AG@ )">B !
 6) "DB ! >! D!B!>

 (!
 
(!	 
(! (!



 Aj @ ("AG@ 

-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2101-2250
 )7  
Aj Aj( 6 

 Aj   (AG@ (!
 (! (!


 (!
 Aj( ! (!
 (!


 Aj  ("AG@ Aj( ! Aj( !
 (! E

 



 
!>

 AjArA A Aj( ! Aj( !
 Aj( ! (!
	
 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( !	 Aj( ! (!


 Aj A ! - 	! - Aq
 
A!

 
@ ( F@ Aj ! (! (!
  Atj" 
6 Aj >7  Aj 6    B 7   
B 7 A!  Aj"6 Aj  - ! - Aq



 (! (! Aj  ("AF
 Aj( ! Aj( ! (! @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 E AtE Err
 

 Aj( ! Aj( ! (!
A !A!


A!
 E 
ErE@ 

 
! !
 	!
 (! @ At!A !@@  j"Aj( "	E
  Aj( E
  	
  A j"G
 

 
!
 ("E AtEr
 

 ! !

 Aj @@@@ ("AF@ Aj A!
B!@A! - AqE
 - A F@  Aj  ("AG
A!
B!@

 Aj  - AqE
 - A G@A!

  Aj  -  Aj (" - AqE@A!

 - !Aq!B !AB!>A !	B !C@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  - xAqE
 - y!
 Aq"A"G@A! A G
A!

 A j  - pAqE
 - qA"G@A!

  Aj  (! (! (! (! (AF
 E@ A}j



@@@ A}j 
 A A
A 

 A A
 A

A
 @ 


 	
 AjArA A Aj( ! Aj( ! Aj( ! (!
$
 A A

 	E
 AjA A Aj( ! Aj( 

 A A

 >BQ
 AjA A Aj( ! Aj( 
! (! (!


 Aj @@ ("AF@ A j  - hAqE@A!  !

 - iA F@  Aj  ("AG
B !>
	
 Aj 
 (AG
 Aj( ! )!> (!

 Aj( 

 Aj( 
! )!>
 >B ! >!
	

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2251-2400
 Aj @ ("AG@ 
 )7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!


 Aj  ("AG@ Aj( ! Aj( ! (! 
E

 	


 
!B 	!. 
!8A  > >BQ"
!@

 6) ">B  )"BB !A >B !C B! B!>

 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 A j A ! - a! - `Aq
 
A!

 )">B ! Aj( ! >!B!@A!


 )">B ! Aj( ! >!

A!
 
E 	ErE@ 	 !

 !

A ! 
!  !

 Aj  ("AF@ Aj A!
A! - AqE
 - A F@  Aj  ("AG
A!


 Aj  - AqE
 - A G@A!


  Aj  -  Aj (" - AqE@A!


 - !Aq!A!
A !A !
A !@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq
  Aj  - AqE
 - !
 Aq"A"G@A! A G


 Aj  - AqE

 - A"G@A!

  Aj  (! (! (! (! (AF
@@@@@@@@@@@@ E@ A|j
@@@@@ A|j 
 AȄ A
A 

 Aτ A

A

 Aڄ A	
A

 (  AޝG
 A

A
 @ 

 AȄ A

 AG
 AjAȄ A Aj( ! Aj( ! (! (!A!

 Aτ A


 
AG
 AjAτ A
 Aj( ! Aj( ! (! (!A!


 Aڄ A	

 AG
 AjAڄ A	 Aj( ! Aj( ! (! (!A!

 (  AޝG


 
AG@ AjA A Aj( ! Aj( ! (! (! 

 Aj  ("AF@ Aj  - AqE@A!


 - A F@  Aj  ("AG
A!


 Aj 4 (!$ (! (! (!
 (AG

 
!


 Aj( ! Aj( 

 Aj  ("AF@ Aj  - AqE@A! ! /!

@ - A F@  Aj  ("AG
A !


 Aj   (!/ (! (! (AG
 Aj( ! ! /!




-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2401-2550


 Aj  ("AF@ Aj  - AqE@A! 
! 0!

@ - A F@  Aj  ("AG
A !

 Aj   (!0 (!
 (! (AG
 Aj( ! 
! 0!





 Aj  ("AF@ Aj  - AqE@A! ! !

@ - A F@  Aj  ("AG
A !

 Aj   (! (! (! (AG
 Aj( ! ! !





 Aj( ! Aj( 
! (!

 Aj  A  
AF! 	A  AF!A 
 
AF! A  AF! ("AF
 Aj( ! Aj( ! (! E ErE@ 
 !E ErE@ 
 E "ErE@ 
@@  

 E Er

 


 E $Er!@ E@ E



 E
 


 


 	E E ErrE@A! 	 ! !	

 ! !	A!

 E !E 
ErrE@A!
  
!! !

 
!! !A!


 Aj( ! Aj( ! (!


 E "E ErrE@A!  !" !

 !" !A!

 ! ! $!


 (!=

 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj A ! - ! - Aq
 
A!

 Aj( ! Aj( ! (!
A!


 Aj( ! Aj( ! (!

A!

A!
 
 
 E Er
 

 $E Er! E@ 
 

 
  
 "E Er AGrE@ 
 !E Er 
AGrE@ 
 E 	Er AGrE@ 	 !


 !


  =6  $6  6  6  6  /6  "6  6  06  !6  6  6  6  6

 ! !

 !+ !,
  (" - ! -  Aq
 
A!

 Aj ) 7  Aj ) 7  Aj ) 7   )7 B 7 A ( 6 Aj AjA  Aj AjE@   )7  A6   A
j Aj( 6  Aj


	
 Aj( ! Aj) !? (! -E
  
 E!4 ?B ! ?!A !
 #E@A !#

 

 Aj( ! Aj) !?
 ?B ! ?!A!

 (AG@ Aj5
 .E 8E @B~BQrrE@ .
@ E
  +@ +At! Aj!@@ A|j( "E
  ( E

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2551-2700
  
 A j! A`j"
 

 ,E ,AtEr
  
 -E A G 4qErE@ 
 #E A G 
qErE@ 
  B !?
 Aj 6   ?7  6 AjA A
 Aj
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
   )7  A6   A
j Aj( 6  Aj *E 3ErE@ *
 '@ 'At! )Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 (E (AtEr
  )
 %E 1ErE@ %
 &E 2Er
  &
@ (" E
  (E
   
@ (" E
  (E
   
 (" E
  (E
   
 A	j$ 
A A7 AjA A  
 @@@@@@@ A|j
 
 (  AµG
A 

 A A
A

 )  Bʍ֭ R
A

 A A
A

 (  AҹG
A

 Aڄ  
 A

A
!  A :     : 
@  A(j( "E
   A,j( E
  
@  A4j( "E
   A8j( E
  
  (@!  A j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
  (@!
  A j( "E Er AtErE@ 
@  ) BQ
   Aj( "E
   A
j( E
  
  A j5
# A0k"$  A j ( "@@ ( "AF@ Aj A!@@@ - Aq@ - "ASj
  AjA6 

  AjA
6 

 A !  A : 

 AOjAqA	O@  AjA6 

  Aj  APj!@@ - "APjAqA	K
  - AqE
 @  AqB
~"Av@  AjA
6 

 Aq APjAqj"Aq G
 Aj  - 	"APjAqA	K
 - Aq
 

   : A !

  AjA
6 

  Aj )$7   Aj A,j( 6   Aj 6 
A!
   :   A0j$ 
%~# Ak"$  (! ( !@@@@@AA"@ AjAܗ (  6   AjA՗ )  7   A͗ )  7  A
A"	E
 	AjA (  6   	A )  7   A jB7   	6d B7\  6X Aj Aj Aj (AF
  (6  Aj-  :  Aj AjA A A j (AF
 Aj AjA A A j (AF@ Aj Aj( 6   )7

 Aj ( -  (AF
  )"7 Aj(  A A
 " Aj(  ( A
!@ 


AA 
A
A 
 Aj AjAr"Aj( 6   ) 7

 Aj Aj( 6   )7
 Aj" Aj( 6   )7@ ("
E
  (E
  

 Aj ( 6   )7 Aj"A A Aj( Aj Aj) 7  Aj A j) 7   Aj) 7 ( ! A
j( !
A!
  	@@@@@@@@@@ A
F@   ( "A
G
   (@ A j( s Aj) ! )!@@@ ) BR@ ) "BQ"

A   
"( AG
  Aj) V  Aj) "V  QE
A!
AA"E
  A6  AjA )  7   AjA )  7   AjA )  7   A )  7    AjB7   A
j 6   AjA6 

 A j A j) "7   Aj) "7X  Aj 7   Aj 7   A j 7   Aj 7 

 Aj) ! )!
 (

-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2701-2850
!  ( Aj( "	 A j(  A
j( (
  ( AG@ Aj A
j( 6   )7 Aj! E
 	

 A j A j) "7  A j Aj) "7  A j Aj) "7   Aj) "7\  A j 7   Aj 7   Aj 7   Aj 7   A6  @ 	
A !


 Aj!
 A j 7  Aj 
7  A(j ) 7  A@k A0j( 6  A0j Aj( 6  A j A<j( 6   7   7  7  )(78  )47D  - : P A j   E@ (X"A
F@ A j( "	AF
	 A j( ! A j( ! A j( ! A j( ! A j( ! A j( ! A j( ! A j( ! (L! 	AG


 Aj A j( "6  Aj A j) "7  Aj A j) "7   )\"7  A$j 6   A
j 7   Aj 7   A
j 7   Aj 6 A!  A6 
	
 A j) ! Aj A j) 7   7  	6 A j Ajr (X"
AG
 A j   AjC (X"
A
G
 (AG@ (! (!
 (!
A!


 ("
E ("Er!
@@ (E@ 

 
A!

	
 
E

A!


 
A!


 Aj Aj) "7  Aj Aj) "7   )"7  A j 7   Aj 7   Aj 7   A
j 6   Aj 6 

 A j A
j( "6  A j Aj) "7  A j A
j) "7   )"7X  A$j 6   A
j 7   Aj 7   A
j 7   Aj 6 

AA 
  A6 
@ A(j( " E
  A,j( E
   
A! A4j( " E
 A8j( E
  

 Aj A j( "6  Aj A j) "7  Aj A j) "7   )\"7  A$j 6   A
j 7   Aj 7   A
j 7   Aj 
6   A6 @ (E@ (" E
 (E
  

 (" E (Er! (E@ 
  

 
   
 E ErE@ 
 E ErE@ 
A ! E Er
 

@@@@@ E
  Aj (   (
(
  @ 
 Aj" Aj) 7  Aj" Aj) 7   Aj) 7 Aj) !@ (Aj 
 (!
 Aj 7  A j 6  A j 
6  A j 
6  A j 6  A j 6  A j 6   6  
6p  6d  6\  6X Aj A j) ! (AF
 Aj(  A A (" Aj(  ( E
 

 Aj ) "7  Aj ) "7   )"7  A j 7   Aj 7   Aj 7   Aj 7   A6  E ErE@ 
 E ErE@ 
A ! 
E 
E 	AFrr
 


 Aj Aj) 7  Aj Aj) 7   Aj) 7 Aj( "A
G

 E ErE@ 
 E ErE@ 
 
E 
E 	AFrrE@ 

 E Er
 

 Aj( ! Aj Aj) "7  Aj Aj) "7   )"7  A j 7   Aj 7   Aj 7   A
j 6   Aj 6   A6  E ErE@ 
 E ErE@ 
 
E 
E 	AFrrE@ 

 E ErE@ 
A !

  A 6   A(jA 6   A jB 7   A
jA ( "6   AjB 7   Aj 6   AjB 7   A ( 6@ (8" E
  A<j( E
   
@ (D" E
  A j( E
   
@ )BQ
  ((" E
  (,E
   
 (@!  (H"@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (@! 
 A j( "E  Er AtErE@  
@ 	AG
  (pAF
 @ (L" E
  A j( E
   

-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:2851-3000
@ A j( " E
  A j( E
   
@ A j( " E
  A j( E
   
@@ (p 
 (t" E
 A j( E
  

 (x" E A j( Er! (tE@ 
  

 
   
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

@ (8" E
  A<j( E
   
@ (D" E
  A j( E
   
 )BQ
  ((" E
  (,E
   
 (@!  A j( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (@! 
 A j( "E  Er AtErE@  
@ 
 ) BRqE
  Aj( " E
  A
j( E
   
@  A j( AGqE
 @ (L" E
  A j( E
   
@ A j( " E
  A j( E
   
@ A j( " E
  A j( E
   
@@ (p 
 (t" E
 A j( E
  

 (x" E A j( Er! (tE@ 
  

 
   
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
# A0k"$ @@@@@@@@@@  ( "AujA  AtjA	IAk		 
 A,jA6  B7
 A 6 A6
   6  Aj6(  Aj6  Aj
	
 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 Aܙ 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj

 A,jA 6  A 6( B7
 AĘ 6  Aj

 A,jA 6  A 6( B7
 A 6  Aj
 A0j$ 

~# A k"$  A0j @@@@@@~@~@@@@ - 0Aq@@ - 1"A"G@ A F
  B7 

 A8j I - 8AG@  B7 

 A6j - ?":    / =";4 A@k( ! A j) !	   - <:    ;   Aj :    A
j 	7   Aj 6   A6 

  A8j I@ - 8AG@ - 9! A8j  (8"AF
 A@k) !	 (<

 (<"A~q! A j) !	 A@k( 
!  A6   A
j 	7   Aj 6    Aq r6

 AG@ A8j   A j( ! A@k( ! (<! (8AF
 A(j A!@@ - (Aq@ - )A F
 


 E Er
 A!

-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3001-3150

 E
 A
!

 A ! !A ! !

 A j A ! -  AqE@A!
	
@@ - !"A G@ A"G@A
!


 A8j [ - 8AF
A!


  A8j "[@ - 8AG@ - 9! A8j  (8"AF
 A@k) !	 (<!A !


 (<"Av! A j) !	 A@k( !


 AG@ A8j ; A j( ! A@k( ! (<! (8AF
 Aj  - Aq@ - A F
 E ErE@ 
A
!B 


 E Er
	 
	
 A8j ; A j( ! A@k( ! (<! (8AF
 Aj A! - Aq@ - A F
 E ErE@ 
A
!B 

 E Er
 

 / = - ?Atr! A j) !	 A@k( ! - <!
	
  Aj @ - Aq@ - 	A G
  B !	   A
j 6   Aj 6   A6A !  Aj


 E Er! AG@A! 

 


A! 
 


 E Er! AG@A
! 
 


A
! 
	 
	
  B 7 


 A j( !A! ! !


 !	 A j5 B 

 !	 A j5 B 

A!B 
!
 	 
!	 Av!

A!B 
!
 	 
!	 Av!
 Aq Atr!
   6  Aj 6 A!  A
j
   6  	7 

A!

A
!
   6   6   Aj 6   A
j 6   Aj 6 
 A j$ 
@  ($AF
 @  ( "E
   Aj( E
  
@  (
"E
   Aj( E
  
@  ("E
   A
j( E
  
@@  ($ 
  (("E
  A,j( E
 
  (,"E  A0j( Er!  ((E@ 
 
 
  

~ ( ! (!@@@@ Aj(  Aj"( "k ("I@ A
j  7 ( !

 E

  Alj! AlAhj! (
 Alj! !@ ( "	E
 Aj) !
 A
j) !
 Aj Aj( 6  A
j 
7  Aj 
7   	6  Aj! Ahj! Aj! Aj" G
 

 Aj 6 

 Aj 6  E
  Aj!@@ ( "E
  Aj( E
  
@ A
j( "E
  Aj( E
  
 Aj" G
 

 E AlErE@ 

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3151-3300
   ) 7   A(j A(j) 7   A j A j) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
~# A k"$ @  j" I
   Aj( "At"   K"A AKB~"B EAt! !@ @ AjA6   Al6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( An6    6  A j$ 
 
~# Ak"$  Aj 9@@@@@@@@@@@@@@@ - AG@ - ! Aj  ("AG@ Aj) !A ! (

 Ak



	
 ("A~q! Aj) ! Aj( 
!  A6   A
j 7   Aj 6    Aq r6

 A0j  - 0AqE@A!


 - 1A G@A!


  A(j  - ,! A j ((" -  AqE@A!


 - !! Aq! AjAr! AjAr!
 Aj!
 Aj!@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - 	A"G@A!

  Aj  (! (! (! (! (AF
 E@ Azj



@@@ Azj 
 A A	
A 

 A A
 A

A
 @ 


 	E
 BQ
 AjArA A Aj( ! Aj( ! (! (! 
E
 	

 A A	

 	E
 AjA A	 Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 
! (! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!

 (!
 Aj( ! Aj( ! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!

 AjArA A	 Aj( ! Aj( ! Aj( ! (!

 Aj 
7  Aj 7  Aj" 
6  Aj 
6   	6 A 6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 
6   	6 A 6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

  B 7  Aj:

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!


  A ! - ! -  Aq
 
A!


 Aj 4 Aj( ! Aj( ! Aj( ! (!@ (AF
  Aj( ! Aj @ - Aq@ - A G
   A
j 6   Aj 6   Aj 6   Aj 6   A
j 6   AjA
6   A 6 

 E@A! E Er
 

 E Er! E@A! 
 

A! 
 

 E@A
! E Er
 


-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3301-3450
 E Er! E@A
! 
 

A
! 
  
   6  Aj 6   A
j 6   Aj 6   A6 


 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj ("
 - AqE@A!

 - ! Aq! AjAr! AjAr!@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!


 Aq@A!


 
 Aj 
 - AqE@A!


 - !
 Aq"A"G@A! A F

A!


 Aj 
 - AqE@A!


 - A"G@A!


 
 Aj 
 (! (! (! (! (AF

@@@@@@@@@ E@ Ayj
@@@@ Ayj 
 AȄ A
A 

 Aτ A

A

 Aڄ A	
 A

A
 @ 

 AȄ A

 AG
 AjAȄ A Aj( ! Aj( ! (! (!A!

 Aτ A


 AG
 AjAτ A
 Aj( ! Aj( ! (! (!A!

 Aڄ A	


 AF@ AjAڄ A	 Aj( ! Aj( ! (! (!

 Aj 
 ("AF@ Aj 
 - AqE@A!


 - A F@ 
 Aj 
 ("AG
A !


 Aj 
  (! (! (! (AG

 Aj( !


 Aj( ! Aj( 

 Aj 
 ("AF@ Aj 
 - AqE@A!


@ - A F@ 
 Aj 
 ("AG
A !


 Aj 
  (! (! (! (AG
	 Aj( !






 Aj 
 ("AF@ Aj 
 - AqE@A!

@ - A F@ 
 Aj 
 ("AG
A !

 Aj 
  (! (!
 (! (AG
 Aj( !





 Aj( ! Aj( 
! (!


 Aj 6  Aj 6  Aj 6  Aj 
6  Aj" 6  Aj 	6  Aj A  AF6  Aj A  AF6  A	6  
A  AF"6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 	6   6 A	6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 


-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3451-3600
  B 7  Aj:

 
E 	E ErrE@A! 
 
!	 !


 
!	 !
A!

 ! 
!

 Aj( ! Aj( ! (!

 E 
E ErrE@A!  !
 !

 !
 !A!

 ! !

 E E ErrE@A!  ! !

 ! !A!

 ! !

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 

 ("AF

 Aj( ! Aj( ! (!

 Aj 
A ! - ! - Aq
 
A!
 AG

 E Er
  
 
E Er AGrE@ 
 	E 
Er AGr
  

   6  A6   Aj 6   A
j 6   Aj 6 


 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr!
 Aj!
 Aj!@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj  - AqE

 - A"G@A!

  Aj  (! (! (! (! (AF
 E@ Azj



@@@ Azj 
 A A	
A 

 A A
 A

A
 @ 


 	E
 BQ
 AjArA A Aj( ! Aj( ! (! (! 
E
 	

 A A	

 	E
 AjA A	 Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 
! (! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!

 (!
 Aj( ! Aj( ! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!

 AjArA A	 Aj( ! Aj( ! Aj( ! (!

 Aj 
7  Aj 7  Aj" 
6  A6 Aj 
6   	6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  A6 Aj Aj) 7  Aj 
6   	6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 


-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3601-3750
  B 7  Aj:

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj A ! - ! - Aq
 
A!

A!
 
E 	Er
  	
   6  A6   Aj 6   A
j 6   Aj 6 


 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr!
 Aj!
 Aj!@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj  - AqE

 - A"G@A!

  Aj  (! (! (! (! (AF
 E@ A{j

@@@ A{j 
 A A
A 

 A A
 A

A
 @ 


 	E
 BQ
 AjArA A Aj( ! Aj( ! (! (! 
E
 	

 A A

 	E
 AjA A Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 
! (! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!

 (!
 Aj( ! Aj( ! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!

 AjArA A Aj( ! Aj( ! Aj( ! (!

 Aj 
7  Aj 7  Aj" 
6  Aj 
6   	6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 
6   	6 A6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

  B 7  Aj:

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj A ! - ! - Aq
 
A!

A!
 
E 	Er
  	
   6  A6   Aj 6   A
j 6   Aj 6 
	
 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr! Aj!
 Aj!@@@@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A!	A	

 Aq@A!	A

  Aj A!	 - AqE
 - !
 Aq"A"G@A!	A A G

-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3751-3900
A

 Aj A!	 - AqE
A - A"G
  Aj  (! (! (! (" (AF
 E@ A}j	
@@@@@ A}j 
 A A
A 

 )  B޹ر R
A

 A A
A

A A AE

A
 @ 
	
 
E

 @ BQ

 AjArA A Aj( ! (! Aj( 

 AjArA A Aj( ! Aj( ! Aj( ! (!A!	

 A A

 
E
	 AjA A Aj( ! Aj( 

 )  B޹ر R


 E
 AjA A Aj( ! Aj( 

 A A


 BR
 AjA A Aj( ! Aj( 
! (! (!A! 



 A A

 
@ AjA A Aj( ! Aj( ! (! (!A!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj ; (AG@ (! (! (!



 (!
 Aj( ! (! (!A!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!
	
 (!
 Aj( ! Aj( ! (!A! 



 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (! (! (!

 (!
 Aj( ! (! (!A !A! 




 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (! (!
 (!


 (!
 Aj( ! (! (!

 
E
 Aj 
7  Aj 7  Aj 6  Aj 6  Aj 
6  Aj 6  Aj 6  Aj 6  Aj" 6  Aj 
6   
6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 
6   
6 A6 Aj  - AqE
 - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

 AjArA A Aj( ! Aj( ! Aj( ! (!A!	

  B 7  Aj:

A !
A! 


	
 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!A! 



 Aj A ! - ! - Aq
 
A

 AjArA A Aj( ! Aj( ! Aj( 
! (!A !	 E
  
A ! 
E@A !
 




-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:3901-4050
 
 



A
!A! 
E

 E
  

 	E E ErrE@ 
 
E 
A G qEr
  

   6  A6   Aj 6   A
j 6   Aj 6 

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr! Aj!
 Aj!@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A!	A	

 Aq@A!	A

  Aj A!	 - AqE
 - !
 Aq"A"G@A!	A A G
A

 Aj A!	 - AqE
A - A"G
  Aj  (! (! (! (" (AF
 E@ A{j
@@@@ A{j 
 A A
A 

 A A	
A

 A A
 A

A
 @ 

 
E

@ 
@ BQ

 AjArA A Aj( ! Aj( ! (! (!A !	 
E
 


 AjArA A	 Aj( ! Aj( ! Aj( ! (!A!	
A ! E@A !

 


 A A


 
E
 AjA A Aj( ! Aj( 

 A A	


 
E
 AjA A	 Aj( ! Aj( 

 A A
	
 BR
 AjA A Aj( ! Aj( 
! (! (!A!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!
	
 (!
 Aj( ! Aj( ! (!A!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (! (!
 (!


 (!
 Aj( ! (! (!A!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (! (! (!


 (!
 Aj( ! (! (!

 Aj 
7  Aj 7  Aj 6  Aj 
6  Aj 
6  Aj" 6  Aj 6   
6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:


 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 6   
6 A6 Aj  - AqE
 - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

 AjArA A Aj( ! Aj( ! Aj( ! (!A!	

  B 7  Aj:

A !
A!

 Aj @ ("AG@  ) 7  Aj Aj( 6 

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4051-4200

 Aj 
 ("AF

 Aj( ! Aj( ! (!A!

 Aj A ! - ! - Aq
 
A

A
!A!
 	E 
E 
Err
  

 E E 
Err
  

   6  A6   Aj 6   A
j 6   Aj 6 

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr!
 Aj!
 Aj!B!@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (! (AF
 E@ Azj
@@@@ Azj 
 A A
A 

 A A
A

 A A
 A

A
 @ 

 	E
 BQ

 AjArA A Aj( ! (! (! (! 
E
 	

 A A

 	E
 AjA A Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 

 A A

 BQ
 AjA A Aj( ! Aj( 
! (! (!


 Aj @~@ ("AF@ Aj  - AqE@A!

 - A F@  Aj  ("AG
B!


 Aj  (AG
 5!
 )! (!

 Aj5 

 Aj5 
!
 )!
 B ! ! 
!
	
 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!
B!

 (!
 Aj( ! (! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!

 AjArA A Aj( ! Aj( ! Aj( ! (!

 Aj 
7  Aj 
7  Aj 
7  Aj" 
6  Aj 
6  AjB  BQ7   	6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 
6   	6 A6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

  B 7  Aj:


 )!
 )!

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4201-4350

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj A ! - ! - Aq
 
A!

A!
 
E 	Er
  	
   6  A6   Aj 6   A
j 6   Aj 6 

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr!
 Aj!
 Aj!B!@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (! (AF
 E@ Azj
@@@@ Azj 
 A A
A 

 A A
A

 A A
 A

A
 @ 

 	E
 BQ

 AjArA A Aj( ! (! (! (! 
E
 	

 A A

 	E
 AjA A Aj( ! Aj( 

 A A

 BR
 AjA A Aj( ! Aj( 

 A A

 BQ
 AjA A Aj( ! Aj( 
! (! (!


 Aj @~@ ("AF@ Aj  - AqE@A!

 - A F@  Aj  ("AG
B!


 Aj  (AG
 5!
 )! (!

 Aj5 

 Aj5 
!
 )!
 B ! ! 
!
	
 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!
B!

 (!
 Aj( ! (! (!

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (!
 (!
 (!	

 (!
 Aj( ! (! (!

 AjArA A Aj( ! Aj( ! Aj( ! (!

 Aj 
7  Aj 
7  Aj 
7  Aj" 
6  Aj 
6  AjB  BQ7   	6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:

 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 
6   	6 A6 Aj  - Aq@ - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 


  B 7  Aj:


 )!
 )!

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!


-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4351-4500
 Aj A ! - ! - Aq
 
A!

A!
 
E 	Er
  	
   6  A6   Aj 6   A
j 6   Aj 6 

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj (" - AqE@A!

 - ! Aq! AjAr! AjAr! Aj!
 Aj!@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A!	A	! 



 Aq@A!	A! 



  Aj A!	 - AqE
 - !
 Aq"A"G@A!	AA A F! 



 A j A!	 - xAqE
 - yA"G@A! 



  Aj  (! (! (! (! (AF
 E@ A}j
@@@@ A}j 
 )  B޹ر R
A 

 A A
A

 A A
 A

A
 @ 


 
E
 BQ
	 AjArA A Aj( ! (! Aj( 

 )  B޹ر R


 
E
 AjA A Aj( ! Aj( 

 A A
	
 BR
 AjA A Aj( ! Aj( 
! (! (! 



 A A

 
@ AjA A Aj( ! Aj( ! (! (!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj ; (AG@ (! (!
 (!


 (!
 Aj( ! (! (!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 (AG@ ) !
 )!B!

 (!
 Aj( ! Aj( ! (! 





 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj   (AG@ (! (! (!


 (!
 Aj( ! (! (!A !
 




 
E
 Aj 
7  Aj 7  Aj 6  Aj 
6  Aj 
6  Aj" 6  Aj 6   
6 A6 Aj  ("AG@ Aj( ! Aj( ! (! Aj:


 Aj ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j( 6  Aj 6   
6 A6 Aj  - AqE
 - A F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 

  A
6 Aj:  A6 

 AjArA A Aj( ! Aj( ! Aj( ! (!A!	A !
 


	
  B 7  Aj:

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF


-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4501-4650
 Aj( ! Aj( ! (! 



 A j A ! - q! - pAq
 
A! 



 AjArA A Aj( ! Aj( ! Aj( 
! (!A !	 E@A ! 



 

 



A! 
E

 
E
  

 	E E 
Err
  

   6  A6   Aj 6   A
j 6   Aj 6 

 A j A!@ - hAqE
 A! - iA G
   A j  - d! A j (`"@A - XAqE
  - Y! Aq! Aj! AjAr! AjAr!
 Aj!	@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!
	
 Aq@A!
	
  A j  - PAqE@A!
	
 - Q!
 Aq"A"G@A!A A F
	

 A@k  - @AqE@A!

 - AA"G@A!

  Aj  (! (! (! (" (AF
@ E@ AG
 A AA G!

A! AF@ A AA G!
 E
  
 
 BR
 AjArA A
	
 BQ
 AjArA A Aj Aj) 7   )7

 Aj @ ("AG@  
) 7  Aj 
Aj( 6   6

 Aj 
 (AF

 Aj Aj) 7   )7

 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj 
 (AG

 Aj Aj) 7   )7

 Aj"A6  Aj 7  Aj Aj) "7  Aj Aj) "
7  Aj" 
7  Aj" 7  Aj" 7  Aj" 
7  Aj"
 Aj) 7  Aj"	 Aj) 7   ) 7 Aj  ("AG@ Aj Aj( 6   )7 Aj:

 Aj ) "7  Aj ) "7  Aj ) "
7  Aj" ) 7  Aj" 7  Aj" 7  Aj" 
7  Aj" 
) 7  Aj"
 	) 7   )7 Aj 
) 7  Aj ) 7  Aj ) 7  Aj ) 7  Aj ) 7  Aj ) 7   )7 A j  - HAq@ - IA F@   A8j Aj) 7   A0j Aj) 7   A(j Aj) 7   A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj )7   A 6 


  A
6 Aj:  A6 


  B 7  Aj:


 	) ! )!
B!
 A8j A ! - 9! - 8Aq
 
A!
 
! Aj 6  Aj 6  Aj 6   6
 Aj Aj( 6   Aj) 7 (!
 Aj Aj( "6   )"7  Aj 6   Aj 7    6  A6 

A!
 
E 	Er
  	
   6  A6   Aj 6   A
j 6   Aj 6 
 Aj$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    <

    < E
 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
@@@@@@@@@@@@  ( 

	 
  (E@  ("E
  A
j( E



  A
j( "E  Aj( Er!  (E@ 
 

-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4651-4800
 
	 
  Aj( "E
  Aj( E
 

@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
@  Aj( "E
   Aj( E
  
  A
j( "E
  A j( E


  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


@  ("E
   Aj( E
  
@  Aj( "E
   Aj( E
  
  A
j( "E
   A j( E
  

 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    f

    f E
 

  B 7 

  B7 

   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 
# Ak"$ @@@@@@@@@@@@ A|j 									
 (  AG@ (  AʹG
  A; 


  A; 


 A A@ A A
  A; 


  A; 
	
 A̅ A

  A
; 

 Aم A	E
 A A	
  A; 

 (  AҹG
  A; 

 A  
  A; 

 )  Bٲ Q


 A  
  A; 

  A
; 

   A A
=  A:    A
j Aj) 7   Aj ) 7 

  A ; 
 Aj$ 
# Ak"$   6
  6 A$jA6  A4jA6  B7 A 6 A6,  6<  68  A(j6   A8j60  Aj6( B 7D A ( 6@ A j A@kA  Aj A j@A A7 A jA A  
   )@7  A6   A
j A j( 6  Aj$ 
# A k"$   6 Aj Aj (! (! A6
 A 6@ Aj" M@  M@  O
   Aj    Atj" (   ( (
" E  AtErE@ 
 A j$ 
  Ać  
A A!A  
  Aԇ  
# A0k"$   6
  6 Aj Aj A j AjAr ( ! ( ("k (("I@ Aj  @ (!
 (" Atj  At ($"E AtErE@ 
 A	6$ A 6 @  j"Aj" M@  M@  O
   A j    Atj" (   ( (" E  AtErE@ 
 A0j$ 
  Ać  
A A!A  
  Aԇ  
# A k"$ @  j" I
   Aj( "At"   K"A AK"Aq FAt! At!@ @ AjA6   At6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( Av6    6  A j$ 
 
 ~# Ak"$  A j A A
 (
 @  ~@@@@@@@ (p"E@AA"E

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4801-4950
  A6  B7  AjA (  6   AjA )  7   AjA )  7   A܌ )  7    AjB7   A
j 6 
	
 Aj  A j(  A j Aj - hAqE@A!

 - iA G@A!

 Aj A j Aj (`!  - dAq":   6 A j  - XAqE@A!

 - Y! AjAr!
 AjAr! Aj! Aj! !B!
@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
A !A!A	!

 Aq
   A j A! - PAqE@A !A!

 - Q!

A ! A : 
A !A! Aq"A"G@AA A F!

 A j  - HAqE@A!

 - IA"G@A!

  Aj  (! (! (!
 (! (AF
@ E@ Aj 
 B

 Aj 
 B E
  

 - AF@ (!

 - 
 
E
@ 
@ AF
 AjArA A Aj( ! Aj) !


 AjArA A Aj( ! Aj) !
 (!A!

 
BQ
 AjArA A
 Aj( ! )!


 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 ("AF


 Aj( ! )!


 
BQ
 AjA A
	
@@ 
BR@ Aj  ("AF
  
) 7  Aj 
Aj( 6 

 AjA A



 Aj 
 (AG@ ) "
B ! )!" 
!B!



 (!
 (! )!


 @ AjA A

 Aj Aj1 - AG@ - !A!


 Aj( ! Aj) !
 (!

 
E
 AjA A

 
E
 AjA A

  ( 6  Aj(  6 B 
 
BQ!
 Aj Aj ("AG@ Aj( ! )!
 @ 

 @ 

 E E 
BQrrE@ 
 !

  (6  ( 6  Aj Aj ("AG@ Aj( ! )!
 @ 

 @ 

 E E 
BQrrE@ 
 !

  (6  ( 6   A(j 7   A j #7   Aj  B 7    "7  A j :    A j 6   A j 6   A j 
6   A j 
6   A j 6   A@k 
6   A8j $7   A4j 6   A0j 6   Aj 
7    (6 Y  A j ( 6  B 

 Aj 6  Aj 6  Aj 
6   6


 AjArA A Aj( ! Aj) !
 (!A !
A!A !


 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj   (AG@ (!
 (! (!


-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:4951-5100

 (!
 Aj( ! )!
A !

	
 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj   (AG@ (! (! (!


 (!
 Aj( ! )!
A !


 Aj( ! )!
 (!

 Aj @@@@ ("AF@ A@k A !
 - @AqE@A!

@ - AA F@  Aj  ("AG
A!	

 A8j  - 8AqE@A!

 - 9A G@A!

  A0j  - 4 A(j (0" - (AqE@A!

 - )!Aq!B ! B!
A !B !!@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  -  AqE
 - !!
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (!	 (! (AF
 E@ A}j



@@@ A}j 
 	A A
A 

 	A A
 A

A
 @ 	


 
 AjArA A Aj( ! Aj( !
 Aj( !	 (!

 	A A
	
 E
 AjA A Aj( ! Aj( 

 	A A

 
BQ
 AjA A Aj( ! Aj( 
! (!	 (!


 Aj @@ ("AF@ Aj  - AqE@A! !

 - A F@  Aj  ("AG
B !



 Aj 
 (AG
 Aj( ! )!
 (!

 Aj( 

 Aj( 
! )!

 
B ! 
!	


 Aj  ("AG
 Aj   (!
 (! (! (AG
 Aj( ! !	


 Aj  ("AG@ Aj( ! Aj( !
 (!	 E@ !


  !


A  
 
BQ!	 
!$

 Aj( ! Aj( !
 (!	
	
 ) "
B  )"B !  
B !! !B!


 Aj @ ("AG@ Aj Aj( 6   )7

 Aj 
 ("AF

 Aj( ! Aj( ! (!	

 Aj A ! - 	! - Aq
 
A!

 !B   B !   B !# 	!


 )"
B !
 Aj( ! 
!	 !

 )"
B !

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5101-5250
 Aj( ! 
!	 !

A!
 E ErE@ 
 ! ! !

 	 
B !
A!A !

  A!A ! - ! -  Aq
 
A!

AA 
 (!A ! E
  

A! E@A !

 


 Aj( ! Aj) !

 
B~BQ@ !

 E@ !

 E@ !

  !
 E E 
ErrE@ 

 E  
Err
  

 Aj 6   
7  6  AjA܌ A Aj
B
7  E
  (tE
  
 Aj$ 
 @@@@@@ A|j	 
 (  AµG
A 

 A A
A

 )  Bʍ֭ R
A

 A A

A

 (  AҹG
 A

A
!  A :     : 
~# Ak"$  A j@@@@ ( AF@ (X" (TF@ A j A (X!
 (P jA :    Aj6X A j A jA A (pAF
 (X" (TF@ A j A (X!
 (P jA::    Aj6X A j A jA A  (AFA AjD (pAG@ (X" (TF@ A j A (X!
 (P jA :    Aj6X

 A j A j( 6   )t7d

 A j A jA A Aj+ (`AG


 A j A j( 6   )t7d
 A j" A j( 6   )d7@@ (P"E
  (TE
  
 A j ( 6   )@7p A j"A A A j( Aj A8j) "7  Aj A0j) "7   A(j) "7  ) !	  Aj 7   Aj 7   Aj 7    	7 

  )P"7
 A j(  A A " A j(  ( @ 
  A
6 
 Aj$ 
~# A0k"$  (" Aj( F@  A (!
  Aj6 (  jA :   Aj   @@ (AG@ (" Aj( F@  A (!
  Aj6 (  jA::   A j  Aj  ( " (( ($@ 
 (AF
 (" Aj( F@  A (!
  A 6   Aj6 (  jA :  

 A(j A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A0j$ 

~# Ak"$  A j Aj A j@@@@@@@@@@ (AG@  (6p  Aj-  : t Aj A jA A A8j (AF
 Aj A jA A A j (AF
 Aj A j - PF (AF
 Aj A jA A
  (AF
 (p!@ - t@ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : t Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jAҹ6    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj"
) BQ@ A j 

 Aj  (AF
  ("6@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"	(  F@  A Aj( !
 (  jA":   Aj" Aj"6  	(  kAM@  A ( !
 (  j"	A (  6   	AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  (( A0j(  (AF
 Aj Aj 
G (AG@ A j ( - 

 Aj Aj( 6   )7| A6x

 A j AjAr"Aj( 6   ) 7d

 A j Aj( 6   )7d

 A j Aj( 6   )7d

 A j Aj( 6   )7d

 Aj AjAr"Aj( 6  A6x  ) 7|

 Aj Aj( 6   )7| A6x

 A j Aj( 6   )7d

 (xAF@ A j Aj( 6   )|7d


-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5251-5400
 A j A  (`AG

 A j" A j( 6   )d7@@ (P"E
  (TE
  
 Aj ( 6   )@7 A j"A܌ A Aj( Aj A8j) "
7  Aj A0j) "
7   A(j) "
7  ) !  Aj 
7   Aj 
7   Aj 
7    7 

  )P"
7
 A j(  A A
 
" A j(  ( @ 
  A
6 
 Aj$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jBʍ֭ 7    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A /  ;   AjA -  :    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6 @@ ) BR@ Aj 

 B 7$ A ( 6  A0j A jA  Aj A0j
 Aj  (  (( ( "E
  ($E
  
A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A j$ 
A A7 A jA A  

~# Ak"$  A j A A (
 @ (h"E@  A 6   A
jA6 

 Aj  A j(  A j Aj@@ - `AqE@A!

 - aA G@A!

 Aj A j Aj - \! A j (X" - PAqE@A!

 - Q! Aq! AjAr! AjAr!A!
@@@@@@@@@@@@~@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq
  A j  - HAqE
 - I!
 Aq"A"G@A! A G


 A@k  - @AqE
 - AA"G@A!

  Aj  (! (! (! (! (AF
@@@@@@@@@@@@ E@ A|j
@@@@@ A|j 
 AȄ A
A 

 Aτ A

A

 (  AޝG
A

 Aڄ A	
 A

A
 @ 

 AȄ A

 
AG
 AjAȄ A Aj( ! Aj( ! (! (!A!



 Aτ A


 AG
 AjAτ A
 Aj( ! Aj( ! (! (!A!

 (  AޝG

 
AF
 AjA A Aj( ! Aj( ! (! (!

 Aڄ A	

 AF@ AjAڄ A	 Aj( ! Aj( ! (! (!

 Aj  ("AF@ A8j  - 8AqE@A! ! !

 - 9A F@  Aj  ("AG
A !

 Aj   (! (! (! (AG
 Aj( ! ! !

 Aj( ! Aj( 

 Aj ~@ ("AF@ A0j  - 0AqE@A! 
!

 - 1A F@  Aj  ("AG
A 

 A(j A ! - (AqE@A!

@ - )"A G@ A"G@A
!

 Aj I - AF
 - AG@A!

 AjA6  ("AF
 Aj) !
 (!

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5401-5550

  Aj "I@ - AG@ - ! Aj  ("AF
 Aj) !
 (!

 ("Av! Aj) !
 Aj( !

@ AqAG@ Aj   (! (! (! (AG@ A j @ -  Aq@ - !A F
B !
 


B !
 E Er
 

 E
 

 !
 Aj5 B 

 AjA6  ("AF
 Aj) !
 (!

  Aq! A~q

 /  - Atr! Aj) !
 Aj( ! - !


 Aj) 

 Aj) 
!
 (!


 Aj  ("AF@ Aj  - AqE@A! ! !

@ - A F@  Aj  ("AG
A !

 Aj   (! (! (! (AG
 Aj( ! ! !

 Aj( ! Aj( ! (!

 Aj( ! Aj( ! (!

 Aj  ("AF@ Aj  - AqE@A! 	! !

@ - A F@  Aj  ("AG
A !

 Aj   (! (!	 (! (AG
 Aj( ! 	! !

 Aj( ! Aj( ! (!

 Aj( ! Aj( ! (!

 Aj( ! Aj( 
! (!

 
A  AF! A  
AF! A  AF!A  
 
AF!	 Aj Aj ("AG@ Aj( ! Aj( ! (! E ErE@ 
 E ErE@ 
 	E E 
ErrE@ 

 E Er
 

 Aj Aj ("AG@ Aj( ! Aj( ! (! E ErE@ 
 E ErE@ 
 	E E 
ErrE@ 

 E Er
 

 Aj 6  Aj" 6  Aj 6  Aj" 6  Aj 
6  Aj" 	6  Aj 
6  Aj" 6  Aj 6  Aj"	 6  Aj 6  Aj" 6  Aj"
 ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" 	) 7   6  )7x  A 6   A4j ( 6   A,j ) 7   A$j ) 7   A
j ) 7   Aj ) 7   A
j 
) 7    )x7

 E E 
ErrE@A!
  	! !


 	! !A!



 
E E ErrE@A! 
 ! !



 ! !
A!


A!B 

A
!B 
!
 
 
!
 Av!
 Aq Atr!
 
B ! 
!A!

	
A !A 
 r!
  B !
A
!
 
B !
 
!

 E E ErrE@A!  ! !

 ! !A!

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!


-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5551-5700
 Aj A ! - 	! - Aq
 
A!

A!

A!
 AG

 E Er
  
 
A}qE E 
ErrE@ 

 E 
Er AGrE@ 

 E Er 
AGr
  
 Aj 6  Aj 6   6  6 Aj"A A" Aj
 Aj Aj) "
7  Aj Aj) "
7  Aj Aj) "7   ) " 7|  A j 7   Aj 
7   Aj 
7   Aj  7   A6 
 E
  (lE
  
 Aj$ 
# A k"$   @@@  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A}j 					
 A AE
	

 )  Bډƌٲ R
  A; 
	
@@ A}j 
 A AE


 )  Bډƌٲ R
  A: A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A A=A

  A : A 
:   E
 

  Aj  A A=  A:  

  A ; 
 A j$ 
~# Ak"$  (! ( ! A j B 7t A ( 6p Aj A jA   AjE@ A j A j (p (x@ (p"E
  (tE
  
@ (`AF@ A j" A j( 6   )d7@@ (P"E
  (TE
  
 Aj ( 6   )@7 A j"A A$ Aj( Aj A8j) "7  Aj A0j) "7   A(j) "	7  ) !
  Aj 7   Aj 7   Aj 	7    
7 

  )P"7
 A j(     " A j(  ( @ 
  A
6 
 Aj$ 
A A7 AjA A  
~# A k"$    (  ( (
 @  ~@ ( "@ A8j  Aj(  A j A8j
 A j~ (HAG@ A j) ! A j) ! A j A8j (H"AF
 )L! A j5 

 A j) ! (L! A j5 
>   7L  6H AjA A$ A j
  Aj A(j) 7   A j A0j) 7  )!  Aj A j) 7    7B

  B 7   AjB 7 

  Aj 7   Aj 7   B7B 
7  (E
  
 A j$ 
~# A k"$  Aj( ! (!	 (! ( ! A j (
" Aj(  A0j" A j"
) 7  A8j" A j"
) 7  A@k" A j"
) 7   )P7(@ )HBR@ A j ) "
7  Aj ) "7  Aj ) "7   )("7 A j 7  A j 7  A j 
7   Aj 	6   A
j 6    6  7L   )H7  A
j A j) 7   A$j 
) 7   A,j 
) 7   A4j 
( 6   B 7  E
 

   )(7  B7   A j ) 7   Aj ) 7   Aj ) 7  E ErE@ 
 E
  
 A j$ 
T~# Ak"$  Aj   Aj AjA !@@ - AqE@A!

@@@@@@@@@@@@@@@@@@@@@@@@@@ - "A G@ A"G@A
!


 Aj AjN - AF
A!


 Aj Aj Aj"N@ - AG@ - ! Aj  ("AG@ Aj) ! (!A 

 Ak
 Aj) ! Aj( ! ("Av
! B ! !


 A8j  - 8AqE@A!


 - 9A G@A!


  A0j  - 4 A(j (0"A - (AqE
 - )!Aq! AjAr!	 Aj! AjAr!
@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  -  AqE@A!

 - !!
 Aq"A"G@A!A A F


-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5701-5850


 Aj  - AqE@A!


 - A"G@A!


  Aj  (!
 (! (! (" (AF

@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 E
 AjArA A 
E
!
 
 
 AjArA A Aj Aj) 7   )7
 
 Aj @ ("AG@ 
 	) 7  
Aj 	Aj( 6   6

 Aj 
 (AF

 Aj Aj) 7   )7


 Aj @ ("AG@  
) 7  Aj 
Aj( 6   6

 Aj   (AG

 Aj 	Aj) 7   	) 7


 Aj 6  Aj" 
6  Aj" Aj) 7  Aj Aj) 7  Aj Aj( 6  Aj ) "7   6 A 6 Aj  ("AG@ Aj) ! (! AjO

 Aj" ) 7  Aj Aj) 7  Aj Aj( 6  Aj 7   6 A 6 Aj @ - Aq@ - A G
  Aj Aj( 6  Aj Aj) 7   ) 7 B ! !A !A 

 AjOA!
 
 AjO

 (! (!
 (!
 Aj A ! - 	! - Aq
 
A!

 /  - Atr! Aj) "B ! Aj( ! - ! !

 Aj @@ - AqE
  - A G@A!

  Aj  - ! Aj ("@ - AqE
  - ! Aq! AjAr! AjAr!	@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"
A"G@A! 
A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!

 A6 Aj  ("AG@ Aj( ! Aj( ! (! AjO

 Aj" Aj) 7  Aj Aj) 7  Aj Aj( 6  A6 Aj  - Aq@ - A F@  Aj Aj) 7  Aj Aj( 6   ) 7 Aj) "B ! !A ! (!A

 AjOA!A


 AjOA!

 Aj @ ("AG@  	) 7  Aj 	Aj( 6 

 Aj 
 ("AG
  Aj A ! - ! - AqE



 Aj( ! Aj( ! (!

A!

A!
 Av!

 Aj @@ - AqE
  - A G@A!

  Aj  - ! Aj ("@ - AqE
  - ! Aq! AjAr! AjAr!	@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"
A"G@A! 
A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!

 A6 Aj  ("AG@ Aj( ! Aj( ! (! AjO

 Aj" Aj) 7  Aj Aj) 7  Aj Aj( 6  A6 Aj  - Aq@ - A F@  Aj Aj( 6  Aj Aj) 7   ) 7A !A !A



 AjOA!


 Aj @ ("AG@  	) 7  Aj 	Aj( 6 

-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:5851-6000

 Aj 
 ("AG
  Aj A ! - ! - AqE



 Aj( ! Aj( ! (!

A!

A!
 Av!

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj ("
@ - AqE@A!

 - ! Aq! AjAr!
 AjAr!A!@@@@@@@@@ Aq"
A,G@ 
A F
 Aq
A	!
	
 Aq@A!
	
 
 Aj 
 - AqE
 - !
 Aq"A"G@A! A G
A!

 Aj 
 - AqE
 - A"G@A!

 
 Aj 
 (!
 (! (!
 (! (AF
@@@@@ E@ A{j						
@@@ 
A{j 
 
A A

A 

 
A A
 A

A
 @ 


 
A A


 AG
 AjA A
 Aj) "B !
 (!
 (! !A!


 
A A

 AG@ AjA A Aj) "B !
 (!
 (! !
	
 Aj 
~@ ("AF@ Aj 
 - AqE@A! 	

 - A F@ 
 Aj 
 ("AG
A !


 Aj 
% (!	 (AG
 Aj) ! 	! Aj( 

 Aj) 

 Aj) 
! (
!
 B !
 !

 Aj 
@ ("AF@ Aj 
 - AqE@A!


 - A F@ 
 Aj 
 ("AG
A !

 Aj 
  (! (! (! (AG
 Aj( !



 Aj( ! Aj( 

 Aj( ! Aj( 
!
 (!

 Aj 	6  Aj"A   AF6  Aj  B "7  A6  A  AF"6 Aj  ("AG@ Aj) ! (! AjO
	
 Aj" ) 7  Aj Aj) 7  Aj Aj( 6  Aj 7   6 A6 Aj  - Aq@ - A F@  Aj Aj( 6  Aj Aj) 7   ) 7A !A





 AjOA!
!
 E E ErrE@A!  ! !

 ! !A!

A!

 Aj 
@ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 

 ("AF

 Aj) "B !

-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6001-6150
 (!
 !

 Aj 
A ! - ! - Aq
 
A!

A!
 E Er AGrE@ 
 
! !
  
B !
 Av! B ! !

 Aj  - AqE@A!

 - A G@A!

  Aj  - ! Aj ("
 - AqE@A!

 - ! Aq!
 AjAr! AjAr! Aj!A!@@@@@@@@@@@@@@@@@ Aq"
A,G@ 
A F
 
Aq
A	!

 
Aq@A!

 
 Aj 
 - AqE
 - !
 Aq"
A"G@AA 
A F!

 Aj 
 - AqE
 - A"G@A!

 
 Aj 
 (! (!
 (!
 (! (AF
 E@ 
A{j
@@@@ A{j 
 
A A
A 

 
A A

A

 
A A
 A

A
 
@ 


 
 AjArA A Aj) "B ! Aj( !
 (!

 
A A

 E
 AjA A Aj) "B ! (!
 (! !


 
A A


 AG
 AjA A
 Aj) "B ! (!
 (! !
A!

 
A A

 AG@ AjA A Aj) "B ! (!
 (! !


 Aj 
~@ ("AF@ Aj 
 - AqE@A! 


 - A F@ 
 Aj 
 ("AG
A !


 Aj 
% (!
 (AG
 Aj) ! 
! Aj( 

 Aj) 

 Aj) 
! (
!
 B ! !



 Aj 
 ("AF@ Aj 
 - AqE@A!

 - A F@ 
 Aj 
 ("AG
A !

 Aj 
  (! (! (! (AG
 Aj( !

 Aj( ! Aj( 

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
  (AG@ (! (! (!

 (!
 )"B ! (!

-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6151-6300

	
 Aj( ! Aj( 
! (!


 Aj 
6  Aj 6  Aj 6  AjA   AF6  Aj" 	A  AF6  Aj  B "7   6 A6 Aj  ("AG@ Aj) ! (! AjO


 Aj" ) 7  Aj Aj) 7  Aj Aj( 6  Aj 7   6 A6 Aj  - Aq@ - A F@  Aj Aj( 6  Aj Aj) 7   ) 7A !A



 AjOA!


 	E E ErrE@A! 	 ! !	

 ! !	A!

A!

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 

 ("AF

 Aj) "B ! (!
 !


 Aj 
A !
 - ! - Aq
 
A!

 AjOA!A


 !
A !

A!
 E 	Er AGrE@ 	
 
! 
!
 E Er
  
  B !
 Av! B ! !

 Aj @ - AqE@A!

 - A G@A!

  Aj  - ! Aj ("	 - AqE@A!

 - ! Aq! AjAr!
 AjAr! Aj!
@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

 	 Aj 	 - AqE
 - !
 Aq"A"G@AA A F!

 Aj 	 - AqE

 - A"G@A!

 	 Aj 	 (! (! (! (! (AF
 E@ A{j


@@@ A{j 
 A A
A 

 A A
 A

A
 @ 


 E
 

 AjArA A Aj( ! Aj( ! Aj( ! (! 
E
 

 A A

 E
 AjA A Aj( ! Aj( ! (! (!


 A A

 
@ AjA A Aj( ! Aj( ! (! (! 




 Aj 	@ ("AG@ 
 
) 7  
Aj 
Aj( 6 

 Aj 	  (AG@ (! (! (!


 (!
 Aj( ! (! (!


 Aj 	@ ("AG@ 
 
) 7  
Aj 
Aj( 6 

 Aj 	  (AG@ (! (!
 (!

 (!
 Aj( ! (! (

 Aj 6  Aj 6  Aj" 
6  Aj 6  Aj 
6   6 A6 Aj  ("AG@ Aj( ! Aj( ! (! AjO


 Aj" ) 7  Aj Aj) 7  Aj Aj( 6  Aj 6  Aj 
6   6 A6 Aj  - AqE
 - A F@  Aj Aj) 7  Aj Aj( 6   ) 7 )"B ! !A !A

 AjO


-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6301-6450
 AjArA A Aj( ! Aj( ! (! Aj( 
!A !

 AjOA!

 Aj 	@ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 	
 ("AF

 Aj( ! Aj( ! (!

 Aj 	A ! - ! - Aq
 
A!

A!
 E 
Er

 

 
E Er
  
 Av!

 Aj @@ - AqE
  - A G@A!

  Aj  - ! Aj ("@ - AqE
  - ! Aq! AjAr! AjAr!	@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"
A"G@A! 
A G
A!

 Aj  - AqE
 - A"G@A!

  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!

 A6 Aj  ("AG@ Aj( ! Aj( ! (! AjO

 Aj" Aj) 7  Aj Aj) 7  Aj Aj( 6  A6 Aj  - Aq@ - A F@  Aj Aj( 6  Aj Aj) 7   ) 7A !A !A



 AjOA!

 Aj @ ("AG@  	) 7  Aj 	Aj( 6 

 Aj 
 ("AG
  A j A ! - y! - xAqE



 Aj( ! Aj( ! (!

A!

A!
 Av!

 A j  - pAqE
 - qA G@A!

  A j  - l! A j (h" - `AqE
 - a! Aq! AjAr! AjAr!	@@@@ Aq"A,G@ A F
 Aq
A	!
	
 Aq@A!
	
  A j  - XAqE
 - Y!
 Aq"
A"G@A! 
A G
A!

 A j  - HAqE
 - IA"G@A!

  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!

 A6 Aj  ("AG@ Aj( ! Aj( ! (! AjO

 Aj" Aj) 7  Aj Aj) 7  Aj Aj( 6  A6 A j  - PAq@ - QA F@  Aj Aj( 6  Aj Aj) 7   ) 7A !A !A




 AjOA!

 Aj  ("AG@  	) 7  Aj 	Aj( 6 

 Aj 
 ("AG
 A@k A ! - A! - @Aq
 


 AjOA!A !A


 Aj( ! Aj( ! (!

A!

A!
 Av!

A!A

! @ !

 Aj" )7  Aj" Aj( 6  Aj"	 Aj) 7  Aj"
  B 7   6  6 Aj Aj ("AG@ Aj Aj( "6   )"7  Aj 6   Aj 7    6  A6  AjO

   )7  A 6   A$j ( 6   A
j 	) 7   Aj ) 7   A
j 
) 7 

 
! Aj 
6  Aj 6  Aj 6   6
 
E Er

 

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6451-6600
 Aj) ! Aj( ! (!
 Av! B ! !
  A6   Aj 6    Aq Atr6  A
j  B 7 
 Aj$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    j

    j E
 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
@@@@@  (  
  Aj( "E
  Aj( E
 
@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E
 

@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E
 
  ("E
   Aj( E
  

# A k"$   @@@  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@@ A{j
 


 A A
	  A; 


 A A	E
	

 A܃ A
  A; 
	
@@@@ A{j 
 A A
  A: 

 A A	E


 A܃ A
  A: 
A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A A=A

  A : A 
:   E
 

  Aj  A A=  A:  

  A ; 
 A j$ 

   (  
   (   ( 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjAؑ  Aj A j$ 
 
O  (   ((    ("(@ (  ( 
@  Aj( "E
   Aj( E
  

!@  ( "E
   Aj( E
  


  ( !  ("@  A lj!@ "A j!@@@ ( 
@@@@@ Aj(  
 Aj( "E
 Aj( E
 

@ Aj( "E
  Aj( E
  
@ A j( "E
  A$j( E
  
 A,j( ! A4j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (,!
 A0j( "E Er AtEr
 

@ Aj( "E
  Aj( E
  
@ A j( "E
  A$j( E
  
 A,j( ! A4j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (,!
 A0j( "E Er AtErE@ 
 A8j( "E
 A<j( E
 

@ Aj( "E
  Aj( E
  
 A j( "E
 A$j( E
 

@ Aj( "E
  Aj( E
  
 A j( "E

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6601-6750
 A$j( E
 

 A
j( E@@ ("E
  Aj( E
  
 A
j( ! A$j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (
!
 A j( "E Er AtEr
 

 (! Aj( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 Aj( "E Er AtEr
  
  G
 
  ( !
  Aj( "E Er A lErE@ 
  (
!  Aj( "@  Alj!@@ ( "E
  Aj( E
  
@ A
j( "E
  Aj( E
  
 Aj" G
 
  (
!
  Aj( "E Er AlErE@ 
  (!  A j( "@  Alj!@@ "( "E
  Aj( E
  
 (
! Aj( "@  Alj!@@ ( "E
  Aj( E
  
@ A
j( "E
  Aj( E
  
 Aj" G
 
 (
!
 Aj! Aj( "E Er AlErE@ 
  G
 
  (!
  A
j( "E Er AlErE@ 
@  ($"E
   A(j( E
  

  j!@@ E@ !

 !@ ! "Aj!@@ ,  "AJ@ Aq!

  F@A ! 

 - A?q! Aj
! Aq!	 Aq"AM@  	Atr!

  F@ !A 

 Aj! -  A?q
 Atr! AI@  	A
tr! !

A !  F@ !A !
 

 -  A?q!
 Aj"
! 	AtA q Atr 
r"A G
 !

 !
  k j!@ A F AwjAIr
  AI@ !

 
  !

  G
 
A !
A !
@  F
 @ "Aj"-  "AtAu"	AL@ 	A?q  F@ !A 

 A~j"-  "AqAG@ Aq

 A?q  F@ !A 

 A}j"-  "
AqAG@ 
Aq

  F@ !A 

 A|j"-  AqAt
 
A?qr
Atr
Atr"A F

@ A F AwjAIrE@ AI
 E

  G



  k j!
    k6    j6 

~# Ak"$ @ E
  A
j( ! Aj( ! Aj( ! A
j( ! Aj! (!	 ( !
 ((
!
A !@@ A j 
 
   (pE
  Aj Aj) 7  Aj A j) 7   )p7 A8j     Aj 	  )8BQ
  Aj! A0j A j) 7  A(j A j) 7  A j A j) 7  Aj A j) 7  Aj A j) 7   A@k) 7   )8"
7 @ 
P@ ("
E
 (
E
 


-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6751-6900

 
  G



A

A 
!   6   6  Aj$ 

~# Ak"$ @@@ E@ ( ! ((
!

 A
j( ! Aj( ! Aj( !	 A
j( !
 Aj! (!
 ( ! ((
!@ A j     (pE
 Aj Aj) 7  Aj A j) 7   )p7 A8j 
 	   Aj 
  )8BQ
 A0j A j) 7  A(j A j) 7  A j A j) 7  Aj A j) 7  Aj A j) 7   A@k) 7   )8"
7 @ 
P@ ("
E
 (
E
 


 
 Aj"
 

      ( E@  B7 

 A
j( ! Aj( ! Aj( ! A
j( ! (! A j Aj) 7  A@k Aj) 7   ) 78       A8j  

  B7 
 Aj$ 
# A k"$   @  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@ AF@ A AE
 A AE

  Aj  A A=  A:  

  A; 

@ AF@ A AE
 A AE

  Aj  A A=A

  A: A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A ; 

  A : A 
:   E
  
 A j$ 
   (  ]A 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjAؑ  Aj A j$ 
O  ( "Aj(  Aj"( " k I@     ( ! 
 (   j      j6 A 
J  Aj(   Aj"( "k I@     ( !
  (  j     j6 A 
@@@@@ @A! A H
 ( "E
 ("
 


   6A!

    

 E

  
! 

 !A 
! @   6A !

   6 !
   6   Aj 6 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB0~"B EAt! !@ @ AjA6   A0l6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( A0n6    6  A j$ 
 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB
~"B EAt! !@ @ AjA6   A
l6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( A
n6    6  A j$ 
 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB ~"B EAt! !@ @ AjA6   A l6   ( 6

 A 6
    Aja ( AF@ Aj( " E
 (   
 (!  Aj Aj( A n6    6  A j$ 
 

-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:6901-7050
# A k"$  Aj ( "@@ - AqE@A!

@@@@@ - ""A,G@ A F
 - 
A	!

 - 
   Aj  - AqE
 - 	!

 A : 
 Aq"A G@ A"G@A!

   -  AqE
 - A"G@A!

  A(j  A4j( ! A0j( ! (,! ((AG@ E E Err
 

 AF
 A8j( !

A!

  A ; 

 A(j @ (("AG@ A$j A4j( 6   ),7
  6

 Aj 
 (AG
   A; 

  A:    Aj )7   A
j A j) 7 

A!
  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   6  6  Aj  @ (AG@   )
7  A 6   A
j Aj( 6 

 A jA6  B7D A 6@ A6\  A j6P  6X A0j A@k A@kAr A0j A6@@ (0"E
  (4E
  
   )@7  A6   A
j A j) 7  Aj
 A j$ 
~# A0k"$  Aj ( "@@ - Aq@ - 	""A,G@@ A G@ - 
  A:    AjA6 

  A ; 

 A : 

    -  Aq@ - !

  A:    AjA6 

  A:    AjA6 

 A F@  A:    AjA6 

 A j 
 ( "AF@  A; 

 Aj A,j( "6   )$"7  Aj 6   Aj 7   Aj 6   A:  
 A0j$ 
# A k"$   6  6  Aj  @ - AG@  A 6   Aj )7   Aj Aj) 7 

  - 	: ' A jA6  A jA6  B7< A 68 A6T  A j6H  A'j6X  6P A(j A8j A8jAr A(j A68@ (("E
  (,E
  
   )87  A6   A
j A@k) 7 
 A j$ 
# A k"$   6
  6 Aj  @ - AG@  A 6   Aj )7 

  - : ' A jA6  A jA6  B7< Aԕ 68 A6T  A j6H  A'j6X  Aj6P A(j A8j A8jAr A(j A68@ (("E
  (,E
  
   )87  A6   A
j A@k) 7 
 A j$ 
 @@@@@@@@@@@ Azj	 
 A A

  A: 
	
 A A
  A: 

 AȚ AE
 A A
  A: 

 A A	
  A: 

  A: 

 A֚ A

  A: 

 A AE


 A  
   A: 

  Aj  A A=  A:  
  A :   A :  
  A :  
~# Ak"	$  	A j ( ( " ( A
j( (
 @@@@ 	(HAG@ 	Aj 	A j( "
6  	 	)L7 
 (G
 	("
 (  

  A6   AjA
6 

 	A<j 	A j) "7  	A4j 	A j) "7  	A,j 	A j) "7  	 	A j) "7$  A j 7   Aj 7   Aj 7   Aj 7   A6 

 ( !
 (!
 	Aj  	Aj? 	A j 
 	("
 	(" 
(
 @ 	( "E@B!

 	A j  	A(j(  	A j) ! 	A j) ! 	A j) ! 	A j( !
 	(P! 	)H! 	($@ 
A B R

@ BQ@ 	 	B 7P 	B 7H 	)! 	) !

 	 7P 	 
6L 	 6H
 	A j" 7  	 7X BR@ 	 7` 	 7X
 	A j   	A8j ) 7  	A0j 	A j"
) 7  	A(j 	A j") 7  	 	)H7  	A j 	A j&@ 	(HAG@ (  
 

-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7051-7200
  	(L"
 	A j(  
( E
 


 ( "A
F
  	A j) ! 	A j) ! 
) ! 	A j( !
A

 	A8j) ! 	)0! 	)(! 	($!
 	( !A 
 	(@ 

E@ 	A jB 7  	A jB 7  	B 7L 	A 6l 	A ( "6` 	 6T 	A ( 6H@@@@@A A"@AA"
E
 
AjA /  ;   
A (  6  AA"
E
 
AjA /  ;   
AjA )  7   
A )  7  AA"
E
 
AjA -  :   
A (  6   	A(j Aj( 6  	 ) 7  	Aj 	A j 	B 7 	 
6AA"
E
 
AjA (  6   
A (  6  AA"
E
 
AjA /  ;   
A (  6   	A,j   B7  
6
 B 7  
6  B 74  
60  	)7 A j 	Aj) 7  A(j 	Aj) 7   ) 7< A j Aj( 6  	B 7$ 	 
6  A j 	A(j) 7  A j 	A0j) 7   	) 7H 	 6x 	B 7|  Aj 	A j 	A j6  A 6 @ 	(" E
  	(E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
	 A,j( E
	  
	
A A 
AA 
AA 
AA 
AA 
AA 
  A6   A j 7   Aj 7   Aj 7   A
j 
6   Aj 6  	(!

 
E
  	(E
  

 Aj( @ 
@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 	Aj$ 
~# Ak"	$  	A j ( ( " ( A
j( (
 @@@@ 	(pAG@ 	Aj 	A j( "
6  	 	)t7 
 (G
 	("
 (  

  A6   AjA
6 

 	A4j 	Aj) "7  	A,j 	Aj) "7  	A$j 	Aj) "7  	 	A j) "7
  A j 7   Aj 7   Aj 7   Aj 7   A6 

 ( !
 (!
 	A j  	Aj? 	Aj 
 	(`"
 	(h 
(
 @@@@@ 	("E@A
A"E
 AjA )  7   AjA )  7   AjA )  7   A )  7   	AjB7  	A j 6  	A6x 	B7p

 	A j  	Aj(  	(E
  
 	(d@ 

 	A j" 	Aj) 7  	A(j"
 	Aj) 7  	A0j"
 	Aj) 7  	 	)x7 	)pBQ
 	A j 
) 7  	A j 
) 7  	A j ) "7  	 	)"7@  V  V  QE@ 	A j  	Aj? 
 	(p" 	(x 
(  	(tE
 

 	Aj     	(AF
 	 	A(j) 7H 	 	A j) 7@ BR@ 	A j 7  	 7P
 	A j  	Aj? 	(h!
 	(`! 	A j 	A@k&@ 	(pAG@ 	A j( A
!
 
  
 	(t"
 	A j(  
( E
 


 	A j 	Aj) 7  	A(j 	Aj) 7  	 	Aj) 7 	A j( !
 	A j( !

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7201-7350

 	(d@ 
 
A
F
 	Aj 	A(j) "7  	Aj 	A j) "7  	 	)"7  A j 7   Aj 7   Aj 7   A
j 
6   Aj 
6   A6  	(!


A
A 
  A6   Aj 	)7   A j 
) 7   Aj 
) 7   Aj ) 7  	(!


 	Aj 	A4j( 6  	Aj 	A,j) 7  	Aj 	A$j) 7  	 	)
7 	A j 	Aj 	A j 	Aj) "7  	 	Aj) "7` 	)x!  Aj 	Aj) 7   Aj 7   A j 7   Aj 7   A6  	(!


 	AjB 7  	AjB 7  	B 7t 	A 6 	A ( "6 	 6| 	A ( 6p@@@@@A A"@AA"
E
 
AjA /  ;   
A (  6  AA"
E
 
AjAʅ /  ;   
AjA
 )  7   
A )  7  AA"
E
 
AjA -  :   
A (  6   	A j Aj( 6  	 ) 7 	Aj 	Aj 	B 7 	 
6AA"
E
 
AjA (  6   
A (  6  AA"
E
 
AjA /  ;   
A (  6   	A$j   B7  
6
 B 7  
6  B 74  
60  	)7 A j 	Aj) 7  A(j 	Aj) 7   ) 7< A j Aj( 6  	B 7
 	 
6 A j 	A j) 7  A j 	A(j) 7   	)7H 	 6` 	B 7d  Aj 	A j 	A j6  A 6 @ 	(" E
  	(
E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

A A 
AA 
AA 
AA 
AA 
AA 
 
E
  	(
E
  

 Aj( @ 
@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 	Aj$ 
~# Ak"$  Aj  ? Aj  (" ("	 (
 @@@@ ("E@B!


 Aj  Aj(  Aj Aj) "
7  A j 
7   )7h Aj) !
 Aj) !
 ) (@ 
B R

 A j" A j"
) 7   )h7A 
BQ
  Aj 
7  
 ) 7   )7h  
7xA A j" 
  Aj )h A j)    (AG
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7   )7 Aj Aj A j Aj) 7   Aj) 7X Aj) "B  )"B !
 B ! 
! A j A j) "7   )X"
7H  Aj B  
B 7     
B 7  A j 7   Aj 
7   B7 

 A0j A j) "7   )h"7(  Aj 7    7  A j 
7   Aj 
7   B7 

 Aj) ! Aj") ! A@k Aj) 7   70  7(  ) 78 Aj A(j&@@ (AG@ Aj(    	 (" Aj(  ( E
 

 Aj" Aj) 7   Aj) 7   Aj) 7 Aj( "A
G

   )(7  B 7   A j A@k) 7   Aj A8j) 7   Aj A0j) 7 

 Aj( !  Aj )7   A j Aj) 7   Aj ) 7   A
j 6    6  B7 
 (
@ 
 Aj$ 
~# Ak"$  A j ("
 ( "
 ( A

-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7351-7500
j( (
"	 @@@@@@ (`AG@ A j A j( 6   )d7 A j 
 (  ( 	  (`AF
 A0j A j( 6   )d7( A j ( "
 (" A(j    m )`BR
 A j Aj) "7  A j A j) "7  A@k A j) "7   )h"78  A j 7   Aj 7   Aj 7   Aj 7 

 A j Aj) "7  A j A j) "7  A j A j) "7   A j) "7<  A j 7   Aj 7   Aj 7   Aj 7   A6 

 A j Aj) "7  A j A j) "7  A j A j) "7   A j) "7<  A j 7   Aj 7   Aj 7   Aj 7   A6 

 Aj A(j> A j Aj 
 K A j) ! A j) ! )h!@@@ )`BR@ A8jB   P"	B   	  A!	 (8AF
  A j) 7  A@k) 7 A j Aj 
  AjJ (`"	A
F@  )7  Aj) 7A !	

 Aj A j( "
6  Aj A j) "7  Aj 7  Aj 
6   	6  )d7 A j) !

 Aj 7   7  7 Aj) !

 A@k) ! A j) ! (<!
 A j A j) 7  A j 7   7<  
68 A j A8j  A j) 7  A j) 7  )h7 Aj) !

A!	
@ ("
E
  (E
  

@@@@@@@@ 	E@ Aj Aj> A j Aj 
 K A j) ! A j) ! )h! )`BQ@ A j 7   7@  78 Aj) !A

 AjB   P"	B   	    Aj) 7  )7 A j Aj 
  AjJ (`"A
G@ Aj A j( "
6  Aj A j) "7  A j 7  A j 
6   68  )d7< A j) !A

  )78  Aj) 7@A 
@ ("
E
  (E
  


 A jB 7  A jB 7  B 7d A 6 A ( "6x  6l A ( 6`A A"E
AA"
E
 
AjA /  ;   
A (  6  A
A"	E
 	AjAх )  7   	A̅ )  7  AA"
E
 
A6  AA"
E
 
A;  AA"
E
 
A;   A@k" Aj( 6   ) 78 Aj A8j B 7  
6AA"
E
 
AjA /  ;   
A (  6   A j   B 7
  
6 B7  	6
 B 7  
6  B 74  
60  ) 7$ A,j Aj( 6  A j Aj( 6   ) 7< B 7<  
68 A j Aj) 7  A j Aj) 7   )7H  )87` A j ) 7  A j A j) 7   6 B 7  Aj A j Aj6  A 6 @ ((" E
  (,E
   
@ (" E
  (
E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E

 A,j( E

  


 )! )!  Aj Aj) 7   Aj 7   A j 7   Aj 7 

A A 
AA 
A
A 
AA 
AA 
AA 
AA 
 )H! )8!  Aj A@k) 7   Aj 7   A j 7   Aj 7 
  A6  ((" E
  (,E
   
 (" E
  (
E
   
 Aj( @ 

@ ( " E
  Aj( E
   
@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# Ak"$  Aj ( ( " ( A
j( (
 @@@@ (AG@ Aj Aj( 6   )7 Aj ( " (" Aj    m )BR
 A j Aj) "7  A j Aj) "7  A@k Aj) "
7   )"
78  A j 7   Aj 7   Aj 

-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7501-7650
7   Aj 
7   A6 

 A j Aj) "7  A j Aj) "7  A j Aj) "
7   Aj) "
7<  A j 7   Aj 7   Aj 
7   Aj 
7   A6 

 Aj Aj> Aj Aj  K Aj) !
 Aj) !
 )!
@@@ )BR@ A8jB  
 
P"	B  
 	  A!	 (8AF
  A j) 70  A@k) 7( Aj Aj   A(jJ ("	A
F@  )(7  A0j) 7A !	

 Aj Aj5 >   )7  	6 Aj) !
 Aj) !


 Aj 
7   
7  
7 Aj) !


 A@k) !
 A j) !
 (<!
 A j A j) 7  A j 
7   
7<  
68 Aj A8j  Aj) "
7  Aj) 7  )7 Aj) !


A!	
@ ("
E
  (
E
  

@@@@@@@@@ 	E@ Aj  A )BQ
 A0j" Aj"( 6   )7( Aj"
( !
 Aj"( ! Aj"( !	 Aj") !
 Aj"( !
 Aj") !
 Aj") ! Aj") !
 (!
 (! (! Aj ) Aj")    (AF@ Aj) ! Aj) ! (! Aj Aj) 7  Aj 7   7  6 Aj Aj 	E ErE@ 	
 
E 
ErE@ 

 E 
E 
BQrrE@ 

 Aj) "B  )"
B ! B ! Aj) !
 Aj) !
 
!

 
 
6  Aj 6   
6   
7   7   
7  Aj 6   	6   
7  Aj 
6   6   Aj) " 7   ( 6   )(7  Aj) "!7 Aj 
) 7  A j ) 7  A j ) 7  A j 
7  A j ) 7  A j 
7  Aj Aj) 7  A j 7    7@  !78  
7H Aj   A8jE ("A
F
 Aj5 ! Aj) !
 Aj) !
 )!@ (p"E
  A j( E
  
@ (|"E
  Aj( E
  
 )HBQ
 A j( "E
 (dE
 

 )!  Aj Aj) 7   Aj 7   A j 
7   Aj 
7   A6 
	
 A j( ! Aj( !	 )H!
 (d (|!@ (p"
E
  A j( E
  

 E 	ErE@ 
E E 
BQrrE@ 
 AjB 7  AjB 7  B 7 A 6 A ( "6  6 A ( 6A A"E
AA"E
 AjA /  ;   A (  6  A	A"	E
 	AjA -  :   	A )  7  AA"
E
 
A6  AA"
E
 
A;   A@k"
 Aj( 6   ) 78 Aj A8j B 7  
6AA"
E
 
AjA /  ;   
A (  6   A j   B 7
  
6 B7  	6
 B 7  6   ) 7$ A,j Aj( 6   )70 A8j Aj) 7  A@k Aj) 7  B 7<  
68 A j A j) 7  A j 
) 7   )87H  6( B 7,  Aj Aj A(j6  A 6 @ (" E
  (
E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  


 Aj) "B  )"

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7651-7800
B ! B ! Aj) !
 Aj) !
 
!
  A6   A j 
7   Aj 
7   Aj  B 7   Aj B  B 7 

A A 
AA 
A	A 
AA 
AA 
AA 
 (" E
  (
E
   
 Aj( @ 
@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 

~# Ak"	$  	Aj ("
 (  ( A
j( (
"
 @@@@@@@@ 	(AG@ 	Aj 	Aj( 6  	 	)7 	Aj 
 (  ( 
 @ 	(AG@ 	A(j 	Aj( 6  	 	)7  	Aj ( "
 (" 	A j    m 	)BR
 	A j 	Aj) "7  	A j 	Aj) "7  	A j 	Aj) "7  	 	)"7`  A j 7   Aj 7   Aj 7   Aj 7 

 	A j 	Aj) "7  	A j 	Aj) "7  	A j 	Aj) "7  	 	Aj) "7d  A j 7   Aj 7   Aj 7   Aj 7   A6  	(" E
 	(E
  

 	Aj 	A j> 	Aj 	Aj 
 K 	Aj) ! 	Aj) ! 	)! 	)BQ
 	A jB   P"
B   
  A!
 	(`AF
 	 	A j) 7 	 	A j) 7 	Aj 	Aj 
  	AjJ 	("
A
F@ 	 	)7H 	 	Aj) 7PA !


 	A@k 	Aj( "
6  	A8j 	Aj) "7  	A j 7  	A j 
6  	 
6H 	 	)7L 	Aj) !

 	A j 	Aj) "7  	A j 	Aj) "7  	A j 	Aj) "7  	 	Aj) "7d  A j 7   Aj 7   Aj 7   Aj 7   A6 

 	A j 7  	 7P 	 7H 	Aj) !

 	A j) ! 	A j) ! 	(d!
 	A j 	A j) 7  	A j 7  	 7d 	 
6` 	Aj 	A j 	 	Aj) 7X 	 	Aj) 7P 	 	)7H 	Aj) !

A!

@ 	("
E
  	(E
  

@@@@@@@ 
E@ 	Aj 	Aj> 	Aj 	Aj 
 K 	Aj) ! 	Aj) ! 	)! 	)BQ@ 	A j 7  	 7h 	 7` 	Aj) !A

 	B   P"
B   
   	 	Aj) 7P 	 	) 7H 	Aj 	Aj 
  	A jJ 	("A
G@ 	A@k 	Aj( "
6  	A8j 	Aj) "7  	A j 7  	A j 
6  	 6` 	 	)7d 	Aj) !A

 	 	)H7` 	 	A j) 7hA 
!@ 	("
E
  	(E
  

@ E@A A"E
AA"
E
 
AjA /  ;   
A (  6  A	A"
E
 
AjA -  :   
Aم )  7  AA"
E
 
A6   	A<j  	B 74 	 
60AA"
E
 
A;   	A j  	B 7L 	 
6HAA"
E
 
A;   	A j  	B 7d 	 
6`AA"
E
	 
AjA /  ;   
A (  6   	Aj   B7  
6
 B 7  
6   	)07 A j 	A8j) 7  A(j 	A@k) 7   	)H70 A8j 	A j") 7  A@k 	A j) 7  	B 7 	 
6 A j 	A j"
) 7  A j 	A j") 7   	)`7H  	)7` A j 	Aj"
) 7  A j 	Aj"
) 7  
 Aj( 6  	 ) 7 	A j 	Aj (! (! ( !
 	Aj" ( 6  	Aj Aj( 6  	 7 	 7 	 	)H7 	 ) 7 	A j 	Aj 	(`AG
 	Aj) ! 	A j( ! 	A j( ! 	A j( !
 
( !
 	A j( ! ( !
 
E ErE@ 

  A6   A j 7   A
j 6   Aj 6   Aj 
6   Aj 
6   A
j 6   Aj 

-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7801-7950
6 @ ( " E
  Aj( E
   
@ (
" E
  Aj( E
   
@ (" E
  A
j( E
   
@ ($" E
  A(j( E
   
@ (0" E
  A4j( E
   
@ (<" E
  A@k( E
   
@ (H" E
  A j( E
   
@ (T" E
  A j( E
   
@ (`" E
  A j( E
   
@ (l" E
  A j( E
   
 @ 	( " E
  	($E
   
@ 	(" E
  	(E
   
 ( " E

 Aj( E

  


 	)p! 	)`!  Aj 	A j) 7   Aj 7   A j 7   Aj 7 
	
 	A j( ! 	)d! 	AjB 7  A ( "6  
B 7  	A 6 	 6 	B 7 	A ( "6 	AjA d 
 
( "Aj6  
 
) 7  	A j ) 7  	Aj 	Aj"
) 7  	Aj 	Aj") 7  	( A lj"A: ` B 7P A6 B 7  A0jB 7  A,j 6  A(j 6  A j 7  A
j 6  Aj 6  Aj 
6  AjA 6   
) 7  	 	)7` 	B 7L 	 6H 	Aj 	A j 	A j6  A,j ) 7   A$j 
) 7   A
j ) 7   Aj 
) 7   A
j 
) 7    	)7  A 6 @ 	( " E
  	($E
   
@ 	(" E
  	(E
   
@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E

 A,j( E

  


 	)X! 	)H!  Aj 	A j) 7   Aj 7   A j 7   Aj 7 

A A 
AA 
A	A 
AA 
AA 
AA 
AA 
  A6 @ 	( " E
  	($E
   
 	(" E
  	(E
   
@ ( " E
  Aj( E
   
@ ( " E
  Aj( E
   
@ ( " E
  Aj( E
   
 ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 	Aj$ 
~# Ak"$  A j (" ( " ( A
j( (
" @@@@@@@ (hAG@ Aj A j( 6   )l7 A j  ( " (   (hAF
 A(j A j( 6   )l7  ( ! (! A j Aj A j? A0j  (X" (` (
  (0"
B!

 A j Aj) "7  A j Aj) "	7  A<j A j) "
7   A j) "
74  A j 7   Aj 	7   Aj 
7    
7  B7  ( !

 A j  A8j(  A j) !	 Aj) !
 Aj) ! )p!
 )h!
 (4E
  

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:7951-8100
 (\@ 
 
B R
 BQ@ B !
 )!
B !	 ) !
   
7  B 7   Aj 	7   A j 
7   Aj 7 @ ( " E
  ($E
   
@ (" E
  (E
   
 Aj( @ 
 Aj( E
 

 A j Aj) "7  A j Aj) "	7  A<j A j) "
7   A j) "
74  A j 7   Aj 	7   Aj 
7    
7  B7 

   
7  B7   Aj 	7   A j 
7   Aj 7  ( " E
  ($E
   
 (" E
  (E
   
@ E
  Aj( E
  
 Aj( E
  
 Aj$ 
# Ak"$ @ ( AG@  A6 

 (! Aj" Aj"(6  ( 6  (
! (!@@ AG@ E
A !@@  j-  A>F
  Aj"G
 
 

 Aj
"AI
A  A
  jA~j/  A G
 A(M@  A6 

  A6 

 A(K
@ AI
  )  B
R
   A6 

  A6 

  A6 

  A6 
 Aj$ 
~# Ak"$    Aj) "
7  ) "
7@@@ @ At! A
j( (
! (! ( !	 A jAr! (!@ A j  Aj(  Aj(    (XAF
 A(j Aj( 6   ) 7  Aj A j> A j Aj 	  J@ ("E
  (E
  
 (X"A
G
 Aj )  Aj) @ ( "E
  ($E
  
 A j! A`j"
 
 )!
 Aj) !

   
7  B 7   Aj 
7 

 A j A j) "
7  A j A j) "
7  A<j A j) "
7   A j) "
74  A j 
7   Aj 
7   Aj 
7    
7  B7 

 A j A j( "6  A@k A j) "
7  A8j A j) "
7   )\"
70   6   
7
  Aj 
7   A
j 
7   A$j 6   B7  ( " E
  ($E
   
 Aj$ 
~# Ak"$  Aj@@@ )  Aj)  PE@ A j ( ( "
 ( A
j( (
  (`AG
 A j Aj) "7  A j A j) "7  A<j A j) "
7   A j) "
74  A j 7   Aj 7   Aj 
7   Aj 
7   A6 

  A6   AjA6  ( !


 A(j A j( 6   )d7  (! ( ! Aj > A j Aj  K A j) !
 A j) !
 )h!@@@ )`BR@ A0jB  
 P"	B  
 	  A!	 (0AF
  A@k) 7  A8j) 7 A j Aj   AjJ (`"	A
F@  )7  Aj) 7A !	

 Aj A j( "
6  Aj A j) "
7  Aj 
7  Aj 
6   	6  )d7 A j) !


 Aj 
7   
7  7 Aj) !


 A8j) !
 A j) !
 (4!
 A<j A@k) 7  A j 
7   
74  

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8101-8250
60 A j A0j  A j) 7  A j) 7  )h7 Aj) !


A!	
@ ("
E
  (E
  

@~ 	E@ Aj A j> A j Aj  K A j) !
 A j) !
 )h! )`BQ@ A@k 
7   
78  70 Aj) !
A

 B  
 P"	B  
 	    Aj) 7  ) 7 A j Aj   AjJ (`"A
G@ Aj A j( "6  Aj A j) "
7  A<j 
7  A j 6   60  )d74 A j) !
A

  )70  Aj) 78A 
@ ("E
  (E
  
E
 A8j) ! )@! )0

 Aj) ! )! )
!
  A6   Aj 7   Aj 
7   A j 
7   Aj 7  ( " E
 ($E
  

 A jB 7  A jB 7  B 7d A 6 A ( "6x  6l A ( 6`@@@@AA"@ AjA /  ;   A (  6  AA"
E
 
Bٲ 7   A jA A7 A8j A j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  (l (t"	Alj" 
6
 B 7  6  AjB7   	Aj6t A@k" A j) 7   )`70AA"E
 A6   A j"
 Aj( 6   ) 7` Aj A j B 7  6 A j( " ( F@ A<j A7 (D!
 (< Alj" )7  Aj Aj) 7  Aj Aj) 7  
 A8j) 7  A j A j) 7  Aj A j) 7  Aj A j) 7   Aj6D A j"
 A@k) 7   )07`AA"E
 A;   Aj"	 Aj( 6   ) 7 A j( " 
( F@ A j A7 (t!
 (l Alj"B 7  6   )7
 Aj 	( 6  A8j A j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7   Aj6t A@k" A j) 7   )`70AA"E
 AjA /  ;   A (  6   A j   B 7d  6` A j( " ( F@ A<j A7 (D!
 (< Alj" )`7  Aj A j) 7  Aj A j) 7   Aj6D  A,j A j) 7   A$j A j) 7   A
j A j) 7   Aj A@k) 7   A
j A8j) 7    )07  A 6 @ ( " E
  ($E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

AA 
AA 
AA 
AA 
AA 
@ 
E
  Aj( E
  

@ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# Ak"$  Aj@@@@@@ )  Aj)  PE@ (! ( ! Aj > Aj Aj  K Aj) ! Aj) ! )!
 )BQ
 A8jB   
P"B     A! (8AF
  A j) 70  A@k) 7( Aj Aj   A(jJ ("A
F@  )(7  A0j) 7A !

 Aj Aj5 >   )7  6 Aj) ! Aj) !

  AjA6 

 Aj 7   7  
7 Aj) !

 A@k) ! A j) ! (<!	 A j A j) 7  A j 7   7<  	68 Aj A8j  Aj) "7  Aj) 7  )7 Aj) !

A!
@ ("	E
  (
E
  	
 @ )!  Aj Aj) 7   Aj 7   A j 7   Aj 7 

 Aj  A@@@@@ )BR@ A0j" Aj"( 6   )7( Aj"
( !
 Aj"
( ! Aj"( ! Aj") ! Aj"( !	 Aj") !
 Aj") !
 Aj") ! (!
 (! (! Aj ) Aj")    (AF@ Aj) ! Aj) ! (! Aj Aj) 7  Aj 7   7  6 Aj Aj E ErE@ 
 
E 
ErE@ 

 E 	E BQrrE@ 	
 Aj) "B  )"
B ! B ! Aj) ! Aj) ! 
!

 
 
6  Aj 6   	6   
7   
7   7  Aj 6   6   7  Aj 
6  

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8251-8400
 6   Aj) "
7   ( 6   )(7  Aj) "7 Aj 
) 7  A j 
) 7  A j ) 7  A j 7  A j ) 7  A j 
7  Aj Aj) 7  A j 
7   
7@  78  7H Aj   A8jE ("A
G@ Aj5 ! Aj) ! Aj) ! )!@ (p"E
  A j( E
  
@ (|"E
  Aj( E
  
 )HBQ
 A j( "E
 (dE
 

 A j( ! Aj( ! )H! (d (|!@ (p"
E
  A j( E
  

 E ErE@ 
E E BQrrE@ 
 AjB 7  AjB 7  B 7 A 6 A ( "6  6 A ( 6AA"E
 AjA /  ;   A (  6  AA"E
 A6   AjA A7 A@k Aj"	) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7  ( ("
Alj" 6
 B 7  6  AjB 7   
Aj6 A j" Aj) 7   )78AA"E
 A6   	 Aj( 6   ) 7 Aj Aj B 7  6 A j( " ( F@ A j A7 (L!
 (D Alj" )7  Aj Aj) 7  Aj Aj) 7  Aj A@k) 7  Aj A j) 7  Aj A j) 7  Aj A j) 7   Aj6L Aj" A j) 7   )87AA"E
 AjA /  ;   A (  6   A j   B 7<  68 Aj( " ( F@ Aj A7 (!
 ( Alj" )87  Aj A@k) 7  Aj A j) 7   Aj6  A,j Aj) 7   A$j Aj) 7   A
j Aj) 7   Aj Aj) 7   A
j Aj) 7    )7  A 6  (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj) "B  )"
B ! B ! Aj) ! Aj) ! 
!
  A j 7   Aj 7   Aj  B 7   Aj B  B 7 

AA 
AA 
AA 
AA 
  A6 @ ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# Ak"$  Aj@@@@@@@@ )  Aj)  PE@ Aj ( "	 ("
A Aj! )BQ
 A j A  A j A jA  )0BQ
 A j( " (G
 A j(  ( "
 
 A j   )0"
BQ 
BRrE@ )  A8j) V A(j) "
 A@k) "
V 
 
Q

 Aj 	 
 A jE ("A
G
 Aj ( (  ( A
j( (
  (AG
 Aj Aj) "7  Aj Aj) "7  Aj Aj) "
7   Aj) "
7|  A j 7   Aj 7   Aj 
7   Aj 
7   A6 

  A6   AjA6 

 Aj Aj) "7  Aj Aj) "7  Aj Aj) "
7   ) "
7x  A j 7   Aj 7   Aj 
7   Aj 
7   A6 

  A6   AjA
6 

  A6   AjA6 

 Aj Aj( "6  Aj Aj) "7  Aj Aj) "7   )"
7x  A$j 6   A
j 7   Aj 7   A
j 
7   Aj 6   A6 

 Aj Aj( 6   )7 Aj Aj> Aj Aj 	 
K Aj) !
 Aj) !
 )! )BQ@ Aj 
7   
7  7x Aj) !
A

 B  
 P"B  
     Aj) 7  ) 7 Aj Aj 	 
 AjJ ("A
G@ Aj Aj( 6  Aj Aj) 7   )7|  6x Aj) !
A

  )7x  Aj) 7A 
!@ ("E
  (E
  
@@@@ E@ AjB 7  AjB 7  B 7 A 6 A ( "6  6 A ( 6AA"E
 AjA /  ;   A (  6  AA"	E
 	Aҹ6   AjA A7 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  ( ("
Alj" 	6
 B 7  6  AjB 7   
Aj6 Aj"	 Aj) 7   )7xAA"E

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8401-8550
 A;   Aj Aj( 6   ) 7 Aj( " 	( F@ Aj A7 (!
 ( Alj"B 7  6   )7
 Aj Aj( 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj6 Aj" Aj) 7   )x7AA"E
 AjA /  ;   A (  6   Aj   B 7|  6x Aj( " ( F@ Aj A7 (!
 ( Alj" )x7  Aj Aj) 7  Aj Aj) 7   Aj6  A,j Aj) 7   A$j Aj) 7   A
j Aj) 7   Aj Aj) 7   A
j Aj) 7    )7  A 6 @ (" E
  (E
   
@ (X" E
  A j( E
   
@ (d" E
  A j( E
   
@ )0BQ
  (H" E
  (LE
   
 Aj( @ 

 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 )! )x!  Aj Aj) 7   Aj 7   A j 
7   Aj 7   A6  (" E
 (E
  

AA 
AA 
AA 
AA 
@ (X" E
  A j( E
   
@ (d" E
  A j( E
   
 )0BQ
  A j( " E
  (LE
   
@ ( " E
  Aj( E
   
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 

~# Ak"$  Aj@@@@@@@@@@@@@ )  A j)  PE@ Aj ( (  ( A
j( (
  (AF
 A0j Aj( 6   )7( (!	 ( ! Aj > Aj Aj  	K Aj) ! Aj) ! )! )BQ
 A jB   P"
B   
  A!
 (hAF
  A j) 7  A j) 7 Aj Aj  	 AjJ ("
A
F@  )78  Aj) 7@A !


 Aj Aj( "
6  Aj Aj) "7  A j 7  A j 
6   
68  )7< Aj) !

  A6   AjA6 

 A j 7   7@  78 Aj) !

 A j) ! Aj) ! (l!
 A j A j) 7  A j 7   7l  
6h Aj A j  Aj) 7H  Aj) 7@  )78 Aj) !

 Aj Aj) "7  A j Aj) "7  A j Aj) "7   Aj) "7l  A j 7   Aj 7   Aj 7   Aj 7   A6 

A!

@ ("
E
  (E
  

@~ 
E@ Aj A(j> Aj Aj  	K Aj) ! Aj) ! )! )BQ@ A j 7   7p  7h Aj) !A

 AjB   P"
B   
    Aj) 7@  )78 Aj Aj  	 A8jJ ("A
G@ Aj Aj( "	6  Aj Aj) "7  A j 7  A j 	6   6h  )7l Aj) !A

  )87h  A@k) 7pA 
@ ("	E
  (E
  	
E
 A j) ! )x! )h

 A@k) ! )H! )8
!  A6   Aj 7   Aj 7   A j 7   Aj 7  ((" E
 (,E
  

 AjB 7  AjB 7  B 7 A 6 A ( "6  6 A ( "
6AA"E
 AjA /  ;   A (  6  AA"
E
 
Aʹ6   AjA A7 A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  ( ("
Alj"	 
6
 	B 7 	 6  	AjB 7   
Aj6 A j"	 Aj) 7   )7hAA"E
 A6   Aj  B 7  6 A j( " 	( F@ A j A7 (|!
 (t Alj"	 )7  	Aj Aj) 7  	Aj Aj) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj6| Aj"	 A j) 7   )h7AA"E
 A;   Aj  B 7  6 Aj( " 	( F@ Aj A7 (!
 ( Alj"	 )7  	Aj Aj) 7  	Aj Aj) 7  A j Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj6 A j"	 Aj) 7   )7hAA"E
 AjA /  ;   A (  6   Aj   B 7  6 A j( " 	( F@ A j A7 (|!
 (t Alj"	 )7  	Aj Aj"
) 7  	Aj Aj) 7  A@k A j"
) 7  A j Aj"

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8551-8700
) 7  A j Aj") 7  A j Aj) 7   Aj6| A j A j") 7   )h78 
 Aj( 6   ) 7 Aj Aj (!
 (!	 ( ! Aj Aj( 6  Aj Aj( 6   7  7  )7  ) 7 A j Aj (hAF@ ) ! Aj( ! 
( !
 A j( !
 ( ! A j( !
 
( !
 E 	ErE@ 
  A6   A j 7   A
j 6   Aj 
6   Aj 
6   Aj 6   A
j 
6   Aj 
6  A8jW ((" E
 (,E
  

 A j( !
 )l! (@" (<F@ A8j d (@!
 (8 A lj"A6 B 7  A0jB 7  A,j 
6  A(j 
6  A j 7  A
j 
6  Aj 	6  Aj 6  AjA 6  A8j )7  A@k Aj) 7  A j Aj) 7  A: ` B 7P A@k" Aj6   ( h6 a A j A j(  6    A,j A j) 7   A$j A j) 7   A
j A j) 7   Aj A j) 7   A
j ) 7    )87  A 6 @ ((" E
  (,E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

@ ( " E
  Aj( E
   
@ ( " E
  Aj( E
   
 ( " E
  Aj( E
   
 (
!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (
! 
 Aj( "E  Er AtErE@  
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
AA 
AA 
AA 
AA 
AA 

~# Ak"$  A j ( "
 ("H@@@@@@@@ (XAG@ Aj" A j) 7  Aj"	 Aj) 7   A j) 7  Aj) 7 A j) ! A j( "
AF
 A j( !
 (\! A j )7  A j 	) 7  A(j )7  A<j 7  A0j ) 7   
6$  6   
68 (HE
 A j( " (G
 (H ( " 
A!	A!
 ( "


 Aj A j) "7   A j) "7 A j( ! A j( ! A j) !  Aj 7   A
j 7   A j 7   A
j 6   Aj 6   A6 

  A6   AjA
6 A

  A6   AjA
6 A
!A!	A!


 Aj  Aj"
( X (
@ A j 
( 6   ) 7X@ ( "E
  ($E
  
 A(j A j( 6   )X7 A !


 (@ ( "
E
  ($E
  

A !
 A 6 E
 

  A6   A j 7   A
jA6   AjA
6 
A!A ! A 

@ ( "E
  Aj  Aj"	( X (@ A j 	( 6   ) 7X A,j!@ (,"	E
  A0j( E
  	
  )X7  Aj A j( 6 A !	

 (@ (,"	E
  A0j( E
  	
A !	 A 6,E
  
@@@@ ( "E@A!

 Aj  Aj( "
X (!
 (
@ A j (  
 A
j( (
  (XAF
 A j! Aj A j( "
6  Aj" 
6   )\"7  7@ (H"
E
  A j( E

-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8701-8850
  

  )7  Aj ( 6 A ! 
E
 

@ (H"E
  A j( E
  
A ! A 6H 
E
  
 ( 
 (,
 (H
 (8AF
 
A A ( 

 Aj A j) "7  Aj A j) "7  Aj A j) "7   A j) "7  A j 7   Aj 7   Aj 7   Aj 7   A6 A ! 
E
 

 A j A j) (XAG@ A j(  
A A (\" A j(  ( E
 

 Aj" A j) 7  Aj"
 A j) 7   A j) 7 A j( "
A
F
  A j( ! Aj 
) "7  Aj ) "7   )"7  A j 7   Aj 7   Aj 7   A
j 6   Aj 
6   A6 

 A jB 7  A jB 7  B 7\ A 6| A ( "6p  6d A ( 6X@AA"@ AjA /  ;   A (  6  AA"E
 AjA )  7   A )  7   A jA A7 (d (l"Alj" 6
 B 7  6  AjB7   A,j Aj) 7   A$j A j) 7   A
j A j) 7   Aj6l  Aj A j) 7   A
j A j) 7    )X7  A 6 @ ( " E
  ($E
   
@ (," E
  A0j( E
   
@ (8E
  (<" E
  A@k( E
   
@ (H" E
  A j( E
   
 Aj( @ 
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

AA 
AA 
@ ( " E
  ($E
   
@ (," E
  A0j( E
   
@ (8E
  (<" E
  A@k( E
   
@ (H" E
  A j( E
   
 
E!  	E
!@ E
  ( "E
  Aj( E
  
@  ( "Er
  Aj( E
  
@   ( "Er
  Aj( E
  
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# Ak"$  A@k ( " ("H@@@@@@@@@@ (@AG@ Aj" A j) 7  Aj"	 A j) 7   A j) 7x  A j) 7 A j) !
 A j( "AG@ A j( !
 (D!
 A,j )7  A4j 	) 7  Aj )x7  A$j 
7  Aj ) 7   
6
  
6  6  A@k r (@"AG
 (0E
 A8j( " (G
 (0 ( "	 
 A@k   C (@"A
G
 ( AF"E
A 

  A6   A j 
7   A
jA6   AjA
6 

 Aj A j) "
7   A j) "
7x A j( ! A j( ! A j) !  Aj 
7   A
j 
7   A j 7   A
j 6   Aj 6   A6 
 ( E


A!  A6   AjA
6 

A!  A6   AjA
6 

-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:8851-9000

 Aj) !
 (
!@ ( E
  ($"
E
  A(j( E
  

 A(j 
7   6$ A6  A@k Aj)@@@@@@ (@AG@ A j(  A A (D" A j(  ( E
 

 Aj" A j) 7  Aj" A j) 7   A j) 7x A j( "A
G

 A jB 7  A jB 7  B 7D A 6d A ( "6X  6L A ( 6@AA"E
 AjA /  ;   A (  6  A
A"E
 AjA (  6   A )  7   A jA A7 (L (T"Alj" 6
 B 7  6  AjB7   A,j A j) 7   A$j A j) 7   A
j A j) 7   Aj6T  Aj A j) 7   A
j A j) 7    )@7  A 6 @ (" E
  (
E
   
@ (" E
  Aj( E
   
@ ( E
  ($" E
  ((E
   
@ (0" E
  A4j( E
   
 ( 


 A j( !	 Aj ) "
7  Aj ) "
7   )x"7  A j 
7   Aj 
7   Aj 7   A
j 	6   Aj 6   A6 

 Aj( " E A
j( Er! Aj( E@ 
  

 
  

AA 
A
A 
 Aj( @ 	
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj A j( "6  Aj A j) "
7  Aj A j) "
7   )D"7x  A$j 6   A
j 
7   Aj 
7   A
j 7   Aj 6 A!  A6 
@ (" E
  (
E
   
@ (" E
  Aj( E
   
@ ( E
  ($" E
  A(j( E
   
@ (0" E
  A4j( E
   
 ( 
 E

 Aj( " E
 Aj( E
  

 Aj( " E A
j( Er! Aj( E@ 
  

 
   
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# A k"$  A8j ( ( " ( A
j( (
 @@@ (8AG@ Aj A j( 6   )<7  (! ( ! Aj > A8j Aj  K@ ("E
  (E
  
 A j) ! A j) ! )@! )8BQ
  B 7   AjB   P"7   B   7@ ( " E
  (E
   
 Aj( E
 

 A,j A j) "7  A$j A j) "7  A
j A j) "7   A@k) "	7  A j 7   Aj 7   Aj 7    	7  B7 

 A j) !	  Aj 7   Aj 7   A j 	7    7  B7  ( " E
  (E
   
 Aj( E
  
 A j$ 
~# Ak"$  Aj (  (A@ )BR@ Aj" A j( 6   A@k) 7  A8j) ! A0j) ! A j( ! A j( ! (T! (\! A(j) "	BR@ Aj ( 6   ) 7 A j Aj
   	7  B 7   Aj 7   Aj 7   A j )p7   A(j A j( 6  E ErE@ 
 E Er
 


-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9001-9150
 A(j) ! A0j) ! )!	  Aj A j) 7    	7  A j 7   Aj 7   B7 
 Aj$ 
	~# A k"$  A8j ( A A ((
 @@ @@ (8"E@AA"E
 AjA )  7   A )  7   A jB7  A
j 6  AjA6 

 A j  A@k(  A j A j4 A j( ! A j( ! (\! A j( " (XAF
 A j( ! A j A j (X"AG@ A j( ! A j( !	 (\!
 E@ E Er
 

 E Er! E@ 
 

 
 

 A$j 6  A j 6  A
j 6  Aj 6   6A 

AA 
 ! 
! ! 	
! A j 6  A j 6   6\  6X AjA A A j
A
"6 (<  ( 

  A j( ! A
j( ! Aj( !@@@ ("AG@AA"
AA 
 A$j( ! AG@A
A"E
   6  A 6  AjA )  7   A )  7    Aj 6   Aj 6   Aj 6   AjB7 

A	A"E
   6  A 6  AjA -  :   A )  7    Aj 6   Aj 6   Aj 6   AjB7 

 Aޝ6    A6   AjB 7   A
j 6   AjA6  E@ E Er
 

 E Er!  E@  
 

  
 

A
A 
A	A 
 Aj A0j) "
7   A(j) "
7  Aj) !
 A j) !  A j 
7   Aj 
7   Aj 7   Aj 
7   A6 
 A j$ 

~# Ak"$  Aj ( ( " ( A
j( (
 @@@@@ (AG@ Aj Aj( 6   )7A ( "E
   )7$  6  AjAr A j A j Aj( 6   )7HA
!	  Aj6 Aj Aj (! (! A	6$ A 6  A j A j  A A  AjA 6  A6 B7| ("E AtErE@ 
 (! ( ! (p!
 (x! A,j A j( 6   	6   )H7$ A6 Aj   
  A j Aj (
!	 (!
A A"E
A ! A 6
 B7  6  6
 A6  
6   	6 A
6   A
 "A
 A
I6 A 6  6  A j6 Aj Aj )BQ@ (" ("(  A ( !A  (E
 ( A 

@ (( A
G
  (E
  Aj ( ((  
A0A"E
  )7  A(j Aj") 7  A j Aj"	) 7  Aj Aj"
) 7  Aj Aj") 7  Aj Aj) 7  B7  6 Aj Aj) 7   )7 Aj Aj )BQ@A!

A!A0!A!@  AjF@@ (( A
G
  (E
  Aj ( ((  
 Aj b (!
  j" )7  A(j ) 7  A j 	) 7  Aj 
) 7  Aj ) 7  Aj Aj) 7   6 Aj Aj ) BQ
 A0j! Aj! (!
 
 
 A<j Aj) "
7  A4j Aj) "
7  A,j Aj) "7   Aj) "7$  A j 
7   Aj 
7   Aj 7   Aj 7   A6  ( " E
 Aj( E
  

A A 
A0A 
 (" ("(   (@ ( 
 (
!A !@ ( "A
F@ ! !

 A j A0j) 7  A j A8j) 7   A(j) 7X ($! @ A0l! A$j!@@ A|j( "	E
  ( E
  	
 A0j! APj"
 

A! E A0lEr
  
 (t@ 

 E@   6  A 6   A
j 6   Aj 6 @ (" E
  (E
   
 ( " E
 Aj( E
  

  A6   Aj )X7   A
j 6   Aj 6   A j A j) 7   Aj A j) 7 @ (" E
  (E
   
 ( !
 E
  Aj( E
  
 Aj$ 
	~# A k"$ A! ( "@  )7T  6P A jAr A j Aj A,j( 6   )$7A!
 (! ( ! A6T A 6P A j A jA A A A  A4jA 6  B7, ( ! ((! A j Aj( 6   6@  )7D A6P Aj     A@k A j (
! (!  @@AA"@ A
 "A
 A
I!  6   6 ($@ 
B !
@@ E
  A j (  ((
   ( "E

-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9151-9300
 @ A,j( "E
  A0j( E
  
 ($! A j  A(j( " ( AG
 )$!

 (  ((  A ! ("(@ ( ( 
A ( ! A 

 Aj"@ A j (  ((  
A
A"E
   B 7  6  B7T  6P@ E@A!

 Aj!
 A~j!
A !A!	@ A j (  ((
  @ ( "@@ (,"E
  (0E
  
 ($! A j  ((" ( AG
 )$!
 Aj!

 Aj!

  B !
 Aj" (TF@  
G@ A j (  ((  
 A j c (P!
  	j" 
7  A|j 6   Aj6X 	A
j!	 
 "G
 

 (  ((   ("(@ ( ( 
  (P! (T
! 
B "	AqAF
 @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lErE@ 
 A3j 
B("Av:   A1j ;   A0j 	:    
>,  6    B 7$  Aj A jA

AA 
A
A 
   6  Aj  B 7 A 
6  A j$ 
@@@@ A0j( A}jA/M@ A<j( "A}jA	M@ (4!@ E
 Aj! -  ! Aj"! AjAqAI
  ! A-F
  AjAqAM
 

A8A"E
   6  A6  A0jA )  7   A(jA )  7   A jA )  7   AjA )  7   AjA )  7   AjA )  7   A )  7    AjB7 
A5A"E
   6  A6  A-jA )  7   A(jA )  7   A jA )  7   AjAݖ )  7   AjAՖ )  7   AjA͖ )  7   AŖ )  7    AjB7 
 - AM@  A
6 
AA"E
   6  A6  AjAɗ (  6   AjA )  7   AjA )  7   A )  7    AjB7 
A5A 
A8A 
AA 
~# Ak"$      . A8j , (8AG@ A j A j( " 6   )<"7` A@k  6   78 A8j@ ( E@ ArW

 ("E
  Aj( E
  
 Aj$ 
 A j A j) 7  A j A j) 7  A j A j) 7   A@k) 7`A A+ A jA A  
~# Ak"$ @@@@@@@@@@@@ ( Ak
	
 
 Aj) ! Aj) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7   A j A8j A j Aj  t


 Aj) ! Aj) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p   A j A8j A j  u
	
 A(j) ! A j) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7 Aj Aj( 6   Aj) 7   A j A8j A j Aj   Ajw

 Aj) ! Aj) ! A(j) ! A j) !	 A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7   A j A8j A j Aj   	 k

 Aj) ! Aj) ! A(j) ! A j) !	 A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7   A j A8j A j Aj   	 l

 A(j) ! A j) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7 Aj Aj( 6   Aj) 7   A j A8j A j Aj Aj  n

 A0j) ! A(j) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7  Aj Aj( 6   Aj) 7 Aj A$j( 6   A
j) 7   A j A8j A j  Aj   Ajp

 Aj) ! Aj) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7   A j A8j A j Aj  o

 Aj) ! Aj) ! A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7   A j A8j A j Aj  v

 A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj A
j( 6   )7  Aj Aj( 6   Aj) 7 Aj A$j( 6   A
j) 7   A j A8j A j  Aj Ajx

 A0j Aj) 7  A(j Aj) 7   ) 7  A j A0j) 7  A j A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A@k Aj) 7   ) 78 Aj Aj) 7  A j Aj) 7   ) 7p Aj Aj( 6  Aj A
j) 7   )7   A j A8j A j Ajy
 Aj$ 
~# Ak"$  Aj   Aj  A(j  Aj (" ("@@@@@@@@@@@ )BR@ A j Aj") 7  A@k Aj) 7   )7H  Aj") 78 Aj"( !  Aj( ! Aj( !
 Aj( ! Aj) !
 Aj (" (  (AF
 ( ! Aj( ! ( ! Aj( ! (!
 (! Aj ((" (0  Aj -  AqE
 - "A"F
 A F
 A
6

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7 A6 Aj

 Aj Aj9@@@@@@@@@@@ - AG@ - Ak
	


 Aj Aj) 7  Aj Aj( 6   / ;   - :   - : 


 A6


 A6


 A6

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9301-9450


 A6
	
 A6

 A6

 A6

 A6

 A6

 A6

 A6

 Aj Aj Aj8 (AF
 Aj Aj") "
7  Aj Aj") "
7  Aj Aj") "7  Aj" Aj") 7  Aj" Aj") 7  Aj"	 Aj") 7  Aj"
 7  Aj"
 
7  Aj" 
7   Aj") 7 Aj Aj ("AF
 Aj Aj( 6   )7 Aj:

 A6
 Aj Aj( 6   Aj) 7 (!

 Aj ) 7  Aj ) 7  Aj ) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7 A6 Aj

 Aj ) "
7  Aj 	) "
7  Aj 
) "7  Aj" ) 7  Aj" 
7  Aj" 
7  Aj"	 7  Aj"
 
) 7  Aj"
 ) 7   )7 Aj" 
) 7  Aj"
 
) 7  A j"
 	) 7  A j"	 ) 7  A j" ) 7  A j" ) 7   )7X AjAȀ 6  AjA 6  AjA 6   A j) 7  Aj" 6   )87   A@k) 7  Aj 6  Aj 6  Aj 6  Aj 6  Aj 
6   
7  Aj 6  Aj Aj6  Aj Aj6   )H7   6  6  
6  Aj6 Aj ) 7  Aj 
) 7  Aj 
) 7  Aj 	) 7  Aj ) 7  Aj ) 7   )X7 Aj  Aj Aj Aj  Aj) 7   Aj) 7   Aj) 7   Aj) 7   Aj) 7   )7@ (AG@ Aj AjAr" A(j) 7  Aj  A j) 7  Aj  Aj) 7  Aj  Aj) 7  Aj  Aj) 7  A 6   ) 7

 Aj Aj) 7  Aj ) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj3
 Aj Aj( 6   )7 A6 (" A
GA   AtjA	I
  Aj
 (,@ 
 (
@ 
 (
E
 

 Aj Aj"( 6   6  )7 AjAՏ A Aj
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj ( 6   )7 A6 Aj E 
ErE@ 
 @ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 E AtEr
  
  E ErE@  
 
E Er
  

@ ((" E
  (,E
   
@ (" E
  (
E
   
 (
E
  
 Aj Aj, (AG@ Aj Aj( " 6   )"
7 Aj  6   
7 Aj@ (E@ AjArW

 ("E
  Aj( E
  
 Aj$ 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj) 7A A+ AjA A  
A A7 AjA A  
<~# Ak"$ @@@@@@@  @@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ ( Ak 	

 Aj (  (A )BQ
 Aj) !
 Aj-  ! Aj) !
 Aj) ! Aj) ! )!@ Aj) BQ
  Aj( "E
  (E
  
 A j 
7  A@k 7   7(  : P  78  
70 A j Aj A j (AF
  (6  Aj-  :  Aj AjA A A8j (AF
 Aj AjA A A j (AF
 Aj Aj F (AF
 Aj AjA A
 A(j (AG
	 A
j Aj( 6   )7


 Aj (  (H (AF
 Aj) !
 Aj( ! Aj) !
 Aj) ! Aj) !A !A ! Aj( "AG@ Aj( ! (! ! Aj( !
 A j 
7  A j 6  A j 
7  A8j 7   6P  6@  64  6(  7, Aj A(j)A! (AF
   )7  A
j Aj( 6 A !

 Aj Aj) 7  Aj Aj) 7   ) 7  Aj | (AG@ A8j Aj) "
7  A0j Aj) "
7  A j 
7  A j 
7   )"
7(  
7` Aj Aj Aj (AF

  (6  Aj-  :  Aj AjAܓ A	 A j (AF

 (!@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !

-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9451-9600
 (  jAы6    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj A j Aj  (" ( (@ 
 (AF@ A
j Aj( 6   )7
'
A !  A  ( AG


&
 A j Aj) "
7  A<j Aj) "
7  A4j Aj) "7   Aj) "7,  A j 
7   Aj 
7   Aj 7   Aj 7   A6 
$
  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7 
   6  E ErE@ 
 E ErE@ 
@ E
  
" E 
B Er
   
 E 
Er
% 
%
 Aj) !
 Aj( ! Aj) !
 Aj( !  A j Aj) 7   A
j 6   Aj 
7   Aj 6   Aj 
7   A6 
!
 Aj( ! Aj( ! A8j Aj) 7  A0j Aj) 7   ) 7( A j A
j( 6   )7` Aj A(j A j  ~ (AG@ Aj( ! Aj( !	 (! Aj Aj Aj@ (AG@ (!@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jBƍΛ 7    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj   (AF
 Aj-  ! A(j ("   A
lj!
 E! Aj!
 !@ Aq@ (" 
( F@  A (!
  Aj6 (  jA,:  
 Aj  (  Aj(  (AF
A! 
 A
j"G
 
A  
AqA G ((AF
  A j A  (`AF
! Aj Aj( "6   )"
7  A
j 6    
7A 
"
 A j AjAr"Aj( 6   ) 7d
 
 A4j AjAr"Aj( 6   ) 7,


 Aj Aj) "
7  Aj Aj) "
7   Aj) "7  Aj) !  A j 
7   Aj 
7   Aj 7   Aj 7   A6 
 
 A j( ! A
j( ! A8j Aj) 7  A0j Aj) 7   ) 7( Aj A
j( 6   )7 A j Aj( 6   Aj) 7` Aj A(j Aj A j  } (AG@ Aj( ! Aj( !	 (! Aj Aj Aj@ (AG@ (!@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kA	M@  A
 ( !
 (  j"A )  7   AjA /  ;    A
j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj   (AF
 Aj-  !@ A j ("  A0l!
 E! AjAr!
 !@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 Aj  (AF
  - :   (6 Aj AjA A A j (AF
 Aj AjA A	  (AF
 Aj Aj Aj' (AF@ A4j Aj( 6   )7,

 A(j ( -  ((AF

 A0j!A! 
APj"

 
A  
AqA G (`AF

 Aj A  (AF

 Aj Aj( "6   )"
7  A
j 6    
7A 

 A4j 
Aj( 6   
) 7,

 Aj AjAr"Aj( 6   ) 7


 A j AjAr"Aj( 6   ) 7d

 Aj Aj) "
7  Aj Aj) "
7   Aj) "7  Aj) !  A j 
7   Aj 
7   Aj 7   Aj 7   A6 

 A j Aj) 7  A j Aj) 7   ) 7` Aj A
j( 6   )7 Aj Aj( 6   Aj) 7 Aj A j Aj Ajq A0j" Aj) 7  A8j" Aj) 7  A@k" Aj) 7   )7( )BR@ Aj ) 7  Aj ) 7  Aj ) 7   )(7  Aj & (AG@   )7  A
j Aj( 6   A 6 
#
  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj Aj) 7   A6 
"
  A6   Aj )(7   A j ) 7   Aj ) 7   Aj ) 7 


 A j Aj) 7  A j Aj) 7   ) 7` Aj A j{ Aj! )BR@ A j A j) "
7  A@k Aj) "
7  A8j Aj) "7  A0j Aj) "7  Aj 7  Aj 7  Aj 
7  A j 
7   ) "
7(  
7  Aj ) BQ@ A j Aj

 Aj Aj (AF
  (6  Aj-  :  Aj AjA A Aj (AF

 Aj Aj G (AG@ A j ( - 

 A j Aj( 6   )7d A6`

 A@k Aj) "

-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9601-9750
7  A8j Aj) "
7  A0j Aj) "7   ) "7(  A j 
7   Aj 
7   Aj 7   Aj 7   A6 


  ( -  ( AG


 Aj) !
 Aj) !
 )!  Aj Aj) 7   Aj 7   A j 
7   Aj 
7   A6 

 A8j Aj) 7  A0j Aj) 7   ) 7( Aj A
j( 6   )7  Aj A(j z Aj) !
 )!
 )BR@  
7  
7 Aj A(j Aj ((AF
  (,6  A0j-  :  A(j AjA A Aj ((AF@ A
j A4j( 6   ),7

  ( -  ( AG


 A j Aj) "7   Aj) "7`  Aj 
7   Aj 
7   A j 7   Aj 7   A6 

 A
j AjAr"Aj( 6   ) 7

 A
j Aj( 6   )7

 Aj Aj( "6   )"
7  A
j 6    
7

 A4j Aj( 6   )7,

 A4j Aj( 6   )7,

 A4j Aj( 6   )7,


 A j AjAr"Aj( 6  A6`  ) 7d


 A j Aj( 6   )7d A6`


 A
j AjAr"Aj( 6   ) 7

 A
j Aj( 6   )7

 A
j Aj( 6   )7

 A
j Aj( 6   )7

 Aj A j( "6   )`"
7  A
j 6    
7A 

 A
j A(jAr"Aj( 6   ) 7

 Aj Aj( "6   )"
7  A
j 6    
7  A 6 

 Aj" A
j( 6   )7x@ ("E
  (E
  
 A0j ( 6   )x7( Aj"A A
 A(j(  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7   A6 


 Aj" A
j( 6   )7x@ (`"E
  (dE
  
 Aj ( 6   )x7  Aj"AƐ A
 (  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A
6 @ (8" E
  A<j( E
   
 (D" E

 (HE

  


   (`AF@ Aj" A j( 6   )d7x@ ("E
  (E
  
 A j ( 6   )x7` Aj"Aˍ A1 A j(  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A

 Aj Aj( "6   )"
7  A
j 6    
7A 
6  ) BQ
 Aj( " E
 A
j( E
  


 A j A4j( 6   ),7d
 Aj A j( 6   )d7
 Aj" Aj( 6   )7x@ ("E
  (E
  
 A0j ( 6   )x7( Aj"A A" A(j(  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A
6  @  A0lj! ! @  "A0j! @ A j( "E
  A$j( E
  
   G
 

 	E 	A0lEr
 

 A j A4j( 6   ),7d
 Aj" A j( 6   )d7x@ ("E
  (E
  
 A0j ( 6   )x7( Aj"A A  A(j(  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A
!   6  @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 	E 	A
lEr

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9751-9900
 

@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj" A
j( 6   )7x@ ("E
  (E
  
 Aj ( 6   )x7  Aj"A A! (  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A!
   6 @ (`" E
  (dE
   
 (l" E
  A j( E
   
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# Ak"$  Aj   A(j  Aj (" ( "@@@@@@ )BR@ A j" Aj) 7  A@k"	 Aj) 7   )7H  Aj"
) 78 Aj"
( !  Aj"( ! Aj"
( ! Aj( ! Aj"
) ! Aj ((" (0M (AF
 Aj" Aj( "6  A j" Aj) 7  A j" Aj") 7  A j" ) 7  A j" 6   )7X AjAȀ 6  AjA 6  AjA 6  Aj ) 7   6  
 )87  
 	) 7  
 7  Aj 6  Aj Aj6  Aj Aj6   )H7   6  6  Aj6 Aj ( 6  Aj ) 7  Aj ) 7  Aj ) 7   )X7 Aj 
 Aj Aj Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj ( 6   )7 (AF
 Aj AjAr" Aj( 6  A 6   ) 7


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7\ A ( 6X Aj A jA  Aj Aj
 Aj A j( 6   )X7
 A6 Aj ((!

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7
 A6 Aj
 (,@ 
 (
E
 

 Aj" Aj) 7   )7 AjA A Aj
 Aj Aj) 7  Aj Aj) 7   Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7
 A6 Aj  E ErE@  
 E Er
  
@ E
  (,E
  
 (
E
  
 Aj AjAr! @ (AG@ Aj AjA A  D

 Aj AjA A  +
 (AF@ Aj"  Aj( 6   )7@ ("E
  (E
  
 Aj"  ( 6   )7 Aj" A A  Aj( Aj Aj) 7  Aj Aj) 7   Aj) 7    ) 7A A+ AjA A  
 A j Aj( " 6   )"7X Aj  6   7 Aj (
" E Aj( Er!@ (E@ 
  

 
   
 Aj$ 
A A7 AjA A  
	    

      
 Aj!A! !	@@@@@ ( "Aj"
 I
 	 
j" 	I
 Aj! !	 Axj"
 
 At"
E@ !

 At!	 Aj!@ ( "Aj" I
  j" O@ Aj! ! 	Axj"	E



A A
A̜  
A A
A  
A A
A  
A A
A  
@@@@@ A N@ 
A!

 
 A"E

   6 A !  Aj"A 6   Aj"	 6   Aj"G@@ Aj( "AO
 ( !
 	(  kAM   A (  
  ( j AtAq AtrAv;    ( Aj"6  	(  k I     (  
  ( j 
   (  j"6  Aj" G
 

   
j"G@@ Aj( "AO
 ( !	  Aj"(  kAM   A  Aj(  
  ( j AtAq AtrAv;    Aj" ( Aj"6  (  k I     (  
  ( j 	   (  j"6  Aj" G
 

  Aj(  k I      Aj(  
  ( j    Aj"   (  j6 
 A 
 
 
@@@@@@@A" A H
  ( "E
 ("
 E


!A !

 

A!

  A "


 A"E

   6A !

   6A!

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:9901-10050
   6   Aj 6 
# A k"$ @  j" I
   Aj( "At"   K"A AK!@ @ AjA6   6   ( 6

 A 6
   Aj ( AF@ Aj( " E
 (   
   )7  A j$ 
 
.# Ak" $   A 6  A,6  Aܜ 6    

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 

 B 
HAA"E@AA 
  B7   6  ( " ( !   (6  6 
# A@j"$   (  ((
  @@@ ( "E@  A 6 

 A8j Aj) 7  A0j Aj") 7   ) 7( ( " Aj( "I
@@  k"A N@ (! 
A!

 
 A"E

   j ! A j" A4j"Aj( 6   ) 7 @ 
   6   6   Aj 6   A
j )7   Aj ( 6 
 A@k$ 
  Aԝ  
 A 
B  (   ((    ("(@ (  ( 
  A
j( @  (


# A k"$ @@A  E
  Aj( ! ( ! ((
!	A !@ ! Aj  	  A ("E
 (" I
@@  k"A N@ (
!
 (!
 (!
 
A!

 
 A"E

   j ! 
@ 
A E
 @ 
 Aj! 
@ 

  G
 
A 
!   6   6  A j$ 
  Aԝ  
 A 

# A k"$ @@@@ @ Aj( ! ( ! ((
!	@ Aj  	   ("E
 (" I
@@  k"A N@ (
!
 (!
 (!
 
A!

 
 A"E

   j ! 
@ 
 E
 @ 
 
@ 

 Aj"
 

   

  A 6 
 A j$ 
  Aԝ  
 A 

# A@j"$ @@@@@@@@@@@ ( Aj 
 A H
@ E@A!

 A"E

  6  6     6

 A H
 A
j( !	 Aj(  (!
@ E@A!

 A"E
	
  6  6     6 ! 	 Aj  	 (! ( 
 j 
 	  ( 	j6E
 


 A
j( "A H
 Aj(  (!
A! @ A"E

  64  60  
   68 A0j A (0 (8jA :    (8Aj"	68 A H
 (0!
@ E@A!

 A"E

  6  6     6 ! 	 Aj  	 (! ( 
 j 
 	  ( 	j6 (4@ (0
E
  

@@@@ ( Aj 
@ E@A!

 A"E

  6$  6    !  6( E
 Aj! !@  j"	-  "
AF@ 	A :   Aj"




-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10051-10200
  jAj 
Aj:  

 A
j( "A H
 Aj(  (!	A!A! @ A"E

  64  60  	   68 A0j A (0 (8jA :    (8Aj"68 (0!
 @ A"E
	
  6$  6      6( !  A j   ( ! (( 
 j 
   (( j6( (4@ (0
E
 	

 A
j( ! Aj(  (!	@ E@A!

 A"E

  6$  6      6( !  A j   ( ! (( 
 j 	   (( j6(E
  	
 Aj  ( ( (  ((A (
  A H
  (
! (! 
A!

 
 A"E

   !AA"E
  6  6
  6  6  6  ($@ ( 
 (@ (
  A 6   6  A@k$ 
 A 
 A 
AA 
 A 
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA̡  Aj A j$ 
   Aj( @  ( 

# Ak"$   ( ! @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F   A  ( 
  ( j :      (Aj6

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I     (  
  ( j A
j   (  j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA̡  Aj A j$ 
R  ( " Aj(   Aj"( "k I     (  
  ( j    (  j6 A 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F   A  ( 
  ( j :      (Aj6

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I     (  
  ( j A
j   (  j6 
 Aj$ A 
M  Aj(   Aj"( "k I     (  
  ( j    (  j6 A 
# A@j"$ @A"A"@ A A"! B 7 Aܣ ( 6  Aj A   Aj
  A
jA"6   AjA"6    6  Aj ) 7   A6   Aj Aj( 6 @ ( " E
  Aj( E
   
 A@k$ 
A"A 
A A7 A8jẠ A  
# Ak"$  ( "(! - E@  Aj( F  A ( 
 ( jA,:    (Aj"6
 A :  Aj"(  F  A Aj(  
 ( jA":   Aj" ( Aj"6  (  kAI  A (  
 ( jA A  ( Aj"6  Aj(  kAM  A Aj(  
 ( jA ;   Aj" ( Aj6    (  (A!@ ( AG@A !

   )7  A
j A
j( 6 
   6  Aj$ 
# A k"$  ( "(! - E@  Aj( F  A ( 
 ( jA,:    (Aj"6
 A :  Aj"(  F  A Aj(  
 ( jA":   Aj" ( Aj"6  (  kAI  A (  
 ( jA A  ( Aj"6  Aj(  kAM  A Aj(  
 ( jA ;   Aj" ( Aj6  Aj    (" ( (@ 
A!@ ( AG@A !

   )7  A
j A
j( 6 
   6  A j$ 
# A k"$  ( "(! - E@  Aj( F  A ( 
 ( jA,:    (Aj"6
 A :  Aj"(  F  A Aj(  
 ( jA":   Aj" ( Aj"6  (  kAI  A (  
 ( jA A  ( Aj"6  Aj(  kAM  A Aj(  
 ( jA ;   Aj" ( Aj6  B 7 A ( 6 A j AjA   A jE@   ( ( (@ (
A!@ ( AG@A !

   )7  A
j A
j( 6 
   6  A j$ 
A A7 A jA A  
# Ak"$  (" Aj( F  A ( 
 ( jA :  A!  (Aj6  A A@@ ( AG@ (" Aj( F  A ( 
 ( jA::  A!  (Aj6    ( AF
 (" Aj( F  A ( 
 ( jA :    (Aj6A !

   )7  A
j A

-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10201-10350
j( 6 

   )7  A
j A
j( 6 
   6  Aj$ 
~# Ak"$  A j A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7  A jA ! A j A j @ (pAF@ A j A j( 6   )t7P (d@ (`
 A j A j( 6   )P7p A0j" A j  A j A j) 7   Aj A@k) 7   Aj A8j) 7   Aj ) 7 A!

 A4j A j( "6   )`"7,  A
j 6    7
   6  Aj( @ (
 A j( @ (

 Aj$ 
# A k"$  Aj @@@ (AG@  (6  Aj-  : 
 Aj Aj Aj (AF
 Aj Aj  (AF
 Aj Aj A
j (AG@   ( - 


   )7  A6   A
j A
j( 6 

  A6    AjAr") 7  A
j Aj( 6 

   )7  A6   A
j A
j( 6 

   )7  A6   A
j A
j( 6 
 A j$ 
	   B7 
5@@@  ( Ak 
 )   )Z
 )  )Z!
 
N# Ak"$   ( !   A A7    6
 A A A
jA   Aj$ 
# Ak"$   ( !   A A7    6
 A A
 A
jA    Aj6
 A A
 A
jA    Aj6
 A̬ A A
jA   Aj$ 
# Ak"$   ( !   A A
7    Aj6
 A A	 A
jA    6
 A A A
jA    A
j6
 A A A
jA   Aj$ 

   (  
# Ak"$ @@@@@@@  -  Ak 
  A A

  A A

  A A

  A A

  A A

  A A
  Aj$ 
# A@j"$   ( !  AjA6  A,jA96  A$jA96    Aj64   68 B7 Aԫ 6  A:6
   A
j6<  Aj6  A<j6(  A8j6   A4j6   A@k$ 
^# A0k"$    ( 6
 A$jA6  B7 A 6 A;6,  A(j6   A
j6(  Aj A0j$ 
b# A0k"$   ( !  A
jA6  B7
 A 6 A96$   6,  A j6  A,j6   Aj A0j$ 
# A k"$  AjA (
! (A A! B 7 Aإ ( 6 A j AjA   A jE@  A
jA6   Aj 6    6  Aj )7   A6   Aj Aj( 6 @ ( AI
  Aj( E
  (
 A j$ 
A A7 A jAȥ A  
C   A	6    ) 7  A
j Aj( 6   Aj Aj) 7   A
j Aj) 7 
# A k"$  Aj Aj( 6  Aj Aj) 7   ) 7 B 7$ Aإ ( 6  A0j A jA  Aj A0jE@   ) 7  A6   A
j A(j( 6  (
@ (
 A j$ 
A A7 A jAȥ A  
# A k"$   7  7  7  7  B 7$ Aإ ( "6  A@k A jA   A@kE@@ B 74  60 A@k A0jA  Aj A@k
   A:    ) 7    )07
  Aj A(j( 6   Aj A8j( 6  A j$ 

A A7 A jAȥ A  
# A0k"$ @@@@@@@@@@@@  ( Ak
	

 
 A,jA6  B7
 A 6 A<6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 AԨ 6 A=6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A96   Aj6  6(  Aj6   Aj
	
 A,jA6  B7
 A 6 A96   Aj6  6(  Aj6   Aj

 A
jA>6  A,jA6    Aj6 B7
 A 6 A>6   Aj6  6(  Aj6  Aj6   Aj

 A,jA6  B7
 Aȧ 6 A96   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A96   Aj6  6(  Aj6   Aj

 A
jA96  A,jA6    Aj6 B7
 A 6 A96   Aj6  6(  Aj6  Aj6   Aj

 A
jA96  A,jA6    Aj6 B7
 A̦ 6 A96   Aj6  6(  Aj6  Aj6   Aj

 A,jA6  B7
 A 6 A?6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A 6   Aj6  6(  Aj6   Aj

 A,jA 6  A 6( B7

-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10351-10500
 A 6  Aj
 A0j$ 
# Ak"$ @@@@@@@@@@@@@  ( Ak
	

 
  A A7    Aj6
 A A A
jA 


  A A7    Aj6
 A A A
jA 


  A A
7    Aj6
 A A A
jA 
	
  A֪ A
7    Aj6
 A A A
jA 

  A A7    Aj6
 A A A
jA    Aj6
 AЪ A A
jA 

  A A
7    Aj6
 A A A
jA 

  A A7    Aj6
 A A A
jA 

  A A7    Aj6
 A A
 A
jA    Aj6
 A A A
jA 

  Aԩ A
7    Aj6
 A A
 A
jA    Aj6
 A A A
jA 

  A A7    Aj6
 A A A
jAĩ 

  A A
7    Aj6
 A A A
jA 

  A A7    Aj6
 A A A
jA 
  Aj$ 

   (  
# Ak"$ @@@@  ( Ak 
  Aΰ A 

  A A 

  A A 

  A A
7    Aj6
 A A
 A
jA  
 Aj$ 

   (  
# A0k"$ @@@@  ( Ak 
 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 Aܯ 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA6  B7
 A 6 A 6$   Aj6,  A j6  A,j6   Aj
 A0j$ 
 
~# A k"$   6  6  Aj @   (AG@ )
!  A
j Aj( 6    7A 

  )
7 B 7$ Aإ ( 6  A0j A jA  Aj A0j
 ( !  Aj )$7   A
j 6   AjA6 A
6  A j$ 
A A7 A jAȥ A  
# A k"$  ( !  ("@@@ ( @ ("A H
A! @ "E

     Aj   (AF
   6   6   6  A j$ 
A A-AĮ  
 
 A 
  )
7  6  6
  6A A
 AjA A  
~# A k"$   6
  6  6  6 Aj Aj@ (AG@ )
!  A
j A$j( 6    7  A 6 

  )
7( B 74 Aإ ( 60 A@k A0jA  A(j A@kE@ (0 (4 A jA6  B7D A 6@ A 64  A0j6P  Aj60 Aj A@k  Aj Aj  A6 (
@ (
  A6 E


A A7 A jAȥ A  
 A j$ 
f@@@@  A N@  
A!

 
  A"E

A
A"E
 A 6   6  6  
  A 
A

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10501-10650
A 
I@  @  ( "E
  (  @ 

A AA  
A A
A  
@@@ Aj( "AK@ A|j"  ( "j(  "At AtAqr AvAq Avrr"k" K
@ E@ (!A ! !A ( !

  I
@@  k"A N@ (! 
A!

 
 A"E

   j  !
   6
   6   6   6   Aj 6   Aj    I6 
A AA  
A A!A  
   
 A 
@@@@ At"E@

 Aj! !@  ( j" I
 Aj! ! Axj"
 

 Aq G
@  Atj" O@@@ A N@ 
A!

 
 A"E

   6 A !  Aj"A 6   Aj" 6   j" F
@ Aj( "AvAq Avr!	 ( !  k I     (  
  ( j    (  j"6  (  kAM   A (  
  ( j 	 AtAq Atrr6    ( Aj"6  Aj" F
 ( !
 
 
A A
A  

A A
A  
A A!A̱  
 A 
~# A0k"$  Aj @@ - AG@ - ! Aj  ("AF
 A j) !A ! (


 (
"A~q! A$j) ! A j( 
!  A
j 7   Aj 6    Aq r6A!

 AG@ Aj  A$j( ! A j( ! (
!@@ (AG@ Aj A! - Aq
A! E
 

 A(j( !A! ! ! !

 - A G@A
! E@A ! !

  ! !

 A ! !A !
   6  Aj 6   A
j 6   Aj 6 

 Aj  A$j( ! A j( ! (
!@@ (AG@ Aj A! - Aq
A! E
 

 A(j( !A! ! ! !

 - 	A G@A
! E@A ! !

  ! !

 A !A! !
   6  Aj 6   A
j 6   Aj 6 
   6  A0j$ 
~# A k"$  Aj @ - AG@  B7 

 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 
 A j$ 
# A@j"$  Aj   Aj Aj A(j( ! A$j( ! A j( ! (
!@@ (AG@ A8j( ! A4j( ! A0j( ! A,j( !	 Aj Aj ("
AG
   6  A 6   A j 6   A
j 6   Aj 6   Aj 	6   Aj 6   A
j 6   Aj 6 

   6  A6   Aj 6   A
j 6   Aj 6 

  Aj )
7   Aj A$j( 6   A6    
6 E@ E@ E
 

 E
 

@@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
  
 A@k$ 
~# A k"$  Aj  - Aq@@@ - 	"A"G@ A F
  B7 

 A8j @ - 8AG@  A6

 A
j A j) "7   )<"7  A
j 7    7
  A6 

    
 A j$ 
  B 7  A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A{j 

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10651-10800
 A AE


 A A
  A; 

@@@ A{j 
 A A
A 

 A A
 A

A
!  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A; 

  A ; 
 A j$ 
# A k"$   @ -  AqE@  B 7 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    

     E
 

  B7 

   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@A! AF@ (  A (  G!
  A :     : 

A! AF@ (  A (  G!
  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A{j 
 A AE


 )  A )  R
  A; 

@@@ A{j 
 A A
A 

 )  A )  R
 A

A
!  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A; 

  A ; 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@A! AF@ (  A (  G!
  A :     : 

A! AF@ (  A (  G!
  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A~j 
 /  A /  F


 A A
  A; 

@@ A~j 
A ! /  A /  F


 A A
  A: A !

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A AA!

  A : 
   :   E
 

  Aj  A A  A:  

  A ; 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A~j 
 /  A /  F


 A A
  A; 

@@ A~j 
A ! /  A /  F


-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10801-10950

 A A
  A: A !

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A AA!

  A : 
   :   E
 

  Aj  A A  A:  

  A ; 
 A j$ 
~# A k"$    -  Aq@@@ - "A"G@ A F
  B7 

 Aj  - AG@  B7 

 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 

    
 A j$ 
  B 7  A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    

     E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A0k"$  Aj A!@ - AqE@  A6

 - A"F@  Aj  A(j( ! A$j( ! A j( ! (
!@ (AG@ 
A ! Aj  (!  Aj (
6    6     A
j 6 

   6  Aj 6   A
j 6   Aj 6 

   6  A
j 6   Aj 6 A !

  A6
   6  A0j$ 
~# Ak"$  Aj @ - AqE@  B 7 

@@@ - 	A F@    ( !  - Aq: D  6@ A j A@k - HAG@@ - IE
 A j (@" (p"AG@ A j A j( 6   )t7d

 A j  (`"AG
 A j A@k - HAG
 

 A0j A j( 6   A j) 7( (L!

  B7 

 A(j  (("AG@  Aj ),7   Aj A4j( 6   A6    6

  B07 

 A0j A j( 6   )d7(
 Aj A0j( "6   )("7  Aj 6   Aj 7    6  A6 
 Aj$ 

~# Ak"$  A8j @@@@@@@ - 8Aq@@@@@@@@ - 9"Aj# 
 A^j
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 


 Aj  - AqE@  A6 


 - A"G
  Aj  Aj( ! Aj( ! (! (AF
 E@  A6 


  A6  E

 


 A j  -  AqE@  A6 


 - !A G
  Aj  (!  - 
Aq: |  6x Aj A j@ - AG@@ - E
 Aj A j - AG
 

 Aj" Aj( 6   Aj) 7 ("AG

 Aj  ("AF@  A6 


 Aj Aj( "6   )"7  A
j 6    7   6 


 A0j  - 0AqE@  A6 


 - 1A G
  A(j  ((!  - ,Aq: d  6` Aj A j@@ - AG@ A jAr! AjAr!@ - AG
 Aj (`"@@ ("AG@  ) 7  Aj Aj( 6 

 A j  (x"AF

 A j Aj( 6   ) 7h

 Aj A j - AG
 

 A j Aj( 6   Aj) 7h (!
 A j" A j( 6   )h7P AG
	
 Aj  ("AF@  A6 


 Aj Aj( "6   )"7  A
j 6    7   6 
	
  A
6 


-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:10951-11100
  A6 

  A6  Aj$ 
  A6 

  A
j Aj( 6   Aj 6    6   6 

  A6 

 A j ( "6   )"7@  A
j 6    7   6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 
 Aj$ 
~# Ak"$  A j @ -  AqE@  B 7 

 - !A F@  Aj  (!  - 
Aq: L  6H A j A j@@ - PAG@@@@@@@ - Q"AqAF
 @ Ak 
 
 A jArAг A A4j Aj) 7   )|7,

 A j (H"@ (x"AG@ A j Aj( 6   )|7l  6h

 A j  (hAF

 A4j A j) 7   )h7, 


 E
 A(jArAг A

 A<j( ! A@k( ! A j( ! A(j  (("AG@  Aj ),7   Aj A4j( 6   A6    6 E
 

  B 7   A
j 6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6 

 A j (H"@@@ (x"AF@ Aj  - AqE@A!

 - A"G@A!

  A j  (! (! (! (|! (xAF
 
 Aj  (
! ("  

 Aj( ! Aj( ! (|!

 !
 A8j 6  A4j 6  A0j 6   6,

 ! ! !
 A j A j - PAG
 

 A4j A j) 7   )T7, E

 E
  
 ),!	  A
j A4j) 7    	7  A6 

  B7 
 Aj$ 


# Ak"$  A j @ -  AqE@  B 7 

@@@ - !A F@  Aj  (!  - 
Aq: L  6H A j A jA ! - PAG@ Aj!
 A jAr!
@@@@@@ - Q"AG@ 
@ @ E
 A4j 6  A0j 6 A ! A 6,


 A jArA A A4j Aj) 7  A6(  )|7,
	
 A jArA A A4j Aj) 7  A6(  )|7, E
 

 A j (H"@ (x"AG@ A j Aj( 6   )|7l  6h

 A j  (hAF

 A4j A j) 7   )h7, A6(

 E
 A(jArA A A6(

 @ A(jArA A A6(

 A j (H" (x"AF@ Aj  - AqE@A! 

 - A"G@A! 

  A j  (! (! (|! (" (xAF
 E@ Aj  (
! ("  

 ! ! !

 Aj( ! Aj( ! (|
! A8j 6  A4j 6  A0j 6   6, A6(A !

 A j (H"@@ (h"AG@ 
 )l7  
Aj A j( 6   6|

 A j  (xAG

 A4j 
Aj) 7  A6(  
) 7,A !

 (!
 (!	 (|!
 A j A j - PAG
 

 A4j A j) 7   )T7, A6(

  B7 

 A G!

 	E ErE@ 
 E 
 ErrE@ 
 A8j( ! A4j( ! A0j( ! (,! ((AG@ A j( !
 A@k( !	 A<j( !

   6  A6   Aj 6   A
j 6   Aj 6 

 A(j  (("AF@   6  A 6   A
j 
6   Aj 	6   Aj 6   Aj 6   A
j 6   Aj 6 

  Aj ),7   Aj A4j( 6   A6    6@@@@  
 E
 


-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11101-11250
 @ 
 	E
 

 @ 
 	E
 

 E
  
 Aj$ 


# Ak"$  A j @ -  AqE@  B 7 

@@@ - !A F@  Aj  (!  - 
Aq: L  6H A j A jA ! - PAG@ Aj!
 A jAr!
@@@@@@ - Q"AG@ 
@ @ E
 A4j 6  A0j 6 A! A6,


 A jArA A A4j Aj) 7  A6(  )|7,
	
 A jArAĳ A A4j Aj) 7  A6(  )|7, E
 

 A j (H"@ (x"AG@ A j Aj( 6   )|7l  6h

 A j  (hAF

 A4j A j) 7   )h7, A6(

 E
 A(jArAĳ A A6(

 @ A(jArA A A6(

 A j (H" (x"AF@ Aj  - AqE@A! 

 - A"G@A! 

  A j  (! (! (|! (" (xAF
 E@ Aj  (
! ("  

 ! ! !

 Aj( ! Aj( ! (|
! A8j 6  A4j 6  A0j 6   6, A6(A !

 A j (H"@@ (h"AG@ 
 )l7  
Aj A j( 6   6|

 A j  (xAG

 A4j 
Aj) 7  A6(  
) 7,A !

 (!
 (!	 (|!
 A j A j - PAG
 

 A4j A j) 7   )T7, A6(

  B7 

 A G!

 	E ErE@ 
 E 
 ErrE@ 
 A8j( ! A4j( ! A0j( ! (,! ((AG@ A j( !
 A@k( !	 A<j( !

   6  A6   Aj 6   A
j 6   Aj 6 

 A(j  (("AF@   6  A 6   A
j 
6   Aj 	6   Aj 6   Aj 6   A
j 6   Aj 6 

  Aj ),7   Aj A4j( 6   A6    6@@@@  
 E
 

 @ 
 	E
 

 @ 
 	E
 

 E
  
 Aj$ 
~# Ak"$  A j @ -  AqE@  B 7 

 - !A F@  Aj  (!  - 
Aq: L  6H A j A j@@ - PAG@@@@@@@ - Q"AqAF
 @ Ak 
 
 A jArA̳ A A4j Aj) 7   )|7,

 A j (H"@ (x"AG@ A j Aj( 6   )|7l  6h

 A j  (hAF

 A4j A j) 7   )h7, 


 E
 A(jArA̳ A

 A<j( ! A@k( ! A j( ! A(j  (("AG@  Aj ),7   Aj A4j( 6   A6    6 E
 

  B 7   A
j 6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6 

 A j (H"@@@ (x"AF@ Aj  - AqE@A!

 - A"G@A!

  A j  (! (! (! (|! (xAF
 
 Aj  (
! ("  

 Aj( ! Aj( ! (|!

 !
 A8j 6  A4j 6  A0j 6   6,

 ! ! !
 A j A j - PAG
 

 A4j A j) 7   )T7, E

 E
  
 ),!	  A

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11251-11400
j A4j) 7    	7  A6 

  B7 
 Aj$ 
(# Ak"$   6  6   6   
# A k"$ @ E
 @@ Aj  ("E
  ( (! (
@ 
 Aj!@ 
  G



A

A 
!   6   6  A j$ 
~# A@j"$ @ ( "@ ( "E
 )!   74  60 Aj A0j Aj A j( "6   )"7 A(j"( ! A,j"( ! ($! A8j 6   70 Aj A0j ( ! ( ! ($! (
@ (
@ E@  A 6  @ 
 E
 

   6   6   Aj 6   Aj 6   A
j 6   Aj 6 
 A@k$ 
A AA  
A A
A  
p# A k"$ @@ @@ Aj  ("E
 ( (! (
@ 
@ 
 Aj"
 

   

  A 6 
 A j$ 
	   B 7 
   (   ( 
# A k"$  Aj ( "A!@ - AqE@  AjA6 

@@@@ - 	""A,G@ A G@ - 
  AjA6 

A !  A : 

   A! -  Aq
  AjA6 

 A : 

 - !
 A F@  AjA6 

 Aj  ("AF@  A: A !

  Aj )7   Aj A
j( 6   Aj 6 
A!
   :   A j$ 

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 

-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11401-11550
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 
z @A
A"@  6  6  6 @  "E@  A 6 

 ( "E
   6    )7 
 
A
A 
A A
A  
 @@ @A
A" E
   6   6   6 A
A"E
  6  6  6       
A AA  
A
A 
A
A 
5 A
A" E@A
A 
   6   6   6     
A !@@@ @A
A"E
  6  6  6 
 @A
A"E
  6  6  6 
   Aq!AA"E
  6  @ 
 @ 

-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11551-11700
  A 6   6 
A
A 
A
A 
AA 
# A0k"$ @@@@@@@@ AM@A
A"E
  6  6  6  "
 
A!

A A"E
  A6   A
j 6  A̼ )  7   AjAԼ )  7   AjAܼ )  7   AjA )  7    AjB7   AjA6 

 A"E

   6  Aj 6      A 6   A
j 6  

 ( "E
  6   )7  A$jA6  B7 A 6 A 6,  A(j6   6(  A
j Aj  A6   AjA6  (@ ( 
 
 A0j$ 
A
A 
A A 
 A 
A A
A  
~# A0k"$ @@@@@@@@ AM@A
A"E
  6  6  6 A A"E
A
A"E
 B 7  6   "
 ( "E
 )!   Aj 7    6  A 6  

A$A"E
  A6   A
j 6  A )  7   AjA )  7   AjA )  7   AjA )  7   A jA (  6    AjB7   AjA6 

 ( "E
  6   )7  A$jA6  B7 A̽ 6 A 6,  A(j6   6(  A
j Aj  A6   AjA6  (@ ( 
 
 A0j$ 
A
A 
A A 
A
A 
A$A 
A A
A  
A A
A  
~# A0k"$  (! ( !@@@@A
A"@  6  6  6 A A"E
A
A"E
 B 7  6 @  "E@ ( "E
 )!   Aj 7    6 A !

 ( "E
  6   )7 A! A$jA6  B7 A 6 A 6,  A(j6   6(  A
j Aj  AjA6  (@ ( 
 
   6  A0j$ 
A
A 
A A 
A
A 
A A
A  
A A
A  
 A
A"@@  6  6  6 A
A"E
   6  6  6 A
A"E
   6  6  6   @@@@@@@@   "
     
  Aj 6   AjA6 A

  A: A 

  A : A 

A A8A  
  AjA6 A

  AjA6 A

  AjA6 A

  AjA6 A
:     

A
A 
~@@@A
A"@  6  6  6 A
A"E
  6  6  6   @@@@@@@   Aq	"B "   
  A6  Aj 6 

 "E
 ( "E
	   6  Aj )7  A 

A A8A  
  A 6

  A6A

  A6
A
6   
A
A 
A
A 
A AA  
A A
A  
 A
A"@@  6  6  6 A
A"E
   6  6  6 A
A"E
   6  6  6   @@@@@@@@   
"
     
  Aj 6   AjA6 A

  A: A 

  A : A 

A A Aܿ  
A̾ A;A  
  AjA6 A

  AjA6 A

-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11701-11850

  AjA6 A
:     

A
A 
# A0k"$     (! ( !A
A"@@  6  6  6  Aj   (! (!A
A"E
   6  6  6  A j   ((! ( !A
A"E
   6  6  6   @@@@@@@@   
"
     
  Aj 6   AjA6 A

  A: A 

  A : A 

A A A  
A̾ A;A  
  AjA6 A

  AjA6 A

  AjA6 A
:    ($@ 
  (@ 
  (@ 
 A0j$ 

A
A 
5 A
A" E@A
A 
   6   6   6   
  
# Ak"$ @@@A
A"@  6  6  6  
"E
 ( "E
 (! (!  A j   A jAr!@ (`"AG@ A$j Aj) 7  A
j Aj) 7  Aj Aj) 7   ) 7


 A8j Aj) 7   ) 70 Aj A0j
@ @ A j A(j) 7  A@k A j) 7  A8j Aj) 7   Aj) 70 B 7T A ( 6P A j A jAԳ  A0j A j
  A
j 6   Aj 6   Aj 6   Aj )P7   Aj A j( 6   B7 @@@@@@@@@ (0



 
 A j( E
	 A j( 
	
 A8j( E
 (4

 A8j( E
 (4

 A8j( E
 (4

 A8j( E
 (4

 A8j( @ (4
 A j( E
 A@k( 

 A8j( @ (4
 A j( E
 A@k( 

 A8j( @ (4
 A j( E
 A@k( 

 A8j( E
 (4

   )
7   Aj A$j) 7   Aj A
j) 7   Aj Aj) 7  E
  
  Aj$ 
A
A 
A AA  
A A
A  
A A7 AjA A  
~# A@j"$  A j @@@   -  AG@ - !! A j  ( "AF
 A(j) !
 ($!A 

 A,j) !
 A(j( ! - $! / % - 'Atr
";    :   Aj Av:    A
j 
7   Aj 6 

@ AG@ Aj @ - AqE@ B 7 

@ - "A"G@ A F
 B7 

 A j 

  A j 
A! A0j( ! A,j( ! A(j( ! ($!@ ( AF
  Aj  - AqE@ E@A! E
 

A! E
 

 - A F
 E@A
! E
 

A
! E
  
   6  Aj 6   A
j 6   Aj 6 

 A j  A0j( ! A,j( ! A(j( ! ($!@ ( AG@ A<j( !	 A8j( ! A4j( ! Aj  - AqE@A!@@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@A
!@@@@  
 E

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:11851-12000
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A j 	6   A
j 6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6   A6A !

 !
   6  Aj 6   A
j 6   Aj 6 

   Aj 6   Aj 6   A
j 6   Aj 6 A !  A 6

A!
   6  A@k$ 
   ( " (   ( 
   ( " (   ( 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 

    ) 7   Aj Aj( 6 
	    
l# A@j"$   B 7  A ( 6   7  7  Aj  A   Aj@A A7 A8jA A  
 A@k$ 
# A0k"$  Aj ( "A!@ - AqE@  AjA6 

@@@@ - ""A,G@ A G@ - 
  AjA	6 

A !  A : 

 - 
   Aj A! - Aq@ - 	!

  AjA6 

 A : 
@ Aq"A"G@ A F
  AjA6 

  A!@ -  AqE@A!

 - A"G@A!

  Aj  A$j( ! A j( ! (
! (AG@ E Er
 

 AF
 A(j( !
  Aj 6   A
j 6   Aj 6   Aj 6 

  AjA6 
A!

  A: A !
   :   A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12001-12150

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
   B 7  B 7 
^~  }" V  }  T}" V  QAF@  Aj      A6 
  Aj 7   Aj 7   A 6 
	    
H  |" T"   ||" T  QAF@A A
A  
   7    7
W~   ) "|" T"   Aj) " ||" T  QAF@A A
A  
   7    7
 @@@@@@@ Ayj
 
 A A@ A A
  A: 

  A: 

 A A
  A: 

 A AE


 A A
   A: 

  Aj  A A  A:  
  A :   A :  
  A :  
~# A k"$  Aj @@@@@@ - AG@ - 	 Aj  ("AG@ Aj) !A ! (


Ak
 (
"A~q! Aj) ! Aj( 
!  A6   A
j 7   Aj 6    Aq r6

   

   

   

   

   
 A j$ 

   (  
# Ak"$ @@@@@@@  ( Ak 
  A A 

  A A
 

  A A 

  A A 

  A A 

  A A 

  A A
7    Aj6
 A A
 A
jA  
 Aj$ 
2   ( !  E@ E@   
   
   
2   ( !  E@ E@   
   
   
   ( " (   Aj(  

   (  

   (  
# A0k"$ @@@@@@@  ( Ak 
 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA 6  A 6 B7
 A 6  Aj

 A
jA6  B7
 A 6 A 6$   Aj6,  A j6  A,j6   Aj
 A0j$ 

   (  
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ A 

-- Chunk 82 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12151-12300
K  Aj(   Aj"( "k I@     ( !
  (  j     j6 A 
# A k"$   6
  6 A$jA6  B7 A 6 A 6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A 6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# Ak"$   6
  6@@ @ A4jA6  A$jA6  B7 A 6 A 6,  6<  68  A(j6   A8j60  Aj6( B 7D A ( 6@ A j A@kA  Aj A j
   )@7  A6   A
j A j( 6 

 A$jA6  B7 A 6 A 6D  A@k6   Aj6@ B 7, A ( 6( A j A(jA  Aj A j
   )(7  A6   A
j A0j( 6 
 Aj$ 
A A7 A jA A  
>  (!  ( !A
A" E@A
A 
   6   6   6   
K@ @ ( "
A A
A  
A AA  
   6    )7 
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
@@ A N@ E@A!

 A"
 A 
 
   6   6 
&
~# A0k"
$ @@@@@@@ Aj( "Aq F@ At"An!@@@@@@@ E@A!


 A"
E

 
 6 
 
6  
A 6 ( " "
B~"B 
 "@  I@ 
A   
( !
 
(!
  
jA  Aj" 
  jjA :   
( !
  j!

 
 
6A !A ( !@@@@@@ Aq" 
A!

A
!

A
!

A
!
A   k"  K"A`j" K@ 
!


@ A j" I
  K
 	Aj" 	I
  
K
@@   j"-  "j1  "BQ
   Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "BQ@ Aj!

  Aj-  "j1  "
BR
 Aj!
 B  B!


 	 
j" B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A	!  A	j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  jB  B!


 Aj B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  jB  B!


 A
j B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A

-- Chunk 83 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12301-12450
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  jB  B!


 Aj B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87   
A|j" 
M@ 	Aj!	 !
 " K




A A!A  
 


 A 
A A.A  
  A  
A A
A  
  
A  
A A
A  
A A!A  
  Aj"j-  "A=F
   j-  AG
  B B !

B !A!

@ Axj" K  OrE@@@@@@@@ Aj" I
  K
 	Aj" 	I
 Aj" I
  	I
  
K
@@   j"
-  "j1  "BQ
   
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "
BR
 Aj!
 B  B!


 	 
j B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87   Aj" M@ ! ! !	  O
	


A A!A  
  A  
A A
A  
A A
A  
 	 A  
  
A  
A A
A  
 ! ! 	!
 A AK!A  k! ! !@@@@@@@@@@@@@@@@@@@@@@@@@@@ Aj"E@@@@  O@@  F@A !A !B !A !B !

  j!  j!B !A !	A !A !A !A !@  k!A !@@@@@@  j"Aj" I@A A
A  
  j!
  j"-  "A=G@ 
A L
  j" I
 B B !
)
 AqE
 
Aj 
H
   
!  Aj"G
 
 	!

     jA Jj" O@ B B !
'
A A
A  
A A
A  
A A
A  
 A
F
  j1  "BQ@  j" O@ B B !
%
A A
A  
 As Aj!  Aj"AzlA>q ! !	 
! ! j G


B !A !~@@@@@@@ 	   
 
A$jA6  
B7 
A 6 
A 6, 
A 6( 
 
A(j6  
AjA  
B

B

B


-- Chunk 84 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12451-12600
B 

B(

B0
!A!
  P@ @ 
  
 K!  
  
K!B !B8!@  F
  
j  <   Bx|! Aj! B|" T
 

 
 I
" 
 6
"
  j" I
 Aj" M@ BB B B!
!
A A!A  
  A  
A A!A  
A A
A  
  
A  
  V
 Aj" I
  
K
  F
   j"	-  "j1  "BQ
  j"AI
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "BQ
 AM
  	Aj-  "j1  "
BQ
	 AM
  	Aj-  "j1  "
BQ

 AM

  	Aj-  "j1  "
BQ

 Axj! B|!  
j"Aj B4 B: B. B( B" 
B
 
B 
B"BB? BBB =    BB BB B(B B8>   Aj I Aj! Aj!E
 
A A
A  
 Aj" I
 !


AAA  
 Aj" I
 !


AAA  
 Aj" I
 !

AAA  
 Aj" I
 !

AAA  
 Aj" I
 !

AAA  
 Aj" I

 !

AAA  
 Aj" I

 !
 B  B!


A A
A  
  A  
  
A  
A A A  
AAA  
A A
A  
A A
A  
A A
A  
A A
A  
A A
A  
A A
A  
A A
A  
 "AqAF
  B!

   
) 7  A 6   A
j 
Aj( 6 

 
(   :   A6   A
j B0<    A	j B =    Aj >  E
  

 
A0j$ 
# A0k"$   ( E@ A
jA 6  A 6 B7
 A 6  Aj

   6 A
jA6  B7
 A 6 A 6$  A j6  A,j6   Aj6,  Aj
 A0j$ 
*AA"E@AA 
  B7   6 
# Ak"$  A ;
  Aq"A
pA0r: A! A
I@ Aj!A

@@@ Aq"A

-- Chunk 85 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12601-12750
n! Aj" K
  A
j j" A
pA0r:   ! A O



A A!A  
A k
! Aj(  Aj"( "k I    (  
 ( j    A 6   (  j6  Aj$ 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A! B
T@ Aj!A

@@@ B
! Aj" K
  Aj j" B
A0r:   B T ! !E



A A!A  
A k
! Aj(  Aj( "k I    Aj(  
 ( j    A 6  Aj"   (  j6  A j$ 
# Ak"$  Aj"( " Aj( F  A (  
 ( jA":    ( Aj"6  A 6
@ E
   j!	 Aj! Aj!@ Aj!@@@@@@@@@@ ,  "AJ@ ! Aq

  	F@A !
 	

 - A?q!
 Aj
! Aq!
 Aq"AM@ ! 
 
Atr

  	F@ 	!A 

 Aj! -  A?q
 
Atr!  
A
tr AI
 @  	F@A !

 -  A?q! Aj!
 
AtA q Atr r
"Axj 
 A G@ A G



 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA":  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :  

@@@ A O@ AI
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

 (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA :    ( Aj"6  (  F  A (  
 ( jA0:    ( Aj"6  (  F  A (  
 ( jA0:    ( Aj"6  Aq"A
I!
 (  F  A (  
 ( j AqAvA0r:    ( Aj"6  (  F  A (  
 ( j A0r A7j 
:  

 (  F  A (  
 ( j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
! (  k I    (  
 ( j A
j 

A!
  (  j"6   	G
 

 Aj(  F  A Aj(  
 ( jA":    A 6  Aj"   ( Aj6  Aj$ 
S Aj(  Aj"( "kAM  A (  
 ( jA6    A 6   ( Aj6 

      
W  (" Aj( F  A ( 
 ( jA :     6  A 6   AjA:    (Aj6
Y (" Aj( F  A ( 
 ( jA :     6  A 6   AjA:    (Aj6
# Ak"$  (" Aj( F  A ( 
 ( jA :  A!  (Aj6    @ ( AG@ (" Aj"( F  A ( 
 ( jA::    (Aj"6 (  F  A ( 
 ( jA :     6  AjA:    (Aj6A !

   )7  A
j A
j( 6 
   6  Aj$ 
F  (" Aj( F  A ( 
 ( jA :    A 6   (Aj6
 (" Aj"( F  A ( 
 ( jA :    (Aj"6 (  F  A ( 
 ( jA :    A 6   (Aj6
   A:    6 
# A0k"$ @@@@@@@@@@@@@@@@@@@@@  ( Ak	

-- Chunk 86 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12751-12900



 
 A 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A 6(A7


 A 6(A'


 A 6(A8


 A 6(A8


 A 6(A.
	
 A 6(A

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

   (6(  A
j( 
!  A
jA6  A 6$   6, B7
 A 6  A(j6   A j6  Aj A0j$ 
	# A0k"$ @@@@ A N@ 
A!

 
 A"E

 A 6  6
  6 A 6 A 6
@@  @@@ @ -  "A I@A !

@@@@@@@ AqE@ 	Aq
 A G
A!	A !

@ APjAqA
I
 A
! Aj&      

























      

 AK
 A
j j :  A! Aj"AG
 (
"APj"AqA
I
 AjAqAI
 AjAqAO
 Aj!

A!A
!A!	@@@@@@ A^jT   

  (
F Aj A ( 
 (j :    (Aj"6
	
  (
F Aj A ( 
 (jA:    (Aj"6

  (
F Aj A ( 
 (jA
:    (Aj"6

  (
F Aj A ( 
 (jA
:    (Aj"6

  (
F Aj A ( 
 (jA
:    (Aj"6

  (
F Aj A ( 
 (jA	:    (Aj"6

 
AF@A!
	
  (
F Aj A ( 
 (j :    (Aj"6A !


 AA  
 AIj!

-- Chunk 87 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:12901-13050
@ Av"APj"AqA
I
 @ AjAqAO@ AjAqAO
 Aj!

 AIj!




@ Av"APj"	AqA
I
 @ AjAqAO@ AjAqAO
 Aj!	

 AIj!	




@ Av"APj"AqA
I
 @ AjAqAO@ AjAqAO
 Aj!

 AIj!




 At A
tr 	AqAtr" Aqr!@@ AqAG@ AqAF"E
A
!

@ 
AF@ AqAO
A!
	
 AqAK
A !A!
 !


 
AqA|j"Aq" G

A! A jAq A
tr"Aj"A F A?Kr A?qAFr
  A?qAr:   AvAr:   AvA?qAr:   A
vA?qAr:  (
 kAM Aj A ( 
 (j (6    (Aj"6A !


@@A  Aq "AO@ AI
 AO
  A?qAr:   A
vAr:   AvA?qAr: A

  : A

  A?qAr:   AvAr: A

  A?qAr:   A
vAr:   AvAr:   AvA?qAr: A
! (
 k I Aj   ( 
 (j Aj   ( j"6
A !
A !A !	
 Aj! Aj"
 
A
! 	Aq
A! 
AF
 (! (
A 
! A j   ( AF
   6  A
j 6   Aj 6 A 

A!
  A6    6 (
E
 (

 @ 
  A6A
6 
 A0j$ 
A A!A  
 A 
 
   A 6   6   6 
.  ("Aj" O@   6
A A
A  
|@   ("  ("I@ ( !@A   j-  Awj"AKA tAqEr
  Aj"  I
  6 "  I
 

A
6 
A A
A  
A!@@ (" ("O
  ( !@@@@A!@  j-  "Awj$    
 Aj" I
  6A! Aj!  I



 A G
 Aj" I
  6  A6 
 Aj" I
  6  O
@  j-  "Awj"AKA tAqEr
 Aj" I
  6 " I
 


 A G
   A6 
   6 
A A
A  
@@@@@ (" ("I@ ( !@A!@  j-  "Awj$    
 Aj" I
  6 " I
 

A!

 A G
 Aj" I
  6  A6 
  A6 
A A
A  
A A
A  
   6 
	A!A ! ( "@@ A G! (!@ E@  A6 
 -  A ! (" I@  Aj6  j-  !
 !

-- Chunk 88 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13051-13200
 
G
 Aj! Aj! Aq
 


  A
6 
@@@@ (" ("I@ ( !@A!@  j-  Awj2    
 Aj" I
  6 " I
 

A!
   6 
 Aj" I
  6  A6 
A A
A  
A A
A  

~# A0k"$ @@ (" ("I@ ( "
 j"
! !@@@@@@ -  "A"G@ A G@ Aj" OA ! !



 Aj" I
	A!	 As! !

@@ AqE@ Aj" I

  6 	
  I
  K
 Aj 
  kA (
 (AF"! A j( ! 
  B 7   A
j 6   Aj 6 


 Aj" OA ! !



  I
  K
 Aj 
  k AjAr! (AG@ Aj Aj( "6   ) "
7  B7   Aj 
7   Aj 6 
	
 Aj Aj) "
7   ) "
7  A
j 
7    
7  A6 

   6  A6   Aj 6 

  A  
  A  
  A  
  A  
  6  
j!  I
 

  B07 
 A0j$ 
A A
A  
@ (" ("O
  ( !@  j-  "Awj"AMA A tAqE@A!

 Aj" O@  6 " I



A A
A  
   :    :  
3   (" ("I (  j-   
:     I:  
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
.# Ak" $   A 6  A
6  A 6    

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 
F  (" Aj( F  A ( 
 ( jA :    A 6   (Aj6
   ( ( " (   ( 
# A0k"$ @@@  -  Ak 
   Aj( 6    - :  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6   Aj

 A
jA 6  A 6 B7
 A 6  Aj

   Aj( 6    - :  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6   Aj
 A0j$ 
$  Aj"  I@A A3A  
  Av
	~A ( !@@@@@@ AI@

A  Afj"  K!
@ Aj" I
  K
@ 	A j" 	O@  M
  A  
A A
A  
  	j"    j"	)  "
B8"B:j-  :   Aj   
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  
BB 
BB 
B(B 
B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  	Aj)  "
B8"B:j-  :   A	j   
B(B "B4A?qj-  :   A
j   
BB? 
BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"A?qj-  :   A
j   
BB 
BB 
B(B 
B8"B
A?qj-  :   Aj  "AvA?qj-  :   Aj  AvA?qj-  :   Aj  	A
j)  "
B8"B:j-  :   Aj   

-- Chunk 89 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13201-13350
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  
BB 
BB 
B(B 
B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  	Aj)  "
B8"B:j-  :   Aj   
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"A?qj-  :   A
j   
BB 
BB 
B(B 
B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   !	 Aj" 
M
 

@  Ap"k"
 M@  
I
 !

A A!A  
@ Aj"	 I
 	 K
@ Aj" O@  M
  A  
A A
A  
  j"
    j"
-  "Avj-  :   
Aj  
Aj-  "A?qj-  :   
Aj  At 
Aj-  "AtA
vrA?qj-  :   
Aj  At AtA
vrA?qj-  :   ! 	" 
I
 


  A  
A A
A  
 	 A  
A A
A  
@@@@@@@@@@@@@ Aj 
 
 O
  O
A!  j    
j-  " Avj-  :   Aj"	 I@  At!A0

 	 A  
 
 O
  O
	  j    
j-  "Avj-  :   
Aj" O
 Aj" O

  j  At   j-  " AtA
vrA?qj-  :   Aj"	 O
  At!A!A<
!   	j    qj-  :    j!
A !  K
 AsAp" @  j!	  !  k"!@ E
 	A=:   Aj! 	Aj!	 Aj"
 
  !
  j I

 
 A  
  A  
 	 A  
  A  
  A  
A A*A  
 
 A  
  A  
  A  
  A  
c# A k"$  An"Aq G! At!@  AlkE@ !

  Aj" Ir!
   6   As6  A j$ 
# A0k"$ @@@@@  (" 
 
 A,jA 6  A 6( B7
 A 6A  Aj
 At!  ( ! @   6 @ A 6, A 6( B7
 A 6  Aj

 A6, B7
 A 6 A 6  6(  Aj6   Aj
  Aj!  Aj! Axj"
 
A 

 A
jA 6  A,jA6  B7
 A 6 A 6   ( " 6    Aj6  6(  Aj

 A,jA6  B7
 A 6 A 6   ( 6   6(  Aj

A
 A0j$ 
   ( " (   ( 
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
.# Ak" $   A 6  A6  A 6    

  ( E@ 
  A 6   6 
V ( ! A 6 @ @ (!AA"E
  6  6   A 6   6 
 
AA 

 B֭)
!@  ("E
   Aj( E
  

# Ak"$   ( ! @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

 AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

-- Chunk 90 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13351-13500

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
@ A	O@AA K@AA!
A " AkAAkAAkA{jAwqA}j"A AAAtk"  K k  M
 A  AjAAA{j  KA"jAAjA|j"E
 ! @ Aj" qE@  !

  jA  kq!AA!     j   k K"  k"k!  E@        

  ( !   6    j6 
@ 
  "AA jM
   !       k"   
  
  !
 
!~# Ak"
$ @@  AO@A " AkAAkAAkA{jAwqA}j"A AAAtk"  K  M
  AjA!A ( E
A  k!@@A  Av" E
 A AK
  A  g" kAqvAq  AtkA>j
"AtA j( " @  Aqt!A !@@  " I
   k" O
   ! "
 A !

  Aj( "     A
vAqjAj( " G  ! At!  
 
 @ ! 

 

A !A AqtA ( q" E
  hAtA j( " E

@     " O  k" Iq"!   !  " 
 
 E

A ( "  OA     kO
 "  !  @ AAO@      AO@  

 Av"AtA j!A ( "A t"q@ (

A   r6  
!  6  6
  6
  6

    j
  "E


A  AjAAA{j  KA!@@@@@A ( " Av" Aq"v"AqE@ A ( M
 
A ( " E
  hAtA j( " k! " @@   k"   I"!    !  " 
 

 "  !   AAI
     A ( "E
 Av"AtA j!A ( !A ( "A Aqt"qE
 (

@ AsAq  j"At" A j( "Aj( "  A j" G@   6
   6

A  A~ wq6 
  At !

@A t  tqh"At" A j( "Aj( "  A j" G@   6
   6

A A ( A~ wq6 
    " At k"A ( " @  Av" AtA j!A ( !A ( "A  Aqt" q@ (

A    r6  
!   6   6
  6
   6
A  6 A  6  !

A   r6  
!  6  6
  6
  6
A  6 A  6 

    j
  "

@@@@@@@@A ( "  I@A ( "  K
A ! 
 A " k  AjAAjAAjAjA 
( "E
	 
(!
Aģ  
("
Aģ ( j"6 Aȣ Aȣ ( "     K6 A ( E
Ạ ! @   F
  (" 
 


A ( !   k"AAI@A A 6 A ( ! A A 6     !
	
  ! A  6 A   6       !

A ( " A    OE@A  6 
A A6 Aأ  
6 AУ  
6 Ạ  6 A A 6 A A 6 A A 6 AȠ A 6 A A 6 AР AĠ 6 AĠ A 6 Aؠ A̠ 6 A̠ AĠ 6 A AԠ 6 AԠ A̠ 6 A Aܠ 6 Aܠ AԠ 6 A A 6 A Aܠ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aȡ A 6 A A 6 AС Aġ 6 Aġ A 6 Aء A̡ 6 A̡ Aġ 6 A Aԡ 6 Aԡ A̡ 6 A Aܡ 6 Aܡ Aԡ 6 A A 6 A Aܡ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A "A!AA!AA!  " A  k" !A   
j k k k  k"6 A  6   Ar6A "A!AA!AA!        kjj6Aܣ A6 

  
    
G
   "( "A ( "M  (j KA 


A A ( "     K6   
j!Ạ ! @@@   ( G@  (" 



  
    
F

A ( !	Ạ ! @@  (  	M@   	K

  (" 
 
A ! 
 	  "AA"kAij"" A  k j"   AA 	jI"
! 
 ! A "A!AA!AA!  "A k"!A   
j k k k k"6 A  6   Ar6A "A!AA!AA!      kjj6Aܣ A6  
 Ạ ) ! AjAԣ ) 7   7 Aأ  

-- Chunk 91 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13501-13650
6 AУ  
6 Ạ  6 Aԣ  6 @  A!  A6  " AjK
 
 	 
F
 	 
 	k"  	    AO@ 	  

  Av" AtA j!A ( "A  t" q@ (

A    r6  
!   	6   	6
 	 6
 	  6

  ( !   6     ( 
j6 "A! "A!    kj" !      kj"  k k!A (   F
A (   F
  E@@  "AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
  j!   ! 
     AO@   !

 Av" AtA j!A ( "A  t" q@ (

A    r6  
!   6   6
  6
   6 !

A    k"6 A A ( " " 6    Ar6   !

    ( 
j6A ( !A ( "   " A  k" !A   
j  k"6 A  6   Ar6A "A!AA!AA!        kjj6Aܣ A6 

A  6 A A (  j" 6    Ar6 !

A  6 A A (  j" 6     !

A !A ( "  M
 A    k"6 A A ( " " 6    Ar6   !
 
Aj$  
   !@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
 @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

 AO@   
 Av"AtA j!A ( "A t"q@ (

A   r6  
!   6   6
   6
   6
  (!@@    (
F@  AA  Aj"( "j( "
A !

  ("  (
"6
  6

   Aj !@ ! "Aj"( "E@ Aj! (!
 
 
 A 6 
@ E
 @    (
AtA j"( G@ AA (  Fj 6  


  6  
 A A ( A~  (
wq6 
  6  ("@  6  6
  Aj( " E
  Aj  6    6

  B 7  A  Av"E
 A AK
  A g"kAqvAq AtkA>j
"6
 AtA j!  !@@@@A ( "A Aqt"q@ ( ! !  G
 !

A   r6    6 

  Aqt!@  A
vAqjAj"( "E
 At! " G
 

 (" 6
  6  6
  6  A 6
   6 
   6  6  6


Aԣ ( "E@A A6 A 
Ạ !@ " (!  (!  ( !@  A
j( A@  !

  @  !

  "A kj"!A "	A!
AA!
AA!
 @  !

  j   	j 
k 
k 
kjI@  !

@ A ( G@ 

A A 6 A A 6 
    !

-- Chunk 92 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13651-13800
 
 Aj! 
 
A  A AK6  
  "   "!@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
@ @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6A (   F@A A 6 A A 6 
Aܣ (  O
A " A!AA!AA!AA!A ( E
   k k kA{jAwqA}j" A  Atk"   KE
A " A!AA!AA!A @A ( "     kjj"M
 A ( !Ạ ! @@  (  M@   K

  (" 
 
A ! 
  
   A
j( 
 
A kG
A ( Aܣ ( M
Aܣ A6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
 A  6 

 AI
   A A ( Aj" 6   
 

 Av"AtA j!A ( "A t"q@ (

A   r6  
!   6   6
   6
   6
-# Ak"$  Aj  Aj( 6    ) 7   
# Ak"$   ( "Aj( !@@@ ( 
 
A !A 

 
 ( "(! ( 
!  6  6  A   ((  ( 
 A 6  6  A   ((  ( 
 
@@@ A	O@  "
A 
A !A " AkAAkAAkA{jAwqA}j"A AAAtk"  K M
A AjAAA{j KA!  " "!@@@@@@@ E@  O
 A ( F
 A ( F
 
 " j" I
  k! AI
 

 ! AI
  AjOA   kAI
 ( " jAj! AjA!A "E
  j"  k" Apj"6  A6   AtjA 6Aģ Aģ (   kj" 6 A A ( "   K6 Aȣ Aȣ ( "     K6 
	
  k"AAI
  !      

A (  j" M
  !     k"Ar6A  6 A  6 

A (  j" I
@  k"AAI@  A !A !

  " !      (A~q6
A  6 A  6 

 A
j( "	 Aj( "G@  	6
 	 6

A A ( A~ Avwq6 
 AAO@  !      

  
 

 "E
     AxA| j"  K  
       K  
 
  
(@  A"E
  
  A   
 
^# Ak"$   (
"E@A A+A  
  ("E@A A+A  
  6   6  6   
# A k"$ A!A A ( "Aj6 @A ( AF@A ( Aj!

A A6 
A  6 @@ A H AKr
   6
  6A ( "AL
 A  Aj"6 A A ( "A (  Aj   (    )7 Aj (
  A (  
Aj6  AM

 
# Ak"$   6
   6 
~# A0k"$  Aj!@ (@A ( !

 ( ! B 7
 A ( "6  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj Aj( 6   )7 
 A j" Aj( 6  A
jA 6  ) ! AjA 6   6  7A
A"E@A
A 
  )7  Aj ( 6   A 6   6  A0j$ 
# A0k"$  Aj! (E@ ( ! B 7
 A ( 6  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj Aj( 6   )7 
  A 6   6  A0j$ 
F (! ( !AA"E@AA 
  6  6   A 6   6 
   A 6   6 
    jAjA  kq
   At" A   kr


-- Chunk 93 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13801-13950
 A   k  q
 A A  Avk  AF

   (Axq

   - AqAv

   (Aq

   (AqAG

   - AqE
'     (Aq rAr6   j"   (Ar6

    Ar6   j"   (Ar6

    Ar6
    Ar6   j 6 
#   (A~q6   Ar6   j 6 
    j
    k
   Aj
   Axj
  ("   Aj( 


   (
Aq

   (
Av

   (   (j
9 Av@ !  A 6  A  A|q AF"6  A  At 6 
2   ( !  E@ E@   
   
   

   (  
_# Ak"$   ( " (!  ( !   7  @@   6
  A
j  Aj!  Aj"
 

  Aj$ 
   (  A 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
    A ( " A      
 A AA  
# A k"$  ( !@ ("At"E@

 Aj!@ (  j! Aj! Axj"
 

@@@@@ Aj( E@ !

 E
A !A! AM@ Aj( E

  j" I

A !@ A N@ 
A!

 
 ! A"E

  A 6   6    6   6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj
 A j$ 
A A A  
A A3 AjA A  
 A 
h@@@ ("A N@ ( ! 
A!

 
 ! A"E

   !   6   6   6 
 A 
r# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  AjA  
g# Ak"$   A A
7    6
 A A A
jA    A
j6
 A A A
jA   Aj$ 
   ( @
 
 
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6  Aj  
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  

  (!@@@@  ("
AG@ AF
  (    A
j( (
 !

 AG

  j!@@  Aj( "E@ !

 !@ " F
 Aj!@ ,  "AJ@ !

 Aq!	  F@A !
 

 - A?q!
 Aj
! 	AI@ !

  F@A !
 

 -  A?q!

-- Chunk 94 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:13951-14100
 Aj
! 	AI@ !

@  F@A !
 !

 -  A?q!
 Aj"!
 	AtA q 
A
tr 
Atr 
rA F

  k j! Aj"
 

  F
 @ ,  "AJ
   AjF@ !A 

 Aj! - A?qA
t
! AqAI
   F@ !A 

 Aj! -  A?qAt
! AqAI
  Aq!  FA  -  A?q
  AtA qr rrA F

@@ E@A !

  O@A !  "F


A ! " j,  A@H

 ! !
   !   !
 
AF
 

@ @A ! ! !@  -  AqAGj! Aj! Aj"
 
   (
"O
A ! ! !@  -  AqAGj! Aj! Aj"
 


A !  (
"
 

A !  k"!@@@A   -  " AFAqAk 
A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (! @@ Aj"E
    ( E
 
A
A! A F
      (
 
 A !@  F@A 
 Aj!    ( E
 
 Aj I
 
  (    A
j( (
 
H# A k"$  AjA 6  A 6 B7  6
   6  Aj6    
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  
`A !@@@@@  -  Ak 
 AҀ A

 A A&
 A A&
A !
  A&

   5  
5# Ak"$   6
   6 Aԁ 6 A 6   

# A0k"$  A$j 6  A: ( B7   6 A !  A 6 A 6@@ ("E@ ( ! ("	 Aj( "  	K"E
 (! !@   j"Aj( "@ (  (   ($(
 

   j"(  Aj Aj(  
  Aj!  Aj"
 
 ! 

 ( ! ("	 A
j( "  	K"E
  A
j!  ! !@ Aj( "@ (  (   ($(
 

   -  : (   Ahj) B 7  A|j( ! (!
A !
A !@@@  Axj( Ak 
 At 
j"
(AG
 
( ( !
A!
  Adj!
  6  6  Atj( !@@@  Apj( Ak 
 At 
j"(AG
 ( ( !
A!

  6
  
6 
 
( Atj"(  Aj ( 
  A j!  Aj! Aj"
 
 ! 
   	I@ (    Atj" (   ( ($(
 

A 

A
 A0j$ 
w# A k"$ @   E@ A
j( ! ( A
jA 6  A 6 B7
 A 6  AjE

 A j$ A
  Aj  A j$ 
# Ak"$ @@@@ ( "AqE@ A q
  5  ! 

  ( !A ! @   jA j Aq"A0r A j A

-- Chunk 95 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14101-14250
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k! 

  ( !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k! 

 AA؃  
 AA؃  
 Aj$   

 B`
~# A@j"$ A!@  - 
   - !  ( "-  AqE@ (A A  AA  A
j( (
 
 (   (
(
 
 (A A (
(
 
   (
 !

 E@ (A A A
j( (
 

 A:  A4jA܂ 6   )7  Aj6 )!	 )!
  -  : 8  
7(  	7   ) 7  Aj60 Aj  
  AjA A
   Aj (
 
  (0A A (4(
 !
  A:    :  A@k$ 
]# A0k"$   6
   6 A$jA6  B7 Á 6 A6,  A(j6   Aj6( Aj  
    (   (
   (    ((
 
W# A k"$  A
j( ! ( Aj  Aj) 7  Aj  Aj) 7    ) 7  Aj A j$ 
# A@j"$   6
   6  6  6 A,jA6  A<jA6  B7
 A 6 A64  A0j6(  Aj68  Aj60 Aj  
# Ak"$ @@ @  (!  ( !  (!	@@ 	-  E
  A A (
 E
 A

A ! !@@  j! AO@ Aj   (
! (

 E@A !A 

A ! @@   j-  A
F
   Aj" G
 
A 

  !A
A ! AF@  j"Aj!@  O
   j-  A
G
 A! 

  k!  O


 !
 	  :  @  M@  G
    (
 E
A

  j" ,  AL
A    (
 
  ,  AL

  j!  k"
 

A 
 Aj$ 
  A  A  
    A  
@@@@ AjA|q k"E
     K"E
 @  j-  A
F
  Aj"G
 
  Axj"K


 Axj!A !
A !@  j"Aj( A s"As Awjq ( A s"As AwjqrAxqE@ Aj" M


  M
   AԆ  
@  G@  k!  j!A !@  j-  A
F
  Aj"G
 

A 

  j!
A
!   6   6 
# A k"$   6
  6@@  AO@A! @@  I"E@  G
 

   j",  A@H
  E@   F


 ,  AL
 

 Aj"
 
A 
6   6 A 6A

  6   6 A 6A 
6
@@@@@@  K"  KrE@  K
 E
@  O@  G


   j,  AJ

  6  !

    6( A jA6  A jA6  A jA6  B74 Aȋ 60 A 6L  A j6@  Aj6X  Aj6P  A(j6H

 A jA6  A jA6  A jA 6  A jA6  B74 A 60 A 6L  A j6@  Aj6`  Aj6X  A

-- Chunk 96 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14251-14400
j6P  Aj6H

  6  E

@@  I"E@  F


   j",  A@H
 @ E@  G


 ,  AJ

       
 Aj"
 

A !
  F
 A!@@@   j",  "AL@A !   j" !   AjG@ Aj! - A?q!
 Aq! AqAK
  Atr!

  Aq6$

  " G@ -  A?q!	 Aj!
 	 Atr! AqAI@  A
tr!

A !   G -  A?q 
 AtA q Atrr"A F

  6$A! AI
 A! AI
 AA AI!
  6(   j6, A jA6  A jA6  A jA6  A jA6  A jA6  B74 A، 60 A 6L  A j6@  Aj6h  Aj6`  A(j6X  A$j6P  A j6H

A A+  
   A  A  
 A0j  
|  - !  - @ Aq!  A 
   ( "-  AqE@ (A A A
j( (
 

 (A A A
j( (
 
": 
 AqA G
~# A@j"$     - @  (!A

  (!  ( "-  AqE@A (A A  AA  A
j( (
 
  A (  

@ 
  (A A A
j( (
 E
 A !A

 A:  A4jA܂ 6   )7  Aj6 )! )!  -  : 8  7(  7   ) 7  Aj60A  AjA (  
  (0A A (4(
 
:    Aj6 A@k$ 
  - !  ("@ Aq!  A 
 @ AG
   - 	E
   ( "-  Aq
 A (A A A
j( (
 

  ( "(A A A
j( (
 
": 
 AqA G
~# A@j"$ A  - 
   - !  ( "-  AqE@ @A (A A A
j( (
 

  A (  

 E@A (A A A
j( (
 

 A:  A4jA܂ 6   )7  Aj6 )! )!  -  : 8  7(  7   ) 7  Aj60A  AjA (  
  (0A A (4(
 
!  A:    :  A@k$ 
2A!  -    ( " (A A  A
j( (
 

~ ( "AN@@  jA~j  BV@  Apj"6   j"A|j    B" B~}"B "	B AtA j/  ;   Azj B B AtA j/  ;   Axj B=B AtA j/  ;   Avj B/A pAtA j/  ;   Atj Bȯ%A pAtA j/  ;   Arj B
AqA pAtA j/  ;    j B郱AqA pAtA j/  ;    	B ~}

  B/T@ !

  Axj"6   j"A|j    B/" B/~}"A n"A pAtA j/  ;   Azj A nAqA pAtA j/  ;    j A=nAqA pAtA j/  ;    A lk
AtA j/  ;  
@  "A I@ !

  A|j"j  A n"A lk"AqA n"AtA j/  ;    jA~j  A lkAqAtA j/  ;  
@ Aq"A I@ !

  A~j"j  A n"A lkAqAtA j/  ;  
 AqA
O@  A~j"6   j AqAtA j/  ;  
  Aj"6   j A0j:  
A A
AЅ  
   )   Aj)  
~# Ak"$  A'6 Aj~ B Z@ A0j  B B̕B  A j  B Bɇ B  A j B B̕B  A@k B Bɇ B  A j)  A(j)  A8j) " ) |" T|" )@|" T|  A j)   )P| T||" T|"B>! B B>

 B-  BB
" Bష B )  | A j Aj@  P
  A jA0 (Alj A6  B- B" B" Bష B )  | A j Aj  BT
  A jA0 (Aj  A0r: e A 6
 A A  (" A jjA' k Aj$ 
A+A   ( "Aq"!
  j!@ AqE@A !

 @ ! !@ 	 -  AqAGj!	 Aj! Aj"
 

  	j!
A!@@  (AG@   
  


@@@@  A
j( " K@ Aq
A !  k"!A  -  " AFAqAk
   
  


A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (!	@@ Aj"E
 	  ( E
 

-- Chunk 97 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14401-14550
A
A! A F
   
  
  (    (
(
 
  (
!  (! A !@   F
 Aj!    ( E
 
 Aj
 I!

  (!  A06  -  !	  A:     
  
 A !  k"!@@@A  -  " AFAqAk 
A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (!@@ Aj"E
   ( E
 
A
A! A F
   (    (
(
 
   (
!  (!A !@@  F
 Aj!   ( E
 
 Aj I

   	:     6A 
 
  (    A
j( (
 
# Ak"$  A 6
   A
j@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
 Aj$ 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
   (   
# Ak"$   (  A 6
 A
j@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
4   A:    B7    6  A 6  A 6  A
j 6 
K @ A G@A  (   A
j( ( 

 
A 

  (    A
j( (
 
W# A k"$   A
j( !  ( Aj Aj) 7  Aj Aj) 7   ) 7  Aj A j$ 

   -  AqAv

   -  A qAv
&   BB   (    A
j( (
 
4    (   A
j( (
 :    6    E: 	  A 6
)   BB   (A A  A
j( (
 

~A!
@@ ("
A" A
j( "
(" 
 @ E@

   j!
  !  !@@ Aj!@@ ,  "AJ@ Aq!

  
F@A ! 


 - A?q! Aj
! Aq!	 Aq"AM@  	Atr!

@  
F@A ! 
!

 -  A?q! Aj"!
  Atr! AI@  	A
tr! ! !

  
F@ ! !A 

 Aj"! -  A?q
 	AtA q Atrr"A G


 !
A !A!@@@@@@@@ Awj 
 A F

 E@ 


-- Chunk 98 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14551-14700
 ArgAvAsB !A! !

A !

A !

 !
  I
@ E
   O@  F


   j,  A@H

@ E
   O@  G


   j,  AL

 
   j  k 
(
 @A
@ !	A !A!@@@@@@ 	Ak 
@@@@ B AqAk 
 B`B !A!A !

 B`B0!A!A !

 B`B !A!

A0A   "	AtA
qvAq"A
I j! 	E
 B|B Bp!A!

A ! !

A AI
 A AI
 AA AI
 j!

 B`!A!A !

 B`B!A!
 
   E
 


  k j! !  
G



     A  
 E@A !

  O@  F


   j,  AL

 
   j  k 
(
 
  
A"  
 

     A  
  A
t!A!A!@@@@ Av j"AtA j( A
t" O@  F
 !

 Aj!
  k!  K



 Aj!
@@ A
M@ At!A! A
G@ A j( Av!
A ! Aj" M@ AO
 AtA j( A q!
@  A j( Av"AjF
    k! A AK! Aj! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 AA  
 AAؘ  
 AAȘ  
@@@@@@@@  AO@  AI
  AsjA+I  AtjA
Ir  AtjAI  AtjAIrr  A qA
F  AujA"Ir  AˑujA
Irr
  A8I
Aȍ !  AvAq!@@ Aj!  - "j!  -  "G@  K
 ! "A G


  I
 AK
 A j!@@ E
 Aj! -   Aj!  AqG
 
A !

 ! "A G


  Aq! A !A!@ Aj!  -  "AtAu"A N
  A F
 -  A qAtr! Aj
!   k" A H
 As! A G
 


A !  AvAq!@@ Aj!  - "j!  -  "G@  K
 ! "A G


  I
 AK
 A j!@@ E
 Aj! -   Aj!  AqG
 
A !

 ! "A G


  Aq! A !A!@ Aj!  -  "AtAu"A N
  A F
 -  A qAtr! Aj
!   k" A H
 As! A G
 

 Aq

-- Chunk 99 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14701-14850
  A  
 AA  
A A+A  
  A  
 AA  
A A+A  

     
~A!@ ("A' A
j( (" 
 A !A!@~@@@@@@@  ( " Awj 
  A F

  
  E
A!  !

A !

A !

  !

  ArgAvAsB 

  ArgAvAsB 
!A!  !
@ !A ! ! @@@@@ Ak 
@@@@@ B AqAk 
 B`!A ! A!

 B`B !A ! A!

 B`B0!A ! A!

 B`B !A ! A!

A0A   "AtA
qvAq" A
I  j!  E
 B|B Bp!A!

 A'  !

A ! A!

 B`B!A!
     E
 

 
~@ E
 A  Ayj"  K! AjA|q k!A !@@@@@@@  j-  "AtAu"A N@  kAq AFr
@  O
 @  j"Aj(  ( rAxq
 Aj" I
 

  O
@  j,  A H
  Aj"G
 


B !	B!
@@@@@@@@@ A j-  A~j 
 Aj" I
B !	


B !	 Aj" O

  j-  ! A~j"E
 A
F


B !	 Aj" O

  j-  !@@@@ A~j    
 AK AjAqAKr AtAuA Nr



 A jAqA0O



 AtAuAJ AKr


 Aj" O

  j-  AqAG
B !
 Aj" O

  j-  AqAF
B !	B!



 AqAG
	

 AtAuAJ AOr


 AjAqA
O@ AqAG AKr AtAuA Nr


 AtAuAJ AKr

B !
 Aj" O
  j-  AqAG


  j-  AqAG

 Aj!

 Aj!
  I



B !	B!


B !	

B !

   	  
7  A6 
   6  Aj 6   A 6 
# A0k"$   - @   Aj-  :  AjA 6    6 A 6
 A
j( !   Aj6 ( A,jA6  B7
 A܈ 6  Aj6(   Aj

 A 6
   6 A
j( !  ( A,jA6  B7
 A 6  Aj6(   Aj
 A0j$ 

   1   

-- Chunk 100 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:14851-15000
# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO@ AA؃  
 A A   jAjA   k Aj$ 

   )  
# Ak"$   ( !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO@ AA؃  
 A A   jAjA   k Aj$ 
~# Ak"$    E@  A : A

@@@@ -  AUj 
 AG


 Aj"E
 Aj!
@@ E
 -  APj"A
O
  B B
B  )PE@  A: A

 Aj! Aj! ) " |" Z
 
  A: A

  Aj 7 A 

  A: A
:   Aj$ 
~# A k"$    E@  A : A

@@@@ -  AUj 
 AG


 Aj"E
 Aj!
 Aj!@@ E
 -  APj"A
O
  B B
B  Aj B B
B  )B R ) " ) |" TrAF@  A: A

 Aj! Aj! )"	 |" 	T"  |" T  	ZAG
 
  A: A

  Aj 7   Aj 7 A 

  A: A
:   A j$ 
~# A0k"$ A'!@  B T@  !

@ A	j j"A|j    B "B ~}"AqA n"AtA j/  ;   A~j  A lkAqAtA j/  ;   A|j!  B/V ! 
 

 "A J@ A~j" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
N@ A~j" A	jj AtA j/  ;  

 Aj" A	jj A0j:  
 A A  A	j jA' k A0j$ 
# Ak"$   -  !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO@ AA؃  
 A A   jAjA   k Aj$ 
# Ak"$   ( !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO@ AA؃  
 A A   jAjA   k Aj$ 
~# Ak"$   ) !A! @@  E@A ! 

   jAj Aq"A0r A j A
I:    Aj!  B"B R
 
  AI
   AA؃  
 A A   jA  k Aj$ 
~# Ak"$   ) !A! @@  E@A ! 

   jAj Aq"A0r A7j A
I:    Aj!  B"B R
 
  AI
   AA؃  
 A A   jA  k Aj$ 

  (A A A
j( (
 
# Ak"$   ( " -  AG@ (A A A
j( (
 

  (A A A
j( (
 :   6  A : 	 A 6   Aj6
  A
j - " (" E
  Aq!A 
 @  AG
  - 	E
  ( " -  Aq
 A  (A A  A
j( (
 

 ( " (A A  A
j( (
 
AqA G
 Aj$ 
# Ak"$   ( ! @@@ ( "AqE@ A q
  1   

  -  !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k

  -  !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k
 Aj$ 
 AA؃  
 AA؃  

   (  
# Ak"$   BB  (A A	 A
j( (
 7    6
 A A
 A
jA    Aj6
 A A	 A
jA  - " - E
  Aq! A  
  ( " -  AqE@  (A A  A
j( (

-- Chunk 101 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:15001-15150
 

  (A A  A
j( (
 
 Aj$ AqA G
  A
t!A!A!@@@@ Av j"AtA j( A
t" O@  F
 !

 Aj!
  k!  K



 Aj!
@@ AM@ At!A! AG@ A j( Av!
A ! Aj" M@ AO
 AtA j( A q!
@  A j( Av"AjF
    k! A AK! Aj! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 AA  
 AAؘ  
 AAȘ  
3 @  !@  -  :   Aj! Aj! Aj"
 

  
!  @@   :    Aj!  Aj"
 


C@ E
 @  -  " -  "F@  Aj!  Aj! Aj"



  k!
 
n~   B" B"~"  B "~"  B "	~|"B |"
7    
 T  ~  ~|  	~|  TB  B ||7

 A 
                	   
             
   
   
                               Coindenomamountblocktransactioncontractheighttimechain_idsenderfundsaddressindex/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/exports.rs     a           a   f        a         wasmcustombankBankMsgburnsendto_addressWasmMsgclear_admincontract_addrupdate_adminadminmigratenew_code_idmsginstantiatecode_idlabelexecuteSubMsggas_limitReplyOnneversuccesserroralwaysokEmptyEventtypeattributesAttributekeyvalueResponseeventsurlembedded ,    /    projectdescriptionmarketingrecipientownerspenderexpiresmintercapsvgpng          transferincrease_allowancedecrease_allowancetransfer_fromsend_fromburn_frommintupdate_marketingupload_logo      Q    U             
    	    	            
   /code/packages/storage-plus/src/path.rs d '   &   M       attempt to subtract with overflow   d '   &   E   d '   &   U                 A 
    A 
allowance   d     logoat_heightat_time$ 	   -        ExpirationContractVersionversioncontract_info      
            
   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs   K   L	     cw2::ContractVersioncw20::query::AllAccountsResponsecw20_base::state::TokenInfocosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>core::option::Option<cw20::query::MinterResponse>cw20::query::DownloadLogoResponsecw20_base::msg::QueryMsgcw20::query::BalanceResponsecosmwasm_std::types::MessageInfocw20::query::AllAllowancesResponsecosmwasm_std::math::uint128::Uint128cw20_base::msg::InstantiateMsgcw20::msg::Cw20ExecuteMsgcw20::query::MarketingInfoResponsecosmwasm_std::types::Envcw20::query::AllowanceResponsecw20::query::TokenInfoResponsecw20::logo::Logocosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>            
   
                    called `Result::unwrap()` on an `Err` value !          "   LogoInfoAllowanceInfoMinterResponseBalanceResponsebalanceAllowanceResponseTokenInfoResponsenamesymboldecimalstotal_supplyAllAccountsResponseDownloadLogoResponsemime_typeAllAllowancesResponseallowancesMarketingInfoResponse                        missing field ``4
    C
    duplicate field `   T
    C
    unknown variant ``, expected    x
    
 
   invalid base64: 
    invalid Uint64 '' - 
    
    invalid Uint128 '   
    
    ullactiontoken_info<?xml marketing_infoimage/pngimage/svg+xmlName is not in the expected format (3-50 UTF-8 bytes)Ticker symbol is not in expected format [a-zA-Z\-]{3,12}Decimals must not exceed 18crates.io:cw20-base0.10.0-soon4Initial supply greater than capInvalid png header   

    Invalid xml preamble for SVG(
 
   Logo binary data exceeds 5KB limit  L
 "   Minting cannot exceed the cap   x
 
   No allowance for this account   
 
   Allowance is expired
    Invalid zero amount 
    Cannot set to own account    
    Unauthorized$
 
   initial_balancesall_allowancesall_accountsdownload_logo n	    
 
       
 	   H
    V
 
   !
    b
 
   start_afterlimitTokenInfoMinterDatapackages/storage-plus/src/helpers.rs A 
attempt to add with overflow
 $   >      
 $   >   	   
 $   A      
 $   A   	   only supports namespaces up to length 0xFFFF
 $   T   	   #         $   packages/storage-plus/src/iter_helpers.rs    )   (      %         &   ' A 
(   ) A 
*         +   ,   -   
      .   /   0   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  o K   L	     1         2   3   4   1                     5   
      6   7   0   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  K K   L	     cw20::receiver::ReceiverExecuteMsg  8                     Cw20ReceiveMsgsenderamountmsgReceiverExecuteMsgreceive  A   
      B   C   D   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  k K   L	     E                          Conversion error:       Divide by zero:     Overflow:   
 
   Error serializing type :    0    G    Error parsing into type \    G     not found        
   Cannot decode UTF8 bytes into string:    &   Invalid data size: expected= actual= 
       Invalid Base64 string:      Generic error:  $    Recover pubkey error:   <    Verification error: \    ConversionOverflowsourceE         F   DivideByZeroE         G   OverflowE         H   SerializeErrsource_type E         I   msgParseErrtarget_typeNotFoundkindInvalidUtf8InvalidDataSizeexpectedE         J   actualInvalidBase64GenericErrRecoverPubkeyErr   E         K   VerificationErr E         L   ShlShrPowMulSubAddCannot  with  and             OverflowErroroperation  E         ;   operand1operand2ConversionOverflowError E         M   valueCannot devide  by zero Q    _    DivideByZeroErroroperandP         Q   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rsInvalid UTF8    U   4   
   integer overflow when calculating buffer size    U   /      invalid base64: T    Unknown error:  l    Invalid recovery parameter. Supported values: 0 and 1.   6   Invalid signature format    Invalid hash format     UnknownErrerror_codeR         S   InvalidRecoveryParamInvalidSignatureFormatInvalidHashFormat        /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/sections.rs  h b             attempt to multiply with overflow   h b       A 
attempt to add with overflow    attempt to subtract with overflow   h b   9      Cannot read section length  h b   7   	   okerror         errorrequestresponseaddrkindU   
      V   W   D   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  # K   L	     X                     X         Y   TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other./usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/imports.rs   
 a   W   
   X         Z   [ A 
\   ] A̼ 
input too long for addr_validateaddr_validate errored:  l
    input too long for addr_canonicalizeaddr_canonicalize errored:  
    addr_humanize errored:  
    MessageTooLong must not happen. This is a bug in the VM.
 a         
 a        InvalidHashFormat must not happen. This is a bug in the VM. 
 a   +     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   
 a   *     
 a   K     
 a   J     okerror 
          ^   
      _   `   D   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  s  K   L	     a         b   c   d   a                     attempt to add with overflow/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/math/uint128.rs  
! f         SystemErrorinvalid_requestinvalid_responseno_such_contractunknownunsupported_request!    !    !    !    !    kind"    addr
"    errorresponse   ("    -"    request ("    H"    e   
      f   g   D   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  " K   L	     cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>h                     missing field ``#    #    duplicate field `   #    #    unknown variant ``, there are no variants   #    $    `, expected #    ,$ 
   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/memory.rsRegion pointer is null  H$ `   9      Region starts at null pointer   H$ `   ?      Unknown error:   %    Invalid recovery parameter. Supported values: 0 and 1.  % 6   Invalid public key format   X%    Invalid signature format|%    Invalid hash format %    Generic error   % 
   Batch error % 
   UnknownErrerror_codeh         S   InvalidRecoveryParamInvalidPubkeyFormatInvalidSignatureFormatInvalidHashFormatGenericErrBatchErr/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/iter/adapters/enumerate.rs h& [   .   	 A 
attempt to add with overflow    attempt to multiply with overflow   i         j   k   /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/iter/traits/accum.rs   8' U         /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs   ' U        ' U        ' U     
   ' U        ' U     
   ' U        ' U     
   ' U        ' U     
   ' U        ' U     
   ' U        ' U     
   ' U        ' U     
   ' U   n   / A 
attempt to subtract with overflow   ' U     7   ' U     $   ' U     >   ' U     )   ' U   !     ' U   *  )   ' U   *     ' U   .  )   ' U   .  (   ' U   -     ' U   3     ' U   A     ' U   D  '   ' U   D     ' U   G  	   ' U   X     ' U   f  )   ' U   x  
   ' U        ' U        ' U     1   internal error: entered unreachable code:   t* *   Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengths* T   ' U        ' U     
   ' U     	   Overflow when calculating output buffer length  ' U      
   t+     Buffer is full  |+    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/ser/mod.rs A 
attempt to subtract with overflow   + ^      	   + ^      	   D,     JSON has a comma after the last value in an array or map.JSON has non-whitespace trailing characters after the value.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.Object key is not a string.Invalid unicode code point.Invalid typeInvalid number.Invalid escape sequence.Expected this character to start a JSON value.Expected to parse either a `true`, `false`, or a `null`.Expected this character to be either a `','` or a `'}'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` ora `']'`.Expected a high surrogate (D800–DBFF).Expected this character to be a `':'`.EOF while parsing a JSON value.EOF while parsing a string.EOF while parsing an object.EOF while parsing a list.Control character found in string./usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/de/unescape.rs  T/ b   %      T/ b   3   ) A 

-- Chunk 102 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:15151-15300
attempt to subtract with overflowNon-hex ASCII character found  T/ b         /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/de/mod.rs   00 ]   $   	   attempt to add with overflow00 ]   }   "   00 ]      ,   n         o   p   q         r   Invalid last symbol , offset .   1    1 	   
1    Encoded text cannot have a 6-bit remainder. 81 +   Invalid byte    l1 
   1 	   
1    Overflow when calculating number of chunks in input/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs1 U      
   !"#$%&'()*+,-0123456789@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdehijklmpqrABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+,./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ 	






 !"#$%&'()*+,-./0123456789:;<=>?>?456789:;<= 	






 !"#$%&'()*+,-./0123 6789:;<=>?	






 !"#$%&'()*+,-./012345 	






 !"#$%&'()*+,-./0123456789:;<=>?>456789:;<= 	



?


 !"#$%&'()*+,-./0123>?456789:;<= 	






 !"#$%&'()*+,-./01238 7 6 5 4 3 /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs   9 U      '   usize overflow when calculating b64 length  9 U      
   9 U      3 A 
attempt to add with overflow9 U          9 U      :   9 U      %   9 U             attempt to subtract with overflow   9 U      /   9 U      
   9 U      6   9 U      !   9 U     .   9 U     	   9 U     	   9 U   
  .   9 U   
  	   9 U   
     9 U   
  	   9 U     	   internal error: entered unreachable code:   ; *   Impossible remainder;    9 U   *     9 U   ;  	   l3 ,3 2 2 l2 ,2 `one of M<    ,   \<    L<    L<    ` or `  L<    x<    L<    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.130/src/de/mod.rsexplicit panic < U        x         y   z   {         |   ~                  called `Option::unwrap()` on a `None` value        library/std/src/panicking.rs|= 
        |= 
     
                  ~                  
         ~                                          /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/fmt/mod.rs (> K   u                   a formatting trait implementation returned an errorlibrary/alloc/src/fmt.rs >    G  
   library/alloc/src/raw_vec.rscapacity overflow   > 
   /     )library/alloc/src/vec/mod.rs) should be <= len (is `at` split index (is    d?    M?    0?    1? 
   K  
   FromUtf8Errorbytes              error               number would be zero for non-zero typenumber too small to fit in target typenumber too large to fit in target typeinvalid digit found in stringcannot parse integer from empty string.. @    called `Option::unwrap()` on a `None` value ?                  index out of bounds: the len is  but the index is   @     A    `:  ?     )A    library/core/src/fmt/builders.rs   
                   <A     2   !   <A     3       {
,
,  { } }(
(,)
[            ]library/core/src/fmt/num.rsA    e      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899assertion failed: *curr > 19  A                           library/core/src/fmt/mod.rs B    *  
   B    1     library/core/src/slice/memchr.rs4C     Z      range start index  out of range for slice of length dC    vC "   range end index C    vC "   slice index starts at  but ends at  C    C 
   incomplete utf-8 byte sequence from index   C *   invalid utf-8 sequence of  bytes from index 0D    JD    library/core/src/str/validations.rs Aъ 
3 A 
lD #        [...]byte index  is out of bounds of `  E 
   E    (A    begin <= end ( <= ) when slicing `  E    E    E    (A     is not a char boundary; it is inside  (bytes ) of `E 
   $F &   JF    RF    (A    library/core/src/unicode/printable.rs   F %   
   
   F %      6    	





	

 +,-
.012	xy0WX

KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
)EIWde
EIde񃅋HINOWY^_[\
mqno

_}~
FGNOXZ\^~rstu/_&./ߚ@0NOZ['/no7=?BESgu  _"D5(
/4
PU

	

:W
PC-
:
%_ mj%Y
	

j
Y+F
,
1
,

!?L-t<<8+/- !
/;	-t



7	\*8
8F
t

ZY	

	L
1&
mx(*L
 	




$jk
	 
';>NO	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_Zb'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юyno^"{-f/.
1
$	
+D*$$(4
7	
9c	0!@8K/
	@ '
	6:
PI73
3.
&RN(*V

-- Chunk 103 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw20_base.wasm:15301-15389
	N
C
H'	u
?A*;
Qb
H
^"E


9
6,<dS
H	
FEHS
9F

GI7
9
62
fu
Ċ/тG9*`&
F
([eK9@
*	1k
	`
snF
W	GBP+-p: )L
DL=<U4,d
V
8

,	

t
Y

8
("NT
		
)%
library/core/src/unicode/unicode_data.rs L (   K   (   L (   W      L (   R   >               SomeNoneErrorUtf8Errorvalid_up_toerror_len                   ` ] 

 
, +*0+o`,,
- 55a6
6$
a78/!90
aF
JjaNOoN!OeO !P Q0aSTT  .UU p  -H
0e#
[
:			+w 7

:	
9

9:

;
	(9

:

9	

HQ
b	
J7
$	f
  


@
	-w"v	:
0?0(	
 8:
: ! `  i 
 P 
&
.0'C
/3*     (  
681E$>
4	
_9QUje 	
 
(	.
 RzH  ; ?Q  
 72    m `          0`0q	d  

/ 

=== File: benchmarks/testdata/version.txt ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/version.txt:1-1
v0.10.0-soon4

=== File: benchmarks/testdata/cw1_whitelist.wasm ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1-150
 asm   `` `` `` ` ` `  `~` `` `~`~ `~ `~~~~ `~ ` ``~`~~envdb_read envdb_write env	db_remove envdb_scan envdb_next env
addr_validate envaddr_canonicalize  env
addr_humanize  envsecp256k1_verify envsecp256k1_recover_pubkey 
enved25519_verify enved25519_batch_verify envdebug env
query_chain         
                      




	               	   
              	       
 
	              p A 
 A؋ 
 A؋ 

memory 
instantiate Xexecute Zquery \interface_version_8 tallocate u
deallocate vrequires_staking trequires_iterator t
__data_end
__heap_base	 A
87;<C@9B?A=8dge;;}yc|~d;xw{a_bd;`d;;;8;;88;;;B<;B;

~# A0k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A /  ;   AjA -  :    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  A j r Aj  ( " (( ($@ 
A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A0j$ 
# A k"$ @  j" I
   Aj( "At"   K"A AK!@ @ AjA6   6   ( 6

 A 6
  A AjD ( AF@ Aj( " E
 (   
   )7  A j$ 
 
~# A0k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( ! A j  ("@@@ ( AG@ A(j-  ! ($! @ At! AqE! Aj!@ Aq@ (" ( F@  A (!
  Aj6 (  jA,:  
 A j   ( AF
 A j!A! A`j"
 
A !
A ! Aj  AqA G (AF


 A
j A jAr"Aj( 6   ) 7

 A
j A,j( 6   )$7
 Aj A
j( "6   )"	7   A
j 6    	7A!
   6  A0j$ 
~# A k"$  A@k @@@ (@AG@  (D6  A j-  : 
 A@k AjA܀ A Aj (@AF
 (!@ - 
@ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : 
 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  B 74 A ( 60 A@k A0jA  )  Aj)  A@k
 A j  (0 (8@ (0"E
  (4E
  
 ( AG@   A 

 Aj A,j( "6   )$"7  A
j 6    7  A6 

  A6    A@kAr") 7  A
j Aj( 6 

A A7 A jA A  
   )D7  A6   A
j A j( 6 
 A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  (  (A!@ (AG@A !

 Aj A
j( "6   )"	7   A
j 6    	7
   6  A j$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A j$ 
# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  Aj  A!@ (AG@A !

 Aj A
j( "6   )"7   A
j 6    7
   6  A j$ 
,~# Ak"$  Aj   Aj Aj  ~@ - AqE@A!

 - A G@A!

 Aj Aj Aj - ! Aj ("@@@@A - AqE
  - ! Aq! AjAr! AjAr! Aj!A!
@@@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	

A Aq
  Aj  - AqE
 - !

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:151-300
 Aq"A"G@A A G
A

 Aj  - AqE
A - A"G
  Aj  (! (! (! (" (AF
 E@ A{j
@@@@ A{j 
 A A
A 

 A A

A

 )  B޹ر R
 A

A
 @ 

 	E@ AjArA A  Aj) 7 (! (!

 
 AjArA A  Aj) 7 Aj( ! (! E
 	

 A A

 	E
 AjA A

 A A


 
AF
 AjA A

  Aj) 7 (! (!

 )  B޹ر R


 @ AjA A  Aj) 7 (! (! 



 Aj  ("AG
 Aj  - AqE@A! 
!


 - A G@A! 
!


  Aj  -  Aj (" - AqE@A !A

 - !Aq!A !@@@@@@@ Aq"A,G@ A F
 Aq
A	!


 Aq@A!


  Aj  - AqE@A!


 - !
 Aq"A"G@A!A A F




 Aj  - AqE@A!


 - A"G@A!


  Aj  (!
 (! (! (" (AF

@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 E
 AjArA A 
E



 
 AjArA A Aj Aj) 7   )7


 Aj @ ("AG@ Aj Aj( 6   )7  6

 Aj  (AF

 Aj Aj) 7   )7


 Aj  Aj ("AF@ Aj  (! (!
 (! (AG
 Aj( 

 Aj( ! (!
 Aj( 
6  Aj 6  Aj 
6   6


 Aj  ("AF
 Aj( ! Aj( ! (! 
E

 


 Aj A ! - ! - Aq
 
A!

  7  6 )! Aj Aj ("AG@ Aj) ! (! @ 	
 
E
 

 Aj Aj ("AG@ Aj) ! (! @ 	
 
E
 

  A8j 7   A4j 
6   A0j 6   A,j 6   A j 7   A
j 6   Aj 	6   Aj B >   A
j 7    6  A(jA  
 
AF6 B 

 Aj @@@@ ("AF@ A@k  - @AqE@A! !


-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:301-450
 - AA G@A! !

  A8j  (8!  - <Aq":   6 A0j  - 0AqE@A!

 - 1!A !	B ! !B !@@@@@~@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq
   A(j  - (AqE
 - )!

A ! A : 
 Aq"A"G@AA A F!

 A j  -  AqE
 - !A"G@A!

  Aj  (!
 (! (! (! (AF
 E@ A|j
@@@@ 
A|j 
 A A
A 

 (  AҵG
A

 )  BЅ״ R
 A

A
 @ 

 BR
 BR

 	
	 AjArA A Aj( !
 Aj( ! Aj( ! (!

 A A

 BQ
 Aj Aj (AF
 )!B!

 (  AҵG

 BR
 AjA A


 )  BЅ״ R


 	@ AjA A Aj( !
 Aj( ! (! (! 
E


 Aj @ ("AG@  )7  Aj Aj( 6 

 Aj  (AG@ (! (!
 (!	

 (!
 Aj( !
 (! (!

 Aj  ("AF@ Aj  - AqE@A!
	
 - A"G@A!
	
  Aj  (AF
 (! (!@ (E@ Aj  

 Aj  ( E
  
 (AG
 (!

 Aj( !
 )

 AjA A
	
 Aj( !
 Aj( ! (!

 Aj  ("AG@ Aj( !
 Aj( ! (! 
E
 	

 B ! !
 ! ! 
!

 AjArA A Aj( !
 Aj( ! Aj( !

 AjArA A Aj( !
 Aj( ! Aj( !

 Aj (6   )7  ("6

 (!
	
 (!
 )
"B ! !

 )!B!

 Aj( !
 Aj( ! (! (!

 Aj @ ("AG@ Aj Aj( 6   )7

 Aj  ("AF

 Aj( !
 Aj( ! (!

 Aj A ! - ! - Aq
 
A!

 Aj( !
 Aj( ! (!

A!
 
E 	Er

 	
  
6  6


 Aj @@@@~@ ("AF@ Aj A! - AqE
 - A F@  Aj Aߎ A ("AG
A !


 Aj  - AqE
 - A G@A! ! B 7


-- Chunk 4 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:451-600
  Aj  -  A j (" - xAqE
 - y!Aq!A !
@@@@@@@@@ Aq"A,G@ A F
 Aq
A	

A Aq
  A j  - pAqE

 - q!
 Aq"A"G@A A G
A

 A j  - hAqE

A - iA"G

  Aj  (!
 (! (! (" (AF

@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 
AG
 AjArA A

 
AF
 AjArA A Aj Aj) 7   )7


 Aj @ ("AG@ Aj Aj( 6   )7  6

 Aj  (AF

 Aj Aj) 7   )7


 Aj  ("AG
 A j  - `AqE@A!

A
!@@@@ - a"ASj   
 AOjAqA	I
A!

 A !

  A j  APjAq! - Y"APjAqA	K
  - XAqE
 @  B
~"B 
 " APjAqj" I
 A j  - Q"APjAqA	K
 - PAq
 

A!

 A j A ! - I! - HAq



 Aj Aj( 6   )7
 Aj )7  Aj Aj( 6   6

 Aj  ("AF
 Aj) 

 Aj) 

 Aj) 
! (!  7

A

A
! Aj 
6  Aj 6  Aj 6   6
 Aj( ! (!  Aj) 7

 ! B 7

 Aj( ! Aj( ! (!

 
! Aj 
6  Aj 6  Aj 6   6
 
E Er

 
 Aj( ! Aj( ! Aj( ! (!
  6  6
	
A!


 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj  ("AF

  Aj) 7 (!

 Aj A ! - 	! - Aq
 
A

A !	

A
!  6  6
 
E Er

 
 E 	Er
  	 )!

 )!
 Aj 7   6  6  AjA A Aj
B
7  Aj$ 
# A k"$   6
  6 A$jA6  B7 A 6 A6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A6,  A(j6   Aj6( B 74 A ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
	~# Ak"$  A8j @@@@@@@@@@@@@@@ - 8Aq@@@ - 9"Aj# 
 A^j
          
 Aj  - Aq@ - 	!@ A,F A Fr A Fr
    - ! -  Aq
 

  A6 

  A6 

 Aj  - AqE
 - A"G

-- Chunk 5 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:601-750
  A j  A j( ! A j( ! (l! (hAF
 E@  A6 

  A6  E Er

 


 A j  -  AqE
 - !A G
  Aj  (!  - 
Aq: d  6` A j A jK@ - hAG@@ - iE
 A j A jK - hAG
 

 A j" A j( 6   A j) 7P (l"AG
	
 A j  (h"AF@  A6 


 A j A j( "6   )l"7P  A
j 6    7   6 


 A0j  - 0AqE
 - 1A G
	  A(j  ((!  - ,Aq: d  6` A j A jJ@ - hAG@@ - iE
 A j A jJ - hAG
 

 A j" A j( 6   A j) 7P (l"AG


 A j  (h"AF@  A6 


 A j A j( "6   )l"7P  A
j 6    7   6 


  A
6 


  A6 
	
  A6 

  A6 

  A
j A j( 6   Aj 6    6   6 

  A6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 

  A6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 
 Aj$ 
# A k"$   A!@@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
@ E@A !@@ A N@ 
A!

 
 ! A]"E

   !  A
j 6   Aj 6    6

   6  A
j 6   Aj 6 
A !

  A6

  A6

   6  Aj 6   A
j 6   Aj 6 
   6  A j$ 
 A 
~# A@j"$  A0j ( "@@ (0"AF@ A(j A!@@@ - (Aq@ - )"ASj
  A6

  A
6

   AjB 7 A !

 AOjAqA	O@  A6

  A j  APjB!@@ - !"APjAqA	K
  -  AqE
 @  Aj B B
B  )PE@  A
6  AjA 6   AjB 7 

 )" APjB|" T
 Aj  - 	"APjAqA	K
 - Aq
 

  Aj 7 A !

  A
6  AjA 6   AjB 7 

  Aj )47   Aj A<j( 6    6
A!
   6  A@k$ 
# A k"$   6
  6 Aj  @ - AG@  A 6   Aj )7 

  - : ' A jA6  A jA6  B7< A 68 A6T  A j6H  A'j6X  Aj6P A(j A8j A8jAr A(j A68@ (("E
  (,E
  
   )87  A6   A
j A@k) 7 
 A j$ 
# A@j"$ @@@ A N@ 
A!

 
 ! A]"E

   ! B 7 A ( 6  Aj A   AjE@  A
j 6   Aj 6    6  Aj ) 7   A6   Aj Aj( 6 @ ( AI
  Aj( " E
  Aj( E
   
 A@k$ 
A A7 A8jA A  
 A 

# A k"$  A0j   A(j A0jA!
@@ - (AqE@A!

 - )A G@A!

 A0j A j A0j ( !  - $Aq": D  6@ Aj  - AqE@A!

-- Chunk 6 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:751-900

 - ! A jAr! A jAr! !@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	! E


 Aq
   Aj  - AqE
 - !

A ! A : D
 Aq"A"G@AA A F! E


 Aj  - AqE
 - 	A"G@A! E


  A j  (h!	 (d! (`! (\! (XAF

 E@ A{j
@@@ 	A{j 
 A A
A 

 A A
 A

A
 @ 

 E
 
 A jArA A A j( !	 A j( ! A j( ! (\! 
E
 

 A A


 E
 A jA A A j( !	 A j( ! (\! (X! E


 A A

 
 A j A@k
 (XAF
 (d!
 (`!
 (\!


 A j  (X"AF@ A j  (d! (`! (\! (XAG
 A j( !	 ! 

 A j( !	 (\! A j( 

 A j( !	 (d! (`! (\!


 A jA A A j( !	 A j( ! (\! (X!


 A j A0j (X"AG@ A j( !	 A j( ! (\! 
@ 
 
@ 
At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 
E 
AtEr

 


 A j A0j (X"AF
 A j( !	 A j( ! (\! 
@ 
 
@ 
At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 
E 
AtEr

 


 A jArA A A j( !	 A j( ! (\! A j( 
!A !
 E


  Aj 
6   Aj 
6   Aj 6   A
j 6   Aj 
6    6A !


 !


 A j @ (X"AG@  ) 7  Aj Aj( 6 

 A j  (H"AF

 A j( !	 A j( ! (L! E


  A ! - ! -  Aq
 
A! E


A! E

 
@ 
At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 
AtE 
E Err
  
 
E Er
  
 A j 	6  A j 6   6\  6X  AjAȈ A  A j

   
6  A j$ 

-- Chunk 7 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:901-1050
	~# A k"$  A8j ( "@@@@ (8"AF@ A j  -  Aq@ - !A G
  Aj  - 
 (! A 60 B7( Aj A! - AqE@A!

 - !Aq!A! A j!	@@@@ "A,G@ A F
 @A !

A
	
  Aj A - AqE
 - 	!
A A F
 A8j 6 (8AF@ A j5 !
 )@!
 (<

 (P"

 ((! ),!
 A8j  
B ! 
! (8"AF@   6  A 6   A
j 6   Aj 6 
	
  Aj )<7   Aj A j( 6   A6    6 @ At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 E AtE Err
 

 	) !
 )@!
 )X!
 (T!
 (, F@ A(j F ((! (0!
  Atj" 6 Aj 
7  Aj 
6   
7  
7   Aj"60   - ! -  Aq
 


  B 7 

  Aj )<7   Aj A j( 6   A6    6

  B7 

A
! ((! E
  At!A !@@  j"Aj( "E
  Aj( E
  
  A j"G
 

 (,"E AtErE@ 
   6  A6   Aj 
>   Aj 
7 
 A j$ 
:~# Ak"$    @@@@@@@@@@ ( AG@ (" (F@  A (!
 (  jA :    Aj6 Aj A A (AF
 (" (F@  A (!
 (  jA::    Aj6 Aj  (AF
  ("60@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : 4 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jB͛ٲ 7    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  (! Aj  A
j( " (AF
 Aj-  !@@ A8j ("
   A lj! A,j! E! AjAr!
 AjAr!	@ Aq@ 
(" 
Aj( F@ 
 A 
(!
 
 Aj6 
(  jA,:  
 Aj 
@@@@@@@@@@@@@@@@@@ (AG@ (! ATj"
) !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  jA;    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj6  Aj  @ (AG@ ( " ( F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A ( !
 (  j"A /  ;   AjA -  :    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj"6 @@@@@ 
Aj( Ak 
 (  F@  A ( !
  Aj6  (  jA :   Aj A A (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @ A`j( AG@ Aj A A (AF
  - : l  (6h Aj A jA A
 Adj (AF
 Aj A jA A Apj (AF
 Aj (h - l

 Aj A A (AF
  - : l  (6h Aj A jA A Adj (AG@ Aj (h - l





 (  F@  A ( !
  Aj6  (  jA :   Aj A A@@ (AG@ ( " ( F@  A ( !
  Aj6  (  jA::   Aj  (AG
 Aj 
Aj( 6   
) 7

 A j Aj( 6   )7H

 Aj ( -  (AG

 A j Aj( 6   )7H

 (  F@  A ( !
  Aj6  (  jA :   Aj A A (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @@@ Adj( Ak 
 Aj A A
 (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A jA A
 Atj (AF
 Aj A j Aj (AG@ Aj (h - l



 Aj A
 A
 (AF


-- Chunk 8 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1051-1200
  - : l  (6h Aj A jA A	 Ahj (AF

 Aj A j Atj (AG@ Aj (h - l




 Aj A̅ A (AF

  - : l  (6h Aj A jA A	 Ahj (AF

 Aj A j Atj (AG@ Aj (h - l




 (  F@  A ( !
  Aj6  (  jA :   Aj A A
 (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @ A`j( AG@ Aj A A (AF

  - : l  (6h Aj A jA A Adj (AF
 Aj (h - l


 Aj A˂ A (AF
  - : l  (6h Aj A jA A	 Adj (AG@ Aj (h - l






	
 (  F@  A ( !
  Aj6  (  jA :   Aj A A (AF
 ( " ( F@  A ( !
  Aj6  (  jA::  @@@@@ Adj( Ak 
 Aj A A
 (AF
  - : l  (6h Aj A jA A
 Ahj (AG@ Aj (h - l





 Aj A A
 (AF
	  - : l  (6h Aj A jA A
 Ahj (AF
	 Aj A jA A Atj (AG@ Aj (h - l



	
 Aj A A (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A jA A
 Aj)  (AF
 Aj A j Atj (AG@ Aj (h - l




 Aj A A
 (AF
  ("6h@ - @ Aj( !

 ("
 Aj( F@  
A (!

  
Aj"6 (  
jA,:  
 A : l Aj"(  F@  A Aj( !
 (  jA":   Aj"
 Aj"6  (  kAM@  A 
( !
 (  j"A (  6   AjA -  :   
 Aj"6  (  kAM@  A 
( !
 (  jA ;   
 Aj6 @ Ahj( "E@ Aj 

 Aj   Apj( 
 (AF
 Aj A jAɄ A A
j)  (AF
 Aj A j Atj (AF
 Aj A jA A  (AF
 Aj A jAЄ A A
j (AG@ Aj (h - l
	


 Aj AՄ A (AF
  - : l  (6h Aj A jA A
 Ahj (AF
 Aj A j Atj (AF
 Aj A jA A  (AG@ Aj (h - l



 A j Aj( 6   )7t

 A j Aj( 6   )7H


 A j 
Aj( 6   
) 7t


 A j Aj( 6   )7H


 A j Aj( 6   )7H


 A j Aj( 6   )7H
	
 	 
) 7  	Aj 
Aj( 6  A6
 (AG
 A j 	Aj( 6   	) 7H

 	 
) 7  	Aj 
Aj( 6  A6
 (AG
 A j 	Aj( 6   	) 7H

 	 
) 7  	Aj 
Aj( 6  A6
 (AG
 A j 	Aj( 6   	) 7H

 	 
) 7  	Aj 
Aj( 6  A6
 (AG
  A j 	Aj( 6   	) 7H

 ( " ( F@  A ( !

-- Chunk 9 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1201-1350
 (  jA :    Aj"6  
A j) ! 
A j) ! (  F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A	 ( !
 (  j"A )  7   AjA -  :    A	j"6  (  kAM@  A ( !
 (  jA ;    Aj6 @ BR@ Aj 

 Aj  
 (AF
 
A j-   ( " ( F@  A ( !
 (  jA,:    Aj"6  (  F@  A ( !
 (  jA":    Aj"6  (  kAM@  A ( !
 (  jB׷ 7    Aj"6  (  kAM@  A ( !
 (  jA ;    Aj6 Ak
 A j A j( 6   )H7t

 Aj A A

 Aj A A

 Aj A A

 Aj A A
 (AF@ A j Aj( 6   )7t


 A j A  (pAF

 A j!A!  
A jG
 
A  
AqA G (8AF
 Aj A0j Aj  (AF@ A,j Aj( 6   )7$


 (0!@ - 4@ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : 4 Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"AԆ (  6   AjA؆ /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  (
! Aj  A$j( "@ (AG@ Aj-  !@@@ A j ("   Alj! E! AjAr!@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 Aj  (AF
  - : <  (68 Aj A8jA A  (AF
 Aj A8j A
j"  (AF@ Aj Aj( 6   )7

 Aj (8 - < (AF

A!  A
j"G
 
A  
AqA G (pAF

 Aj"( " Aj"( F@  A ( !
 (  jA,:    Aj"6  A : 4 (  F@  A Aj( !
 (  jA":   Aj" Aj"6  A(j! Aj"(  kAM@  A ( !
 (  jAы6    Aj"6  (  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( 
 Aj 

 Aj Aj( 6   ) 7


 Aj r Aj  (" ( (E
  
 (AG
 A,j Aj( 6   )7$


 A j AjAr"Aj( 6   ) 7t

 A j A  ( AF

 (" (F@  A (!
 (  jA :    Aj6

 A j Aj( 6   )7t

 Aj Aj( 6   )7

 Aj  Aj! (AG

	
 A,j AjAr"Aj( 6   ) 7$

 Aj Aj( "6   ) "7  A
j 6    7A 

 A
j Aj( 6   )7

 A j Aj( 6   )7t
 A,j A j( 6   )t7$

 A j AjAr"Aj( 6   ) 7<

 A j A j( 6   )t7<
 A,j A j( 6   )<7$
 A
j A,j( 6   )$7
 Aj" A
j( 6   )7@ ( "E
  (E
  
 Aj ( 6   )7  AjA A  Aj"A
6  Aj$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kA	M@  A
 ( !
 (  j"A )  7   AjA /  ;    A
j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( ! A@k  ("@@@@ (@AG@ A j-  ! (D!@ @  Alj! AqE! A@kAr!@ Aq@ (" Aj( F@  A (!
  Aj6 (  jA,:  
 A@k  (@AF
  - H: <  (D68 A@k A8jAĆ A  (@AF
 A@k A8jAǆ A A
j" (@AF@ A4j A j( 6   )D7,

 A(j (8 - < ((AF
A!  A
j"G
 
A !
A ! Aj  AqA G (AF


 A4j Aj( 6   ) 7,

 A$j A@kAr"Aj( 6   ) 7


 A4j A j( 6   )D7,
 A$j A4j( 6   ),7

 Aj A$j( "6   )
"7  A
j 6    7A!
   6  A j$ 

-- Chunk 10 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1351-1500
~# A k"$  (" Aj( F@  A (!
  Aj6 (  jA :   Aj A A@@ (AG@ (" Aj( F@  A (!
  Aj6 (  jA::   Aj  (  ( (AF
 (" Aj( F@  A (!
  A 6   Aj6 (  jA :  

 Aj A
j( "6   )"7   A
j 6    7  A6 

 Aj A
j( "6   )"7   A
j 6    7  A6 
 A j$ 
# A@j"$ @@@ A N@ 
A!

 
 ! A]"E

   ! B 7 A ( 6  Aj A   AjE@  A
j 6   Aj 6    6  Aj ) 7   A6   Aj Aj( 6 @ ( " E
  Aj( E
   
 A@k$ 
A A7 A8jA A  
 A 
@AA]"@ AjA /  ;   A (  6  @@ A N@ 
A!

 
 ! A]"E

   ! Aj( " Aj"( F@ A
j $ (!
  Aj6   ) 7  (
 Alj" 6
 B 7  6   Aj Aj) 7   Aj Aj) 7   A j A j) 7   A(j A(j) 7  Aj 6  Aj 6   Aj ) 7 
AA 
 A 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB~"B EAt! !@ @ AjA6   Al6   ( 6

 A 6
    AjD ( AF@ Aj( " E
 (   
 (!  Aj Aj( An6    6  A j$ 
 

# Ak"$  A j A A
 (
 @@@@@@ (`"E@AA]"E
  A6  AjA )  7   AjA )  7   AjA )  7   A )  7    AjB7   A
j 6   AjA6 

 A j  A j(  A j A jA!
 - XAqE@A!

 - YA G@A!

 A j A j A j (P!  - TAq:   6 A j  - HAqE@A!

 - I! AjAr! AjAr!A!
@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 - 
A	! 


 - 
   A@k  - @AqE
 - A!

 A : 
 Aq"A"G@AA A F! 


 A8j  - 8AqE
 - 9A"G@A! 


  Aj  (!	 (! (! (" (AF
 E@ Azj
@@@ 	Azj 
 A A
A 

 A A
 A

A
 @ 

 E
 
AG
 AjArA A Aj( !	 Aj( ! Aj( ! (! @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lEr
 

 A A


 E
 AjA A Aj( !	 Aj( ! (! (!

 A A


 
AF@ Aj Aj& - AF
 - !



 AjA A Aj( !	 Aj( ! (! (
! 


 Aj( !	 Aj( ! Aj( ! (! 



 Aj  ("AG
 A0j  - 0AqE@A!

 - 1A G@A!

  A(j  - ,! ((!
 A 6 B7 A j 
A! -  AqE@A!

 - !!
 Aq!A !A!@@@@@ 
"A,G@ A F
 AqE
A !

 
 Aj 
 - AqE@A!

-- Chunk 11 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1501-1650
	
 - !


A!

 
A F@A!

 Aj 
 (! (! (! (AF@ Aj( !	

 

 (! (! Aj  ("AF
 Aj( !	 Aj( ! (! @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lE Err
 

 ( F@ Aj ' (! (!
  A
lj"	 6 	 6 	 6 A!  Aj"6 Aj 
 - !
 - Aq
 


 Aj A j ("AG@ Aj( !	 Aj( ! (! @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lEr

 


 Aj A j ("AG@ Aj( !	 Aj( ! (! @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lEr

 


  Aj 
Aq6   A
j 6   Aj 6    6A !



 AjArA A Aj( !	 Aj( ! Aj( ! (!


 Aj( !	 Aj( ! (!


 (! E
   A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 ("E A
lEr
 

 ! !

 (!

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj  ("AF

 Aj( !	 Aj( ! (! 


 Aj  - 	! - Aq
 
A! 


AA 
A! E

 @  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 E A
lEr
  
 Aj 	6  Aj 6   6  6  AjA A Aj

   
6  (`" E
  (dE
   
 Aj$ 
# A k"$  Aj ( "@@@ ("AF@ Aj A!@@@ - Aq@ - 	Aj"E
 AF


  AjA6 

  AjA6 

  Aj A؎ A ("AF@A !  A : 

  Aj )7   Aj A
j( 6   Aj 6 

  Aj A܎ A ("AF
  Aj )7   Aj A
j( 6   Aj 6 


-- Chunk 12 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1651-1800
  Aj )7   Aj A
j( 6   Aj 6 
A!

  A: A !
   :   A j$ 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB
~"B EAt! !@ @ AjA6   A
l6   ( 6

 A 6
    AjD ( AF@ Aj( " E
 (   
 (!  Aj Aj( A
n6    6  A j$ 
 
~# Ak"$  A j Aj A j@@@ (AG@  ("6x@ Aj-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A : | Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  ( ! Aj  ("@@ (AG@ Aj-  ! Aj ("   A
lj!	 E! Aj!@ Aq@ (" ( F@  A (!
  Aj6 (  jA,:  
 Aj  (  Aj(  (AF
A! 	 A
j"G
 
A  
A G (AF
 Aj A jA A - 
) (AG
 A j Aj( 6   )7l

 Aj AjAr"Aj( 6   ) 7

 A j (x - | (hAF
  )X"
7$ A(j(  A A
 
" A j(  ( @ 
  A
6 

 Aj Aj( 6   )7

 A j AjAr"Aj( 6   ) 7l

 A j Aj( 6   )7l
 A j" A j( 6   )l7H@ (X"E
  (\E
  
 Aj ( 6   )H7 A(j"A A Aj" Aj A@k) "
7  Aj A8j) "
7   A0j) "
7 ) !
  Aj 
7   Aj 
7   Aj 
7    
7 
 Aj$ 
~# A k"$  ( !@ - @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  k I@    ( !
 (  j     j"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6 A ! Aj  AqA G   (AF Aj A
j( "6   )"	7   A
j 6    	7A 
6  A j$ 
 @@@@@@@@ Ayj 
 AՄ AE
 A A
  A: 

 A A
E
 A A

  A: 

 A A
E

  Aj  A A+  A:  
  A: 

  A: 

  A :   A :  
  A :  
# Ak"$   6
  6 A$jA6  A4jA6  B7 A 6 A6,  6<  68  A(j6   A8j60  Aj6( B 7D A ( 6@ A j A@kA  Aj A j@A A7 A jA A  
   )@7  A6   A
j A j( 6  Aj$ 
 @@@@@@@@ A|j	 
 A A
  A: 

 (  A¹F
 (  AG
  A: 

 A A

  A: 

 A AE

  Aj  A A+  A:  
  A: 

  A :   A :  
  A :  
~# A	k"$  Aj .@@@@@@@@@@@@@@@@ - AG@ -  Aj  ("AG@ Aj) !
A ! (

Ak
 ("A~q! Aj) !
 Aj( 
!  A
j 
7   Aj 6    Aq r6

 A j A ! - xAqE@A!


 - y"A G@ A"G@A
!


 Aj / - AF
A!


  Aj "
/@ - AG@ - ! Aj 
 ("AF
 Aj) !
 (

 ("Av! Aj) !
 Aj( 
! 

-- Chunk 13 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1801-1950
B ! 
!


 A j 
 - pAq! - q! AF
 E@A!


 AqA G@A!


 
 A j 
 (h!
  - lAq":   
6 A j 
 - `AqE@A!


 - a! AjAr! AjAr! Aj! !@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	! E


 Aq
  
 A j 
 - XAqE
 - Y!

A ! A : 
 Aq"A"G@AA A F! E


 A j 
 - HAqE
 - IA"G@A! E


 
 Aj 
 (! (! (! (! (AF

 E@ Azj




@@@ Azj 
 A A

A 

 A A
 A

A
 @ 


 	E
 
 AjArA A Aj( ! Aj( ! Aj( ! (! 
E
 	

 A A


 	E
 AjA A
 Aj( ! Aj( ! (! (! E


 A A

 
 Aj Aj
 (AF
 (! (! (!

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 (AG@ (!
 (!
 (!	
	
 (!
 Aj( ! (! (

 Aj( ! (! (! (!

 AjA A Aj( ! Aj( ! (! (!

 Aj 
 ("AG@ Aj( ! Aj( ! (! 
@ 	
 @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 E AtEr
 

 A j 
@ - PAq@ - QA G
A !

 
@ 	
 @ At! Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A!A ! E AtEr
 

 
@ 	
 @ At! Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A
!A ! E AtEr
 

 AjArA A
 Aj( ! Aj( ! (! Aj( 
!A !	
 E




 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF


-- Chunk 14 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:1951-2100
 Aj( ! Aj( ! (! E




 A@k 
A ! - A! - @Aq
 
A! E
	

 Aj A !  @ - AqE@A!

@@@@@@@@@@@@@@@@@@@ - "A G@ A"G@A
!

 Aj 0 - AF
A!

  Aj "
0@ - AG@ - ! Aj 
 ("AG@ Aj) !
 (

 Ak
 ("Av! Aj) !
 Aj( 
! 
B ! 
!

 Aj 
 - AqE@A!

 - A G@A!

 
 Aj 
 (!
  - Aq"
:   
6 Aj 
 - AqE@A!

 - ! AjAr! AjAr! Aj! 
!@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
Aq
A!	A	
&
 Aq
  
 Aj 
A!	 - AqE
$ - !

A !
 A : 
 Aq"A"G@A!	A A G
$A
$
 Aj 
A!	 - AqE
"A - A"G
# 
 Aj 
 (! (! (! (" (AF
# E@ A}j

@@@@ A}j
 
 A A

A 

 A A
A

 A A
 A

A
 @ 

 
E

@ @ 
 AjArA A Aj( ! Aj( ! Aj( ! (!A !	 E
 

 AjArA A Aj( ! Aj( ! Aj( ! (!A!	
A !
 E@A ! E
%
$
 
 E
$
#
 A A


 
E
 AjA A
 Aj( ! Aj( 

 A A


 
 Aj Aj1 (AF
 (! (! (!


 A A

 
 Aj Aj
 (AF
 (! (! (!


 AjA A Aj( ! Aj( 
! (! (!A!
 E



 Aj( ! (! (! (!A !A!
 E


 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 (AG@ (! (! (!


 (!
 Aj( ! (! (

 Aj( ! (! (! (!A!


 AjA A Aj( ! Aj( ! (! (!A!



-- Chunk 15 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2101-2250
 Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj" 6  Aj 6   
6 A 6 Aj 
 ("AG@ Aj( ! Aj( ! (! Aj2

 Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6  Aj 6   
6 A 6 Aj 
@ - Aq@ - A G
 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6   ) 7 )"
B ! 
!A !
A !


 Aj2A!

 Aj2A!
A !


 AjArA A
 Aj( ! Aj( ! (!A!	 Aj( 
!A !
A!
 E


 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!A!
 E


 Aj 
A ! - ! - Aq
 
A

 /  - Atr! Aj) "
B ! Aj( ! - ! 
!

 Aj 
@ - AqE@A!

 - A G@A!

 
 Aj 
 - ! Aj ("@@@A - AqE
  - ! Aq! AjAr! Aj! AjAr!@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!
	
 Aq@A!
	
  Aj  - AqE@A!
	
 - !
 Aq"A"G@A!A A F
	

 Aj  - AqE@A!

 - A"G@A!

  Aj  (!
 (! (! (" (AF
@ E@ A
G
 A A
A G!

A! 
A
F@ A A
A G!
 E
  
 
 	E
 AjArA A
 
E




 	
 AjArA A
 Aj Aj) 7   )7


 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AF

 Aj Aj) 7   )7

 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AG

 Aj Aj) 7   ) 7

 Aj" 
6  Aj 
6  Aj" 	6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj( 6  Aj" ) 7   ) "
7 A6 Aj 
 ("AG@ Aj) !
 (! Aj2
	
 Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6   
7 A6 Aj 
 - Aq@ - A F@ 
 Aj A0j( 6  Aj A(j) 7  Aj A j) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   ) 7 
B ! 
!A !
A!

 Aj2A!
A!


 Aj2A!

 (!
 (!
 (!	
 Aj A ! - ! - Aq
 
A!
 
! Aj 
6  Aj 6  Aj 6   6
 
E 	Er

 	
 Aj) !
 Aj( ! (!
 Av! 
B ! 
!

 Aj 

-- Chunk 16 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2251-2400
@ - AqE@A!

 - A G@A!

 
 Aj 
 - ! Aj ("
 - AqE@A!

 - ! Aq! AjAr! AjAr! Aj!@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

 
 Aj 
 - AqE
 - !
 Aq"A"G@AA A F!

 Aj 
 - AqE

 - A"G@A!

 
 Aj 
 (! (! (! (! (AF
 E@ A{j	








@@@ A{j	 
 A A

A 

 A A
 A

A
 @ 


 	E
 

 AjArA A Aj( ! Aj( ! Aj( ! (! E
 	

 A A


 	E
 AjA A
 Aj( ! Aj( ! (! (!


 A A

 
@ AjA A Aj( ! Aj( ! (! (! 





 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 (AG@ (! (!
 (!


 (!
 Aj( ! (! (!


 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 (AG@ (! (! (!	

 (!
 Aj( ! (! (

 Aj 6  Aj 
6  Aj 
6  Aj" 6  Aj 6   	6 A6 Aj 
 ("AG@ Aj( ! Aj( ! (! Aj2


 Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6  Aj 6   	6 A6 Aj 
 - AqE
 - A F@ 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6   ) 7 )"
B ! 
!A !
A!

 Aj2A!
A!


 AjArA A
 Aj( ! Aj( ! (! Aj( 
!A !	

 Aj2A!

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj 
A ! - ! - Aq
 
A!

A!
 
E 
Er

 

 E 	Er
  	
 Av!

 Aj 
@ - AqE@A!

 - A G@A!

 
 Aj 
 (!

-- Chunk 17 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2401-2550
  - Aq"
:   
6 Aj 
 - AqE@A!

 - ! AjAr! AjAr! Aj! 
!@@@@@@@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
Aq
A!	A	! E


 Aq
  
 Aj 
A!	 - AqE
 - !

A !
 A : 
 Aq"A"G@A!	AA A F! E


 Aj 
A!	 - AqE
 - A"G@A! E


 
 Aj 
 (! (! (! (! (AF
 E@ A}j

@@@@ A}j
 
 A A

A 

 A A

A

 A A
 A

A
 @ 

 
E
 
BQ@ 
 AjArA A Aj( ! Aj( ! Aj( 

 AjArA A
 Aj( ! Aj( ! Aj( 
! (!A !	 E@A ! E


 

 E


 A A


 
E
 AjA A
 Aj( ! Aj( 

 A A



 
BQ
 Aj Aj (AF
 )!
B!



 A A

 
 Aj Aj1 (AF
 (! (! (!


 AjA A
 Aj( ! Aj( 
! (! (! E




 Aj( ! Aj( ! (! (! E




 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 
 (AG@ (! (! (!


 (!
 Aj( ! (! (!A !
 E

	
 Aj( ! (! (! (!
	
 AjA A Aj( ! Aj( ! (! (!

 Aj 
7  Aj 6  Aj 6  Aj 6  Aj" 6  Aj 6   
6 A6 Aj 
 ("AG@ Aj( ! Aj( ! (! Aj2
	
 Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6  Aj 6   
6 A6 Aj 
 - AqE
 - A F@ 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6   ) 7 )"
B ! 
!A !
A!


 Aj2A!
A!


 AjArA A
 Aj( ! Aj( ! Aj( ! (!A!	A !
 E


 Aj2A!

 Aj 
@ ("AG@  ) 7  Aj Aj( 6 

 Aj 

-- Chunk 18 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2551-2700
 ("AF

 Aj( ! Aj( ! (! E


 Aj 
A ! - ! - Aq
 
A! E


A! E

 E
  
 	E E 
Err
  

 Av!

 Aj 
 - AqE@A!


 - A G@A!


 
 Aj 
A!	 (!  - Aq"
:   6 Aj  - AqE@A!
	
 - ! AjAr!
 AjAr! Aj! 
!	@@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
Aq
A	!

 	Aq
   Aj  - AqE@A!

 - !

A !
 A : 
A! Aq"A"G@A!A!A!A!	 A F


 Aj  - AqE@A!

 - A"G@A!

  Aj  (! (! (!	 (! (AF
@ E@ Aj 	 3

 Aj 	 3 E
  	
 - AF@ (!

 - 
A!A  
 AG"	!
@@@ 
BQ@ E
 E
 
 AjArAЄ A Aj( ! Aj( ! Aj( ! (! @ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

A ! E AtEr
 

 AjArAɄ A

 AjArA A

 AjArA A Aj( ! Aj( ! Aj( ! (!
 E!A ! E
 

 Aj @ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj  ("AF


 Aj( ! Aj( ! (!

 E
 AjAЄ A
	
 @ AjA A
	
 Aj Aj
 (AG@ (! (! (!


 Aj( ! (! (! (!A !

 @ AjA A

 Aj Aj1 (AG@ (! (! (!


 Aj( ! (! (! (!A !

 
BQ
 Aj Aj (AG@ )!
B!

	
 Aj( ! Aj( ! (! (!

 AG@ Aj  ("AF@ Aj  - AqE@A!

@ - A F@  Aj Aߎ A ("AG
A !

 Aj  (! (! (! (AG
 Aj( !

 Aj( ! Aj( ! (!

 Aj( ! Aj( ! (!

 AjA A Aj( ! Aj( ! (! (!A!

 Aj 
7  Aj 
6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 6  Aj" 6  Aj 6   
6 A6 Aj 
 ("AG@ Aj( ! Aj( ! (! Aj2

 Aj" ) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6  Aj 6   
6 A6 Aj 
 - AqE
 - A F@ 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj A j) 7  Aj A(j) 7  Aj A0j( 6   ) 7 )"
B ! 
!A !
A!

-- Chunk 19 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2701-2850
	
 Aj2A!
A!

 Aj 6  Aj 6  Aj 	6   6


 AjAɄ A

 Aj2A!

 
E E ErrE@A! 
 ! !


 ! !
A!

 Aj( ! Aj( ! (! (!

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj  (AG@ (!
 (! (!

 (!
 Aj( ! (! (!A!	A!
	
 Aj A !	 - ! - Aq
 
A!

A
! 

 Aj )7  Aj Aj( 6  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   6   B "
7 Aj  - Aq@ - A G@ Aj2A


  Aj) !
 Aj( ! Aj) ! Aj) !  Aj) !! )!"  A@k Aj) 7   A8j !7   A0j  7   A(j 7   A$j 6   A
j "7   Aj 
7   Aj 6   AjA6   A j 
7 


 Aj2A

 Aj( ! Aj( ! Aj( ! (!A!
 E 
Er
 


 Aj( ! Aj( ! Aj( !

A! !
A!A!	
 E Er
  
@ E Er
  @ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 E AtEr
  
 E E Asrr
  
 E 
Er 	E AGrr
  

 Av!

A
!A!
 E

 @ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 AtE E Err
  
 	E E ErrE@ 
 E 
A G 
qEr
  

 Av!
  B !
 Aq Atr
6  Aj 6 A!  A
j 
7 


 Aj A !@@ - AqE@A!

@@@@@@@@ - "A G@ A"G@A
!


 Aj 4 - AF
A!


  Aj "
4@ - AG@ - ! Aj 
 ("AF
 Aj) !
 (!


 ("Av! Aj) !
 Aj( !


 Aj 
 - Aq! - ! AqAF
 E@A!
	
 AqA G@A!
	
 
 Aj 
 -  Aj ("A - AqE
 - !Aq!
 AjAr! Aj! AjAr!@@@@@@@@ Aq"	A,G@ 	A F
 
Aq
A	!


 
Aq@A!


-- Chunk 20 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:2851-3000

  Aj  - AqE@A!


 - !
 Aq"
A"G@A!A 
A F




 Aj  - AqE@A!


 - A"G@A!


  Aj  (!
 (! (!	 ("
 (AF

@ 
E@ AG
 	A AA G!


A!
 
AF@ 	A AA G!

 E
  	
 

 E
 AjArA A 
E



 
 AjArA A Aj Aj) 7   )7


 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AF

 Aj Aj) 7   )7


 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AG

 Aj Aj) 7   ) 7


 Aj 
 ("AG@ Aj( ! Aj( ! (! 
E

 


 Aj 
@ - Aq@ - A G
A !

A!A ! 
E

 


A
!A ! 
E

 


 (! (!
 (!
 Aj A !
 - ! - Aq
 
A!

 /  - Atr! Aj) !
 Aj( ! - !

@ E@A!

 AqA G@A!

 
 Aj 
 - !
 Aj ("@@@A - AqE
  - ! 
Aq!
 AjAr! Aj! AjAr!@@@@@@@@@ Aq"	A,G@ 	A F
 
Aq
A	!
	
 
Aq@A!
	
  Aj  - AqE@A!
	
 - !
 Aq"
A"G@A!A 
A F
	

 Aj  - AqE@A!

 - A"G@A!

  Aj  (!
 (! (!	 ("
 (AF
@ 
E@ A	G
 	A A	A G!


A!
 
A	F@ 	A A	A G!

 E
  	
 

 E
 AjArA A	 
E




 
 AjArA A	 Aj Aj) 7   )7



-- Chunk 21 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3001-3150
 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AF

 Aj Aj) 7   )7

 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AG

 Aj Aj) 7   ) 7

 Aj 
 ("AG@ Aj( ! Aj( ! (! 
E
	 
	
 Aj 
A! - Aq@ - A F
A
!A ! 
E
 

A!A ! 
E
 

 (! (!
 (!
 Aj A !
 - ! - Aq
 
A!
 
! Aj 
6  Aj 6  Aj 	6   6
 
E Er

 
 Aj( ! Aj( ! Aj( ! (!
 Av!  B !


 
 Aj @@ - Aq@ - A G
   Aj 6   A
j 6   AjA6 A !  Aj 
 B 7 

 AqAG@A! 
E
 


A! 
E
 
	
 AqAG@A
! 
E
 
	
A
! 
E
  



 
! Aj 
6  Aj 6  Aj 	6   6
 
E Er

 
 Aj( ! Aj( ! Aj( ! (!
 Av!  B !

 Aq Atr!
   6  Aj 6 A!  A
j 
7 


 Aj A !@@ - AqE@A!

@@@@@@@@@@@@ - "A G@ A"G@A
!

 Aj 5 - AF
A!


  Aj "
5@ - AG@ - ! Aj 
 ("AG@ Aj) !
 (

 Ak
 ("Av! Aj) !
 Aj( 
! 
B ! 
!


 Aj 
 - AqE@A!


 - A G@A!


 
 Aj 
 - ! Aj ("
 - AqE@A!


 - ! Aq! AjAr!
 AjAr! Aj! Aj!@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

 
 Aj 
 - AqE
 - !
 Aq"A"G@AA A F!

 Aj 
 - AqE
 - A"G@A!

 
 Aj 
 (! (! (! (! (AF
 E@ Azj



@@@ Azj 
 A A	
A 

-- Chunk 22 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3151-3300

 A A
 A

A
 @ 


 	E
 

 AjArA A Aj( ! Aj( ! (! (! E
 	

 A A	
	
 	E
 AjA A	 Aj( ! Aj( 

 A A

 
E
 AjA A Aj( ! Aj( 
! (! (!

 Aj 
@ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
6 (AG@ )"B ! ) !
 )!
 (! (!
 !

 (!
 Aj( ! Aj( ! (!

 Aj 
@ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 (AG@ (! (! (!	

 (!
 Aj( ! (! (

 Aj 
 ("AG@ Aj( ! Aj( ! (! @ 	
 E
 


 Aj 
@ - Aq@ - A G
 
A !


 @ 	
A!A ! E
 


 @ 	
A
!A ! E
 


 AjArA A	 Aj( ! Aj( ! (! Aj( 
!A !	


 Aj 
@ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!


 Aj 
A ! - ! - Aq
 
A!
	
 /  - Atr! Aj( ! Aj( ! Aj( ! - !


 Aj 
@ - AqE@A!

 - A G@A!

 
 Aj 
 - ! Aj (" - AqE@A!

 - ! Aq!
 AjAr! AjAr! Aj! Aj!@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
Aq
A !
A!
A	!

 
AqA !
@A!
A!

  Aj A!
 - AqE
 - !
A !
 Aq"A"G@A!
AA A F!

 Aj A!
 - AqE

 - A"G@A!

  Aj  (! (! (! (! (AF
 E@@ Azj						 	
 A A
E
 A A


	
@@@ Azj 
A  A A
E
 A A

A

 A A
 A

A

-- Chunk 23 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3301-3450
 @ 

 	E
@ @ 
 AjArA A Aj( ! Aj( ! (! (!A !
 E
 

 AjArA A
 Aj( ! Aj( ! Aj( ! (!A!

A!
 E@A !

 	


 A A

 @ AjA A Aj( ! Aj( 

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj 6 (AG@ )"
B ! ) !
 )! (! (! 
!



 (!
 Aj( ! Aj( ! (!


 	E
 AjA A
 Aj( ! Aj( 

 Aj 
 ("AG@ Aj( ! Aj( ! (! @ 	
 @ 
 E

 


 Aj 
@ - Aq@ - A G
 !
 
A!

 @ 	
 @ 
A!A ! E
 

 @ 	
 @ 
A
!A ! E
 

 AjArA A
 Aj( ! Aj( ! Aj( ! (!A !	A!
A !


 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj  (AG@ (! (! (!	

 (!
 Aj( ! (! (!A !	

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj  ("AF

 Aj( ! Aj( ! (!

 E
 AjA A
 Aj( ! Aj( 
! (! (!

 Aj @ ("AG@  ) 7  Aj Aj( 6 

 Aj  (AG@ (! (! (!

 (!
 Aj( ! (! (!A !

 Aj  - ! - Aq
 
A!

A!
 E Er
  
 E 
E ErrE@ 
 E 
 	Err
  	
 Av!


 Aj 
 - AqE@A!

 - A G@A!

 
 Aj 
 - ! Aj ("
 - AqE@A!

 - ! Aq! AjAr!
 AjAr! Aj! Aj!@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

 
 Aj 
 - AqE
 - !
 Aq"A"G@AA A F!

 Aj 
 - AqE
 - A"G@A!

 
 Aj 
 (! (! (! (! (AF
 E@ Azj



@@@ Azj 
 A A	
A 

 A A
 A

A

-- Chunk 24 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3451-3600
 @ 


 	E
 

 AjArA A Aj( ! Aj( ! (! (! E
 	

 A A	
	
 	E
 AjA A	 Aj( ! Aj( 

 A A

 
E
 AjA A Aj( ! Aj( 
! (! (!


 Aj 
@ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
6 (AG@ )"B ! ) !
 )!
 (! (!
 !

 (!
 Aj( ! Aj( ! (!


 Aj 
@ ("AG@  
) 7  Aj 
Aj( 6 

 Aj 
 (AG@ (! (! (!	

 (!
 Aj( ! (! (

 Aj 
 ("AG@ Aj( ! Aj( ! (! @ 	
 E
 



 Aj 
@ - Aq@ - A G
 
A!

 @ 	
A!A ! E
 


 @ 	
A
!A ! E
 


 AjArA A	 Aj( ! Aj( ! (! Aj( 
!A !	

 Aj 
@ ("AG@ 
 ) 7  
Aj Aj( 6 

 Aj 
 ("AF

 Aj( ! Aj( ! (!

 Aj 
A ! - ! - Aq
 
A!

 Aj @@@@@ - Aq@ - A F
 
@@@  
 @ 	
 E ErE@ 
A! E Er
 

 @ 	
A! E 
Er
 


 @ 	
A! E 
Er
 


 @ 	
 E ErE@ 
A
! E Er
 


 @ 	
A
! E 
Er
 



 @ 	
A
! E 
Er
 



   A j 7   A j 6   A@k 6   A8j 
7   A4j 6   A0j 
6   A(j 
7   A$j 6   A j 6   A
j 6   Aj 6   AjA6   Aj 	 B 7 A !


	
A!
 E 
Er
  

 	E Er
  	
 Av!

A!

-- Chunk 25 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3601-3750
 E 
Er
  

 	E Er
  	
 Av!
 Aq Atr!
   6  Aj 6   A
j 6   Aj 6 


 Aj A!@@ - AqE
 @ - A G
   Aj  - ! Aj ("@ - AqE
  - ! Aq! AjAr! AjAr!
@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  Aj  - AqE
 - !
 Aq"
A"G@A! 
A G
A!

 Aj  - AqE
 - A"G
  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!

 Aj  ("AG@ Aj( ! Aj( ! (!

 Aj  - AqE
 - A G@A
!

   AjA6 A !

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj  ("AG
  Aj A ! - ! - AqE



 Aj( ! Aj( ! (!

A!

A!

A!
   6  Aj 6   A
j 6   Aj 6 


 /  - Atr! Aj) "
B ! Aj( ! - ! 
!

@ E@A!

 AqA G@A!

 
 A8j 
 (8!  - <Aq":   6 A0j @@A - 0AqE
  - 1! AjAr! AjAr! !@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!


 Aq
   A(j  - (AqE@A!


 - )!

A ! A : 
 Aq"A"G@A!A A F
	

 Aj  - AqE@A!

 - A"G@A!

  Aj  (!
 (! (! (" (AF
@ E@ AG
 A AA G!

A! 
AF@ A AA G!
 E
  
 
 	
 Aj Aj
 (AF
 (!
 (!
 (!	

 	
 AjArA A Aj Aj) 7   )7
	
 Aj @ ("AG@  ) 7  Aj Aj( 6   6

 Aj  (AF

 Aj Aj) 7   )7 	


 AjArA A

 Aj Aj) 7   ) 7

 Aj 
 ("AG@ Aj( ! Aj( ! (! 
@ 
At! 	Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 
E 
AtEr
 	

 A j 
A!@ -  Aq@ - !A G

	
 
@ 
At! 	Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"

-- Chunk 26 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3751-3900
 

A!A ! 
E 
AtEr

 	


 
@ 
At! 	Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A
!A ! 
E 
AtEr

 	


 Aj A ! - 	! - Aq
 
A!
 
! Aj 
6  Aj 6  Aj 6   6 	E

 
@ 
At! 	Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 
AtE 
E 	Err
  	
 Aj( ! Aj( ! Aj( ! (!
 Av!

 
 Aj @@ - Aq@ - A G
   A$j 6   A j 6   A
j 6   Aj 	6   A
j 6 A !  AjA 6   Aj 
 
B 7 


 AG@ 
@ 	
 @ At! Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A! E AtE Err
 

 
@ 
At! 	Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A! 
E 
AtEr
 	

 AG@ 
@ 	
 @ At! Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A
! E AtE Err
 

 
@ 
At! 	Aj!@@ A|j( "E
  ( "E
  
 A j! A`j"
 

A
! 
E 
AtEr
  	



A! E

 @ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 AtE E Err
  
 
E 	Er
  	
 Av!
 Aq Atr!
   6  Aj 6   A
j  B 7 
A!
   6  A	j$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    ,

    , E
 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   @  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@ AF@ (  AʹF
 (  AF

  Aj  A܄ A+  A:  


-- Chunk 27 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:3901-4050
  A; 

@ AF@ (  AʹF
 (  AF

  Aj  A܄ A+A

  A: A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A ; 

  A : A 
:   E
  
 A j$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    *

    * E
 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$  Aj ( "@@@@ ("AF@   -  AqE
 - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    I

    I E
 

  Aj )
7   Aj Aj( 6   A6    6

  B 7 

  B7 

   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 
@@@@@@@  (  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
@  Aj( "E
   Aj( E
  
  A
j( !  A$j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
  (
!
  A j( " E Er  AtEr
 
@  ("E
   Aj( E
  
@  Aj( "E
   Aj( E
  
  A
j( !  A$j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
  (
!
  A j( "E Er AtErE@ 
  A(j( "E
  A,j( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
   Aj( E
  

 
 @@@@@ A}j 
 A A
A 

 AɄ A
A

 A A
A

A A AE
 AЄ A
 A

A
!  A :     : 
# A k"$   @@@  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ Alj 					
 A AE
	

 A˂ A
  A; 
	
@@ Alj 
 A AE


 A˂ A
  A: A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

-- Chunk 28 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4051-4200

  Aj  A A+A

  A : A 
:   E
 

  Aj  A A+  A:  

  A ; 
 A j$ 
# A k"$   @@  @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@@ Axj 
 A
 A
@ A A

  A; 


  A; 
	
 )  Bʱ Q

  Aj  Aԅ A+  A:  

@@@ Axj 
 A
 A
@ A A

  A: A 

  A: A 

 )  Bʱ Q

  Aj  Aԅ A+A

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A : A 
:   E
 

  A ; 
 A j$ 

~# A k"$  A8j @@@@@ - 8Aq@ - 9A G
  A0j  - 4! A(j (0" - (AqE@A!

 - )! Aq! A jAr!	 A@kAr!
 A j!
 A j!
@@@@@@@@@@@@@@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  -  AqE
 - !!
 Aq"A"G@A! A G
A!

 Aj  - AqE
 - A"G@A!

  A@k  (P! (L! (H! (D! (@AF
 E@ A{j
@@@ A{j 
 A܀ A
A 

 A A
 A

A
 @ 

 E
 BQ
 A@kArA A A j( ! A j( ! (H! (D! 
E
 

 A܀ A


 E
 A@kA܀ A A j( ! A j( 

 A A

 BR
 A@kA A A j( ! A j( 
! (D! (@!

 A j  (X"AG
 Aj  - AqE@A!

 - A"G@A!

  A j  (h! (d! (`! (\! (XAF
@ E@ A@k  O

 A@k  O E
  
 (@AG@ )H"B ! 
) "B ! ! !B!
	
 (D!

 A j @ (X"AG@ 
 	) 7  
Aj 	Aj( 6 

 A@k  (@AG@ (L! (H!
 (D!
	
 (D!
 A j( ! (L! (H!


 A@kArA܀ A A j( ! A j( ! A j( ! (D!


 A@k  (@"AF
  Aj )D7   Aj A j( 6   A6    6 
E

 


  6P  6L  6H  6D

 
 	) 7  
Aj 	Aj( 6 

  A 6   A j 7   A
j 
6   Aj 6   Aj  B 7   Aj  B 7 

-- Chunk 29 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4201-4350
	
 (P! (L! (H!

 A@k @ (@"AG@ 	 
) 7  	Aj 
Aj( 6 

 A j  (X"AF

 A j( ! A j( ! (\!

 Aj A ! - 	! - Aq
 
A!

  B 7 

  B7 

A!
 
E Er
  
   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 

   (  
   (   ( 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
	@  ( E@  (!  A
j( "@  A lj!@ "A j!@@@@@ ( 
 Aj2

 A
j( E@@ ("E
  Aj( E
  
 A
j( ! A$j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (
!
 A j( "E Er AtEr
 

 (! Aj( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 Aj( "E Er AtEr
 

@@@ Aj(  
@ Aj( "E
  Aj( E
  
@ A j( "E
  A$j( E
  
 A@k( "E
 A j( E
 

@ Aj( "E
  Aj( E
  
 A0j( "E
 A4j( E
 

@ Aj( "E
  Aj( E
  
 A0j( "E
 A4j( E
 

 A
j(  Aj( "E Aj( Er
  
  G
 
  (!
  Aj( "E Er A lErE@ 
  Aj( !  Aj( "@  Alj!@@ ( "E
  Aj( E
  
@ A
j( "E
  Aj( E
  
 Aj" G
 
  (!
  Aj( "E Er AlErE@ 
  A
j( !  A$j( "@  Alj!@@ "( "E
  Aj( E
  
 (
! Aj( "@  Alj!@@ ( "E
  Aj( E
  
@ A
j( "E
  Aj( E
  
 Aj" G
 
 (
!
 Aj! Aj( "E Er AlErE@ 
  G
 
  (
!
  A j( "E Er AlErE@ 
  A(j( "E
  A,j( E
 
  Aj( "E
   Aj( E
  

 
!@  ( "E
   Aj( E
  

@@@@@@@@@@@  ( 
			 
  Aj( "E
  Aj( E
 

  Aj( "E
  Aj( E


  Aj( "E
  Aj( E


  Aj( "E

-- Chunk 30 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4351-4500
  Aj( E


  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


@  Aj( "E
   Aj( E
  
  Aj( "E
  Aj( E


  Aj( "E
   Aj( E
  

 
  ( !  ("@  A lj!@ "A j!@@@@@ (  
 Aj2

 (E@@ ("E
  A
j( E
  
 Aj( ! A
j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 Aj( "E Er AtEr
 

 (! Aj( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 A
j( "E Er AtEr
 

@@@ Aj(  
@ A
j( "E
  Aj( E
  
@ Aj( "E
  A
j( E
  
 A8j( "E
 A<j( E
 

@ A
j( "E
  Aj( E
  
 A(j( "E
 A,j( E
 

@ A
j( "E
  Aj( E
  
 A(j( "E
 A,j( E
 

 Aj(  Aj( "E A
j( Er
  
  G
 
  ( !
  Aj( " E Er  A lErE@ 

   (  @A 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
O  ( "Aj(  Aj"( " k I@     ( ! 
 (   j      j6 A 
J  Aj(   Aj"( "k I@     ( !
  (  j     j6 A 
@@@@@ @A! A H
 ( "E
 ("
 


   6A!

    ^

 E

  ]
! 

 !A 
! @   6A !

   6 !
   6   Aj 6 
~# A k"$ @ Aj" I
   Aj( "At"   K"A AKB ~"B EAt! !@ @ AjA6   A l6   ( 6

 A 6

-- Chunk 31 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4501-4650
    AjD ( AF@ Aj( " E
 (   
 (!  Aj Aj( A n6    6  A j$ 
 
# A k"$ @ Aj" I
   Aj( "At"   K"A AK"A?q FAt! At!@ @ AjA6   At6   ( 6

 A 6
    AjD ( AF@ Aj( " E
 (   
 (!  Aj Aj( Av6    6  A j$ 
 
~# A k"$ @ A I
   Aj( "At"   K"A AKB ~"B EAt! !@ @ AjA6   A l6   ( 6

 A 6
    AjD ( AF@ Aj( " E
 (   
 (!  Aj Aj( A n6    6  A j$ 
 

# A k"$  A8j ( "@@@@ (8"AF@ A j  -  Aq@ - !A G
  Aj  - 
! (! A 60 B7( Aj A! - AqE@A!

 - ! Aq!A!	@@@@@ "A,G@ A F
 AqE
A !

  Aj  - AqE@A!
	
 - 	!

A!

 A F@A!

 A8j  (D! (@!
 (<! (8AF@ A j( !


 

 (,! ((! A8j  (8"AF@   6  A 6   A
j 6   Aj 6 

  Aj )<7   Aj A j( 6   A6    6 @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 E A
lE Err
 

 (, F@ A(j ' ((!	 (0!
 	 A
lj" 6  
6  6 A!  Aj"60   - ! -  Aq
 


  B 7 

  Aj )<7   Aj A j( 6   A6    6

  B7 

 ((! E
   A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 (,"E A
lErE@ 
   6  A6   Aj 
6   A
j 6   Aj 
6 
 A j$ 
# A k"$   6  6  Aj  q@ (AG@   )
7  A 6   A
j Aj( 6 

 A jA6  B7D A 6@ A6\  A j6P  6X A0j A@k A@kAr A0j A6@@ (0"E
  (4E
  
   )@7  A6   A
j A j) 7  Aj=
 A j$ 
# A k"$  Aj ( "@@ - AqE@A!

@@@@@ - ""A,G@ A F
 - 
A	!

 - 
   Aj  - AqE
 - 	!

 A : 
 Aq"A G@ A"G@A!

   -  AqE
 - A"G@A!

  A(j  A4j( ! A0j( ! (,! ((AG@ E E Err
 

 AF
 A8j( !

A!

  A ; 

 A(j @ (("AG@ A$j A4j( 6   ),7
  6

 Aj  (AG
   A; 

  A:    Aj )7   A
j A j) 7 

A!
  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
~# A0k"$  Aj ( "@@ - Aq@ - 	""A,G@@ A G@ - 
  A:    AjA6 

  A ; 

 A : 

    -  Aq@ - !

  A:    AjA6 

  A:    AjA6 

 A F@  A:    AjA6 

-- Chunk 32 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4651-4800

 A j  ( "AF@  A; 

 Aj A,j( "6   )$"7  Aj 6   Aj 7   Aj 6   A:  
 A0j$ 
# A k"$   @@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    M

    M E
 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
 @@@@@ Azj 
 A A
  A:   A :  
 AՄ AE


 A A

   A:   A :  
  Aj  Ȁ A+  A:  
  A :   A :  
~# A k"$   @ -  Aq@@ - "A"G@ A F
  B7 

 Aj . - AG@  B7 

 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 

    -

  B 7 
 A j$ 
# A k"$   6  6  Aj  @ - AG@  A 6   Aj )7   Aj Aj) 7 

  - 	: ' A jA6  A jA6  B7< AȎ 68 A6T  A j6H  A'j6X  6P A(j A8j A8jAr A(j A68@ (("E
  (,E
  
   )87  A6   A
j A@k) 7 
 A j$ 
# A k"$   @@@  @@@@ -  Aq@ - A"G
  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ Avj 	
 A A
E
	

 A A

  A; 
	
@@ Avj 
 A A
E


 A A

  A: A 

  A:    AjA6 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A A+A

  A : A 
:   E
 

  Aj  A A+  A:  

  A ; 
 A j$ 
~# A k"$ A
! A
6 @ E
   A
lj!
 A j! A
lAtj! (
!
 !@@@ A j  (  Aj(  
  )P!
 (HAF
 (L"E@ Atj!A
! 
 A
j"G



A
A]"E
  
7  6  B7$  6 @ E@A!

 A
j! A j!	 A
l jAtj!A!@ !@@@ A j  (  Aj(  
  )P!
 (HAF
  (L"
 
 A
j"G



 A@k" 	Aj) 7  A8j" 	Aj) 7   	) 70 ( A
G@ =
 Aj )07  Aj ) 7  Aj ) 7   
7 

 A
j!  ($F@ A j ' ( !
  A
lj"
 
7 
 6   Aj"6(  G
 

 ($! ( ! ( 

 Aj ) 7  Aj Aj) 7  Aj Aj) 7   
7  
!

A
A 
A !A !A ( 
!@ A

-- Chunk 33 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4801-4950
F@   6  A 6   A
j 6   Aj 6 

  A6   Aj 6   A
j )7   Aj A
j) 7   A
j Aj) 7   A$j A
j( 6  @  A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 

 E A
lEr
  
 A j$ 
		~# A k"$  A@k ( "	 ("
%@@@@@ (@AG@ Aj A j) 7   )D7 ( ! - E@ (! (!

 (! ("E@A !

 (! A
l!
A !@   j"
Aj( F@ 
(   E

 A
j" 
G
 


 A4j A j) "
7  A,j A j) "7  A$j A j) "7   A j) "7
  A j 
7   Aj 7   Aj 7   Aj 7   A6  ( !

A ! A :  A@k 	 
 Aj( (@"A
G@ A0j A j( "6  A(j A j) "
7  A j A j) "7   )D"7  A$j 6   A
j 
7   Aj 7   A
j 7   Aj 6   A6   A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 
 (
" E  A
lEr
 

 A jB 7  A jB 7  A 6d A ( "6X  6L B 7D A ( 6@  Aj A@kA A#

@ E
  Aj( E
  
 (
! Aj( " @  At!  Aj!@@ A|j( "E
  ( E
  
 A j!  A`j" 
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

  AjA
6 A!
   6  @  A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 

 (
" E Er  A
lErE@ 
 Aj( @ 
 (
! Aj( " @  At!  Aj!@@ A|j( "E
  ( E
  
 A j!  A`j" 
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 A j$ 


~# Ak"$  A j ( "
 ("
%@@@@ (PAG@ Aj A j) 7   )T7 ( !
@ - E
  ("E
  (!	 (! A
l!
@ 	  j"Aj( F@ (  
 	E

 
 A
j"G
 

  AjA
6 A!

 A j A j) "7  A<j A j) "7  A4j A j) "7   A j) "7,  A j 7   Aj 7   Aj 7   Aj 7   A6  (!	 ( !

 A j ( A
j(  ( " ("	Q@@ (PAG@ A0j A j( "6  A j 6   )T"7(  7  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 
 (
"E A
lErE@ 
 Aj A j( 6   )7 A j 
 
 Aj( (P"A
G
 A jB 7  A jB 7 A ! A 6t A ( "6h  6\ B 7T A ( 6P  Aj A jA A
#


-- Chunk 34 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:4951-5100
 A j A j) "7  A<j A j) "7  A4j A j) "7   A j) "7,  A j 7   Aj 7   Aj 7   Aj 7   A6 

 A@k A j( "6  A8j A j) "7  A0j A j) "7   )T"7(  A$j 6   A
j 7   Aj 7   A
j 7   Aj 6   A6  (! (!
 @  A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 

 (
" E Er  A
lEr
  
 	@  	A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 

 Aj( " E Er  A
lErE@ 
@ ( " E
  Aj( E
   
 (
! Aj( " @  At!  Aj!@@ A|j( "E
  ( E
  
 A j!  A`j" 
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

   6  (!  ("@   A
lj!  !@@ ( "E
  Aj( E
  
 A
j" G
 

 (
"E A
lErE@  
 ( !  ("@   A
lj!  !@@ ( "E
  Aj( E
  
 A
j" G
 

 Aj( "E A
lErE@  
 Aj( @ 

 (
! Aj( " @  At!  Aj!@@ A|j( "E
  ( E
  
 A j!  A`j" 
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
~# A@j"$  Aj (  (%@ (AG@ A j( ! (
!@ A$j( "E@  A ; 

 A
l! !@@ Aj(  G
  (   
 A

 A
j! Atj"
 
A 
!  A :     :  E
   A
lj!  !@@ ( "E
  Aj( E
  
 A
j"  G
 

 E A
lEr
 

 Aj A4j) "	7  Aj A<j( "6   A,j) "
7  A j) !
 A(j( !  A$j 6   A
j 	7   Aj 
7   Aj 6   Aj 
7   A:  
 A@k$ 
~# A@j"$  Aj (  (%@ (AG@ (
" A j) "	B "A
lj! A(j-  ! 	!@@ E@ "!

 "!@ ( "@  Aj) 7
  6  Aj") 7  Aj Aj( 6  Aj Aj( 6   ) 7  A
j! A
j" G



 A
j!
  F
 @@ ( "E
  Aj( E
  
 A
j" G
 

   6  A 6   Aj Aq:    Aj 6   Aj / ;    A
j  kA
m6   Aj Aj-  :  

 Aj" A8j)  7   Aj" A1j)  7   ) )"	7  A j) !
  Aj A(j-  :    Aj 
7    	7   Aj ) 7    A j )  7    A6 
 A@k$ 

~# A k"$  A j Aj) 7  A j Aj) 7   ) 7X A0j A j ( " (T@ - 0AG@ - 1!  A :     : @@@@@ (  
 Aj2

 (E@@ (" E
  A

-- Chunk 35 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5101-5250
j( E
   
 Aj( !  A
j( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 Aj( "E  Er AtEr
  

 (!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 A
j( "E  Er AtEr
  

@@@ Aj(  
@ A
j( " E
  Aj( E
   
@ Aj( " E
  A
j( E
   
 A8j( " E
 A<j( E
  

@ A
j( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

@ A
j( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj( " E A
j( Er! Aj( E@ 
  

 
   
 Aj( E
 

 A(j A j) "7  A j A j) "7  Aj A@k) "	7   A8j) "
7  A j 7   Aj 7   Aj 	7   Aj 
7   A:  @@@@@ (  
 Aj2

 (E@@ (" E
  A
j( E
   
 Aj( !  A
j( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 Aj( "E  Er AtEr
  

 (!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 A
j( "E  Er AtEr
  

@@@ Aj(  
@ A
j( " E
  Aj( E
   
@ Aj( " E
  A
j( E
   
 A8j( " E
 A<j( E
  

@ A
j( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

@ A
j( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj( " E A
j( Er! Aj( E@ 
  

 
   
 Aj( E
  
 A j$ 
~# Ak"$  (!
 ( !
@@@@@AA]"@ AjA )  7   AjA )  7   A )  7  A
A]"	E
 	AjA (  6   	A )  7   A jB7   	6D B7<  68 Aj Aj Aj (AF
  (6  Aj-  :  Aj AjA A A8j (AF
 Aj AjA A A j (AF@ Aj Aj( 6   )7

 Aj ( -  (AF
  )"
7d A j( ! 
A A
 
"
 Aj(  
( A
! @ 



AA 
A
A 

-- Chunk 36 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5251-5400
 Aj AjAr"Aj( 6   ) 7

 Aj Aj( 6   )7
 Aj" Aj( 6   )7@ ("E
  (E
  
 Aj ( 6   )7 A j"A A Aj" A(j A j) 7  A0j Aj) 7   A j) 7  ( ! A j( !
  	@@@@ A
F@ A j ( A
j(  ( " ("Q (`AF
 A@k" A j"	( "6  A(j 6   )d"
78  
7   - 
: , A j 
 
 A j( (`"A
G
  A(jA 6   A jB 7   A
jA ( "6   AjB 7   Aj 6   AjB 7   A ( 6  A 6  ( ! ((" @   A
lj!	 ! @@  ( "E
   Aj( E
  
  A
j"  	G
 

 ($" E  A
lErE@ 
 @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 Aj( " E  A
lErE@ 
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
 A,j( E
  

 Aj A0j) "
7  Aj A(j) "7   ) "7  A j 
7   Aj 7   Aj 7   A
j 6   Aj 6   A6  ( ! (!

 A j Aj) "
7  A j A j) "7  A j A j) "7   A j) "7<  A j 
7   Aj 7   Aj 7   Aj 7   A6 

 A j A j( "
6  A j A j) "
7   	) "7   )d"78  A$j 
6   A
j 
7   Aj 7   A
j 7   Aj 6   A6  ( ! ((" @   A
lj!	 ! @@  ( "E
   Aj( E
  
  A
j"  	G
 

 ($" E  A
lEr
  
 @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 Aj( " E Er  A
lErE@ 
@ ( " E
  Aj( E
   
 (
! Aj( " @  At! Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 

 Aj( " E  AtErE@ 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 

~# Ak"$  A j  n Aj n Aj n Aj (p" (x@@@@@@@@@ )BR@ Aj Aj") 7  Aj Aj) 7   )7  Aj" ) 7 Aj"( !
 Aj( ! Aj( !
 Aj( ! Aj) ! Aj (" (
 (AF
 ( !
 Aj( ! ( ! Aj( ! (! (! Aj (" ( A0j Aj - 0Aq
A!

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 A j Aj( 6   )7< A68 Aj=

 - 1A G@A!

 Aj A(j Aj ((!  - ,Aq":   6 A j  -  AqE@A!

 - !! A8jAr! AjAr! ! A!
@@@@@@@@@@@@@@@ Aq"A,G@ A F
 
A	! 


  Aq
   Aj  - AqE
 - !

A ! A : 
 Aq" A"G@AA  A F! 


 Aj  - AqE
 - A"G@A! 


  Aj  (! (! (! ("  (AF
 E@  Azj

@@@ Azj 
 A A
A 

-- Chunk 37 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5401-5550

 A A
 A

A
  @ 


 E
 
AG
	 AjArA A Aj( ! Aj( !  Aj( ! (! @  A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 	E 	A
lEr
 

 A A
	
 
 Aj AjH (AF
 (! (!	 (!
	
 A A

 
AF@ Aj Aj& - AF
 - !


 AjA A Aj( ! (! (! Aj( 
!  



 Aj( ! Aj( !  Aj( ! (! 
	


 Aj( ! (!  (! (!
	
 AjA A Aj( ! Aj( !  (! (!

 AjArA A Aj( ! Aj( !  Aj( ! (!

 Aj Aj ("AG@ Aj( ! Aj( !  (! @  A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 	E 	A
lEr
 

 Aj Aj ("AG@ Aj( ! Aj( !  (! @  A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 	E 	A
lEr
 

 Aj" 
Aq6  Aj"  6  Aj"  ) 7   	6  6  )7 AjAȀ 6  AjA 6  AjA 6  Aj" Aj) 7  Aj" 6  Aj" )7  Aj" Aj) 7  Aj 
6  Aj 6  Aj 6  Aj 6  Aj 6  Aj 7  Aj 6  Aj Aj6  Aj Aj6   )7  
6  6  
6  Aj6 Aj ) 7   )7 Aj Aj Aj Aj AjW  Aj) 7   Aj) 7   Aj) 7   Aj) 7  Aj Aj) 7   )7@@ (AG@ A j AjAr" A(j) 7  A j  A j) 7  A j  Aj) 7  A j  Aj) 7  A j  Aj) 7  A 68   ) 7<

 Aj Aj) 7  Aj ) 7  Aj  ) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 A j Aj( 6   )7< A68 Aj=
 (@ 
 (@ 
 (tE
 





 Aj @ ("AG@  ) 7  Aj Aj( 6 

 A8j  (8"AF

 A j( ! A@k( !  (<! 


 Aj A !  - 	! - Aq
 
A! 


 Aj  ) 7  Aj ) 7  Aj ) 7   )7 B 7 A ( 6 Aj AjA  Aj AjE@ A j Aj( 6   )7< A68 Aj=



A! E

 @  A
lj! !@@ ( "E
  Aj( E
  
 A
j" G
 

 	E 	A
lEr
  
 Aj 6  Aj  6   6  6 AjA߉ A" Aj
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 A j Aj( 6   )7< A68 Aj= E ErE@ 
 
@ 
At! Aj!@@ A|j( " E
  ( E
   
 A j! A`j"
 

 E AtEr
  
 
E ErE@ 

 
E Er
  

@ (" E
  (E
   
@ (" E
  (E
   
 (tE
  
 Aj A8j (AG@ Aj Aj( " 6   )"7 Aj  6   7 Ajm A8j: Aj$ 

-- Chunk 38 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5551-5700
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj) 7A A+ AjA܌ A  
A A7 AjA A  
~# Ak"$ @@@@@@ ( Ak 
 Aj( ! Aj( ! A,j( ! Aj( ! (
! (! ((!	 (!
 (! ( !
 ) ! )! )! Aj A
j( 6   )7   7   7  7 A j Aj 
 T@@ - XAG@ - YE
 (! ( !
 (! A jB 7  A8jB 7 A ! A 6L A ( "6@  64 B 7, A ( 6( A l! 
 E
 A(j G (( (0"A lj! !
 
!@ ( AF
 A j A  B 7  Aj A jA  A jA:   A jB 7  A j! Aj! A j! 
Aj"

 
  60

 A j A j) "7  A>j A j) "7  A6j A j) "7   A j) "7.  A j 7   Aj 7   Aj 7   Aj 7   A6  > @ 

 @ At! Aj!@@ A|j( " E
  ( E
   
 A j! A`j"
 

 E AtErE@ 
 
E ErE@ 

 	E Er
 	

 A j
!  60  
j"
 F
 @ "A j!@@@@@ (  
 Aj2

 (E@@ ("E
  A
j( E
  
 Aj( ! A
j( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 Aj( "E Er AtEr
 

 (! Aj( "@ At! Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 
 (!
 A
j( "E Er AtEr
 

@@@ Aj(  
@ A
j( "E
  Aj( E
  
@ Aj( "E
  A
j( E
  
 A8j( "E
 A<j( E
 

@ A
j( "E
  Aj( E
  
 A(j( "E
 A,j( E
 

@ A
j( "E
  Aj( E
  
 A(j( "E
 A,j( E
 

 Aj(  Aj( "E A
j( Er
  
  
G
 

 E A lErE@ 

 Aj A j) 7  A j A j) 7  A j A@k) 7  A j A8j) 7  A j A0j) 7   )(7X  Aj A jAՄ A#  A 6 

 A j Aj) 7  Aj Aj) 7   ) 7 Aj A0j) 7  Aj A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X A8j Aj) 7  A0j Aj) 7   ) 7(   Aj A j A(jR

 A j Aj) 7  Aj Aj) 7   ) 7 Aj A0j) 7  Aj A(j) 7  A j A j) 7  A j Aj) 7  A j Aj) 7  A j Aj) 7   ) 7X A8j Aj) 7  A0j Aj) 7   ) 7( Aj A
j( 6   )7    Aj A j A(j S

  A6   AjA
6  >
 @ 

 @ At! Aj!@@ A|j( " E
  ( E
   
 A j! A`j"
 

 E AtErE@ 
 
E ErE@ 

 	E Er
  	
 Aj$ 
:~# Ak"$  Aj  n Aj n Aj n Aj ( (@@@@@@@@@@@@@@@@@@@@ )BR@ Aj Aj" ) 7  Aj Aj) 7   )7  Aj") 7 Aj"( ! Aj( ! Aj( ! Aj( ! Aj) !  Aj ( (
 (AF
 ( ! Aj( !  ( ! Aj( !
 (!
 (! Aj ( ( Aj AjA !  - Aq


 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7 A6 Aj=

 - "A G@ A"G@A
!

 Aj AjL - AF
A!

 Aj Aj Aj"L@ - AG@ - ! Aj  ("AG@ Aj) !
 (!

 Ak
 ("Av!  Aj) !

-- Chunk 39 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5701-5850
 Aj( !

 A j  - XAqE@A!


 - YA G@A!


  A j  - T (P! A 6 A j A! - HAqE
 - I! Aq! Aj!	 AjAr!
 AjAr!@@@@@@  Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A@k  - @AqE

 - A! 
  Aq" A"G@A!  A G

A!


 A8j  - 8AqE

 - 9A"G@A!


  Aj  (! (!  (! (! (AF@ !


@ E@  AG
 (  A杛G!


A!
 AF@ (  A杛G!

  E
  
 

 E
 AjArA A A6


 @ Aj )7  Aj Aj( 6 A ! 

 AjArA A Aj Aj) 7  A6  )7


 Aj @ (" AG@ 
 ) 7  
Aj Aj( 6    6

 Aj  (AF

 Aj Aj) 7   )7 A6


 Aj  ("AG
 A0j  - 0AqE@A! !


 - 1A G@A! !


  A(j  - ,! ((! A 6 B7 A j A!@@ -  AqE
  - !!  Aq!A !A!
@@@  Aq"A,G@ A F
 E
A !

  Aj  - AqE@A!

 - ! 

A!

  AqA F@A!

 Aj N (AF@ )!
 (!
 (!

 Aj"  	Aj) 7  Aj" 	Aj) 7  Aj" 	Aj) 7  Aj" 	A j) 7  Aj" 	A(j) 7  Aj" 	A0j) 7  Aj" 	A8j( 6   	) 7 ("
AF
 )!
 Aj"
 ( 6  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj" ) 7  Aj"  ) 7   )7 ( F@ Aj E (!
 (!
 
 A lj"  
7   
6   A
j )7   Aj ) 7   A
j ) 7   A$j ) 7   A,j ) 7   A4j ) 7   A<j ) 7   A j 
( 6 A!  Aj"6 Aj  - !  - Aq
 

 Aj> (!

  6  ("
6  ("6 Aj  ("AG@ Aj) !
 (!
 Aj> (!

 Bp!
 (@ Aj>
  
!  6  
6  6
 Aj A ! - 	!  - Aq
 


 Aj ) 7  Aj ) 7  Aj  ) 7   )7 B 7 A ( 6 Aj AjA  Aj AjE@ Aj Aj( 6   )7 A6 Aj=



 /  - Atr!  Aj) !
 Aj( ! - !


 Aj @ - AqE@A!

 - A G@A!

  Aj  (!	  - Aq"
:   	6 Aj 	A!@@@ - AqE
  - ! AjAr! AjAr! 
!@@@@@@@@@@@ Aq"A,G@ A F
 
Aq
A	!


 Aq
  	 Aj 	 - AqE
 - !

A !
 A : 
 Aq"A"G@A! A G
A!

 Aj 	 - AqE
 - A"G@A!


-- Chunk 40 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:5851-6000

 	 Aj 	 (! (! (! (!  (AF@  !


@  E@ AG
 A AA G!

A! AF@ A AA G!
 E
  
 
 
 Aj AjH (AF
 (!
 (!
 (!

 
 AjArA A Aj Aj) 7   )7


 Aj 	@ (" AG@  ) 7  Aj Aj( 6    6

 Aj 	 (AF

 Aj Aj) 7   )7 

	
 AjArA A

 Aj Aj) 7   ) 7

 Aj  ("AG@ Aj( ! Aj( !
 (! 
@  
A
lj! ! @@  ( "
E
   Aj( E
  

  A
j"  G
 

 
E 
A
lEr
 

 Aj @@ - Aq@ - A G
  
 
B !A!A 

 
@  
A
lj! ! @@  ( "E
   Aj( "E
  
  A
j"  G
 

A ! A! 
E
 
A
l"E
 

 
@  
A
lj! ! @@  ( "E
   Aj( "E
  
  A
j"  G
 

A ! A
! 
E
  
A
l"E
  



 Aj 	A ! - ! - Aq




A!
 Aj 6  Aj 6  Aj 6   6 E

 
@  
A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 
A
lE 
E Err
  
 Aj( ! Aj( !
 Aj( ! (!
 Av!  
 B !



 Aj @@ - AqE
 @ - A G
   Aj  - ! Aj ("@ - AqE
  - ! Aq! AjAr! AjAr!
@@@@ Aq"A,G@ A F
 Aq
A	!

 Aq@A!

  A j  - xAqE
 - y!
 Aq"A"G@A! A G
A!

 A j  - hAqE
 - iA"G
  Aj  (! (! (! (AG@ E E Err
 

 AF
 (!


 Aj  ("AG@ Aj( !
 Aj( ! (!


-- Chunk 41 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6001-6150
 A j  - pAqE
 - qA G@A
!

 A!A 

 Aj @ ("AG@  
) 7  Aj 
Aj( 6 

 Aj  ("AG
  A j A ! - a! - `AqE



 Aj( !
 Aj( ! (!

A!

A!

A!
 Av!   
B !



 Aj) !
 (!

 Aj 
7  Aj 
6   6 A6

A!
 Aj 6  Aj  6  Aj 6   6 A6
@ E
  Aj> (AF
  (! 

 Aj) !
 Aj( !
 (!

 Aj Aj) "
7    6  Aj( "6 Aj  
B ! 
! ("AF
 Aj) !
 (!
@@   
 @  A
lj! ! @@  ( "
E
   Aj( E
  

  A
j"  G
 

 E A
lEr
 

 AjAr>
 Av!  
!

 Aj 
7   6   6   AjAr!@@@@ -  Aq@ - A F
  
@@@   
 @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 E A
lEr
 

 >
A ! A!

 @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 E A
lEr
 

 >
A ! A
!

   Aq! ! 
!  A~q
!  Aj 7   6    r"6 Aj Aj (" AG@ Aj) !
 (!@@  
 B "@  A
lj! !@@ ( "
E
  Aj( E
  

 A
j" G
 

 "E A
lE Err
 

 AjAr>

 Aj"  7   6  6  )7 AjAȀ 6  AjA 6  AjA 6  Aj" Aj) 7  Aj" 6  Aj" )7  Aj" Aj) 7  Aj 6  Aj 6  Aj 6  Aj 
6  Aj 
6  Aj  7  Aj 6  Aj Aj6  Aj Aj6   )7  6  6  6  Aj6 Aj  ) 7   )7 Aj Aj Aj Aj AjY  Aj) 7  Aj Aj) 7   Aj) 7   Aj) 7  Aj Aj) 7   )7@@ (AG@ Aj AjAr" A(j) 7  Aj  A j) 7  Aj  Aj) 7  Aj  Aj) 7  Aj  Aj) 7  A 6   ) 7

 Aj Aj) 7  Aj ) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA @ (A
F@ AjA 6  A 6 B7 A 6 Aj AjE


 AjA6  B7 A 6 A6  Aj6  Aj6  Aj6 Aj Aj

 Aj Aj( 6   )7 A6 (A
F
  Aj=
@ (" E
  (E
   
@ (" E
  (E
   
 (" E
 (E
  




-- Chunk 42 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6151-6300
A!
 Aq  Atr! 
 Aj 
7   6   6 AjA A
 Aj
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7 A6 Aj= E 
ErE@ 
 @ At! Aj!@@ A|j( " E
  ( E
   
 A j! A`j"
 

 E AtEr
  
 E ErE@ 
 E Er
  
@ (" E
  (E
   
@ (" E
  (E
   
 (" E
  (E
   
 Aj Aj (AG@ Aj Aj( " 6   )"
7 Aj  6   
7 Ajm Aj: Aj$ 
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   Aj) 7A A+ AjA܌ A  
A A7 AjA A  
~# Ak"$ @@@  @@@@@@@@@ ( AG@ A@k Aj) 7  A8j Aj) 7   ) 70 A j A0jU (pAG
 Aj" Aj-  :   Aj Aj) "
7  Aj Aj( "6   / ;  Aj) "
7 A j) ! Aj-  !  A$j 6   A
j 
7   Aj 
7   Aj :    Aj 7   A6    /;   Aj -  :  

 A j Aj) 7  A j Aj) 7   ) 7X Aj A
j( 6   )7 A j AjA  A0j A j Aj A jV - 0AG@ - 1! Aj A0j Aj (0AF
  (46  A8j-  :  A0j AjA A
 ) (0AF@ A j A<j( 6   )47\


 A j ( -  (XAG



 A&j A j) "
7  A
j A j) "
7  Aj A@k) "7   A8j) "7  A j 
7   Aj 
7   Aj 7   Aj 7   A6 
@ Aj( " E
  Aj( E
   
 A(j( " E

 A,j( E

  


 A j Aj( "6   )"
7t  A
j 6    
7  A 6 
	
 Aj Aj-  :    / ; Aj-  !
 A j( ! A j( !	 (t! Aj A j Aj (pAF
  (t"6@ A j-  @ Aj( !

 (" Aj( F@  A (!
  Aj"6 (  jA,:  
 A :  Aj"(  F@  A Aj( !
 (  jA":   Aj" Aj"6  (  kAM@  A ( !
 (  j"A (  6   AjA /  ;    Aj"6  Aj(  kAM@  A Aj( !
 (  jA ;   Aj Aj6  A j  @ (pAG@ A j-  ! A0j (t"   A
lj! E! Aj!
 !@ Aq@ (" 
( F@  A (!
  Aj6 (  jA,:  
 A j  (  Aj(  (pAF
A!  A
j"G
 
A  
AqA G (0AF
 A j AjA A 
) (pAG
 A j A j( 6   )t7\

 A<j A jAr"Aj( 6   ) 74

 A j ( -  (XAG


 A j A0jAr"Aj( 6   ) 7\

 A<j A j( 6   )t74

 A j A jAr"Aj( 6   ) 7\

 A j Aj( "6   )"
7t  A
j 6    
7A 

 A j A<j( 6   )47\
 Aj" A j( 6   )\7@ ("E
  (E
  
 A8j ( 6   )70 A j"A A% A0j"  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7 A
6  @  A
lj! ! @@  ( "E
   Aj( E
  
  A
j"  G
 

 	E 	A
lEr
 

 Aj" A j( 6   )\7@ ("E
  (E
  
 A8j ( 6   )70 A j"A A
 A0j"  A j Aj) 7   Aj Aj) 7   Aj Aj) 7   Aj ) 7   A6 
@ Aj( " E
  Aj( E
   
 A(j( " E
  A,j( E
   
 Aj$ 
C~# Ak"$  A j  n Aj n Aj (x" (@@@@@@@@@@@@@@@@ )BR@ Aj Aj) 7  Aj Aj) 7   )7  Aj) 7 Aj( !
 Aj( ! Aj( ! Aj( ! Aj) ! Aj (" ( A j Aj - pAqE

 - q" A G@  A"G@A
! 

 Aj AjP - AF
A! 


-- Chunk 43 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6301-6450

 Aj Aj Aj"P@ - AG@ - ! Aj  (" AF
 Aj) ! (!A 

 Aj) ! Aj( ! (" Av
! B ! !


 AqAF
 A j  - hAqE@A! 


 - iA G@A! 


  A j  - d! A j (`" - XAqE
	 - Y!  Aq! AjAr!	 AjAr!@@@@  Aq"A,G@ A F
 Aq
A	! 

 Aq@A! 

  A j  - PAqE

 - Q! 
  Aq"
A"G@A!  
A G
A! 

 A@k  - @AqE

 - AA"G@A! 

  Aj  (! (! (!  (AG@ E  E Err
 

  AF
 (!


 Aj  (" AG@ Aj( ! Aj( ! (!


 A j  - HAqE

 - IA G@A !A
! 

 A ! 

 Aj  (" AG@ 	 ) 7  	Aj Aj( 6 
	
 Aj  (" AG
 A8j A ! - 9!  - 8Aq
 

	
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj AjE@ Aj Aj( 6   )7 A6 Aj= (!



 /  - Atr! Aj) "B ! Aj( ! - !  !


 A0j  - 0AqE@A! 

 - 1A G@A! 

  A(j  - ,! ((! A6 A j  -  AqE@A! 

 - !!  Aq! AjAr!
 AjAr! Aj! Aj! AjAr!@@@@@@@@@@@@@  Aq"A,G@ A F
 Aq
A	! 

 Aq@A! 

  Aj  - AqE
 - ! 
  Aq"A"G@AA A F! 

 Aj  - AqE
 - 	A"G@A! 

  Aj  (! (! (! (!  (AF
  E@ A}j



@@@ A}j 
 A A
A 

 A A
 A

A
 @ 


 	E
 (AG
 AjArA A Aj( ! Aj( ! (! (! A! 
E@A !


 	

 A A
	
 	E
 AjA A Aj( ! Aj( 

 A A

 (AF
 AjA A Aj( ! Aj( 
! (! (! 


 Aj @ (" AG@  ) 7  Aj Aj( 6 

 Aj N (AG@ Aj A @@@@@ (  
 2

 (E@@ (" E
  (E
   
 (!
 (" @  At! 
Aj! @@  A|j( "E
   ( "E
  
  A j!  A`j"
 

 (" E  AtEr
 


 (!
 (" @  At! 
Aj! @@  A|j( "E
   ( "E
  
  A j!  A`j"
 

 (" E  AtEr

-- Chunk 44 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6451-6600
 


@@@ ( 
@ (" E
  (E
   
@ (" E
  (E
   
 (" E
 (E
  

@ (" E
  (E
   
 (" E
 (E
  

@ (" E
  (E
   
 (" E
 (E
  

 ( (" E (Er
   
 Aj AjA 

 (! 
 Aj( ! Aj( ! (!
	
 Aj @ (" AG@  
) 7  Aj 
Aj( 6 

 Aj  (AG@ (! (!
 (!	

 (! 
 Aj( ! (! (

 Aj AjA  Aj" 6  Aj 
6   	6 A6 Aj  (" AG@ Aj( ! Aj( ! (!@ 
E
  ("E
  
@@@@ ( 

 Aj( E@@ ("E
  Aj( E
  
 Aj( !	 Aj( "@ At! 	Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 Aj( "E AtEr

 	


 (!	 Aj( "@ At! 	Aj!@@ A|j( "E
  ( E
  
 A j! A`j"
 

 Aj( "E AtEr

 	


@@@ Aj(  
@ Aj( "E
  Aj( E
  
@ Aj( "E
  Aj( E
  
 Aj( "E

 Aj( E

 


@ Aj( "E
  Aj( E
  
 Aj( "E

 Aj( E

 


@ Aj( "E
  Aj( E
  
 Aj( "E

 Aj( E

 


 Aj( "E Aj( Er! Aj( E@ 

 


 
 


 Aj2
	
 (!  (! (! Aj A ! Aj 6   6   6 Aj @@@@@@ - Aq@ - A F
  E
 E ErE@ 
 Aj( 
@  E
  E ErE@ 
@@@@ Aj(  
 Aj2A !A! 

 Aj( E@@ (" E
  Aj( E
   
 Aj( ! Aj( " @  At!  Aj!@@ A|j( "E
  ( "E
  
 A j!  A`j" 
 

 Aj( " E  AtEr
 A !A! 

 (! Aj( " @  At!  Aj!@@ A|j( "E
  ( "E
  
 A j!  A`j" 
 

 Aj( " E  AtEr

-- Chunk 45 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6601-6750
 A !A! 

@@@ Aj(  
@ Aj( " E
  Aj( E
   
@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  A !A! 

@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  A !A! 

@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  A !A! 

 Aj( " E Aj( "Er! Aj( E@ 
  A !A! 

 
   
A !A! 

 Aj2

 Aj( E@@ (" E
  Aj( E
   
 Aj( ! Aj( " @  At!  Aj!@@ A|j( "E
  ( "E
  
 A j!  A`j" 
 

 Aj( " E  AtEr
 

 (! Aj( " @  At!  Aj!@@ A|j( "E
  ( "E
  
 A j!  A`j" 
 

 Aj( " E  AtEr
 

@@@ Aj(  
@ Aj( " E
  Aj( E
   
@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  

@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  

@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  

 Aj( " E Aj( "Er! Aj( E@ 
  

 
   
A !A
! 

  (!  )! Aj A  Bp!

 AjArA A Aj( ! Aj( ! (!  Aj( 
!A !	

 Aj @ (" AG@ 
 ) 7  
Aj Aj( 6 

 Aj  (" AF

 Aj( ! Aj( ! (!

  A ! - !  -  Aq
 
A! 

 Aj AjA !   B7   6 Aj Aj@@ ("AG@ Aj) ! (!  E

@ (" E
  Aj( E
   
@@@ Aj(  
 Aj( E@@ (" E
  Aj( E
   
 Aj( !  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 Aj( "E  Er AtEr
  

 (!  Aj( "@ At!  Aj! @@  A|j( "E
   ( E
  
  A j!  A`j"
 
 (! 
 Aj( "E  Er AtEr
  

@@@ Aj(  
@ Aj( " E
  Aj( E
   
@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E
  

@ Aj( " E
  Aj( E
   
 Aj( " E
 Aj( E

-- Chunk 46 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6751-6900
  

@ Aj( " E
  Aj( E
   
 Aj( " E

 Aj( E

  


 Aj( " E Aj( Er! Aj( E@ 

  


 

  


 (!  )! Aj A  Aj 7    6 Aj Aj" A  AjAȀ 6  AjA 6  AjA 6    Aj) 7  6  Aj )7  Aj Aj) 7  Aj 7  Aj 6  Aj Aj6  Aj Aj6   )7  
6  6  Aj6 Aj Aj Aj Aj AjA [ Aj Aj) 7  Aj Aj) 7  Aj Aj) 7  Aj Aj( 6   )7@ (AG@ Aj AjAr" Aj( 6  A 6   ) 7

 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj Aj
 Aj Aj( 6   )7 A6 Aj=
 (@ 
 (|E

 


 Aj2





A! 
@@@@@ (  
 Aj2

 (E@@ ("E
  Aj( E
  
 Aj( ! Aj( "@ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 Aj( "E AtEr
 

 (! Aj( "@ At! Aj!@@ A|j( "
E
  ( E
  

 A j! A`j"
 

 Aj( "E AtEr
 

@@@ Aj(  
@ Aj( "E
  Aj( E
  
@ Aj( "E
  Aj( E
  
 Aj( "E
 Aj( E
 

@ Aj( "E
  Aj( E
  
 Aj( "E
 Aj( E
 

@ Aj( "E
  Aj( E
  
 Aj( "E
 Aj( E
 

 Aj( "E Aj( Er! (E@ 
 

 
  
 
E 	E rr
  	
  Av!

 Aj( ! Aj( ! (!

A! 

A! 
  Av!

A! 
  Aq Atr!  B !
 Aj 7   6  6 AjA A
 Aj
 Aj Aj) 7  Aj Aj) 7  Aj Aj) 7   )7 B 7 A ( 6 Aj AjA  Aj AjE@ Aj Aj( 6   )7 A6 Aj= 
E ErE@ 

 E Er
 



@ E
  (E
  
 (|E
  
 Aj AjAr!@@@ (AG@ ("  (F@ Aj  A (! 
 (  jA :     Aj6 Aj AjA A (AF
 ("  (F@ Aj  A (! 
 (  jA::     Aj6 Aj r Aj Aj ("  ( (@  
 (AG@ (" (F@ Aj A (!
 ( jA :    Aj6

 Aj Aj( 6   )7

 Aj Aj ! (AG


 Aj Aj( 6   )7
 Aj"  Aj( 6   )7@ ("E
  (E
  
 Aj"  ( 6   )7 Aj" A A  Aj" Aj Aj) 7  Aj Aj) 7   Aj) 7    ) 7A A+ AjA܌ A  
 Aj Aj( " 6   )"7 Aj  6   7 Ajm (" E Aj( Er!@ (E@ 
  

 
   
 Aj$ 

-- Chunk 47 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:6901-7050
A A7 AjA A  
	    

      
   ( " (   Aj(  
2   ( !  E@ E@   
   
   
2   ( !  E@ E@   
   
   

   (  

   (  
   Aj( @  ( 

# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   Af  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@    f ( !
  (  j A
j    j6 
 Aj$ A 
# A k"$ @  j" I
   Aj( "At"   K"A AK!@ @ AjA6   6   ( 6

 A 6
   Ajh ( AF@ Aj( " E
 (   
   )7  A j$ 
 
J  Aj(   Aj"( "k I@    f ( !
  (  j     j6 A 
@@@@@@@A" A H
  ( "E
 ("
 E


!A !

 

A!

  A ^"


 A]"E

   6A !

   6A!
   6   Aj 6 
)AA]"E@AA 
  A6   6 
# A k"$   6
  6 A$jA6  B7 A 6 A
6,  A(j6   Aj6( B 74 AБ ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# A k"$   6
  6 A$jA6  B7 A 6 A
6,  A(j6   Aj6( B 74 AБ ( 60 A@k A0jA  Aj A@k@A A7 A jA A  
   )07  A6   A
j A8j( 6  A j$ 
# Ak"$   6
  6@@ @ A4jA6  A$jA6  B7 A 6 A
6,  6<  68  A(j6   A8j60  Aj6( B 7D AБ ( 6@ A j A@kA  Aj A j
   )@7  A6   A
j A j( 6 

 A$jA6  B7 AȒ 6 A
6D  A@k6   Aj6@ B 7, AБ ( 6( A j A(jA  Aj A j
   )(7  A6   A
j A0j( 6 
 Aj$ 
A A7 A jA A  
=  (!  ( !A
A]" E@A
A 
   6   6   6   
K@ @ ( "
A A
A  
Aԓ AA  
   6    )7 
,# Ak"$  Aj  Aj( 6    ) 7  p 
,# Ak"$    ) 7 AjA A   ( 
'
~# A k"	$ @  @~@@@@@@@@@@  AqF@ At"An!@ E@A!

 A]"E

 	 6$ 	 6  	A 6( "
B~"B 
 "@  I@ 	A jA  f 	( ! 	((!
  jA  Aj"   jjA :   	( !  j!

 	 
6(A !A ( !@@@@@@ Aq" 
A!

A
!

A
!

A
!
A   k"  K"A`j" K@ 
!


@ 
A j" 
I
  K
 
Aj" 
I
  
K
@@   
j"-  "j1  "BQ
   Aj-  "j1  "BQ@ 
Aj!


  Aj-  "j1  "BQ@ 
Aj!


-- Chunk 48 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7051-7200

  Aj-  "j1  "BQ@ 
Aj!


  Aj-  "j1  "BQ@ 
Aj!


  Aj-  "j1  "BQ@ 
Aj!


  Aj-  "j1  "BQ@ 
Aj!


  Aj-  "j1  "
BR
 
Aj!

 
B  B!


 
 j" B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A	!  A	j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  
jB  B!


 Aj B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  
jB  B!


 A
j B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87  A!@@  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A!  Aj-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A
!  A
j-  "j1  "BQ
 A!  Aj-  "j1  "
BR

  
jB  B!


 Aj B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87   
A|j" 
M@ 
Aj!
 !
 "
 K




A A!A  
 


A A!A  
 A 
A A.A  
  A  
A A
A  
  
A  
A A
A  
  Aj"j-  "A=F
   j-  AG
  B B !

B!B 

@ Axj"
 K  
OrE@@@@@@@@ Aj" I
  K
 
Aj" 
I
 Aj" I
  
I
  
K
@@   j"
-  "j1  "BQ
   
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  

-- Chunk 49 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7201-7350
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "BQ@ Aj!

  
Aj-  "j1  "
BR
 Aj!
 B  B!


 
 j B4 B: B. B( B" B
 B 
B"B8 B(B  BB? BB BB BB B(B B87   Aj" M@ ! ! !
  
O
	


A A!A  
  AĚ  
A A
A  
A A
AԚ  
 
 A  
  
A  
A A
A  
 ! ! 
!
 A AK!A  k!
 ! !@@@@@@@@@@@@@@@@@@@@@@@@@@@ Aj"E@@@@  M@@  F@A !B !A !B !

  j!  j!
B !A !A !A !A !
@  
k!A !@@@@@@  
j"Aj" I@A A
A  
  j!
  
j"-  "A=G@ 
A L
  j" I
 B B !
)
 AqE
 
Aj 
H
   
!  Aj"G
 
 !

     jA Jj" O@ B B !
'
A A
A  
A A
A  
A A
A  
 A
F
  j1  "BQ@  j" O@ B B !
%
A A
A  
 
As Aj!
  Aj"AzlA>q ! ! 
! !
 j G


B !A !~@@@@@@@ 	   
 	A jA6  	B74 	A 60 	A
6
 	A 6 	 	Aj6@ 	A0jAĝ  
B

B

B

B 

B(

B0
!A!
  P@ @ 
  
 K!  
  
K!B !B8!@  F
  j  <   Bx|! Aj! B|" T
 

 	(("   I
$
  j" I
 Aj" M@ BB B B!
!
A A!Aԝ  
  Aԛ  
A A!A  
A A
Aԝ  
  
A  
  V
 Aj" I
  
K
  F
   j"
-  "j1  "BQ
  
j"AI
  
Aj-  "j1  "BQ
 AM
  
Aj-  "j1  "BQ
 AM
  
Aj-  "j1  "BQ
 AM
  
Aj-  "j1  "BQ
 AM
  
Aj-  "j1  "
BQ
	 AM
  
Aj-  "j1  "
BQ

 AM

  
Aj-  "j1  "

-- Chunk 50 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7351-7500
BQ

 
Axj!
 B|!  j"Aj B4 B: B. B( B" 
B
 
B 
B"BB? BBB =    BB BB B(B B8>   Aj I Aj! Aj!E
 
A A
Aě  
 Aj" I
 !


AAA  
 Aj" I
 !


AAA  
 Aj" I
 !

AAA  
 Aj" I
 !

AAA  
 Aj" I
 !

AAA  
 Aj" I

 !

AAA  
 Aj" I

 !
 B  B!


A A
A  
  A  
  
A  
A A A  
AAA  
A A
A  
A A
AЗ  
A A
A  
A A
A  
A A
A  
A A
AИ  
A A
A  
 AqAF
 B~
! 	($@ 	( 
 	  B7 	B 7$ 	A ( 6  	A0j 	A jA̞  	Aj 	A0j
 	( ! 	)$!  A j 	Aj) 7   Aj 	)7   Aj 7   A
j 6   AjA6 A

 	((
! 	) !  A
j 6    7A 
6  	A j$ 
A A7 	A jA A  
	    
# A k"$   6  6  Aj  q@ (AG@   )
7  A 6   A
j Aj( 6 

 A jA6  B7D AĞ 6@ A
6\  A j6P  6X A0j A@k  Aj A0j  A6 (4@ (0
  A6 @@@@@@@@@ Aj( 
			 
 A(j( E
 A$j( 

 Aj( E
 Aj( 

 Aj( E
 Aj( 

 Aj( E
 Aj( 

 Aj( E
 Aj( 

 Aj( @ Aj( 
 A$j( E
 A j( 

 Aj( @ Aj( 
 A$j( E
 A j( 

 Aj( @ Aj( 
 A$j( E
 A j( 

 Aj( E
  Aj( 
 A j$ 
 
d@@@@  A N@  
A!

 
  A]"E

A
A]"E
 A 6   6  6  
  A 
A
A 
I@  @  ( "E
  (  @ 

Aԓ AA  
A A
A  
N# Ak"$   ( !   A A7    6
 A A A
jA   Aj$ 
# Ak"$   ( !   AԦ A7    6
 A A
 A
jA    Aj6
 A A
 A
jA    Aj6
 A A A
jA   Aj$ 

   (  z

-- Chunk 51 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7501-7650
# Ak"$ @@@@@@@  -  Ak 
  A A

  A A

  A A

  A A

  A A

  A A
  Aj$ 
# Ak"$   ( !   A A
7    Aj6
 A A	 A
jA    6
 AĦ A A
jA    A
j6
 A̦ A A
jA   Aj$ 
# A@j"$   ( !  AjA6  A,jA&6  A$jA&6    Aj64   68 B7 A 6  A'6
   A
j6<  Aj6  A<j6(  A8j6   A4j6   A@k$ 
^# A0k"$    ( 6
 A$jA6  B7 A 6 A(6,  A(j6   A
j6(  Aj A0j$ 
b# A0k"$   ( !  A
jA6  B7
 A 6 A&6$   6,  A j6  A,j6   Aj A0j$ 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F   Af  ( 
  ( j :      (Aj6

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I    f (  
  ( j A
j   (  j6 
 Aj$ A 
L  Aj(   Aj"( "k I    f (  
  ( j    (  j6 A 
# A k"$  Aji (
! (A A! B 7 A ( 6 A j AjA̞   A jE@  A
jA6   Aj 6    6  Aj )7   A6   Aj Aj( 6 @ ( AI
  Aj( E
  (
 A j$ 
A A7 A jA A  
# A0k"$ @@@@@@@@@@@@  ( Ak
	

 
 A,jA6  B7
 A 6 A)6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A*6   Aj6  6(  Aj6   Aj


 A,jA6  B7
 A 6 A&6   Aj6  6(  Aj6   Aj
	
 A,jA6  B7
 A̢ 6 A&6   Aj6  6(  Aj6   Aj

 A
jA+6  A,jA6    Aj6 B7
 A 6 A+6   Aj6  6(  Aj6  Aj6   Aj

 A,jA6  B7
 A 6 A&6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 A 6 A&6   Aj6  6(  Aj6   Aj

 A
jA&6  A,jA6    Aj6 B7
 A 6 A&6   Aj6  6(  Aj6  Aj6   Aj

 A
jA&6  A,jA6    Aj6 B7
 A 6 A&6   Aj6  6(  Aj6  Aj6   Aj

 A,jA6  B7
 Aؠ 6 A,6   Aj6  6(  Aj6   Aj

 A,jA6  B7
 AĠ 6 A-6   Aj6  6(  Aj6   Aj

 A,jA 6  A 6( B7
 A 6  Aj
 A0j$ 
# Ak"$ @@@@@@@@@@@@@  ( Ak
	

 
  A A7    Aj6
 A A A
jAХ 


  A A7    Aj6
 A A A
jA 


  A A
7    Aj6
 A A A
jA 
	
  A A
7    Aj6
 A A A
jA 

  A٤ A7    Aj6
 A A A
jA    Aj6
 A A A
jA 

  AΤ A
7    Aj6
 A A A
jA 

  A¤ A7    Aj6
 Aʤ A A
jA 

  A A7    Aj6
 A A
 A

-- Chunk 52 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7651-7800
jA    Aj6
 A A A
jA 

  A A
7    Aj6
 A A
 A
jA    Aj6
 A A A
jA 

  A A7    Aj6
 A A A
jA 

  AУ A
7    Aj6
 A A A
jAܣ 

  A A7    Aj6
 A A A
jA 
  Aj$ 

   (  
# Ak"$ @@@@  ( Ak 
  A A 

  AЪ A 

  A A 

  A A
7    Aj6
 A A
 A
jA  
 Aj$ 

   (  
# A0k"$ @@@@  ( Ak 
 A
jA 6  AЧ 6 B7
 A 6  Aj

 A
jA 6  AЧ 6 B7
 A 6  Aj

 A
jA 6  AЧ 6 B7
 Aԩ 6  Aj

 A
jA6  B7
 A 6 A:6$   Aj6,  A j6  A,j6   Aj
 A0j$ 
# A k"$  ( !  ("@@@ ( @ ("A H
A! @ "E

     Aj   (AF
   6   6   6  A j$ 
AĨ A-A  
 
 A 
  )
7  6  6
  6A A
 AjA A  
~# A0k"$  Aj @@ - AG@ - ! Aj  ("AF
 A j) !A ! (


 (
"A~q! A$j) ! A j( 
!  A
j 7   Aj 6    Aq r6A!

 AG@ Aj  A$j( ! A j( ! (
!@@ (AG@ Aj A! - Aq
A! E
 

 A(j( !A! ! ! !

 - A G@A
! E@A ! !

  ! !

 A ! !A !
   6  Aj 6   A
j 6   Aj 6 

 Aj  A$j( ! A j( ! (
!@@ (AG@ Aj A! - Aq
A! E
 

 A(j( !A! ! ! !

 - 	A G@A
! E@A ! !

  ! !

 A !A! !
   6  Aj 6   A
j 6   Aj 6 
   6  A0j$ 
# A@j"$  Aj   Aj Aj A(j( ! A$j( ! A j( ! (
!@@ (AG@ A8j( ! A4j( ! A0j( ! A,j( !	 Aj Aj ("
AG
   6  A 6   A j 6   A
j 6   Aj 6   Aj 	6   Aj 6   A
j 6   Aj 6 

   6  A6   Aj 6   A
j 6   Aj 6 

  Aj )
7   Aj A$j( 6   A6    
6 E@ E@ E
 

 E
 

@@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
  
 A@k$ 
~# A k"$    -  Aq@@@ - "A"G@ A F
  B7 

 Aj  - AG@  B7 


-- Chunk 53 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7801-7950
 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 

    
 A j$ 
  B 7  A j$ 
# A k"$ @ E
 @@ Aj  ("E
  ( (! (
@ 
 Aj!@ 
  G



A

A 
!   6   6  A j$ 
~# A@j"$ @ ( "@ ( "E
 )!   74  60 Aj A0j Aj A j( "6   )"7 A(j"( ! A,j"( ! ($! A8j 6   70 Aj A0j ( ! ( ! ($! (
@ (
@ E@  A 6  @ 
 E
 

   6   6   Aj 6   Aj 6   A
j 6   Aj 6 
 A@k$ 
Aԓ AA  
A A
A  
p# A k"$ @@ @@ Aj  ("E
 ( (! (
@ 
@ 
 Aj"
 

   

  A 6 
 A j$ 
	   B 7 
   (   ( 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    

     E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A~j 
 /  A /  F


 A A
  A; 

@@ A~j 
A ! /  A /  F


 A A
  A: A !

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A AlA!

  A : 
   :   E
 

  Aj  A Al  A:  

  A ; 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A~j 
 /  A /  F


 A A
  A; 

@@ A~j 
A ! /  A /  F


 A A
  A: A !

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  Aj  A AlA!

  A : 
   :   E
 

  Aj  A Al  A:  

  A ; 
 A j$ 
# A k"$   @ -  AqE@  B 7 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@    s

    s E
 

  B7 

   6  A6   Aj 6   A
j 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A{j 
 A AE


 )  A )  R

-- Chunk 54 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:7951-8100
  A; 

@@@ A{j 
 A A
A 

 )  A )  R
 A

A
!  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A; 

  A ; 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@A! AF@ (  Aؼ (  G!
  A :     : 

A! AF@ (  Aؼ (  G!
  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@@@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@@@ A{j 
 A AE


 A A
  A; 

@@@ A{j 
 A A
A 

 A A
 A

A
!  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 

  A; 

  A ; 
 A j$ 
# A k"$   @ -  AqE@  A:    AjA6 

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
! (AF
 E@A! AF@ (  A̼ (  G!
  A :     : 

A! AF@ (  A̼ (  G!
  A :     :  E
 

  A:    AjA6 

  A:    Aj 6   A
j 6   Aj 6   Aj 6 
 A j$ 
~# A k"$    -  Aq@@@ - "A"G@ A F
  B7 

 Aj  - AG@  B7 

 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 

    
 A j$ 
  B 7  A j$ 
~# A k"$    -  Aq@@@ - "A"G@ A F
  B7 

 Aj  - AG@  B7 

 Aj - ":    / 
"; Aj( ! Aj) !   - 
:    ;   Aj :    A
j 7   Aj 6   A6 

    
 A j$ 
  B 7  A j$ 
# A k"$   A!@ -  AqE@  A6

@ - A"F@  Aj  Aj( ! Aj( ! Aj( ! (
!@ (AG@ E
   6  A
j 6   Aj 6 A !

   6  Aj 6   A
j 6   Aj 6 

@@ A N@ 


 
 A]"E

   6  Aj 6      A
j 6 A !

  A6

 A 
   6  A j$ 

~# Ak"$  A8j @@@@@@@ - 8Aq@@@@@@@@ - 9"Aj# 
 A^j
          
 Aj  - Aq@ - 	!@ Aq"A,F A Fr A Fr
    - ! -  Aq
 

  A6 


 Aj  - AqE@  A6 


 - A"G
  Aj  Aj( ! Aj( ! (! (AF

-- Chunk 55 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8101-8250
 E@  A6 


  A6  E

 


 A j  -  AqE@  A6 


 - !A G
  Aj  (!  - 
Aq: |  6x Aj A j@ - AG@@ - E
 Aj A j - AG
 

 Aj" Aj( 6   Aj) 7 ("AG

 Aj  ("AF@  A6 


 Aj Aj( "6   )"7  A
j 6    7   6 


 A0j  - 0AqE@  A6 


 - 1A G
  A(j  ((!  - ,Aq: d  6` Aj A j@@ - AG@ A jAr! AjAr!@ - AG
 Aj (`"@@ ("AG@  ) 7  Aj Aj( 6 

 A j  (x"AF

 A j Aj( 6   ) 7h

 Aj A j - AG
 

 A j Aj( 6   Aj) 7h (!
 A j" A j( 6   )h7P AG
	
 Aj  ("AF@  A6 


 Aj Aj( "6   )"7  A
j 6    7   6 
	
  A
6 

  A6 

  A6  Aj$ 
  A6 

  A
j Aj( 6   Aj 6    6   6 

  A6 

 A j ( "6   )"7@  A
j 6    7   6 

  A6 

 A j ( "6   )P"7@  A
j 6    7   6 
 Aj$ 
# Ak"$  Aj @@ - AqE@A!

 - A G@A!

  Aj  (!  - 
Aq: <  68 A@k A8j@@@ - @AF@A !

 A j! A jAr!A !@@@@@@ - A"AqAF
 @ Ak 
 
 A jArA̷ Aj A$j A j) 7   )\7


 A j (8"@ (X"	AG@ A j A j( 6   )\7t  	6p

 A j  (pAF

 A$j A j) 7   )p7
 


 E
 AjArA̷ Ak

 Aj  ("AG@ A$j( ! A j( ! (
! E
 

  @ -  Aq@ - A G
   Aj 6   A
j 6   Aj 6   B 7 
	
  B 7  E
 

  B7  E
 

 A j (8"@@ (p"AG@  )t7  Aj A j( 6   6\

 A j  (XAG

 A$j Aj) 7   ) 7


 (d! (`! (\!
 A@k A8j - @AG
 

 A$j A j) 7   )D7
 E

 E
  
 A j( ! A$j( ! A(j( ! (
!
   6  A6   Aj 6   A
j 6   Aj 6 
 Aj$ 
# A k"$  Aj A!@@ - AqE@A!

 - A G@A!

  Aj  (!  - Aq: $  6  A(j A j@@ - (AG@@ - )E
 A j ( " (P"AG@ A j A j( 6   )T7D

 A@k  (@"AG
 A(j A j - (AG
 

 A8j( ! A4j( ! A0j( ! (,!

 A(j  (("AG@ A4j( ! A0j( ! (,!

 Aj  - Aq@ - 	A F@   A6A !

  A
6

  A6

-- Chunk 56 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8251-8400

 A j( ! A j( ! (D!
   6  Aj 6   A
j 6   Aj 6 
   6  A j$ 


# Ak"$  Aj @@@@@@@ - AqE@A!

 - A G@A!

  Aj  (!
  - 
Aq: <  
68 A@k A8j@@@ - @AG@ A j!
 A jAr!
@@@@@@ - A"AG@ 
@ @ E
 A$j 6  A j 6 A! A6



 A jArA Aj A$j A j) 7  A6  )\7


 A jArAķ Aj A$j A j) 7  A6  )\7
 E
 

 A j (8"
@ (X"AG@ A j A j( 6   )\7t  6p

 A j 
 (pAF

 A$j A j) 7   )p7
 A6

 E
 AjArAķ Ak A6

 @ AjArA Ak A6

 A j (8"@@ (p"AG@ 
 )t7  
Aj A j( 6   6\

 A j  (XAG

 A$j 
Aj) 7  A6  
) 7
A !

 (d!
 (`! (\!

 A j (8"	@@ (p"AG@ 
 )t7  
Aj A j( 6   6\

 A j 	 (XAG

 A$j 
Aj) 7  A6  
) 7
A !

 (d!	 (`! (\!
 A@k A8j - @AG
 

 A$j A j) 7   )D7
 A6

 A G!
 E ErE@ 
 E E rrE@ 
 A(j( !
 A$j( ! A j( ! (
! (AG@ A4j( !	 A0j( ! A,j( !

 ! !	 !

 Aj  ("AG@ A$j( !
 A j( ! (
!	@@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   -  Aq
  B 7  
   6  A6   Aj 
6   A
j 6   Aj 	6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 
6   A
j 6   Aj 6    6  A 6 
 Aj$ 
# Ak"$  Aj @@ - AqE@A!

 - A G@A!

  Aj  (!  - 
Aq: <  68 A@k A8j@@@ - @AF@A !

 A j! A jAr!A !@@@@@@ - A"AqAF
 @ Ak 

-- Chunk 57 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8401-8550
 
 A jArAз Aj A$j A j) 7   )\7


 A j (8"@ (X"	AG@ A j A j( 6   )\7t  	6p

 A j  (pAF

 A$j A j) 7   )p7
 


 E
 AjArAз Ak

 Aj  ("AG@ A$j( ! A j( ! (
! E
 

  @ -  Aq@ - A G
   Aj 6   A
j 6   Aj 6   B 7 
	
  B 7  E
 

  B7  E
 

 A j (8"@@ (p"AG@  )t7  Aj A j( 6   6\

 A j  (XAG

 A$j Aj) 7   ) 7


 (d! (`! (\!
 A@k A8j - @AG
 

 A$j A j) 7   )D7
 E

 E
  
 A j( ! A$j( ! A(j( ! (
!
   6  A6   Aj 6   A
j 6   Aj 6 
 Aj$ 


# Ak"$  Aj @@@@@@@ - AqE@A!

 - A G@A!

  Aj  (!
  - 
Aq: <  
68 A@k A8j@@@ - @AG@ A j!
 A jAr!
@@@@@@ - A"AG@ 
@ @ E
 A$j 6  A j 6  A 6



 A jArA Aj A$j A j) 7  A6  )\7


 A jArA Aj A$j A j) 7  A6  )\7
 E
 

 A j (8"
@ (X"AG@ A j A j( 6   )\7t  6p

 A j 
 (pAF

 A$j A j) 7   )p7
 A6

 E
 AjArA Ak A6

 @ AjArA Ak A6

 A j (8"@@ (p"AG@ 
 )t7  
Aj A j( 6   6\

 A j  (XAG

 A$j 
Aj) 7  A6  
) 7
A !

 (d!
 (`! (\!

 A j (8"@@ (p"AG@ 
 )t7  
Aj A j( 6   6\

 A j  (XAG

 A$j 
Aj) 7  A6  
) 7
A !

 (d! (`! (\!
 A@k A8j - @AG
 

 A$j A j) 7   )D7
 A6

 A G!	
 E ErE@ 
 E E 	rrE@ 
 A(j( !
 A$j( ! A j( ! (
!	 (AG@ A4j( ! A0j( ! A,j( !

 ! ! 	!

 Aj  ("AG@ A$j( !
 A j( ! (
!@@@@ 	 
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   -  Aq
  B 7  	
   6  A6   Aj 
6   A

-- Chunk 58 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8551-8700
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - A G@  B7 @@@@ 	 
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 6   Aj 6   Aj 6   Aj 
6   A
j 6   Aj 6    	6  A 6 
 Aj$ 
# A k"$  Aj  Aj( ! Aj( ! Aj( ! (
!@@@ (AG@   -  Aq
  B 7  
 E
 

   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 - A G@  B7  E@ E
 

 E
 

   Aj 6   A
j 6   Aj 6    6  A 6 
 A j$ 
# A0k"$  Aj  A j( ! A
j( ! Aj( ! (!@@@@@@ (AG@ A,j( !	 A(j( ! A$j( ! Aj  - Aq
  B 7  
   6  A6   Aj 6   A
j 6   Aj 6 

 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

 - 	A G@  B7 @@@@  
 E
 

 @ 
 E
 

 @ 
 E
 

 E
 

   A
j 	6   Aj 6   Aj 6   Aj 6   A
j 6   Aj 6    6  A 6 
 A0j$ 
y @A
A]"@  6  6  6 @  "E@  A 6 

 ( "E
   6    )7 
 
A
A 
A A
A  
 @@ @A
A]" E
   6   6   6 A
A]"E
  6  6  6       
AԬ AA  
A
A 
A
A 
4 A
A]" E@A
A 
   6   6   6     
A !@@@ @A
A]"E
  6  6  6 
 @A
A]"E
  6  6  6 
   Aq!AA]"E
  6  @ 
 @ 
  Aб 6   6 
A
A 
A
A 
AA 
# A0k"$ @@@@@@@@ AM@A
A]"E
  6  6  6  "
 
A!

A A]"E
  A6   A
j 6  A )  7   AjA )  7   AjA )  7   AjA )  7    AjB7   AjA6 

 A]"E

   6  Aj 6      A 6   A
j 6  


-- Chunk 59 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8701-8850
 ( "E
  6   )7  A$jA6  B7 A 6 A?6,  A(j6   6(  A
j Aj  A6   AjA6  (@ ( 
 
 A0j$ 
A
A 
A A 
 A 
A A
A  
~# A0k"$ @@@@@@@@ AM@A
A]"E
  6  6  6 A A]"E
A
A]"E
 B 7  6   "
 ( "E
 )!   Aj 7    6  A 6  

A$A]"E
  A6   A
j 6  A )  7   AjA )  7   AjAȴ )  7   AjAд )  7   A jAش (  6    AjB7   AjA6 

 ( "E
  6   )7  A$jA6  B7 A 6 A?6,  A(j6   6(  A
j Aj  A6   AjA6  (@ ( 
 
 A0j$ 
A
A 
A A 
A
A 
A$A 
A A
A  
A A
A  
~# A0k"$  (! ( !@@@@A
A]"@  6  6  6 A A]"E
A
A]"E
 B 7  6 @  "E@ ( "E
 )!   Aj 7    6 A !

 ( "E
  6   )7 A! A$jA6  B7 A 6 A?6,  A(j6   6(  A
j Aj  AjA6  (@ ( 
 
   6  A0j$ 
A
A 
A A 
A
A 
A A
A  
A A
A  
 A
A]"@@  6  6  6 A
A]"E
   6  6  6 A
A]"E
   6  6  6   @@@@@@@@   "
     
  Aj 6   AjA6 A

  A: A 

  A : A 

A A8Aص  
  AjA6 A

  AjA6 A

  AjA6 A

  AjA6 A
:     

A
A 
~@@@A
A]"@  6  6  6 A
A]"E
  6  6  6   @@@@@@@   Aq	"B "   
  A6  Aj 6 

 "E
 ( "E
	   6  Aj )7  A 

A A8A  
  A 6

  A6A

  A6
A
6   
A
A 
A
A 
Aԓ AA  
A A
A  
 A
A]"@@  6  6  6 A
A]"E
   6  6  6 A
A]"E
   6  6  6   @@@@@@@@   
"
     
  Aj 6   AjA6 A

  A: A 

  A : A 

AĶ A A  
A A;A  
  AjA6 A

  AjA6 A

  AjA6 A
:     

A
A 
# A0k"$     (! ( !A
A]"@@  6  6  6  Aj   (! (!A
A]"E
   6  6  6  A j   ((! ( !A
A]"E
   6  6  6   @@@@@@@@   
"
     
  Aj 6   AjA6 A

  A: A 

  A : A 

AĶ A A  

-- Chunk 60 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:8851-9000
A A;A  
  AjA6 A

  AjA6 A

  AjA6 A
:    ($@ 
  (@ 
  (@ 
 A0j$ 

A
A 
4 A
A]" E@A
A 
   6   6   6   
  
# Ak"$ @@@A
A]"@  6  6  6  
"E
 ( "E
 (! (!  A j   A jAr!@ (`"AG@ A$j Aj) 7  A
j Aj) 7  Aj Aj) 7   ) 7


 A8j Aj) 7   ) 70 Aj A0j
@ @ A j A(j) 7  A@k A j) 7  A8j Aj) 7   Aj) 70 B 7T A̬ ( 6P A j A jA  A0j A j
  A
j 6   Aj 6   Aj 6   Aj )P7   Aj A j( 6   B7 @@@@@@@@@ (0



 
 A j( E
	 A j( 
	
 A8j( E
 (4

 A8j( E
 (4

 A8j( E
 (4

 A8j( E
 (4

 A8j( @ (4
 A j( E
 A@k( 

 A8j( @ (4
 A j( E
 A@k( 

 A8j( @ (4
 A j( E
 A@k( 

 A8j( E
 (4

   )
7   Aj A$j) 7   Aj A
j) 7   Aj Aj) 7  E
  
  Aj$ 
A
A 
Aԓ AA  
A A
A  
A A7 AjA A  
'# Ak"$   6  6   6  o 
# A k"$  Aj ( "A!@ - AqE@  AjA6 

@@@@ - 	""A,G@ A G@ - 
  AjA6 

A !  A : 

   A! -  Aq
  AjA6 

 A : 

 - !
 A F@  AjA6 

 Aj  ("AF@  A: A !

  Aj )7   Aj A
j( 6   Aj 6 
A!
   :   A j$ 

  ( E@ 
  Aܷ 6   6 
U ( ! A 6 @ @ (!AA]"E
  6  6   Aܷ 6   6 
 
AA 
@@@ Aj( "AK@ A|j"  ( "j(  "At AtAqr AvAq Avrr"k" K
@ E@ (!A ! !AԷ ( !

  I
@@  k"A N@ (! 
A!

 
 A]"E

   j  !
   6
   6   6   6   Aj 6   Aj    I6 
A AA  
A A!A  
   
 A 
@@@@ At"E@

 Aj! !@  ( j" I
 Aj! ! Axj"
 

 Aq G
@  Atj" O@@@ A N@ 
A!

 
 A]"E

   6 A !  Aj"A 6   Aj" 6  E
  j!@ Aj( "AvAq Avr!	 ( !  k I    f (  
  ( j    (  j"6  (  kAM   Af (  
  ( j AtAq Atr 	r6    ( Aj"6   Aj"F
 ( !
 
 
A A
A  

A A
A  
A A!Aи  
 A 
~# A k"$   @@ -  AG@ - !   ( "AF
 Aj) !A ! (

-- Chunk 61 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9001-9150

 ("A~q! A
j) ! Aj( 
!  A6   A
j 7   Aj 6    Aq r6

 AG@   Ar! ( AG@A !  A 6  Aj

A!  Aj
!   6   ) 7  Aj Aj) 7 

   Ar! ( AG@  A6  Aj ) 7   Aj Aj) 7   Aj Aj) 7   A j Aj( 6   A 6 

   ) 7  A
j Aj) 7   A6 
 A j$ 
# A0k"$  Aj ( "A!@ - AqE@  AjA6 

@@@@ - ""A,G@ A G@ - 
  AjA	6 

A !  A : 

 - 
   Aj A! - Aq@ - 	!

  AjA6 

 A : 
@ Aq"A"G@ A F
  AjA6 

  A!@ -  AqE@A!

 - A"G@A!

  Aj  A$j( ! A j( ! (
! (AG@ E Er
 

 AF
 A(j( !
  Aj 6   A
j 6   Aj 6   Aj 6 

  AjA6 
A!

  A: A !
   :   A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 
# A0k"$  Aj ( "@ - AqE@  A:    AjA6 

@@ - ""A,G@ A G@ - 
  A:    AjA	6 

  A; 

 - 
   Aj  - Aq@ - 	!

  A:    AjA6 

 A : 
@ A"G@ A F
  A:    AjA6 

 Aj  - AG@   - :   A :  

  Aj )
7   A
j A$j) 7   A:  

  A:    AjA6 
 A0j$ 

 B 
   ( " (   ( 


-- Chunk 62 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9151-9300
   (  
# Ak"$ @@@@@@@  ( Ak 
  A A 

  A A
 

  A A 

  A˿ A 

  A A 

  A A 

  A A
7    Aj6
 A A
 A
jA  
 Aj$ 

   (  
# A0k"$ @@@@@@@  ( Ak 
 A
jA 6  Aػ 6 B7
 A 6  Aj

 A
jA 6  Aػ 6 B7
 A 6  Aj

 A
jA 6  Aػ 6 B7
 A̾ 6  Aj

 A
jA 6  Aػ 6 B7
 A 6  Aj

 A
jA 6  Aػ 6 B7
 A 6  Aj

 A
jA 6  Aػ 6 B7
 A 6  Aj

 A
jA6  B7
 A 6 A:6$   Aj6,  A j6  A,j6   Aj
 A0j$ 
   ( " (   ( 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
# Ak"$   ( ! @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F   Af  ( 
  ( j :      (Aj6

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I    f (  
  ( j A
j   (  j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
Q  ( " Aj(   Aj"( "k I    f (  
  ( j    (  j6 A 
 @@@@@@@ Ayj
 
 A A@ A A
  A: 

  A: 

 A A
  A: 

 Aػ AE


 A A
   A: 

  Aj  A Al  A:  
  A :   A :  
  A :  
~# A k"$  Aj @@@@@@ - AG@ - 	 Aj  ("AG@ Aj) !A ! (


Ak
 (
"A~q! Aj) ! Aj( 
!  A6   A
j 7   Aj 6    Aq r6

   

   

   

   

   
 A j$ 
# A0k"$   ( E@ A
jA 6  A 6 B7
 A 6  Aj

   6 A
jA6  B7
 A 6 A 6$  A j6  A,j6   Aj6,  Aj
 A0j$ 
)AA]"E@AA 
  B7   6 
 Aj(  Aj( "k! E@ AM  Af Aj(  
 ( j"A (  6   AjA -  :  A

 AM  Af Aj(  
 ( jAի6  A
!  A 6  Aj"   (  j6 
~# A k"$  AjA 6   AjB 7  B 7  B
A0r: A! B
T@ Aj!A

@@@ B
! Aj" K
  Aj j" B
A0r:   B T ! !E



A A!A  
A k
! Aj(  Aj( "k I   f Aj(  
 ( j    A 6  Aj"   (  j6  A j$ 
# Ak"$  Aj"( " Aj( F  Af (  

-- Chunk 63 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9301-9450
 ( jA":    ( Aj"6  A 6
@ E
   j!	 Aj! Aj!@ Aj!@@@@@@@@@@ ,  "AJ@ ! Aq

  	F@A !
 	

 - A?q!
 Aj
! Aq!
 Aq"AM@ ! 
 
Atr

  	F@ 	!A 

 Aj! -  A?q
 
Atr!  
A
tr AI
 @  	F@A !

 -  A?q! Aj!
 
AtA q Atr r
"Axj 
 A G@ A G



 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA":  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :  

@@@ A O@ AI
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

 (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA :    ( Aj"6  (  F  Af (  
 ( jA0:    ( Aj"6  (  F  Af (  
 ( jA0:    ( Aj"6  Aq"A
I!
 (  F  Af (  
 ( j AqAvA0r:    ( Aj"6  (  F  Af (  
 ( j A0r A7j 
:  

 (  F  Af (  
 ( j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
! (  k I   f (  
 ( j A
j 

A!
  (  j"6   	G
 

 Aj(  F  Af Aj(  
 ( jA":    A 6  Aj"   ( Aj6  Aj$ 
R Aj(  Aj"( "kAM  Af (  
 ( jA6    A 6   ( Aj6 

      
V  (" Aj( F  Af ( 
 ( jA :     6  A 6   AjA:    (Aj6
X (" Aj( F  Af ( 
 ( jA :     6  A 6   AjA:    (Aj6
# Ak"$  (" Aj( F  Af ( 
 ( jA :  A!  (Aj6    @ ( AG@ (" Aj"( F  Af ( 
 ( jA::    (Aj"6 (  F  Af ( 
 ( jA :     6  AjA:    (Aj6A !

   )7  A
j A
j( 6 
   6  Aj$ 
E  (" Aj( F  Af ( 
 ( jA :    A 6   (Aj6
 (" Aj"( F  Af ( 
 ( jA :    (Aj"6 (  F  Af ( 
 ( jA :    A 6   (Aj6
   A:    6 
# A0k"$ @@@@@@@@@@@@@@@@@@@@@  ( Ak	



 
 A 6(A"

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A&

 A 6(A(

 A 6(A7


 A 6(A'


 A 6(A8


-- Chunk 64 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9451-9600

 A 6(A8


 A 6(A.
	
 A 6(A

 A 6(A

 A 6(A


 A 6(A

 A 6(A

 A 6(A 

 A 6(A<

 A 6(A9

   (6(  A
j( 
!  A
jA6  A 6$   6, B7
 A 6  A(j6   A j6  Aj A0j$ 
	# A0k"$ @@@@ A N@ 
A!

 
 A]"E

 A 6  6
  6 A 6 A 6
@@  @@@ @ -  "A I@A !

@@@@@@@ AqE@ 	Aq
 A G
A!	A !

@ APjAqA
I
 A
! Aj&      

























      

 AK
 A
j j :  A! Aj"AG
 (
"APj"AqA
I
 AjAqAI
 AjAqAO
 Aj!

A!A
!A!	@@@@@@ A^jT   

  (
F Aj Af ( 
 (j :    (Aj"6
	
  (
F Aj Af ( 
 (jA:    (Aj"6

  (
F Aj Af ( 
 (jA
:    (Aj"6

  (
F Aj Af ( 
 (jA
:    (Aj"6

  (
F Aj Af ( 
 (jA
:    (Aj"6

  (
F Aj Af ( 
 (jA	:    (Aj"6

 
AF@A!
	
  (
F Aj Af ( 
 (j :    (Aj"6A !


 AA  
 AIj!
@ Av"APj"AqA
I
 @ AjAqAO@ AjAqAO
 Aj!

 AIj!




@ Av"APj"	AqA
I
 @ AjAqAO@ AjAqAO
 Aj!	

 AIj!	




@ Av"APj"AqA
I
 @ AjAqAO@ AjAqAO
 Aj!

 AIj!


-- Chunk 65 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9601-9750



 At A
tr 	AqAtr" Aqr!@@ AqAG@ AqAF"E
A
!

@ 
AF@ AqAO
A!
	
 AqAK
A !A!
 !


 
AqA|j"Aq" G

A! A jAq A
tr"Aj"A F A?Kr A?qAFr
  A?qAr:   AvAr:   AvA?qAr:   A
vA?qAr:  (
 kAM Aj Af ( 
 (j (6    (Aj"6A !


@@A  Aq "AO@ AI
 AO
  A?qAr:   A
vAr:   AvA?qAr: A

  : A

  A?qAr:   AvAr: A

  A?qAr:   A
vAr:   AvAr:   AvA?qAr: A
! (
 k I Aj  f ( 
 (j Aj   ( j"6
A !
A !A !	
 Aj! Aj"
 
A
! 	Aq
A! 
AF
 (! (
A 
! A j   ( AF
   6  A
j 6   Aj 6 A 

A!
  A6    6 (
E
 (

 @ 
  A6A
6 
 A0j$ 
A A!A  
 A 
 
   A 6   6   6 
.  ("Aj" O@   6
A A
A  
|@   ("  ("I@ ( !@A   j-  Awj"AKA tAqEr
  Aj"  I
  6 "  I
 

A
6 
A A
A  
A!@@ (" ("O
  ( !@@@@A!@  j-  "Awj$    
 Aj" I
  6A! Aj!  I



 A G
 Aj" I
  6  A6 
 Aj" I
  6  O
@  j-  "Awj"AKA tAqEr
 Aj" I
  6 " I
 


 A G
   A6 
   6 
A A
A  
@@@@@ (" ("I@ ( !@A!@  j-  "Awj$    
 Aj" I
  6 " I
 

A!

 A G
 Aj" I
  6  A6 
  A6 
A A
A  
A A
A  
   6 
@ ( "@ A G! (!@ E@  A6 
 -  A ! (" I@  Aj6  j-  !
 !
A
! 
G
 Aj! Aj! Aq
 


 E@  A6 
A
!
   6 
@@@@ (" ("I@ ( !@A!@  j-  Awj2    
 Aj" I
  6 " I
 

A!
   6 
 Aj" I
  6  A6 
A A
A  
A A
A  

~# A0k"$ @@ (" ("I@ ( "
 j"

-- Chunk 66 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9751-9900
! !@@@@@@ -  "A"G@ A G@ Aj" OA ! !



 Aj" I
	A!	 As! !

@@ AqE@ Aj" I

  6 	
  I
  K
 Aj 
  kA (
 (AF"! A j( ! 
  B 7   A
j 6   Aj 6 


 Aj" OA ! !



  I
  K
 Aj 
  k AjAr! (AG@ Aj Aj( "6   ) "
7  B7   Aj 
7   Aj 6 
	
 Aj Aj) "
7   ) "
7  A
j 
7    
7  A6 

   6  A6   Aj 6 

  A  
  A  
  A  
  A  
  6  
j!  I
 

  B07 
 A0j$ 
A A
A  
@ (" ("O
  ( !@  j-  "Awj"AMA A tAqE@A!

 Aj" O@  6 " I



A A
A  
   :    :  
3   (" ("I (  j-   
:     I:  
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
.# Ak" $   A 6  A
6  A 6    

  ( E@ 
  A 6   6 
U ( ! A 6 @ @ (!AA]"E
  6  6   A 6   6 
 
AA 
E  (" Aj( F  Af ( 
 ( jA :    A 6   (Aj6
   ( ( " (   ( 
# A0k"$ @@@  -  Ak 
   Aj( 6    - :  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6   Aj

 A
jA 6  A 6 B7
 A 6  Aj

   Aj( 6    - :  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6   Aj
 A0j$ 
&  Aj"  I@A A3A  
 Av
	~A ( !@@@@@@ AI@

A  Afj"  K!
@ Aj" I
  K
@ 	A j" 	O@  M
  A  
A A
A  
  	j"    j"	)  "
B8"B:j-  :   Aj   
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  
BB 
BB 
B(B 
B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  	Aj)  "
B8"B:j-  :   A	j   
B(B "B4A?qj-  :   A
j   
BB? 
BB"B.A?qj-  :   A
j  B(A?qj-  :   A
j  B"A?qj-  :   A
j   
BB 
BB 
B(B 
B8"B
A?qj-  :   Aj  "AvA?qj-  :   Aj  AvA?qj-  :   Aj  	A
j)  "
B8"B:j-  :   Aj   
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   Aj  B"A?qj-  :   Aj  
BB 
BB 
B(B 
B8""AvA?qj-  :   Aj  AvA?qj-  :   Aj   B
A?qj-  :   Aj  	Aj)  "
B8"B:j-  :   Aj   
B(B "B4A?qj-  :   Aj   
BB? 
BB"B.A?qj-  :   Aj  B(A?qj-  :   A
j  B"A?qj-  :   A
j   
BB 
BB 
B(B 
B8"B
A?qj-  :   A
j  "AvA?qj-  :   Aj  AvA?qj-  :   !	 Aj" 
M
 

@  Ap"k"

-- Chunk 67 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:9901-10050
 M@  
I
 !

A A!A  
@ Aj"	 I
 	 K
@ Aj" O@  M
  A  
A A
A  
  j"
    j"
-  "Avj-  :   
Aj  
Aj-  "A?qj-  :   
Aj  At 
Aj-  "AtA
vrA?qj-  :   
Aj  At AtA
vrA?qj-  :   ! 	" 
I
 


  A  
A A
A  
 	 A  
A A
A  
@@@@@@@@@@@@@ Aj 
 
 O
  O
A!  j    
j-  " Avj-  :   Aj"	 I@  At!A0

 	 A  
 
 O
  O
	  j    
j-  "Avj-  :   
Aj" O
 Aj" O

  j  At   j-  " AtA
vrA?qj-  :   Aj"	 O
  At!A!A<
!   	j    qj-  :    j!
A !  K
 AsAp" @  j!	  !  k"!@ E
 	A=:   Aj! 	Aj!	 Aj"
 
  !
  j I

 
 A  
  A  
 	 A  
  A  
  A  
A A*A  
 
 A  
  A  
  A  
  A  
c# A k"$  An"Aq G! At!@  AlkE@ !

  Aj" Ir!
   6   As6  A j$ 
# A0k"$ @@@@@  (" 
 
 A,jA 6  A 6( B7
 A 6A  Aj
 At!  ( ! @   6 @ A 6, A 6( B7
 A 6  Aj

 A6, B7
 A 6 A 6  6(  Aj6   Aj
  Aj!  Aj! Axj"
 
A 

 A
jA 6  A,jA6  B7
 A 6 A 6   ( " 6    Aj6  6(  Aj

 A,jA6  B7
 A 6 A 6   ( 6   6(  Aj

A
 A0j$ 
   ( " (   ( 
-# Ak"$  Aj  Aj( 6    ) 7   
,# Ak"$    ) 7 AjA A   ( 
.# Ak" $   A 6  A6  A 6    

  ( E@ 
  A 6   6 
U ( ! A 6 @ @ (!AA]"E
  6  6   A 6   6 
 
AA 

 B֭)
!@  ("E
   Aj( E
  

# Ak"$   ( ! @@ AO@ A 6
 AO
  A?qAr: 
  AvAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

 AO@  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A

  A?qAr:   A
vAr: 
  AvA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ A 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
@ A	O@AA K@AA!
A " AkAAkAAkA{jAwqA}j"A AAAtk"  K k  M
 A  AjAAA{j  KA"jAAjA|j"E
 ! @ Aj" qE@  !

  jA  kq!AA!     j   k K"  k"k!  E@        

  ( !   6    j6 
@ 
  "AA jM
   !       k"   
  
  !
 

-- Chunk 68 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10051-10200
!~# Ak"
$ @@  AO@A " AkAAkAAkA{jAwqA}j"A AAAtk"  K  M
  AjA!A ( E
A  k!@@A  Av" E
 A AK
  A  g" kAqvAq  AtkA>j
"AtA j( " @  Aqt!A !@@  " I
   k" O
   ! "
 A !

  Aj( "     A
vAqjAj( " G  ! At!  
 
 @ ! 

 

A !A AqtA ( q" E
  hAtA j( " E

@     " O  k" Iq"!   !  " 
 
 E

A ( "  OA     kO
 "  !  @ AAO@      AO@  

 Av"AtA j!A ( "A t"q@ (

A   r6  
!  6  6
  6
  6

    j
  "E


A  AjAAA{j  KA!@@@@@A ( " Av" Aq"v"AqE@ A ( M
 
A ( " E
  hAtA j( " k! " @@   k"   I"!    !  " 
 

 "  !   AAI
     A ( "E
 Av"AtA j!A ( !A ( "A Aqt"qE
 (

@ AsAq  j"At" A j( "Aj( "  A j" G@   6
   6

A  A~ wq6 
  At !

@A t  tqh"At" A j( "Aj( "  A j" G@   6
   6

A A ( A~ wq6 
    " At k"A ( " @  Av" AtA j!A ( !A ( "A  Aqt" q@ (

A    r6  
!   6   6
  6
   6
A  6 A  6  !

A   r6  
!  6  6
  6
  6
A  6 A  6 

    j
  "

@@@@@@@@A ( "  I@A ( "  K
A ! 
 A " k  AjAAjAAjAjA 
( "E
	 
(!
A  
("
A ( j"6 A A ( "     K6 A ( E
A ! @   F
  (" 
 


A ( !   k"AAI@A A 6 A ( ! A A 6     !
	
  ! A  6 A   6       !

Aȋ ( " A    OE@Aȋ  6 
A̋ A6 A  
6 A  
6 A  6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 AȈ A 6 A A 6 AЈ AĈ 6 AĈ A 6 A؈ Ä 6 Ä AĈ 6 A AԈ 6 AԈ Ä 6 A܈ AԈ 6 A A܈ 6 A A܈ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 Aȉ A 6 A A 6 AЉ Aĉ 6 Aĉ A 6 A؉ Ả 6 Ả Aĉ 6 A Aԉ 6 Aԉ Ả 6 A A܉ 6 A܉ Aԉ 6 A A 6 A A܉ 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A A 6 A "A!AA!AA!  " A  k" !A   
j k k k  k"6 A  6   Ar6A "A!AA!AA!        kjj6Aċ A6 

  
    
G
   "( "A ( "M  (j KA 


Aȋ Aȋ ( "     K6   
j!A ! @@@   ( G@  (" 



  
    
F

A ( !	A ! @@  (  	M@   	K

  (" 
 
A ! 
 	  "AA"kAij"" A  k j"   AA 	jI"
! 
 ! A "A!AA!AA!  "A k"!A   
j k k k k"6 A  6   Ar6A "A!AA!AA!      kjj6Aċ A6  
 A ) ! AjA ) 7   7 A  
6 A  
6 A  6 A  6 @  A!  A6  " AjK
 
 	 
F
 	 
 	k"  	    AO@ 	  

  Av" AtA j!A ( "A  t" q@ (

A    r6  
!   	6   	6
 	 6
 	  6

  ( !   6     ( 
j6 "A! "A!    kj" !      kj"  k k!A (   F
A (   F
  E@@  "AO@  

  A
j( "  Aj( "G@  6
  6


-- Chunk 69 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10201-10350
A A ( A~ Avwq6 
  j!   ! 
     AO@   !

 Av" AtA j!A ( "A  t" q@ (

A    r6  
!   6   6
  6
   6 !

A    k"6 A A ( " " 6    Ar6   !

    ( 
j6A ( !A ( "   " A  k" !A   
j  k"6 A  6   Ar6A "A!AA!AA!        kjj6Aċ A6 

A  6 A A (  j" 6    Ar6 !

A  6 A A (  j" 6     !

A !A ( "  M
 A    k"6 A A ( " " 6    Ar6   !
 
Aj$  
   !@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
 @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6  A ( G
A A 6 A A 6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
A  6 

 AO@   
 Av"AtA j!A ( "A t"q@ (

A   r6  
!   6   6
   6
   6
  (!@@    (
F@  AA  Aj"( "j( "
A !

  ("  (
"6
  6

   Aj !@ ! "Aj"( "E@ Aj! (!
 
 
 A 6 
@ E
 @    (
AtA j"( G@ AA (  Fj 6  


  6  
 A A ( A~  (
wq6 
  6  ("@  6  6
  Aj( " E
  Aj  6    6

  B 7  A  Av"E
 A AK
  A g"kAqvAq AtkA>j
"6
 AtA j!  !@@@@A ( "A Aqt"q@ ( ! !  G
 !

A   r6    6 

  Aqt!@  A
vAqjAj"( "E
 At! " G
 

 (" 6
  6  6
  6  A 6
   6 
   6  6  6


A ( "E@A̋ A6 A 
A !@ " (!  (!  ( !@  A
j( A@  !

  @  !

  "A kj"!A "	A!
AA!
AA!
 @  !

  j   	j 
k 
k 
kjI@  !

@ A ( G@ 

A A 6 A A 6 
    !
 
 Aj! 
 
A̋  A AK6  
  "   "!@@@  
   ( !@  E@  j!   " A ( G
 (AqAG
A  6     
  jAj! 

 AO@  

  A
j( "  Aj( "G@  6
  6

A A ( A~ Avwq6 
@ @    

@A (  G@ A ( G
A   6 A A (  j"6    
A   6 A A (  j"6    Ar6A (   F@A A 6 A A 6 
Aċ (  O
A " A!AA!AA!AA!A ( E

-- Chunk 70 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10351-10500
   k k kA{jAwqA}j" A  Atk"   KE
A " A!AA!AA!A @A ( "     kjj"M
 A ( !A ! @@  (  M@   K

  (" 
 
A ! 
  
   A
j( 
 
A kG
A ( Aċ ( M
Aċ A6 
 " j!@ AO@ 

 A
j( " Aj( "G@  6
  6

A A ( A~ Avwq6 
     A ( G
 A  6 

 AI
   A̋ A̋ ( Aj" 6   
 

 Av"AtA j!A ( "A t"q@ (

A   r6  
!   6   6
   6
   6
-# Ak"$  Aj  Aj( 6    ) 7   
# Ak"$   ( "Aj( !@@@ ( 
 
A !A 

 
 ( "(! ( 
!  6  6  A   ((  ( 
 A 6  6  A   ((  ( 
 
@@@ A	O@  "
A 
A !A " AkAAkAAkA{jAwqA}j"A AAAtk"  K M
A AjAAA{j KA!  " "!@@@@@@@ E@  O
 A ( F
 A ( F
 
 " j" I
  k! AI
 

 ! AI
  AjOA   kAI
 ( " jAj! AjA!A "E
  j"  k" Apj"6  A6   AtjA 6A A (   kj" 6 Aȋ Aȋ ( "   K6 A A ( "     K6 
	
  k"AAI
  !      

A (  j" M
  !     k"Ar6A  6 A  6 

A (  j" I
@  k"AAI@  A !A !

  " !      (A~q6
A  6 A  6 

 A
j( "	 Aj( "G@  	6
 	 6

A A ( A~ Avwq6 
 AAO@  !      

  
 

 "E
     AxA| j"  K  
       K  
 
  
(@  A"E
  
  A   
 
^# Ak"$   (
"E@A A+A  
  ("E@A A+A  
  6   6  6   
# A k"$ A!A A ( "Aj6 @AЋ ( AF@Aԋ ( Aj!

AЋ A6 
Aԋ  6 @@ A H AKr
   6
  6A ( "AL
 A  Aj"6 A A ( "A (  Aj   (   )7 Aj (
 A (  
Aj6  AM

 
# Ak"$   6
   6 
~# A0k"$  Aj!@ (@A ( !

 ( ! B 7
 A ( "6  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj Aj( 6   )7 
 A j" Aj( 6  A
jA 6  ) ! AjA 6   6  7A
A]"E@A
A 
  )7  Aj ( 6   A 6   6  A0j$ 
# A0k"$  Aj! (E@ ( ! B 7
 A ( 6  Aj6 A(j Aj) 7  A j Aj) 7   ) 7 AjA  Aj Aj Aj( 6   )7 
  A 6   6  A0j$ 
E (! ( !AA]"E@AA 
  6  6   A 6   6 
   A 6   6 
    jAjA  kq
   At" A   kr

 A   k  q
 A A  Avk  AF

   (Axq

   - AqAv

   (Aq

   (AqAG

   - AqE
'     (Aq rAr6   j"   (Ar6

    Ar6   j"   (Ar6

    Ar6
    Ar6   j 6 
#   (A~q6   Ar6   j 6 
    j
    k
   Aj
   Axj
  ("   Aj( 

-- Chunk 71 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10501-10650


   (
Aq

   (
Av

   (   (j
9 Av@ !  A 6  A  A|q AF"6  A  At 6 
2   ( !  E@ E@   
   
   

   (  
_# Ak"$   ( " (!  ( !   7  @@   6
  A
j  Aj!  Aj"
 

  Aj$ 
   (  A 
# Ak"$ @@@ AO@ A 6
 AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  ("  Aj( F@   A  (!
   Aj6  (  j :  

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
!  Aj(   Aj"( "k I@     ( !
  (  j A
j    j6 
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
    A ( " A     
 A AA  
# A k"$  ( !@ ("At"E@

 Aj!@ (  j! Aj! Axj"
 

@@@@@ Aj( E@ !

 E
A !A! AM@ Aj( E

  j" I

A !@ A N@ 
A!

 
 ! A]"E

  A 6   6    6   6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj
 A j$ 
A A A  
A A3 AjA A  
 A 
g@@@ ("A N@ ( ! 
A!

 
 ! A]"E

   !   6   6   6 
 A 
r# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  AjA  
g# Ak"$   A A
7    6
 A A A
jA    A
j6
 A A A
jA   Aj$ 
   ( @
 
 
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  6(  Aj6  Aj  
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  

  (!@@@@  ("
AG@ AF
  (    A
j( (
 !

 AG

  j!@@  Aj( "E@ !

 !@ " F
 Aj!@ ,  "AJ@ !

 Aq!	  F@A !
 

 - A?q!
 Aj
! 	AI@ !

  F@A !
 

 -  A?q!
 Aj
! 	AI@ !

@  F@A !
 !

 -  A?q!
 Aj"!
 	AtA q 
A
tr 
Atr 
rA F

  k j! Aj"
 

  F
 @ ,  "AJ
   AjF@ !A 

 Aj! - A?qA
t
! AqAI

-- Chunk 72 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10651-10800
   F@ !A 

 Aj! -  A?qAt
! AqAI
  Aq!  FA  -  A?q
  AtA qr rrA F

@@ E@A !

  O@A !  "F


A ! " j,  A@H

 ! !
   !   !
 
AF
 

@ @A ! ! !@  -  AqAGj! Aj! Aj"
 
   (
"O
A ! ! !@  -  AqAGj! Aj! Aj"
 


A !  (
"
 

A !  k"!@@@A   -  " AFAqAk 
A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (! @@ Aj"E
    (  E
 
A
A! A F
      (
 
 A !@  F@A 
 Aj!    (  E
 
 Aj I
 
  (    A
j( (
 
H# A k"$  AjA 6  A 6 B7  6
   6  Aj6    
o# A0k"$   6   6  A
jA6  A,jA 6  B7
 A 6 A 6$  A j6  Aj6(  6  Aj  
`A !@@@@@  -  Ak 
 A A

 A A&
 A A&
A !
  A&

   5  
5# Ak"$   6
   6 A 6 A 6   

# A0k"$  A$j 6  A: ( B7   6 A !  A 6 A 6@@ ("E@ ( ! ("	 Aj( "  	K"E
 (! !@   j"Aj( "@ (  (   ($(
 

   j"(  Aj Aj(   
  Aj!  Aj"
 
 ! 

 ( ! ("	 A
j( "  	K"E
  A
j!  ! !@ Aj( "@ (  (   ($(
 

   -  : (   Ahj) B 7  A|j( ! (!
A !
A !@@@  Axj( Ak 
 At 
j"
(A G
 
( ( !
A!
  Adj!
  6  6  Atj( !@@@  Apj( Ak 
 At 
j"(A G
 ( ( !
A!

  6
  
6 
 
( Atj"(  Aj (  
  A j!  Aj! Aj"
 
 ! 
   	I@ (    Atj" (   ( ($(
 

A 

A
 A0j$ 
w# A k"$ @   E@ A
j( ! ( A
jA 6  A 6 B7
 A 6  AjE

 A j$ A
  Aj  A j$ 
# Ak"$ @@@@ ( "AqE@ A q
  5  ! 

  ( !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k! 

  ( !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k! 

 AA  
 AA  
 Aj$   

 B`
~# A@j"$ A!@  - 
   - !  ( "-  AqE@ (A A  AA  A
j( (
 
 (   (
(
 
 (A A (

-- Chunk 73 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10801-10950
(
 
   (
  !

 E@ (A A A
j( (
 

 A:  A4jA 6   )7  Aj6 )!	 )!
  -  : 8  
7(  	7   ) 7  Aj60 Aj  
  AjA A
   Aj (
  
  (0A A (4(
 !
  A:    :  A@k$ 
]# A0k"$   6
   6 A$jA6  B7 A 6 A 6,  A(j6   Aj6( Aj  
    (   (
   (    ((
  
W# A k"$  A
j( ! ( Aj  Aj) 7  Aj  Aj) 7    ) 7  Aj A j$ 
# A@j"$   6
   6  6  6 A,jA6  A<jA 6  B7
 A 6 A 64  A0j6(  Aj68  Aj60 Aj  
# Ak"$ @@ @  (!  ( !  (!	@@ 	-  E
  A A (
 E
 A

A ! !@@  j! AO@ Aj   (
! (

 E@A !A 

A ! @@   j-  A
F
   Aj" G
 
A 

  !A
A ! AF@  j"Aj!@  O
   j-  A
G
 A! 

  k!  O


 !
 	  :  @  M@  G
    (
 E
A

  j" ,  AL
A    (
 
  ,  AL

  j!  k"
 

A 
 Aj$ 
  A  A  
    A  
@@@@ AjA|q k"E
     K"E
 @  j-  A
F
  Aj"G
 
  Axj"K


 Axj!A !
A !@  j"Aj( A s"As Awjq ( A s"As AwjqrAxqE@ Aj" M


  M
   A  
@  G@  k!  j!A !@  j-  A
F
  Aj"G
 

A 

  j!
A
!   6   6 
# A k"$   6
  6@@  AO@A! @@  I"E@  G
 

   j",  A@H
  E@   F


 ,  AL
 

 Aj"
 
A 
6   6 A 6A

  6   6 A 6A 
6
@@@@@@  K"  KrE@  K
 E
@  O@  G


   j,  AJ

  6  !

    6( A jA6  A jA 6  A jA 6  B74 A 60 A 6L  A j6@  Aj6X  Aj6P  A(j6H

 A jA 6  A jA 6  A jA 6  A jA6  B74 A 60 A 6L  A j6@  Aj6`  Aj6X  A
j6P  Aj6H

  6  E

@@  I"E@  F


   j",  A@H
 @ E@  G


 ,  AJ

       
 Aj"
 

A !
  F
 A!@@@   j",  "AL@A !   j" !   AjG@ Aj! - A?q!
 Aq! AqAK
  Atr!

  Aq6$

-- Chunk 74 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:10951-11100

  " G@ -  A?q!	 Aj!
 	 Atr! AqAI@  A
tr!

A !   G -  A?q 
 AtA q Atrr"A F

  6$A! AI
 A! AI
 AA AI!
  6(   j6, A jA6  A jA 6  A jA 6  A jA 6  A jA 6  B74 A 60 A 6L  A j6@  Aj6h  Aj6`  A(j6X  A$j6P  A j6H

A A+  
   A  A  
 A0j  
|  - !  - @ Aq!  A 
   ( "-  AqE@ (A A A
j( (
 

 (A A A
j( (
 
": 
 AqA G
~# A@j"$     - @  (!A

  (!  ( "-  AqE@A (A A  AA  A
j( (
 
  A (   

@ 
  (A A A
j( (
 E
 A !A

 A:  A4jA 6   )7  Aj6 )! )!  -  : 8  7(  7   ) 7  Aj60A  AjA (   
  (0A A (4(
 
:    Aj6 A@k$ 
  - !  ("@ Aq!  A 
 @ AG
   - 	E
   ( "-  Aq
 A (A A A
j( (
 

  ( "(A A A
j( (
 
": 
 AqA G
~# A@j"$ A  - 
   - !  ( "-  AqE@ @A (A A A
j( (
 

  A (   

 E@A (A A A
j( (
 

 A:  A4jA 6   )7  Aj6 )! )!  -  : 8  7(  7   ) 7  Aj60A  AjA (   
  (0A A (4(
 
!  A:    :  A@k$ 
2A!  -    ( " (A A  A
j( (
 

~ ( "AN@@  jA~j  BV@  Apj"6   j"A|j    B" B~}"B "	B AtA j/  ;   Azj B B AtA j/  ;   Axj B=B AtA j/  ;   Avj B/A pAtA j/  ;   Atj Bȯ%A pAtA j/  ;   Arj B
AqA pAtA j/  ;    j B郱AqA pAtA j/  ;    	B ~}

  B/T@ !

  Axj"6   j"A|j    B/" B/~}"A n"A pAtA j/  ;   Azj A nAqA pAtA j/  ;    j A=nAqA pAtA j/  ;    A lk
AtA j/  ;  
@  "A I@ !

  A|j"j  A n"A lk"AqA n"AtA j/  ;    jA~j  A lkAqAtA j/  ;  
@ Aq"A I@ !

  A~j"j  A n"A lkAqAtA j/  ;  
 AqA
O@  A~j"6   j AqAtA j/  ;  
  Aj"6   j A0j:  
A A
A  
~# Ak"$  A'6 Aj~ B Z@ A0j  B B̕B  A j  B Bɇ B  A j B B̕B  A@k B Bɇ B  A j)  A(j)  A8j) " ) |" T|" )@|" T|  A j)   )P| T||" T|"B>! B B>

 B-  BB
" Bష B )  | A j Aj@  P
  A jA0 (Alj A6  B- B" B" Bష B )  | A j Aj  BT
  A jA0 (Aj  A0r: e A 6
 A A  (" A jjA' k Aj$ 
A+A   ( "Aq"!
  j!@ AqE@A !

 @ ! !@ 	 -  AqAGj!	 Aj! Aj"
 

  	j!
A!@@  (AG@   
  


@@@@  A
j( " K@ Aq
A !  k"!A  -  " AFAqAk
   
  


A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (!	@@ Aj"E
 	  (  E
 
A
A! A F
   
  
  (    (
(
 
  (
!  (! A !@   F
 Aj!    (  E
 
 Aj
 I!

  (!  A06  -  !	  A:     
  
 A !  k"!@@@A  -  " AFAqAk 
A ! !

 Av! AjAv!
 Aj!  A
j( !  (!  (!@@ Aj"E
   (  E
 
A

-- Chunk 75 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11101-11250
A! A F
   (    (
(
 
   (
!  (!A !@@  F
 Aj!   (  E
 
 Aj I

   	:     6A 
 
  (    A
j( (
 
# Ak"$  A 6
   A
j@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
 Aj$ 
W# A k"$    6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
   (   
# Ak"$   (  A 6
 A
j@@ AO@ AI
 AO
  A?qAr:   A
vAr: 
  AvA?qAr: 
A

  : 
A

  A?qAr: 
  AvAr: 
A

  A?qAr:   AvAr: 
  AvA?qAr:   A
vA?qAr: 
A
 Aj$ 
Z# A k"$    ( 6 Aj Aj) 7  Aj Aj) 7   ) 7 AjA  Aj A j$ 
4   A:    B7    6  A 6  A 6  A
j 6 
K @ A G@A  (   A
j( (  

 
A 

  (    A
j( (
 
W# A k"$   A
j( !  ( Aj Aj) 7  Aj Aj) 7   ) 7  Aj A j$ 

   -  AqAv

   -  A qAv
&   BB   (    A
j( (
 
4    (   A
j( (
 :    6    E: 	  A 6
)   BB   (A A  A
j( (
 

~A!
@@ ("
A" A
j( "
("  
 @ E@

   j!
  !  !@@ Aj!@@ ,  "AJ@ Aq!

  
F@A ! 


 - A?q! Aj
! Aq!	 Aq"AM@  	Atr!

@  
F@A ! 
!

 -  A?q! Aj"!
  Atr! AI@  	A
tr! ! !

  
F@ ! !A 

 Aj"! -  A?q
 	AtA q Atrr"A G


 !
A !A!@@@@@@@@ Awj 
 A F

 E@ 

 ArgAvAsB !A! !

A !

A !

 !
  I
@ E
   O@  F


   j,  A@H

@ E
   O@  G


   j,  AL

 
   j  k 
(
 @A
@ !	A !A!@@@@@@ 	Ak 

-- Chunk 76 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11251-11400
@@@@ B AqAk 
 B`B !A!A !

 B`B0!A!A !

 B`B !A!

A0A   "	AtA
qvAq"A
I j! 	E
 B|B Bp!A!

A ! !

A AI
 A AI
 AA AI
 j!

 B`!A!A !

 B`B!A!
 
    E
 


  k j! !  
G



     A  
 E@A !

  O@  F


   j,  AL

 
   j  k 
(
 
  
A"   
 

     A  
  A
t!A!A!@@@@ Av j"AtAā j( A
t" O@  F
 !

 Aj!
  k!  K



 Aj!
@@ A
M@ At!A! A
G@ Aȁ j( Av!
A ! Aj" M@ AO
 AtAā j( A q!
@  Aā j( Av"AjF
    k! A AK! Aj! A !@  F
  A j-  j" K
   Aj"G
 
  !
 Aq
 AAȀ  
 AA  
 AA؀  
@@@@@@@@  AO@  AI
  AsjA+I  AtjA
Ir  AtjAI  AtjAIrr  A qA
F  AujA"Ir  AˑujA
Irr
  A8I
A !  AvAq!@@ Aj!  - "j!  -  "G@  K
 ! "A G


  I
 AK
 A j!@@ E
 Aj! -   Aj!  AqG
 
A !

 ! "A G


  Aq! A !A!@ Aj!  -  "AtAu"A N
  A F
 -  A qAtr! Aj
!   k" A H
 As! A G
 


A !  AvAq!@@ Aj!  - "j!  -  "G@  K
 ! "A G


  I
 AK
 A j!@@ E
 Aj! -   Aj!  AqG
 
A !

 ! "A G


  Aq! A !A!@ Aj!  -  "AtAu"A N
  A F
 -  A qAtr! Aj
!   k" A H
 As! A G
 

 Aq
  A  
 AA  
A A+A  
  A  
 AA  
A A+A  

     
~A!@ ("A' A
j( ("  
 A !A!@~@@@@@@@  ( " Awj 
  A F

  
  E
A!  !

A !

A !

  !

  ArgAvAsB 


-- Chunk 77 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11401-11550
  ArgAvAsB 
!A!  !
@ !A ! ! @@@@@ Ak 
@@@@@ B AqAk 
 B`!A ! A!

 B`B !A ! A!

 B`B0!A ! A!

 B`B !A ! A!

A0A   "AtA
qvAq" A
I  j!  E
 B|B Bp!A!

 A'   !

A ! A!

 B`B!A!
      E
 

 
~@ E
 A  Ayj"  K! AjA|q k!A !@@@@@@@  j-  "AtAu"A N@  kAq AFr
@  O
 @  j"Aj(  ( rAxq
 Aj" I
 

  O
@  j,  A H
  Aj"G
 


B !	B!
@@@@@@@@@ A j-  A~j 
 Aj" I
B !	


B !	 Aj" O

  j-  ! A~j"E
 A
F


B !	 Aj" O

  j-  !@@@@ A~j    
 AK AjAqAKr AtAuA Nr



 A jAqA0O



 AtAuAJ AKr


 Aj" O

  j-  AqAG
B !
 Aj" O

  j-  AqAF
B !	B!



 AqAG
	

 AtAuAJ AOr


 AjAqA
O@ AqAG AKr AtAuA Nr


 AtAuAJ AKr

B !
 Aj" O
  j-  AqAG


  j-  AqAG

 Aj!

 Aj!
  I



B !	B!


B !	

B !

   	  
7  A6 
   6  Aj 6   A 6 

   1   
# Ak"$   -  !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 

   )  
# Ak"$   ( !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 
~# Ak"$    E@  A : A

@@@@ -  AUj 
 AG


 Aj"E
 Aj!
@@ E
 -  APj"A
O
  B B
B  )PE@  A: A

 Aj! Aj! ) " |" Z
 
  A: A

  Aj 7 A 

  A: A
:   Aj$ 
~# A k"$    E@  A : A

-- Chunk 78 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11551-11700

@@@@ -  AUj 
 AG


 Aj"E
 Aj!
 Aj!@@ E
 -  APj"A
O
  B B
B  Aj B B
B  )B R ) " ) |" TrAF@  A: A

 Aj! Aj! )"	 |" 	T"  |" T  	ZAG
 
  A: A

  Aj 7   Aj 7 A 

  A: A
:   A j$ 
~# A0k"$ A'!@  B T@  !

@ A	j j"A|j    B "B ~}"AqA n"AtA j/  ;   A~j  A lkAqAtA j/  ;   A|j!  B/V ! 
 

 "A J@ A~j" A	jj " AqA n"A lkAqAtA j/  ;  
@ A
N@ A~j" A	jj AtA j/  ;  

 Aj" A	jj A0j:  
 A A  A	j jA' k A0j$ 
# Ak"$   -  !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 
# Ak"$   ( !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO@ AA  
 A A   jAjA   k Aj$ 
~# Ak"$   ) !A! @@  E@A ! 

   jAj Aq"A0r A j A
I:    Aj!  B"B R
 
  AI
   AA  
 A A   jA  k Aj$ 
~# Ak"$   ) !A! @@  E@A ! 

   jAj Aq"A0r A7j A
I:    Aj!  B"B R
 
  AI
   AA  
 A A   jA  k Aj$ 

  (A A A
j( (
 
# Ak"$   ( " -  AG@ (A A A
j( (
 

  (A A A
j( (
 :   6  A : 	 A 6   Aj6
  A
j - " (" E
  Aq!A 
 @  AG
  - 	E
  ( " -  Aq
 A  (A A  A
j( (
 

 ( " (A A  A
j( (
 
AqA G
 Aj$ 
# Ak"$   ( ! @@@ ( "AqE@ A q
  1   

  -  !A ! @   jA j Aq"A0r A j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k

  -  !A ! @   jA j Aq"A0r A7j A
I:    Aj!  Av"
 
  Aj"AO
 A A   jAjA   k
 Aj$ 
 AA  
 AA  

   (  
# Ak"$   BB  (A A	 A
j( (
 7    6
 A A
 A
jA    Aj6
 A A	 A
jA  - " - E
  Aq! A  
  ( " -  AqE@  (A A  A
j( (
 

  (A A  A
j( (
 
 Aj$ AqA G
3 @  !@  -  :   Aj! Aj! Aj"
 

  
!  @@   :    Aj!  Aj"
 


C@ E
 @  -  " -  "F@  Aj!  Aj! Aj"



  k!
 
n~   B" B"~"  B "~"  B "	~|"B |"
7    
 T  ~  ~|  	~|  TB  B ||7


 A 
                   	             
   
   
   
                            Coindenomamountblocktransactioncontractheighttimechain_idsenderfundsaddressindex/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/exports.rs     a           a   f        a         DistributionMsgwithdraw_delegator_rewardvalidatorset_withdraw_address   m    K    wasmdistributionstakingcustombank                
       BankMsgburnsendto_addressWasmMsgclear_admincontract_addrupdate_adminadminmigratenew_code_idmsginstantiatecode_idlabelexecute        U    > 
   )     
     

-- Chunk 79 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11701-11850
   StakingMsgredelegatesrc_validatordst_validatorundelegatedelegate     
    
   SubMsggas_limitReplyOnneversuccesserroralwaysokEmpty      EventtypeattributesAttributekeyvalueResponseeventsCanExecuteResponsecan_executeContractVersionversioncontract_info     
               a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs   K   L	     cosmwasm_std::types::MessageInfocw1_whitelist::msg::QueryMsgcw1_whitelist::msg::AdminListResponsecosmwasm_std::types::Envcw1_whitelist::msg::ExecuteMsgcw1_whitelist::msg::InstantiateMsgcw1::query::CanExecuteResponsecw2::ContractVersioncosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::results::response::Response>cw1_whitelist::state::AdminList                                called `Result::unwrap()` on an `Err` value           
                        missing field ``        duplicate field `           unknown variant ``, expected         
   invalid base64:     invalid Uint64 '' -          invalid Uint128 '   4         alserueullactionadmin_listfreezeupdate_adminscrates.io:cw1-whitelist0.10.0-soon4Unauthorized 
   adminsmutable   U    r    x 
   msgsh 
   l 
   AdminListResponseAdminList  
   
             !   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs  c K   L	     "                    missing field ``        duplicate field `           unknown variant ``, there are no variants   
	    -	    `, expected 
	    X	 
   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/memory.rsRegion pointer is null  t	 `   9      Region starts at null pointer   t	 `   ?      /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/iter/adapters/enumerate.rs ,
 [   .   	 A 
attempt to add with overflow#         $   %   /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/iter/traits/accum.rs   
 U         /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rs   8
 U        8
 U        8
 U     
   8
 U        8
 U     
   8
 U        8
 U     
   8
 U        8
 U     
   8
 U        8
 U     
   8
 U        8
 U     
   8
 U        8
 U     
   8
 U   n   /   attempt to multiply with overflow A 
attempt to subtract with overflow   8
 U     7   8
 U     $   8
 U     >   8
 U     )   8
 U   !     8
 U   *  )   8
 U   *     8
 U   .  )   8
 U   .  (   8
 U   -     8
 U   3     8
 U   A     8
 U   D  '   8
 U   D     8
 U   G  	   8
 U   X     8
 U   f  )   8
 U   x  
   8
 U        8
 U        8
 U     1   internal error: entered unreachable code:   4 *   Impossible: must only have 0 to 8 input bytes in last chunk, with no invalid lengthsh T   8
 U        8
 U     
   8
 U     	   Overflow when calculating output buffer length  8
 U      
   invalid base64: 4    .   
      /   0   !   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs   K   L	     1                         Conversion error:       Divide by zero: 4    Overflow:   L 
   Error serializing type :    `    w    Error parsing into type     w     not found        
   Cannot decode UTF8 bytes into string:    &   Invalid data size: expected= actual=  
   
    Invalid Base64 string:  4    Generic error:  T    Recover pubkey error:   l    Verification error:     ConversionOverflowsource1         2   DivideByZero1         3   Overflow1         4   SerializeErrsource_type 1         5   msgParseErrtarget_typeNotFoundkindInvalidUtf8InvalidDataSizeexpected1         6   actualInvalidBase64GenericErrRecoverPubkeyErr   1         7   VerificationErr 1         8   ShlShrPowMulSubAddCannot  with  and             OverflowErroroperation  1         (   operand1operand2ConversionOverflowError 1         9   valueCannot devide  by zero         DivideByZeroErroroperand;         <   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rsInvalid UTF8    U   4   
   integer overflow when calculating buffer size    U   /      Unknown error:      Invalid recovery parameter. Supported values: 0 and 1.   6   Invalid signature format    Invalid hash format     UnknownErrerror_code=         >   InvalidRecoveryParamInvalidSignatureFormatInvalidHashFormatokerror  w    y    @   
      A   B   !   a Display implementation returned an error unexpectedly/rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/alloc/src/string.rs   K   L	     C                    TL;DR: Value must not be empty in Storage::set but in most cases you can use Storage::remove instead. Long story: Getting empty values from storage is not well supported at the moment. Some of our internal interfaces cannot differentiate between a non-existent key and an empty value. Right now, you cannot rely on the behaviour of empty values. To protect you from trouble later on, we stop here. Sorry for the inconvenience! We highly welcome you to contribute to CosmWasm, making this more solid one way or the other./usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/imports.rs   \ a   W   
   C         D   E A 
F   G A 
input too long for addr_validateaddr_validate errored:      input too long for addr_canonicalizeaddr_canonicalize errored:  \    addr_humanize errored:      MessageTooLong must not happen. This is a bug in the VM.\ a         \ a        InvalidHashFormat must not happen. This is a bug in the VM. \ a   +     Error code 2 unused since CosmWasm 0.15. This is a bug in the VM.   \ a   *     \ a   K     \ a   J     errorrequestresponseaddrkind       H         I   /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/cosmwasm-std-1.0.0-soon2/src/sections.rs   b         attempt to multiply with overflow    b       A 
attempt to add with overflow    attempt to subtract with overflow    b   9      Cannot read section length   b   7   	   okerror  
    "
    cosmwasm_std::results::system_result::SystemResult<cosmwasm_std::results::contract_result::ContractResult<cosmwasm_std::binary::Binary>>J         K   L   M   invalid_requestinvalid_responseno_such_contractunknownunsupported_request   
    
    
    
    
    kindL
    addrX
    errorresponse   d
    i
    request d
    
    Unknown error:  
    Invalid recovery parameter. Supported values: 0 and 1.  
 6   Invalid public key format   
    Invalid signature format    Invalid hash format 8    Generic error   T 
   Batch error l 
   UnknownErrerror_codeJ         >   InvalidRecoveryParamInvalidPubkeyFormatInvalidSignatureFormatInvalidHashFormatGenericErrBatchErr      Buffer is full  
     /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/ser/mod.rs A 

attempt to subtract with overflowfalse  $  ^      	         JSON has a comma after the last value in an array or map.JSON has non-whitespace trailing characters after the value.Found a lone surrogate, which can exist in JSON but cannot be encoded to UTF-8.Object key is not a string.Invalid unicode code point.Invalid typeInvalid number.Invalid escape sequence.Expected this character to start a JSON value.Expected to parse either a `true`, `false`, or a `null`.Expected this character to be either a `','` or a `'}'`.Expected a low surrogate (DC00–DFFF).Expected this character to be either a `','` ora `']'`.Expected a high surrogate (D800–DBFF).Expected this character to be a `':'`.EOF while parsing a JSON value.EOF while parsing a string.EOF while parsing an object.EOF while parsing a list.Control character found in string./usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/de/unescape.rs  # b   %      # b   3   )       attempt to subtract with overflowNon-hex ASCII character found  # b         /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-wasm-0.3.1/src/de/mod.rs   $ ]   $   	   attempt to add with overflow$ ]   }   "   $ ]      ,   P         Q   R   S         T   Invalid last symbol , offset .  %    % 	   %    Encoded text cannot have a 6-bit remainder. % +   Invalid byte    % 
   % 	   %    Overflow when calculating number of chunks in input/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/decode.rsG& U      
   !"#$%&'()*+,-0123456789@ABCDEFGHIJKLMNPQRSTUVXYZ[`abcdehijklmpqrABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+,./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ 	






 !"#$%&'()*+,-./0123456789:;<=>?>?456789:;<= 	






 !"#$%&'()*+,-./0123 6789:;<=>?	






 !"#$%&'()*+,-./012345 	






 !"#$%&'()*+,-./0123456789:;<=>?>456789:;<= 	



?


 !"#$%&'()*+,-./0123>?456789:;<= 	






 !"#$%&'()*+,-./0123,- ,, ,+ ,* ,) ,( /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.13.0/src/encode.rs   D. U      '   usize overflow when calculating b64 length  D. U      
   D. U      3 A 
attempt to add with overflowD. U          D. U      :   D. U      %   D. U             attempt to subtract with overflow   D. U      /   D. U      
   D. U      6   D. U      !   D. U     .   D. U     	   D. U     	   D. U   
  .   D. U   

-- Chunk 80 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:11851-12000
  	   D. U   
     D. U   
  	   D. U     	   internal error: entered unreachable code:   D0 *   Impossible remainderx0    D. U   *     D. U   ;  	   ' ' l' ,' & & `one of 0    ,   0    0    0    ` or `  0    0    0    /usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.130/src/de/mod.rsexplicit panic 1 U        Z         [   \   ]         ^   `         a   b   c   called `Option::unwrap()` on a `None` value        library/std/src/panicking.rs1 
        1 
     
   d         e   f   `         g   h   i   
      j   `         k   l         m   n   o   l         p   /rustc/c8dfcfe046a7680554bf4eb612bad840e7631c4b/library/core/src/fmt/mod.rs 2 K   u     l             a formatting trait implementation returned an errorlibrary/alloc/src/fmt.rs G3    G  
   library/alloc/src/raw_vec.rscapacity overflow   p3 
   /     )library/alloc/src/vec/mod.rs) should be <= len (is `at` split index (is    3    3    3    3 
   K  
   FromUtf8Errorbytes  l         q   error   l         r   number would be zero for non-zero typenumber too small to fit in target typenumber too large to fit in target typeinvalid digit found in stringcannot parse integer from empty string.. 5    called `Option::unwrap()` on a `None` value `4     x          y   index out of bounds: the len is  but the index is   d5     5    `:  `4     5    library/core/src/fmt/builders.rsx   
      z   {   |       5     2   !   5     3       {
,
,  { } }(
(,)
[x         }   ]library/core/src/fmt/num.rs=6    e      0x00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899assertion failed: *curr > 19  =6         x         ~         library/core/src/fmt/mod.rs x7    *  
   x7    1     library/core/src/slice/memchr.rs7     Z      range start index  out of range for slice of length 7    7 "   range end index (8    7 "   slice index starts at  but ends at  H8    ^8 
   library/core/src/str/validations.rs A 
3 A 
|8 #        [...]byte index  is out of bounds of `  9 
   9    5    begin <= end ( <= ) when slicing `  9    9    :    5     is not a char boundary; it is inside  (bytes ) of `9 
   4: &   Z:    b:    5    library/core/src/unicode/printable.rs   : %   
   
   : %      6    	





	

 +,-
.012	xy0WX

KL./?\]_ℍ )147:;=IJ] 
)14:;EFIJ^de
)EIWde
EIde񃅋HINOWY^_[\
mqno

_}~
FGNOXZ\^~rstu/_&./ߚ@0NOZ['/no7=?BESgu  _"D5(
/4
PU

	

:W
PC-
:
%_ mj%Y
	

j
Y+F
,
1
,

!?L-t<<8+/- !
/;	-t



7	\*8
8F
t

ZY	

	L
1&
mx(*L
 	




$jk
	 
';>NO	6=>V67VW5
)14:EFIJNOde\


69:	7
;>fio_Zb'(U


:?EQ͠"%>? #%&(38:HJLPSUVXZ\^`cefksx}Юyno^"{-f/.
1
$	
+D*$$(4
7	
9c	0!@8K/
	@ '
	6:
PI73
3.
&RN(*V
	N
C
H'	u
?A*;
Qb
H
^"E


9
6,<dS
H	
FEHS
9F

GI7
9
62
fu
Ċ/тG9*`&
F
([eK9@
*	1k
	`
snF
W	GBP+-p: )L
DL=<U4,d
V
8

,	

t
Y

8
("NT
		
)%
library/core/src/unicode/unicode_data.rs @ (   K   (   @ (   W      @ (   R   >   x            SomeNoneErrorUtf8Errorvalid_up_toerror_len  x                 ` ] 

 
, +*0+o`,,
- 55a6
6$
a78/!90
aF
JjaNOoN!OeO !P Q0aSTT  .UU p  -H
0e#
[
:			+w 7

-- Chunk 81 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/cw1_whitelist.wasm:12001-12036

:	
9

9:

;
	(9

:

9	

HQ
b	
J7
$	f
  


@
	-w"v	:
0?0(	
 8:
: ! `  i 
 P 
&
.0'C
/3*     (  
681E$>
4	
_9QUje 	
 
(	.
 RzH  ; ?Q  
 72    m `

=== File: benchmarks/testdata/download_releases.sh ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/benchmarks/testdata/download_releases.sh:1-19
#!/bin/bash
set -o errexit -o nounset -o pipefail
command -v shellcheck > /dev/null && shellcheck "$0"

if [ $# -ne 1 ]; then
  echo "Usage: ./download_releases.sh RELEASE_TAG"
  exit 1
fi

tag="$1"

for contract in cw20_base cw1_whitelist; do
  url="https://github.com/CosmWasm/cw-plus/releases/download/$tag/${contract}.wasm"
  echo "Downloading $url ..."
  wget -O "${contract}.wasm" "$url"
done

rm -f version.txt
echo "$tag" >version.txt

=== File: client/docs/config.yaml ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/docs/config.yaml:1-150
swagger: "2.0"
info:
  title: XION - gRPC Gateway docs
  description: A REST interface for state queries
  version: 18.0.1
apis:
  - url: ./cosmos/auth/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: AuthParams
    tags:
      rename:
        Query: Auth
  - url: ./cosmos/authz/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: AuthzParams
    tags:
      rename:
        Query: Authz
  - url: ./cosmos/bank/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: BankParams
    tags:
      rename:
        Query: Bank
  - url: ./cosmos/base/tendermint/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: BaseParams
    tags:
      rename:
        Service: Base
  - url: ./cosmos/consensus/v1/query.swagger.json
    operationIds:
      rename:
        Params: ConsensusParams
    tags:
      rename:
        Query: Consensus
  - url: ./cosmos/distribution/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: DistributionParams
    tags:
      rename:
        Query: Distribution
  - url: ./cosmos/evidence/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: EvidenceParams
    tags:
      rename:
        Query: Evidence
  - url: ./feeabstraction/feeabs/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: FeeabsParams
    tags:
      rename:
        Query: FeeAbstraction
  - url: ./cosmos/feegrant/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: FeegrantParams
    tags:
      rename:
        Query: Feegrant
  - url: ./cosmos/gov/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: GovParams
    tags:
      rename:
        Query: Gov
  - url: ./cosmos/gov/v1/query.swagger.json
    operationIds:
      rename:
        Params: GovV1Params
        Proposal: GovV1Proposal
        Proposals: GovV1Proposal
        Vote: GovV1Vote
        Votes: GovV1Votes
        Deposit: GovV1Deposit
        Deposits: GovV1Deposit
        TallyResult: GovV1TallyResult
    tags:
      rename:
        Query: Gov
  - url: ./cosmos/group/v1/query.swagger.json
    operationIds:
      rename:
        Params: GroupParams
        Proposal: GroupProposal
        TallyResult: GroupTallyResult
    tags:
      rename:
        Query: Group
  - url: ./cosmos/mint/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: MintParams
    paths:
      exclude:
        - /cosmos/mint/v1beta1/annual_provisions
        - /cosmos/mint/v1beta1/inflation
    tags:
      rename:
        Query: Mint
  - url: ./cosmos/nft/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: NftParams
        Balance: NftBalance
    tags:
      rename:
        Query: Nft
  - url: ./cosmos/params/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: Params
    tags:
      rename:
        Query: Params
  - url: ./cosmos/slashing/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: SlashingParams
    tags:
      rename:
        Query: Slashing
  - url: ./cosmos/staking/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: StakingParams
        DelegatorValidators: StakingDelegatorValidators
    tags:
      rename:
        Query: Staking
  - url: ./cosmos/tx/v1beta1/service.swagger.json
    dereference:
      circular: ignore
    tags:
      rename:
        Service: Tx
  - url: ./cosmos/upgrade/v1beta1/query.swagger.json
    operationIds:
      rename:
        Params: UpgradeParams

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/docs/config.yaml:151-244
    tags:
      rename:
        Query: Upgrade
  - url: ./cosmwasm/wasm/v1/query.swagger.json
    operationIds:
      rename:
        Params: WasmParams
    tags:
      rename:
        Query: CosmWasm
  - url: ./ibc/applications/fee/v1/query.swagger.json
    operationIds:
      rename:
        Params: IBCFeeParams
    tags:
      rename:
        Query: IBC/Apps
  - url: ./ibc/applications/interchain_accounts/controller/v1/query.swagger.json
    operationIds:
      rename:
        Params: ICAControllerParams
    tags:
      rename:
        Query: ICA
  - url: ./ibc/applications/interchain_accounts/host/v1/query.swagger.json
    operationIds:
      rename:
        Params: ICAHostParams
    tags:
      rename:
        Query: ICA
  - url: ./ibc/applications/transfer/v1/query.swagger.json
    operationIds:
      rename:
        Params: IBCTransferParams
    tags:
      rename:
        Query: IBC/Apps
  - url: ./ibc/core/channel/v1/query.swagger.json
    operationIds:
      rename:
        Params: IBCChannelParams
    tags:
      rename:
        Query: IBC/Core
  - url: ./ibc/core/client/v1/query.swagger.json
    operationIds:
      rename:
        Params: IBCClientParams
        UpgradedConsensusState: IBCUpgradedConsensusState
    tags:
      rename:
        Query: IBC/Core
  - url: ./ibc/core/connection/v1/query.swagger.json
    operationIds:
      rename:
        Params: IBCConnectionParams
    tags:
      rename:
        Query: IBC/Core
  - url: ./xion/globalfee/v1/query.swagger.json
    operationIds:
      rename:
        Params: GlobalFeeParams
    tags:
      rename:
        Query: XionGlobalFee
  - url: ./xion/jwk/v1/query.swagger.json
    operationIds:
      rename:
        Params: JWKParams
    tags:
      rename:
        Query: XionJWK
  - url: ./xion/mint/v1/query.swagger.json
    operationIds:
      rename:
        Params: XionMintParams
    tags:
      rename:
        Query: XionMint
  - url: ./xion/v1/query.swagger.json
    tags:
      rename:
        Query: Xion

# not included
# ./cosmos/app/v1alpha1/query.swagger.json
# ./cosmos/circuit/v1/query.swagger.json
# ./cosmos/orm/query/v1alpha1/query.swagger.json
# ./cosmos/query/v1/query.swagger.json
# ./cosmos/autocli/v1/query.swagger.json
# ./cosmos/base/node/v1beta1/query.swagger.json
# ./ibc/lightclients/wasm/v1/query.swagger.json

=== File: client/docs/docs.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/docs/docs.go:1-6
package docs

import "embed"

//go:embed static
var Docs embed.FS

=== File: client/docs/static/index.html ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/docs/static/index.html:1-24
<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>XION API</title>
        <link rel="stylesheet" type="text/css" href="//unpkg.com/swagger-ui-dist@5.17.14/swagger-ui.css" />
        <link rel="icon" type="image/png" href="//unpkg.com/swagger-ui-dist@5.17.14/favicon-16x16.png" />
    </head>
    <body>
        <div id="swagger-ui"></div>

        <script src="//unpkg.com/swagger-ui-dist@5.17.14/swagger-ui-bundle.js"></script>
        <script>
            window.onload = function() {
              window.ui = SwaggerUIBundle({
                url: "/static/swagger.json",
                dom_id: "#swagger-ui",
                deepLinking: true,
                layout: "BaseLayout",
              });
            }
        </script>
    </body>
</html>

=== File: client/ts/package.json ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/ts/package.json:1-26
{
  "name": "@burnt-labs/xion-types",
  "version": "16.0.0",
  "description": "TypeScript definitions for Xion Protobuf files",
  "main": "index.js",
  "types": "types/index.d.ts",
  "files": [
    "types/"
  ],
  "scripts": {
    "build": "../../scripts/proto-gen.sh --ts",
    "test": "jest"
  },
  "license": "MIT",
  "dependencies": {
    "@improbable-eng/grpc-web": "^0.14.1",
    "browser-headers": "^0.4.1",
    "google-protobuf": "^3.17.3",
    "long": "^4.0.0",
    "protobufjs": "~6.11.2"
  },
  "devDependencies": {
    "prettier": "^2.3.0",
    "ts-proto": "^1.82.5"
  }
}

=== File: client/ts/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/ts/README.md:1-111
# @burnt-labs/xion-types

TypeScript definitions for Xion Protobuf files. This package provides TypeScript type definitions generated from the Protobuf files used in the Xion project, enabling developers to work with Xion-related data structures in a type-safe way.

## Table of Contents

- [@burnt-labs/xion-types](#burnt-labsxion-types)
  - [Table of Contents](#table-of-contents)
  - [Installation](#installation)
  - [Usage](#usage)
  - [Example](#example)
  - [Development](#development)
  - [License](#license)

---

## Installation

Install the **@burnt-labs/xion-types** package via npm or yarn:

```bash
# Using npm
npm install @burnt-labs/xion-types

# Using yarn
yarn add @burnt-labs/xion-types
```

---

## Usage

Once installed, you can import the type definitions in your TypeScript project. The types are generated from the Protobuf files used in the Xion project.

```typescript
import { MyProtobufType } from '@burnt-labs/xion-types/types/filename';

const myData: MyProtobufType = {
  field1: 'value',
  field2: 42
};
```

> **Note:** Replace `filename` with the appropriate file name where the type is defined.

---

## Example

Here is a full example of how you might use the **@burnt-labs/xion-types** package in a TypeScript project:

```typescript
import { MyProtobufType } from '@burnt-labs/xion-types/types/filename';

function processData(data: MyProtobufType): void {
  console.log(`Field 1: ${data.field1}`);
  console.log(`Field 2: ${data.field2}`);
}

const sampleData: MyProtobufType = {
  field1: 'Hello, Xion!',
  field2: 100
};

processData(sampleData);
```

> This simple example illustrates how you can work with the types generated from Xion's Protobuf definitions.

---

## Development

If you want to modify or regenerate the TypeScript definitions from Protobuf files, follow these steps:

1. **Clone the Repository**
   ```bash
   git clone https://github.com/burnt-labs/xion.git
   cd xion
   ```

2. **Install Dependencies**
   ```bash
   npm install
   ```

3. **Generate TypeScript Definitions**
   ```bash
   npx protoc --plugin=protoc-gen-ts=./node_modules/.bin/protoc-gen-ts \
     --ts_out=./generated \
     --proto_path=./proto \
     $(find ./proto -name '*.proto')
   ```

4. **Compile TypeScript Files**
   ```bash
   tsc --noEmit
   ```

> These steps will generate the TypeScript definitions from the Protobuf files located in the `proto` directory.

---

## License

This project is licensed under the MIT License. See the LICENSE file for details.

---

For more information, check out [Xion's GitHub repository](https://github.com/burnt-labs/xion).


=== File: client/ts/.gitignore ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/client/ts/.gitignore:1-2
node_modules
types/generated

=== File: client/ts/types/.gitkeep ===

=== File: cmd/xiond/root.go ===

-- Chunk 1 --
// root.go:50-118
func NewRootCmd() (*cobra.Command, params.EncodingConfig) {
	cfg := sdk.GetConfig()
	cfg.SetBech32PrefixForAccount(app.Bech32PrefixAccAddr, app.Bech32PrefixAccPub)
	cfg.SetBech32PrefixForValidator(app.Bech32PrefixValAddr, app.Bech32PrefixValPub)
	cfg.SetBech32PrefixForConsensusNode(app.Bech32PrefixConsAddr, app.Bech32PrefixConsPub)
	cfg.SetAddressVerifier(wasmtypes.VerifyAddressLen())
	cfg.Seal()

	tempApp := app.NewWasmApp(log.NewNopLogger(), dbm.NewMemDB(), nil, false, simtestutil.NewAppOptionsWithFlagHome(tempDir()), []wasmkeeper.Option{})
	encodingConfig := params.EncodingConfig{
		InterfaceRegistry: tempApp.InterfaceRegistry(),
		Codec:             tempApp.AppCodec(),
		TxConfig:          tempApp.TxConfig(),
		Amino:             tempApp.LegacyAmino(),
	}

	initClientCtx := client.Context{}.
		WithCodec(encodingConfig.Codec).
		WithInterfaceRegistry(encodingConfig.InterfaceRegistry).
		WithTxConfig(encodingConfig.TxConfig).
		WithLegacyAmino(encodingConfig.Amino).
		WithInput(os.Stdin).
		WithAccountRetriever(authtypes.AccountRetriever{}).
		WithHomeDir(app.DefaultNodeHome).
		WithViper("") // In xiond, we don't use any prefix for env variables.

	rootCmd := &cobra.Command{
		Use:   version.AppName,
		Short: "xion daemon (server)",
		PersistentPreRunE: func(cmd *cobra.Command, _ []string) error {
			// set the default command outputs
			cmd.SetOut(cmd.OutOrStdout())
			cmd.SetErr(cmd.ErrOrStderr())

			initClientCtx = initClientCtx.WithCmdContext(cmd.Context())
			initClientCtx, err := client.ReadPersistentCommandFlags(initClientCtx, cmd.Flags())
			if err != nil {
				return err
			}

			initClientCtx, err = config.ReadFromClientConfig(initClientCtx)
			if err != nil {
				return err
			}

			if err := client.SetCmdClientContextHandler(initClientCtx, cmd); err != nil {
				return err
			}

			customAppTemplate, customAppConfig := initAppConfig()
			customTMConfig := initTendermintConfig()

			return server.InterceptConfigsPreRunHandler(cmd, customAppTemplate, customAppConfig, customTMConfig)
		},
	}

	initRootCmd(rootCmd, encodingConfig, tempApp.BasicModuleManager)

	// add keyring to autocli opts
	autoCliOpts := tempApp.AutoCliOpts()
	initClientCtx, _ = config.ReadFromClientConfig(initClientCtx)
	autoCliOpts.ClientCtx = initClientCtx

	if err := autoCliOpts.EnhanceRootCommand(rootCmd); err != nil {
		panic(err)
	}

	return rootCmd, encodingConfig
}

-- Chunk 2 --
// root.go:122-130
func initTendermintConfig() *tmcfg.Config {
	cfg := tmcfg.DefaultConfig()

	// these values put a higher strain on node memory
	// cfg.P2P.MaxNumInboundPeers = 100
	// cfg.P2P.MaxNumOutboundPeers = 40

	return cfg
}

-- Chunk 3 --
// root.go:134-170
func initAppConfig() (string, interface{}) {
	// The following code snippet is just for reference.

	type CustomAppConfig struct {
		serverconfig.Config

		Wasm wasmtypes.NodeConfig `mapstructure:"wasm"`
	}

	// Optionally allow the chain developer to overwrite the SDK's default
	// server config.
	srvCfg := serverconfig.DefaultConfig()
	// The SDK's default minimum gas price is set to "" (empty value) inside
	// app.toml. If left empty by validators, the node will halt on startup.
	// However, the chain developer can set a default app.toml value for their
	// validators here.
	//
	// In summary:
	// - if you leave srvCfg.MinGasPrices = "", all validators MUST tweak their
	//   own app.toml config,
	// - if you set srvCfg.MinGasPrices non-empty, validators CAN tweak their
	//   own app.toml to override, or use this default value.
	//
	// In simapp, we set the min gas prices to 0.
	srvCfg.MinGasPrices = "0uxion"
	// srvCfg.BaseConfig.IAVLDisableFastNode = true // disable fastnode by default

	customAppConfig := CustomAppConfig{
		Config: *srvCfg,
		Wasm:   wasmtypes.DefaultNodeConfig(),
	}

	customAppTemplate := serverconfig.DefaultConfigTemplate +
		wasmtypes.DefaultConfigTemplate()

	return customAppTemplate, customAppConfig
}

-- Chunk 4 --
// root.go:172-197
func initRootCmd(rootCmd *cobra.Command,
	encodingConfig params.EncodingConfig,
	basicManager module.BasicManager,
) {
	rootCmd.AddCommand(
		genutilcli.InitCmd(basicManager, app.DefaultNodeHome),
		// testnetCmd(app.ModuleBasics, banktypes.GenesisBalancesIterator{}),
		debug.Cmd(),
		confixcmd.ConfigCommand(),
		pruning.Cmd(newApp, app.DefaultNodeHome),
		snapshot.Cmd(newApp),
	)

	server.AddCommands(rootCmd, app.DefaultNodeHome, newApp, appExport, addModuleInitFlags)

	// add keybase, auxiliary RPC, query, and tx child commands
	rootCmd.AddCommand(
		server.StatusCommand(),
		genesisCommand(encodingConfig, basicManager),
		queryCommand(basicManager),
		txCommand(basicManager),
		keys.Commands(),
	)
	// add rosetta
	rootCmd.AddCommand(rosettaCmd.RosettaCommand(encodingConfig.InterfaceRegistry, encodingConfig.Codec))
}

-- Chunk 5 --
// root.go:199-202
func addModuleInitFlags(startCmd *cobra.Command) {
	crisis.AddModuleInitFlags(startCmd)
	wasm.AddModuleInitFlags(startCmd)
}

-- Chunk 6 --
// root.go:205-212
func genesisCommand(encodingConfig params.EncodingConfig, basicManager module.BasicManager, cmds ...*cobra.Command) *cobra.Command {
	cmd := genutilcli.GenesisCoreCommand(encodingConfig.TxConfig, basicManager, app.DefaultNodeHome)

	for _, subCmd := range cmds {
		cmd.AddCommand(subCmd)
	}
	return cmd
}

-- Chunk 7 --
// root.go:214-234
func queryCommand(_ module.BasicManager) *cobra.Command {
	cmd := &cobra.Command{
		Use:                        "query",
		Aliases:                    []string{"q"},
		Short:                      "Querying subcommands",
		DisableFlagParsing:         false,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	cmd.AddCommand(
		rpc.QueryEventForTxCmd(),
		server.QueryBlockCmd(),
		authcmd.QueryTxsByEventsCmd(),
		server.QueryBlocksCmd(),
		authcmd.QueryTxCmd(),
		server.QueryBlockResultsCmd(),
	)

	return cmd
}

-- Chunk 8 --
// root.go:236-260
func txCommand(manager module.BasicManager) *cobra.Command {
	cmd := &cobra.Command{
		Use:                        "tx",
		Short:                      "Transactions subcommands",
		DisableFlagParsing:         false,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	cmd.AddCommand(
		authcmd.GetSignCommand(),
		authcmd.GetSignBatchCommand(),
		authcmd.GetMultiSignCommand(),
		authcmd.GetMultiSignBatchCmd(),
		authcmd.GetValidateSignaturesCommand(),
		authcmd.GetBroadcastCommand(),
		authcmd.GetEncodeCommand(),
		authcmd.GetDecodeCommand(),
		authcmd.GetSimulateCmd(),
	)

	manager.AddTxCommands(cmd)

	return cmd
}

-- Chunk 9 --
// root.go:263-282
func newApp(
	logger log.Logger,
	db dbm.DB,
	traceStore io.Writer,
	appOpts servertypes.AppOptions,
) servertypes.Application {
	baseappOptions := server.DefaultBaseappOptions(appOpts)

	var wasmOpts []wasmkeeper.Option
	if cast.ToBool(appOpts.Get("telemetry.enabled")) {
		wasmOpts = append(wasmOpts, wasmkeeper.WithVMCacheMetrics(prometheus.DefaultRegisterer))
	}

	return app.NewWasmApp(
		logger, db, traceStore, true,
		appOpts,
		wasmOpts,
		baseappOptions...,
	)
}

-- Chunk 10 --
// root.go:285-327
func appExport(
	logger log.Logger,
	db dbm.DB,
	traceStore io.Writer,
	height int64,
	forZeroHeight bool,
	jailAllowedAddrs []string,
	appOpts servertypes.AppOptions,
	modulesToExport []string,
) (servertypes.ExportedApp, error) {
	var wasmApp *app.WasmApp
	homePath, ok := appOpts.Get(flags.FlagHome).(string)
	if !ok || homePath == "" {
		return servertypes.ExportedApp{}, errors.New("application home is not set")
	}

	viperAppOpts, ok := appOpts.(*viper.Viper)
	if !ok {
		return servertypes.ExportedApp{}, errors.New("appOpts is not viper.Viper")
	}

	// overwrite the FlagInvCheckPeriod
	viperAppOpts.Set(server.FlagInvCheckPeriod, 1)
	appOpts = viperAppOpts

	var emptyWasmOpts []wasmkeeper.Option
	wasmApp = app.NewWasmApp(
		logger,
		db,
		traceStore,
		height == -1,
		appOpts,
		emptyWasmOpts,
	)

	if height != -1 {
		if err := wasmApp.LoadHeight(height); err != nil {
			return servertypes.ExportedApp{}, err
		}
	}

	return wasmApp.ExportAppStateAndValidators(forZeroHeight, jailAllowedAddrs, modulesToExport)
}

=== File: cmd/xiond/main.go ===

-- Chunk 1 --
// main.go:13-20
func main() {
	rootCmd, _ := NewRootCmd()

	if err := svrcmd.Execute(rootCmd, "", app.DefaultNodeHome); err != nil {
		log.NewLogger(rootCmd.OutOrStderr()).Error("failure when running app", "err", err)
		os.Exit(1)
	}
}

=== File: x/jwk/genesis.go ===

-- Chunk 1 --
// genesis.go:11-18
func InitGenesis(ctx sdk.Context, k keeper.Keeper, genState types.GenesisState) {
	// Set all the audience
	for _, elem := range genState.AudienceList {
		k.SetAudience(ctx, elem)
	}
	// this line is used by starport scaffolding # genesis/module/init
	k.SetParams(ctx, genState.Params)
}

-- Chunk 2 --
// genesis.go:21-29
func ExportGenesis(ctx sdk.Context, k keeper.Keeper) *types.GenesisState {
	genesis := types.DefaultGenesis()
	genesis.Params = k.GetParams(ctx)

	genesis.AudienceList = k.GetAllAudience(ctx)
	// this line is used by starport scaffolding # genesis/module/export

	return genesis
}

=== File: x/jwk/module.go ===

-- Chunk 1 --
// module.go:35-37
type AppModuleBasic struct {
	cdc codec.BinaryCodec
}

-- Chunk 2 --
// module.go:39-41
func NewAppModuleBasic(cdc codec.BinaryCodec) AppModuleBasic {
	return AppModuleBasic{cdc: cdc}
}

-- Chunk 3 --
// module.go:44-46
func (AppModuleBasic) Name() string {
	return types.ModuleName
}

-- Chunk 4 --
// module.go:49-51
func (AppModuleBasic) RegisterLegacyAminoCodec(cdc *codec.LegacyAmino) {
	types.RegisterCodec(cdc)
}

-- Chunk 5 --
// module.go:54-56
func (a AppModuleBasic) RegisterInterfaces(reg cdctypes.InterfaceRegistry) {
	types.RegisterInterfaces(reg)
}

-- Chunk 6 --
// module.go:59-61
func (AppModuleBasic) DefaultGenesis(cdc codec.JSONCodec) json.RawMessage {
	return cdc.MustMarshalJSON(types.DefaultGenesis())
}

-- Chunk 7 --
// module.go:64-70
func (AppModuleBasic) ValidateGenesis(cdc codec.JSONCodec, _ client.TxEncodingConfig, bz json.RawMessage) error {
	var genState types.GenesisState
	if err := cdc.UnmarshalJSON(bz, &genState); err != nil {
		return fmt.Errorf("failed to unmarshal %s genesis state: %w", types.ModuleName, err)
	}
	return genState.Validate()
}

-- Chunk 8 --
// module.go:73-75
func (AppModuleBasic) RegisterGRPCGatewayRoutes(clientCtx client.Context, mux *runtime.ServeMux) {
	_ = types.RegisterQueryHandlerClient(context.Background(), mux, types.NewQueryClient(clientCtx))
}

-- Chunk 9 --
// module.go:78-80
func (a AppModuleBasic) GetTxCmd() *cobra.Command {
	return cli.GetTxCmd()
}

-- Chunk 10 --
// module.go:83-85
func (AppModuleBasic) GetQueryCmd() *cobra.Command {
	return cli.GetQueryCmd()
}

-- Chunk 11 --
// module.go:92-97
type AppModule struct {
	AppModuleBasic

	keeper      keeper.Keeper
	jwkSubspace paramstypes.Subspace
}

-- Chunk 12 --
// module.go:99-100
func (am AppModule) IsOnePerModuleType() {
}

-- Chunk 13 --
// module.go:102-103
func (am AppModule) IsAppModule() {
}

-- Chunk 14 --
// module.go:105-115
func NewAppModule(
	cdc codec.Codec,
	keeper keeper.Keeper,
	jwkSubspace paramstypes.Subspace,
) AppModule {
	return AppModule{
		AppModuleBasic: NewAppModuleBasic(cdc),
		keeper:         keeper,
		jwkSubspace:    jwkSubspace,
	}
}

-- Chunk 15 --
// module.go:118-126
func (am AppModule) RegisterServices(cfg module.Configurator) {
	types.RegisterMsgServer(cfg.MsgServer(), keeper.NewMsgServerImpl(am.keeper))
	types.RegisterQueryServer(cfg.QueryServer(), am.keeper)

	m := keeper.NewMigrator(am.jwkSubspace)
	if err := cfg.RegisterMigration(types.ModuleName, 1, m.Migrate1To2); err != nil {
		panic(fmt.Sprintf("failed to migrate x/jwk v3: %v", err))
	}
}

-- Chunk 16 --
// module.go:129-129
func (am AppModule) RegisterInvariants(_ sdk.InvariantRegistry) {}

-- Chunk 17 --
// module.go:132-140
func (am AppModule) InitGenesis(ctx sdk.Context, cdc codec.JSONCodec, gs json.RawMessage) []abci.ValidatorUpdate {
	var genState types.GenesisState
	// Initialize global index to index in genesis state
	cdc.MustUnmarshalJSON(gs, &genState)

	InitGenesis(ctx, am.keeper, genState)

	return []abci.ValidatorUpdate{}
}

-- Chunk 18 --
// module.go:143-146
func (am AppModule) ExportGenesis(ctx sdk.Context, cdc codec.JSONCodec) json.RawMessage {
	genState := ExportGenesis(ctx, am.keeper)
	return cdc.MustMarshalJSON(genState)
}

-- Chunk 19 --
// module.go:149-149
func (AppModule) ConsensusVersion() uint64 { return 2 }

=== File: x/jwk/keeper/msg_server_audience.go ===

-- Chunk 1 --
// msg_server_audience.go:16-38
func (k msgServer) CreateAudienceClaim(goCtx context.Context, msg *types.MsgCreateAudienceClaim) (*types.MsgCreateAudienceClaimResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// check if the audience is already claimed
	_, isFound := k.GetAudienceClaim(
		ctx,
		msg.AudHash,
	)
	if isFound {
		return nil, errorsmod.Wrap(sdkerrors.ErrInvalidRequest, "audience already claimed")
	}

	// extra gas consumed to dis-incentivize spamming
	ctx.GasMeter().ConsumeGas(k.GetDeploymentGas(ctx), fmt.Sprintf("gas for audience in jwt verifier %b", msg.AudHash))

	addr, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return nil, err
	}
	k.SetAudienceClaim(ctx, msg.AudHash, addr)

	return &types.MsgCreateAudienceClaimResponse{}, nil
}

-- Chunk 2 --
// msg_server_audience.go:40-63
func (k msgServer) DeleteAudienceClaim(goCtx context.Context, msg *types.MsgDeleteAudienceClaim) (*types.MsgDeleteAudienceClaimResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// Check if the value exists
	valFound, isFound := k.GetAudienceClaim(
		ctx,
		msg.AudHash,
	)
	if !isFound {
		return nil, errorsmod.Wrap(sdkerrors.ErrKeyNotFound, "index not set")
	}

	// Checks if the msg admin is the same as the current owner
	if msg.Admin != valFound.Signer {
		return nil, errorsmod.Wrap(sdkerrors.ErrUnauthorized, "incorrect owner")
	}

	k.RemoveAudienceClaim(
		ctx,
		msg.AudHash,
	)

	return &types.MsgDeleteAudienceClaimResponse{}, nil
}

-- Chunk 3 --
// msg_server_audience.go:65-99
func (k msgServer) CreateAudience(goCtx context.Context, msg *types.MsgCreateAudience) (*types.MsgCreateAudienceResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// Check if the value already exists
	_, isFound := k.GetAudience(
		ctx,
		msg.Aud,
	)
	if isFound {
		return nil, errorsmod.Wrap(sdkerrors.ErrInvalidRequest, "audience already created")
	}

	audHash := sha256.Sum256([]byte(msg.Aud))

	claim, isFound := k.GetAudienceClaim(ctx, audHash[:])
	if !isFound {
		return nil, errorsmod.Wrapf(sdkerrors.ErrNotFound, "claim not found for aud %s", msg.Aud)
	}

	if claim.Signer != msg.Admin {
		return nil, errorsmod.Wrapf(sdkerrors.ErrorInvalidSigner, "expected %s, got %s", claim.Signer, msg.Admin)
	}

	audience := types.Audience{
		Admin: msg.Admin,
		Aud:   msg.Aud,
		Key:   msg.Key,
	}

	k.SetAudience(
		ctx,
		audience,
	)
	return &types.MsgCreateAudienceResponse{Audience: &audience}, nil
}

-- Chunk 4 --
// msg_server_audience.go:101-153
func (k msgServer) UpdateAudience(goCtx context.Context, msg *types.MsgUpdateAudience) (*types.MsgUpdateAudienceResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// Check if the value exists
	valFound, isFound := k.GetAudience(
		ctx,
		msg.Aud,
	)
	if !isFound {
		return nil, errorsmod.Wrap(sdkerrors.ErrKeyNotFound, "index not set")
	}

	// Checks if the msg signer is the same as the current owner
	if msg.Admin != valFound.Admin {
		return nil, errorsmod.Wrap(sdkerrors.ErrUnauthorized, "incorrect owner")
	}

	// updates based on new values provided, potentially admin, aud and key
	audience := types.Audience{
		Admin: msg.NewAdmin,
		Aud:   msg.Aud,
		Key:   msg.Key,
	}

	// if changing the aud, make sure a claim exists under this admin, and that it won't override
	if valFound.Aud != msg.Aud {
		// Check if the value already exists
		_, isFound := k.GetAudience(
			ctx,
			msg.Aud,
		)
		if isFound {
			return nil, errorsmod.Wrap(sdkerrors.ErrInvalidRequest, "audience already created")
		}

		audHash := sha256.Sum256([]byte(msg.Aud))

		claim, isFound := k.GetAudienceClaim(ctx, audHash[:])
		if !isFound {
			return nil, errorsmod.Wrapf(sdkerrors.ErrNotFound, "claim not found for aud %s", msg.Aud)
		}

		if claim.Signer != msg.Admin {
			return nil, errorsmod.Wrapf(sdkerrors.ErrorInvalidSigner, "expected %s, got %s", claim.Signer, msg.Admin)
		}

		k.RemoveAudience(ctx, valFound.Aud)
	}

	k.SetAudience(ctx, audience)

	return &types.MsgUpdateAudienceResponse{Audience: &audience}, nil
}

-- Chunk 5 --
// msg_server_audience.go:155-178
func (k msgServer) DeleteAudience(goCtx context.Context, msg *types.MsgDeleteAudience) (*types.MsgDeleteAudienceResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// Check if the value exists
	valFound, isFound := k.GetAudience(
		ctx,
		msg.Aud,
	)
	if !isFound {
		return nil, errorsmod.Wrap(sdkerrors.ErrKeyNotFound, "index not set")
	}

	// Checks if the msg admin is the same as the current owner
	if msg.Admin != valFound.Admin {
		return nil, errorsmod.Wrap(sdkerrors.ErrUnauthorized, "incorrect owner")
	}

	k.RemoveAudience(
		ctx,
		msg.Aud,
	)

	return &types.MsgDeleteAudienceResponse{}, nil
}

=== File: x/jwk/keeper/query_params.go ===

-- Chunk 1 --
// query_params.go:14-23
func (k Keeper) Params(goCtx context.Context, req *types.QueryParamsRequest) (*types.QueryParamsResponse, error) {
	if req == nil {
		return nil, status.Error(codes.InvalidArgument, "invalid request")
	}
	ctx := sdk.UnwrapSDKContext(goCtx)

	params := k.GetParams(ctx)

	return &types.QueryParamsResponse{Params: params}, nil
}

=== File: x/jwk/keeper/keeper.go ===

-- Chunk 1 --
// keeper.go:16-22
type (
	Keeper struct {
		cdc        codec.BinaryCodec
		storeKey   storetypes.StoreKey
		paramspace paramtypes.Subspace
	}
)

-- Chunk 2 --
// keeper.go:24-39
func NewKeeper(
	cdc codec.BinaryCodec,
	storeKey storetypes.StoreKey,
	ps paramtypes.Subspace,
) Keeper {
	// set KeyTable if it has not already been set
	if !ps.HasKeyTable() {
		ps = ps.WithKeyTable(types.ParamKeyTable())
	}

	return Keeper{
		cdc:        cdc,
		storeKey:   storeKey,
		paramspace: ps,
	}
}

-- Chunk 3 --
// keeper.go:41-43
func (k Keeper) Logger(ctx sdk.Context) log.Logger {
	return ctx.Logger().With("module", fmt.Sprintf("x/%s", types.ModuleName))
}

=== File: x/jwk/keeper/query_validate_jwt.go ===

-- Chunk 1 --
// query_validate_jwt.go:20-71
func (k Keeper) ValidateJWT(goCtx context.Context, req *types.QueryValidateJWTRequest) (*types.QueryValidateJWTResponse, error) {
	if req == nil {
		return nil, status.Error(codes.InvalidArgument, "invalid request")
	}

	ctx := sdk.UnwrapSDKContext(goCtx)

	audience, exists := k.GetAudience(ctx, req.Aud)
	if !exists {
		return nil, status.Error(codes.NotFound, "not found")
	}

	key, err := jwk.ParseKey([]byte(audience.Key))
	if err != nil {
		return nil, err
	}

	token, err := jwt.Parse([]byte(req.SigBytes),
		jwt.WithKey(key.Algorithm(), key),
		jwt.WithAudience(req.Aud),
		jwt.WithSubject(req.Sub),
		jwt.WithClock(jwt.ClockFunc(func() time.Time {
			// adjust the time from the block-height due to lagging reported time
			timeOffset := sdkmath.NewUint(k.GetTimeOffset(ctx)).BigInt().Int64()
			return ctx.BlockTime().Add(time.Duration(timeOffset))
		})),
		jwt.WithValidate(true),
	)
	if err != nil {
		return nil, err
	}
	// returning maps in protobufs can get hairy, we return a list instead
	privateClaimsMap := token.PrivateClaims()
	privateClaims := make([]*types.PrivateClaim, len(privateClaimsMap))

	i := 0
	for k, v := range privateClaimsMap {
		privateClaims[i] = &types.PrivateClaim{
			Key:   k,
			Value: v.(string),
		}
		i++
	}
	// even though there should be no duplicates, sort this deterministically
	sort.SliceStable(privateClaims, func(i, j int) bool {
		return privateClaims[i].Key < privateClaims[j].Key
	})

	return &types.QueryValidateJWTResponse{
		PrivateClaims: privateClaims,
	}, nil
}

=== File: x/jwk/keeper/migrations.go ===

-- Chunk 1 --
// migrations.go:11-13
type Migrator struct {
	jwkSubspace paramtypes.Subspace
}

-- Chunk 2 --
// migrations.go:16-18
func NewMigrator(jwkSubspace paramtypes.Subspace) Migrator {
	return Migrator{jwkSubspace}
}

-- Chunk 3 --
// migrations.go:21-23
func (m Migrator) Migrate1To2(ctx sdk.Context) error {
	return v1.MigrateStore(ctx, m.jwkSubspace)
}

=== File: x/jwk/keeper/params.go ===

-- Chunk 1 --
// params.go:10-12
func (k Keeper) GetParams(ctx sdk.Context) types.Params {
	return types.NewParams(k.GetTimeOffset(ctx), k.GetDeploymentGas(ctx))
}

-- Chunk 2 --
// params.go:15-17
func (k Keeper) SetParams(ctx sdk.Context, params types.Params) {
	k.paramspace.SetParamSet(ctx, &params)
}

-- Chunk 3 --
// params.go:19-23
func (k Keeper) GetTimeOffset(ctx sdk.Context) uint64 {
	var to uint64
	k.paramspace.Get(ctx, types.ParamStoreKeyTimeOffset, &to)
	return to
}

-- Chunk 4 --
// params.go:25-29
func (k Keeper) GetDeploymentGas(ctx sdk.Context) uint64 {
	var dg uint64
	k.paramspace.Get(ctx, types.ParamStoreKeyDeploymentGas, &dg)
	return dg
}

=== File: x/jwk/keeper/audience.go ===

-- Chunk 1 --
// audience.go:12-17
func (k Keeper) SetAudienceClaim(ctx sdk.Context, hash []byte, signer sdk.AccAddress) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceClaimKeyPrefix))
	audClaim := types.AudienceClaim{Signer: signer.String()}
	b := k.cdc.MustMarshal(&audClaim)
	store.Set(types.AudienceClaimKey(hash), b)
}

-- Chunk 2 --
// audience.go:19-31
func (k Keeper) GetAudienceClaim(ctx sdk.Context, hash []byte) (val types.AudienceClaim, found bool) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceClaimKeyPrefix))

	b := store.Get(types.AudienceClaimKey(
		hash,
	))
	if b == nil {
		return val, false
	}

	k.cdc.MustUnmarshal(b, &val)
	return val, true
}

-- Chunk 3 --
// audience.go:34-42
func (k Keeper) RemoveAudienceClaim(
	ctx sdk.Context,
	audHash []byte,
) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceClaimKeyPrefix))
	store.Delete(types.AudienceClaimKey(
		audHash,
	))
}

-- Chunk 4 --
// audience.go:45-51
func (k Keeper) SetAudience(ctx sdk.Context, audience types.Audience) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceKeyPrefix))
	b := k.cdc.MustMarshal(&audience)
	store.Set(types.AudienceKey(
		audience.Aud,
	), b)
}

-- Chunk 5 --
// audience.go:54-69
func (k Keeper) GetAudience(
	ctx sdk.Context,
	aud string,
) (val types.Audience, found bool) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceKeyPrefix))

	b := store.Get(types.AudienceKey(
		aud,
	))
	if b == nil {
		return val, false
	}

	k.cdc.MustUnmarshal(b, &val)
	return val, true
}

-- Chunk 6 --
// audience.go:72-80
func (k Keeper) RemoveAudience(
	ctx sdk.Context,
	aud string,
) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceKeyPrefix))
	store.Delete(types.AudienceKey(
		aud,
	))
}

-- Chunk 7 --
// audience.go:83-96
func (k Keeper) GetAllAudience(ctx sdk.Context) (list []types.Audience) {
	store := prefix.NewStore(ctx.KVStore(k.storeKey), types.KeyPrefix(types.AudienceKeyPrefix))
	iterator := storetypes.KVStorePrefixIterator(store, []byte{})

	defer iterator.Close()

	for ; iterator.Valid(); iterator.Next() {
		var val types.Audience
		k.cdc.MustUnmarshal(iterator.Value(), &val)
		list = append(list, val)
	}

	return
}

=== File: x/jwk/keeper/query_audience.go ===

-- Chunk 1 --
// query_audience.go:17-46
func (k Keeper) AudienceAll(goCtx context.Context, req *types.QueryAllAudienceRequest) (*types.QueryAllAudienceResponse, error) {
	if req == nil {
		return nil, status.Error(codes.InvalidArgument, "invalid request")
	}

	if req.Pagination.Limit > 100 {
		return nil, status.Error(codes.ResourceExhausted, "requests audience page size >100, too large")
	}

	var audiences []types.Audience
	ctx := sdk.UnwrapSDKContext(goCtx)

	store := ctx.KVStore(k.storeKey)
	audienceStore := prefix.NewStore(store, types.KeyPrefix(types.AudienceKeyPrefix))

	pageRes, err := query.Paginate(audienceStore, req.Pagination, func(_ []byte, value []byte) error {
		var audience types.Audience
		if err := k.cdc.Unmarshal(value, &audience); err != nil {
			return err
		}

		audiences = append(audiences, audience)
		return nil
	})
	if err != nil {
		return nil, status.Error(codes.Internal, err.Error())
	}

	return &types.QueryAllAudienceResponse{Audience: audiences, Pagination: pageRes}, nil
}

-- Chunk 2 --
// query_audience.go:48-63
func (k Keeper) Audience(goCtx context.Context, req *types.QueryGetAudienceRequest) (*types.QueryGetAudienceResponse, error) {
	if req == nil {
		return nil, status.Error(codes.InvalidArgument, "invalid request")
	}
	ctx := sdk.UnwrapSDKContext(goCtx)

	val, found := k.GetAudience(
		ctx,
		req.Aud,
	)
	if !found {
		return nil, status.Error(codes.NotFound, "not found")
	}

	return &types.QueryGetAudienceResponse{Audience: val}, nil
}

-- Chunk 3 --
// query_audience.go:65-80
func (k Keeper) AudienceClaim(goCtx context.Context, req *types.QueryGetAudienceClaimRequest) (*types.QueryGetAudienceClaimResponse, error) {
	if req == nil {
		return nil, status.Error(codes.InvalidArgument, "invalid request")
	}
	ctx := sdk.UnwrapSDKContext(goCtx)

	val, found := k.GetAudienceClaim(
		ctx,
		req.Hash,
	)
	if !found {
		return nil, status.Error(codes.NotFound, "not found")
	}

	return &types.QueryGetAudienceClaimResponse{Claim: &val}, nil
}

=== File: x/jwk/keeper/msg_server.go ===

-- Chunk 1 --
// msg_server.go:7-9
type msgServer struct {
	Keeper
}

-- Chunk 2 --
// msg_server.go:13-15
func NewMsgServerImpl(keeper Keeper) types.MsgServer {
	return &msgServer{Keeper: keeper}
}

=== File: x/jwk/keeper/query.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/jwk/keeper/query.go:1-7
package keeper

import (
	"github.com/burnt-labs/xion/x/jwk/types"
)

var _ types.QueryServer = Keeper{}

=== File: x/jwk/migrations/v1/migration.go ===

-- Chunk 1 --
// migration.go:16-26
func MigrateStore(ctx sdk.Context, jwkSubspace paramtypes.Subspace) error {
	ctx.Logger().Info("Running Migration to v3")
	defaultParams := types.DefaultParams()

	if !jwkSubspace.HasKeyTable() {
		jwkSubspace = jwkSubspace.WithKeyTable(types.ParamKeyTable())
	}
	ctx.Logger().Info(fmt.Sprintf("setting default params to: %+v\n", defaultParams))
	jwkSubspace.SetParamSet(ctx, &defaultParams)
	return nil
}

=== File: x/jwk/types/genesis.pb.go ===

-- Chunk 1 --
// genesis.pb.go:27-30
type GenesisState struct {
	Params       Params     `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	AudienceList []Audience `protobuf:"bytes,2,rep,name=audienceList,proto3" json:"audienceList"`
}

-- Chunk 2 --
// genesis.pb.go:32-32
func (m *GenesisState) Reset()         { *m = GenesisState{} }

-- Chunk 3 --
// genesis.pb.go:33-33
func (m *GenesisState) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// genesis.pb.go:34-34
func (*GenesisState) ProtoMessage()    {}

-- Chunk 5 --
// genesis.pb.go:35-37
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_312c1a9c7511b5ef, []int{0}
}

-- Chunk 6 --
// genesis.pb.go:38-40
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// genesis.pb.go:41-52
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// genesis.pb.go:53-55
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}

-- Chunk 9 --
// genesis.pb.go:56-58
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// genesis.pb.go:59-61
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

-- Chunk 11 --
// genesis.pb.go:65-70
func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 12 --
// genesis.pb.go:72-77
func (m *GenesisState) GetAudienceList() []Audience {
	if m != nil {
		return m.AudienceList
	}
	return nil
}

-- Chunk 13 --
// genesis.pb.go:79-81
func init() {
	proto.RegisterType((*GenesisState)(nil), "xion.jwk.v1.GenesisState")
}

-- Chunk 14 --
// genesis.pb.go:83-83
func init() { proto.RegisterFile("xion/jwk/v1/genesis.proto", fileDescriptor_312c1a9c7511b5ef) }

-- Chunk 15 --
// genesis.pb.go:104-112
func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 16 --
// genesis.pb.go:114-117
func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 17 --
// genesis.pb.go:119-149
func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AudienceList) > 0 {
		for iNdEx := len(m.AudienceList) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AudienceList[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 18 --
// genesis.pb.go:151-161
func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 19 --
// genesis.pb.go:162-177
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.AudienceList) > 0 {
		for _, e := range m.AudienceList {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

-- Chunk 20 --
// genesis.pb.go:179-181
func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 21 --
// genesis.pb.go:182-184
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 22 --
// genesis.pb.go:185-301
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudienceList", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudienceList = append(m.AudienceList, Audience{})
			if err := m.AudienceList[len(m.AudienceList)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 23 --
// genesis.pb.go:302-379
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/jwk/types/codec.go ===

-- Chunk 1 --
// codec.go:10-15
func RegisterCodec(cdc *codec.LegacyAmino) {
	cdc.RegisterConcrete(&MsgCreateAudience{}, "jwk/CreateAudience", nil)
	cdc.RegisterConcrete(&MsgUpdateAudience{}, "jwk/UpdateAudience", nil)
	cdc.RegisterConcrete(&MsgDeleteAudience{}, "jwk/DeleteAudience", nil)
	// this line is used by starport scaffolding # 2
}

-- Chunk 2 --
// codec.go:17-26
func RegisterInterfaces(registry cdctypes.InterfaceRegistry) {
	registry.RegisterImplementations((*sdk.Msg)(nil),
		&MsgCreateAudience{},
		&MsgUpdateAudience{},
		&MsgDeleteAudience{},
	)
	// this line is used by starport scaffolding # 3

	msgservice.RegisterMsgServiceDesc(registry, &_Msg_serviceDesc)
}

=== File: x/jwk/types/types.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/jwk/types/types.go:1-1
package types

=== File: x/jwk/types/query.pb.go ===

-- Chunk 1 --
// query.pb.go:34-35
type QueryParamsRequest struct {
}

-- Chunk 2 --
// query.pb.go:37-37
func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }

-- Chunk 3 --
// query.pb.go:38-38
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// query.pb.go:39-39
func (*QueryParamsRequest) ProtoMessage()    {}

-- Chunk 5 --
// query.pb.go:40-42
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{0}
}

-- Chunk 6 --
// query.pb.go:43-45
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// query.pb.go:46-57
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// query.pb.go:58-60
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}

-- Chunk 9 --
// query.pb.go:61-63
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// query.pb.go:64-66
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

-- Chunk 11 --
// query.pb.go:71-74
type QueryParamsResponse struct {
	// params holds all the parameters of this module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

-- Chunk 12 --
// query.pb.go:76-76
func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }

-- Chunk 13 --
// query.pb.go:77-77
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 14 --
// query.pb.go:78-78
func (*QueryParamsResponse) ProtoMessage()    {}

-- Chunk 15 --
// query.pb.go:79-81
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{1}
}

-- Chunk 16 --
// query.pb.go:82-84
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 17 --
// query.pb.go:85-96
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 18 --
// query.pb.go:97-99
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}

-- Chunk 19 --
// query.pb.go:100-102
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 20 --
// query.pb.go:103-105
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

-- Chunk 21 --
// query.pb.go:109-114
func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 22 --
// query.pb.go:116-118
type QueryGetAudienceClaimRequest struct {
	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

-- Chunk 23 --
// query.pb.go:120-120
func (m *QueryGetAudienceClaimRequest) Reset()         { *m = QueryGetAudienceClaimRequest{} }

-- Chunk 24 --
// query.pb.go:121-121
func (m *QueryGetAudienceClaimRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 25 --
// query.pb.go:122-122
func (*QueryGetAudienceClaimRequest) ProtoMessage()    {}

-- Chunk 26 --
// query.pb.go:123-125
func (*QueryGetAudienceClaimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{2}
}

-- Chunk 27 --
// query.pb.go:126-128
func (m *QueryGetAudienceClaimRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 28 --
// query.pb.go:129-140
func (m *QueryGetAudienceClaimRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAudienceClaimRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 29 --
// query.pb.go:141-143
func (m *QueryGetAudienceClaimRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAudienceClaimRequest.Merge(m, src)
}

-- Chunk 30 --
// query.pb.go:144-146
func (m *QueryGetAudienceClaimRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 31 --
// query.pb.go:147-149
func (m *QueryGetAudienceClaimRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAudienceClaimRequest.DiscardUnknown(m)
}

-- Chunk 32 --
// query.pb.go:153-158
func (m *QueryGetAudienceClaimRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

-- Chunk 33 --
// query.pb.go:160-162
type QueryGetAudienceClaimResponse struct {
	Claim *AudienceClaim `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
}

-- Chunk 34 --
// query.pb.go:164-164
func (m *QueryGetAudienceClaimResponse) Reset()         { *m = QueryGetAudienceClaimResponse{} }

-- Chunk 35 --
// query.pb.go:165-165
func (m *QueryGetAudienceClaimResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 36 --
// query.pb.go:166-166
func (*QueryGetAudienceClaimResponse) ProtoMessage()    {}

-- Chunk 37 --
// query.pb.go:167-169
func (*QueryGetAudienceClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{3}
}

-- Chunk 38 --
// query.pb.go:170-172
func (m *QueryGetAudienceClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 39 --
// query.pb.go:173-184
func (m *QueryGetAudienceClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAudienceClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 40 --
// query.pb.go:185-187
func (m *QueryGetAudienceClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAudienceClaimResponse.Merge(m, src)
}

-- Chunk 41 --
// query.pb.go:188-190
func (m *QueryGetAudienceClaimResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 42 --
// query.pb.go:191-193
func (m *QueryGetAudienceClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAudienceClaimResponse.DiscardUnknown(m)
}

-- Chunk 43 --
// query.pb.go:197-202
func (m *QueryGetAudienceClaimResponse) GetClaim() *AudienceClaim {
	if m != nil {
		return m.Claim
	}
	return nil
}

-- Chunk 44 --
// query.pb.go:204-206
type QueryGetAudienceRequest struct {
	Aud string `protobuf:"bytes,1,opt,name=aud,proto3" json:"aud,omitempty"`
}

-- Chunk 45 --
// query.pb.go:208-208
func (m *QueryGetAudienceRequest) Reset()         { *m = QueryGetAudienceRequest{} }

-- Chunk 46 --
// query.pb.go:209-209
func (m *QueryGetAudienceRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 47 --
// query.pb.go:210-210
func (*QueryGetAudienceRequest) ProtoMessage()    {}

-- Chunk 48 --
// query.pb.go:211-213
func (*QueryGetAudienceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{4}
}

-- Chunk 49 --
// query.pb.go:214-216
func (m *QueryGetAudienceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 50 --
// query.pb.go:217-228
func (m *QueryGetAudienceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAudienceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 51 --
// query.pb.go:229-231
func (m *QueryGetAudienceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAudienceRequest.Merge(m, src)
}

-- Chunk 52 --
// query.pb.go:232-234
func (m *QueryGetAudienceRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 53 --
// query.pb.go:235-237
func (m *QueryGetAudienceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAudienceRequest.DiscardUnknown(m)
}

-- Chunk 54 --
// query.pb.go:241-246
func (m *QueryGetAudienceRequest) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 55 --
// query.pb.go:248-250
type QueryGetAudienceResponse struct {
	Audience Audience `protobuf:"bytes,1,opt,name=audience,proto3" json:"audience"`
}

-- Chunk 56 --
// query.pb.go:252-252
func (m *QueryGetAudienceResponse) Reset()         { *m = QueryGetAudienceResponse{} }

-- Chunk 57 --
// query.pb.go:253-253
func (m *QueryGetAudienceResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 58 --
// query.pb.go:254-254
func (*QueryGetAudienceResponse) ProtoMessage()    {}

-- Chunk 59 --
// query.pb.go:255-257
func (*QueryGetAudienceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{5}
}

-- Chunk 60 --
// query.pb.go:258-260
func (m *QueryGetAudienceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 61 --
// query.pb.go:261-272
func (m *QueryGetAudienceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryGetAudienceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 62 --
// query.pb.go:273-275
func (m *QueryGetAudienceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryGetAudienceResponse.Merge(m, src)
}

-- Chunk 63 --
// query.pb.go:276-278
func (m *QueryGetAudienceResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 64 --
// query.pb.go:279-281
func (m *QueryGetAudienceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryGetAudienceResponse.DiscardUnknown(m)
}

-- Chunk 65 --
// query.pb.go:285-290
func (m *QueryGetAudienceResponse) GetAudience() Audience {
	if m != nil {
		return m.Audience
	}
	return Audience{}
}

-- Chunk 66 --
// query.pb.go:292-294
type QueryAllAudienceRequest struct {
	Pagination *query.PageRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

-- Chunk 67 --
// query.pb.go:296-296
func (m *QueryAllAudienceRequest) Reset()         { *m = QueryAllAudienceRequest{} }

-- Chunk 68 --
// query.pb.go:297-297
func (m *QueryAllAudienceRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 69 --
// query.pb.go:298-298
func (*QueryAllAudienceRequest) ProtoMessage()    {}

-- Chunk 70 --
// query.pb.go:299-301
func (*QueryAllAudienceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{6}
}

-- Chunk 71 --
// query.pb.go:302-304
func (m *QueryAllAudienceRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 72 --
// query.pb.go:305-316
func (m *QueryAllAudienceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllAudienceRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 73 --
// query.pb.go:317-319
func (m *QueryAllAudienceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllAudienceRequest.Merge(m, src)
}

-- Chunk 74 --
// query.pb.go:320-322
func (m *QueryAllAudienceRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 75 --
// query.pb.go:323-325
func (m *QueryAllAudienceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllAudienceRequest.DiscardUnknown(m)
}

-- Chunk 76 --
// query.pb.go:329-334
func (m *QueryAllAudienceRequest) GetPagination() *query.PageRequest {
	if m != nil {
		return m.Pagination
	}
	return nil
}

-- Chunk 77 --
// query.pb.go:336-339
type QueryAllAudienceResponse struct {
	Audience   []Audience          `protobuf:"bytes,1,rep,name=audience,proto3" json:"audience"`
	Pagination *query.PageResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

-- Chunk 78 --
// query.pb.go:341-341
func (m *QueryAllAudienceResponse) Reset()         { *m = QueryAllAudienceResponse{} }

-- Chunk 79 --
// query.pb.go:342-342
func (m *QueryAllAudienceResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 80 --
// query.pb.go:343-343
func (*QueryAllAudienceResponse) ProtoMessage()    {}

-- Chunk 81 --
// query.pb.go:344-346
func (*QueryAllAudienceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{7}
}

-- Chunk 82 --
// query.pb.go:347-349
func (m *QueryAllAudienceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 83 --
// query.pb.go:350-361
func (m *QueryAllAudienceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAllAudienceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 84 --
// query.pb.go:362-364
func (m *QueryAllAudienceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAllAudienceResponse.Merge(m, src)
}

-- Chunk 85 --
// query.pb.go:365-367
func (m *QueryAllAudienceResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 86 --
// query.pb.go:368-370
func (m *QueryAllAudienceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAllAudienceResponse.DiscardUnknown(m)
}

-- Chunk 87 --
// query.pb.go:374-379
func (m *QueryAllAudienceResponse) GetAudience() []Audience {
	if m != nil {
		return m.Audience
	}
	return nil
}

-- Chunk 88 --
// query.pb.go:381-386
func (m *QueryAllAudienceResponse) GetPagination() *query.PageResponse {
	if m != nil {
		return m.Pagination
	}
	return nil
}

-- Chunk 89 --
// query.pb.go:388-392
type QueryValidateJWTRequest struct {
	Aud      string `protobuf:"bytes,1,opt,name=aud,proto3" json:"aud,omitempty"`
	Sub      string `protobuf:"bytes,2,opt,name=sub,proto3" json:"sub,omitempty"`
	SigBytes string `protobuf:"bytes,3,opt,name=sigBytes,proto3" json:"sigBytes,omitempty"`
}

-- Chunk 90 --
// query.pb.go:394-394
func (m *QueryValidateJWTRequest) Reset()         { *m = QueryValidateJWTRequest{} }

-- Chunk 91 --
// query.pb.go:395-395
func (m *QueryValidateJWTRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 92 --
// query.pb.go:396-396
func (*QueryValidateJWTRequest) ProtoMessage()    {}

-- Chunk 93 --
// query.pb.go:397-399
func (*QueryValidateJWTRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{8}
}

-- Chunk 94 --
// query.pb.go:400-402
func (m *QueryValidateJWTRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 95 --
// query.pb.go:403-414
func (m *QueryValidateJWTRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidateJWTRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 96 --
// query.pb.go:415-417
func (m *QueryValidateJWTRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidateJWTRequest.Merge(m, src)
}

-- Chunk 97 --
// query.pb.go:418-420
func (m *QueryValidateJWTRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 98 --
// query.pb.go:421-423
func (m *QueryValidateJWTRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidateJWTRequest.DiscardUnknown(m)
}

-- Chunk 99 --
// query.pb.go:427-432
func (m *QueryValidateJWTRequest) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 100 --
// query.pb.go:434-439
func (m *QueryValidateJWTRequest) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

-- Chunk 101 --
// query.pb.go:441-446
func (m *QueryValidateJWTRequest) GetSigBytes() string {
	if m != nil {
		return m.SigBytes
	}
	return ""
}

-- Chunk 102 --
// query.pb.go:448-451
type PrivateClaim struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

-- Chunk 103 --
// query.pb.go:453-453
func (m *PrivateClaim) Reset()         { *m = PrivateClaim{} }

-- Chunk 104 --
// query.pb.go:454-454
func (m *PrivateClaim) String() string { return proto.CompactTextString(m) }

-- Chunk 105 --
// query.pb.go:455-455
func (*PrivateClaim) ProtoMessage()    {}

-- Chunk 106 --
// query.pb.go:456-458
func (*PrivateClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{9}
}

-- Chunk 107 --
// query.pb.go:459-461
func (m *PrivateClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 108 --
// query.pb.go:462-473
func (m *PrivateClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PrivateClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 109 --
// query.pb.go:474-476
func (m *PrivateClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrivateClaim.Merge(m, src)
}

-- Chunk 110 --
// query.pb.go:477-479
func (m *PrivateClaim) XXX_Size() int {
	return m.Size()
}

-- Chunk 111 --
// query.pb.go:480-482
func (m *PrivateClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_PrivateClaim.DiscardUnknown(m)
}

-- Chunk 112 --
// query.pb.go:486-491
func (m *PrivateClaim) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

-- Chunk 113 --
// query.pb.go:493-498
func (m *PrivateClaim) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

-- Chunk 114 --
// query.pb.go:500-502
type QueryValidateJWTResponse struct {
	PrivateClaims []*PrivateClaim `protobuf:"bytes,1,rep,name=privateClaims,proto3" json:"privateClaims,omitempty"`
}

-- Chunk 115 --
// query.pb.go:504-504
func (m *QueryValidateJWTResponse) Reset()         { *m = QueryValidateJWTResponse{} }

-- Chunk 116 --
// query.pb.go:505-505
func (m *QueryValidateJWTResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 117 --
// query.pb.go:506-506
func (*QueryValidateJWTResponse) ProtoMessage()    {}

-- Chunk 118 --
// query.pb.go:507-509
func (*QueryValidateJWTResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6aa237fef6ed9f02, []int{10}
}

-- Chunk 119 --
// query.pb.go:510-512
func (m *QueryValidateJWTResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 120 --
// query.pb.go:513-524
func (m *QueryValidateJWTResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryValidateJWTResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 121 --
// query.pb.go:525-527
func (m *QueryValidateJWTResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryValidateJWTResponse.Merge(m, src)
}

-- Chunk 122 --
// query.pb.go:528-530
func (m *QueryValidateJWTResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 123 --
// query.pb.go:531-533
func (m *QueryValidateJWTResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryValidateJWTResponse.DiscardUnknown(m)
}

-- Chunk 124 --
// query.pb.go:537-542
func (m *QueryValidateJWTResponse) GetPrivateClaims() []*PrivateClaim {
	if m != nil {
		return m.PrivateClaims
	}
	return nil
}

-- Chunk 125 --
// query.pb.go:544-556
func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "xion.jwk.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "xion.jwk.v1.QueryParamsResponse")
	proto.RegisterType((*QueryGetAudienceClaimRequest)(nil), "xion.jwk.v1.QueryGetAudienceClaimRequest")
	proto.RegisterType((*QueryGetAudienceClaimResponse)(nil), "xion.jwk.v1.QueryGetAudienceClaimResponse")
	proto.RegisterType((*QueryGetAudienceRequest)(nil), "xion.jwk.v1.QueryGetAudienceRequest")
	proto.RegisterType((*QueryGetAudienceResponse)(nil), "xion.jwk.v1.QueryGetAudienceResponse")
	proto.RegisterType((*QueryAllAudienceRequest)(nil), "xion.jwk.v1.QueryAllAudienceRequest")
	proto.RegisterType((*QueryAllAudienceResponse)(nil), "xion.jwk.v1.QueryAllAudienceResponse")
	proto.RegisterType((*QueryValidateJWTRequest)(nil), "xion.jwk.v1.QueryValidateJWTRequest")
	proto.RegisterType((*PrivateClaim)(nil), "xion.jwk.v1.PrivateClaim")
	proto.RegisterType((*QueryValidateJWTResponse)(nil), "xion.jwk.v1.QueryValidateJWTResponse")
}

-- Chunk 126 --
// query.pb.go:558-558
func init() { proto.RegisterFile("xion/jwk/v1/query.proto", fileDescriptor_6aa237fef6ed9f02) }

-- Chunk 127 --
// query.pb.go:620-629
type QueryClient interface {
	// Parameters queries the parameters of the module.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	AudienceClaim(ctx context.Context, in *QueryGetAudienceClaimRequest, opts ...grpc.CallOption) (*QueryGetAudienceClaimResponse, error)
	// Queries a list of Audience items.
	Audience(ctx context.Context, in *QueryGetAudienceRequest, opts ...grpc.CallOption) (*QueryGetAudienceResponse, error)
	AudienceAll(ctx context.Context, in *QueryAllAudienceRequest, opts ...grpc.CallOption) (*QueryAllAudienceResponse, error)
	// Queries a list of ValidateJWT items.
	ValidateJWT(ctx context.Context, in *QueryValidateJWTRequest, opts ...grpc.CallOption) (*QueryValidateJWTResponse, error)
}

-- Chunk 128 --
// query.pb.go:631-633
type queryClient struct {
	cc grpc1.ClientConn
}

-- Chunk 129 --
// query.pb.go:635-637
func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

-- Chunk 130 --
// query.pb.go:639-646
func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 131 --
// query.pb.go:648-655
func (c *queryClient) AudienceClaim(ctx context.Context, in *QueryGetAudienceClaimRequest, opts ...grpc.CallOption) (*QueryGetAudienceClaimResponse, error) {
	out := new(QueryGetAudienceClaimResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Query/AudienceClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 132 --
// query.pb.go:657-664
func (c *queryClient) Audience(ctx context.Context, in *QueryGetAudienceRequest, opts ...grpc.CallOption) (*QueryGetAudienceResponse, error) {
	out := new(QueryGetAudienceResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Query/Audience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 133 --
// query.pb.go:666-673
func (c *queryClient) AudienceAll(ctx context.Context, in *QueryAllAudienceRequest, opts ...grpc.CallOption) (*QueryAllAudienceResponse, error) {
	out := new(QueryAllAudienceResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Query/AudienceAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 134 --
// query.pb.go:675-682
func (c *queryClient) ValidateJWT(ctx context.Context, in *QueryValidateJWTRequest, opts ...grpc.CallOption) (*QueryValidateJWTResponse, error) {
	out := new(QueryValidateJWTResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Query/ValidateJWT", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 135 --
// query.pb.go:685-694
type QueryServer interface {
	// Parameters queries the parameters of the module.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	AudienceClaim(context.Context, *QueryGetAudienceClaimRequest) (*QueryGetAudienceClaimResponse, error)
	// Queries a list of Audience items.
	Audience(context.Context, *QueryGetAudienceRequest) (*QueryGetAudienceResponse, error)
	AudienceAll(context.Context, *QueryAllAudienceRequest) (*QueryAllAudienceResponse, error)
	// Queries a list of ValidateJWT items.
	ValidateJWT(context.Context, *QueryValidateJWTRequest) (*QueryValidateJWTResponse, error)
}

-- Chunk 136 --
// query.pb.go:697-698
type UnimplementedQueryServer struct {
}

-- Chunk 137 --
// query.pb.go:700-702
func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}

-- Chunk 138 --
// query.pb.go:703-705
func (*UnimplementedQueryServer) AudienceClaim(ctx context.Context, req *QueryGetAudienceClaimRequest) (*QueryGetAudienceClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AudienceClaim not implemented")
}

-- Chunk 139 --
// query.pb.go:706-708
func (*UnimplementedQueryServer) Audience(ctx context.Context, req *QueryGetAudienceRequest) (*QueryGetAudienceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Audience not implemented")
}

-- Chunk 140 --
// query.pb.go:709-711
func (*UnimplementedQueryServer) AudienceAll(ctx context.Context, req *QueryAllAudienceRequest) (*QueryAllAudienceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AudienceAll not implemented")
}

-- Chunk 141 --
// query.pb.go:712-714
func (*UnimplementedQueryServer) ValidateJWT(ctx context.Context, req *QueryValidateJWTRequest) (*QueryValidateJWTResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateJWT not implemented")
}

-- Chunk 142 --
// query.pb.go:716-718
func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

-- Chunk 143 --
// query.pb.go:720-736
func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 144 --
// query.pb.go:738-754
func _Query_AudienceClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAudienceClaimRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AudienceClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Query/AudienceClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AudienceClaim(ctx, req.(*QueryGetAudienceClaimRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 145 --
// query.pb.go:756-772
func _Query_Audience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryGetAudienceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Audience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Query/Audience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Audience(ctx, req.(*QueryGetAudienceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 146 --
// query.pb.go:774-790
func _Query_AudienceAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAllAudienceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AudienceAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Query/AudienceAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AudienceAll(ctx, req.(*QueryAllAudienceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 147 --
// query.pb.go:792-808
func _Query_ValidateJWT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryValidateJWTRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).ValidateJWT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Query/ValidateJWT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).ValidateJWT(ctx, req.(*QueryValidateJWTRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 148 --
// query.pb.go:839-847
func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 149 --
// query.pb.go:849-852
func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 150 --
// query.pb.go:854-860
func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 151 --
// query.pb.go:862-870
func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 152 --
// query.pb.go:872-875
func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 153 --
// query.pb.go:877-893
func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 154 --
// query.pb.go:895-903
func (m *QueryGetAudienceClaimRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 155 --
// query.pb.go:905-908
func (m *QueryGetAudienceClaimRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 156 --
// query.pb.go:910-923
func (m *QueryGetAudienceClaimRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 157 --
// query.pb.go:925-933
func (m *QueryGetAudienceClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 158 --
// query.pb.go:935-938
func (m *QueryGetAudienceClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 159 --
// query.pb.go:940-958
func (m *QueryGetAudienceClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Claim != nil {
		{
			size, err := m.Claim.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 160 --
// query.pb.go:960-968
func (m *QueryGetAudienceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 161 --
// query.pb.go:970-973
func (m *QueryGetAudienceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 162 --
// query.pb.go:975-988
func (m *QueryGetAudienceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 163 --
// query.pb.go:990-998
func (m *QueryGetAudienceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 164 --
// query.pb.go:1000-1003
func (m *QueryGetAudienceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 165 --
// query.pb.go:1005-1021
func (m *QueryGetAudienceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Audience.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 166 --
// query.pb.go:1023-1031
func (m *QueryAllAudienceRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 167 --
// query.pb.go:1033-1036
func (m *QueryAllAudienceRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 168 --
// query.pb.go:1038-1056
func (m *QueryAllAudienceRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 169 --
// query.pb.go:1058-1066
func (m *QueryAllAudienceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 170 --
// query.pb.go:1068-1071
func (m *QueryAllAudienceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 171 --
// query.pb.go:1073-1105
func (m *QueryAllAudienceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Pagination != nil {
		{
			size, err := m.Pagination.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQuery(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Audience) > 0 {
		for iNdEx := len(m.Audience) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Audience[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 172 --
// query.pb.go:1107-1115
func (m *QueryValidateJWTRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 173 --
// query.pb.go:1117-1120
func (m *QueryValidateJWTRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 174 --
// query.pb.go:1122-1149
func (m *QueryValidateJWTRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SigBytes) > 0 {
		i -= len(m.SigBytes)
		copy(dAtA[i:], m.SigBytes)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.SigBytes)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Sub) > 0 {
		i -= len(m.Sub)
		copy(dAtA[i:], m.Sub)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Sub)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 175 --
// query.pb.go:1151-1159
func (m *PrivateClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 176 --
// query.pb.go:1161-1164
func (m *PrivateClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 177 --
// query.pb.go:1166-1186
func (m *PrivateClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 178 --
// query.pb.go:1188-1196
func (m *QueryValidateJWTResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 179 --
// query.pb.go:1198-1201
func (m *QueryValidateJWTResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 180 --
// query.pb.go:1203-1223
func (m *QueryValidateJWTResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PrivateClaims) > 0 {
		for iNdEx := len(m.PrivateClaims) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PrivateClaims[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 181 --
// query.pb.go:1225-1235
func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 182 --
// query.pb.go:1236-1243
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 183 --
// query.pb.go:1245-1254
func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 184 --
// query.pb.go:1256-1267
func (m *QueryGetAudienceClaimRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 185 --
// query.pb.go:1269-1280
func (m *QueryGetAudienceClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Claim != nil {
		l = m.Claim.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 186 --
// query.pb.go:1282-1293
func (m *QueryGetAudienceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 187 --
// query.pb.go:1295-1304
func (m *QueryGetAudienceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Audience.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 188 --
// query.pb.go:1306-1317
func (m *QueryAllAudienceRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 189 --
// query.pb.go:1319-1336
func (m *QueryAllAudienceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Audience) > 0 {
		for _, e := range m.Audience {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	if m.Pagination != nil {
		l = m.Pagination.Size()
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 190 --
// query.pb.go:1338-1357
func (m *QueryValidateJWTRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Sub)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.SigBytes)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 191 --
// query.pb.go:1359-1374
func (m *PrivateClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 192 --
// query.pb.go:1376-1389
func (m *QueryValidateJWTResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PrivateClaims) > 0 {
		for _, e := range m.PrivateClaims {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

-- Chunk 193 --
// query.pb.go:1391-1393
func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 194 --
// query.pb.go:1394-1396
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 195 --
// query.pb.go:1397-1446
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 196 --
// query.pb.go:1447-1529
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 197 --
// query.pb.go:1530-1613
func (m *QueryGetAudienceClaimRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAudienceClaimRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAudienceClaimRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = append(m.Hash[:0], dAtA[iNdEx:postIndex]...)
			if m.Hash == nil {
				m.Hash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 198 --
// query.pb.go:1614-1699
func (m *QueryGetAudienceClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAudienceClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAudienceClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Claim", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Claim == nil {
				m.Claim = &AudienceClaim{}
			}
			if err := m.Claim.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 199 --
// query.pb.go:1700-1781
func (m *QueryGetAudienceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAudienceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAudienceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 200 --
// query.pb.go:1782-1864
func (m *QueryGetAudienceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryGetAudienceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryGetAudienceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audience", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Audience.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 201 --
// query.pb.go:1865-1950
func (m *QueryAllAudienceRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllAudienceRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllAudienceRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageRequest{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 202 --
// query.pb.go:1951-2070
func (m *QueryAllAudienceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAllAudienceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAllAudienceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audience", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Audience = append(m.Audience, Audience{})
			if err := m.Audience[len(m.Audience)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pagination", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pagination == nil {
				m.Pagination = &query.PageResponse{}
			}
			if err := m.Pagination.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 203 --
// query.pb.go:2071-2216
func (m *QueryValidateJWTRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidateJWTRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidateJWTRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sub", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sub = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SigBytes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SigBytes = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 204 --
// query.pb.go:2217-2330
func (m *PrivateClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PrivateClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PrivateClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 205 --
// query.pb.go:2331-2414
func (m *QueryValidateJWTResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryValidateJWTResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryValidateJWTResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivateClaims", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrivateClaims = append(m.PrivateClaims, &PrivateClaim{})
			if err := m.PrivateClaims[len(m.PrivateClaims)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 206 --
// query.pb.go:2415-2492
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/jwk/types/genesis_test.go ===

-- Chunk 1 --
// genesis_test.go:14-70
func TestGenesisState_Validate(t *testing.T) {
	tests := []struct {
		desc     string
		genState *types.GenesisState
		valid    bool
	}{
		{
			desc:     "default is valid",
			genState: types.DefaultGenesis(),
			valid:    true,
		},
		{
			desc: "valid genesis state",
			genState: &types.GenesisState{
				AudienceList: []types.Audience{
					{
						Aud:   "0",
						Admin: authtypes.NewModuleAddress(govtypes.ModuleName).String(),
					},
					{
						Aud:   "1",
						Admin: authtypes.NewModuleAddress(govtypes.ModuleName).String(),
					},
				},
				// this line is used by starport scaffolding # types/genesis/validField
			},
			valid: true,
		},
		{
			desc: "duplicated audience",
			genState: &types.GenesisState{
				AudienceList: []types.Audience{
					{
						Aud:   "0",
						Admin: authtypes.NewModuleAddress(govtypes.ModuleName).String(),
					},
					{
						Aud:   "0",
						Admin: authtypes.NewModuleAddress(govtypes.ModuleName).String(),
					},
				},
			},
			valid: false,
		},
		// this line is used by starport scaffolding # types/genesis/testcase
	}
	for _, tc := range tests {
		t.Run(tc.desc, func(t *testing.T) {
			err := tc.genState.Validate()
			if tc.valid {
				require.NoError(t, err)
			} else {
				require.Error(t, err)
			}
		})
	}
}

=== File: x/jwk/types/tx.pb.go ===

-- Chunk 1 --
// tx.pb.go:31-34
type MsgCreateAudienceClaim struct {
	Admin   string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	AudHash []byte `protobuf:"bytes,2,opt,name=aud_hash,json=audHash,proto3" json:"aud_hash,omitempty"`
}

-- Chunk 2 --
// tx.pb.go:36-36
func (m *MsgCreateAudienceClaim) Reset()         { *m = MsgCreateAudienceClaim{} }

-- Chunk 3 --
// tx.pb.go:37-37
func (m *MsgCreateAudienceClaim) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// tx.pb.go:38-38
func (*MsgCreateAudienceClaim) ProtoMessage()    {}

-- Chunk 5 --
// tx.pb.go:39-41
func (*MsgCreateAudienceClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{0}
}

-- Chunk 6 --
// tx.pb.go:42-44
func (m *MsgCreateAudienceClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// tx.pb.go:45-56
func (m *MsgCreateAudienceClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAudienceClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// tx.pb.go:57-59
func (m *MsgCreateAudienceClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAudienceClaim.Merge(m, src)
}

-- Chunk 9 --
// tx.pb.go:60-62
func (m *MsgCreateAudienceClaim) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// tx.pb.go:63-65
func (m *MsgCreateAudienceClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAudienceClaim.DiscardUnknown(m)
}

-- Chunk 11 --
// tx.pb.go:69-74
func (m *MsgCreateAudienceClaim) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 12 --
// tx.pb.go:76-81
func (m *MsgCreateAudienceClaim) GetAudHash() []byte {
	if m != nil {
		return m.AudHash
	}
	return nil
}

-- Chunk 13 --
// tx.pb.go:83-84
type MsgCreateAudienceClaimResponse struct {
}

-- Chunk 14 --
// tx.pb.go:86-86
func (m *MsgCreateAudienceClaimResponse) Reset()         { *m = MsgCreateAudienceClaimResponse{} }

-- Chunk 15 --
// tx.pb.go:87-87
func (m *MsgCreateAudienceClaimResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 16 --
// tx.pb.go:88-88
func (*MsgCreateAudienceClaimResponse) ProtoMessage()    {}

-- Chunk 17 --
// tx.pb.go:89-91
func (*MsgCreateAudienceClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{1}
}

-- Chunk 18 --
// tx.pb.go:92-94
func (m *MsgCreateAudienceClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 19 --
// tx.pb.go:95-106
func (m *MsgCreateAudienceClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAudienceClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 20 --
// tx.pb.go:107-109
func (m *MsgCreateAudienceClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAudienceClaimResponse.Merge(m, src)
}

-- Chunk 21 --
// tx.pb.go:110-112
func (m *MsgCreateAudienceClaimResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 22 --
// tx.pb.go:113-115
func (m *MsgCreateAudienceClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAudienceClaimResponse.DiscardUnknown(m)
}

-- Chunk 23 --
// tx.pb.go:119-122
type MsgDeleteAudienceClaim struct {
	Admin   string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	AudHash []byte `protobuf:"bytes,2,opt,name=aud_hash,json=audHash,proto3" json:"aud_hash,omitempty"`
}

-- Chunk 24 --
// tx.pb.go:124-124
func (m *MsgDeleteAudienceClaim) Reset()         { *m = MsgDeleteAudienceClaim{} }

-- Chunk 25 --
// tx.pb.go:125-125
func (m *MsgDeleteAudienceClaim) String() string { return proto.CompactTextString(m) }

-- Chunk 26 --
// tx.pb.go:126-126
func (*MsgDeleteAudienceClaim) ProtoMessage()    {}

-- Chunk 27 --
// tx.pb.go:127-129
func (*MsgDeleteAudienceClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{2}
}

-- Chunk 28 --
// tx.pb.go:130-132
func (m *MsgDeleteAudienceClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 29 --
// tx.pb.go:133-144
func (m *MsgDeleteAudienceClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAudienceClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 30 --
// tx.pb.go:145-147
func (m *MsgDeleteAudienceClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAudienceClaim.Merge(m, src)
}

-- Chunk 31 --
// tx.pb.go:148-150
func (m *MsgDeleteAudienceClaim) XXX_Size() int {
	return m.Size()
}

-- Chunk 32 --
// tx.pb.go:151-153
func (m *MsgDeleteAudienceClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAudienceClaim.DiscardUnknown(m)
}

-- Chunk 33 --
// tx.pb.go:157-162
func (m *MsgDeleteAudienceClaim) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 34 --
// tx.pb.go:164-169
func (m *MsgDeleteAudienceClaim) GetAudHash() []byte {
	if m != nil {
		return m.AudHash
	}
	return nil
}

-- Chunk 35 --
// tx.pb.go:171-172
type MsgDeleteAudienceClaimResponse struct {
}

-- Chunk 36 --
// tx.pb.go:174-174
func (m *MsgDeleteAudienceClaimResponse) Reset()         { *m = MsgDeleteAudienceClaimResponse{} }

-- Chunk 37 --
// tx.pb.go:175-175
func (m *MsgDeleteAudienceClaimResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 38 --
// tx.pb.go:176-176
func (*MsgDeleteAudienceClaimResponse) ProtoMessage()    {}

-- Chunk 39 --
// tx.pb.go:177-179
func (*MsgDeleteAudienceClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{3}
}

-- Chunk 40 --
// tx.pb.go:180-182
func (m *MsgDeleteAudienceClaimResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 41 --
// tx.pb.go:183-194
func (m *MsgDeleteAudienceClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAudienceClaimResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 42 --
// tx.pb.go:195-197
func (m *MsgDeleteAudienceClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAudienceClaimResponse.Merge(m, src)
}

-- Chunk 43 --
// tx.pb.go:198-200
func (m *MsgDeleteAudienceClaimResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 44 --
// tx.pb.go:201-203
func (m *MsgDeleteAudienceClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAudienceClaimResponse.DiscardUnknown(m)
}

-- Chunk 45 --
// tx.pb.go:207-211
type MsgCreateAudience struct {
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Aud   string `protobuf:"bytes,2,opt,name=aud,proto3" json:"aud,omitempty"`
	Key   string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

-- Chunk 46 --
// tx.pb.go:213-213
func (m *MsgCreateAudience) Reset()         { *m = MsgCreateAudience{} }

-- Chunk 47 --
// tx.pb.go:214-214
func (m *MsgCreateAudience) String() string { return proto.CompactTextString(m) }

-- Chunk 48 --
// tx.pb.go:215-215
func (*MsgCreateAudience) ProtoMessage()    {}

-- Chunk 49 --
// tx.pb.go:216-218
func (*MsgCreateAudience) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{4}
}

-- Chunk 50 --
// tx.pb.go:219-221
func (m *MsgCreateAudience) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 51 --
// tx.pb.go:222-233
func (m *MsgCreateAudience) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAudience.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 52 --
// tx.pb.go:234-236
func (m *MsgCreateAudience) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAudience.Merge(m, src)
}

-- Chunk 53 --
// tx.pb.go:237-239
func (m *MsgCreateAudience) XXX_Size() int {
	return m.Size()
}

-- Chunk 54 --
// tx.pb.go:240-242
func (m *MsgCreateAudience) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAudience.DiscardUnknown(m)
}

-- Chunk 55 --
// tx.pb.go:246-251
func (m *MsgCreateAudience) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 56 --
// tx.pb.go:253-258
func (m *MsgCreateAudience) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 57 --
// tx.pb.go:260-265
func (m *MsgCreateAudience) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

-- Chunk 58 --
// tx.pb.go:267-269
type MsgCreateAudienceResponse struct {
	Audience *Audience `protobuf:"bytes,1,opt,name=audience,proto3" json:"audience,omitempty"`
}

-- Chunk 59 --
// tx.pb.go:271-271
func (m *MsgCreateAudienceResponse) Reset()         { *m = MsgCreateAudienceResponse{} }

-- Chunk 60 --
// tx.pb.go:272-272
func (m *MsgCreateAudienceResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 61 --
// tx.pb.go:273-273
func (*MsgCreateAudienceResponse) ProtoMessage()    {}

-- Chunk 62 --
// tx.pb.go:274-276
func (*MsgCreateAudienceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{5}
}

-- Chunk 63 --
// tx.pb.go:277-279
func (m *MsgCreateAudienceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 64 --
// tx.pb.go:280-291
func (m *MsgCreateAudienceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateAudienceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 65 --
// tx.pb.go:292-294
func (m *MsgCreateAudienceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateAudienceResponse.Merge(m, src)
}

-- Chunk 66 --
// tx.pb.go:295-297
func (m *MsgCreateAudienceResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 67 --
// tx.pb.go:298-300
func (m *MsgCreateAudienceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateAudienceResponse.DiscardUnknown(m)
}

-- Chunk 68 --
// tx.pb.go:304-309
func (m *MsgCreateAudienceResponse) GetAudience() *Audience {
	if m != nil {
		return m.Audience
	}
	return nil
}

-- Chunk 69 --
// tx.pb.go:311-316
type MsgUpdateAudience struct {
	Admin    string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	NewAdmin string `protobuf:"bytes,2,opt,name=new_admin,json=newAdmin,proto3" json:"new_admin,omitempty"`
	Aud      string `protobuf:"bytes,3,opt,name=aud,proto3" json:"aud,omitempty"`
	Key      string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

-- Chunk 70 --
// tx.pb.go:318-318
func (m *MsgUpdateAudience) Reset()         { *m = MsgUpdateAudience{} }

-- Chunk 71 --
// tx.pb.go:319-319
func (m *MsgUpdateAudience) String() string { return proto.CompactTextString(m) }

-- Chunk 72 --
// tx.pb.go:320-320
func (*MsgUpdateAudience) ProtoMessage()    {}

-- Chunk 73 --
// tx.pb.go:321-323
func (*MsgUpdateAudience) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{6}
}

-- Chunk 74 --
// tx.pb.go:324-326
func (m *MsgUpdateAudience) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 75 --
// tx.pb.go:327-338
func (m *MsgUpdateAudience) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAudience.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 76 --
// tx.pb.go:339-341
func (m *MsgUpdateAudience) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAudience.Merge(m, src)
}

-- Chunk 77 --
// tx.pb.go:342-344
func (m *MsgUpdateAudience) XXX_Size() int {
	return m.Size()
}

-- Chunk 78 --
// tx.pb.go:345-347
func (m *MsgUpdateAudience) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAudience.DiscardUnknown(m)
}

-- Chunk 79 --
// tx.pb.go:351-356
func (m *MsgUpdateAudience) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 80 --
// tx.pb.go:358-363
func (m *MsgUpdateAudience) GetNewAdmin() string {
	if m != nil {
		return m.NewAdmin
	}
	return ""
}

-- Chunk 81 --
// tx.pb.go:365-370
func (m *MsgUpdateAudience) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 82 --
// tx.pb.go:372-377
func (m *MsgUpdateAudience) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

-- Chunk 83 --
// tx.pb.go:379-381
type MsgUpdateAudienceResponse struct {
	Audience *Audience `protobuf:"bytes,1,opt,name=audience,proto3" json:"audience,omitempty"`
}

-- Chunk 84 --
// tx.pb.go:383-383
func (m *MsgUpdateAudienceResponse) Reset()         { *m = MsgUpdateAudienceResponse{} }

-- Chunk 85 --
// tx.pb.go:384-384
func (m *MsgUpdateAudienceResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 86 --
// tx.pb.go:385-385
func (*MsgUpdateAudienceResponse) ProtoMessage()    {}

-- Chunk 87 --
// tx.pb.go:386-388
func (*MsgUpdateAudienceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{7}
}

-- Chunk 88 --
// tx.pb.go:389-391
func (m *MsgUpdateAudienceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 89 --
// tx.pb.go:392-403
func (m *MsgUpdateAudienceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateAudienceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 90 --
// tx.pb.go:404-406
func (m *MsgUpdateAudienceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateAudienceResponse.Merge(m, src)
}

-- Chunk 91 --
// tx.pb.go:407-409
func (m *MsgUpdateAudienceResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 92 --
// tx.pb.go:410-412
func (m *MsgUpdateAudienceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateAudienceResponse.DiscardUnknown(m)
}

-- Chunk 93 --
// tx.pb.go:416-421
func (m *MsgUpdateAudienceResponse) GetAudience() *Audience {
	if m != nil {
		return m.Audience
	}
	return nil
}

-- Chunk 94 --
// tx.pb.go:423-426
type MsgDeleteAudience struct {
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Aud   string `protobuf:"bytes,2,opt,name=aud,proto3" json:"aud,omitempty"`
}

-- Chunk 95 --
// tx.pb.go:428-428
func (m *MsgDeleteAudience) Reset()         { *m = MsgDeleteAudience{} }

-- Chunk 96 --
// tx.pb.go:429-429
func (m *MsgDeleteAudience) String() string { return proto.CompactTextString(m) }

-- Chunk 97 --
// tx.pb.go:430-430
func (*MsgDeleteAudience) ProtoMessage()    {}

-- Chunk 98 --
// tx.pb.go:431-433
func (*MsgDeleteAudience) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{8}
}

-- Chunk 99 --
// tx.pb.go:434-436
func (m *MsgDeleteAudience) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 100 --
// tx.pb.go:437-448
func (m *MsgDeleteAudience) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAudience.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 101 --
// tx.pb.go:449-451
func (m *MsgDeleteAudience) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAudience.Merge(m, src)
}

-- Chunk 102 --
// tx.pb.go:452-454
func (m *MsgDeleteAudience) XXX_Size() int {
	return m.Size()
}

-- Chunk 103 --
// tx.pb.go:455-457
func (m *MsgDeleteAudience) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAudience.DiscardUnknown(m)
}

-- Chunk 104 --
// tx.pb.go:461-466
func (m *MsgDeleteAudience) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 105 --
// tx.pb.go:468-473
func (m *MsgDeleteAudience) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 106 --
// tx.pb.go:475-476
type MsgDeleteAudienceResponse struct {
}

-- Chunk 107 --
// tx.pb.go:478-478
func (m *MsgDeleteAudienceResponse) Reset()         { *m = MsgDeleteAudienceResponse{} }

-- Chunk 108 --
// tx.pb.go:479-479
func (m *MsgDeleteAudienceResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 109 --
// tx.pb.go:480-480
func (*MsgDeleteAudienceResponse) ProtoMessage()    {}

-- Chunk 110 --
// tx.pb.go:481-483
func (*MsgDeleteAudienceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37d2745ede75df, []int{9}
}

-- Chunk 111 --
// tx.pb.go:484-486
func (m *MsgDeleteAudienceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 112 --
// tx.pb.go:487-498
func (m *MsgDeleteAudienceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteAudienceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 113 --
// tx.pb.go:499-501
func (m *MsgDeleteAudienceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteAudienceResponse.Merge(m, src)
}

-- Chunk 114 --
// tx.pb.go:502-504
func (m *MsgDeleteAudienceResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 115 --
// tx.pb.go:505-507
func (m *MsgDeleteAudienceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteAudienceResponse.DiscardUnknown(m)
}

-- Chunk 116 --
// tx.pb.go:511-522
func init() {
	proto.RegisterType((*MsgCreateAudienceClaim)(nil), "xion.jwk.v1.MsgCreateAudienceClaim")
	proto.RegisterType((*MsgCreateAudienceClaimResponse)(nil), "xion.jwk.v1.MsgCreateAudienceClaimResponse")
	proto.RegisterType((*MsgDeleteAudienceClaim)(nil), "xion.jwk.v1.MsgDeleteAudienceClaim")
	proto.RegisterType((*MsgDeleteAudienceClaimResponse)(nil), "xion.jwk.v1.MsgDeleteAudienceClaimResponse")
	proto.RegisterType((*MsgCreateAudience)(nil), "xion.jwk.v1.MsgCreateAudience")
	proto.RegisterType((*MsgCreateAudienceResponse)(nil), "xion.jwk.v1.MsgCreateAudienceResponse")
	proto.RegisterType((*MsgUpdateAudience)(nil), "xion.jwk.v1.MsgUpdateAudience")
	proto.RegisterType((*MsgUpdateAudienceResponse)(nil), "xion.jwk.v1.MsgUpdateAudienceResponse")
	proto.RegisterType((*MsgDeleteAudience)(nil), "xion.jwk.v1.MsgDeleteAudience")
	proto.RegisterType((*MsgDeleteAudienceResponse)(nil), "xion.jwk.v1.MsgDeleteAudienceResponse")
}

-- Chunk 117 --
// tx.pb.go:524-524
func init() { proto.RegisterFile("xion/jwk/v1/tx.proto", fileDescriptor_cb37d2745ede75df) }

-- Chunk 118 --
// tx.pb.go:570-576
type MsgClient interface {
	CreateAudienceClaim(ctx context.Context, in *MsgCreateAudienceClaim, opts ...grpc.CallOption) (*MsgCreateAudienceClaimResponse, error)
	DeleteAudienceClaim(ctx context.Context, in *MsgDeleteAudienceClaim, opts ...grpc.CallOption) (*MsgDeleteAudienceClaimResponse, error)
	CreateAudience(ctx context.Context, in *MsgCreateAudience, opts ...grpc.CallOption) (*MsgCreateAudienceResponse, error)
	UpdateAudience(ctx context.Context, in *MsgUpdateAudience, opts ...grpc.CallOption) (*MsgUpdateAudienceResponse, error)
	DeleteAudience(ctx context.Context, in *MsgDeleteAudience, opts ...grpc.CallOption) (*MsgDeleteAudienceResponse, error)
}

-- Chunk 119 --
// tx.pb.go:578-580
type msgClient struct {
	cc grpc1.ClientConn
}

-- Chunk 120 --
// tx.pb.go:582-584
func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

-- Chunk 121 --
// tx.pb.go:586-593
func (c *msgClient) CreateAudienceClaim(ctx context.Context, in *MsgCreateAudienceClaim, opts ...grpc.CallOption) (*MsgCreateAudienceClaimResponse, error) {
	out := new(MsgCreateAudienceClaimResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Msg/CreateAudienceClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 122 --
// tx.pb.go:595-602
func (c *msgClient) DeleteAudienceClaim(ctx context.Context, in *MsgDeleteAudienceClaim, opts ...grpc.CallOption) (*MsgDeleteAudienceClaimResponse, error) {
	out := new(MsgDeleteAudienceClaimResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Msg/DeleteAudienceClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 123 --
// tx.pb.go:604-611
func (c *msgClient) CreateAudience(ctx context.Context, in *MsgCreateAudience, opts ...grpc.CallOption) (*MsgCreateAudienceResponse, error) {
	out := new(MsgCreateAudienceResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Msg/CreateAudience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 124 --
// tx.pb.go:613-620
func (c *msgClient) UpdateAudience(ctx context.Context, in *MsgUpdateAudience, opts ...grpc.CallOption) (*MsgUpdateAudienceResponse, error) {
	out := new(MsgUpdateAudienceResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Msg/UpdateAudience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 125 --
// tx.pb.go:622-629
func (c *msgClient) DeleteAudience(ctx context.Context, in *MsgDeleteAudience, opts ...grpc.CallOption) (*MsgDeleteAudienceResponse, error) {
	out := new(MsgDeleteAudienceResponse)
	err := c.cc.Invoke(ctx, "/xion.jwk.v1.Msg/DeleteAudience", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 126 --
// tx.pb.go:632-638
type MsgServer interface {
	CreateAudienceClaim(context.Context, *MsgCreateAudienceClaim) (*MsgCreateAudienceClaimResponse, error)
	DeleteAudienceClaim(context.Context, *MsgDeleteAudienceClaim) (*MsgDeleteAudienceClaimResponse, error)
	CreateAudience(context.Context, *MsgCreateAudience) (*MsgCreateAudienceResponse, error)
	UpdateAudience(context.Context, *MsgUpdateAudience) (*MsgUpdateAudienceResponse, error)
	DeleteAudience(context.Context, *MsgDeleteAudience) (*MsgDeleteAudienceResponse, error)
}

-- Chunk 127 --
// tx.pb.go:641-642
type UnimplementedMsgServer struct {
}

-- Chunk 128 --
// tx.pb.go:644-646
func (*UnimplementedMsgServer) CreateAudienceClaim(ctx context.Context, req *MsgCreateAudienceClaim) (*MsgCreateAudienceClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAudienceClaim not implemented")
}

-- Chunk 129 --
// tx.pb.go:647-649
func (*UnimplementedMsgServer) DeleteAudienceClaim(ctx context.Context, req *MsgDeleteAudienceClaim) (*MsgDeleteAudienceClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAudienceClaim not implemented")
}

-- Chunk 130 --
// tx.pb.go:650-652
func (*UnimplementedMsgServer) CreateAudience(ctx context.Context, req *MsgCreateAudience) (*MsgCreateAudienceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAudience not implemented")
}

-- Chunk 131 --
// tx.pb.go:653-655
func (*UnimplementedMsgServer) UpdateAudience(ctx context.Context, req *MsgUpdateAudience) (*MsgUpdateAudienceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAudience not implemented")
}

-- Chunk 132 --
// tx.pb.go:656-658
func (*UnimplementedMsgServer) DeleteAudience(ctx context.Context, req *MsgDeleteAudience) (*MsgDeleteAudienceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAudience not implemented")
}

-- Chunk 133 --
// tx.pb.go:660-662
func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

-- Chunk 134 --
// tx.pb.go:664-680
func _Msg_CreateAudienceClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAudienceClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAudienceClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Msg/CreateAudienceClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAudienceClaim(ctx, req.(*MsgCreateAudienceClaim))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 135 --
// tx.pb.go:682-698
func _Msg_DeleteAudienceClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAudienceClaim)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAudienceClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Msg/DeleteAudienceClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAudienceClaim(ctx, req.(*MsgDeleteAudienceClaim))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 136 --
// tx.pb.go:700-716
func _Msg_CreateAudience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateAudience)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateAudience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Msg/CreateAudience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateAudience(ctx, req.(*MsgCreateAudience))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 137 --
// tx.pb.go:718-734
func _Msg_UpdateAudience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateAudience)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateAudience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Msg/UpdateAudience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateAudience(ctx, req.(*MsgUpdateAudience))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 138 --
// tx.pb.go:736-752
func _Msg_DeleteAudience_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteAudience)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteAudience(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.jwk.v1.Msg/DeleteAudience",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteAudience(ctx, req.(*MsgDeleteAudience))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 139 --
// tx.pb.go:783-791
func (m *MsgCreateAudienceClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 140 --
// tx.pb.go:793-796
func (m *MsgCreateAudienceClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 141 --
// tx.pb.go:798-818
func (m *MsgCreateAudienceClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AudHash) > 0 {
		i -= len(m.AudHash)
		copy(dAtA[i:], m.AudHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AudHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 142 --
// tx.pb.go:820-828
func (m *MsgCreateAudienceClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 143 --
// tx.pb.go:830-833
func (m *MsgCreateAudienceClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 144 --
// tx.pb.go:835-841
func (m *MsgCreateAudienceClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 145 --
// tx.pb.go:843-851
func (m *MsgDeleteAudienceClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 146 --
// tx.pb.go:853-856
func (m *MsgDeleteAudienceClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 147 --
// tx.pb.go:858-878
func (m *MsgDeleteAudienceClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AudHash) > 0 {
		i -= len(m.AudHash)
		copy(dAtA[i:], m.AudHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AudHash)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 148 --
// tx.pb.go:880-888
func (m *MsgDeleteAudienceClaimResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 149 --
// tx.pb.go:890-893
func (m *MsgDeleteAudienceClaimResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 150 --
// tx.pb.go:895-901
func (m *MsgDeleteAudienceClaimResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 151 --
// tx.pb.go:903-911
func (m *MsgCreateAudience) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 152 --
// tx.pb.go:913-916
func (m *MsgCreateAudience) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 153 --
// tx.pb.go:918-945
func (m *MsgCreateAudience) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 154 --
// tx.pb.go:947-955
func (m *MsgCreateAudienceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 155 --
// tx.pb.go:957-960
func (m *MsgCreateAudienceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 156 --
// tx.pb.go:962-980
func (m *MsgCreateAudienceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Audience != nil {
		{
			size, err := m.Audience.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 157 --
// tx.pb.go:982-990
func (m *MsgUpdateAudience) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 158 --
// tx.pb.go:992-995
func (m *MsgUpdateAudience) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 159 --
// tx.pb.go:997-1031
func (m *MsgUpdateAudience) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.NewAdmin) > 0 {
		i -= len(m.NewAdmin)
		copy(dAtA[i:], m.NewAdmin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewAdmin)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 160 --
// tx.pb.go:1033-1041
func (m *MsgUpdateAudienceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 161 --
// tx.pb.go:1043-1046
func (m *MsgUpdateAudienceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 162 --
// tx.pb.go:1048-1066
func (m *MsgUpdateAudienceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Audience != nil {
		{
			size, err := m.Audience.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 163 --
// tx.pb.go:1068-1076
func (m *MsgDeleteAudience) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 164 --
// tx.pb.go:1078-1081
func (m *MsgDeleteAudience) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 165 --
// tx.pb.go:1083-1103
func (m *MsgDeleteAudience) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 166 --
// tx.pb.go:1105-1113
func (m *MsgDeleteAudienceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 167 --
// tx.pb.go:1115-1118
func (m *MsgDeleteAudienceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 168 --
// tx.pb.go:1120-1126
func (m *MsgDeleteAudienceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 169 --
// tx.pb.go:1128-1138
func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 170 --
// tx.pb.go:1139-1154
func (m *MsgCreateAudienceClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AudHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 171 --
// tx.pb.go:1156-1163
func (m *MsgCreateAudienceClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 172 --
// tx.pb.go:1165-1180
func (m *MsgDeleteAudienceClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AudHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 173 --
// tx.pb.go:1182-1189
func (m *MsgDeleteAudienceClaimResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 174 --
// tx.pb.go:1191-1210
func (m *MsgCreateAudience) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 175 --
// tx.pb.go:1212-1223
func (m *MsgCreateAudienceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Audience != nil {
		l = m.Audience.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 176 --
// tx.pb.go:1225-1248
func (m *MsgUpdateAudience) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewAdmin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 177 --
// tx.pb.go:1250-1261
func (m *MsgUpdateAudienceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Audience != nil {
		l = m.Audience.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 178 --
// tx.pb.go:1263-1278
func (m *MsgDeleteAudience) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

-- Chunk 179 --
// tx.pb.go:1280-1287
func (m *MsgDeleteAudienceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 180 --
// tx.pb.go:1289-1291
func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 181 --
// tx.pb.go:1292-1294
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 182 --
// tx.pb.go:1295-1410
func (m *MsgCreateAudienceClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAudienceClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAudienceClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudHash = append(m.AudHash[:0], dAtA[iNdEx:postIndex]...)
			if m.AudHash == nil {
				m.AudHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 183 --
// tx.pb.go:1411-1460
func (m *MsgCreateAudienceClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAudienceClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAudienceClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 184 --
// tx.pb.go:1461-1576
func (m *MsgDeleteAudienceClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAudienceClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAudienceClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AudHash = append(m.AudHash[:0], dAtA[iNdEx:postIndex]...)
			if m.AudHash == nil {
				m.AudHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 185 --
// tx.pb.go:1577-1626
func (m *MsgDeleteAudienceClaimResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAudienceClaimResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAudienceClaimResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 186 --
// tx.pb.go:1627-1772
func (m *MsgCreateAudience) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAudience: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAudience: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 187 --
// tx.pb.go:1773-1858
func (m *MsgCreateAudienceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateAudienceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateAudienceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audience", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Audience == nil {
				m.Audience = &Audience{}
			}
			if err := m.Audience.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 188 --
// tx.pb.go:1859-2008
func (m *MsgUpdateAudience) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAudience: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAudience: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewAdmin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewAdmin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {

-- Chunk 189 --
// tx.pb.go:2009-2036
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 190 --
// tx.pb.go:2037-2122
func (m *MsgUpdateAudienceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateAudienceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateAudienceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Audience", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Audience == nil {
				m.Audience = &Audience{}
			}
			if err := m.Audience.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 191 --
// tx.pb.go:2123-2236
func (m *MsgDeleteAudience) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAudience: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAudience: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 192 --
// tx.pb.go:2237-2286
func (m *MsgDeleteAudienceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteAudienceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteAudienceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 193 --
// tx.pb.go:2287-2364
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/jwk/types/errors.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/jwk/types/errors.go:1-12
package types

// DONTCOVER

import (
	errorsmod "cosmossdk.io/errors"
)

// x/jwk module sentinel errors
var (
	ErrInvalidJWK = errorsmod.Register(ModuleName, 1100, "invalid jwk")
)

=== File: x/jwk/types/genesis.go ===

-- Chunk 1 --
// genesis.go:16-22
func DefaultGenesis() *GenesisState {
	return &GenesisState{
		AudienceList: []Audience{},
		// this line is used by starport scaffolding # genesis/types/default
		Params: DefaultParams(),
	}
}

-- Chunk 2 --
// genesis.go:26-45
func (gs GenesisState) Validate() error {
	// Check for duplicated index in audience
	audienceIndexMap := make(map[string]struct{})

	for _, elem := range gs.AudienceList {
		_, err := sdk.AccAddressFromBech32(elem.Admin)
		if err != nil {
			return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
		}

		index := string(AudienceKey(elem.Aud))
		if _, ok := audienceIndexMap[index]; ok {
			return fmt.Errorf("duplicated index for audience")
		}
		audienceIndexMap[index] = struct{}{}
	}
	// this line is used by starport scaffolding # genesis/types/validate

	return gs.Params.Validate()
}

=== File: x/jwk/types/params.pb.go ===

-- Chunk 1 --
// params.pb.go:27-30
type Params struct {
	TimeOffset    uint64 `protobuf:"varint,1,opt,name=time_offset,json=timeOffset,proto3" json:"time_offset,omitempty" yaml:"time_offset"`
	DeploymentGas uint64 `protobuf:"varint,2,opt,name=deployment_gas,json=deploymentGas,proto3" json:"deployment_gas,omitempty" yaml:"deployment_gas"`
}

-- Chunk 2 --
// params.pb.go:32-32
func (m *Params) Reset()         { *m = Params{} }

-- Chunk 3 --
// params.pb.go:33-33
func (m *Params) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// params.pb.go:34-34
func (*Params) ProtoMessage()    {}

-- Chunk 5 --
// params.pb.go:35-37
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d05e32b718278f0, []int{0}
}

-- Chunk 6 --
// params.pb.go:38-40
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// params.pb.go:41-52
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// params.pb.go:53-55
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}

-- Chunk 9 --
// params.pb.go:56-58
func (m *Params) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// params.pb.go:59-61
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

-- Chunk 11 --
// params.pb.go:65-70
func (m *Params) GetTimeOffset() uint64 {
	if m != nil {
		return m.TimeOffset
	}
	return 0
}

-- Chunk 12 --
// params.pb.go:72-77
func (m *Params) GetDeploymentGas() uint64 {
	if m != nil {
		return m.DeploymentGas
	}
	return 0
}

-- Chunk 13 --
// params.pb.go:79-81
func init() {
	proto.RegisterType((*Params)(nil), "xion.jwk.v1.Params")
}

-- Chunk 14 --
// params.pb.go:83-83
func init() { proto.RegisterFile("xion/jwk/v1/params.proto", fileDescriptor_6d05e32b718278f0) }

-- Chunk 15 --
// params.pb.go:104-112
func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 16 --
// params.pb.go:114-117
func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 17 --
// params.pb.go:119-135
func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DeploymentGas != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.DeploymentGas))
		i--
		dAtA[i] = 0x10
	}
	if m.TimeOffset != 0 {
		i = encodeVarintParams(dAtA, i, uint64(m.TimeOffset))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

-- Chunk 18 --
// params.pb.go:137-147
func encodeVarintParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 19 --
// params.pb.go:148-161
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TimeOffset != 0 {
		n += 1 + sovParams(uint64(m.TimeOffset))
	}
	if m.DeploymentGas != 0 {
		n += 1 + sovParams(uint64(m.DeploymentGas))
	}
	return n
}

-- Chunk 20 --
// params.pb.go:163-165
func sovParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 21 --
// params.pb.go:166-168
func sozParams(x uint64) (n int) {
	return sovParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 22 --
// params.pb.go:169-256
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeOffset", wireType)
			}
			m.TimeOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TimeOffset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeploymentGas", wireType)
			}
			m.DeploymentGas = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeploymentGas |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 23 --
// params.pb.go:257-334
func skipParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/jwk/types/messages_audience.go ===

-- Chunk 1 --
// messages_audience.go:26-36
func NewMsgCreateAudience(
	admin string,
	aud string,
	key string,
) *MsgCreateAudience {
	return &MsgCreateAudience{
		Admin: admin,
		Aud:   aud,
		Key:   key,
	}
}

-- Chunk 2 --
// messages_audience.go:38-40
func (msg *MsgCreateAudience) Route() string {
	return RouterKey
}

-- Chunk 3 --
// messages_audience.go:42-44
func (msg *MsgCreateAudience) Type() string {
	return TypeMsgCreateAudience
}

-- Chunk 4 --
// messages_audience.go:46-52
func (msg *MsgCreateAudience) GetSigners() []sdk.AccAddress {
	admin, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		panic(err)
	}
	return []sdk.AccAddress{admin}
}

-- Chunk 5 --
// messages_audience.go:54-57
func (msg *MsgCreateAudience) GetSignBytes() []byte {
	bz := ModuleCdc.MustMarshalJSON(msg)
	return sdk.MustSortJSON(bz)
}

-- Chunk 6 --
// messages_audience.go:59-81
func (msg *MsgCreateAudience) ValidateBasic() error {
	_, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}

	key, err := jwk.ParseKey([]byte(msg.Key))
	if err != nil {
		return errorsmod.Wrapf(ErrInvalidJWK, "invalid jwk format (%s)", err)
	}

	var sigAlg jwa.SignatureAlgorithm
	if err := sigAlg.Accept(key.Algorithm().String()); err != nil {
		return err
	}

	switch sigAlg {
	case jwa.HS256, jwa.HS384, jwa.HS512, jwa.NoSignature:
		return fmt.Errorf("invalid algorithm: %s", sigAlg.String())
	}

	return nil
}

-- Chunk 7 --
// messages_audience.go:85-97
func NewMsgUpdateAudience(
	admin string,
	newAdmin string,
	aud string,
	key string,
) *MsgUpdateAudience {
	return &MsgUpdateAudience{
		NewAdmin: newAdmin,
		Admin:    admin,
		Aud:      aud,
		Key:      key,
	}
}

-- Chunk 8 --
// messages_audience.go:99-101
func (msg *MsgUpdateAudience) Route() string {
	return RouterKey
}

-- Chunk 9 --
// messages_audience.go:103-105
func (msg *MsgUpdateAudience) Type() string {
	return TypeMsgUpdateAudience
}

-- Chunk 10 --
// messages_audience.go:107-113
func (msg *MsgUpdateAudience) GetSigners() []sdk.AccAddress {
	admin, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		panic(err)
	}
	return []sdk.AccAddress{admin}
}

-- Chunk 11 --
// messages_audience.go:115-118
func (msg *MsgUpdateAudience) GetSignBytes() []byte {
	bz := ModuleCdc.MustMarshalJSON(msg)
	return sdk.MustSortJSON(bz)
}

-- Chunk 12 --
// messages_audience.go:120-147
func (msg *MsgUpdateAudience) ValidateBasic() error {
	_, err := sdk.AccAddressFromBech32(msg.NewAdmin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}

	_, err = sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}

	key, err := jwk.ParseKey([]byte(msg.Key))
	if err != nil {
		return errorsmod.Wrapf(ErrInvalidJWK, "invalid jwk format (%s)", err)
	}

	var sigAlg jwa.SignatureAlgorithm
	if err := sigAlg.Accept(key.Algorithm().String()); err != nil {
		return err
	}

	switch sigAlg {
	case jwa.HS256, jwa.HS384, jwa.HS512, jwa.NoSignature:
		return fmt.Errorf("invalid algorithm: %s", sigAlg.String())
	}

	return nil
}

-- Chunk 13 --
// messages_audience.go:151-159
func NewMsgDeleteAudience(
	admin string,
	aud string,
) *MsgDeleteAudience {
	return &MsgDeleteAudience{
		Admin: admin,
		Aud:   aud,
	}
}

-- Chunk 14 --
// messages_audience.go:161-163
func (msg *MsgDeleteAudience) Route() string {
	return RouterKey
}

-- Chunk 15 --
// messages_audience.go:165-167
func (msg *MsgDeleteAudience) Type() string {
	return TypeMsgDeleteAudience
}

-- Chunk 16 --
// messages_audience.go:169-175
func (msg *MsgDeleteAudience) GetSigners() []sdk.AccAddress {
	admin, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		panic(err)
	}
	return []sdk.AccAddress{admin}
}

-- Chunk 17 --
// messages_audience.go:177-180
func (msg *MsgDeleteAudience) GetSignBytes() []byte {
	bz := ModuleCdc.MustMarshalJSON(msg)
	return sdk.MustSortJSON(bz)
}

-- Chunk 18 --
// messages_audience.go:182-188
func (msg *MsgDeleteAudience) ValidateBasic() error {
	_, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}
	return nil
}

-- Chunk 19 --
// messages_audience.go:192-200
func NewMsgCreateAudienceClaim(
	admin sdk.AccAddress,
	hash []byte,
) *MsgCreateAudienceClaim {
	return &MsgCreateAudienceClaim{
		Admin:   admin.String(),
		AudHash: hash,
	}
}

-- Chunk 20 --
// messages_audience.go:202-204
func (msg *MsgCreateAudienceClaim) Route() string {
	return RouterKey
}

-- Chunk 21 --
// messages_audience.go:206-208
func (msg *MsgCreateAudienceClaim) Type() string {
	return TypeMsgCreateAudienceClaim
}

-- Chunk 22 --
// messages_audience.go:210-216
func (msg *MsgCreateAudienceClaim) GetSigners() []sdk.AccAddress {
	admin, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		panic(err)
	}
	return []sdk.AccAddress{admin}
}

-- Chunk 23 --
// messages_audience.go:218-221
func (msg *MsgCreateAudienceClaim) GetSignBytes() []byte {
	bz := ModuleCdc.MustMarshalJSON(msg)
	return sdk.MustSortJSON(bz)
}

-- Chunk 24 --
// messages_audience.go:223-234
func (msg *MsgCreateAudienceClaim) ValidateBasic() error {
	_, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}

	if len(msg.AudHash) != 32 {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidRequest, "hash must be 32 byte sha256")
	}

	return nil
}

-- Chunk 25 --
// messages_audience.go:238-246
func NewMsgDeleteAudienceClaim(
	admin sdk.AccAddress,
	hash []byte,
) *MsgDeleteAudienceClaim {
	return &MsgDeleteAudienceClaim{
		Admin:   admin.String(),
		AudHash: hash,
	}
}

-- Chunk 26 --
// messages_audience.go:248-250
func (msg *MsgDeleteAudienceClaim) Route() string {
	return RouterKey
}

-- Chunk 27 --
// messages_audience.go:252-254
func (msg *MsgDeleteAudienceClaim) Type() string {
	return TypeMsgDeleteAudienceClaim
}

-- Chunk 28 --
// messages_audience.go:256-262
func (msg *MsgDeleteAudienceClaim) GetSigners() []sdk.AccAddress {
	admin, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		panic(err)
	}
	return []sdk.AccAddress{admin}
}

-- Chunk 29 --
// messages_audience.go:264-267
func (msg *MsgDeleteAudienceClaim) GetSignBytes() []byte {
	bz := ModuleCdc.MustMarshalJSON(msg)
	return sdk.MustSortJSON(bz)
}

-- Chunk 30 --
// messages_audience.go:269-276
func (msg *MsgDeleteAudienceClaim) ValidateBasic() error {
	_, err := sdk.AccAddressFromBech32(msg.Admin)
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidAddress, "invalid admin address (%s)", err)
	}

	return nil
}

=== File: x/jwk/types/params.go ===

-- Chunk 1 --
// params.go:18-20
func ParamKeyTable() paramtypes.KeyTable {
	return paramtypes.NewKeyTable().RegisterParamSet(&Params{})
}

-- Chunk 2 --
// params.go:23-28
func NewParams(timeOffset, deploymentGas uint64) Params {
	return Params{
		TimeOffset:    timeOffset,
		DeploymentGas: deploymentGas,
	}
}

-- Chunk 3 --
// params.go:31-36
func DefaultParams() Params {
	deploymentGas := uint64(10_000)
	timeOffset := uint64(30 * 1000) // default to 30 seconds

	return NewParams(timeOffset, deploymentGas)
}

-- Chunk 4 --
// params.go:39-44
func (p *Params) ParamSetPairs() paramtypes.ParamSetPairs {
	return paramtypes.ParamSetPairs{
		paramtypes.NewParamSetPair(ParamStoreKeyDeploymentGas, &p.DeploymentGas, validateDeploymentGas),
		paramtypes.NewParamSetPair(ParamStoreKeyTimeOffset, &p.TimeOffset, validateTimeOffset),
	}
}

-- Chunk 5 --
// params.go:46-53
func validateDeploymentGas(i interface{}) error {
	_, ok := i.(uint64)
	if !ok {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidType, "type: %T, expected uint64", i)
	}

	return nil
}

-- Chunk 6 --
// params.go:55-62
func validateTimeOffset(i interface{}) error {
	_, ok := i.(uint64)
	if !ok {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidType, "type: %T, expected uint64", i)
	}

	return nil
}

-- Chunk 7 --
// params.go:65-71
func (p Params) Validate() error {
	if err := validateDeploymentGas(p.DeploymentGas); err != nil {
		return err
	}

	return validateTimeOffset(p.TimeOffset)
}

=== File: x/jwk/types/query.pb.gw.go ===

-- Chunk 1 --
// query.pb.gw.go:36-43
func request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := client.Params(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 2 --
// query.pb.gw.go:45-52
func local_request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := server.Params(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 3 --
// query.pb.gw.go:54-79
func request_Query_AudienceClaim_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryGetAudienceClaimRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["hash"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "hash")
	}

	protoReq.Hash, err = runtime.Bytes(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "hash", err)
	}

	msg, err := client.AudienceClaim(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 4 --
// query.pb.gw.go:81-106
func local_request_Query_AudienceClaim_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryGetAudienceClaimRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["hash"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "hash")
	}

	protoReq.Hash, err = runtime.Bytes(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "hash", err)
	}

	msg, err := server.AudienceClaim(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 5 --
// query.pb.gw.go:108-133
func request_Query_Audience_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryGetAudienceRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["aud"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "aud")
	}

	protoReq.Aud, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "aud", err)
	}

	msg, err := client.Audience(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 6 --
// query.pb.gw.go:135-160
func local_request_Query_Audience_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryGetAudienceRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["aud"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "aud")
	}

	protoReq.Aud, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "aud", err)
	}

	msg, err := server.Audience(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 7 --
// query.pb.gw.go:166-180
func request_Query_AudienceAll_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryAllAudienceRequest
	var metadata runtime.ServerMetadata

	if err := req.ParseForm(); err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "%v", err)
	}
	if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_Query_AudienceAll_0); err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "%v", err)
	}

	msg, err := client.AudienceAll(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 8 --
// query.pb.gw.go:182-196
func local_request_Query_AudienceAll_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryAllAudienceRequest
	var metadata runtime.ServerMetadata

	if err := req.ParseForm(); err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "%v", err)
	}
	if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_Query_AudienceAll_0); err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "%v", err)
	}

	msg, err := server.AudienceAll(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 9 --
// query.pb.gw.go:198-245
func request_Query_ValidateJWT_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryValidateJWTRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["aud"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "aud")
	}

	protoReq.Aud, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "aud", err)
	}

	val, ok = pathParams["sub"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "sub")
	}

	protoReq.Sub, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "sub", err)
	}

	val, ok = pathParams["sigBytes"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "sigBytes")
	}

	protoReq.SigBytes, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "sigBytes", err)
	}

	msg, err := client.ValidateJWT(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 10 --
// query.pb.gw.go:247-294
func local_request_Query_ValidateJWT_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryValidateJWTRequest
	var metadata runtime.ServerMetadata

	var (
		val string
		ok  bool
		err error
		_   = err
	)

	val, ok = pathParams["aud"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "aud")
	}

	protoReq.Aud, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "aud", err)
	}

	val, ok = pathParams["sub"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "sub")
	}

	protoReq.Sub, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "sub", err)
	}

	val, ok = pathParams["sigBytes"]
	if !ok {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "missing parameter %s", "sigBytes")
	}

	protoReq.SigBytes, err = runtime.String(val)

	if err != nil {
		return nil, metadata, status.Errorf(codes.InvalidArgument, "type mismatch, parameter: %s, error: %v", "sigBytes", err)
	}

	msg, err := server.ValidateJWT(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 11 --
// query.pb.gw.go:300-418
func RegisterQueryHandlerServer(ctx context.Context, mux *runtime.ServeMux, server QueryServer) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_Params_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AudienceClaim_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_AudienceClaim_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AudienceClaim_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_Audience_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_Audience_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Audience_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AudienceAll_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_AudienceAll_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AudienceAll_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_ValidateJWT_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_ValidateJWT_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_ValidateJWT_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

-- Chunk 12 --
// query.pb.gw.go:422-443
func RegisterQueryHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
	conn, err := grpc.Dial(endpoint, opts...)
	if err != nil {
		return err
	}
	defer func() {
		if err != nil {
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
			return
		}
		go func() {
			<-ctx.Done()
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
		}()
	}()

	return RegisterQueryHandler(ctx, mux, conn)
}

-- Chunk 13 --
// query.pb.gw.go:447-449
func RegisterQueryHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
	return RegisterQueryHandlerClient(ctx, mux, NewQueryClient(conn))
}

-- Chunk 14 --
// query.pb.gw.go:456-559
func RegisterQueryHandlerClient(ctx context.Context, mux *runtime.ServeMux, client QueryClient) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_Params_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AudienceClaim_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_AudienceClaim_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AudienceClaim_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_Audience_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_Audience_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Audience_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AudienceAll_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_AudienceAll_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AudienceAll_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_ValidateJWT_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_ValidateJWT_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_ValidateJWT_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

=== File: x/jwk/types/audience.pb.go ===

-- Chunk 1 --
// audience.pb.go:25-29
type Audience struct {
	Aud   string `protobuf:"bytes,1,opt,name=aud,proto3" json:"aud,omitempty"`
	Key   string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Admin string `protobuf:"bytes,3,opt,name=admin,proto3" json:"admin,omitempty"`
}

-- Chunk 2 --
// audience.pb.go:31-31
func (m *Audience) Reset()         { *m = Audience{} }

-- Chunk 3 --
// audience.pb.go:32-32
func (m *Audience) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// audience.pb.go:33-33
func (*Audience) ProtoMessage()    {}

-- Chunk 5 --
// audience.pb.go:34-36
func (*Audience) Descriptor() ([]byte, []int) {
	return fileDescriptor_7862d6c296912c34, []int{0}
}

-- Chunk 6 --
// audience.pb.go:37-39
func (m *Audience) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// audience.pb.go:40-51
func (m *Audience) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Audience.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// audience.pb.go:52-54
func (m *Audience) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Audience.Merge(m, src)
}

-- Chunk 9 --
// audience.pb.go:55-57
func (m *Audience) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// audience.pb.go:58-60
func (m *Audience) XXX_DiscardUnknown() {
	xxx_messageInfo_Audience.DiscardUnknown(m)
}

-- Chunk 11 --
// audience.pb.go:64-69
func (m *Audience) GetAud() string {
	if m != nil {
		return m.Aud
	}
	return ""
}

-- Chunk 12 --
// audience.pb.go:71-76
func (m *Audience) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

-- Chunk 13 --
// audience.pb.go:78-83
func (m *Audience) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

-- Chunk 14 --
// audience.pb.go:85-87
type AudienceClaim struct {
	Signer string `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
}

-- Chunk 15 --
// audience.pb.go:89-89
func (m *AudienceClaim) Reset()         { *m = AudienceClaim{} }

-- Chunk 16 --
// audience.pb.go:90-90
func (m *AudienceClaim) String() string { return proto.CompactTextString(m) }

-- Chunk 17 --
// audience.pb.go:91-91
func (*AudienceClaim) ProtoMessage()    {}

-- Chunk 18 --
// audience.pb.go:92-94
func (*AudienceClaim) Descriptor() ([]byte, []int) {
	return fileDescriptor_7862d6c296912c34, []int{1}
}

-- Chunk 19 --
// audience.pb.go:95-97
func (m *AudienceClaim) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 20 --
// audience.pb.go:98-109
func (m *AudienceClaim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AudienceClaim.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 21 --
// audience.pb.go:110-112
func (m *AudienceClaim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudienceClaim.Merge(m, src)
}

-- Chunk 22 --
// audience.pb.go:113-115
func (m *AudienceClaim) XXX_Size() int {
	return m.Size()
}

-- Chunk 23 --
// audience.pb.go:116-118
func (m *AudienceClaim) XXX_DiscardUnknown() {
	xxx_messageInfo_AudienceClaim.DiscardUnknown(m)
}

-- Chunk 24 --
// audience.pb.go:122-127
func (m *AudienceClaim) GetSigner() string {
	if m != nil {
		return m.Signer
	}
	return ""
}

-- Chunk 25 --
// audience.pb.go:129-132
func init() {
	proto.RegisterType((*Audience)(nil), "xion.jwk.v1.Audience")
	proto.RegisterType((*AudienceClaim)(nil), "xion.jwk.v1.AudienceClaim")
}

-- Chunk 26 --
// audience.pb.go:134-134
func init() { proto.RegisterFile("xion/jwk/v1/audience.proto", fileDescriptor_7862d6c296912c34) }

-- Chunk 27 --
// audience.pb.go:153-161
func (m *Audience) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 28 --
// audience.pb.go:163-166
func (m *Audience) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 29 --
// audience.pb.go:168-195
func (m *Audience) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintAudience(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintAudience(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Aud) > 0 {
		i -= len(m.Aud)
		copy(dAtA[i:], m.Aud)
		i = encodeVarintAudience(dAtA, i, uint64(len(m.Aud)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 30 --
// audience.pb.go:197-205
func (m *AudienceClaim) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 31 --
// audience.pb.go:207-210
func (m *AudienceClaim) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 32 --
// audience.pb.go:212-225
func (m *AudienceClaim) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintAudience(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 33 --
// audience.pb.go:227-237
func encodeVarintAudience(dAtA []byte, offset int, v uint64) int {
	offset -= sovAudience(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 34 --
// audience.pb.go:238-257
func (m *Audience) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Aud)
	if l > 0 {
		n += 1 + l + sovAudience(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovAudience(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovAudience(uint64(l))
	}
	return n
}

-- Chunk 35 --
// audience.pb.go:259-270
func (m *AudienceClaim) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovAudience(uint64(l))
	}
	return n
}

-- Chunk 36 --
// audience.pb.go:272-274
func sovAudience(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 37 --
// audience.pb.go:275-277
func sozAudience(x uint64) (n int) {
	return sovAudience(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 38 --
// audience.pb.go:278-423
func (m *Audience) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudience
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Audience: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Audience: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Aud", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudience
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudience
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Aud = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudience
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudience
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudience
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudience
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudience(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudience
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 39 --
// audience.pb.go:424-505
func (m *AudienceClaim) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAudience
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AudienceClaim: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AudienceClaim: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAudience
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthAudience
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAudience(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthAudience
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 40 --
// audience.pb.go:506-583
func skipAudience(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAudience
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAudience
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthAudience
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupAudience
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthAudience
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/jwk/types/keys.go ===

-- Chunk 1 --
// keys.go:14-16
func KeyPrefix(p string) []byte {
	return []byte(p)
}

=== File: x/jwk/types/key_audience.go ===

-- Chunk 1 --
// key_audience.go:16-26
func AudienceKey(
	aud string,
) []byte {
	var key []byte

	audBytes := []byte(aud)
	key = append(key, audBytes...)
	key = append(key, []byte("/")...)

	return key
}

-- Chunk 2 --
// key_audience.go:28-35
func AudienceClaimKey(hash []byte) []byte {
	var key []byte

	key = append(key, hash...)
	key = append(key, []byte("/")...)

	return key
}

=== File: x/jwk/client/cli/tx_audience.go ===

-- Chunk 1 --
// tx_audience.go:19-45
func CmdCreateAudienceClaim() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "create-audience-claim [aud]",
		Short: "Create a new audience claim",
		Args:  cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			audStr := args[0]

			audHash := sha256.Sum256([]byte(audStr))

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			msg := types.NewMsgCreateAudienceClaim(clientCtx.GetFromAddress(), audHash[:])
			if err := msg.ValidateBasic(); err != nil {
				return err
			}
			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)

	return cmd
}

-- Chunk 2 --
// tx_audience.go:47-87
func CmdCreateAudience() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "create-audience [aud] [key] [admin | optional]",
		Short: "Create a new audience",
		Args:  cobra.RangeArgs(2, 3),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			// Get indexes
			indexAud := args[0]

			// Get value arguments
			argKey := args[1]

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			// if admin provided, use it. if not, use `from`
			var admin string
			if len(args) == 3 {
				admin = args[2]
			} else {
				admin = clientCtx.GetFromAddress().String()
			}

			msg := types.NewMsgCreateAudience(
				admin,
				indexAud,
				argKey,
			)
			if err := msg.ValidateBasic(); err != nil {
				return err
			}
			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)

	return cmd
}

-- Chunk 3 --
// tx_audience.go:89-131
func CmdUpdateAudience() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "update-audience [aud] [key] --new-admin [new-admin]",
		Short: "Update a audience",
		Args:  cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			// Get indexes
			indexAud := args[0]

			// Get value arguments
			argKey := args[1]

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			newAdmin, err := cmd.Flags().GetString(FlagNewAdmin)
			if err != nil {
				return err
			}
			if newAdmin == "" {
				newAdmin = clientCtx.GetFromAddress().String()
			}

			msg := types.NewMsgUpdateAudience(
				clientCtx.GetFromAddress().String(),
				newAdmin,
				indexAud,
				argKey,
			)
			if err := msg.ValidateBasic(); err != nil {
				return err
			}
			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)
	cmd.Flags().String(FlagNewAdmin, "", "address to provide as the new admin")

	return cmd
}

-- Chunk 4 --
// tx_audience.go:133-160
func CmdDeleteAudience() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "delete-audience [aud]",
		Short: "Delete a audience",
		Args:  cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			indexAud := args[0]

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			msg := types.NewMsgDeleteAudience(
				clientCtx.GetFromAddress().String(),
				indexAud,
			)
			if err := msg.ValidateBasic(); err != nil {
				return err
			}
			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)

	return cmd
}

=== File: x/jwk/client/cli/query_params.go ===

-- Chunk 1 --
// query_params.go:12-37
func CmdQueryParams() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "params",
		Short: "shows the parameters of the module",
		Args:  cobra.NoArgs,
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			res, err := queryClient.Params(cmd.Context(), &types.QueryParamsRequest{})
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/jwk/client/cli/util.go ===

-- Chunk 1 --
// util.go:14-53
func CmdConvertPemToJSON() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "convert-pem [file] [alg | optional]",
		Short: "Convert PEM to JSON",
		Args:  cobra.RangeArgs(1, 2),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			publicKeyBz, err := os.ReadFile(args[0])
			if err != nil {
				return err
			}
			publicKey, err := jwk.ParseKey(publicKeyBz, jwk.WithPEM(true))
			if err != nil {
				return err
			}

			if len(args) == 2 {
				err = publicKey.Set("alg", args[1])
				if err != nil {
					return err
				}
			}

			publicKeyJSON, err := json.Marshal(publicKey)
			if err != nil {
				return err
			}

			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			return clientCtx.PrintBytes(publicKeyJSON)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/jwk/client/cli/query_validate_jwt.go ===

-- Chunk 1 --
// query_validate_jwt.go:17-54
func CmdValidateJWT() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "validate-jwt [aud] [sub] [sig-bytes]",
		Short: "Query ValidateJWT",
		Args:  cobra.ExactArgs(3),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			reqAud := args[0]
			reqSub := args[1]
			reqSigBytes := args[2]

			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryValidateJWTRequest{
				Aud:      reqAud,
				Sub:      reqSub,
				SigBytes: reqSigBytes,
			}

			fmt.Printf("request: %s", params)

			res, err := queryClient.ValidateJWT(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/jwk/client/cli/query_audience.go ===

-- Chunk 1 --
// query_audience.go:14-49
func CmdListAudience() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "list-audience",
		Short: "list all audience",
		Args:  cobra.NoArgs,
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			pageReq, err := client.ReadPageRequest(cmd.Flags())
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryAllAudienceRequest{
				Pagination: pageReq,
			}

			res, err := queryClient.AudienceAll(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddPaginationFlagsToCmd(cmd, cmd.Use)
	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 2 --
// query_audience.go:51-82
func CmdShowAudience() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "show-audience [aud]",
		Short: "shows a audience",
		Args:  cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			argAud := args[0]

			params := &types.QueryGetAudienceRequest{
				Aud: argAud,
			}

			res, err := queryClient.Audience(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 3 --
// query_audience.go:84-119
func CmdShowAudienceClaim() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "show-audience-claim [hash]",
		Short: "shows an audience claim",
		Args:  cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) (err error) {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			argAudHashStr := args[0]
			audHash, err := base64.StdEncoding.DecodeString(argAudHashStr)
			if err != nil {
				return err
			}

			params := &types.QueryGetAudienceClaimRequest{
				Hash: audHash,
			}

			res, err := queryClient.AudienceClaim(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/jwk/client/cli/tx.go ===

-- Chunk 1 --
// tx.go:18-34
func GetTxCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      fmt.Sprintf("%s transactions subcommands", types.ModuleName),
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	cmd.AddCommand(CmdCreateAudienceClaim())
	cmd.AddCommand(CmdCreateAudience())
	cmd.AddCommand(CmdUpdateAudience())
	cmd.AddCommand(CmdDeleteAudience())
	// this line is used by starport scaffolding # 1

	return cmd
}

=== File: x/jwk/client/cli/query.go ===

-- Chunk 1 --
// query.go:14-36
func GetQueryCmd() *cobra.Command {
	// Group jwk queries under a subcommand
	cmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      fmt.Sprintf("Querying commands for the %s module", types.ModuleName),
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	cmd.AddCommand(CmdQueryParams())
	cmd.AddCommand(CmdListAudience())
	cmd.AddCommand(CmdShowAudience())
	cmd.AddCommand(CmdShowAudienceClaim())
	cmd.AddCommand(CmdValidateJWT())

	// utils, not sure where best to put this
	cmd.AddCommand(CmdConvertPemToJSON())

	// this line is used by starport scaffolding # 1

	return cmd
}

=== File: x/mint/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/mint/README.md:1-150
---
sidebar_position: 1
---

# `x/mint`

## Contents

* [State](#state)
    * [Minter](#minter)
    * [Params](#params)
* [Begin-Block](#begin-block)
    * [NextInflationRate](#nextinflationrate)
    * [NextAnnualProvisions](#nextannualprovisions)
    * [BlockProvision](#blockprovision)
* [Parameters](#parameters)
* [Events](#events)
    * [BeginBlocker](#beginblocker)
* [Client](#client)
    * [CLI](#cli)
    * [gRPC](#grpc)
    * [REST](#rest)

## Concepts

### The Minting Mechanism

The minting mechanism was designed to:

* allow for a flexible inflation rate determined by market demand targeting a particular bonded-stake ratio
* effect a balance between market liquidity and staked supply

In order to best determine the appropriate market rate for inflation rewards, a
moving change rate is used.  The moving change rate mechanism ensures that if
the % bonded is either over or under the goal %-bonded, the inflation rate will
adjust to further incentivize or disincentivize being bonded, respectively. Setting the goal
%-bonded at less than 100% encourages the network to maintain some non-staked tokens
which should help provide some liquidity.

It can be broken down in the following way:

* If the inflation rate is below the goal %-bonded the inflation rate will
   increase until a maximum value is reached
* If the goal % bonded (67% in Cosmos-Hub) is maintained, then the inflation
   rate will stay constant
* If the inflation rate is above the goal %-bonded the inflation rate will
   decrease until a minimum value is reached


## State

### Minter

The minter is a space for holding current inflation information.

* Minter: `0x00 -> ProtocolBuffer(minter)`

```protobuf reference
https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/mint/v1beta1/mint.proto#L10-L24
```

### Params

The mint module stores it's params in state with the prefix of `0x01`,
it can be updated with governance or the address with authority.

* Params: `mint/params -> legacy_amino(params)`

```protobuf reference
https://github.com/cosmos/cosmos-sdk/blob/v0.47.0-rc1/proto/cosmos/mint/v1beta1/mint.proto#L26-L59
```

## Begin-Block

Minting parameters are recalculated and inflation paid at the beginning of each block.

### Inflation rate calculation

Inflation rate is calculated using an "inflation calculation function" that's
passed to the `NewAppModule` function. If no function is passed, then the SDK's
default inflation function will be used (`NextInflationRate`). In case a custom
inflation calculation logic is needed, this can be achieved by defining and
passing a function that matches `InflationCalculationFn`'s signature.

```go
type InflationCalculationFn func(ctx sdk.Context, minter Minter, params Params, bondedRatio sdk.Dec) sdk.Dec
```

#### NextInflationRate

The target annual inflation rate is recalculated each block.
The inflation is also subject to a rate change (positive or negative)
depending on the distance from the desired ratio (67%). The maximum rate change
possible is defined to be 13% per year, however the annual inflation is capped
as between 7% and 20%.

```go
NextInflationRate(params Params, bondedRatio sdk.Dec) (inflation sdk.Dec) {
	inflationRateChangePerYear = (1 - bondedRatio/params.GoalBonded) * params.InflationRateChange
	inflationRateChange = inflationRateChangePerYear/blocksPerYr

	// increase the new annual inflation for this next cycle
	inflation += inflationRateChange
	if inflation > params.InflationMax {
		inflation = params.InflationMax
	}
	if inflation < params.InflationMin {
		inflation = params.InflationMin
	}

	return inflation
}
```

### NextAnnualProvisions

Calculate the annual provisions based on current total supply and inflation
rate. This parameter is calculated once per block.

```go
NextAnnualProvisions(params Params, totalSupply sdk.Dec) (provisions sdk.Dec) {
	return Inflation * totalSupply
```

### BlockProvision

Calculate the provisions generated for each block based on current annual provisions. The provisions are then minted by the `mint` module's `ModuleMinterAccount` and then transferred to the `auth`'s `FeeCollector` `ModuleAccount`.

```go
BlockProvision(params Params) sdk.Coin {
	provisionAmt = AnnualProvisions/ params.BlocksPerYear
	return sdk.NewCoin(params.MintDenom, provisionAmt.Truncate())
```


## Parameters

The minting module contains the following parameters:

| Key                 | Type            | Example                |
|---------------------|-----------------|------------------------|
| MintDenom           | string          | "uatom"                |
| InflationRateChange | string (dec)    | "0.130000000000000000" |
| InflationMax        | string (dec)    | "0.200000000000000000" |
| InflationMin        | string (dec)    | "0.070000000000000000" |
| GoalBonded          | string (dec)    | "0.670000000000000000" |
| BlocksPerYear       | string (uint64) | "6311520"              |


## Events

-- Chunk 2 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/mint/README.md:151-300

The minting module emits the following events:

### BeginBlocker

| Type | Attribute Key     | Attribute Value    |
|------|-------------------|--------------------|
| mint | bonded_ratio      | {bondedRatio}      |
| mint | inflation         | {inflation}        |
| mint | annual_provisions | {annualProvisions} |
| mint | amount            | {amount}           |


## Client

### CLI

A user can query and interact with the `mint` module using the CLI.

#### Query

The `query` commands allow users to query `mint` state.

```shell
simd query mint --help
```

##### annual-provisions

The `annual-provisions` command allow users to query the current minting annual provisions value

```shell
simd query mint annual-provisions [flags]
```

Example:

```shell
simd query mint annual-provisions
```

Example Output:

```shell
22268504368893.612100895088410693
```

##### inflation

The `inflation` command allow users to query the current minting inflation value

```shell
simd query mint inflation [flags]
```

Example:

```shell
simd query mint inflation
```

Example Output:

```shell
0.199200302563256955
```

##### params

The `params` command allow users to query the current minting parameters

```shell
simd query mint params [flags]
```

Example:

```yml
blocks_per_year: "4360000"
goal_bonded: "0.670000000000000000"
inflation_max: "0.200000000000000000"
inflation_min: "0.070000000000000000"
inflation_rate_change: "0.130000000000000000"
mint_denom: stake
```

### gRPC

A user can query the `mint` module using gRPC endpoints.

#### AnnualProvisions

The `AnnualProvisions` endpoint allow users to query the current minting annual provisions value

```shell
/cosmos.mint.v1beta1.Query/AnnualProvisions
```

Example:

```shell
grpcurl -plaintext localhost:9090 cosmos.mint.v1beta1.Query/AnnualProvisions
```

Example Output:

```json
{
  "annualProvisions": "1432452520532626265712995618"
}
```

#### Inflation

The `Inflation` endpoint allow users to query the current minting inflation value

```shell
/cosmos.mint.v1beta1.Query/Inflation
```

Example:

```shell
grpcurl -plaintext localhost:9090 cosmos.mint.v1beta1.Query/Inflation
```

Example Output:

```json
{
  "inflation": "130197115720711261"
}
```

#### Params

The `Params` endpoint allow users to query the current minting parameters

```shell
/cosmos.mint.v1beta1.Query/Params
```

Example:

```shell
grpcurl -plaintext localhost:9090 cosmos.mint.v1beta1.Query/Params
```

Example Output:


-- Chunk 3 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/mint/README.md:301-383
```json
{
  "params": {
    "mintDenom": "stake",
    "inflationRateChange": "130000000000000000",
    "inflationMax": "200000000000000000",
    "inflationMin": "70000000000000000",
    "goalBonded": "670000000000000000",
    "blocksPerYear": "6311520"
  }
}
```

### REST

A user can query the `mint` module using REST endpoints.

#### annual-provisions

```shell
/cosmos/mint/v1beta1/annual_provisions
```

Example:

```shell
curl "localhost:1317/cosmos/mint/v1beta1/annual_provisions"
```

Example Output:

```json
{
  "annualProvisions": "1432452520532626265712995618"
}
```

#### inflation

```shell
/cosmos/mint/v1beta1/inflation
```

Example:

```shell
curl "localhost:1317/cosmos/mint/v1beta1/inflation"
```

Example Output:

```json
{
  "inflation": "130197115720711261"
}
```

#### params

```shell
/cosmos/mint/v1beta1/params
```

Example:

```shell
curl "localhost:1317/cosmos/mint/v1beta1/params"
```

Example Output:

```json
{
  "params": {
    "mintDenom": "stake",
    "inflationRateChange": "130000000000000000",
    "inflationMax": "200000000000000000",
    "inflationMin": "70000000000000000",
    "goalBonded": "670000000000000000",
    "blocksPerYear": "6311520"
  }
}
```

=== File: x/mint/module_test.go ===

-- Chunk 1 --
// module_test.go:16-25
func TestItCreatesModuleAccountOnInitBlock(t *testing.T) {
	var accountKeeper authkeeper.AccountKeeper

	app, err := simtestutil.SetupAtGenesis(testutil.AppConfig, &accountKeeper)
	require.NoError(t, err)

	ctx := app.BaseApp.NewContext(false)
	acc := accountKeeper.GetAccount(ctx, authtypes.NewModuleAddress(types.ModuleName))
	require.NotNil(t, acc)
}

=== File: x/mint/common_test.go ===

-- Chunk 1 --
// common_test.go:25-30
type mocks struct {
	minttestutil.MockAccountKeeper
	minttestutil.MockBankKeeper
	minttestutil.MockStakingKeeper
	moduleAccount sdk.ModuleAccountI
}

-- Chunk 2 --
// common_test.go:32-65
func createTestBaseKeeperAndContextWithMocks(t *testing.T) (testutil.TestContext, *keeper.Keeper, mocks) {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})
	key := storetypes.NewKVStoreKey(minttypes.StoreKey)
	store := runtime.NewKVStoreService(key)
	testCtx := testutil.DefaultContextWithDB(t, key, storetypes.NewTransientStoreKey("transient_test"))

	// gomock initializations
	ctrl := gomock.NewController(t)
	accountKeeper := minttestutil.NewMockAccountKeeper(ctrl)
	bankKeeper := minttestutil.NewMockBankKeeper(ctrl)
	stakingKeeper := minttestutil.NewMockStakingKeeper(ctrl)

	mintAcc := authtypes.NewEmptyModuleAccount(authtypes.FeeCollectorName, "fee_collector")
	accountKeeper.EXPECT().GetModuleAddress(minttypes.ModuleName).Return(sdk.AccAddress{})
	accountKeeper.EXPECT().GetModuleAccount(testCtx.Ctx, authtypes.FeeCollectorName).Return(mintAcc)

	keeper := keeper.NewKeeper(
		encCfg.Codec,
		store,
		stakingKeeper,
		accountKeeper,
		bankKeeper,
		authtypes.FeeCollectorName,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	params := minttypes.DefaultParams()
	if err := keeper.SetParams(testCtx.Ctx, params); err != nil {
		t.FailNow()
	}
	// keeper.SetMinter(testCtx.Ctx, minttypes.DefaultInitialMinter()) // TODO: minter needs to be parametrized!!

	return testCtx, &keeper, mocks{*accountKeeper, *bankKeeper, *stakingKeeper, mintAcc}
}

=== File: x/mint/abci_test.go ===

-- Chunk 1 --
// abci_test.go:20-167
func TestBeginBlocker(t *testing.T) {
	type expected struct {
		annualProvisions sdkmath.LegacyDec
		bondedRatio      sdkmath.LegacyDec
		burnedAmount     uint64
		collectedAmount  uint64
		inflation        sdkmath.LegacyDec
		minted           uint64
		needed           uint64
	}
	type parameters struct {
		bonded        sdkmath.Int
		bondedRatio   sdkmath.LegacyDec
		fees          sdk.Coins
		collectedFees sdk.Coin
		burn          bool
		mint          bool
	}

	stakingTokenSupply := sdkmath.NewIntFromUint64(100000000000)

	tt := []struct {
		name       string
		parameters parameters
		expected   expected
	}{
		{
			name: "full bonded tokens",
			parameters: parameters{
				bonded:        stakingTokenSupply,
				bondedRatio:   sdkmath.LegacyNewDecWithPrec(1, 4),
				fees:          sdk.NewCoins(sdk.NewCoin("stake", sdkmath.NewInt(109))),
				collectedFees: sdk.NewCoin("stake", sdkmath.NewInt(1000)),
				mint:          true,
				burn:          false,
			},
			expected: expected{
				annualProvisions: sdkmath.LegacyNewDecWithPrec(7000000000, 0),
				bondedRatio:      sdkmath.LegacyNewDecWithPrec(1, 4),
				burnedAmount:     0,
				collectedAmount:  1000,
				inflation:        sdkmath.LegacyNewDecWithPrec(7, 2),
				minted:           109,
				needed:           1109,
			},
		},
		{
			name: "less than ideal bonded tokens",
			parameters: parameters{
				bonded:        sdkmath.NewInt(int64(100000000000 * 0.33)),
				bondedRatio:   sdkmath.LegacyNewDecWithPrec(33, 2),
				fees:          sdk.NewCoins(sdk.NewCoin("stake", sdkmath.NewInt(1045))),
				collectedFees: sdk.NewCoin("stake", sdkmath.NewInt(0)),
				mint:          true,
				burn:          false,
			},
			expected: expected{
				annualProvisions: sdkmath.LegacyNewDec(6600000000),
				bondedRatio:      sdkmath.LegacyNewDecWithPrec(33, 2),
				burnedAmount:     0,
				collectedAmount:  0,
				inflation:        sdkmath.LegacyNewDecWithPrec(20, 2),
				minted:           1045,
				needed:           1045,
			},
		},
		{
			name: "above staking threshold, fee collector has values",
			parameters: parameters{
				bonded:        stakingTokenSupply,
				bondedRatio:   sdkmath.LegacyNewDecWithPrec(1, 4),
				fees:          sdk.NewCoins(sdk.NewCoin("stake", sdkmath.NewInt(109))),
				collectedFees: sdk.NewCoin("stake", sdkmath.NewInt(10000)),
				mint:          false,
				burn:          true,
			},
			expected: expected{
				annualProvisions: sdkmath.LegacyNewDecWithPrec(7000000000, 0),
				bondedRatio:      sdkmath.LegacyNewDecWithPrec(1, 4),
				burnedAmount:     8891,
				collectedAmount:  10000,
				inflation:        sdkmath.LegacyNewDecWithPrec(7, 2),
				minted:           0,
				needed:           1109,
			},
		},
	}

	for _, tc := range tt {
		t.Run(tc.name, func(t *testing.T) {
			testcontext, keeper, mocks := createTestBaseKeeperAndContextWithMocks(t)
			ctx := testcontext.Ctx
			stakingKeeper := mocks.MockStakingKeeper
			bankKeeper := mocks.MockBankKeeper

			/*
				Populate mock
			*/

			err := keeper.SetMinter(ctx, types.InitialMinter(tc.parameters.bondedRatio))
			assert.NoError(t, err)

			stakingKeeper.EXPECT().TotalBondedTokens(ctx).Return(tc.parameters.bonded, nil)
			stakingKeeper.EXPECT().BondedRatio(ctx).Return(tc.parameters.bondedRatio, nil)
			bankKeeper.EXPECT().GetBalance(ctx, mocks.moduleAccount.GetAddress(), "stake").Return(tc.parameters.collectedFees)

			if tc.parameters.mint {
				bankKeeper.EXPECT().MintCoins(ctx, minttypes.ModuleName, tc.parameters.fees).Return(nil)
				bankKeeper.EXPECT().SendCoinsFromModuleToModule(ctx, types.ModuleName, authtypes.FeeCollectorName, tc.parameters.fees).Return(nil)
			}

			if tc.parameters.burn {
				c := sdk.NewCoin("stake", sdkmath.NewIntFromUint64(tc.expected.needed))
				bankKeeper.EXPECT().BurnCoins(ctx, authtypes.FeeCollectorName, sdk.NewCoins(tc.parameters.collectedFees.Sub(c))).Return(nil)
			}

			err = BeginBlocker(ctx, *keeper, types.DefaultInflationCalculationFn)
			assert.NoError(t, err)

			events := ctx.EventManager().Events()
			assert.Equalf(t, 1, len(events), "A single event must be emitted. However %d events were emitted", len(events))
			event := events[0]
			assert.Equalf(t, "xion.mint.v1.MintIncentiveTokens", event.Type, "Expected event to be xion.mint.v1.MintIncentiveTokens but found: %s", event.Type)
			assert.Equalf(t, 7, len(event.Attributes), "Expected 7 attributes but found %d", len(event.Attributes))

			assert.Equal(t, "annual_provisions", event.Attributes[0].Key)
			assert.Equal(t, tc.expected.annualProvisions, sdkmath.LegacyMustNewDecFromStr(stripValue(t, event.Attributes[0].Value)))

			assert.Equal(t, "bonded_ratio", event.Attributes[1].Key)
			assert.Equal(t, tc.expected.bondedRatio, sdkmath.LegacyMustNewDecFromStr(stripValue(t, event.Attributes[1].Value)))

			assert.Equal(t, "burned_amount", event.Attributes[2].Key)
			assert.Equal(t, tc.expected.burnedAmount, stringToU64(t, event.Attributes[2].Value))

			assert.Equal(t, "collected_amount", event.Attributes[3].Key)
			assert.Equal(t, tc.expected.collectedAmount, stringToU64(t, event.Attributes[3].Value))

			assert.Equal(t, "inflation", event.Attributes[4].Key)
			assert.Equal(t, tc.expected.inflation, sdkmath.LegacyMustNewDecFromStr(stripValue(t, event.Attributes[4].Value)))

			assert.Equal(t, "minted_amount", event.Attributes[5].Key)
			assert.Equal(t, tc.expected.minted, stringToU64(t, event.Attributes[5].Value))

			assert.Equal(t, "needed_amount", event.Attributes[6].Key)
			assert.Equal(t, tc.expected.needed, stringToU64(t, event.Attributes[6].Value))
		})
	}
}

-- Chunk 2 --
// abci_test.go:169-172
func stripValue(_ *testing.T, s string) string {
	stripped := strings.ReplaceAll(s, "\\", "")
	return strings.ReplaceAll(stripped, "\"", "")
}

-- Chunk 3 --
// abci_test.go:174-182
func stringToU64(t *testing.T, s string) uint64 {
	stripped := stripValue(t, s)
	ui64, err := strconv.ParseUint(stripped, 10, 64)
	if err != nil {
		fmt.Println(err)
		t.FailNow() // Could not convert
	}
	return ui64
}

=== File: x/mint/module.go ===

-- Chunk 1 --
// module.go:46-48
type AppModuleBasic struct {
	cdc codec.Codec
}

-- Chunk 2 --
// module.go:53-55
func (AppModuleBasic) Name() string {
	return types.ModuleName
}

-- Chunk 3 --
// module.go:58-60
func (AppModuleBasic) RegisterLegacyAminoCodec(cdc *codec.LegacyAmino) {
	types.RegisterLegacyAminoCodec(cdc)
}

-- Chunk 4 --
// module.go:63-65
func (b AppModuleBasic) RegisterInterfaces(r cdctypes.InterfaceRegistry) {
	types.RegisterInterfaces(r)
}

-- Chunk 5 --
// module.go:69-71
func (AppModuleBasic) DefaultGenesis(cdc codec.JSONCodec) json.RawMessage {
	return cdc.MustMarshalJSON(types.DefaultGenesisState())
}

-- Chunk 6 --
// module.go:74-81
func (AppModuleBasic) ValidateGenesis(cdc codec.JSONCodec, _ client.TxEncodingConfig, bz json.RawMessage) error {
	var data types.GenesisState
	if err := cdc.UnmarshalJSON(bz, &data); err != nil {
		return fmt.Errorf("failed to unmarshal %s genesis state: %w", types.ModuleName, err)
	}

	return types.ValidateGenesis(data)
}

-- Chunk 7 --
// module.go:84-88
func (AppModuleBasic) RegisterGRPCGatewayRoutes(clientCtx client.Context, mux *gwruntime.ServeMux) {
	if err := types.RegisterQueryHandlerClient(context.Background(), mux, types.NewQueryClient(clientCtx)); err != nil {
		panic(err)
	}
}

-- Chunk 8 --
// module.go:91-91
func (AppModuleBasic) GetTxCmd() *cobra.Command { return nil }

-- Chunk 9 --
// module.go:94-96
func (AppModuleBasic) GetQueryCmd() *cobra.Command {
	return cli.GetQueryCmd()
}

-- Chunk 10 --
// module.go:99-111
type AppModule struct {
	AppModuleBasic

	keeper     keeper.Keeper
	authKeeper types.AccountKeeper

	// legacySubspace is used solely for migration of x/params managed parameters
	legacySubspace exported.Subspace

	// inflationCalculator is used to calculate the inflation rate during BeginBlock.
	// If inflationCalculator is nil, the default inflation calculation logic is used.
	inflationCalculator types.InflationCalculationFn
}

-- Chunk 11 --
// module.go:115-133
func NewAppModule(
	cdc codec.Codec,
	keeper keeper.Keeper,
	ak types.AccountKeeper,
	ic types.InflationCalculationFn,
	ss exported.Subspace,
) AppModule {
	if ic == nil {
		ic = types.DefaultInflationCalculationFn
	}

	return AppModule{
		AppModuleBasic:      AppModuleBasic{cdc: cdc},
		keeper:              keeper,
		authKeeper:          ak,
		inflationCalculator: ic,
		legacySubspace:      ss,
	}
}

-- Chunk 12 --
// module.go:138-138
func (am AppModule) IsOnePerModuleType() {}

-- Chunk 13 --
// module.go:141-141
func (am AppModule) IsAppModule() {}

-- Chunk 14 --
// module.go:144-146
func (AppModule) Name() string {
	return types.ModuleName
}

-- Chunk 15 --
// module.go:149-149
func (am AppModule) RegisterInvariants(_ sdk.InvariantRegistry) {}

-- Chunk 16 --
// module.go:153-156
func (am AppModule) RegisterServices(cfg module.Configurator) {
	types.RegisterMsgServer(cfg.MsgServer(), keeper.NewMsgServerImpl(am.keeper))
	types.RegisterQueryServer(cfg.QueryServer(), am.keeper)
}

-- Chunk 17 --
// module.go:160-165
func (am AppModule) InitGenesis(ctx sdk.Context, cdc codec.JSONCodec, data json.RawMessage) {
	var genesisState types.GenesisState
	cdc.MustUnmarshalJSON(data, &genesisState)

	am.keeper.InitGenesis(ctx, am.authKeeper, &genesisState)
}

-- Chunk 18 --
// module.go:169-172
func (am AppModule) ExportGenesis(ctx sdk.Context, cdc codec.JSONCodec) json.RawMessage {
	gs := am.keeper.ExportGenesis(ctx)
	return cdc.MustMarshalJSON(gs)
}

-- Chunk 19 --
// module.go:175-175
func (AppModule) ConsensusVersion() uint64 { return ConsensusVersion }

-- Chunk 20 --
// module.go:178-181
func (am AppModule) BeginBlock(ctx context.Context) error {
	sdkCtx := sdk.UnwrapSDKContext(ctx)
	return BeginBlocker(sdkCtx, am.keeper, am.inflationCalculator)
}

-- Chunk 21 --
// module.go:184-186
func (am AppModule) RegisterStoreDecoder(registry simtypes.StoreDecoderRegistry) {
	registry[types.StoreKey] = simulation.NewDecodeStore(am.cdc)
}

-- Chunk 22 --
// module.go:189-191
func (AppModule) GenerateGenesisState(simState *module.SimulationState) {
	simulation.RandomizedGenState(simState)
}

-- Chunk 23 --
// module.go:194-196
func (AppModule) ProposalMsgs(_ module.SimulationState) []simtypes.WeightedProposalMsg {
	return simulation.ProposalMsgs()
}

-- Chunk 24 --
// module.go:205-207
func (AppModule) WeightedOperations(_ module.SimulationState) []simtypes.WeightedOperation {
	return nil
}

-- Chunk 25 --
// module.go:213-217
func init() {
	appmodule.Register(&modulev1.Module{},
		appmodule.Provide(ProvideModule),
	)
}

-- Chunk 26 --
// module.go:219-234
type Inputs struct {
	depinject.In

	ModuleKey              depinject.OwnModuleKey
	Config                 *modulev1.Module
	Key                    store2.KVStoreService
	Cdc                    codec.Codec
	InflationCalculationFn types.InflationCalculationFn `optional:"true"`

	// LegacySubspace is used solely for migration of x/params managed parameters
	LegacySubspace exported.Subspace

	AccountKeeper types.AccountKeeper
	BankKeeper    types.BankKeeper
	StakingKeeper types.StakingKeeper
}

-- Chunk 27 --
// module.go:236-241
type Outputs struct {
	depinject.Out

	MintKeeper keeper.Keeper
	Module     appmodule.AppModule
}

-- Chunk 28 --
// module.go:243-269
func ProvideModule(in Inputs) Outputs {
	feeCollectorName := in.Config.FeeCollectorName
	if feeCollectorName == "" {
		feeCollectorName = authtypes.FeeCollectorName
	}

	// default to governance authority if not provided
	authority := authtypes.NewModuleAddress(govtypes.ModuleName)
	if in.Config.Authority != "" {
		authority = authtypes.NewModuleAddressOrBech32Address(in.Config.Authority)
	}

	k := keeper.NewKeeper(
		in.Cdc,
		in.Key,
		in.StakingKeeper,
		in.AccountKeeper,
		in.BankKeeper,
		feeCollectorName,
		authority.String(),
	)

	// when no inflation calculation function is provided it will use the default types.DefaultInflationCalculationFn
	m := NewAppModule(in.Cdc, k, in.AccountKeeper, in.InflationCalculationFn, in.LegacySubspace)

	return Outputs{MintKeeper: k, Module: m}
}

=== File: x/mint/abci.go ===

-- Chunk 1 --
// abci.go:16-95
func BeginBlocker(ctx sdk.Context, k keeper.Keeper, ic types.InflationCalculationFn) error {
	defer telemetry.ModuleMeasureSince(types.ModuleName, time.Now(), telemetry.MetricKeyBeginBlocker)

	// fetch stored minter & params
	minter, err := k.GetMinter(ctx)
	if err != nil {
		return err
	}
	params, err := k.GetParams(ctx)
	if err != nil {
		return err
	}

	// fetch collected fees
	collectedFeeCoin := k.CountCollectedFees(ctx, params.MintDenom)

	// recalculate inflation rate
	bondedRatio, err := k.BondedRatio(ctx)
	if err != nil {
		return err
	}
	minter.Inflation = ic(ctx, minter, params, bondedRatio)

	bondedTokenSupply, err := k.BondedTokenSupply(ctx)
	if err != nil {
		return err
	}
	minter.AnnualProvisions = minter.NextAnnualProvisions(params, bondedTokenSupply)
	if err := k.SetMinter(ctx, minter); err != nil {
		return err
	}

	// mint coins, update supply
	neededCoin := minter.BlockProvision(params)
	mintedCoin := sdk.NewCoin(params.MintDenom, math.ZeroInt())
	burnedCoin := sdk.NewCoin(params.MintDenom, math.ZeroInt())

	if collectedFeeCoin.IsLT(neededCoin) {
		// if the fee collector has not collected enough fees to meet the
		// staking incentive goals, mint enough to meet.
		mintedCoin = neededCoin.Sub(collectedFeeCoin)
		mintedCoins := sdk.NewCoins(mintedCoin)

		err := k.MintCoins(ctx, mintedCoins)
		if err != nil {
			return err
		}

		// send the minted coins to the fee collector account
		err = k.AddCollectedFees(ctx, mintedCoins)
		if err != nil {
			return err
		}

		if mintedCoin.Amount.IsInt64() {
			defer telemetry.ModuleSetGauge(types.ModuleName, float32(mintedCoin.Amount.Int64()), "minted_tokens")
		}

	} else {
		// if the fee collector has collected more fees than are needed to meet the
		// staking incentive goals, burn the rest.
		burnedCoin = collectedFeeCoin.Sub(neededCoin)
		burnedCoins := sdk.NewCoins(burnedCoin)
		err := k.BurnFees(ctx, burnedCoins)
		if err != nil {
			return err
		}
	}

	mintEvent := types.MintIncentiveTokens{
		BondedRatio:      bondedRatio,
		Inflation:        minter.Inflation,
		AnnualProvisions: minter.AnnualProvisions,
		NeededAmount:     neededCoin.Amount.Uint64(),
		CollectedAmount:  collectedFeeCoin.Amount.Uint64(),
		MintedAmount:     mintedCoin.Amount.Uint64(),
		BurnedAmount:     burnedCoin.Amount.Uint64(),
	}
	return ctx.EventManager().EmitTypedEvent(&mintEvent)
}

=== File: x/mint/keeper/keeper.go ===

-- Chunk 1 --
// keeper.go:17-28
type Keeper struct {
	cdc              codec.BinaryCodec
	storeService     store.KVStoreService
	stakingKeeper    types.StakingKeeper
	bankKeeper       types.BankKeeper
	accountKeeper    types.AccountKeeper
	feeCollectorName string

	// the address capable of executing a MsgUpdateParams message. Typically, this
	// should be the x/gov module account.
	authority string
}

-- Chunk 2 --
// keeper.go:31-54
func NewKeeper(
	cdc codec.BinaryCodec,
	storeService store.KVStoreService,
	sk types.StakingKeeper,
	ak types.AccountKeeper,
	bk types.BankKeeper,
	feeCollectorName string,
	authority string,
) Keeper {
	// ensure mint module account is set
	if addr := ak.GetModuleAddress(types.ModuleName); addr == nil {
		panic(fmt.Sprintf("the x/%s module account has not been set", types.ModuleName))
	}

	return Keeper{
		cdc:              cdc,
		storeService:     storeService,
		stakingKeeper:    sk,
		bankKeeper:       bk,
		accountKeeper:    ak,
		feeCollectorName: feeCollectorName,
		authority:        authority,
	}
}

-- Chunk 3 --
// keeper.go:57-59
func (k Keeper) GetAuthority() string {
	return k.authority
}

-- Chunk 4 --
// keeper.go:62-64
func (k Keeper) Logger(ctx sdk.Context) log.Logger {
	return ctx.Logger().With("module", "x/"+types.ModuleName)
}

-- Chunk 5 --
// keeper.go:67-79
func (k Keeper) GetMinter(ctx sdk.Context) (minter types.Minter, err error) {
	store := k.storeService.OpenKVStore(ctx)
	bz, err := store.Get(types.MinterKey)
	if err != nil {
		return types.Minter{}, err
	}
	if bz == nil {
		return types.Minter{}, err
	}

	k.cdc.MustUnmarshal(bz, &minter)
	return
}

-- Chunk 6 --
// keeper.go:82-87
func (k Keeper) SetMinter(ctx sdk.Context, minter types.Minter) (err error) {
	store := k.storeService.OpenKVStore(ctx)
	bz := k.cdc.MustMarshal(&minter)
	err = store.Set(types.MinterKey, bz)
	return err
}

-- Chunk 7 --
// keeper.go:90-103
func (k Keeper) SetParams(ctx sdk.Context, p types.Params) error {
	if err := p.Validate(); err != nil {
		return err
	}

	store := k.storeService.OpenKVStore(ctx)
	bz := k.cdc.MustMarshal(&p)
	err := store.Set(types.ParamsKey, bz)
	if err != nil {
		return err
	}

	return nil
}

-- Chunk 8 --
// keeper.go:106-118
func (k Keeper) GetParams(ctx sdk.Context) (p types.Params, err error) {
	store := k.storeService.OpenKVStore(ctx)
	bz, err := store.Get(types.ParamsKey)
	if err != nil {
		return types.Params{}, err
	}
	if bz == nil {
		return p, nil
	}

	k.cdc.MustUnmarshal(bz, &p)
	return p, nil
}

-- Chunk 9 --
// keeper.go:122-124
func (k Keeper) StakingTokenSupply(ctx sdk.Context) (math.Int, error) {
	return k.stakingKeeper.StakingTokenSupply(ctx)
}

-- Chunk 10 --
// keeper.go:128-130
func (k Keeper) BondedTokenSupply(ctx sdk.Context) (math.Int, error) {
	return k.stakingKeeper.TotalBondedTokens(ctx)
}

-- Chunk 11 --
// keeper.go:134-136
func (k Keeper) BondedRatio(ctx sdk.Context) (math.LegacyDec, error) {
	return k.stakingKeeper.BondedRatio(ctx)
}

-- Chunk 12 --
// keeper.go:140-147
func (k Keeper) MintCoins(ctx sdk.Context, newCoins sdk.Coins) error {
	if newCoins.Empty() {
		// skip as no coins need to be minted
		return nil
	}

	return k.bankKeeper.MintCoins(ctx, types.ModuleName, newCoins)
}

-- Chunk 13 --
// keeper.go:151-153
func (k Keeper) AddCollectedFees(ctx sdk.Context, fees sdk.Coins) error {
	return k.bankKeeper.SendCoinsFromModuleToModule(ctx, types.ModuleName, k.feeCollectorName, fees)
}

-- Chunk 14 --
// keeper.go:157-159
func (k Keeper) CountCollectedFees(ctx sdk.Context, denom string) sdk.Coin {
	return k.bankKeeper.GetBalance(ctx, k.accountKeeper.GetModuleAccount(ctx, k.feeCollectorName).GetAddress(), denom)
}

-- Chunk 15 --
// keeper.go:163-165
func (k Keeper) BurnFees(ctx sdk.Context, fees sdk.Coins) error {
	return k.bankKeeper.BurnCoins(ctx, k.feeCollectorName, fees)
}

=== File: x/mint/keeper/keeper_test.go ===

-- Chunk 1 --
// keeper_test.go:25-33
type IntegrationTestSuite struct {
	suite.Suite

	mintKeeper    keeper.Keeper
	ctx           sdk.Context
	msgServer     types.MsgServer
	stakingKeeper *minttestutil.MockStakingKeeper
	bankKeeper    *minttestutil.MockBankKeeper
}

-- Chunk 2 --
// keeper_test.go:35-37
func TestKeeperTestSuite(t *testing.T) {
	suite.Run(t, new(IntegrationTestSuite))
}

-- Chunk 3 --
// keeper_test.go:39-75
func (s *IntegrationTestSuite) SetupTest() {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})
	key := storetypes.NewKVStoreKey(types.StoreKey)
	store := runtime.NewKVStoreService(key)
	testCtx := testutil.DefaultContextWithDB(s.T(), key, storetypes.NewTransientStoreKey("transient_test"))
	s.ctx = testCtx.Ctx

	// gomock initializations
	ctrl := gomock.NewController(s.T())
	accountKeeper := minttestutil.NewMockAccountKeeper(ctrl)
	bankKeeper := minttestutil.NewMockBankKeeper(ctrl)
	stakingKeeper := minttestutil.NewMockStakingKeeper(ctrl)

	accountKeeper.EXPECT().GetModuleAddress(types.ModuleName).Return(sdk.AccAddress{})

	s.mintKeeper = keeper.NewKeeper(
		encCfg.Codec,
		store,
		stakingKeeper,
		accountKeeper,
		bankKeeper,
		authtypes.FeeCollectorName,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)
	s.stakingKeeper = stakingKeeper
	s.bankKeeper = bankKeeper

	s.Require().Equal(testCtx.Ctx.Logger().With("module", "x/"+types.ModuleName),
		s.mintKeeper.Logger(testCtx.Ctx))

	err := s.mintKeeper.SetParams(s.ctx, types.DefaultParams())
	s.Require().NoError(err)
	err = s.mintKeeper.SetMinter(s.ctx, types.DefaultInitialMinter())
	s.Require().NoError(err)

	s.msgServer = keeper.NewMsgServerImpl(s.mintKeeper)
}

-- Chunk 4 --
// keeper_test.go:77-126
func (s *IntegrationTestSuite) TestParams() {
	testCases := []struct {
		name      string
		input     types.Params
		expectErr bool
	}{
		{
			name: "set invalid params",
			input: types.Params{
				MintDenom:           sdk.DefaultBondDenom,
				InflationRateChange: math.LegacyNewDecWithPrec(-13, 2),
				InflationMax:        math.LegacyNewDecWithPrec(20, 2),
				InflationMin:        math.LegacyNewDecWithPrec(7, 2),
				GoalBonded:          math.LegacyNewDecWithPrec(67, 2),
				BlocksPerYear:       uint64(60 * 60 * 8766 / 5),
			},
			expectErr: true,
		},
		{
			name: "set full valid params",
			input: types.Params{
				MintDenom:           sdk.DefaultBondDenom,
				InflationRateChange: math.LegacyNewDecWithPrec(8, 2),
				InflationMax:        math.LegacyNewDecWithPrec(20, 2),
				InflationMin:        math.LegacyNewDecWithPrec(2, 2),
				GoalBonded:          math.LegacyNewDecWithPrec(37, 2),
				BlocksPerYear:       uint64(60 * 60 * 8766 / 5),
			},
			expectErr: false,
		},
	}

	for _, tc := range testCases {
		s.Run(tc.name, func() {
			expected, err := s.mintKeeper.GetParams(s.ctx)
			s.Require().NoError(err)
			err = s.mintKeeper.SetParams(s.ctx, tc.input)
			if tc.expectErr {
				s.Require().Error(err)
			} else {
				expected = tc.input
				s.Require().NoError(err)
			}

			p, err := s.mintKeeper.GetParams(s.ctx)
			s.Require().NoError(err)
			s.Require().Equal(expected, p)
		})
	}
}

-- Chunk 5 --
// keeper_test.go:128-149
func (s *IntegrationTestSuite) TestAliasFunctions() {
	stakingTokenSupply := math.NewIntFromUint64(100000000000)
	s.stakingKeeper.EXPECT().StakingTokenSupply(s.ctx).Return(stakingTokenSupply, nil)
	tokenSupply, err := s.mintKeeper.StakingTokenSupply(s.ctx)
	s.Require().NoError(err)
	s.Require().Equal(tokenSupply, stakingTokenSupply)

	bondedRatio := math.LegacyNewDecWithPrec(15, 2)
	s.stakingKeeper.EXPECT().BondedRatio(s.ctx).Return(bondedRatio, nil)
	ratio, err := s.mintKeeper.BondedRatio(s.ctx)
	s.Require().NoError(err)
	s.Require().Equal(ratio, bondedRatio)

	coins := sdk.NewCoins(sdk.NewCoin("stake", math.NewInt(1000000)))
	s.bankKeeper.EXPECT().MintCoins(s.ctx, types.ModuleName, coins).Return(nil)
	s.Require().Equal(s.mintKeeper.MintCoins(s.ctx, sdk.NewCoins()), nil)
	s.Require().Nil(s.mintKeeper.MintCoins(s.ctx, coins))

	fees := sdk.NewCoins(sdk.NewCoin("stake", math.NewInt(1000)))
	s.bankKeeper.EXPECT().SendCoinsFromModuleToModule(s.ctx, types.ModuleName, authtypes.FeeCollectorName, fees).Return(nil)
	s.Require().Nil(s.mintKeeper.AddCollectedFees(s.ctx, fees))
}

=== File: x/mint/keeper/grpc_query.go ===

-- Chunk 1 --
// grpc_query.go:14-22
func (k Keeper) Params(c context.Context, _ *types.QueryParamsRequest) (*types.QueryParamsResponse, error) {
	ctx := sdk.UnwrapSDKContext(c)
	params, err := k.GetParams(ctx)
	if err != nil {
		return nil, err
	}

	return &types.QueryParamsResponse{Params: params}, nil
}

-- Chunk 2 --
// grpc_query.go:25-33
func (k Keeper) Inflation(c context.Context, _ *types.QueryInflationRequest) (*types.QueryInflationResponse, error) {
	ctx := sdk.UnwrapSDKContext(c)
	minter, err := k.GetMinter(ctx)
	if err != nil {
		return nil, err
	}

	return &types.QueryInflationResponse{Inflation: minter.Inflation}, nil
}

-- Chunk 3 --
// grpc_query.go:36-44
func (k Keeper) AnnualProvisions(c context.Context, _ *types.QueryAnnualProvisionsRequest) (*types.QueryAnnualProvisionsResponse, error) {
	ctx := sdk.UnwrapSDKContext(c)
	minter, err := k.GetMinter(ctx)
	if err != nil {
		return nil, err
	}

	return &types.QueryAnnualProvisionsResponse{AnnualProvisions: minter.AnnualProvisions}, nil
}

=== File: x/mint/keeper/genesis_test.go ===

-- Chunk 1 --
// genesis_test.go:27-35
type GenesisTestSuite struct {
	suite.Suite

	sdkCtx        sdk.Context
	keeper        keeper.Keeper
	cdc           codec.BinaryCodec
	accountKeeper types.AccountKeeper
	key           *storetypes.KVStoreKey
}

-- Chunk 2 --
// genesis_test.go:37-39
func TestGenesisTestSuite(t *testing.T) {
	suite.Run(t, new(GenesisTestSuite))
}

-- Chunk 3 --
// genesis_test.go:41-60
func (s *GenesisTestSuite) SetupTest() {
	key := storetypes.NewKVStoreKey(types.StoreKey)
	testCtx := testutil.DefaultContextWithDB(s.T(), key, storetypes.NewTransientStoreKey("transient_test"))
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})

	// gomock initializations
	ctrl := gomock.NewController(s.T())
	s.cdc = codec.NewProtoCodec(encCfg.InterfaceRegistry)
	s.sdkCtx = testCtx.Ctx
	s.key = key

	stakingKeeper := minttestutil.NewMockStakingKeeper(ctrl)
	accountKeeper := minttestutil.NewMockAccountKeeper(ctrl)
	bankKeeper := minttestutil.NewMockBankKeeper(ctrl)
	s.accountKeeper = accountKeeper
	accountKeeper.EXPECT().GetModuleAddress(minterAcc.Name).Return(minterAcc.GetAddress())
	accountKeeper.EXPECT().GetModuleAccount(s.sdkCtx, minterAcc.Name).Return(minterAcc)

	s.keeper = keeper.NewKeeper(s.cdc, runtime.NewKVStoreService(key), stakingKeeper, accountKeeper, bankKeeper, "", "")
}

-- Chunk 4 --
// genesis_test.go:62-91
func (s *GenesisTestSuite) TestImportExportGenesis() {
	genesisState := types.DefaultGenesisState()
	genesisState.Minter = types.NewMinter(math.LegacyNewDecWithPrec(20, 2), math.LegacyNewDec(1))
	genesisState.Params = types.NewParams(
		"testDenom",
		math.LegacyNewDecWithPrec(15, 2),
		math.LegacyNewDecWithPrec(22, 2),
		math.LegacyNewDecWithPrec(9, 2),
		math.LegacyNewDecWithPrec(69, 2),
		uint64(60*60*8766/5),
	)

	s.keeper.InitGenesis(s.sdkCtx, s.accountKeeper, genesisState)

	minter, err := s.keeper.GetMinter(s.sdkCtx)
	s.Require().NoError(err)
	s.Require().Equal(genesisState.Minter, minter)
	s.Require().NoError(err)

	// invalidCtx := testutil.DefaultContextWithDB(s.T(), s.key, storetypes.NewTransientStoreKey("transient_test"))
	// _, err = s.keeper.GetMinter(invalidCtx.Ctx)
	// s.Require().ErrorIs(err, collections.ErrNotFound)

	params, err := s.keeper.GetParams(s.sdkCtx)
	s.Require().Equal(genesisState.Params, params)
	s.Require().NoError(err)

	genesisState2 := s.keeper.ExportGenesis(s.sdkCtx)
	s.Require().Equal(genesisState, genesisState2)
}

=== File: x/mint/keeper/genesis.go ===

-- Chunk 1 --
// genesis.go:10-20
func (k Keeper) InitGenesis(ctx sdk.Context, ak types.AccountKeeper, data *types.GenesisState) {
	if err := k.SetMinter(ctx, data.Minter); err != nil {
		panic(err)
	}

	if err := k.SetParams(ctx, data.Params); err != nil {
		panic(err)
	}

	ak.GetModuleAccount(ctx, types.ModuleName)
}

-- Chunk 2 --
// genesis.go:23-33
func (k Keeper) ExportGenesis(ctx sdk.Context) *types.GenesisState {
	minter, err := k.GetMinter(ctx)
	if err != nil {
		panic(err)
	}
	params, err := k.GetParams(ctx)
	if err != nil {
		panic(err)
	}
	return types.NewGenesisState(minter, params)
}

=== File: x/mint/keeper/msg_server.go ===

-- Chunk 1 --
// msg_server.go:17-19
type msgServer struct {
	Keeper
}

-- Chunk 2 --
// msg_server.go:22-26
func NewMsgServerImpl(k Keeper) types.MsgServer {
	return &msgServer{
		Keeper: k,
	}
}

-- Chunk 3 --
// msg_server.go:29-40
func (ms msgServer) UpdateParams(goCtx context.Context, req *types.MsgUpdateParams) (*types.MsgUpdateParamsResponse, error) {
	if ms.authority != req.Authority {
		return nil, errorsmod.Wrapf(govtypes.ErrInvalidSigner, "invalid authority; expected %s, got %s", ms.authority, req.Authority)
	}

	ctx := sdk.UnwrapSDKContext(goCtx)
	if err := ms.SetParams(ctx, req.Params); err != nil {
		return nil, err
	}

	return &types.MsgUpdateParamsResponse{}, nil
}

=== File: x/mint/keeper/msg_server_test.go ===

-- Chunk 1 --
// msg_server_test.go:11-66
func (s *IntegrationTestSuite) TestUpdateParams() {
	testCases := []struct {
		name      string
		request   *types.MsgUpdateParams
		expectErr bool
	}{
		{
			name: "set invalid authority",
			request: &types.MsgUpdateParams{
				Authority: "foo",
			},
			expectErr: true,
		},
		{
			name: "set invalid params",
			request: &types.MsgUpdateParams{
				Authority: s.mintKeeper.GetAuthority(),
				Params: types.Params{
					MintDenom:           sdk.DefaultBondDenom,
					InflationRateChange: math.LegacyNewDecWithPrec(-13, 2),
					InflationMax:        math.LegacyNewDecWithPrec(20, 2),
					InflationMin:        math.LegacyNewDecWithPrec(7, 2),
					GoalBonded:          math.LegacyNewDecWithPrec(67, 2),
					BlocksPerYear:       uint64(60 * 60 * 8766 / 5),
				},
			},
			expectErr: true,
		},
		{
			name: "set full valid params",
			request: &types.MsgUpdateParams{
				Authority: s.mintKeeper.GetAuthority(),
				Params: types.Params{
					MintDenom:           sdk.DefaultBondDenom,
					InflationRateChange: math.LegacyNewDecWithPrec(8, 2),
					InflationMax:        math.LegacyNewDecWithPrec(20, 2),
					InflationMin:        math.LegacyNewDecWithPrec(2, 2),
					GoalBonded:          math.LegacyNewDecWithPrec(37, 2),
					BlocksPerYear:       uint64(60 * 60 * 8766 / 5),
				},
			},
			expectErr: false,
		},
	}

	for _, tc := range testCases {
		s.Run(tc.name, func() {
			_, err := s.msgServer.UpdateParams(s.ctx, tc.request)
			if tc.expectErr {
				s.Require().Error(err)
			} else {
				s.Require().NoError(err)
			}
		})
	}
}

=== File: x/mint/keeper/grpc_query_test.go ===

-- Chunk 1 --
// grpc_query_test.go:26-32
type MintTestSuite struct {
	suite.Suite

	ctx         sdk.Context
	queryClient types.QueryClient
	mintKeeper  keeper.Keeper
}

-- Chunk 2 --
// grpc_query_test.go:34-68
func (suite *MintTestSuite) SetupTest() {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})
	key := storetypes.NewKVStoreKey(types.StoreKey)
	store := runtime.NewKVStoreService(key)
	testCtx := testutil.DefaultContextWithDB(suite.T(), key, storetypes.NewTransientStoreKey("transient_test"))
	suite.ctx = testCtx.Ctx

	// gomock initializations
	ctrl := gomock.NewController(suite.T())
	accountKeeper := minttestutil.NewMockAccountKeeper(ctrl)
	bankKeeper := minttestutil.NewMockBankKeeper(ctrl)
	stakingKeeper := minttestutil.NewMockStakingKeeper(ctrl)

	accountKeeper.EXPECT().GetModuleAddress("mint").Return(sdk.AccAddress{})

	suite.mintKeeper = keeper.NewKeeper(
		encCfg.Codec,
		store,
		stakingKeeper,
		accountKeeper,
		bankKeeper,
		authtypes.FeeCollectorName,
		authtypes.NewModuleAddress(govtypes.ModuleName).String(),
	)

	err := suite.mintKeeper.SetParams(suite.ctx, types.DefaultParams())
	suite.Require().NoError(err)
	err = suite.mintKeeper.SetMinter(suite.ctx, types.DefaultInitialMinter())
	suite.Require().NoError(err)

	queryHelper := baseapp.NewQueryServerTestHelper(testCtx.Ctx, encCfg.InterfaceRegistry)
	types.RegisterQueryServer(queryHelper, suite.mintKeeper)

	suite.queryClient = types.NewQueryClient(queryHelper)
}

-- Chunk 3 --
// grpc_query_test.go:70-86
func (suite *MintTestSuite) TestGRPCParams() {
	params, err := suite.queryClient.Params(gocontext.Background(), &types.QueryParamsRequest{})
	suite.Require().NoError(err)
	keeperParams, err := suite.mintKeeper.GetParams(suite.ctx)
	suite.Require().NoError(err)
	suite.Require().Equal(params.Params, keeperParams)

	inflation, err := suite.queryClient.Inflation(gocontext.Background(), &types.QueryInflationRequest{})
	suite.Require().NoError(err)
	keeperMinter, err := suite.mintKeeper.GetMinter(suite.ctx)
	suite.Require().NoError(err)
	suite.Require().Equal(inflation.Inflation, keeperMinter.Inflation)

	annualProvisions, err := suite.queryClient.AnnualProvisions(gocontext.Background(), &types.QueryAnnualProvisionsRequest{})
	suite.Require().NoError(err)
	suite.Require().Equal(annualProvisions.AnnualProvisions, keeperMinter.AnnualProvisions)
}

-- Chunk 4 --
// grpc_query_test.go:88-90
func TestMintTestSuite(t *testing.T) {
	suite.Run(t, new(MintTestSuite))
}

=== File: x/mint/exported/exported.go ===

-- Chunk 1 --
// exported.go:8-18
type (
	ParamSet = paramtypes.ParamSet

	// Subspace defines an interface that implements the legacy x/params Subspace
	// type.
	//
	// NOTE: This is used solely for migration of x/params managed parameters.
	Subspace interface {
		GetParamSet(ctx sdk.Context, ps ParamSet)
	}
)

=== File: x/mint/testutil/app_config.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/mint/testutil/app_config.go:1-117
package testutil

import (
	_ "github.com/cosmos/cosmos-sdk/x/auth"           // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/auth/tx/config" // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/bank"           // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/consensus"      // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/genutil"        // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/params"         // nolint:blank-imports
	_ "github.com/cosmos/cosmos-sdk/x/staking"        // nolint:blank-imports

	runtimev1alpha1 "cosmossdk.io/api/cosmos/app/runtime/v1alpha1"
	appv1alpha1 "cosmossdk.io/api/cosmos/app/v1alpha1"
	authmodulev1 "cosmossdk.io/api/cosmos/auth/module/v1"
	bankmodulev1 "cosmossdk.io/api/cosmos/bank/module/v1"
	consensusmodulev1 "cosmossdk.io/api/cosmos/consensus/module/v1"
	genutilmodulev1 "cosmossdk.io/api/cosmos/genutil/module/v1"
	mintmodulev1 "cosmossdk.io/api/cosmos/mint/module/v1"
	paramsmodulev1 "cosmossdk.io/api/cosmos/params/module/v1"
	stakingmodulev1 "cosmossdk.io/api/cosmos/staking/module/v1"
	txconfigv1 "cosmossdk.io/api/cosmos/tx/config/v1"
	"cosmossdk.io/core/appconfig"
	"cosmossdk.io/depinject"
	"cosmossdk.io/log"

	authtypes "github.com/cosmos/cosmos-sdk/x/auth/types"
	banktypes "github.com/cosmos/cosmos-sdk/x/bank/types"
	consensustypes "github.com/cosmos/cosmos-sdk/x/consensus/types"
	genutiltypes "github.com/cosmos/cosmos-sdk/x/genutil/types"
	paramstypes "github.com/cosmos/cosmos-sdk/x/params/types"
	stakingtypes "github.com/cosmos/cosmos-sdk/x/staking/types"

	minttypes "github.com/burnt-labs/xion/x/mint/types"
)

var AppConfig = depinject.Configs(
	appconfig.Compose(&appv1alpha1.Config{
		Modules: []*appv1alpha1.ModuleConfig{
			{
				Name: "runtime",
				Config: appconfig.WrapAny(&runtimev1alpha1.Module{
					AppName: "MintApp",
					BeginBlockers: []string{
						minttypes.ModuleName,
						stakingtypes.ModuleName,
						authtypes.ModuleName,
						banktypes.ModuleName,
						genutiltypes.ModuleName,
						paramstypes.ModuleName,
						consensustypes.ModuleName,
					},
					EndBlockers: []string{
						stakingtypes.ModuleName,
						authtypes.ModuleName,
						banktypes.ModuleName,
						minttypes.ModuleName,
						genutiltypes.ModuleName,
						paramstypes.ModuleName,
						consensustypes.ModuleName,
					},
					InitGenesis: []string{
						authtypes.ModuleName,
						banktypes.ModuleName,
						stakingtypes.ModuleName,
						minttypes.ModuleName,
						genutiltypes.ModuleName,
						paramstypes.ModuleName,
						consensustypes.ModuleName,
					},
				}),
			},
			{
				Name: authtypes.ModuleName,
				Config: appconfig.WrapAny(&authmodulev1.Module{
					Bech32Prefix: "cosmos",
					ModuleAccountPermissions: []*authmodulev1.ModuleAccountPermission{
						{Account: authtypes.FeeCollectorName},
						{Account: minttypes.ModuleName, Permissions: []string{authtypes.Minter}},
						{Account: stakingtypes.BondedPoolName, Permissions: []string{authtypes.Burner, stakingtypes.ModuleName}},
						{Account: stakingtypes.NotBondedPoolName, Permissions: []string{authtypes.Burner, stakingtypes.ModuleName}},
					},
				}),
			},
			{
				Name:   banktypes.ModuleName,
				Config: appconfig.WrapAny(&bankmodulev1.Module{}),
			},
			{
				Name:   stakingtypes.ModuleName,
				Config: appconfig.WrapAny(&stakingmodulev1.Module{}),
			},
			{
				Name:   paramstypes.ModuleName,
				Config: appconfig.WrapAny(&paramsmodulev1.Module{}),
			},
			{
				Name:   consensustypes.ModuleName,
				Config: appconfig.WrapAny(&consensusmodulev1.Module{}),
			},
			{
				Name:   "tx",
				Config: appconfig.WrapAny(&txconfigv1.Config{}),
			},
			{
				Name:   genutiltypes.ModuleName,
				Config: appconfig.WrapAny(&genutilmodulev1.Module{}),
			},
			{
				Name:   minttypes.ModuleName,
				Config: appconfig.WrapAny(&mintmodulev1.Module{}),
			},
		},
	}),
	depinject.Supply(
		log.NewNopLogger(),
	),
)

=== File: x/mint/testutil/expected_keepers_mocks.go ===

-- Chunk 1 --
// expected_keepers_mocks.go:22-25
type MockStakingKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockStakingKeeperMockRecorder
}

-- Chunk 2 --
// expected_keepers_mocks.go:28-30
type MockStakingKeeperMockRecorder struct {
	mock *MockStakingKeeper
}

-- Chunk 3 --
// expected_keepers_mocks.go:33-37
func NewMockStakingKeeper(ctrl *gomock.Controller) *MockStakingKeeper {
	mock := &MockStakingKeeper{ctrl: ctrl}
	mock.recorder = &MockStakingKeeperMockRecorder{mock}
	return mock
}

-- Chunk 4 --
// expected_keepers_mocks.go:40-42
func (m *MockStakingKeeper) EXPECT() *MockStakingKeeperMockRecorder {
	return m.recorder
}

-- Chunk 5 --
// expected_keepers_mocks.go:45-51
func (m *MockStakingKeeper) BondedRatio(ctx context.Context) (math.LegacyDec, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BondedRatio", ctx)
	ret0, _ := ret[0].(math.LegacyDec)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

-- Chunk 6 --
// expected_keepers_mocks.go:54-57
func (mr *MockStakingKeeperMockRecorder) BondedRatio(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BondedRatio", reflect.TypeOf((*MockStakingKeeper)(nil).BondedRatio), ctx)
}

-- Chunk 7 --
// expected_keepers_mocks.go:60-66
func (m *MockStakingKeeper) StakingTokenSupply(ctx context.Context) (math.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StakingTokenSupply", ctx)
	ret0, _ := ret[0].(math.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

-- Chunk 8 --
// expected_keepers_mocks.go:69-72
func (mr *MockStakingKeeperMockRecorder) StakingTokenSupply(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StakingTokenSupply", reflect.TypeOf((*MockStakingKeeper)(nil).StakingTokenSupply), ctx)
}

-- Chunk 9 --
// expected_keepers_mocks.go:75-81
func (m *MockStakingKeeper) TotalBondedTokens(ctx context.Context) (math.Int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TotalBondedTokens", ctx)
	ret0, _ := ret[0].(math.Int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

-- Chunk 10 --
// expected_keepers_mocks.go:84-87
func (mr *MockStakingKeeperMockRecorder) TotalBondedTokens(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TotalBondedTokens", reflect.TypeOf((*MockStakingKeeper)(nil).TotalBondedTokens), ctx)
}

-- Chunk 11 --
// expected_keepers_mocks.go:90-93
type MockAccountKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockAccountKeeperMockRecorder
}

-- Chunk 12 --
// expected_keepers_mocks.go:96-98
type MockAccountKeeperMockRecorder struct {
	mock *MockAccountKeeper
}

-- Chunk 13 --
// expected_keepers_mocks.go:101-105
func NewMockAccountKeeper(ctrl *gomock.Controller) *MockAccountKeeper {
	mock := &MockAccountKeeper{ctrl: ctrl}
	mock.recorder = &MockAccountKeeperMockRecorder{mock}
	return mock
}

-- Chunk 14 --
// expected_keepers_mocks.go:108-110
func (m *MockAccountKeeper) EXPECT() *MockAccountKeeperMockRecorder {
	return m.recorder
}

-- Chunk 15 --
// expected_keepers_mocks.go:113-118
func (m *MockAccountKeeper) GetModuleAccount(ctx context.Context, moduleName string) types.ModuleAccountI {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModuleAccount", ctx, moduleName)
	ret0, _ := ret[0].(types.ModuleAccountI)
	return ret0
}

-- Chunk 16 --
// expected_keepers_mocks.go:121-124
func (mr *MockAccountKeeperMockRecorder) GetModuleAccount(ctx, moduleName any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleAccount", reflect.TypeOf((*MockAccountKeeper)(nil).GetModuleAccount), ctx, moduleName)
}

-- Chunk 17 --
// expected_keepers_mocks.go:127-132
func (m *MockAccountKeeper) GetModuleAddress(name string) types.AccAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetModuleAddress", name)
	ret0, _ := ret[0].(types.AccAddress)
	return ret0
}

-- Chunk 18 --
// expected_keepers_mocks.go:135-138
func (mr *MockAccountKeeperMockRecorder) GetModuleAddress(name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetModuleAddress", reflect.TypeOf((*MockAccountKeeper)(nil).GetModuleAddress), name)
}

-- Chunk 19 --
// expected_keepers_mocks.go:141-144
func (m *MockAccountKeeper) SetModuleAccount(arg0 context.Context, arg1 types.ModuleAccountI) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetModuleAccount", arg0, arg1)
}

-- Chunk 20 --
// expected_keepers_mocks.go:147-150
func (mr *MockAccountKeeperMockRecorder) SetModuleAccount(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetModuleAccount", reflect.TypeOf((*MockAccountKeeper)(nil).SetModuleAccount), arg0, arg1)
}

-- Chunk 21 --
// expected_keepers_mocks.go:153-156
type MockBankKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockBankKeeperMockRecorder
}

-- Chunk 22 --
// expected_keepers_mocks.go:159-161
type MockBankKeeperMockRecorder struct {
	mock *MockBankKeeper
}

-- Chunk 23 --
// expected_keepers_mocks.go:164-168
func NewMockBankKeeper(ctrl *gomock.Controller) *MockBankKeeper {
	mock := &MockBankKeeper{ctrl: ctrl}
	mock.recorder = &MockBankKeeperMockRecorder{mock}
	return mock
}

-- Chunk 24 --
// expected_keepers_mocks.go:171-173
func (m *MockBankKeeper) EXPECT() *MockBankKeeperMockRecorder {
	return m.recorder
}

-- Chunk 25 --
// expected_keepers_mocks.go:176-181
func (m *MockBankKeeper) BurnCoins(ctx context.Context, moduleName string, amt types.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BurnCoins", ctx, moduleName, amt)
	ret0, _ := ret[0].(error)
	return ret0
}

-- Chunk 26 --
// expected_keepers_mocks.go:184-187
func (mr *MockBankKeeperMockRecorder) BurnCoins(ctx, moduleName, amt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BurnCoins", reflect.TypeOf((*MockBankKeeper)(nil).BurnCoins), ctx, moduleName, amt)
}

-- Chunk 27 --
// expected_keepers_mocks.go:190-195
func (m *MockBankKeeper) GetBalance(ctx context.Context, addr types.AccAddress, denom string) types.Coin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalance", ctx, addr, denom)
	ret0, _ := ret[0].(types.Coin)
	return ret0
}

-- Chunk 28 --
// expected_keepers_mocks.go:198-201
func (mr *MockBankKeeperMockRecorder) GetBalance(ctx, addr, denom any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalance", reflect.TypeOf((*MockBankKeeper)(nil).GetBalance), ctx, addr, denom)
}

-- Chunk 29 --
// expected_keepers_mocks.go:204-209
func (m *MockBankKeeper) MintCoins(ctx context.Context, name string, amt types.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MintCoins", ctx, name, amt)
	ret0, _ := ret[0].(error)
	return ret0
}

-- Chunk 30 --
// expected_keepers_mocks.go:212-215
func (mr *MockBankKeeperMockRecorder) MintCoins(ctx, name, amt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MintCoins", reflect.TypeOf((*MockBankKeeper)(nil).MintCoins), ctx, name, amt)
}

-- Chunk 31 --
// expected_keepers_mocks.go:218-223
func (m *MockBankKeeper) SendCoinsFromModuleToAccount(ctx context.Context, senderModule string, recipientAddr types.AccAddress, amt types.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCoinsFromModuleToAccount", ctx, senderModule, recipientAddr, amt)
	ret0, _ := ret[0].(error)
	return ret0
}

-- Chunk 32 --
// expected_keepers_mocks.go:226-229
func (mr *MockBankKeeperMockRecorder) SendCoinsFromModuleToAccount(ctx, senderModule, recipientAddr, amt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCoinsFromModuleToAccount", reflect.TypeOf((*MockBankKeeper)(nil).SendCoinsFromModuleToAccount), ctx, senderModule, recipientAddr, amt)
}

-- Chunk 33 --
// expected_keepers_mocks.go:232-237
func (m *MockBankKeeper) SendCoinsFromModuleToModule(ctx context.Context, senderModule, recipientModule string, amt types.Coins) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendCoinsFromModuleToModule", ctx, senderModule, recipientModule, amt)
	ret0, _ := ret[0].(error)
	return ret0
}

-- Chunk 34 --
// expected_keepers_mocks.go:240-243
func (mr *MockBankKeeperMockRecorder) SendCoinsFromModuleToModule(ctx, senderModule, recipientModule, amt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendCoinsFromModuleToModule", reflect.TypeOf((*MockBankKeeper)(nil).SendCoinsFromModuleToModule), ctx, senderModule, recipientModule, amt)
}

=== File: x/mint/types/genesis.pb.go ===

-- Chunk 1 --
// genesis.pb.go:28-33
type GenesisState struct {
	// minter is a space for holding current inflation information.
	Minter Minter `protobuf:"bytes,1,opt,name=minter,proto3" json:"minter"`
	// params defines all the parameters of the module.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

-- Chunk 2 --
// genesis.pb.go:35-35
func (m *GenesisState) Reset()         { *m = GenesisState{} }

-- Chunk 3 --
// genesis.pb.go:36-36
func (m *GenesisState) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// genesis.pb.go:37-37
func (*GenesisState) ProtoMessage()    {}

-- Chunk 5 --
// genesis.pb.go:38-40
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_5e073f67b8a7b0c3, []int{0}
}

-- Chunk 6 --
// genesis.pb.go:41-43
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// genesis.pb.go:44-55
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// genesis.pb.go:56-58
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}

-- Chunk 9 --
// genesis.pb.go:59-61
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// genesis.pb.go:62-64
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

-- Chunk 11 --
// genesis.pb.go:68-73
func (m *GenesisState) GetMinter() Minter {
	if m != nil {
		return m.Minter
	}
	return Minter{}
}

-- Chunk 12 --
// genesis.pb.go:75-80
func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 13 --
// genesis.pb.go:82-84
func init() {
	proto.RegisterType((*GenesisState)(nil), "xion.mint.v1.GenesisState")
}

-- Chunk 14 --
// genesis.pb.go:86-86
func init() { proto.RegisterFile("xion/mint/v1/genesis.proto", fileDescriptor_5e073f67b8a7b0c3) }

-- Chunk 15 --
// genesis.pb.go:107-115
func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 16 --
// genesis.pb.go:117-120
func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 17 --
// genesis.pb.go:122-148
func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.Minter.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 18 --
// genesis.pb.go:150-160
func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 19 --
// genesis.pb.go:161-172
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Minter.Size()
	n += 1 + l + sovGenesis(uint64(l))
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

-- Chunk 20 --
// genesis.pb.go:174-176
func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 21 --
// genesis.pb.go:177-179
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 22 --
// genesis.pb.go:180-295
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minter", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Minter.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 23 --
// genesis.pb.go:296-373
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/mint/types/minter_test.go ===

-- Chunk 1 --
// minter_test.go:14-61
func TestNextInflation(t *testing.T) {
	minter := DefaultInitialMinter()
	params := DefaultParams()
	blocksPerYr := math.NewIntFromUint64(params.BlocksPerYear).ToLegacyDec()

	// Governing Mechanism:
	//    inflationRateChangePerYear = (1- BondedRatio/ GoalBonded) * MaxInflationRateChange

	tests := []struct {
		bondedRatio, setInflation, expChange math.LegacyDec
	}{
		// with 0% bonded atom supply the inflation should increase by InflationRateChange
		{math.LegacyZeroDec(), math.LegacyNewDecWithPrec(7, 2), params.InflationRateChange.Quo(blocksPerYr)},

		// 100% bonded, starting at 20% inflation and being reduced
		// (1 - (1/0.67))*(0.13/8667)
		{
			math.LegacyOneDec(), math.LegacyNewDecWithPrec(20, 2),
			math.LegacyOneDec().Sub(math.LegacyOneDec().Quo(params.GoalBonded)).Mul(params.InflationRateChange).Quo(blocksPerYr),
		},

		// 50% bonded, starting at 10% inflation and being increased
		{
			math.LegacyNewDecWithPrec(5, 1), math.LegacyNewDecWithPrec(10, 2),
			math.LegacyOneDec().Sub(math.LegacyNewDecWithPrec(5, 1).Quo(params.GoalBonded)).Mul(params.InflationRateChange).Quo(blocksPerYr),
		},

		// test 7% minimum stop (testing with 100% bonded)
		{math.LegacyOneDec(), math.LegacyNewDecWithPrec(7, 2), math.LegacyZeroDec()},
		{math.LegacyOneDec(), math.LegacyNewDecWithPrec(700000001, 10), math.LegacyNewDecWithPrec(-1, 10)},

		// test 20% maximum stop (testing with 0% bonded)
		{math.LegacyZeroDec(), math.LegacyNewDecWithPrec(20, 2), math.LegacyZeroDec()},
		{math.LegacyZeroDec(), math.LegacyNewDecWithPrec(1999999999, 10), math.LegacyNewDecWithPrec(1, 10)},

		// perfect balance shouldn't change inflation
		{math.LegacyNewDecWithPrec(67, 2), math.LegacyNewDecWithPrec(15, 2), math.LegacyZeroDec()},
	}
	for i, tc := range tests {
		minter.Inflation = tc.setInflation

		inflation := minter.NextInflationRate(params, tc.bondedRatio)
		diffInflation := inflation.Sub(tc.setInflation)

		require.True(t, diffInflation.Equal(tc.expChange),
			"Test Index: %v\nDiff:  %v\nExpected: %v\n", i, diffInflation, tc.expChange)
	}
}

-- Chunk 2 --
// minter_test.go:63-89
func TestBlockProvision(t *testing.T) {
	minter := InitialMinter(math.LegacyNewDecWithPrec(1, 1))
	params := DefaultParams()

	secondsPerYear := int64(60 * 60 * 8766)

	tests := []struct {
		annualProvisions int64
		expProvisions    int64
	}{
		{secondsPerYear / 5, 1},
		{secondsPerYear/5 + 1, 1},
		{(secondsPerYear / 5) * 2, 2},
		{(secondsPerYear / 5) / 2, 0},
	}
	for i, tc := range tests {
		minter.AnnualProvisions = math.LegacyNewDec(tc.annualProvisions)
		provisions := minter.BlockProvision(params)

		expProvisions := sdk.NewCoin(params.MintDenom,
			math.NewInt(tc.expProvisions))

		require.True(t, expProvisions.IsEqual(provisions),
			"test: %v\n\tExp: %v\n\tGot: %v\n",
			i, tc.expProvisions, provisions)
	}
}

-- Chunk 3 --
// minter_test.go:97-110
func BenchmarkBlockProvision(b *testing.B) {
	b.ReportAllocs()
	minter := InitialMinter(math.LegacyNewDecWithPrec(1, 1))
	params := DefaultParams()

	s1 := rand.NewSource(100)
	r1 := rand.New(s1)
	minter.AnnualProvisions = math.LegacyNewDec(r1.Int63n(1000000))

	// run the BlockProvision function b.N times
	for n := 0; n < b.N; n++ {
		minter.BlockProvision(params)
	}
}

-- Chunk 4 --
// minter_test.go:114-124
func BenchmarkNextInflation(b *testing.B) {
	b.ReportAllocs()
	minter := InitialMinter(math.LegacyNewDecWithPrec(1, 1))
	params := DefaultParams()
	bondedRatio := math.LegacyNewDecWithPrec(1, 1)

	// run the NextInflationRate function b.N times
	for n := 0; n < b.N; n++ {
		minter.NextInflationRate(params, bondedRatio)
	}
}

-- Chunk 5 --
// minter_test.go:128-138
func BenchmarkNextAnnualProvisions(b *testing.B) {
	b.ReportAllocs()
	minter := InitialMinter(math.LegacyNewDecWithPrec(1, 1))
	params := DefaultParams()
	totalSupply := math.NewInt(100000000000000)

	// run the NextAnnualProvisions function b.N times
	for n := 0; n < b.N; n++ {
		minter.NextAnnualProvisions(params, totalSupply)
	}
}

=== File: x/mint/types/codec.go ===

-- Chunk 1 --
// codec.go:14-24
func init() {
	RegisterLegacyAminoCodec(amino)
	cryptocodec.RegisterCrypto(amino)
	sdk.RegisterLegacyAminoCodec(amino)

	// Register all Amino interfaces and concrete types on the authz  and gov Amino codec
	// so that this can later be used to properly serialize MsgGrant and MsgExec
	// instances.

	// RegisterLegacyAminoCodec(groupcodec.Amino)
}

-- Chunk 2 --
// codec.go:27-30
func RegisterLegacyAminoCodec(cdc *codec.LegacyAmino) {
	cdc.RegisterConcrete(Params{}, "xion/x/mint/Params", nil)
	legacy.RegisterAminoMsg(cdc, &MsgUpdateParams{}, "xion/x/mint/MsgUpdateParams")
}

-- Chunk 3 --
// codec.go:33-40
func RegisterInterfaces(registry types.InterfaceRegistry) {
	registry.RegisterImplementations(
		(*sdk.Msg)(nil),
		&MsgUpdateParams{},
	)

	msgservice.RegisterMsgServiceDesc(registry, &_Msg_serviceDesc)
}

=== File: x/mint/types/params_legacy.go ===

-- Chunk 1 --
// params_legacy.go:23-25
func ParamKeyTable() paramtypes.KeyTable {
	return paramtypes.NewKeyTable().RegisterParamSet(&Params{})
}

-- Chunk 2 --
// params_legacy.go:30-39
func (p *Params) ParamSetPairs() paramtypes.ParamSetPairs {
	return paramtypes.ParamSetPairs{
		paramtypes.NewParamSetPair(KeyMintDenom, &p.MintDenom, validateMintDenom),
		paramtypes.NewParamSetPair(KeyInflationRateChange, &p.InflationRateChange, validateInflationRateChange),
		paramtypes.NewParamSetPair(KeyInflationMax, &p.InflationMax, validateInflationMax),
		paramtypes.NewParamSetPair(KeyInflationMin, &p.InflationMin, validateInflationMin),
		paramtypes.NewParamSetPair(KeyGoalBonded, &p.GoalBonded, validateGoalBonded),
		paramtypes.NewParamSetPair(KeyBlocksPerYear, &p.BlocksPerYear, validateBlocksPerYear),
	}
}

=== File: x/mint/types/mint.pb.go ===

-- Chunk 1 --
// mint.pb.go:30-35
type Minter struct {
	// current annual inflation rate
	Inflation cosmossdk_io_math.LegacyDec `protobuf:"bytes,1,opt,name=inflation,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation"`
	// current annual expected provisions
	AnnualProvisions cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=annual_provisions,json=annualProvisions,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"annual_provisions"`
}

-- Chunk 2 --
// mint.pb.go:37-37
func (m *Minter) Reset()         { *m = Minter{} }

-- Chunk 3 --
// mint.pb.go:38-38
func (m *Minter) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// mint.pb.go:39-39
func (*Minter) ProtoMessage()    {}

-- Chunk 5 --
// mint.pb.go:40-42
func (*Minter) Descriptor() ([]byte, []int) {
	return fileDescriptor_caf2043dad411a0e, []int{0}
}

-- Chunk 6 --
// mint.pb.go:43-45
func (m *Minter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// mint.pb.go:46-57
func (m *Minter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Minter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// mint.pb.go:58-60
func (m *Minter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Minter.Merge(m, src)
}

-- Chunk 9 --
// mint.pb.go:61-63
func (m *Minter) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// mint.pb.go:64-66
func (m *Minter) XXX_DiscardUnknown() {
	xxx_messageInfo_Minter.DiscardUnknown(m)
}

-- Chunk 11 --
// mint.pb.go:71-84
type Params struct {
	// type of coin to mint
	MintDenom string `protobuf:"bytes,1,opt,name=mint_denom,json=mintDenom,proto3" json:"mint_denom,omitempty"`
	// maximum annual change in inflation rate
	InflationRateChange cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=inflation_rate_change,json=inflationRateChange,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation_rate_change"`
	// maximum inflation rate
	InflationMax cosmossdk_io_math.LegacyDec `protobuf:"bytes,3,opt,name=inflation_max,json=inflationMax,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation_max"`
	// minimum inflation rate
	InflationMin cosmossdk_io_math.LegacyDec `protobuf:"bytes,4,opt,name=inflation_min,json=inflationMin,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation_min"`
	// goal of percent bonded atoms
	GoalBonded cosmossdk_io_math.LegacyDec `protobuf:"bytes,5,opt,name=goal_bonded,json=goalBonded,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"goal_bonded"`
	// expected blocks per year
	BlocksPerYear uint64 `protobuf:"varint,6,opt,name=blocks_per_year,json=blocksPerYear,proto3" json:"blocks_per_year,omitempty"`
}

-- Chunk 12 --
// mint.pb.go:86-86
func (m *Params) Reset()      { *m = Params{} }

-- Chunk 13 --
// mint.pb.go:87-87
func (*Params) ProtoMessage() {}

-- Chunk 14 --
// mint.pb.go:88-90
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_caf2043dad411a0e, []int{1}
}

-- Chunk 15 --
// mint.pb.go:91-93
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 16 --
// mint.pb.go:94-105
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 17 --
// mint.pb.go:106-108
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}

-- Chunk 18 --
// mint.pb.go:109-111
func (m *Params) XXX_Size() int {
	return m.Size()
}

-- Chunk 19 --
// mint.pb.go:112-114
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

-- Chunk 20 --
// mint.pb.go:118-123
func (m *Params) GetMintDenom() string {
	if m != nil {
		return m.MintDenom
	}
	return ""
}

-- Chunk 21 --
// mint.pb.go:125-130
func (m *Params) GetBlocksPerYear() uint64 {
	if m != nil {
		return m.BlocksPerYear
	}
	return 0
}

-- Chunk 22 --
// mint.pb.go:132-135
func init() {
	proto.RegisterType((*Minter)(nil), "xion.mint.v1.Minter")
	proto.RegisterType((*Params)(nil), "xion.mint.v1.Params")
}

-- Chunk 23 --
// mint.pb.go:137-137
func init() { proto.RegisterFile("xion/mint/v1/mint.proto", fileDescriptor_caf2043dad411a0e) }

-- Chunk 24 --
// mint.pb.go:170-178
func (m *Minter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 25 --
// mint.pb.go:180-183
func (m *Minter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 26 --
// mint.pb.go:185-211
func (m *Minter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.AnnualProvisions.Size()
		i -= size
		if _, err := m.AnnualProvisions.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.Inflation.Size()
		i -= size
		if _, err := m.Inflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 27 --
// mint.pb.go:213-221
func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 28 --
// mint.pb.go:223-226
func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 29 --
// mint.pb.go:228-286
func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BlocksPerYear != 0 {
		i = encodeVarintMint(dAtA, i, uint64(m.BlocksPerYear))
		i--
		dAtA[i] = 0x30
	}
	{
		size := m.GoalBonded.Size()
		i -= size
		if _, err := m.GoalBonded.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.InflationMin.Size()
		i -= size
		if _, err := m.InflationMin.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.InflationMax.Size()
		i -= size
		if _, err := m.InflationMax.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.InflationRateChange.Size()
		i -= size
		if _, err := m.InflationRateChange.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.MintDenom) > 0 {
		i -= len(m.MintDenom)
		copy(dAtA[i:], m.MintDenom)
		i = encodeVarintMint(dAtA, i, uint64(len(m.MintDenom)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 30 --
// mint.pb.go:288-298
func encodeVarintMint(dAtA []byte, offset int, v uint64) int {
	offset -= sovMint(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 31 --
// mint.pb.go:299-310
func (m *Minter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Inflation.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.AnnualProvisions.Size()
	n += 1 + l + sovMint(uint64(l))
	return n
}

-- Chunk 32 --
// mint.pb.go:312-334
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MintDenom)
	if l > 0 {
		n += 1 + l + sovMint(uint64(l))
	}
	l = m.InflationRateChange.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.InflationMax.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.InflationMin.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.GoalBonded.Size()
	n += 1 + l + sovMint(uint64(l))
	if m.BlocksPerYear != 0 {
		n += 1 + sovMint(uint64(m.BlocksPerYear))
	}
	return n
}

-- Chunk 33 --
// mint.pb.go:336-338
func sovMint(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 34 --
// mint.pb.go:339-341
func sozMint(x uint64) (n int) {
	return sovMint(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 35 --
// mint.pb.go:342-459
func (m *Minter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMint
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Minter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Minter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inflation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Inflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnnualProvisions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AnnualProvisions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMint(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMint
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 36 --
// mint.pb.go:460-609
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMint
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MintDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationRateChange", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationRateChange.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationMax", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationMax.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationMin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {

-- Chunk 37 --
// mint.pb.go:610-696
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationMin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoalBonded", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.GoalBonded.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlocksPerYear", wireType)
			}
			m.BlocksPerYear = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlocksPerYear |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMint(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMint
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 38 --
// mint.pb.go:697-774
func skipMint(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMint
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMint
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMint
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMint
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMint
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMint
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/mint/types/minter.go ===

-- Chunk 1 --
// minter.go:13-18
func NewMinter(inflation, annualProvisions math.LegacyDec) Minter {
	return Minter{
		Inflation:        inflation,
		AnnualProvisions: annualProvisions,
	}
}

-- Chunk 2 --
// minter.go:21-26
func InitialMinter(inflation math.LegacyDec) Minter {
	return NewMinter(
		inflation,
		math.LegacyNewDec(0),
	)
}

-- Chunk 3 --
// minter.go:30-34
func DefaultInitialMinter() Minter {
	return InitialMinter(
		math.LegacyNewDecWithPrec(13, 2),
	)
}

-- Chunk 4 --
// minter.go:37-43
func ValidateMinter(minter Minter) error {
	if minter.Inflation.IsNegative() {
		return fmt.Errorf("mint parameter Inflation should be positive, is %s",
			minter.Inflation.String())
	}
	return nil
}

-- Chunk 5 --
// minter.go:46-70
func (m Minter) NextInflationRate(params Params, bondedRatio math.LegacyDec) math.LegacyDec {
	// The target annual inflation rate is recalculated for each previsions cycle. The
	// inflation is also subject to a rate change (positive or negative) depending on
	// the distance from the desired ratio (67%). The maximum rate change possible is
	// defined to be 13% per year, however the annual inflation is capped as between
	// 7% and 20%.

	// (1 - bondedRatio/GoalBonded) * InflationRateChange
	inflationRateChangePerYear := math.LegacyOneDec().
		Sub(bondedRatio.Quo(params.GoalBonded)).
		Mul(params.InflationRateChange)
	blocksPerYear := math.NewIntFromUint64(params.BlocksPerYear).ToLegacyDec()
	inflationRateChange := inflationRateChangePerYear.Quo(blocksPerYear)

	// adjust the new annual inflation for this next cycle
	inflation := m.Inflation.Add(inflationRateChange) // note inflationRateChange may be negative
	if inflation.GT(params.InflationMax) {
		inflation = params.InflationMax
	}
	if inflation.LT(params.InflationMin) {
		inflation = params.InflationMin
	}

	return inflation
}

-- Chunk 6 --
// minter.go:74-76
func (m Minter) NextAnnualProvisions(_ Params, totalSupply math.Int) math.LegacyDec {
	return m.Inflation.MulInt(totalSupply)
}

-- Chunk 7 --
// minter.go:80-84
func (m Minter) BlockProvision(params Params) sdk.Coin {
	blocksPerYear := math.NewIntFromUint64(params.BlocksPerYear)
	provisionAmt := m.AnnualProvisions.QuoInt(blocksPerYear)
	return sdk.NewCoin(params.MintDenom, provisionAmt.TruncateInt())
}

=== File: x/mint/types/query.pb.go ===

-- Chunk 1 --
// query.pb.go:35-36
type QueryParamsRequest struct {
}

-- Chunk 2 --
// query.pb.go:38-38
func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }

-- Chunk 3 --
// query.pb.go:39-39
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// query.pb.go:40-40
func (*QueryParamsRequest) ProtoMessage()    {}

-- Chunk 5 --
// query.pb.go:41-43
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{0}
}

-- Chunk 6 --
// query.pb.go:44-46
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// query.pb.go:47-58
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// query.pb.go:59-61
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}

-- Chunk 9 --
// query.pb.go:62-64
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// query.pb.go:65-67
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

-- Chunk 11 --
// query.pb.go:72-75
type QueryParamsResponse struct {
	// params defines the parameters of the module.
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

-- Chunk 12 --
// query.pb.go:77-77
func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }

-- Chunk 13 --
// query.pb.go:78-78
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 14 --
// query.pb.go:79-79
func (*QueryParamsResponse) ProtoMessage()    {}

-- Chunk 15 --
// query.pb.go:80-82
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{1}
}

-- Chunk 16 --
// query.pb.go:83-85
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 17 --
// query.pb.go:86-97
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 18 --
// query.pb.go:98-100
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}

-- Chunk 19 --
// query.pb.go:101-103
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 20 --
// query.pb.go:104-106
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

-- Chunk 21 --
// query.pb.go:110-115
func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 22 --
// query.pb.go:118-119
type QueryInflationRequest struct {
}

-- Chunk 23 --
// query.pb.go:121-121
func (m *QueryInflationRequest) Reset()         { *m = QueryInflationRequest{} }

-- Chunk 24 --
// query.pb.go:122-122
func (m *QueryInflationRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 25 --
// query.pb.go:123-123
func (*QueryInflationRequest) ProtoMessage()    {}

-- Chunk 26 --
// query.pb.go:124-126
func (*QueryInflationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{2}
}

-- Chunk 27 --
// query.pb.go:127-129
func (m *QueryInflationRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 28 --
// query.pb.go:130-141
func (m *QueryInflationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInflationRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 29 --
// query.pb.go:142-144
func (m *QueryInflationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInflationRequest.Merge(m, src)
}

-- Chunk 30 --
// query.pb.go:145-147
func (m *QueryInflationRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 31 --
// query.pb.go:148-150
func (m *QueryInflationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInflationRequest.DiscardUnknown(m)
}

-- Chunk 32 --
// query.pb.go:156-159
type QueryInflationResponse struct {
	// inflation is the current minting inflation value.
	Inflation cosmossdk_io_math.LegacyDec `protobuf:"bytes,1,opt,name=inflation,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation"`
}

-- Chunk 33 --
// query.pb.go:161-161
func (m *QueryInflationResponse) Reset()         { *m = QueryInflationResponse{} }

-- Chunk 34 --
// query.pb.go:162-162
func (m *QueryInflationResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 35 --
// query.pb.go:163-163
func (*QueryInflationResponse) ProtoMessage()    {}

-- Chunk 36 --
// query.pb.go:164-166
func (*QueryInflationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{3}
}

-- Chunk 37 --
// query.pb.go:167-169
func (m *QueryInflationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 38 --
// query.pb.go:170-181
func (m *QueryInflationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInflationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 39 --
// query.pb.go:182-184
func (m *QueryInflationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInflationResponse.Merge(m, src)
}

-- Chunk 40 --
// query.pb.go:185-187
func (m *QueryInflationResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 41 --
// query.pb.go:188-190
func (m *QueryInflationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInflationResponse.DiscardUnknown(m)
}

-- Chunk 42 --
// query.pb.go:196-197
type QueryAnnualProvisionsRequest struct {
}

-- Chunk 43 --
// query.pb.go:199-199
func (m *QueryAnnualProvisionsRequest) Reset()         { *m = QueryAnnualProvisionsRequest{} }

-- Chunk 44 --
// query.pb.go:200-200
func (m *QueryAnnualProvisionsRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 45 --
// query.pb.go:201-201
func (*QueryAnnualProvisionsRequest) ProtoMessage()    {}

-- Chunk 46 --
// query.pb.go:202-204
func (*QueryAnnualProvisionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{4}
}

-- Chunk 47 --
// query.pb.go:205-207
func (m *QueryAnnualProvisionsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 48 --
// query.pb.go:208-219
func (m *QueryAnnualProvisionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAnnualProvisionsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 49 --
// query.pb.go:220-222
func (m *QueryAnnualProvisionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAnnualProvisionsRequest.Merge(m, src)
}

-- Chunk 50 --
// query.pb.go:223-225
func (m *QueryAnnualProvisionsRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 51 --
// query.pb.go:226-228
func (m *QueryAnnualProvisionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAnnualProvisionsRequest.DiscardUnknown(m)
}

-- Chunk 52 --
// query.pb.go:234-237
type QueryAnnualProvisionsResponse struct {
	// annual_provisions is the current minting annual provisions value.
	AnnualProvisions cosmossdk_io_math.LegacyDec `protobuf:"bytes,1,opt,name=annual_provisions,json=annualProvisions,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"annual_provisions"`
}

-- Chunk 53 --
// query.pb.go:239-239
func (m *QueryAnnualProvisionsResponse) Reset()         { *m = QueryAnnualProvisionsResponse{} }

-- Chunk 54 --
// query.pb.go:240-240
func (m *QueryAnnualProvisionsResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 55 --
// query.pb.go:241-241
func (*QueryAnnualProvisionsResponse) ProtoMessage()    {}

-- Chunk 56 --
// query.pb.go:242-244
func (*QueryAnnualProvisionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb90e843d441617e, []int{5}
}

-- Chunk 57 --
// query.pb.go:245-247
func (m *QueryAnnualProvisionsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 58 --
// query.pb.go:248-259
func (m *QueryAnnualProvisionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryAnnualProvisionsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 59 --
// query.pb.go:260-262
func (m *QueryAnnualProvisionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryAnnualProvisionsResponse.Merge(m, src)
}

-- Chunk 60 --
// query.pb.go:263-265
func (m *QueryAnnualProvisionsResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 61 --
// query.pb.go:266-268
func (m *QueryAnnualProvisionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryAnnualProvisionsResponse.DiscardUnknown(m)
}

-- Chunk 62 --
// query.pb.go:272-279
func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "xion.mint.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "xion.mint.v1.QueryParamsResponse")
	proto.RegisterType((*QueryInflationRequest)(nil), "xion.mint.v1.QueryInflationRequest")
	proto.RegisterType((*QueryInflationResponse)(nil), "xion.mint.v1.QueryInflationResponse")
	proto.RegisterType((*QueryAnnualProvisionsRequest)(nil), "xion.mint.v1.QueryAnnualProvisionsRequest")
	proto.RegisterType((*QueryAnnualProvisionsResponse)(nil), "xion.mint.v1.QueryAnnualProvisionsResponse")
}

-- Chunk 63 --
// query.pb.go:281-281
func init() { proto.RegisterFile("xion/mint/v1/query.proto", fileDescriptor_cb90e843d441617e) }

-- Chunk 64 --
// query.pb.go:328-335
type QueryClient interface {
	// Params returns the total set of minting parameters.
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
	// Inflation returns the current minting inflation value.
	Inflation(ctx context.Context, in *QueryInflationRequest, opts ...grpc.CallOption) (*QueryInflationResponse, error)
	// AnnualProvisions current minting annual provisions value.
	AnnualProvisions(ctx context.Context, in *QueryAnnualProvisionsRequest, opts ...grpc.CallOption) (*QueryAnnualProvisionsResponse, error)
}

-- Chunk 65 --
// query.pb.go:337-339
type queryClient struct {
	cc grpc1.ClientConn
}

-- Chunk 66 --
// query.pb.go:341-343
func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

-- Chunk 67 --
// query.pb.go:345-352
func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/xion.mint.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 68 --
// query.pb.go:354-361
func (c *queryClient) Inflation(ctx context.Context, in *QueryInflationRequest, opts ...grpc.CallOption) (*QueryInflationResponse, error) {
	out := new(QueryInflationResponse)
	err := c.cc.Invoke(ctx, "/xion.mint.v1.Query/Inflation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 69 --
// query.pb.go:363-370
func (c *queryClient) AnnualProvisions(ctx context.Context, in *QueryAnnualProvisionsRequest, opts ...grpc.CallOption) (*QueryAnnualProvisionsResponse, error) {
	out := new(QueryAnnualProvisionsResponse)
	err := c.cc.Invoke(ctx, "/xion.mint.v1.Query/AnnualProvisions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 70 --
// query.pb.go:373-380
type QueryServer interface {
	// Params returns the total set of minting parameters.
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
	// Inflation returns the current minting inflation value.
	Inflation(context.Context, *QueryInflationRequest) (*QueryInflationResponse, error)
	// AnnualProvisions current minting annual provisions value.
	AnnualProvisions(context.Context, *QueryAnnualProvisionsRequest) (*QueryAnnualProvisionsResponse, error)
}

-- Chunk 71 --
// query.pb.go:383-384
type UnimplementedQueryServer struct {
}

-- Chunk 72 --
// query.pb.go:386-388
func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}

-- Chunk 73 --
// query.pb.go:389-391
func (*UnimplementedQueryServer) Inflation(ctx context.Context, req *QueryInflationRequest) (*QueryInflationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Inflation not implemented")
}

-- Chunk 74 --
// query.pb.go:392-394
func (*UnimplementedQueryServer) AnnualProvisions(ctx context.Context, req *QueryAnnualProvisionsRequest) (*QueryAnnualProvisionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnualProvisions not implemented")
}

-- Chunk 75 --
// query.pb.go:396-398
func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

-- Chunk 76 --
// query.pb.go:400-416
func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.mint.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 77 --
// query.pb.go:418-434
func _Query_Inflation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryInflationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Inflation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.mint.v1.Query/Inflation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Inflation(ctx, req.(*QueryInflationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 78 --
// query.pb.go:436-452
func _Query_AnnualProvisions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryAnnualProvisionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).AnnualProvisions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.mint.v1.Query/AnnualProvisions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).AnnualProvisions(ctx, req.(*QueryAnnualProvisionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 79 --
// query.pb.go:475-483
func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 80 --
// query.pb.go:485-488
func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 81 --
// query.pb.go:490-496
func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 82 --
// query.pb.go:498-506
func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 83 --
// query.pb.go:508-511
func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 84 --
// query.pb.go:513-529
func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 85 --
// query.pb.go:531-539
func (m *QueryInflationRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 86 --
// query.pb.go:541-544
func (m *QueryInflationRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 87 --
// query.pb.go:546-552
func (m *QueryInflationRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 88 --
// query.pb.go:554-562
func (m *QueryInflationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 89 --
// query.pb.go:564-567
func (m *QueryInflationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 90 --
// query.pb.go:569-585
func (m *QueryInflationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Inflation.Size()
		i -= size
		if _, err := m.Inflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 91 --
// query.pb.go:587-595
func (m *QueryAnnualProvisionsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 92 --
// query.pb.go:597-600
func (m *QueryAnnualProvisionsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 93 --
// query.pb.go:602-608
func (m *QueryAnnualProvisionsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 94 --
// query.pb.go:610-618
func (m *QueryAnnualProvisionsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 95 --
// query.pb.go:620-623
func (m *QueryAnnualProvisionsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 96 --
// query.pb.go:625-641
func (m *QueryAnnualProvisionsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.AnnualProvisions.Size()
		i -= size
		if _, err := m.AnnualProvisions.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 97 --
// query.pb.go:643-653
func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 98 --
// query.pb.go:654-661
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 99 --
// query.pb.go:663-672
func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 100 --
// query.pb.go:674-681
func (m *QueryInflationRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 101 --
// query.pb.go:683-692
func (m *QueryInflationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Inflation.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 102 --
// query.pb.go:694-701
func (m *QueryAnnualProvisionsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 103 --
// query.pb.go:703-712
func (m *QueryAnnualProvisionsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.AnnualProvisions.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 104 --
// query.pb.go:714-716
func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 105 --
// query.pb.go:717-719
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 106 --
// query.pb.go:720-769
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 107 --
// query.pb.go:770-852
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 108 --
// query.pb.go:853-902
func (m *QueryInflationRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInflationRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInflationRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 109 --
// query.pb.go:903-985
func (m *QueryInflationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInflationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInflationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inflation", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Inflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 110 --
// query.pb.go:986-1035
func (m *QueryAnnualProvisionsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAnnualProvisionsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAnnualProvisionsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 111 --
// query.pb.go:1036-1118
func (m *QueryAnnualProvisionsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryAnnualProvisionsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryAnnualProvisionsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnnualProvisions", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AnnualProvisions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 112 --
// query.pb.go:1119-1196
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/mint/types/tx.pb.go ===

-- Chunk 1 --
// tx.pb.go:37-45
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/mint parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

-- Chunk 2 --
// tx.pb.go:47-47
func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }

-- Chunk 3 --
// tx.pb.go:48-48
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// tx.pb.go:49-49
func (*MsgUpdateParams) ProtoMessage()    {}

-- Chunk 5 --
// tx.pb.go:50-52
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2853045c47be63f, []int{0}
}

-- Chunk 6 --
// tx.pb.go:53-55
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// tx.pb.go:56-67
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// tx.pb.go:68-70
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}

-- Chunk 9 --
// tx.pb.go:71-73
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// tx.pb.go:74-76
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

-- Chunk 11 --
// tx.pb.go:80-85
func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

-- Chunk 12 --
// tx.pb.go:87-92
func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 13 --
// tx.pb.go:98-99
type MsgUpdateParamsResponse struct {
}

-- Chunk 14 --
// tx.pb.go:101-101
func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }

-- Chunk 15 --
// tx.pb.go:102-102
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 16 --
// tx.pb.go:103-103
func (*MsgUpdateParamsResponse) ProtoMessage()    {}

-- Chunk 17 --
// tx.pb.go:104-106
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2853045c47be63f, []int{1}
}

-- Chunk 18 --
// tx.pb.go:107-109
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 19 --
// tx.pb.go:110-121
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 20 --
// tx.pb.go:122-124
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}

-- Chunk 21 --
// tx.pb.go:125-127
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 22 --
// tx.pb.go:128-130
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

-- Chunk 23 --
// tx.pb.go:134-137
func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "xion.mint.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "xion.mint.v1.MsgUpdateParamsResponse")
}

-- Chunk 24 --
// tx.pb.go:139-139
func init() { proto.RegisterFile("xion/mint/v1/tx.proto", fileDescriptor_b2853045c47be63f) }

-- Chunk 25 --
// tx.pb.go:178-184
type MsgClient interface {
	// UpdateParams defines a governance operation for updating the x/mint module
	// parameters. The authority is defaults to the x/gov module account.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

-- Chunk 26 --
// tx.pb.go:186-188
type msgClient struct {
	cc grpc1.ClientConn
}

-- Chunk 27 --
// tx.pb.go:190-192
func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

-- Chunk 28 --
// tx.pb.go:194-201
func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/xion.mint.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 29 --
// tx.pb.go:204-210
type MsgServer interface {
	// UpdateParams defines a governance operation for updating the x/mint module
	// parameters. The authority is defaults to the x/gov module account.
	//
	// Since: cosmos-sdk 0.47
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

-- Chunk 30 --
// tx.pb.go:213-214
type UnimplementedMsgServer struct {
}

-- Chunk 31 --
// tx.pb.go:216-218
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

-- Chunk 32 --
// tx.pb.go:220-222
func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

-- Chunk 33 --
// tx.pb.go:224-240
func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.mint.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 34 --
// tx.pb.go:255-263
func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 35 --
// tx.pb.go:265-268
func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 36 --
// tx.pb.go:270-293
func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 37 --
// tx.pb.go:295-303
func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 38 --
// tx.pb.go:305-308
func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 39 --
// tx.pb.go:310-316
func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 40 --
// tx.pb.go:318-328
func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 41 --
// tx.pb.go:329-342
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

-- Chunk 42 --
// tx.pb.go:344-351
func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 43 --
// tx.pb.go:353-355
func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 44 --
// tx.pb.go:356-358
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 45 --
// tx.pb.go:359-473
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 46 --
// tx.pb.go:474-523
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 47 --
// tx.pb.go:524-601
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/mint/types/msgs.go ===

-- Chunk 1 --
// msgs.go:12-14
func (m MsgUpdateParams) GetSignBytes() []byte {
	return sdk.MustSortJSON(amino.MustMarshalJSON(&m))
}

-- Chunk 2 --
// msgs.go:17-20
func (m *MsgUpdateParams) GetSigners() []sdk.AccAddress {
	addr, _ := sdk.AccAddressFromBech32(m.Authority)
	return []sdk.AccAddress{addr}
}

-- Chunk 3 --
// msgs.go:23-33
func (m *MsgUpdateParams) ValidateBasic() error {
	if _, err := sdk.AccAddressFromBech32(m.Authority); err != nil {
		return errorsmod.Wrap(err, "invalid authority address")
	}

	if err := m.Params.Validate(); err != nil {
		return err
	}

	return nil
}

=== File: x/mint/types/genesis.go ===

-- Chunk 1 --
// genesis.go:14-14
type InflationCalculationFn func(ctx sdk.Context, minter Minter, params Params, bondedRatio math.LegacyDec) math.LegacyDec

-- Chunk 2 --
// genesis.go:17-19
func DefaultInflationCalculationFn(_ sdk.Context, minter Minter, params Params, bondedRatio math.LegacyDec) math.LegacyDec {
	return minter.NextInflationRate(params, bondedRatio)
}

-- Chunk 3 --
// genesis.go:22-27
func NewGenesisState(minter Minter, params Params) *GenesisState {
	return &GenesisState{
		Minter: minter,
		Params: params,
	}
}

-- Chunk 4 --
// genesis.go:30-35
func DefaultGenesisState() *GenesisState {
	return &GenesisState{
		Minter: DefaultInitialMinter(),
		Params: DefaultParams(),
	}
}

-- Chunk 5 --
// genesis.go:39-45
func ValidateGenesis(data GenesisState) error {
	if err := data.Params.Validate(); err != nil {
		return err
	}

	return ValidateMinter(data.Minter)
}

=== File: x/mint/types/expected_keepers.go ===

-- Chunk 1 --
// expected_keepers.go:12-16
type StakingKeeper interface {
	StakingTokenSupply(ctx context.Context) (math.Int, error)
	TotalBondedTokens(ctx context.Context) (math.Int, error)
	BondedRatio(ctx context.Context) (math.LegacyDec, error)
}

-- Chunk 2 --
// expected_keepers.go:19-25
type AccountKeeper interface {
	GetModuleAddress(name string) sdk.AccAddress

	// TODO remove with genesis 2-phases refactor https://github.com/cosmos/cosmos-sdk/issues/2862
	SetModuleAccount(context.Context, sdk.ModuleAccountI)
	GetModuleAccount(ctx context.Context, moduleName string) sdk.ModuleAccountI
}

-- Chunk 3 --
// expected_keepers.go:29-35
type BankKeeper interface {
	SendCoinsFromModuleToAccount(ctx context.Context, senderModule string, recipientAddr sdk.AccAddress, amt sdk.Coins) error
	SendCoinsFromModuleToModule(ctx context.Context, senderModule, recipientModule string, amt sdk.Coins) error
	MintCoins(ctx context.Context, name string, amt sdk.Coins) error
	GetBalance(ctx context.Context, addr sdk.AccAddress, denom string) sdk.Coin
	BurnCoins(ctx context.Context, moduleName string, amt sdk.Coins) error
}

=== File: x/mint/types/params.go ===

-- Chunk 1 --
// params.go:16-25
func NewParams(mintDenom string, inflationRateChange, inflationMax, inflationMin, goalBonded math.LegacyDec, blocksPerYear uint64) Params {
	return Params{
		MintDenom:           mintDenom,
		InflationRateChange: inflationRateChange,
		InflationMax:        inflationMax,
		InflationMin:        inflationMin,
		GoalBonded:          goalBonded,
		BlocksPerYear:       blocksPerYear,
	}
}

-- Chunk 2 --
// params.go:28-37
func DefaultParams() Params {
	return Params{
		MintDenom:           sdk.DefaultBondDenom,
		InflationRateChange: math.LegacyNewDecWithPrec(13, 2),
		InflationMax:        math.LegacyNewDecWithPrec(20, 2),
		InflationMin:        math.LegacyNewDecWithPrec(7, 2),
		GoalBonded:          math.LegacyNewDecWithPrec(67, 2),
		BlocksPerYear:       uint64(60 * 60 * 8766 / 5), // assuming 5 second block times
	}
}

-- Chunk 3 --
// params.go:40-67
func (p Params) Validate() error {
	if err := validateMintDenom(p.MintDenom); err != nil {
		return err
	}
	if err := validateInflationRateChange(p.InflationRateChange); err != nil {
		return err
	}
	if err := validateInflationMax(p.InflationMax); err != nil {
		return err
	}
	if err := validateInflationMin(p.InflationMin); err != nil {
		return err
	}
	if err := validateGoalBonded(p.GoalBonded); err != nil {
		return err
	}
	if err := validateBlocksPerYear(p.BlocksPerYear); err != nil {
		return err
	}
	if p.InflationMax.LT(p.InflationMin) {
		return fmt.Errorf(
			"max inflation (%s) must be greater than or equal to min inflation (%s)",
			p.InflationMax, p.InflationMin,
		)
	}

	return nil
}

-- Chunk 4 --
// params.go:70-73
func (p Params) String() string {
	out, _ := yaml.Marshal(p)
	return string(out)
}

-- Chunk 5 --
// params.go:75-89
func validateMintDenom(i interface{}) error {
	v, ok := i.(string)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if strings.TrimSpace(v) == "" {
		return errors.New("mint denom cannot be blank")
	}
	if err := sdk.ValidateDenom(v); err != nil {
		return err
	}

	return nil
}

-- Chunk 6 --
// params.go:91-108
func validateInflationRateChange(i interface{}) error {
	v, ok := i.(math.LegacyDec)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if v.IsNil() {
		return fmt.Errorf("inflation rate change cannot be nil: %s", v)
	}
	if v.IsNegative() {
		return fmt.Errorf("inflation rate change cannot be negative: %s", v)
	}
	if v.GT(math.LegacyOneDec()) {
		return fmt.Errorf("inflation rate change too large: %s", v)
	}

	return nil
}

-- Chunk 7 --
// params.go:110-127
func validateInflationMax(i interface{}) error {
	v, ok := i.(math.LegacyDec)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if v.IsNil() {
		return fmt.Errorf("max inflation cannot be nil: %s", v)
	}
	if v.IsNegative() {
		return fmt.Errorf("max inflation cannot be negative: %s", v)
	}
	if v.GT(math.LegacyOneDec()) {
		return fmt.Errorf("max inflation too large: %s", v)
	}

	return nil
}

-- Chunk 8 --
// params.go:129-146
func validateInflationMin(i interface{}) error {
	v, ok := i.(math.LegacyDec)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if v.IsNil() {
		return fmt.Errorf("min inflation cannot be nil: %s", v)
	}
	if v.IsNegative() {
		return fmt.Errorf("min inflation cannot be negative: %s", v)
	}
	if v.GT(math.LegacyOneDec()) {
		return fmt.Errorf("min inflation too large: %s", v)
	}

	return nil
}

-- Chunk 9 --
// params.go:148-165
func validateGoalBonded(i interface{}) error {
	v, ok := i.(math.LegacyDec)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if v.IsNil() {
		return fmt.Errorf("goal bonded cannot be nil: %s", v)
	}
	if v.IsNegative() || v.IsZero() {
		return fmt.Errorf("goal bonded must be positive: %s", v)
	}
	if v.GT(math.LegacyOneDec()) {
		return fmt.Errorf("goal bonded too large: %s", v)
	}

	return nil
}

-- Chunk 10 --
// params.go:167-178
func validateBlocksPerYear(i interface{}) error {
	v, ok := i.(uint64)
	if !ok {
		return fmt.Errorf("invalid parameter type: %T", i)
	}

	if v == 0 {
		return fmt.Errorf("blocks per year must be positive: %d", v)
	}

	return nil
}

=== File: x/mint/types/query.pb.gw.go ===

-- Chunk 1 --
// query.pb.gw.go:36-43
func request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := client.Params(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 2 --
// query.pb.gw.go:45-52
func local_request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := server.Params(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 3 --
// query.pb.gw.go:54-61
func request_Query_Inflation_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryInflationRequest
	var metadata runtime.ServerMetadata

	msg, err := client.Inflation(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 4 --
// query.pb.gw.go:63-70
func local_request_Query_Inflation_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryInflationRequest
	var metadata runtime.ServerMetadata

	msg, err := server.Inflation(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 5 --
// query.pb.gw.go:72-79
func request_Query_AnnualProvisions_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryAnnualProvisionsRequest
	var metadata runtime.ServerMetadata

	msg, err := client.AnnualProvisions(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 6 --
// query.pb.gw.go:81-88
func local_request_Query_AnnualProvisions_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryAnnualProvisionsRequest
	var metadata runtime.ServerMetadata

	msg, err := server.AnnualProvisions(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 7 --
// query.pb.gw.go:94-166
func RegisterQueryHandlerServer(ctx context.Context, mux *runtime.ServeMux, server QueryServer) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_Params_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_Inflation_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_Inflation_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Inflation_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AnnualProvisions_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_AnnualProvisions_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AnnualProvisions_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

-- Chunk 8 --
// query.pb.gw.go:170-191
func RegisterQueryHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
	conn, err := grpc.Dial(endpoint, opts...)
	if err != nil {
		return err
	}
	defer func() {
		if err != nil {
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
			return
		}
		go func() {
			<-ctx.Done()
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
		}()
	}()

	return RegisterQueryHandler(ctx, mux, conn)
}

-- Chunk 9 --
// query.pb.gw.go:195-197
func RegisterQueryHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
	return RegisterQueryHandlerClient(ctx, mux, NewQueryClient(conn))
}

-- Chunk 10 --
// query.pb.gw.go:204-267
func RegisterQueryHandlerClient(ctx context.Context, mux *runtime.ServeMux, client QueryClient) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_Params_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_Inflation_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_Inflation_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Inflation_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	mux.Handle("GET", pattern_Query_AnnualProvisions_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_AnnualProvisions_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_AnnualProvisions_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

=== File: x/mint/types/event.pb.go ===

-- Chunk 1 --
// event.pb.go:30-38
type MintIncentiveTokens struct {
	BondedRatio      cosmossdk_io_math.LegacyDec `protobuf:"bytes,1,opt,name=bonded_ratio,json=bondedRatio,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"bonded_ratio" yaml:"bonded_ratio"`
	Inflation        cosmossdk_io_math.LegacyDec `protobuf:"bytes,2,opt,name=inflation,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"inflation" yaml:"inflation"`
	AnnualProvisions cosmossdk_io_math.LegacyDec `protobuf:"bytes,3,opt,name=annual_provisions,json=annualProvisions,proto3,customtype=cosmossdk.io/math.LegacyDec" json:"annual_provisions" yaml:"annual_provisions"`
	NeededAmount     uint64                      `protobuf:"varint,4,opt,name=needed_amount,json=neededAmount,proto3" json:"needed_amount,omitempty"`
	CollectedAmount  uint64                      `protobuf:"varint,5,opt,name=collected_amount,json=collectedAmount,proto3" json:"collected_amount,omitempty"`
	MintedAmount     uint64                      `protobuf:"varint,6,opt,name=minted_amount,json=mintedAmount,proto3" json:"minted_amount,omitempty"`
	BurnedAmount     uint64                      `protobuf:"varint,7,opt,name=burned_amount,json=burnedAmount,proto3" json:"burned_amount,omitempty"`
}

-- Chunk 2 --
// event.pb.go:40-40
func (m *MintIncentiveTokens) Reset()         { *m = MintIncentiveTokens{} }

-- Chunk 3 --
// event.pb.go:41-41
func (m *MintIncentiveTokens) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// event.pb.go:42-42
func (*MintIncentiveTokens) ProtoMessage()    {}

-- Chunk 5 --
// event.pb.go:43-45
func (*MintIncentiveTokens) Descriptor() ([]byte, []int) {
	return fileDescriptor_a4b507e362b6edbc, []int{0}
}

-- Chunk 6 --
// event.pb.go:46-48
func (m *MintIncentiveTokens) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// event.pb.go:49-60
func (m *MintIncentiveTokens) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MintIncentiveTokens.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// event.pb.go:61-63
func (m *MintIncentiveTokens) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MintIncentiveTokens.Merge(m, src)
}

-- Chunk 9 --
// event.pb.go:64-66
func (m *MintIncentiveTokens) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// event.pb.go:67-69
func (m *MintIncentiveTokens) XXX_DiscardUnknown() {
	xxx_messageInfo_MintIncentiveTokens.DiscardUnknown(m)
}

-- Chunk 11 --
// event.pb.go:73-78
func (m *MintIncentiveTokens) GetNeededAmount() uint64 {
	if m != nil {
		return m.NeededAmount
	}
	return 0
}

-- Chunk 12 --
// event.pb.go:80-85
func (m *MintIncentiveTokens) GetCollectedAmount() uint64 {
	if m != nil {
		return m.CollectedAmount
	}
	return 0
}

-- Chunk 13 --
// event.pb.go:87-92
func (m *MintIncentiveTokens) GetMintedAmount() uint64 {
	if m != nil {
		return m.MintedAmount
	}
	return 0
}

-- Chunk 14 --
// event.pb.go:94-99
func (m *MintIncentiveTokens) GetBurnedAmount() uint64 {
	if m != nil {
		return m.BurnedAmount
	}
	return 0
}

-- Chunk 15 --
// event.pb.go:101-103
func init() {
	proto.RegisterType((*MintIncentiveTokens)(nil), "xion.mint.v1.MintIncentiveTokens")
}

-- Chunk 16 --
// event.pb.go:105-105
func init() { proto.RegisterFile("xion/mint/v1/event.proto", fileDescriptor_a4b507e362b6edbc) }

-- Chunk 17 --
// event.pb.go:136-144
func (m *MintIncentiveTokens) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 18 --
// event.pb.go:146-149
func (m *MintIncentiveTokens) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 19 --
// event.pb.go:151-207
func (m *MintIncentiveTokens) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BurnedAmount != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.BurnedAmount))
		i--
		dAtA[i] = 0x38
	}
	if m.MintedAmount != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.MintedAmount))
		i--
		dAtA[i] = 0x30
	}
	if m.CollectedAmount != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.CollectedAmount))
		i--
		dAtA[i] = 0x28
	}
	if m.NeededAmount != 0 {
		i = encodeVarintEvent(dAtA, i, uint64(m.NeededAmount))
		i--
		dAtA[i] = 0x20
	}
	{
		size := m.AnnualProvisions.Size()
		i -= size
		if _, err := m.AnnualProvisions.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEvent(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.Inflation.Size()
		i -= size
		if _, err := m.Inflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEvent(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.BondedRatio.Size()
		i -= size
		if _, err := m.BondedRatio.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintEvent(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 20 --
// event.pb.go:209-219
func encodeVarintEvent(dAtA []byte, offset int, v uint64) int {
	offset -= sovEvent(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 21 --
// event.pb.go:220-245
func (m *MintIncentiveTokens) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.BondedRatio.Size()
	n += 1 + l + sovEvent(uint64(l))
	l = m.Inflation.Size()
	n += 1 + l + sovEvent(uint64(l))
	l = m.AnnualProvisions.Size()
	n += 1 + l + sovEvent(uint64(l))
	if m.NeededAmount != 0 {
		n += 1 + sovEvent(uint64(m.NeededAmount))
	}
	if m.CollectedAmount != 0 {
		n += 1 + sovEvent(uint64(m.CollectedAmount))
	}
	if m.MintedAmount != 0 {
		n += 1 + sovEvent(uint64(m.MintedAmount))
	}
	if m.BurnedAmount != 0 {
		n += 1 + sovEvent(uint64(m.BurnedAmount))
	}
	return n
}

-- Chunk 22 --
// event.pb.go:247-249
func sovEvent(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 23 --
// event.pb.go:250-252
func sozEvent(x uint64) (n int) {
	return sovEvent(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 24 --
// event.pb.go:253-402
func (m *MintIncentiveTokens) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MintIncentiveTokens: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MintIncentiveTokens: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BondedRatio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BondedRatio.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inflation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Inflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AnnualProvisions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEvent
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEvent
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AnnualProvisions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NeededAmount", wireType)
			}
			m.NeededAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NeededAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}

-- Chunk 25 --
// event.pb.go:403-480
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CollectedAmount", wireType)
			}
			m.CollectedAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CollectedAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintedAmount", wireType)
			}
			m.MintedAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MintedAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BurnedAmount", wireType)
			}
			m.BurnedAmount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BurnedAmount |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipEvent(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthEvent
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 26 --
// event.pb.go:481-558
func skipEvent(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEvent
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEvent
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEvent
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEvent
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEvent
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/mint/types/keys.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/mint/types/keys.go:1-20
package types

var (
	// MinterKey is the key to use for the keeper store.
	MinterKey = []byte{0x00}
	ParamsKey = []byte{0x01}
)

const (
	// module name
	ModuleName = "mint"

	// StoreKey is the default store key for mint
	StoreKey = ModuleName

	// Query endpoints supported by the minting querier
	QueryParameters       = "parameters"
	QueryInflation        = "inflation"
	QueryAnnualProvisions = "annual_provisions"
)

=== File: x/mint/client/cli/query_test.go ===

-- Chunk 1 --
// query_test.go:25-86
func TestGetCmdQueryParams(t *testing.T) {
	encCfg := testutilmod.MakeTestEncodingConfig(mint.AppModuleBasic{})
	kr := keyring.NewInMemory(encCfg.Codec)
	baseCtx := client.Context{}.
		WithKeyring(kr).
		WithTxConfig(encCfg.TxConfig).
		WithCodec(encCfg.Codec).
		WithClient(clitestutil.MockCometRPC{Client: rpcclientmock.Client{}}).
		WithAccountRetriever(client.MockAccountRetriever{}).
		WithOutput(io.Discard).
		WithChainID("test-chain")

	cmd := mintcli.GetCmdQueryParams()

	testCases := []struct {
		name           string
		flagArgs       []string
		expCmdOutput   string
		expectedOutput string
	}{
		{
			"json output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=json", flags.FlagOutput)},
			`[--height=1 --output=json]`,
			`{"mint_denom":"","inflation_rate_change":"0","inflation_max":"0","inflation_min":"0","goal_bonded":"0","blocks_per_year":"0"}`,
		},
		{
			"text output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=text", flags.FlagOutput)},
			`[--height=1 --output=text]`,
			`blocks_per_year: "0"
goal_bonded: "0"
inflation_max: "0"
inflation_min: "0"
inflation_rate_change: "0"
mint_denom: ""`,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			ctx := svrcmd.CreateExecuteContext(context.Background())

			cmd.SetOut(io.Discard)
			require.NotNil(t, cmd)

			cmd.SetContext(ctx)
			cmd.SetArgs(tc.flagArgs)

			require.NoError(t, client.SetCmdClientContextHandler(baseCtx, cmd))

			if len(tc.flagArgs) != 0 {
				require.Contains(t, fmt.Sprint(cmd), "params [] [] Query the current minting parameters")
				require.Contains(t, fmt.Sprint(cmd), tc.expCmdOutput)
			}

			out, err := clitestutil.ExecTestCLICmd(baseCtx, cmd, tc.flagArgs)
			require.NoError(t, err)
			require.Equal(t, tc.expectedOutput, strings.TrimSpace(out.String()))
		})
	}
}

-- Chunk 2 --
// query_test.go:88-144
func TestGetCmdQueryInflation(t *testing.T) {
	encCfg := testutilmod.MakeTestEncodingConfig(mint.AppModuleBasic{})
	kr := keyring.NewInMemory(encCfg.Codec)
	baseCtx := client.Context{}.
		WithKeyring(kr).
		WithTxConfig(encCfg.TxConfig).
		WithCodec(encCfg.Codec).
		WithClient(clitestutil.MockCometRPC{Client: rpcclientmock.Client{}}).
		WithAccountRetriever(client.MockAccountRetriever{}).
		WithOutput(io.Discard).
		WithChainID("test-chain")

	cmd := mintcli.GetCmdQueryInflation()

	testCases := []struct {
		name           string
		flagArgs       []string
		expCmdOutput   string
		expectedOutput string
	}{
		{
			"json output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=json", flags.FlagOutput)},
			`[--height=1 --output=json]`,
			`<nil>`,
		},
		{
			"text output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=text", flags.FlagOutput)},
			`[--height=1 --output=text]`,
			`<nil>`,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			ctx := svrcmd.CreateExecuteContext(context.Background())

			cmd.SetOut(io.Discard)
			require.NotNil(t, cmd)

			cmd.SetContext(ctx)
			cmd.SetArgs(tc.flagArgs)

			require.NoError(t, client.SetCmdClientContextHandler(baseCtx, cmd))

			if len(tc.flagArgs) != 0 {
				require.Contains(t, fmt.Sprint(cmd), "inflation [] [] Query the current minting inflation value")
				require.Contains(t, fmt.Sprint(cmd), tc.expCmdOutput)
			}

			out, err := clitestutil.ExecTestCLICmd(baseCtx, cmd, tc.flagArgs)
			require.NoError(t, err)
			require.Equal(t, tc.expectedOutput, strings.TrimSpace(out.String()))
		})
	}
}

-- Chunk 3 --
// query_test.go:146-202
func TestGetCmdQueryAnnualProvisions(t *testing.T) {
	encCfg := testutilmod.MakeTestEncodingConfig(mint.AppModuleBasic{})
	kr := keyring.NewInMemory(encCfg.Codec)
	baseCtx := client.Context{}.
		WithKeyring(kr).
		WithTxConfig(encCfg.TxConfig).
		WithCodec(encCfg.Codec).
		WithClient(clitestutil.MockCometRPC{Client: rpcclientmock.Client{}}).
		WithAccountRetriever(client.MockAccountRetriever{}).
		WithOutput(io.Discard).
		WithChainID("test-chain")

	cmd := mintcli.GetCmdQueryAnnualProvisions()

	testCases := []struct {
		name           string
		flagArgs       []string
		expCmdOutput   string
		expectedOutput string
	}{
		{
			"json output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=json", flags.FlagOutput)},
			`[--height=1 --output=json]`,
			`<nil>`,
		},
		{
			"text output",
			[]string{fmt.Sprintf("--%s=1", flags.FlagHeight), fmt.Sprintf("--%s=text", flags.FlagOutput)},
			`[--height=1 --output=text]`,
			`<nil>`,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			ctx := svrcmd.CreateExecuteContext(context.Background())

			cmd.SetOut(io.Discard)
			require.NotNil(t, cmd)

			cmd.SetContext(ctx)
			cmd.SetArgs(tc.flagArgs)

			require.NoError(t, client.SetCmdClientContextHandler(baseCtx, cmd))

			if len(tc.flagArgs) != 0 {
				require.Contains(t, fmt.Sprint(cmd), "annual-provisions [] [] Query the current minting annual provisions value")
				require.Contains(t, fmt.Sprint(cmd), tc.expCmdOutput)
			}

			out, err := clitestutil.ExecTestCLICmd(baseCtx, cmd, tc.flagArgs)
			require.NoError(t, err)
			require.Equal(t, tc.expectedOutput, strings.TrimSpace(out.String()))
		})
	}
}

=== File: x/mint/client/cli/query.go ===

-- Chunk 1 --
// query.go:15-31
func GetQueryCmd() *cobra.Command {
	mintingQueryCmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      "Querying commands for the minting module",
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	mintingQueryCmd.AddCommand(
		GetCmdQueryParams(),
		GetCmdQueryInflation(),
		GetCmdQueryAnnualProvisions(),
	)

	return mintingQueryCmd
}

-- Chunk 2 --
// query.go:35-60
func GetCmdQueryParams() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "params",
		Short: "Query the current minting parameters",
		Args:  cobra.NoArgs,
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}
			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryParamsRequest{}
			res, err := queryClient.Params(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(&res.Params)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 3 --
// query.go:64-89
func GetCmdQueryInflation() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "inflation",
		Short: "Query the current minting inflation value",
		Args:  cobra.NoArgs,
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}
			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryInflationRequest{}
			res, err := queryClient.Inflation(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintString(fmt.Sprintf("%s\n", res.Inflation))
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 4 --
// query.go:93-118
func GetCmdQueryAnnualProvisions() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "annual-provisions",
		Short: "Query the current minting annual provisions value",
		Args:  cobra.NoArgs,
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}
			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryAnnualProvisionsRequest{}
			res, err := queryClient.AnnualProvisions(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintString(fmt.Sprintf("%s\n", res.AnnualProvisions))
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/mint/simulation/decoder.go ===

-- Chunk 1 --
// decoder.go:15-27
func NewDecodeStore(cdc codec.Codec) func(kvA, kvB kv.Pair) string {
	return func(kvA, kvB kv.Pair) string {
		switch {
		case bytes.Equal(kvA.Key, types.MinterKey):
			var minterA, minterB types.Minter
			cdc.MustUnmarshal(kvA.Value, &minterA)
			cdc.MustUnmarshal(kvB.Value, &minterB)
			return fmt.Sprintf("%v\n%v", minterA, minterB)
		default:
			panic(fmt.Sprintf("invalid mint key %X", kvA.Key))
		}
	}
}

=== File: x/mint/simulation/genesis_test.go ===

-- Chunk 1 --
// genesis_test.go:23-58
func TestRandomizedGenState(t *testing.T) {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})

	s := rand.NewSource(1)
	r := rand.New(s)

	simState := module.SimulationState{
		AppParams:    make(simtypes.AppParams),
		Cdc:          encCfg.Codec,
		Rand:         r,
		NumBonded:    3,
		Accounts:     simtypes.RandomAccounts(r, 3),
		InitialStake: math.NewInt(1000),
		GenState:     make(map[string]json.RawMessage),
	}

	simulation.RandomizedGenState(&simState)

	var mintGenesis types.GenesisState
	simState.Cdc.MustUnmarshalJSON(simState.GenState[types.ModuleName], &mintGenesis)

	dec1, _ := math.LegacyNewDecFromStr("0.670000000000000000")
	dec2, _ := math.LegacyNewDecFromStr("0.200000000000000000")
	dec3, _ := math.LegacyNewDecFromStr("0.070000000000000000")

	require.Equal(t, uint64(6311520), mintGenesis.Params.BlocksPerYear)
	require.Equal(t, dec1, mintGenesis.Params.GoalBonded)
	require.Equal(t, dec2, mintGenesis.Params.InflationMax)
	require.Equal(t, dec3, mintGenesis.Params.InflationMin)
	require.Equal(t, "stake", mintGenesis.Params.MintDenom)
	require.Equal(t, "0stake", mintGenesis.Minter.BlockProvision(mintGenesis.Params).String())
	require.Equal(t, "0.170000000000000000", mintGenesis.Minter.NextAnnualProvisions(mintGenesis.Params, math.OneInt()).String())
	require.Equal(t, "0.169999926644441493", mintGenesis.Minter.NextInflationRate(mintGenesis.Params, math.LegacyOneDec()).String())
	require.Equal(t, "0.170000000000000000", mintGenesis.Minter.Inflation.String())
	require.Equal(t, "0.000000000000000000", mintGenesis.Minter.AnnualProvisions.String())
}

-- Chunk 2 --
// genesis_test.go:61-85
func TestRandomizedGenState1(t *testing.T) {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})

	s := rand.NewSource(1)
	r := rand.New(s)
	// all these tests will panic
	tests := []struct {
		simState module.SimulationState
		panicMsg string
	}{
		{ // panic => reason: incomplete initialization of the simState
			module.SimulationState{}, "invalid memory address or nil pointer dereference"},
		{ // panic => reason: incomplete initialization of the simState
			module.SimulationState{
				AppParams: make(simtypes.AppParams),
				Cdc:       encCfg.Codec,
				Rand:      r,
			}, "assignment to entry in nil map"},
	}

	for _, tt := range tests {
		ttt := tt
		require.Panicsf(t, func() { simulation.RandomizedGenState(&ttt.simState) }, tt.panicMsg)
	}
}

=== File: x/mint/simulation/proposals_test.go ===

-- Chunk 1 --
// proposals_test.go:21-50
func TestProposalMsgs(t *testing.T) {
	// initialize parameters
	s := rand.NewSource(1)
	r := rand.New(s)

	ctx := sdk.NewContext(nil, tmproto.Header{}, true, nil)
	accounts := simtypes.RandomAccounts(r, 3)

	// execute ProposalMsgs function
	weightedProposalMsgs := simulation.ProposalMsgs()
	assert.Assert(t, len(weightedProposalMsgs) == 1)

	w0 := weightedProposalMsgs[0]

	// tests w0 interface:
	assert.Equal(t, simulation.OpWeightMsgUpdateParams, w0.AppParamsKey())
	assert.Equal(t, simulation.DefaultWeightMsgUpdateParams, w0.DefaultWeight())

	msg := w0.MsgSimulatorFn()(r, ctx, accounts)
	msgUpdateParams, ok := msg.(*types.MsgUpdateParams)
	assert.Assert(t, ok)

	assert.Equal(t, sdk.AccAddress(address.Module("gov")).String(), msgUpdateParams.Authority)
	assert.Equal(t, uint64(122877), msgUpdateParams.Params.BlocksPerYear)
	assert.DeepEqual(t, math.LegacyNewDecWithPrec(95, 2), msgUpdateParams.Params.GoalBonded)
	assert.DeepEqual(t, math.LegacyNewDecWithPrec(94, 2), msgUpdateParams.Params.InflationMax)
	assert.DeepEqual(t, math.LegacyNewDecWithPrec(23, 2), msgUpdateParams.Params.InflationMin)
	assert.DeepEqual(t, math.LegacyNewDecWithPrec(89, 2), msgUpdateParams.Params.InflationRateChange)
	assert.Equal(t, "XhhuTSkuxK", msgUpdateParams.Params.MintDenom)
}

=== File: x/mint/simulation/genesis.go ===

-- Chunk 1 --
// genesis.go:28-30
func GenInflation(r *rand.Rand) math.LegacyDec {
	return math.LegacyNewDecWithPrec(int64(r.Intn(99)), 2)
}

-- Chunk 2 --
// genesis.go:33-35
func GenInflationRateChange(r *rand.Rand) math.LegacyDec {
	return math.LegacyNewDecWithPrec(int64(r.Intn(99)), 2)
}

-- Chunk 3 --
// genesis.go:38-40
func GenInflationMax(_ *rand.Rand) math.LegacyDec {
	return math.LegacyNewDecWithPrec(20, 2)
}

-- Chunk 4 --
// genesis.go:43-45
func GenInflationMin(_ *rand.Rand) math.LegacyDec {
	return math.LegacyNewDecWithPrec(7, 2)
}

-- Chunk 5 --
// genesis.go:48-50
func GenGoalBonded(_ *rand.Rand) math.LegacyDec {
	return math.LegacyNewDecWithPrec(67, 2)
}

-- Chunk 6 --
// genesis.go:53-98
func RandomizedGenState(simState *module.SimulationState) {
	// minter
	var inflation math.LegacyDec
	simState.AppParams.GetOrGenerate(
		Inflation, &inflation, simState.Rand,
		func(r *rand.Rand) { inflation = GenInflation(r) },
	)

	// params
	var inflationRateChange math.LegacyDec
	simState.AppParams.GetOrGenerate(
		InflationRateChange, &inflationRateChange, simState.Rand,
		func(r *rand.Rand) { inflationRateChange = GenInflationRateChange(r) },
	)

	var inflationMax math.LegacyDec
	simState.AppParams.GetOrGenerate(
		InflationMax, &inflationMax, simState.Rand,
		func(r *rand.Rand) { inflationMax = GenInflationMax(r) },
	)

	var inflationMin math.LegacyDec
	simState.AppParams.GetOrGenerate(
		InflationMin, &inflationMin, simState.Rand,
		func(r *rand.Rand) { inflationMin = GenInflationMin(r) },
	)

	var goalBonded math.LegacyDec
	simState.AppParams.GetOrGenerate(
		GoalBonded, &goalBonded, simState.Rand,
		func(r *rand.Rand) { goalBonded = GenGoalBonded(r) },
	)

	mintDenom := sdk.DefaultBondDenom
	blocksPerYear := uint64(60 * 60 * 8766 / 5)
	params := types.NewParams(mintDenom, inflationRateChange, inflationMax, inflationMin, goalBonded, blocksPerYear)

	mintGenesis := types.NewGenesisState(types.InitialMinter(inflation), params)

	bz, err := json.MarshalIndent(&mintGenesis, "", " ")
	if err != nil {
		panic(err)
	}
	fmt.Printf("Selected randomly generated minting parameters:\n%s\n", bz)
	simState.GenState[types.ModuleName] = simState.Cdc.MustMarshalJSON(mintGenesis)
}

=== File: x/mint/simulation/decoder_test.go ===

-- Chunk 1 --
// decoder_test.go:19-50
func TestDecodeStore(t *testing.T) {
	encCfg := moduletestutil.MakeTestEncodingConfig(mint.AppModuleBasic{})

	dec := simulation.NewDecodeStore(encCfg.Codec)

	minter := types.NewMinter(math.LegacyOneDec(), math.LegacyNewDec(15))

	kvPairs := kv.Pairs{
		Pairs: []kv.Pair{
			{Key: types.MinterKey, Value: encCfg.Codec.MustMarshal(&minter)},
			{Key: []byte{0x99}, Value: []byte{0x99}},
		},
	}
	tests := []struct {
		name        string
		expectedLog string
	}{
		{"Minter", fmt.Sprintf("%v\n%v", minter, minter)},
		{"other", ""},
	}

	for i, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			switch i {
			case len(tests) - 1:
				require.Panics(t, func() { dec(kvPairs.Pairs[i], kvPairs.Pairs[i]) }, tt.name)
			default:
				require.Equal(t, tt.expectedLog, dec(kvPairs.Pairs[i], kvPairs.Pairs[i]), tt.name)
			}
		})
	}
}

=== File: x/mint/simulation/proposals.go ===

-- Chunk 1 --
// proposals.go:24-32
func ProposalMsgs() []simtypes.WeightedProposalMsg {
	return []simtypes.WeightedProposalMsg{
		simulation.NewWeightedProposalMsg(
			OpWeightMsgUpdateParams,
			DefaultWeightMsgUpdateParams,
			SimulateMsgUpdateParams,
		),
	}
}

-- Chunk 2 --
// proposals.go:35-51
func SimulateMsgUpdateParams(r *rand.Rand, _ sdk.Context, _ []simtypes.Account) sdk.Msg {
	// use the default gov module account address as authority
	var authority sdk.AccAddress = address.Module("gov")

	params := types.DefaultParams()
	params.BlocksPerYear = math.NewInt(int64(simtypes.RandIntBetween(r, 1, 1000000))).Uint64()
	params.GoalBonded = math.LegacyNewDecWithPrec(int64(simtypes.RandIntBetween(r, 1, 100)), 2)
	params.InflationMin = math.LegacyNewDecWithPrec(int64(simtypes.RandIntBetween(r, 1, 50)), 2)
	params.InflationMax = math.LegacyNewDecWithPrec(int64(simtypes.RandIntBetween(r, 50, 100)), 2)
	params.InflationRateChange = math.LegacyNewDecWithPrec(int64(simtypes.RandIntBetween(r, 1, 100)), 2)
	params.MintDenom = simtypes.RandStringOfLength(r, 10)

	return &types.MsgUpdateParams{
		Authority: authority.String(),
		Params:    params,
	}
}

=== File: x/globalfee/README.md ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/globalfee/README.md:1-5
# Global fee module

The Global fee module is based on [Gaia's implementation](https://github.com/cosmos/gaia). Whitch is supplied by the great folks at [TGrade](https://github.com/confio/tgrade) 👋, with minor modifications. All credits and big thanks go to the original authors.

More information about Cosmoshub fee system please check [here](https://github.com/cosmos/gaia/blob/main/docs/modules/globalfee.md).

=== File: x/globalfee/alias.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/globalfee/alias.go:1-11
package globalfee

import (
	"github.com/burnt-labs/xion/x/globalfee/types"
)

const (
	ModuleName = types.ModuleName

	StoreKey = ModuleName
)

=== File: x/globalfee/querier.go ===

-- Chunk 1 --
// querier.go:14-17
type ParamSource interface {
	Get(ctx sdk.Context, key []byte, ptr interface{})
	Has(ctx sdk.Context, key []byte) bool
}

-- Chunk 2 --
// querier.go:19-21
type GrpcQuerier struct {
	paramSource ParamSource
}

-- Chunk 3 --
// querier.go:23-25
func NewGrpcQuerier(paramSource ParamSource) GrpcQuerier {
	return GrpcQuerier{paramSource: paramSource}
}

-- Chunk 4 --
// querier.go:28-51
func (g GrpcQuerier) Params(stdCtx context.Context, _ *types.QueryParamsRequest) (*types.QueryParamsResponse, error) {
	var minGasPrices sdk.DecCoins
	var bypassMinFeeMsgTypes []string
	var maxTotalBypassMinFeeMsgGasUsage uint64
	ctx := sdk.UnwrapSDKContext(stdCtx)

	if g.paramSource.Has(ctx, types.ParamStoreKeyMinGasPrices) {
		g.paramSource.Get(ctx, types.ParamStoreKeyMinGasPrices, &minGasPrices)
	}
	if g.paramSource.Has(ctx, types.ParamStoreKeyBypassMinFeeMsgTypes) {
		g.paramSource.Get(ctx, types.ParamStoreKeyBypassMinFeeMsgTypes, &bypassMinFeeMsgTypes)
	}
	if g.paramSource.Has(ctx, types.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage) {
		g.paramSource.Get(ctx, types.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage, &maxTotalBypassMinFeeMsgGasUsage)
	}

	return &types.QueryParamsResponse{
		Params: types.Params{
			MinimumGasPrices:                minGasPrices,
			BypassMinFeeMsgTypes:            bypassMinFeeMsgTypes,
			MaxTotalBypassMinFeeMsgGasUsage: maxTotalBypassMinFeeMsgGasUsage,
		},
	}, nil
}

=== File: x/globalfee/module.go ===

-- Chunk 1 --
// module.go:35-35
type AppModuleBasic struct{}

-- Chunk 2 --
// module.go:37-39
func (a AppModuleBasic) Name() string {
	return types.ModuleName
}

-- Chunk 3 --
// module.go:41-45
func (a AppModuleBasic) DefaultGenesis(cdc codec.JSONCodec) json.RawMessage {
	return cdc.MustMarshalJSON(&types.GenesisState{
		Params: types.DefaultParams(),
	})
}

-- Chunk 4 --
// module.go:47-57
func (a AppModuleBasic) ValidateGenesis(marshaler codec.JSONCodec, _ client.TxEncodingConfig, message json.RawMessage) error {
	var data types.GenesisState
	err := marshaler.UnmarshalJSON(message, &data)
	if err != nil {
		return err
	}
	if err := data.Params.ValidateBasic(); err != nil {
		return errorsmod.Wrap(err, "params")
	}
	return nil
}

-- Chunk 5 --
// module.go:59-60
func (a AppModuleBasic) RegisterInterfaces(_ codectypes.InterfaceRegistry) {
}

-- Chunk 6 --
// module.go:62-63
func (a AppModuleBasic) RegisterRESTRoutes(_ client.Context, _ *mux.Router) {
}

-- Chunk 7 --
// module.go:65-71
func (a AppModuleBasic) RegisterGRPCGatewayRoutes(clientCtx client.Context, mux *runtime.ServeMux) {
	err := types.RegisterQueryHandlerClient(context.Background(), mux, types.NewQueryClient(clientCtx))
	if err != nil {
		// same behavior as in cosmos-sdk
		panic(err)
	}
}

-- Chunk 8 --
// module.go:73-75
func (a AppModuleBasic) GetTxCmd() *cobra.Command {
	return nil
}

-- Chunk 9 --
// module.go:77-79
func (a AppModuleBasic) GetQueryCmd() *cobra.Command {
	return cli.GetQueryCmd()
}

-- Chunk 10 --
// module.go:81-82
func (a AppModuleBasic) RegisterLegacyAminoCodec(_ *codec.LegacyAmino) {
}

-- Chunk 11 --
// module.go:84-87
type AppModule struct {
	AppModuleBasic
	globalfeeSubspace paramstypes.Subspace
}

-- Chunk 12 --
// module.go:89-90
func (a AppModule) IsOnePerModuleType() {
}

-- Chunk 13 --
// module.go:92-93
func (a AppModule) IsAppModule() {
}

-- Chunk 14 --
// module.go:96-101
func NewAppModule(globalfeeSubspace paramstypes.Subspace) *AppModule {
	if !globalfeeSubspace.HasKeyTable() {
		globalfeeSubspace = globalfeeSubspace.WithKeyTable(types.ParamKeyTable())
	}
	return &AppModule{globalfeeSubspace: globalfeeSubspace}
}

-- Chunk 15 --
// module.go:103-109
func (a AppModule) InitGenesis(ctx sdk.Context, marshaler codec.JSONCodec, message json.RawMessage) []abci.ValidatorUpdate {
	var genesisState types.GenesisState
	marshaler.MustUnmarshalJSON(message, &genesisState)

	a.globalfeeSubspace.SetParamSet(ctx, &genesisState.Params)
	return nil
}

-- Chunk 16 --
// module.go:111-115
func (a AppModule) ExportGenesis(ctx sdk.Context, marshaler codec.JSONCodec) json.RawMessage {
	var genState types.GenesisState
	a.globalfeeSubspace.GetParamSet(ctx, &genState.Params)
	return marshaler.MustMarshalJSON(&genState)
}

-- Chunk 17 --
// module.go:117-118
func (a AppModule) RegisterInvariants(_ sdk.InvariantRegistry) {
}

-- Chunk 18 --
// module.go:120-122
func (a AppModule) QuerierRoute() string {
	return types.QuerierRoute
}

-- Chunk 19 --
// module.go:124-131
func (a AppModule) RegisterServices(cfg module.Configurator) {
	types.RegisterQueryServer(cfg.QueryServer(), NewGrpcQuerier(a.globalfeeSubspace))

	m := keeper.NewMigrator(a.globalfeeSubspace)
	if err := cfg.RegisterMigration(types.ModuleName, 1, m.Migrate1to2); err != nil {
		panic(fmt.Sprintf("failed to migrate x/globalfee from version 1 to 2: %v", err))
	}
}

-- Chunk 20 --
// module.go:137-139
func (a AppModule) ConsensusVersion() uint64 {
	return 2
}

=== File: x/globalfee/keeper/migrations.go ===

-- Chunk 1 --
// migrations.go:11-13
type Migrator struct {
	globalfeeSubspace paramtypes.Subspace
}

-- Chunk 2 --
// migrations.go:16-18
func NewMigrator(globalfeeSubspace paramtypes.Subspace) Migrator {
	return Migrator{globalfeeSubspace: globalfeeSubspace}
}

-- Chunk 3 --
// migrations.go:21-23
func (m Migrator) Migrate1to2(ctx sdk.Context) error {
	return v2.MigrateStore(ctx, m.globalfeeSubspace)
}

=== File: x/globalfee/ante/fee_utils_test.go ===

-- Chunk 1 --
// fee_utils_test.go:16-120
func TestCombinedFeeRequirement(t *testing.T) {
	zeroCoin1 := sdk.NewDecCoin("photon", math.ZeroInt())
	zeroCoin2 := sdk.NewDecCoin("stake", math.ZeroInt())
	zeroCoin3 := sdk.NewDecCoin("quark", math.ZeroInt())
	coin1 := sdk.NewDecCoin("photon", math.NewInt(1))
	coin2 := sdk.NewDecCoin("stake", math.NewInt(2))
	coin1High := sdk.NewDecCoin("photon", math.NewInt(10))
	coin2High := sdk.NewDecCoin("stake", math.NewInt(20))
	coinNewDenom1 := sdk.NewDecCoin("Newphoton", math.NewInt(1))
	coinNewDenom2 := sdk.NewDecCoin("Newstake", math.NewInt(1))
	// coins must be valid !!! and sorted!!!
	coinsEmpty := sdk.DecCoins{}
	coinsNonEmpty := sdk.DecCoins{coin1, coin2}.Sort()
	coinsNonEmptyHigh := sdk.DecCoins{coin1High, coin2High}.Sort()
	coinsNonEmptyOneHigh := sdk.DecCoins{coin1High, coin2}.Sort()
	coinsNewDenom := sdk.DecCoins{coinNewDenom1, coinNewDenom2}.Sort()
	coinsNewOldDenom := sdk.DecCoins{coin1, coinNewDenom1}.Sort()
	coinsNewOldDenomHigh := sdk.DecCoins{coin1High, coinNewDenom1}.Sort()
	coinsCointainZero := sdk.DecCoins{coin1, zeroCoin2}.Sort()
	coinsCointainZeroNewDenom := sdk.DecCoins{coin1, zeroCoin3}.Sort()
	coinsAllZero := sdk.DecCoins{zeroCoin1, zeroCoin2}.Sort()
	tests := map[string]struct {
		cGlobal  sdk.DecCoins
		c        sdk.DecCoins
		combined sdk.DecCoins
	}{
		"global fee invalid, return combined fee empty and non-nil error": {
			cGlobal:  coinsEmpty,
			c:        coinsEmpty,
			combined: coinsEmpty,
		},
		"global fee nonempty, min fee empty, combined fee = global fee": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNonEmpty,
			combined: coinsNonEmpty,
		},
		"global fee and min fee have overlapping denom, min fees amounts are all higher": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNonEmptyHigh,
			combined: coinsNonEmptyHigh,
		},
		"global fee and min fee have overlapping denom, one of min fees amounts is higher": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNonEmptyOneHigh,
			combined: coinsNonEmptyOneHigh,
		},
		"global fee and min fee have no overlapping denom, combined fee = global fee": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNewDenom,
			combined: coinsNonEmpty,
		},
		"global fees and min fees have partial overlapping denom, min fee amount <= global fee amount, combined fees = global fees": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNewOldDenom,
			combined: coinsNonEmpty,
		},
		"global fees and min fees have partial overlapping denom, one min fee amount > global fee amount, combined fee = overlapping highest": {
			cGlobal:  coinsNonEmpty,
			c:        coinsNewOldDenomHigh,
			combined: sdk.DecCoins{coin1High, coin2},
		},
		"global fees have zero fees, min fees have overlapping non-zero fees, combined fees = overlapping highest": {
			cGlobal:  coinsCointainZero,
			c:        coinsNonEmpty,
			combined: sdk.DecCoins{coin1, coin2},
		},
		"global fees have zero fees, min fees have overlapping zero fees": {
			cGlobal:  coinsCointainZero,
			c:        coinsCointainZero,
			combined: coinsCointainZero,
		},
		"global fees have zero fees, min fees have non-overlapping zero fees": {
			cGlobal:  coinsCointainZero,
			c:        coinsCointainZeroNewDenom,
			combined: coinsCointainZero,
		},
		"global fees are all zero fees, min fees have overlapping zero fees": {
			cGlobal:  coinsAllZero,
			c:        coinsAllZero,
			combined: coinsAllZero,
		},
		"global fees are all zero fees, min fees have overlapping non-zero fees, combined fee = overlapping highest": {
			cGlobal:  coinsAllZero,
			c:        coinsCointainZeroNewDenom,
			combined: sdk.DecCoins{coin1, zeroCoin2},
		},
		"global fees are all zero fees, fees have one overlapping non-zero fee": {
			cGlobal:  coinsAllZero,
			c:        coinsCointainZero,
			combined: coinsCointainZero,
		},
	}

	for name, test := range tests {
		t.Run(name, func(t *testing.T) {
			allFees, err := CombinedFeeRequirement(test.cGlobal, test.c)
			if len(test.cGlobal) == 0 {
				require.Error(t, err)
			} else {
				require.NoError(t, err)
			}
			require.Equal(t, test.combined, allFees)
		})
	}
}

=== File: x/globalfee/ante/expected_keepers.go ===

-- Chunk 1 --
// expected_keepers.go:10-15
type AccountKeeper interface {
	GetParams(ctx sdk.Context) (params types.Params)
	GetAccount(ctx sdk.Context, addr sdk.AccAddress) sdk.AccountI
	SetAccount(ctx sdk.Context, acc sdk.AccountI)
	GetModuleAddress(moduleName string) sdk.AccAddress
}

-- Chunk 2 --
// expected_keepers.go:18-20
type FeegrantKeeper interface {
	UseGrantedFees(ctx sdk.Context, granter, grantee sdk.AccAddress, fee sdk.Coins, msgs []sdk.Msg) error
}

=== File: x/globalfee/ante/fee.go ===

-- Chunk 1 --
// fee.go:32-35
type FeeDecorator struct {
	GlobalMinFeeParamSource globalfee.ParamSource
	StakingKeeperBondDenom  func(sdk.Context) string
}

-- Chunk 2 --
// fee.go:37-46
func NewFeeDecorator(globalfeeSubspace paramtypes.Subspace, stakingKeeperDenom func(sdk.Context) string) FeeDecorator {
	if !globalfeeSubspace.HasKeyTable() {
		panic("global fee paramspace was not set up via module")
	}

	return FeeDecorator{
		GlobalMinFeeParamSource: globalfeeSubspace,
		StakingKeeperBondDenom:  stakingKeeperDenom,
	}
}

-- Chunk 3 --
// fee.go:49-68
func (mfd FeeDecorator) AnteHandle(ctx sdk.Context, tx sdk.Tx, simulate bool, next sdk.AnteHandler) (newCtx sdk.Context, err error) {
	feeTx, ok := tx.(sdk.FeeTx)
	if !ok {
		return ctx, errorsmod.Wrap(sdkerrors.ErrTxDecode, "Tx must implement the sdk.FeeTx interface")
	}

	// Do not check minimum-gas-prices and global fees during simulations
	// short-circuit bypass messages
	if simulate || mfd.ContainsOnlyBypassMinFeeMsgs(ctx, feeTx.GetMsgs()) {
		return next(ctx, tx, simulate)
	}

	// Get the required fees, as per xion specification max(network_fees, local_validator_fees)
	feeRequired, err := mfd.GetTxFeeRequired(ctx, feeTx)
	if err != nil {
		return ctx, err
	}

	return next(ctx.WithMinGasPrices(feeRequired), tx, simulate)
}

-- Chunk 4 --
// fee.go:73-102
func (mfd FeeDecorator) GetTxFeeRequired(ctx sdk.Context, tx sdk.FeeTx) (sdk.DecCoins, error) {
	// Get required global fee min gas prices
	// Note that it should never be empty since its default value is set to coin={"StakingBondDenom", 0}
	globalFees, err := mfd.GetGlobalFee(ctx)
	if err != nil {
		return sdk.DecCoins{}, err
	}

	// In DeliverTx, the global fee min gas prices are the only tx fee requirements.
	if !ctx.IsCheckTx() {
		return globalFees, nil
	}

	// In CheckTx mode, the local and global fee min gas prices are combined
	// to form the tx fee requirements

	// Get local minimum-gas-prices
	localFees := GetMinGasPrice(ctx)
	feeRequired := MaxCoins(localFees, globalFees)

	ctx.Logger().Debug("debugging globalfee",
		"fee required", feeRequired,
		"tx", tx,
		"min gas prices", ctx.MinGasPrices(),
		"global fees", globalFees,
		"local fees", localFees,
	)

	return feeRequired, nil
}

-- Chunk 5 --
// fee.go:108-127
func (mfd FeeDecorator) GetGlobalFee(ctx sdk.Context) (sdk.DecCoins, error) {
	var (
		globalMinGasPrices sdk.DecCoins
		err                error
	)

	if mfd.GlobalMinFeeParamSource.Has(ctx, types.ParamStoreKeyMinGasPrices) {
		mfd.GlobalMinFeeParamSource.Get(ctx, types.ParamStoreKeyMinGasPrices, &globalMinGasPrices)
	}

	// global fee is empty set, set global fee to 0uxion
	if len(globalMinGasPrices) == 0 {
		globalMinGasPrices, err = mfd.DefaultZeroGlobalFee(ctx)
		if err != nil {
			return sdk.DecCoins{}, err
		}
	}

	return globalMinGasPrices.Sort(), nil
}

-- Chunk 6 --
// fee.go:130-137
func (mfd FeeDecorator) DefaultZeroGlobalFee(ctx sdk.Context) ([]sdk.DecCoin, error) {
	bondDenom := mfd.getBondDenom(ctx)
	if bondDenom == "" {
		return nil, errors.New("empty staking bond denomination")
	}

	return []sdk.DecCoin{sdk.NewDecCoinFromDec(bondDenom, math.LegacyNewDec(0))}, nil
}

-- Chunk 7 --
// fee.go:139-141
func (mfd FeeDecorator) getBondDenom(ctx sdk.Context) (bondDenom string) {
	return mfd.StakingKeeperBondDenom(ctx)
}

-- Chunk 8 --
// fee.go:143-153
func (mfd FeeDecorator) ContainsOnlyBypassMinFeeMsgs(ctx sdk.Context, msgs []sdk.Msg) bool {
	bypassMsgTypes := mfd.GetBypassMsgTypes(ctx)
	for _, msg := range msgs {
		if tmstrings.StringInSlice(sdk.MsgTypeURL(msg), bypassMsgTypes) {
			continue
		}
		return false
	}

	return true
}

-- Chunk 9 --
// fee.go:155-161
func (mfd FeeDecorator) GetBypassMsgTypes(ctx sdk.Context) (res []string) {
	if mfd.GlobalMinFeeParamSource.Has(ctx, types.ParamStoreKeyBypassMinFeeMsgTypes) {
		mfd.GlobalMinFeeParamSource.Get(ctx, types.ParamStoreKeyBypassMinFeeMsgTypes, &res)
	}

	return
}

-- Chunk 10 --
// fee.go:163-169
func (mfd FeeDecorator) GetMaxTotalBypassMinFeeMsgGasUsage(ctx sdk.Context) (res uint64) {
	if mfd.GlobalMinFeeParamSource.Has(ctx, types.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage) {
		mfd.GlobalMinFeeParamSource.Get(ctx, types.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage, &res)
	}

	return
}

-- Chunk 11 --
// fee.go:173-181
func GetMinGasPrice(ctx sdk.Context) sdk.DecCoins {
	minGasPrices := ctx.MinGasPrices()
	// special case: if minGasPrices=[], requiredFees=[]
	if minGasPrices.IsZero() {
		return sdk.DecCoins{}
	}

	return minGasPrices.Sort()
}

=== File: x/globalfee/ante/fee_utils.go ===

-- Chunk 1 --
// fee_utils.go:14-39
func CombinedFeeRequirement(globalFees, minGasPrices sdk.DecCoins) (sdk.DecCoins, error) {
	// global fees should never be empty
	// since it has a default value using the staking module's bond denom
	if len(globalFees) == 0 {
		return sdk.DecCoins{}, errorsmod.Wrapf(sdkerrors.ErrNotFound, "global fee cannot be empty")
	}

	// empty min_gas_price
	if len(minGasPrices) == 0 {
		return globalFees, nil
	}

	// if min_gas_price denom is in globalfee, and the amount is higher than globalfee, add min_gas_price to allFees
	var allFees sdk.DecCoins
	for _, fee := range globalFees {
		// min_gas_price denom in global fee
		ok, c := Find(minGasPrices, fee.Denom)
		if ok && c.Amount.GT(fee.Amount) {
			allFees = append(allFees, c)
		} else {
			allFees = append(allFees, fee)
		}
	}

	return allFees.Sort(), nil
}

-- Chunk 2 --
// fee_utils.go:42-66
func Find(coins sdk.DecCoins, denom string) (bool, sdk.DecCoin) {
	switch len(coins) {
	case 0:
		return false, sdk.DecCoin{}

	case 1:
		coin := coins[0]
		if coin.Denom == denom {
			return true, coin
		}
		return false, sdk.DecCoin{}

	default:
		midIdx := len(coins) / 2 // 2:1, 3:1, 4:2
		coin := coins[midIdx]
		switch {
		case denom < coin.Denom:
			return Find(coins[:midIdx], denom)
		case denom == coin.Denom:
			return true, coin
		default:
			return Find(coins[midIdx+1:], denom)
		}
	}
}

-- Chunk 3 --
// fee_utils.go:69-74
func MaxCoins(a, b sdk.DecCoins) sdk.DecCoins {
	if IsAllGT(a, b) {
		return a
	}
	return b
}

-- Chunk 4 --
// fee_utils.go:76-97
func IsAllGT(a, b sdk.DecCoins) bool {
	if len(a) == 0 {
		return false
	}

	if len(b) == 0 {
		return true
	}

	if !DenomsSubsetOf(b, a) {
		return false
	}

	for _, coinB := range b {
		amountA, amountB := a.AmountOf(coinB.Denom), coinB.Amount
		if !amountA.GT(amountB) {
			return false
		}
	}

	return true
}

-- Chunk 5 --
// fee_utils.go:99-112
func DenomsSubsetOf(a, b sdk.DecCoins) bool {
	// more denoms in B than in a
	if len(a) > len(b) {
		return false
	}

	for _, coin := range a {
		if b.AmountOf(coin.Denom).IsZero() {
			return false
		}
	}

	return true
}

=== File: x/globalfee/ante/antetest/setup_fee_test.go ===

-- Chunk 1 --
// setup_fee_test.go:25-32
type IntegrationTestSuite struct {
	suite.Suite

	app       *xionapp.WasmApp
	ctx       sdk.Context
	clientCtx client.Context
	txBuilder client.TxBuilder
}

-- Chunk 2 --
// setup_fee_test.go:36-47
func (s *IntegrationTestSuite) SetupTest() {
	app := xionapp.Setup(s.T())
	ctx := app.BaseApp.NewContext(false)

	encodingConfig := testutil.MakeTestEncodingConfig()
	encodingConfig.Amino.RegisterConcrete(&testdata.TestMsg{}, "testdata.TestMsg", nil)
	testdata.RegisterInterfaces(encodingConfig.InterfaceRegistry)

	s.app = app
	s.ctx = ctx
	s.clientCtx = client.Context{}.WithTxConfig(encodingConfig.TxConfig)
}

-- Chunk 3 --
// setup_fee_test.go:49-51
func bondDenom(_ sdk.Context) string {
	return testBondDenom
}

-- Chunk 4 --
// setup_fee_test.go:53-55
func noBondDenom(_ sdk.Context) string {
	return ""
}

-- Chunk 5 --
// setup_fee_test.go:57-73
func (s *IntegrationTestSuite) SetupTestGlobalFeeStoreAndMinGasPrice(minGasPrice []sdk.DecCoin, globalFeeParams *globfeetypes.Params, bondDenom func(sdk.Context) string) (xionfeeante.FeeDecorator, sdk.AnteHandler) {
	subspace := s.app.GetSubspace(globalfee.ModuleName)
	subspace.SetParamSet(s.ctx, globalFeeParams)
	s.ctx = s.ctx.WithMinGasPrices(minGasPrice).WithIsCheckTx(true)

	// set staking params
	stakingParam := stakingtypes.DefaultParams()
	stakingParam.BondDenom = testBondDenom

	// build fee decorator
	feeDecorator := xionfeeante.NewFeeDecorator(subspace, bondDenom)

	// chain fee decorator to antehandler
	antehandler := sdk.ChainAnteDecorators(feeDecorator)

	return feeDecorator, antehandler
}

-- Chunk 6 --
// setup_fee_test.go:76-79
func (s *IntegrationTestSuite) SetupTestStakingSubspace(params stakingtypes.Params) types.Subspace {
	s.app.GetSubspace(stakingtypes.ModuleName).SetParamSet(s.ctx, &params)
	return s.app.GetSubspace(stakingtypes.ModuleName)
}

-- Chunk 7 --
// setup_fee_test.go:81-128
func (s *IntegrationTestSuite) CreateTestTx(privs []cryptotypes.PrivKey, accNums []uint64, accSeqs []uint64, chainID string) (xauthsigning.Tx, error) {
	var sigsV2 []signing.SignatureV2
	for i, priv := range privs {
		sigV2 := signing.SignatureV2{
			PubKey: priv.PubKey(),
			Data: &signing.SingleSignatureData{
				SignMode:  signing.SignMode_SIGN_MODE_DIRECT,
				Signature: nil,
			},
			Sequence: accSeqs[i],
		}

		sigsV2 = append(sigsV2, sigV2)
	}

	if err := s.txBuilder.SetSignatures(sigsV2...); err != nil {
		return nil, err
	}

	sigsV2 = []signing.SignatureV2{}
	for i, priv := range privs {
		signerData := xauthsigning.SignerData{
			ChainID:       chainID,
			AccountNumber: accNums[i],
			Sequence:      accSeqs[i],
		}
		sigV2, err := tx.SignWithPrivKey(
			context.Background(),
			signing.SignMode_SIGN_MODE_DIRECT,
			signerData,
			s.txBuilder,
			priv,
			s.clientCtx.TxConfig,
			accSeqs[i],
		)
		if err != nil {
			return nil, err
		}

		sigsV2 = append(sigsV2, sigV2)
	}

	if err := s.txBuilder.SetSignatures(sigsV2...); err != nil {
		return nil, err
	}

	return s.txBuilder.GetTx(), nil
}

=== File: x/globalfee/ante/antetest/fee_test.go ===

-- Chunk 1 --
// fee_test.go:25-27
func TestIntegrationTestSuite(t *testing.T) {
	suite.Run(t, new(IntegrationTestSuite))
}

-- Chunk 2 --
// fee_test.go:29-39
func (s *IntegrationTestSuite) TestGetDefaultGlobalFees() {
	// set globalfees and min gas price
	feeDecorator, _ := s.SetupTestGlobalFeeStoreAndMinGasPrice([]sdk.DecCoin{}, &globfeetypes.Params{}, bondDenom)
	defaultGlobalFees, err := feeDecorator.DefaultZeroGlobalFee(s.ctx)
	s.Require().NoError(err)
	s.Require().Greater(len(defaultGlobalFees), 0)

	if defaultGlobalFees[0].Denom != testBondDenom {
		s.T().Fatalf("bond denom: %s, default global fee denom: %s", testBondDenom, defaultGlobalFees[0].Denom)
	}
}

-- Chunk 3 --
// fee_test.go:41-190
func (s *IntegrationTestSuite) TestGlobalFeeSetAnteHandler() {
	s.txBuilder = s.clientCtx.TxConfig.NewTxBuilder()
	priv1, _, addr1 := testdata.KeyTestPubAddr()
	privs, accNums, accSeqs := []cryptotypes.PrivKey{priv1}, []uint64{0}, []uint64{0}

	denominator := int64(100000)
	high := math.LegacyNewDec(400).Quo(math.LegacyNewDec(denominator)) // 0.004
	med := math.LegacyNewDec(200).Quo(math.LegacyNewDec(denominator))  // 0.002
	low := math.LegacyNewDec(100).Quo(math.LegacyNewDec(denominator))  // 0.001

	highFeeAmt := math.NewInt(high.MulInt64(int64(2) * denominator).RoundInt64())
	medFeeAmt := math.NewInt(med.MulInt64(int64(2) * denominator).RoundInt64())
	lowFeeAmt := math.NewInt(low.MulInt64(int64(2) * denominator).RoundInt64())

	globalfeeParamsEmpty := []sdk.DecCoin{}
	minGasPriceEmpty := []sdk.DecCoin{}
	globalfeeParams0 := []sdk.DecCoin{
		sdk.NewDecCoinFromDec("photon", math.LegacyNewDec(0)),
		sdk.NewDecCoinFromDec("uxion", math.LegacyNewDec(0)),
	}
	minGasPrice0 := []sdk.DecCoin{
		sdk.NewDecCoinFromDec("stake", math.LegacyNewDec(0)),
		sdk.NewDecCoinFromDec("uxion", math.LegacyNewDec(0)),
	}

	globalfeeParamsHigh := []sdk.DecCoin{
		sdk.NewDecCoinFromDec("uxion", high),
	}
	minGasPrice := []sdk.DecCoin{
		sdk.NewDecCoinFromDec("uxion", med),
	}
	globalfeeParamsLow := []sdk.DecCoin{
		sdk.NewDecCoinFromDec("uxion", low),
	}

	testCases := map[string]struct {
		minGasPrice []sdk.DecCoin
		globalFee   []sdk.DecCoin
		gasPrice    sdk.Coins
		gasLimit    uint64
		txMsg       sdk.Msg
		txCheck     bool
		expErr      bool
		networkFee  bool
	}{
		"empty_min_gas_price, nonempty global fee": {
			minGasPrice: minGasPriceEmpty,
			globalFee:   globalfeeParamsHigh,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", highFeeAmt)),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		"nonempty min_gas_price with defaultGlobalFee denom, empty global fee": {
			minGasPrice: minGasPrice,
			globalFee:   globalfeeParamsEmpty, // default 0uxion
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", medFeeAmt)),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		"zero min_gas_price, zero global fee": {
			minGasPrice: minGasPrice0,
			globalFee:   globalfeeParams0,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("stake", math.ZeroInt())),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		// zero min_gas_price and empty  global fee
		"zero min_gas_price, empty global fee, zero fee in min_gas_price_denom": {
			minGasPrice: minGasPrice0,
			globalFee:   globalfeeParamsEmpty,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("stake", math.ZeroInt())),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		// empty min_gas_price, zero global fee
		"empty min_gas_price, zero global fee": {
			minGasPrice: minGasPriceEmpty,
			globalFee:   globalfeeParams0,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", math.ZeroInt())),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		// zero min_gas_price, nonzero global fee
		"zero min_gas_price, nonzero global fee": {
			minGasPrice: minGasPrice0,
			globalFee:   globalfeeParamsLow,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", lowFeeAmt)),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		"fee lower than globalfee and min_gas_price": {
			minGasPrice: minGasPrice,
			globalFee:   globalfeeParamsHigh,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", lowFeeAmt)),
			gasLimit:    testGasLimit,
			txMsg:       testdata.NewTestMsg(addr1),
			txCheck:     true,
			expErr:      false,
			networkFee:  true,
		},
		"does not bypass msg type: ibc.core.channel.v1.MsgRecvPacket": {
			minGasPrice: minGasPrice,
			globalFee:   globalfeeParamsLow,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", math.ZeroInt())),
			gasLimit:    testGasLimit,
			txMsg: ibcchanneltypes.NewMsgRecvPacket(
				ibcchanneltypes.Packet{}, nil, ibcclienttypes.Height{}, ""),
			txCheck:    true,
			expErr:     false,
			networkFee: true,
		},
		"bypass msg type: xion.v1.MsgSend": {
			minGasPrice: minGasPrice,
			globalFee:   globalfeeParamsLow,
			gasPrice:    sdk.NewCoins(sdk.NewCoin("uxion", math.ZeroInt())),
			gasLimit:    testGasLimit,
			txMsg:       &xiontypes.MsgSend{ToAddress: addr1.String(), FromAddress: addr1.String()},
			txCheck:     true,
			expErr:      false,
			networkFee:  false,
		},
	}

	globalfeeParams := &globfeetypes.Params{
		BypassMinFeeMsgTypes:            globfeetypes.DefaultBypassMinFeeMsgTypes,
		MaxTotalBypassMinFeeMsgGasUsage: globfeetypes.DefaultmaxTotalBypassMinFeeMsgGasUsage,
	}

	for name, tc := range testCases {
		s.Run(name, func() {
			// set globalfees and min gas price
			fmt.Println(name)

-- Chunk 4 --
// fee_test.go:191-226
			globalfeeParams.MinimumGasPrices = tc.globalFee
			_, antehandler := s.SetupTestGlobalFeeStoreAndMinGasPrice(tc.minGasPrice, globalfeeParams, bondDenom)

			// set fee decorator to ante handler
			s.Require().NoError(s.txBuilder.SetMsgs(tc.txMsg))
			s.txBuilder.SetFeeAmount(tc.gasPrice)
			s.txBuilder.SetGasLimit(tc.gasLimit)
			tx, err := s.CreateTestTx(privs, accNums, accSeqs, s.ctx.ChainID())
			s.Require().NoError(err)

			s.ctx = s.ctx.WithIsCheckTx(tc.txCheck)
			tcCtx, err := antehandler(s.ctx, tx, false)
			if !tc.expErr {
				s.Require().NoError(err)
			} else {
				s.Require().Error(err)
			}

			// Calculate expected Min Gas Fee
			// Combine(local, network)
			// where:
			// Network = tc.globalFee * GasPrice
			// Local = tc.minGasPrice
			networkFee := getFee(tc.globalFee, tc.gasLimit)
			localFee := getFee(tc.minGasPrice, tc.gasLimit)
			minGas := tcCtx.MinGasPrices()
			expected, err := xionfeeante.CombinedFeeRequirement(networkFee, localFee)
			s.Require().NoError(err)
			if !tc.networkFee {
				s.Require().Equal(sdk.NewDecCoins(tc.minGasPrice...), minGas)
			} else {
				s.Require().Equal(expected, minGas)
			}
		})
	}
}

-- Chunk 5 --
// fee_test.go:228-235
func getFee(originFee sdk.DecCoins, _ uint64) sdk.DecCoins {
	targetFee := originFee
	if len(originFee) == 0 {
		targetFee = []sdk.DecCoin{sdk.NewDecCoinFromDec("uxion", math.LegacyNewDec(0))}
	}

	return targetFee.Sort()
}

-- Chunk 6 --
// fee_test.go:237-289
func (s *IntegrationTestSuite) TestGetTxFeeRequired() {
	// create global fee params
	globalfeeParamsEmpty := &globfeetypes.Params{MinimumGasPrices: []sdk.DecCoin{}}

	// setup tests with default global fee i.e. "0uxion" and empty local min gas prices
	feeDecorator, _ := s.SetupTestGlobalFeeStoreAndMinGasPrice([]sdk.DecCoin{}, globalfeeParamsEmpty, noBondDenom)

	// set a subspace that doesn't have the stakingtypes.KeyBondDenom key registered
	// feeDecorator.StakingSubspace = s.app.GetSubspace(globfeetypes.ModuleName)

	// check that an error is returned when staking bond denom is empty
	_, err := feeDecorator.GetTxFeeRequired(s.ctx, nil)
	s.Require().Equal(err.Error(), "empty staking bond denomination")

	// set non-zero local min gas prices
	localMinGasPrices := sdk.NewDecCoins(sdk.NewDecCoin("uxion", math.NewInt(1)))

	// setup tests with non-empty local min gas prices
	feeDecorator, _ = s.SetupTestGlobalFeeStoreAndMinGasPrice(
		localMinGasPrices,
		globalfeeParamsEmpty,
		bondDenom,
	)

	// mock tx data
	s.txBuilder = s.clientCtx.TxConfig.NewTxBuilder()
	priv1, _, addr1 := testdata.KeyTestPubAddr()
	privs, accNums, accSeqs := []cryptotypes.PrivKey{priv1}, []uint64{0}, []uint64{0}

	// privfee, accNums, accSeqs := []cryptotypes.PrivKey{priv2}, []uint64{0}, []uint64{0}
	s.Require().NoError(s.txBuilder.SetMsgs(testdata.NewTestMsg(addr1)))
	s.txBuilder.SetFeeAmount(sdk.NewCoins(sdk.NewCoin("uxion", math.ZeroInt())))

	s.txBuilder.SetGasLimit(uint64(1))
	tx, err := s.CreateTestTx(privs, accNums, accSeqs, s.ctx.ChainID())
	s.Require().NoError(err)

	// check that the required fees returned in CheckTx mode are equal to
	// local min gas prices since they're greater than the default global fee values.
	s.Require().True(s.ctx.IsCheckTx())
	res, err := feeDecorator.GetTxFeeRequired(s.ctx, tx)
	s.Require().True(res.Equal(localMinGasPrices))
	s.Require().NoError(err)

	// check that the global fee is returned in DeliverTx mode.
	globalFee, err := feeDecorator.GetGlobalFee(s.ctx)
	s.Require().NoError(err)

	ctx := s.ctx.WithIsCheckTx(false)
	res, err = feeDecorator.GetTxFeeRequired(ctx, tx)
	s.Require().NoError(err)
	s.Require().True(res.Equal(globalFee))
}

=== File: x/globalfee/migrations/v2/migration.go ===

-- Chunk 1 --
// migration.go:21-38
func MigrateStore(ctx sdk.Context, globalfeeSubspace paramtypes.Subspace) error {
	var oldGlobalMinGasPrices sdk.DecCoins
	globalfeeSubspace.Get(ctx, types.ParamStoreKeyMinGasPrices, &oldGlobalMinGasPrices)
	defaultParams := types.DefaultParams()
	params := types.Params{
		MinimumGasPrices:                oldGlobalMinGasPrices,
		BypassMinFeeMsgTypes:            defaultParams.BypassMinFeeMsgTypes,
		MaxTotalBypassMinFeeMsgGasUsage: defaultParams.MaxTotalBypassMinFeeMsgGasUsage,
	}

	if !globalfeeSubspace.HasKeyTable() {
		globalfeeSubspace = globalfeeSubspace.WithKeyTable(types.ParamKeyTable())
	}

	globalfeeSubspace.SetParamSet(ctx, &params)

	return nil
}

=== File: x/globalfee/migrations/v2/v2_test/migration_test.go ===

-- Chunk 1 --
// migration_test.go:27-83
func TestMigrateStore(t *testing.T) {
	db := cometdb.NewMemDB()
	logger := log.NewNopLogger()
	metrics := metrics2.NewNoOpMetrics()
	stateStore := store.NewCommitMultiStore(db, logger, metrics)

	storeKey := storetypes.NewKVStoreKey(paramtypes.StoreKey)
	memStoreKey := storetypes.NewMemoryStoreKey("mem_key")

	stateStore.MountStoreWithDB(storeKey, storetypes.StoreTypeIAVL, db)
	stateStore.MountStoreWithDB(memStoreKey, storetypes.StoreTypeMemory, nil)
	require.NoError(t, stateStore.LoadLatestVersion())

	registry := codectypes.NewInterfaceRegistry()
	cdc := codec.NewProtoCodec(registry)
	ctx := sdk.NewContext(stateStore, tmproto.Header{}, false, log.NewNopLogger())

	require.NoError(t, stateStore.LoadLatestVersion())

	// Create new empty subspace
	newSubspace := paramtypes.NewSubspace(cdc,
		codec.NewLegacyAmino(),
		storeKey,
		memStoreKey,
		paramtypes.ModuleName,
	)

	// register the subspace with the v11 paramKeyTable
	newSubspace = newSubspace.WithKeyTable(globalfeetypes.ParamKeyTable())

	// check MinGasPrices isn't set
	_, ok := getMinGasPrice(newSubspace, ctx)
	require.Equal(t, ok, false)

	// set a minGasPrice different that default value
	minGasPrices := sdk.NewDecCoins(sdk.NewDecCoin("uatom", math.OneInt()))
	newSubspace.Set(ctx, globalfeetypes.ParamStoreKeyMinGasPrices, minGasPrices)
	require.False(t, minGasPrices.Equal(globalfeetypes.DefaultMinGasPrices))

	// check that the new parameters aren't set
	_, ok = getBypassMsgTypes(newSubspace, ctx)
	require.Equal(t, ok, false)
	_, ok = getMaxTotalBypassMinFeeMsgGasUsage(newSubspace, ctx)
	require.Equal(t, ok, false)

	// run global fee migration
	err := v2.MigrateStore(ctx, newSubspace)
	require.NoError(t, err)

	newMinGasPrices, _ := getMinGasPrice(newSubspace, ctx)
	bypassMsgTypes, _ := getBypassMsgTypes(newSubspace, ctx)
	maxGas, _ := getMaxTotalBypassMinFeeMsgGasUsage(newSubspace, ctx)

	require.Equal(t, bypassMsgTypes, globalfeetypes.DefaultBypassMinFeeMsgTypes)
	require.Equal(t, maxGas, globalfeetypes.DefaultmaxTotalBypassMinFeeMsgGasUsage)
	require.Equal(t, minGasPrices, newMinGasPrices)
}

-- Chunk 2 --
// migration_test.go:85-94
func getBypassMsgTypes(globalfeeSubspace paramtypes.Subspace, ctx sdk.Context) ([]string, bool) {
	bypassMsgs := []string{}
	if globalfeeSubspace.Has(ctx, globalfeetypes.ParamStoreKeyBypassMinFeeMsgTypes) {
		globalfeeSubspace.Get(ctx, globalfeetypes.ParamStoreKeyBypassMinFeeMsgTypes, &bypassMsgs)
	} else {
		return bypassMsgs, false
	}

	return bypassMsgs, true
}

-- Chunk 3 --
// migration_test.go:96-105
func getMaxTotalBypassMinFeeMsgGasUsage(globalfeeSubspace paramtypes.Subspace, ctx sdk.Context) (uint64, bool) {
	var maxTotalBypassMinFeeMsgGasUsage uint64
	if globalfeeSubspace.Has(ctx, globalfeetypes.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage) {
		globalfeeSubspace.Get(ctx, globalfeetypes.ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage, &maxTotalBypassMinFeeMsgGasUsage)
	} else {
		return maxTotalBypassMinFeeMsgGasUsage, false
	}

	return maxTotalBypassMinFeeMsgGasUsage, true
}

-- Chunk 4 --
// migration_test.go:107-116
func getMinGasPrice(globalfeeSubspace paramtypes.Subspace, ctx sdk.Context) (sdk.DecCoins, bool) {
	var globalMinGasPrices sdk.DecCoins
	if globalfeeSubspace.Has(ctx, globalfeetypes.ParamStoreKeyMinGasPrices) {
		globalfeeSubspace.Get(ctx, globalfeetypes.ParamStoreKeyMinGasPrices, &globalMinGasPrices)
	} else {
		return globalMinGasPrices, false
	}

	return globalMinGasPrices, true
}

=== File: x/globalfee/types/genesis.pb.go ===

-- Chunk 1 --
// genesis.pb.go:29-32
type GenesisState struct {
	// Params of this module
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

-- Chunk 2 --
// genesis.pb.go:34-34
func (m *GenesisState) Reset()         { *m = GenesisState{} }

-- Chunk 3 --
// genesis.pb.go:35-35
func (m *GenesisState) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// genesis.pb.go:36-36
func (*GenesisState) ProtoMessage()    {}

-- Chunk 5 --
// genesis.pb.go:37-39
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_a27689c4e7986e7d, []int{0}
}

-- Chunk 6 --
// genesis.pb.go:40-42
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// genesis.pb.go:43-54
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// genesis.pb.go:55-57
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}

-- Chunk 9 --
// genesis.pb.go:58-60
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// genesis.pb.go:61-63
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

-- Chunk 11 --
// genesis.pb.go:67-72
func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 12 --
// genesis.pb.go:75-89
type Params struct {
	// minimum_gas_prices stores the minimum gas price(s) for all TX on the chain.
	// When multiple coins are defined then they are accepted alternatively.
	// The list must be sorted by denoms asc. No duplicate denoms or zero amount
	// values allowed. For more information see
	// https://docs.cosmos.network/main/modules/auth#concepts
	MinimumGasPrices github_com_cosmos_cosmos_sdk_types.DecCoins `protobuf:"bytes,1,rep,name=minimum_gas_prices,json=minimumGasPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.DecCoins" json:"minimum_gas_prices,omitempty" yaml:"minimum_gas_prices"`
	// bypass_min_fee_msg_types defines a list of message type urls
	// that are free of fee charge.
	BypassMinFeeMsgTypes []string `protobuf:"bytes,2,rep,name=bypass_min_fee_msg_types,json=bypassMinFeeMsgTypes,proto3" json:"bypass_min_fee_msg_types,omitempty" yaml:"bypass_min_fee_msg_types"`
	// max_total_bypass_min_fee_msg_gas_usage defines the total maximum gas usage
	// allowed for a transaction containing only messages of types in
	// bypass_min_fee_msg_types to bypass fee charge.
	MaxTotalBypassMinFeeMsgGasUsage uint64 `protobuf:"varint,3,opt,name=max_total_bypass_min_fee_msg_gas_usage,json=maxTotalBypassMinFeeMsgGasUsage,proto3" json:"max_total_bypass_min_fee_msg_gas_usage,omitempty"`
}

-- Chunk 13 --
// genesis.pb.go:91-91
func (m *Params) Reset()         { *m = Params{} }

-- Chunk 14 --
// genesis.pb.go:92-92
func (m *Params) String() string { return proto.CompactTextString(m) }

-- Chunk 15 --
// genesis.pb.go:93-93
func (*Params) ProtoMessage()    {}

-- Chunk 16 --
// genesis.pb.go:94-96
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_a27689c4e7986e7d, []int{1}
}

-- Chunk 17 --
// genesis.pb.go:97-99
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 18 --
// genesis.pb.go:100-111
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 19 --
// genesis.pb.go:112-114
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}

-- Chunk 20 --
// genesis.pb.go:115-117
func (m *Params) XXX_Size() int {
	return m.Size()
}

-- Chunk 21 --
// genesis.pb.go:118-120
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

-- Chunk 22 --
// genesis.pb.go:124-129
func (m *Params) GetMinimumGasPrices() github_com_cosmos_cosmos_sdk_types.DecCoins {
	if m != nil {
		return m.MinimumGasPrices
	}
	return nil
}

-- Chunk 23 --
// genesis.pb.go:131-136
func (m *Params) GetBypassMinFeeMsgTypes() []string {
	if m != nil {
		return m.BypassMinFeeMsgTypes
	}
	return nil
}

-- Chunk 24 --
// genesis.pb.go:138-143
func (m *Params) GetMaxTotalBypassMinFeeMsgGasUsage() uint64 {
	if m != nil {
		return m.MaxTotalBypassMinFeeMsgGasUsage
	}
	return 0
}

-- Chunk 25 --
// genesis.pb.go:145-148
func init() {
	proto.RegisterType((*GenesisState)(nil), "xion.globalfee.v1.GenesisState")
	proto.RegisterType((*Params)(nil), "xion.globalfee.v1.Params")
}

-- Chunk 26 --
// genesis.pb.go:150-150
func init() { proto.RegisterFile("xion/globalfee/v1/genesis.proto", fileDescriptor_a27689c4e7986e7d) }

-- Chunk 27 --
// genesis.pb.go:184-192
func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 28 --
// genesis.pb.go:194-197
func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 29 --
// genesis.pb.go:199-215
func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 30 --
// genesis.pb.go:217-225
func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 31 --
// genesis.pb.go:227-230
func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 32 --
// genesis.pb.go:232-266
func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MaxTotalBypassMinFeeMsgGasUsage != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.MaxTotalBypassMinFeeMsgGasUsage))
		i--
		dAtA[i] = 0x18
	}
	if len(m.BypassMinFeeMsgTypes) > 0 {
		for iNdEx := len(m.BypassMinFeeMsgTypes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.BypassMinFeeMsgTypes[iNdEx])
			copy(dAtA[i:], m.BypassMinFeeMsgTypes[iNdEx])
			i = encodeVarintGenesis(dAtA, i, uint64(len(m.BypassMinFeeMsgTypes[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.MinimumGasPrices) > 0 {
		for iNdEx := len(m.MinimumGasPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MinimumGasPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 33 --
// genesis.pb.go:268-278
func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 34 --
// genesis.pb.go:279-288
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

-- Chunk 35 --
// genesis.pb.go:290-312
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.MinimumGasPrices) > 0 {
		for _, e := range m.MinimumGasPrices {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.BypassMinFeeMsgTypes) > 0 {
		for _, s := range m.BypassMinFeeMsgTypes {
			l = len(s)
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.MaxTotalBypassMinFeeMsgGasUsage != 0 {
		n += 1 + sovGenesis(uint64(m.MaxTotalBypassMinFeeMsgGasUsage))
	}
	return n
}

-- Chunk 36 --
// genesis.pb.go:314-316
func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 37 --
// genesis.pb.go:317-319
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 38 --
// genesis.pb.go:320-402
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 39 --
// genesis.pb.go:403-537
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinimumGasPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinimumGasPrices = append(m.MinimumGasPrices, types.DecCoin{})
			if err := m.MinimumGasPrices[len(m.MinimumGasPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BypassMinFeeMsgTypes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BypassMinFeeMsgTypes = append(m.BypassMinFeeMsgTypes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxTotalBypassMinFeeMsgGasUsage", wireType)
			}
			m.MaxTotalBypassMinFeeMsgGasUsage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxTotalBypassMinFeeMsgGasUsage |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 40 --
// genesis.pb.go:538-615
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/globalfee/types/query.pb.go ===

-- Chunk 1 --
// query.pb.go:34-35
type QueryParamsRequest struct {
}

-- Chunk 2 --
// query.pb.go:37-37
func (m *QueryParamsRequest) Reset()         { *m = QueryParamsRequest{} }

-- Chunk 3 --
// query.pb.go:38-38
func (m *QueryParamsRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// query.pb.go:39-39
func (*QueryParamsRequest) ProtoMessage()    {}

-- Chunk 5 --
// query.pb.go:40-42
func (*QueryParamsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_203903f37d385498, []int{0}
}

-- Chunk 6 --
// query.pb.go:43-45
func (m *QueryParamsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// query.pb.go:46-57
func (m *QueryParamsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// query.pb.go:58-60
func (m *QueryParamsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsRequest.Merge(m, src)
}

-- Chunk 9 --
// query.pb.go:61-63
func (m *QueryParamsRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// query.pb.go:64-66
func (m *QueryParamsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsRequest.DiscardUnknown(m)
}

-- Chunk 11 --
// query.pb.go:72-74
type QueryParamsResponse struct {
	Params Params `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
}

-- Chunk 12 --
// query.pb.go:76-76
func (m *QueryParamsResponse) Reset()         { *m = QueryParamsResponse{} }

-- Chunk 13 --
// query.pb.go:77-77
func (m *QueryParamsResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 14 --
// query.pb.go:78-78
func (*QueryParamsResponse) ProtoMessage()    {}

-- Chunk 15 --
// query.pb.go:79-81
func (*QueryParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_203903f37d385498, []int{1}
}

-- Chunk 16 --
// query.pb.go:82-84
func (m *QueryParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 17 --
// query.pb.go:85-96
func (m *QueryParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 18 --
// query.pb.go:97-99
func (m *QueryParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryParamsResponse.Merge(m, src)
}

-- Chunk 19 --
// query.pb.go:100-102
func (m *QueryParamsResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 20 --
// query.pb.go:103-105
func (m *QueryParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryParamsResponse.DiscardUnknown(m)
}

-- Chunk 21 --
// query.pb.go:109-114
func (m *QueryParamsResponse) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

-- Chunk 22 --
// query.pb.go:116-119
func init() {
	proto.RegisterType((*QueryParamsRequest)(nil), "xion.globalfee.v1.QueryParamsRequest")
	proto.RegisterType((*QueryParamsResponse)(nil), "xion.globalfee.v1.QueryParamsResponse")
}

-- Chunk 23 --
// query.pb.go:121-121
func init() { proto.RegisterFile("xion/globalfee/v1/query.proto", fileDescriptor_203903f37d385498) }

-- Chunk 24 --
// query.pb.go:156-158
type QueryClient interface {
	Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error)
}

-- Chunk 25 --
// query.pb.go:160-162
type queryClient struct {
	cc grpc1.ClientConn
}

-- Chunk 26 --
// query.pb.go:164-166
func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

-- Chunk 27 --
// query.pb.go:168-175
func (c *queryClient) Params(ctx context.Context, in *QueryParamsRequest, opts ...grpc.CallOption) (*QueryParamsResponse, error) {
	out := new(QueryParamsResponse)
	err := c.cc.Invoke(ctx, "/xion.globalfee.v1.Query/Params", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 28 --
// query.pb.go:178-180
type QueryServer interface {
	Params(context.Context, *QueryParamsRequest) (*QueryParamsResponse, error)
}

-- Chunk 29 --
// query.pb.go:183-184
type UnimplementedQueryServer struct {
}

-- Chunk 30 --
// query.pb.go:186-188
func (*UnimplementedQueryServer) Params(ctx context.Context, req *QueryParamsRequest) (*QueryParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Params not implemented")
}

-- Chunk 31 --
// query.pb.go:190-192
func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

-- Chunk 32 --
// query.pb.go:194-210
func _Query_Params_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryParamsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).Params(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.globalfee.v1.Query/Params",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).Params(ctx, req.(*QueryParamsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 33 --
// query.pb.go:225-233
func (m *QueryParamsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 34 --
// query.pb.go:235-238
func (m *QueryParamsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 35 --
// query.pb.go:240-246
func (m *QueryParamsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 36 --
// query.pb.go:248-256
func (m *QueryParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 37 --
// query.pb.go:258-261
func (m *QueryParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 38 --
// query.pb.go:263-279
func (m *QueryParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintQuery(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

-- Chunk 39 --
// query.pb.go:281-291
func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 40 --
// query.pb.go:292-299
func (m *QueryParamsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 41 --
// query.pb.go:301-310
func (m *QueryParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovQuery(uint64(l))
	return n
}

-- Chunk 42 --
// query.pb.go:312-314
func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 43 --
// query.pb.go:315-317
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 44 --
// query.pb.go:318-367
func (m *QueryParamsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 45 --
// query.pb.go:368-450
func (m *QueryParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 46 --
// query.pb.go:451-528
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/globalfee/types/genesis.go ===

-- Chunk 1 --
// genesis.go:12-16
func NewGenesisState(params Params) *GenesisState {
	return &GenesisState{
		Params: params,
	}
}

-- Chunk 2 --
// genesis.go:19-21
func DefaultGenesisState() *GenesisState {
	return NewGenesisState(DefaultParams())
}

-- Chunk 3 --
// genesis.go:25-33
func GetGenesisStateFromAppState(cdc codec.Codec, appState map[string]json.RawMessage) *GenesisState {
	var genesisState GenesisState

	if appState[ModuleName] != nil {
		cdc.MustUnmarshalJSON(appState[ModuleName], &genesisState)
	}

	return &genesisState
}

-- Chunk 4 --
// genesis.go:35-41
func ValidateGenesis(data GenesisState) error {
	if err := data.Params.ValidateBasic(); err != nil {
		return errorsmod.Wrap(err, "globalfee params")
	}

	return nil
}

=== File: x/globalfee/types/params.go ===

-- Chunk 1 --
// params.go:47-53
func DefaultParams() Params {
	return Params{
		MinimumGasPrices:                DefaultMinGasPrices,
		BypassMinFeeMsgTypes:            DefaultBypassMinFeeMsgTypes,
		MaxTotalBypassMinFeeMsgGasUsage: DefaultmaxTotalBypassMinFeeMsgGasUsage,
	}
}

-- Chunk 2 --
// params.go:55-57
func ParamKeyTable() paramtypes.KeyTable {
	return paramtypes.NewKeyTable().RegisterParamSet(&Params{})
}

-- Chunk 3 --
// params.go:60-70
func (p Params) ValidateBasic() error {
	if err := validateMinimumGasPrices(p.MinimumGasPrices); err != nil {
		return err
	}

	if err := validateBypassMinFeeMsgTypes(p.BypassMinFeeMsgTypes); err != nil {
		return err
	}

	return validateMaxTotalBypassMinFeeMsgGasUsage(p.MaxTotalBypassMinFeeMsgGasUsage)
}

-- Chunk 4 --
// params.go:73-85
func (p *Params) ParamSetPairs() paramtypes.ParamSetPairs {
	return paramtypes.ParamSetPairs{
		paramtypes.NewParamSetPair(
			ParamStoreKeyMinGasPrices, &p.MinimumGasPrices, validateMinimumGasPrices,
		),
		paramtypes.NewParamSetPair(
			ParamStoreKeyBypassMinFeeMsgTypes, &p.BypassMinFeeMsgTypes, validateBypassMinFeeMsgTypes,
		),
		paramtypes.NewParamSetPair(
			ParamStoreKeyMaxTotalBypassMinFeeMsgGasUsage, &p.MaxTotalBypassMinFeeMsgGasUsage, validateMaxTotalBypassMinFeeMsgGasUsage,
		),
	}
}

-- Chunk 5 --
// params.go:87-95
func validateMinimumGasPrices(i interface{}) error {
	v, ok := i.(sdk.DecCoins)
	if !ok {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidType, "type: %T, expected sdk.DecCoins", i)
	}

	dec := DecCoins(v)
	return dec.Validate()
}

-- Chunk 6 --
// params.go:97-97
type BypassMinFeeMsgTypes []string

-- Chunk 7 --
// params.go:100-117
func validateBypassMinFeeMsgTypes(i interface{}) error {
	bypassMinFeeMsgTypes, ok := i.([]string)
	if !ok {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidType, "type: %T, expected []sdk.Msg", i)
	}

	for _, msgType := range bypassMinFeeMsgTypes {
		if msgType == "" {
			return fmt.Errorf("invalid empty bypass msg type")
		}

		if !strings.HasPrefix(msgType, sdk.MsgTypeURL(nil)) {
			return fmt.Errorf("invalid bypass msg type name %s", msgType)
		}
	}

	return nil
}

-- Chunk 8 --
// params.go:119-126
func validateMaxTotalBypassMinFeeMsgGasUsage(i interface{}) error {
	_, ok := i.(uint64)
	if !ok {
		return errorsmod.Wrapf(sdkerrors.ErrInvalidType, "type: %T, expected uint64", i)
	}

	return nil
}

-- Chunk 9 --
// params.go:128-128
type DecCoins sdk.DecCoins

-- Chunk 10 --
// params.go:132-161
func (coins DecCoins) Validate() error {
	if len(coins) == 0 {
		return nil
	}

	lowDenom := ""
	seenDenoms := make(map[string]bool)

	for i, coin := range coins {
		if seenDenoms[coin.Denom] {
			return fmt.Errorf("duplicate denomination %s", coin.Denom)
		}
		if err := sdk.ValidateDenom(coin.Denom); err != nil {
			return err
		}
		// skip the denom order check for the first denom in the coins list
		if i != 0 && coin.Denom <= lowDenom {
			return fmt.Errorf("denomination %s is not sorted", coin.Denom)
		}
		if coin.IsNegative() {
			return fmt.Errorf("coin %s amount is negative", coin.Amount)
		}

		// we compare each coin against the last denom
		lowDenom = coin.Denom
		seenDenoms[coin.Denom] = true
	}

	return nil
}

=== File: x/globalfee/types/query.pb.gw.go ===

-- Chunk 1 --
// query.pb.gw.go:36-43
func request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, client QueryClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := client.Params(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))
	return msg, metadata, err

}

-- Chunk 2 --
// query.pb.gw.go:45-52
func local_request_Query_Params_0(ctx context.Context, marshaler runtime.Marshaler, server QueryServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {
	var protoReq QueryParamsRequest
	var metadata runtime.ServerMetadata

	msg, err := server.Params(ctx, &protoReq)
	return msg, metadata, err

}

-- Chunk 3 --
// query.pb.gw.go:58-84
func RegisterQueryHandlerServer(ctx context.Context, mux *runtime.ServeMux, server QueryServer) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		var stream runtime.ServerTransportStream
		ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateIncomingContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := local_request_Query_Params_0(rctx, inboundMarshaler, server, req, pathParams)
		md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

-- Chunk 4 --
// query.pb.gw.go:88-109
func RegisterQueryHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {
	conn, err := grpc.Dial(endpoint, opts...)
	if err != nil {
		return err
	}
	defer func() {
		if err != nil {
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
			return
		}
		go func() {
			<-ctx.Done()
			if cerr := conn.Close(); cerr != nil {
				grpclog.Infof("Failed to close conn to %s: %v", endpoint, cerr)
			}
		}()
	}()

	return RegisterQueryHandler(ctx, mux, conn)
}

-- Chunk 5 --
// query.pb.gw.go:113-115
func RegisterQueryHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {
	return RegisterQueryHandlerClient(ctx, mux, NewQueryClient(conn))
}

-- Chunk 6 --
// query.pb.gw.go:122-145
func RegisterQueryHandlerClient(ctx context.Context, mux *runtime.ServeMux, client QueryClient) error {

	mux.Handle("GET", pattern_Query_Params_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {
		ctx, cancel := context.WithCancel(req.Context())
		defer cancel()
		inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)
		rctx, err := runtime.AnnotateContext(ctx, mux, req)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}
		resp, md, err := request_Query_Params_0(rctx, inboundMarshaler, client, req, pathParams)
		ctx = runtime.NewServerMetadataContext(ctx, md)
		if err != nil {
			runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)
			return
		}

		forward_Query_Params_0(ctx, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)

	})

	return nil
}

=== File: x/globalfee/types/keys.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/globalfee/types/keys.go:1-8
package types

const (
	// ModuleName is the name of the this module
	ModuleName = "globalfee"

	QuerierRoute = ModuleName
)

=== File: x/globalfee/types/params_test.go ===

-- Chunk 1 --
// params_test.go:13-18
func TestDefaultParams(t *testing.T) {
	p := DefaultParams()
	require.EqualValues(t, p.MinimumGasPrices, sdk.DecCoins{})
	require.EqualValues(t, p.BypassMinFeeMsgTypes, DefaultBypassMinFeeMsgTypes)
	require.EqualValues(t, p.MaxTotalBypassMinFeeMsgGasUsage, DefaultmaxTotalBypassMinFeeMsgGasUsage)
}

-- Chunk 2 --
// params_test.go:20-78
func Test_validateMinGasPrices(t *testing.T) {
	tests := map[string]struct {
		coins     interface{}
		expectErr bool
	}{
		"DefaultParams, pass": {
			DefaultParams().MinimumGasPrices,
			false,
		},
		"DecCoins conversion fails, fail": {
			sdk.Coins{sdk.NewCoin("photon", math.OneInt())},
			true,
		},
		"coins amounts are zero, pass": {
			sdk.DecCoins{
				sdk.NewDecCoin("atom", math.ZeroInt()),
				sdk.NewDecCoin("photon", math.ZeroInt()),
			},
			false,
		},
		"duplicate coins denoms, fail": {
			sdk.DecCoins{
				sdk.NewDecCoin("photon", math.OneInt()),
				sdk.NewDecCoin("photon", math.OneInt()),
			},
			true,
		},
		"coins are not sorted by denom alphabetically, fail": {
			sdk.DecCoins{
				sdk.NewDecCoin("photon", math.OneInt()),
				sdk.NewDecCoin("atom", math.OneInt()),
			},
			true,
		},
		"negative amount, fail": {
			sdk.DecCoins{
				sdk.DecCoin{Denom: "photon", Amount: math.LegacyOneDec().Neg()},
			},
			true,
		},
		"invalid denom, fail": {
			sdk.DecCoins{
				sdk.DecCoin{Denom: "photon!", Amount: math.LegacyOneDec().Neg()},
			},
			true,
		},
	}

	for name, test := range tests {
		t.Run(name, func(t *testing.T) {
			err := validateMinimumGasPrices(test.coins)
			if test.expectErr {
				require.Error(t, err)
				return
			}
			require.NoError(t, err)
		})
	}
}

-- Chunk 3 --
// params_test.go:80-124
func Test_validateBypassMinFeeMsgTypes(t *testing.T) {
	tests := map[string]struct {
		msgTypes  interface{}
		expectErr bool
	}{
		"DefaultParams, pass": {
			DefaultParams().BypassMinFeeMsgTypes,
			false,
		},
		"wrong msg type should make conversion fail, fail": {
			[]int{0, 1, 2, 3},
			true,
		},
		"empty msg types, pass": {
			[]string{},
			false,
		},
		"empty msg type, fail": {
			[]string{""},
			true,
		},
		"invalid msg type name, fail": {
			[]string{"ibc.core.channel.v1.MsgRecvPacket"},
			true,
		},
		"mixed valid and invalid msgs, fail": {
			[]string{
				"/ibc.core.channel.v1.MsgRecvPacket",
				"",
			},
			true,
		},
	}

	for name, test := range tests {
		t.Run(name, func(t *testing.T) {
			err := validateBypassMinFeeMsgTypes(test.msgTypes)
			if test.expectErr {
				require.Error(t, err)
				return
			}
			require.NoError(t, err)
		})
	}
}

-- Chunk 4 --
// params_test.go:126-159
func Test_validateMaxTotalBypassMinFeeMsgGasUsage(t *testing.T) {
	tests := map[string]struct {
		msgTypes  interface{}
		expectErr bool
	}{
		"DefaultParams, pass": {
			DefaultParams().MaxTotalBypassMinFeeMsgGasUsage,
			false,
		},
		"zero value, pass": {
			uint64(0),
			false,
		},
		"negative value, fail": {
			-1,
			true,
		},
		"invalid type, fail": {
			"5",
			true,
		},
	}

	for name, test := range tests {
		t.Run(name, func(t *testing.T) {
			err := validateMaxTotalBypassMinFeeMsgGasUsage(test.msgTypes)
			if test.expectErr {
				require.Error(t, err)
				return
			}
			require.NoError(t, err)
		})
	}
}

=== File: x/globalfee/client/cli/query.go ===

-- Chunk 1 --
// query.go:12-24
func GetQueryCmd() *cobra.Command {
	queryCmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      "Querying commands for the global fee module",
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}
	queryCmd.AddCommand(
		GetCmdShowGlobalFeeParams(),
	)
	return queryCmd
}

-- Chunk 2 --
// query.go:26-48
func GetCmdShowGlobalFeeParams() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "params",
		Short: "Show globalfee params",
		Long:  "Show globalfee requirement: minimum_gas_prices, bypass_min_fee_msg_types, max_total_bypass_minFee_msg_gas_usage",
		Args:  cobra.ExactArgs(0),
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)
			res, err := queryClient.Params(cmd.Context(), &types.QueryParamsRequest{})
			if err != nil {
				return err
			}
			return clientCtx.PrintProto(&res.Params)
		},
	}
	flags.AddQueryFlagsToCmd(cmd)
	return cmd
}

=== File: x/xion/module.go ===

-- Chunk 1 --
// module.go:29-29
type AppModuleBasic struct{}

-- Chunk 2 --
// module.go:32-34
func (AppModuleBasic) Name() string {
	return types.ModuleName
}

-- Chunk 3 --
// module.go:37-39
func (AppModuleBasic) RegisterLegacyAminoCodec(cdc *codec.LegacyAmino) {
	types.RegisterLegacyAminoCodec(cdc)
}

-- Chunk 4 --
// module.go:42-44
func (AppModuleBasic) RegisterInterfaces(registry codectypes.InterfaceRegistry) {
	types.RegisterInterfaces(registry)
}

-- Chunk 5 --
// module.go:48-50
func (AppModuleBasic) DefaultGenesis(cdc codec.JSONCodec) json.RawMessage {
	return cdc.MustMarshalJSON(types.DefaultGenesisState())
}

-- Chunk 6 --
// module.go:53-60
func (AppModuleBasic) ValidateGenesis(cdc codec.JSONCodec, _ client.TxEncodingConfig, bz json.RawMessage) error {
	var gs types.GenesisState
	if err := cdc.UnmarshalJSON(bz, &gs); err != nil {
		return fmt.Errorf("failed to unmarshal %s genesis state: %w", types.ModuleName, err)
	}

	return gs.Validate()
}

-- Chunk 7 --
// module.go:63-63
func (AppModuleBasic) RegisterGRPCGatewayRoutes(_ client.Context, _ *runtime.ServeMux) {}

-- Chunk 8 --
// module.go:66-68
func (AppModuleBasic) GetTxCmd() *cobra.Command {
	return cli.NewTxCmd()
}

-- Chunk 9 --
// module.go:71-73
func (AppModuleBasic) GetQueryCmd() *cobra.Command {
	return cli.GetQueryCmd()
}

-- Chunk 10 --
// module.go:76-79
type AppModule struct {
	AppModuleBasic
	keeper keeper.Keeper
}

-- Chunk 11 --
// module.go:81-82
func (am AppModule) IsOnePerModuleType() {
}

-- Chunk 12 --
// module.go:84-85
func (am AppModule) IsAppModule() {
}

-- Chunk 13 --
// module.go:88-92
func NewAppModule(k keeper.Keeper) AppModule {
	return AppModule{
		keeper: k,
	}
}

-- Chunk 14 --
// module.go:95-104
func (am AppModule) RegisterServices(cfg module.Configurator) {
	types.RegisterMsgServer(cfg.MsgServer(), keeper.NewMsgServerImpl(am.keeper))
	types.RegisterQueryServer(cfg.QueryServer(), am.keeper)

	// TODO(froch, 20240415): Migration to be applied later
	// m := keeper.NewMigrator(am.keeper.ContractOpsKeeper, am.keeper.ContractViewKeeper, am.keeper.AAKeeper)
	// if err := cfg.RegisterMigration(types.ModuleName, 1, m.Migrate1to2); err != nil {
	//	panic(fmt.Sprintf("failed to migrate x/xion from version 1 to 2: %v", err))
	// }
}

-- Chunk 15 --
// module.go:108-113
func (am AppModule) InitGenesis(ctx sdk.Context, cdc codec.JSONCodec, data json.RawMessage) []abci.ValidatorUpdate {
	var genesisState types.GenesisState
	cdc.MustUnmarshalJSON(data, &genesisState)
	am.keeper.InitGenesis(ctx, &genesisState)
	return []abci.ValidatorUpdate{}
}

-- Chunk 16 --
// module.go:117-120
func (am AppModule) ExportGenesis(ctx sdk.Context, cdc codec.JSONCodec) json.RawMessage {
	gs := am.keeper.ExportGenesis(ctx)
	return cdc.MustMarshalJSON(gs)
}

-- Chunk 17 --
// module.go:123-123
func (AppModule) ConsensusVersion() uint64 { return 1 }

=== File: x/xion/keeper/keeper.go ===

-- Chunk 1 --
// keeper.go:19-32
type Keeper struct {
	cdc                codec.BinaryCodec
	storeKey           storetypes.StoreKey
	paramSpace         paramtypes.Subspace
	bankKeeper         types.BankKeeper
	accountKeeper      types.AccountKeeper
	ContractOpsKeeper  wasmtypes.ContractOpsKeeper
	ContractViewKeeper wasmtypes.ViewKeeper
	AAKeeper           types.AbstractAccountKeeper

	// the address capable of executing a MsgSetPlatformPercentage message.
	// Typically, this should be the x/gov module account
	authority string
}

-- Chunk 2 --
// keeper.go:34-55
func NewKeeper(cdc codec.BinaryCodec,
	key storetypes.StoreKey,
	paramSpace paramtypes.Subspace,
	bankKeeper types.BankKeeper,
	accountKeeper types.AccountKeeper,
	wasmOpsKeeper wasmtypes.ContractOpsKeeper,
	wasmViewKeeper wasmtypes.ViewKeeper,
	aaKeeper types.AbstractAccountKeeper,
	authority string,
) Keeper {
	return Keeper{
		storeKey:           key,
		cdc:                cdc,
		paramSpace:         paramSpace,
		bankKeeper:         bankKeeper,
		accountKeeper:      accountKeeper,
		ContractOpsKeeper:  wasmOpsKeeper,
		ContractViewKeeper: wasmViewKeeper,
		AAKeeper:           aaKeeper,
		authority:          authority,
	}
}

-- Chunk 3 --
// keeper.go:58-60
func (k Keeper) Logger(ctx sdktypes.Context) log.Logger {
	return ctx.Logger().With("module", "x/"+types.ModuleName)
}

-- Chunk 4 --
// keeper.go:63-67
func (k Keeper) GetPlatformPercentage(ctx sdktypes.Context) math.Int {
	bz := ctx.KVStore(k.storeKey).Get(types.PlatformPercentageKey)
	percentage := sdktypes.BigEndianToUint64(bz)
	return math.NewIntFromUint64(percentage)
}

-- Chunk 5 --
// keeper.go:69-71
func (k Keeper) OverwritePlatformPercentage(ctx sdktypes.Context, percentage uint32) {
	ctx.KVStore(k.storeKey).Set(types.PlatformPercentageKey, sdktypes.Uint64ToBigEndian(uint64(percentage)))
}

-- Chunk 6 --
// keeper.go:74-82
func (k Keeper) GetPlatformMinimums(ctx sdktypes.Context) (coins sdktypes.Coins, err error) {
	bz := ctx.KVStore(k.storeKey).Get(types.PlatformMinimumKey)

	if len(bz) != 0 {
		err = json.Unmarshal(bz, &coins)
	}

	return coins, err
}

-- Chunk 7 --
// keeper.go:84-91
func (k Keeper) OverwritePlatformMinimum(ctx sdktypes.Context, coins sdktypes.Coins) error {
	bz, err := json.Marshal(coins)
	if err != nil {
		return err
	}
	ctx.KVStore(k.storeKey).Set(types.PlatformMinimumKey, bz)
	return nil
}

-- Chunk 8 --
// keeper.go:96-98
func (k Keeper) GetAuthority() string {
	return k.authority
}

=== File: x/xion/keeper/grpc_query.go ===

-- Chunk 1 --
// grpc_query.go:19-41
func (k Keeper) WebAuthNVerifyRegister(_ context.Context, request *types.QueryWebAuthNVerifyRegisterRequest) (*types.QueryWebAuthNVerifyRegisterResponse, error) {
	rp, err := url.Parse(request.Rp)
	if err != nil {
		return nil, err
	}

	data, err := protocol.ParseCredentialCreationResponseBody(bytes.NewReader(request.Data))
	if err != nil {
		return nil, err
	}

	credential, err := types.VerifyRegistration(rp, request.Addr, request.Challenge, data)
	if err != nil {
		return nil, err
	}

	credentialBz, err := json.Marshal(&credential)
	if err != nil {
		return nil, err
	}

	return &types.QueryWebAuthNVerifyRegisterResponse{Credential: credentialBz}, nil
}

-- Chunk 2 --
// grpc_query.go:43-66
func (k Keeper) WebAuthNVerifyAuthenticate(_ context.Context, request *types.QueryWebAuthNVerifyAuthenticateRequest) (*types.QueryWebAuthNVerifyAuthenticateResponse, error) {
	rp, err := url.Parse(request.Rp)
	if err != nil {
		return nil, err
	}

	data, err := protocol.ParseCredentialRequestResponseBody(bytes.NewReader(request.Data))
	if err != nil {
		return nil, err
	}

	var credential webauthn.Credential
	err = json.Unmarshal(request.Credential, &credential)
	if err != nil {
		return nil, err
	}

	_, err = types.VerifyAuthentication(rp, request.Addr, request.Challenge, &credential, data)
	if err != nil {
		return nil, err
	}

	return &types.QueryWebAuthNVerifyAuthenticateResponse{}, nil
}

-- Chunk 3 --
// grpc_query.go:69-73
func (k Keeper) PlatformPercentage(ctx context.Context, _ *types.QueryPlatformPercentageRequest) (*types.QueryPlatformPercentageResponse, error) {
	sdkCtx := sdktypes.UnwrapSDKContext(ctx)
	percentage := k.GetPlatformPercentage(sdkCtx).Uint64()
	return &types.QueryPlatformPercentageResponse{PlatformPercentage: percentage}, nil
}

-- Chunk 4 --
// grpc_query.go:76-84
func (k Keeper) PlatformMinimum(ctx context.Context, _ *types.QueryPlatformMinimumRequest) (*types.QueryPlatformMinimumResponse, error) {
	sdkCtx := sdktypes.UnwrapSDKContext(ctx)
	coins, err := k.GetPlatformMinimums(sdkCtx)
	if err != nil {
		return nil, err
	}

	return &types.QueryPlatformMinimumResponse{Minimums: coins}, nil
}

=== File: x/xion/keeper/genesis.go ===

-- Chunk 1 --
// genesis.go:12-18
func (k Keeper) InitGenesis(ctx sdk.Context, genState *types.GenesisState) {
	k.OverwritePlatformPercentage(ctx, genState.PlatformPercentage)
	err := k.OverwritePlatformMinimum(ctx, genState.PlatformMinimums)
	if err != nil {
		panic(err)
	}
}

-- Chunk 2 --
// genesis.go:21-31
func (k Keeper) ExportGenesis(ctx sdk.Context) *types.GenesisState {
	bz := ctx.KVStore(k.storeKey).Get(types.PlatformPercentageKey)
	platformPercentage := binary.BigEndian.Uint32(bz)

	platformMinimums, err := k.GetPlatformMinimums(ctx)
	if err != nil {
		panic(err)
	}
	rv := types.NewGenesisState(platformPercentage, platformMinimums)
	return rv
}

=== File: x/xion/keeper/migrations.go ===

-- Chunk 1 --
// migrations.go:14-18
type Migrator struct {
	wasmOpsKeeper  wasmtypes.ContractOpsKeeper
	wasmViewKeeper wasmtypes.ViewKeeper
	aaKeeper       types.AbstractAccountKeeper
}

-- Chunk 2 --
// migrations.go:20-22
func NewMigrator(wasmOpsKeeper wasmtypes.ContractOpsKeeper, wasmViewKeeper wasmtypes.ViewKeeper, aaKeeper types.AbstractAccountKeeper) Migrator {
	return Migrator{wasmOpsKeeper: wasmOpsKeeper, wasmViewKeeper: wasmViewKeeper, aaKeeper: aaKeeper}
}

-- Chunk 3 --
// migrations.go:24-37
func (m Migrator) Migrate1to2(ctx sdk.Context) error {
	switch ctx.ChainID() {
	case "xion-mainnet-1":
		return nil // no migration needed
	case "xion-testnet-1":
		newCodeID := uint64(327)
		return v1.MigrateStore(ctx, m.wasmOpsKeeper, m.wasmViewKeeper, m.aaKeeper, newCodeID)
	case "xion-1": // integration tests chainID
		newCodeID := uint64(2)
		return v1.MigrateStore(ctx, m.wasmOpsKeeper, m.wasmViewKeeper, m.aaKeeper, newCodeID)
	default:
		return fmt.Errorf("unsupported chain id: %s", ctx.ChainID())
	}
}

=== File: x/xion/keeper/msg_server.go ===

-- Chunk 1 --
// msg_server.go:22-24
type msgServer struct {
	Keeper
}

-- Chunk 2 --
// msg_server.go:30-32
func NewMsgServerImpl(keeper Keeper) types.MsgServer {
	return &msgServer{Keeper: keeper}
}

-- Chunk 3 --
// msg_server.go:34-92
func (k msgServer) Send(goCtx context.Context, msg *types.MsgSend) (*types.MsgSendResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	if err := k.bankKeeper.IsSendEnabledCoins(ctx, msg.Amount...); err != nil {
		return nil, err
	}

	from, err := sdk.AccAddressFromBech32(msg.FromAddress)
	if err != nil {
		return nil, err
	}
	to, err := sdk.AccAddressFromBech32(msg.ToAddress)
	if err != nil {
		return nil, err
	}

	if k.bankKeeper.BlockedAddr(to) {
		return nil, errorsmod.Wrapf(sdkerrors.ErrUnauthorized, "%s is not allowed to receive funds", msg.ToAddress)
	}

	percentage := k.GetPlatformPercentage(ctx)
	minimums, err := k.GetPlatformMinimums(ctx)
	if err != nil {
		return nil, err
	}
	throughCoins := msg.Amount
	if !msg.Amount.IsAnyGT(minimums) {
		// minimum has not been met. no coin in msg.Amount exceeds a minimum that has been set
		return nil, errorsmod.Wrapf(types.ErrMinimumNotMet, "received %v, needed at least %v", msg.Amount, minimums)
	}

	if !percentage.IsZero() {
		platformCoins := msg.Amount.MulInt(percentage).QuoInt(math.NewInt(10000))
		throughCoins = throughCoins.Sub(platformCoins...)

		if err := k.bankKeeper.SendCoinsFromAccountToModule(ctx, from, authtypes.FeeCollectorName, platformCoins); err != nil {
			return nil, err
		}
	}

	err = k.bankKeeper.SendCoins(ctx, from, to, throughCoins)
	if err != nil {
		return nil, err
	}

	defer func() {
		for _, a := range throughCoins {
			if a.Amount.IsInt64() {
				telemetry.SetGaugeWithLabels(
					[]string{"tx", "msg", "send"},
					float32(a.Amount.Int64()),
					[]metrics.Label{telemetry.NewLabel("denom", a.Denom)},
				)
			}
		}
	}()

	return &types.MsgSendResponse{}, nil
}

-- Chunk 4 --
// msg_server.go:94-151
func (k msgServer) MultiSend(goCtx context.Context, msg *types.MsgMultiSend) (*types.MsgMultiSendResponse, error) {
	ctx := sdk.UnwrapSDKContext(goCtx)

	// NOTE: totalIn == totalOut should already have been checked
	for _, in := range msg.Inputs {
		if err := k.bankKeeper.IsSendEnabledCoins(ctx, in.Coins...); err != nil {
			return nil, err
		}
	}

	percentage := k.GetPlatformPercentage(ctx)
	minimums, err := k.GetPlatformMinimums(ctx)
	if err != nil {
		return nil, err
	}
	var outputs []banktypes.Output
	totalPlatformCoins := sdk.NewCoins()

	if !msg.Inputs[0].Coins.IsAnyGT(minimums) {
		// minimum has not been met. no coin in msg.Amount exceeds a minimum that has been set
		return nil, errorsmod.Wrapf(types.ErrMinimumNotMet, "received %v, needed at least %v", msg.Inputs[0].Coins, minimums)
	}

	for _, out := range msg.Outputs {
		accAddr := sdk.MustAccAddressFromBech32(out.Address)

		if k.bankKeeper.BlockedAddr(accAddr) {
			return nil, errorsmod.Wrapf(sdkerrors.ErrUnauthorized, "%s is not allowed to receive funds", out.Address)
		}

		// if there is a platform fee set, reduce it from each output
		if !percentage.IsZero() {
			platformCoins := out.Coins.MulInt(percentage).QuoInt(math.NewInt(10000))
			throughCoins, wentNegative := out.Coins.SafeSub(platformCoins...)
			if wentNegative {
				return nil, fmt.Errorf("unable to subtract %v from %v", platformCoins, throughCoins)
			}

			outputs = append(outputs, banktypes.NewOutput(accAddr, throughCoins))
			totalPlatformCoins = totalPlatformCoins.Add(platformCoins...)
		} else {
			outputs = append(outputs, out)
		}
	}

	// if there is a platform fee set, create the final total output for module account
	if !totalPlatformCoins.IsZero() {
		feeCollectorAcc := k.accountKeeper.GetModuleAccount(ctx, authtypes.FeeCollectorName).GetAddress()
		outputs = append(outputs, banktypes.NewOutput(feeCollectorAcc, totalPlatformCoins))
	}

	err = k.bankKeeper.InputOutputCoins(ctx, msg.Inputs[0], outputs)
	if err != nil {
		return nil, err
	}

	return &types.MsgMultiSendResponse{}, nil
}

-- Chunk 5 --
// msg_server.go:153-162
func (k msgServer) SetPlatformPercentage(goCtx context.Context, msg *types.MsgSetPlatformPercentage) (*types.MsgSetPlatformPercentageResponse, error) {
	if k.GetAuthority() != msg.Authority {
		return nil, errorsmod.Wrapf(govtypes.ErrInvalidSigner, "invalid authority; expected %s, got %s", k.GetAuthority(), msg.Authority)
	}

	ctx := sdk.UnwrapSDKContext(goCtx)
	k.OverwritePlatformPercentage(ctx, msg.PlatformPercentage)

	return &types.MsgSetPlatformPercentageResponse{}, nil
}

-- Chunk 6 --
// msg_server.go:164-173
func (k msgServer) SetPlatformMinimum(goCtx context.Context, msg *types.MsgSetPlatformMinimum) (*types.MsgSetPlatformMinimumResponse, error) {
	if k.GetAuthority() != msg.Authority {
		return nil, errorsmod.Wrapf(govtypes.ErrInvalidSigner, "invalid authority; expected %s, got %s", k.GetAuthority(), msg.Authority)
	}

	ctx := sdk.UnwrapSDKContext(goCtx)
	err := k.OverwritePlatformMinimum(ctx, msg.Minimums)

	return &types.MsgSetPlatformMinimumResponse{}, err
}

=== File: x/xion/migrations/v1/migration.go ===

-- Chunk 1 --
// migration.go:15-98
func MigrateStore(
	ctx sdk.Context,
	wasmOpsKeeper wasmtypes.ContractOpsKeeper,
	wasmViewKeeper wasmtypes.ViewKeeper,
	aaKeeper types.AbstractAccountKeeper,
	newCodeID uint64,
) error {
	// get the previous account code ID
	aaParams, err := aaKeeper.GetParams(ctx)
	if err != nil {
		return err
	}
	if len(aaParams.AllowedCodeIDs) != 1 {
		return fmt.Errorf("expected one allowed code id for abstract account, got: %v", aaParams.AllowedCodeIDs)
	}

	originalCodeID := aaParams.AllowedCodeIDs[0]

	// the account contract should always be pinned
	err = wasmOpsKeeper.PinCode(ctx, newCodeID)
	if err != nil {
		return err
	}

	// setup concurrency control
	var wg sync.WaitGroup
	errors := make(chan error, 1)
	defer close(errors)
	semaphore := make(chan struct{}, 10) // Limits the number of concurrent migrations
	defer close(semaphore)

	// counter for migrated contracts
	var migratedCount uint64

	// iterate through all existing accounts at this code ID, and migrate them
	wasmViewKeeper.IterateContractsByCode(ctx, originalCodeID, func(instance sdk.AccAddress) bool {
		semaphore <- struct{}{} // acquire semaphore
		wg.Add(1)

		go func(instance sdk.AccAddress) {
			defer wg.Done()
			defer func() { <-semaphore }() // release semaphore

			ctx.Logger().Info("Migrating contract", "instance", instance.String(), "newCodeID", newCodeID)
			_, err = wasmOpsKeeper.Migrate(ctx, instance, instance, newCodeID, []byte("{}"))
			if err != nil {
				ctx.Logger().Error("Error migrating contract", "contract", instance.String(), "error", err.Error())
				errors <- err
			} else {
				// safely increment the counter
				atomic.AddUint64(&migratedCount, 1)
			}
		}(instance)

		return false
	})

	wg.Wait()

	select {
	case err = <-errors:
		return err
	default:
		// No errors, proceed
	}

	ctx.Logger().Info(fmt.Sprintf("Total contracts migrated: %d", migratedCount))

	// as the previous contract is no longer the main account target, it doesn't
	// need to be pinned
	err = wasmOpsKeeper.UnpinCode(ctx, originalCodeID)
	if err != nil {
		return err
	}

	// adjust the aa registration endpoint to point at the new code ID
	aaParams.AllowedCodeIDs = []uint64{newCodeID}
	err = aaKeeper.SetParams(ctx, aaParams)
	if err != nil {
		return err
	}

	return nil
}

=== File: x/xion/types/genesis.pb.go ===

-- Chunk 1 --
// genesis.pb.go:28-31
type GenesisState struct {
	PlatformPercentage uint32                                   `protobuf:"varint,1,opt,name=platform_percentage,json=platformPercentage,proto3" json:"platform_percentage,omitempty"`
	PlatformMinimums   github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=platform_minimums,json=platformMinimums,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"platform_minimums,omitempty" yaml:"platform_minimums"`
}

-- Chunk 2 --
// genesis.pb.go:33-33
func (m *GenesisState) Reset()         { *m = GenesisState{} }

-- Chunk 3 --
// genesis.pb.go:34-34
func (m *GenesisState) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// genesis.pb.go:35-35
func (*GenesisState) ProtoMessage()    {}

-- Chunk 5 --
// genesis.pb.go:36-38
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0f59b6b1baf029, []int{0}
}

-- Chunk 6 --
// genesis.pb.go:39-41
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// genesis.pb.go:42-53
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// genesis.pb.go:54-56
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}

-- Chunk 9 --
// genesis.pb.go:57-59
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// genesis.pb.go:60-62
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

-- Chunk 11 --
// genesis.pb.go:66-71
func (m *GenesisState) GetPlatformPercentage() uint32 {
	if m != nil {
		return m.PlatformPercentage
	}
	return 0
}

-- Chunk 12 --
// genesis.pb.go:73-78
func (m *GenesisState) GetPlatformMinimums() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.PlatformMinimums
	}
	return nil
}

-- Chunk 13 --
// genesis.pb.go:80-82
func init() {
	proto.RegisterType((*GenesisState)(nil), "xion.v1.GenesisState")
}

-- Chunk 14 --
// genesis.pb.go:84-84
func init() { proto.RegisterFile("xion/v1/genesis.proto", fileDescriptor_9a0f59b6b1baf029) }

-- Chunk 15 --
// genesis.pb.go:110-118
func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 16 --
// genesis.pb.go:120-123
func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 17 --
// genesis.pb.go:125-150
func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PlatformMinimums) > 0 {
		for iNdEx := len(m.PlatformMinimums) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PlatformMinimums[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.PlatformPercentage != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.PlatformPercentage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

-- Chunk 18 --
// genesis.pb.go:152-162
func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 19 --
// genesis.pb.go:163-179
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlatformPercentage != 0 {
		n += 1 + sovGenesis(uint64(m.PlatformPercentage))
	}
	if len(m.PlatformMinimums) > 0 {
		for _, e := range m.PlatformMinimums {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

-- Chunk 20 --
// genesis.pb.go:181-183
func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 21 --
// genesis.pb.go:184-186
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 22 --
// genesis.pb.go:187-289
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformPercentage", wireType)
			}
			m.PlatformPercentage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlatformPercentage |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformMinimums", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PlatformMinimums = append(m.PlatformMinimums, types.Coin{})
			if err := m.PlatformMinimums[len(m.PlatformMinimums)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 23 --
// genesis.pb.go:290-367
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/xion/types/feegrant.pb.go ===

-- Chunk 1 --
// feegrant.pb.go:33-37
type AuthzAllowance struct {
	// allowance can be any of basic and periodic fee allowance.
	Allowance    *types.Any `protobuf:"bytes,1,opt,name=allowance,proto3" json:"allowance,omitempty"`
	AuthzGrantee string     `protobuf:"bytes,2,opt,name=authz_grantee,json=authzGrantee,proto3" json:"authz_grantee,omitempty"`
}

-- Chunk 2 --
// feegrant.pb.go:39-39
func (m *AuthzAllowance) Reset()         { *m = AuthzAllowance{} }

-- Chunk 3 --
// feegrant.pb.go:40-40
func (m *AuthzAllowance) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// feegrant.pb.go:41-41
func (*AuthzAllowance) ProtoMessage()    {}

-- Chunk 5 --
// feegrant.pb.go:42-44
func (*AuthzAllowance) Descriptor() ([]byte, []int) {
	return fileDescriptor_38e1987a87c7c3e9, []int{0}
}

-- Chunk 6 --
// feegrant.pb.go:45-47
func (m *AuthzAllowance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// feegrant.pb.go:48-59
func (m *AuthzAllowance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthzAllowance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// feegrant.pb.go:60-62
func (m *AuthzAllowance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthzAllowance.Merge(m, src)
}

-- Chunk 9 --
// feegrant.pb.go:63-65
func (m *AuthzAllowance) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// feegrant.pb.go:66-68
func (m *AuthzAllowance) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthzAllowance.DiscardUnknown(m)
}

-- Chunk 11 --
// feegrant.pb.go:73-77
type ContractsAllowance struct {
	// allowance can be any allowance interface type.
	Allowance         *types.Any `protobuf:"bytes,1,opt,name=allowance,proto3" json:"allowance,omitempty"`
	ContractAddresses []string   `protobuf:"bytes,2,rep,name=contract_addresses,json=contractAddresses,proto3" json:"contract_addresses,omitempty"`
}

-- Chunk 12 --
// feegrant.pb.go:79-79
func (m *ContractsAllowance) Reset()         { *m = ContractsAllowance{} }

-- Chunk 13 --
// feegrant.pb.go:80-80
func (m *ContractsAllowance) String() string { return proto.CompactTextString(m) }

-- Chunk 14 --
// feegrant.pb.go:81-81
func (*ContractsAllowance) ProtoMessage()    {}

-- Chunk 15 --
// feegrant.pb.go:82-84
func (*ContractsAllowance) Descriptor() ([]byte, []int) {
	return fileDescriptor_38e1987a87c7c3e9, []int{1}
}

-- Chunk 16 --
// feegrant.pb.go:85-87
func (m *ContractsAllowance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 17 --
// feegrant.pb.go:88-99
func (m *ContractsAllowance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContractsAllowance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 18 --
// feegrant.pb.go:100-102
func (m *ContractsAllowance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractsAllowance.Merge(m, src)
}

-- Chunk 19 --
// feegrant.pb.go:103-105
func (m *ContractsAllowance) XXX_Size() int {
	return m.Size()
}

-- Chunk 20 --
// feegrant.pb.go:106-108
func (m *ContractsAllowance) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractsAllowance.DiscardUnknown(m)
}

-- Chunk 21 --
// feegrant.pb.go:113-116
type MultiAnyAllowance struct {
	// allowance can be any allowance interface type.
	Allowances []*types.Any `protobuf:"bytes,1,rep,name=allowances,proto3" json:"allowances,omitempty"`
}

-- Chunk 22 --
// feegrant.pb.go:118-118
func (m *MultiAnyAllowance) Reset()         { *m = MultiAnyAllowance{} }

-- Chunk 23 --
// feegrant.pb.go:119-119
func (m *MultiAnyAllowance) String() string { return proto.CompactTextString(m) }

-- Chunk 24 --
// feegrant.pb.go:120-120
func (*MultiAnyAllowance) ProtoMessage()    {}

-- Chunk 25 --
// feegrant.pb.go:121-123
func (*MultiAnyAllowance) Descriptor() ([]byte, []int) {
	return fileDescriptor_38e1987a87c7c3e9, []int{2}
}

-- Chunk 26 --
// feegrant.pb.go:124-126
func (m *MultiAnyAllowance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 27 --
// feegrant.pb.go:127-138
func (m *MultiAnyAllowance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MultiAnyAllowance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 28 --
// feegrant.pb.go:139-141
func (m *MultiAnyAllowance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiAnyAllowance.Merge(m, src)
}

-- Chunk 29 --
// feegrant.pb.go:142-144
func (m *MultiAnyAllowance) XXX_Size() int {
	return m.Size()
}

-- Chunk 30 --
// feegrant.pb.go:145-147
func (m *MultiAnyAllowance) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiAnyAllowance.DiscardUnknown(m)
}

-- Chunk 31 --
// feegrant.pb.go:151-155
func init() {
	proto.RegisterType((*AuthzAllowance)(nil), "xion.v1.AuthzAllowance")
	proto.RegisterType((*ContractsAllowance)(nil), "xion.v1.ContractsAllowance")
	proto.RegisterType((*MultiAnyAllowance)(nil), "xion.v1.MultiAnyAllowance")
}

-- Chunk 32 --
// feegrant.pb.go:157-157
func init() { proto.RegisterFile("xion/v1/feegrant.proto", fileDescriptor_38e1987a87c7c3e9) }

-- Chunk 33 --
// feegrant.pb.go:191-199
func (m *AuthzAllowance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 34 --
// feegrant.pb.go:201-204
func (m *AuthzAllowance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 35 --
// feegrant.pb.go:206-231
func (m *AuthzAllowance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AuthzGrantee) > 0 {
		i -= len(m.AuthzGrantee)
		copy(dAtA[i:], m.AuthzGrantee)
		i = encodeVarintFeegrant(dAtA, i, uint64(len(m.AuthzGrantee)))
		i--
		dAtA[i] = 0x12
	}
	if m.Allowance != nil {
		{
			size, err := m.Allowance.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFeegrant(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 36 --
// feegrant.pb.go:233-241
func (m *ContractsAllowance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 37 --
// feegrant.pb.go:243-246
func (m *ContractsAllowance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 38 --
// feegrant.pb.go:248-275
func (m *ContractsAllowance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractAddresses) > 0 {
		for iNdEx := len(m.ContractAddresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.ContractAddresses[iNdEx])
			copy(dAtA[i:], m.ContractAddresses[iNdEx])
			i = encodeVarintFeegrant(dAtA, i, uint64(len(m.ContractAddresses[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Allowance != nil {
		{
			size, err := m.Allowance.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintFeegrant(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 39 --
// feegrant.pb.go:277-285
func (m *MultiAnyAllowance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 40 --
// feegrant.pb.go:287-290
func (m *MultiAnyAllowance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 41 --
// feegrant.pb.go:292-312
func (m *MultiAnyAllowance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Allowances) > 0 {
		for iNdEx := len(m.Allowances) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Allowances[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintFeegrant(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 42 --
// feegrant.pb.go:314-324
func encodeVarintFeegrant(dAtA []byte, offset int, v uint64) int {
	offset -= sovFeegrant(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 43 --
// feegrant.pb.go:325-340
func (m *AuthzAllowance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Allowance != nil {
		l = m.Allowance.Size()
		n += 1 + l + sovFeegrant(uint64(l))
	}
	l = len(m.AuthzGrantee)
	if l > 0 {
		n += 1 + l + sovFeegrant(uint64(l))
	}
	return n
}

-- Chunk 44 --
// feegrant.pb.go:342-359
func (m *ContractsAllowance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Allowance != nil {
		l = m.Allowance.Size()
		n += 1 + l + sovFeegrant(uint64(l))
	}
	if len(m.ContractAddresses) > 0 {
		for _, s := range m.ContractAddresses {
			l = len(s)
			n += 1 + l + sovFeegrant(uint64(l))
		}
	}
	return n
}

-- Chunk 45 --
// feegrant.pb.go:361-374
func (m *MultiAnyAllowance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Allowances) > 0 {
		for _, e := range m.Allowances {
			l = e.Size()
			n += 1 + l + sovFeegrant(uint64(l))
		}
	}
	return n
}

-- Chunk 46 --
// feegrant.pb.go:376-378
func sovFeegrant(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 47 --
// feegrant.pb.go:379-381
func sozFeegrant(x uint64) (n int) {
	return sovFeegrant(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 48 --
// feegrant.pb.go:382-499
func (m *AuthzAllowance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthzAllowance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthzAllowance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allowance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Allowance == nil {
				m.Allowance = &types.Any{}
			}
			if err := m.Allowance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthzGrantee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthzGrantee = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFeegrant(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFeegrant
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 49 --
// feegrant.pb.go:500-617
func (m *ContractsAllowance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContractsAllowance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContractsAllowance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allowance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Allowance == nil {
				m.Allowance = &types.Any{}
			}
			if err := m.Allowance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddresses = append(m.ContractAddresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFeegrant(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFeegrant
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 50 --
// feegrant.pb.go:618-701
func (m *MultiAnyAllowance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MultiAnyAllowance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MultiAnyAllowance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Allowances", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthFeegrant
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthFeegrant
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Allowances = append(m.Allowances, &types.Any{})
			if err := m.Allowances[len(m.Allowances)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipFeegrant(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFeegrant
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 51 --
// feegrant.pb.go:702-779
func skipFeegrant(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFeegrant
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFeegrant
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFeegrant
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFeegrant
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFeegrant
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/xion/types/codec.go ===

-- Chunk 1 --
// codec.go:16-24
func RegisterLegacyAminoCodec(cdc *codec.LegacyAmino) {
	legacy.RegisterAminoMsg(cdc, &MsgSend{}, "xion/MsgSend")
	legacy.RegisterAminoMsg(cdc, &MsgMultiSend{}, "xion/MsgMultiSend")
	legacy.RegisterAminoMsg(cdc, &MsgSetPlatformPercentage{}, "xion/MsgSetPlatformPercentage")

	cdc.RegisterConcrete(&AuthzAllowance{}, "xion/AuthzAllowance", nil)
	cdc.RegisterConcrete(&ContractsAllowance{}, "xion/ContractsAllowance", nil)
	cdc.RegisterConcrete(&MultiAnyAllowance{}, "xion/MultiAnyAllowance", nil)
}

-- Chunk 2 --
// codec.go:26-42
func RegisterInterfaces(registry types.InterfaceRegistry) {
	registry.RegisterImplementations((*sdk.Msg)(nil),
		&MsgSend{},
		&MsgMultiSend{},
		&MsgSetPlatformPercentage{},
	)

	registry.RegisterInterface(
		"cosmos.feegrant.v1beta1.FeeAllowanceI",
		(*feegrant.FeeAllowanceI)(nil),
		&AuthzAllowance{},
		&ContractsAllowance{},
		&MultiAnyAllowance{},
	)

	msgservice.RegisterMsgServiceDesc(registry, &_Msg_serviceDesc)
}

-- Chunk 3 --
// codec.go:46-50
func init() {
	RegisterLegacyAminoCodec(amino)
	cryptocodec.RegisterCrypto(amino)
	sdk.RegisterLegacyAminoCodec(amino)
}

=== File: x/xion/types/webauthn_test.go ===

-- Chunk 1 --
// webauthn_test.go:29-29
type signOpts struct{}

-- Chunk 2 --
// webauthn_test.go:31-33
func (*signOpts) HashFunc() crypto.Hash {
	return crypto.SHA256
}

-- Chunk 3 --
// webauthn_test.go:40-57
func getWebAuthNKeys(t *testing.T) (*rsa.PrivateKey, []byte, webauthncose.RSAPublicKeyData) {
	privateKey, _, err := wasmbinding.SetupPublicKeys("../../../wasmbindings/keys/jwtRS256.key")
	require.NoError(t, err)
	publicKey := privateKey.PublicKey
	publicKeyModulus := publicKey.N.Bytes()
	require.NoError(t, err)
	pubKeyData := webauthncose.RSAPublicKeyData{
		PublicKeyData: webauthncose.PublicKeyData{
			KeyType:   int64(webauthncose.RSAKey),
			Algorithm: int64(webauthncose.AlgRS256),
		},
		Modulus:  publicKeyModulus,
		Exponent: big.NewInt(int64(publicKey.E)).Bytes(),
	}
	publicKeyBuf, err := webauthncbor.Marshal(pubKeyData)
	require.NoError(t, err)
	return privateKey, publicKeyBuf, pubKeyData
}

-- Chunk 4 --
// webauthn_test.go:59-74
func CreateWebAuthn(t *testing.T) (webauthn.Config, *webauthn.WebAuthn, error) {
	webAuthnConfig := webauthn.Config{
		RPDisplayName:         "Xion",
		RPID:                  "xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
		RPOrigins:             []string{"https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app"},
		AttestationPreference: "none",
		AuthenticatorSelection: protocol.AuthenticatorSelection{
			AuthenticatorAttachment: protocol.Platform,
			UserVerification:        protocol.VerificationPreferred,
		},
	}
	webAuthn, err := webauthn.New(&webAuthnConfig)
	require.NoError(t, err)

	return webAuthnConfig, webAuthn, nil
}

-- Chunk 5 --
// webauthn_test.go:76-161
func CreateWebAuthNAttestationCred(t *testing.T, challenge []byte) []byte {
	webAuthnConfig, _, err := CreateWebAuthn(t)
	require.NoError(t, err)
	clientData := protocol.CollectedClientData{
		Type:      "webauthn.create",
		Challenge: string(challenge),
		Origin:    "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
	}

	_, publicKeyBuf, _ := getWebAuthNKeys(t)

	clientDataJSON, err := json.Marshal(clientData)
	require.NoError(t, err)

	RPIDHash := sha256.Sum256([]byte(webAuthnConfig.RPID))
	authData := protocol.AuthenticatorData{
		RPIDHash: RPIDHash[:],
		Counter:  0,
		AttData: protocol.AttestedCredentialData{
			AAGUID:              AAGUID,
			CredentialID:        credentialID,
			CredentialPublicKey: publicKeyBuf,
		},
		Flags: 69,
	}
	authDataBz := append(RPIDHash[:], big.NewInt(69).Bytes()...)
	counterBytes := make([]byte, 4)
	binary.LittleEndian.PutUint32(counterBytes, 0)
	authDataBz = append(authDataBz, counterBytes...)

	var attData []byte

	// Concatenate AAGUID
	attData = append(attData, AAGUID...)

	// Add CredentialIDLength
	credentialIDLengthBytes := make([]byte, 2)
	credentialIDLength := uint16(len(credentialID)) // nolint:gosec
	binary.BigEndian.PutUint16(credentialIDLengthBytes, credentialIDLength)
	attData = append(attData, credentialIDLengthBytes...)

	// Add CredentialID
	attData = append(attData, credentialID...)

	// Add CredentialPublicKey
	attData = append(attData, publicKeyBuf...)

	authDataBz = append(authDataBz, attData...)

	attestationObject := protocol.AttestationObject{
		AuthData:    authData,
		RawAuthData: authDataBz,
		Format:      "none",
	}
	attestationObjectJSON, err := webauthncbor.Marshal(attestationObject)
	require.NoError(t, err)

	attestationResponse := protocol.AuthenticatorAttestationResponse{
		AuthenticatorResponse: protocol.AuthenticatorResponse{
			ClientDataJSON: protocol.URLEncodedBase64(clientDataJSON),
		},
		AttestationObject: attestationObjectJSON,
	}
	_, err = attestationResponse.Parse()
	require.NoError(t, err)

	credentialCreationResponse := protocol.CredentialCreationResponse{
		PublicKeyCredential: protocol.PublicKeyCredential{
			Credential: protocol.Credential{
				ID:   string(credentialID),
				Type: "public-key",
			},
			RawID:                   credentialID,
			AuthenticatorAttachment: string(protocol.Platform),
		},
		AttestationResponse: attestationResponse,
	}
	_, err = credentialCreationResponse.Parse()
	require.NoError(t, err)

	credCreationRes, err := json.Marshal(credentialCreationResponse)
	require.NoError(t, err)
	_, err = protocol.ParseCredentialCreationResponseBody(bytes.NewReader((credCreationRes)))
	require.NoError(t, err)
	return credCreationRes
}

-- Chunk 6 --
// webauthn_test.go:163-276
func CreateWebAuthNSignature(t *testing.T, challenge []byte) []byte {
	webAuthnConfig, webAuthn, err := CreateWebAuthn(t)
	require.NoError(t, err)
	privateKey, publicKeyBuf, pubKeyData := getWebAuthNKeys(t)

	webAuthnUser := types.SmartContractUser{
		Address: "integration_tests",
		Credential: &webauthn.Credential{
			ID:              credentialID,
			AttestationType: "none",
			PublicKey:       publicKeyBuf,
			Transport:       []protocol.AuthenticatorTransport{protocol.Internal},
			Flags: webauthn.CredentialFlags{
				UserPresent:  false,
				UserVerified: false,
			},
			Authenticator: webauthn.Authenticator{
				AAGUID:     AAGUID,
				SignCount:  0,
				Attachment: protocol.Platform,
			},
		},
	}

	sessionData := webauthn.SessionData{
		Challenge:        string(challenge),
		UserID:           webAuthnUser.WebAuthnID(),
		UserVerification: protocol.VerificationPreferred,
	}
	RPIDHash := sha256.Sum256([]byte(webAuthnConfig.RPID))
	clientData := protocol.CollectedClientData{
		Type:      "webauthn.get",
		Challenge: string(challenge),
		Origin:    "https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app",
	}
	clientDataJSON, err := json.Marshal(clientData)
	require.NoError(t, err)
	clientDataBz, err := protocol.URLEncodedBase64.MarshalJSON(clientDataJSON)
	require.NoError(t, err)
	clientDataHash := sha256.Sum256(clientDataBz)
	authenticatorData := protocol.AuthenticatorData{
		RPIDHash: RPIDHash[:],
		Counter:  1,
		AttData: protocol.AttestedCredentialData{
			AAGUID:              AAGUID,
			CredentialID:        credentialID,
			CredentialPublicKey: publicKeyBuf,
		},
		Flags: 69,
	}
	authDataBz := append(RPIDHash[:], big.NewInt(69).Bytes()...)
	counterBytes := make([]byte, 4)
	binary.LittleEndian.PutUint32(counterBytes, 0)
	authDataBz = append(authDataBz, counterBytes...)

	var attData []byte

	// Concatenate AAGUID
	attData = append(attData, AAGUID...)

	// Add CredentialIDLength
	credentialIDLengthBytes := make([]byte, 2)
	credentialIDLength := uint16(len(credentialID)) //nolint:gosec
	binary.BigEndian.PutUint16(credentialIDLengthBytes, credentialIDLength)
	attData = append(attData, credentialIDLengthBytes...)

	// Add CredentialID
	attData = append(attData, credentialID...)

	// Add CredentialPublicKey
	attData = append(attData, publicKeyBuf...)

	authDataBz = append(authDataBz, attData...)
	require.NoError(t, err)
	authenticatorDataBz, err := protocol.URLEncodedBase64.MarshalJSON(authDataBz)
	require.NoError(t, err)

	signData := append(authenticatorDataBz, clientDataHash[:]...)
	signHash := sha256.Sum256(signData)
	signature, err := privateKey.Sign(rand.Reader, signHash[:], &signOpts{})
	require.NoError(t, err)
	verified, err := pubKeyData.Verify(signData, signature)
	require.NoError(t, err)
	require.True(t, verified)

	ParsedCredentialAssertionData := &protocol.ParsedCredentialAssertionData{
		ParsedPublicKeyCredential: protocol.ParsedPublicKeyCredential{
			ParsedCredential: protocol.ParsedCredential{
				ID:   string(credentialID),
				Type: "public-key",
			},
			RawID:                   credentialID,
			AuthenticatorAttachment: protocol.Platform,
		},
		Response: protocol.ParsedAssertionResponse{
			CollectedClientData: clientData,
			AuthenticatorData:   authenticatorData,
			Signature:           signature,
			UserHandle:          webAuthnUser.WebAuthnID(),
		},
		Raw: protocol.CredentialAssertionResponse{
			AssertionResponse: protocol.AuthenticatorAssertionResponse{
				AuthenticatorResponse: protocol.AuthenticatorResponse{
					ClientDataJSON: protocol.URLEncodedBase64(clientDataBz),
				},
				AuthenticatorData: protocol.URLEncodedBase64(authenticatorDataBz),
			},
		},
	}
	// validate signature
	_, err = webAuthn.ValidateLogin(webAuthnUser, sessionData, ParsedCredentialAssertionData)
	require.NoError(t, err)
	return signature
}

-- Chunk 7 --
// webauthn_test.go:278-304
func TestRegisterAndAuthenticate(t *testing.T) {
	config := sdktypes.GetConfig()
	config.SetBech32PrefixForAccount("xion", "xionpub")

	bec32Addr := "xion1ncx0a0jnsyay7udd03ah2gf64772g02qswj52996dy80qfvgnmzq6eplqq"

	rp, err := url.Parse("https://xion-dapp-example-git-feat-faceid-burntfinance.vercel.app")
	require.NoError(t, err)

	challengeStr := "xion1ncx0a0jnsyay7udd03ah2gf64772g02qswj52996dy80qfvgnmzq6eplqq"
	challenge := base64url.Encode([]byte(challengeStr))
	const registerStr = `{"id":"UWxY-yRdIls8IT-vyMS6la1ZiqESOAff7bWZ_LWV0Pg","type":"public-key","rawId":"VVd4WS15UmRJbHM4SVQtdnlNUzZsYTFaaXFFU09BZmY3YldaX0xXVjBQZw","authenticatorAttachment":"platform","response":{"clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiZUdsdmJqRnVZM2d3WVRCcWJuTjVZWGszZFdSa01ETmhhREpuWmpZME56Y3laekF5Y1hOM2FqVXlPVGsyWkhrNE1IRm1kbWR1YlhweE5tVndiSEZ4Iiwib3JpZ2luIjoiaHR0cHM6Ly94aW9uLWRhcHAtZXhhbXBsZS1naXQtZmVhdC1mYWNlaWQtYnVybnRmaW5hbmNlLnZlcmNlbC5hcHAifQ","attestationObject":"o2NmbXRkbm9uZWhBdXRoRGF0YaVkcnBpZFggsGMBiDcEppiMfxQ10TPCe2-FaKrLeTkvpzxczngTMw1lZmxhZ3MYRWhhdHRfZGF0YaNmYWFndWlkUEFBR1VJREFBR1VJREFBPT1qcHVibGljX2tleVkCEKQBAwM5AQAgWQIAolg7TF3aai-wR4HTDe5oR-WRhEsdW3u-O3IJHl0BiHkmR4MLskHG9HzivWoXsloUBnBMrFNxOH0x5cNMI07oi4PeRbHySiogRW9CXPjJaNlTi-pT_IgKFsyJNXsLyzrnajLkDbQU6pRsHmNeL0hAOUv48rtXv8VVWWN8okJehD2q9N7LHoFAOmIUEPg_VTHTt8K__O-9eMZKN4eMjh_4-sxRX6NXPSPT87XRlrK4GZ4pUdp86K0tOFLhwO4Uj0JkMNfI82eVZ1tAbDlqjd8jFnAb8fWm8wtdaTNbL_AAXmbDhswwJOyrw8fARZIhrXSdKBWa6e4k7sLwTIy-OO8saebnlARsjGst7ZCzmw5KCm2ctEVl3hYhHwyXu_A5rOblMrV3H0G7WqeKMCMVSJ11ssrlsmfVhNIwu1Qlt5GYmPTTJiCgGUGRxZkgDyOyjFNHglYpZamCGyJ9oyofsukEGoqMQ6WzjFi_hjVapzXi7Li-Q0OjEopIUUDDgeUrgjbGY0eiHI6sAz5hoaD0Qjc9e3Hk6-y7VcKCTCAanZOlJV0vJkHB98LBLh9qAoVUei_VaLFe2IcfVlrL_43aXlsHhr_SUQY5pHPlUMbQihE_57dpPRh31qDX_w6ye8dilniP8JmpKM2uIwnJ0x7hfJ45Qa0oLHmrGlzY9wi-RGP0YUkhQwEAAW1jcmVkZW50aWFsX2lkWCtVV3hZLXlSZElsczhJVC12eU1TNmxhMVppcUVTT0FmZjdiV1pfTFdWMFBnaGV4dF9kYXRh9mpzaWduX2NvdW50AGhhdXRoRGF0YVkCcrBjAYg3BKaYjH8UNdEzwntvhWiqy3k5L6c8XM54EzMNRQAAAABBQUdVSURBQUdVSURBQT09ACtVV3hZLXlSZElsczhJVC12eU1TNmxhMVppcUVTT0FmZjdiV1pfTFdWMFBnpAEDAzkBACBZAgCiWDtMXdpqL7BHgdMN7mhH5ZGESx1be747cgkeXQGIeSZHgwuyQcb0fOK9aheyWhQGcEysU3E4fTHlw0wjTuiLg95FsfJKKiBFb0Jc-Mlo2VOL6lP8iAoWzIk1ewvLOudqMuQNtBTqlGweY14vSEA5S_jyu1e_xVVZY3yiQl6EPar03ssegUA6YhQQ-D9VMdO3wr_87714xko3h4yOH_j6zFFfo1c9I9PztdGWsrgZnilR2nzorS04UuHA7hSPQmQw18jzZ5VnW0BsOWqN3yMWcBvx9abzC11pM1sv8ABeZsOGzDAk7KvDx8BFkiGtdJ0oFZrp7iTuwvBMjL447yxp5ueUBGyMay3tkLObDkoKbZy0RWXeFiEfDJe78Dms5uUytXcfQbtap4owIxVInXWyyuWyZ9WE0jC7VCW3kZiY9NMmIKAZQZHFmSAPI7KMU0eCVillqYIbIn2jKh-y6QQaioxDpbOMWL-GNVqnNeLsuL5DQ6MSikhRQMOB5SuCNsZjR6IcjqwDPmGhoPRCNz17ceTr7LtVwoJMIBqdk6UlXS8mQcH3wsEuH2oChVR6L9VosV7Yhx9WWsv_jdpeWweGv9JRBjmkc-VQxtCKET_nt2k9GHfWoNf_DrJ7x2KWeI_wmakoza4jCcnTHuF8njlBrSgseasaXNj3CL5EY_RhSSFDAQAB"}}`
	data, err := protocol.ParseCredentialCreationResponseBody(strings.NewReader(registerStr))
	require.NoError(t, err)

	cred, err := types.VerifyRegistration(rp, bec32Addr, challenge, data)
	require.NoError(t, err)

	authenticateStr := `{"id":"UWxY-yRdIls8IT-vyMS6la1ZiqESOAff7bWZ_LWV0Pg","type":"public-key","rawId":"VVd4WS15UmRJbHM4SVQtdnlNUzZsYTFaaXFFU09BZmY3YldaX0xXVjBQZw","authenticatorAttachment":"platform","response":{"clientDataJSON":"eyJ0eXBlIjoid2ViYXV0aG4uZ2V0IiwiY2hhbGxlbmdlIjoiTWZhT1pqdUlkS0ZiWGtMS1diUGdoU0w4dzQxUnNLMklzc3A0aTBUd3p2VT0iLCJvcmlnaW4iOiJodHRwczovL3hpb24tZGFwcC1leGFtcGxlLWdpdC1mZWF0LWZhY2VpZC1idXJudGZpbmFuY2UudmVyY2VsLmFwcCJ9","authenticatorData":"sGMBiDcEppiMfxQ10TPCe2-FaKrLeTkvpzxczngTMw1FAAAAAEFBR1VJREFBR1VJREFBPT0AK1VXeFkteVJkSWxzOElULXZ5TVM2bGExWmlxRVNPQWZmN2JXWl9MV1YwUGekAQMDOQEAIFkCAKJYO0xd2movsEeB0w3uaEflkYRLHVt7vjtyCR5dAYh5JkeDC7JBxvR84r1qF7JaFAZwTKxTcTh9MeXDTCNO6IuD3kWx8koqIEVvQlz4yWjZU4vqU_yIChbMiTV7C8s652oy5A20FOqUbB5jXi9IQDlL-PK7V7_FVVljfKJCXoQ9qvTeyx6BQDpiFBD4P1Ux07fCv_zvvXjGSjeHjI4f-PrMUV-jVz0j0_O10ZayuBmeKVHafOitLThS4cDuFI9CZDDXyPNnlWdbQGw5ao3fIxZwG_H1pvMLXWkzWy_wAF5mw4bMMCTsq8PHwEWSIa10nSgVmunuJO7C8EyMvjjvLGnm55QEbIxrLe2Qs5sOSgptnLRFZd4WIR8Ml7vwOazm5TK1dx9Bu1qnijAjFUiddbLK5bJn1YTSMLtUJbeRmJj00yYgoBlBkcWZIA8jsoxTR4JWKWWpghsifaMqH7LpBBqKjEOls4xYv4Y1Wqc14uy4vkNDoxKKSFFAw4HlK4I2xmNHohyOrAM-YaGg9EI3PXtx5Ovsu1XCgkwgGp2TpSVdLyZBwffCwS4fagKFVHov1WixXtiHH1Zay_-N2l5bB4a_0lEGOaRz5VDG0IoRP-e3aT0Yd9ag1_8OsnvHYpZ4j_CZqSjNriMJydMe4XyeOUGtKCx5qxpc2PcIvkRj9GFJIUMBAAE","signature":"HoWSrIL-9keuWgvywoD9fxv-AMdGZdw7bYJP2cNnYv_0vKQ6iSmU3WVjE3MvdUDuruE9wYwIuZ-nqUve-56ZTBYmowzZ79PGgCUUNEFFScgH7ShD8McLK90XLKJGEyiTODPlFv2erCCi7pw2o9L3IWDK_B_yFlkYBkhkHI2h3kwcs8aDxcn_hMjHZonxYqm3eB4Syj-FNseCneVYUw8HljSyBVzrMpa4PkukUWTlo46p6HLoe51XMK_UPpXKFnutQkF_DPcwrUzWdgyEZe4B96TZazcRi8-EZtMRKDLrRgzQ1QYe6srqT74FDuMNI8w-0_aUQBUMWPvGGCHZOAUvQV-TnmY5tsAPFpYH5A0Wi5xHw6r5-Gvw9PZH5zss65zA1nHC085w9KGFjhBEkUE_TmzrZTBX6vogt4YIMinA-YxwGUJyF-gbM8-9BkElSSYY3OsAhwlYDERRAE_gw4hoWSNIf2gjZKH0RhLnZY6eViOiqEdnJWnVWbBVL3UMaYvcLvhNakh59OwB0DO2CEGZziw1qQJeN-3d9Rez7ef_gOO5zT1HSYIPHg9Br9z63e0C3abAsg1iNz8kWtvQ_mjypvCL28vaFoXrcYaUHZQogzaqEEGQ-zSwQK-NAsXI_ZKzYSXmbgAv0wFibBMCG_FzE_hYAGHKSQj9tsdxXicBinY","userHandle":"eGlvbjFuY3gwYTBqbnN5YXk3dWRkMDNhaDJnZjY0NzcyZzAycXN3ajUyOTk2ZHk4MHFmdmdubXpxNmVwbHFx"}}`
	authData, err := protocol.ParseCredentialRequestResponseBody(strings.NewReader(authenticateStr))
	require.NoError(t, err)

	challenge = "MfaOZjuIdKFbXkLKWbPghSL8w41RsK2Issp4i0TwzvU="
	verified, err := types.VerifyAuthentication(rp, bec32Addr, challenge, cred, authData)
	require.NoError(t, err)
	require.True(t, verified)
}

-- Chunk 8 --
// webauthn_test.go:306-312
func TestGenerateWebAuthNSignature(t *testing.T) {
	challenge := base64url.Encode([]byte("MfaOZjuIdKFbXkLKWbPghSL8w41RsK2Issp4i0TwzvU="))
	cred := CreateWebAuthNAttestationCred(t, []byte(challenge))
	require.NotNil(t, cred)
	signature := CreateWebAuthNSignature(t, []byte(challenge))
	require.NotNil(t, signature)
}

=== File: x/xion/types/feegrant.go ===

-- Chunk 1 --
// feegrant.go:36-39
func (a *AuthzAllowance) UnpackInterfaces(unpacker types.AnyUnpacker) error {
	var allowance feegrant.FeeAllowanceI
	return unpacker.UnpackAny(a.Allowance, &allowance)
}

-- Chunk 2 --
// feegrant.go:41-55
func NewAuthzAllowance(allowance feegrant.FeeAllowanceI, authzGrantee sdk.AccAddress) (*AuthzAllowance, error) {
	msg, ok := allowance.(proto.Message)
	if !ok {
		return nil, errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", msg)
	}
	anyAllowance, err := types.NewAnyWithValue(msg)
	if err != nil {
		return nil, err
	}

	return &AuthzAllowance{
		Allowance:    anyAllowance,
		AuthzGrantee: authzGrantee.String(),
	}, nil
}

-- Chunk 3 --
// feegrant.go:58-65
func (a *AuthzAllowance) GetAllowance() (feegrant.FeeAllowanceI, error) {
	allowance, ok := a.Allowance.GetCachedValue().(feegrant.FeeAllowanceI)
	if !ok {
		return nil, errorsmod.Wrap(feegrant.ErrNoAllowance, "failed to get allowance")
	}

	return allowance, nil
}

-- Chunk 4 --
// feegrant.go:68-76
func (a *AuthzAllowance) SetAllowance(allowance feegrant.FeeAllowanceI) error {
	var err error
	a.Allowance, err = types.NewAnyWithValue(allowance.(proto.Message))
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", allowance)
	}

	return nil
}

-- Chunk 5 --
// feegrant.go:78-96
func (a *AuthzAllowance) Accept(ctx context.Context, fee sdk.Coins, msgs []sdk.Msg) (bool, error) {
	subMsgs, ok := a.allMsgTypesAuthz(ctx, msgs)
	if !ok {
		return false, errorsmod.Wrap(feegrant.ErrMessageNotAllowed, "messages are not authz")
	}

	allowance, err := a.GetAllowance()
	if err != nil {
		return false, err
	}

	remove, err := allowance.Accept(ctx, fee, subMsgs)
	if err == nil && !remove {
		if err = a.SetAllowance(allowance); err != nil {
			return false, err
		}
	}
	return remove, err
}

-- Chunk 6 --
// feegrant.go:98-121
func (a *AuthzAllowance) allMsgTypesAuthz(ctx context.Context, msgs []sdk.Msg) ([]sdk.Msg, bool) {
	var subMsgs []sdk.Msg

	for _, msg := range msgs {
		sdkCtx := sdk.UnwrapSDKContext(ctx)
		sdkCtx.GasMeter().ConsumeGas(gasCostPerIteration, "check msg")

		authzMsg, ok := msg.(*authz.MsgExec)
		if !ok {
			return nil, false
		}
		if authzMsg.Grantee != a.AuthzGrantee {
			return nil, false
		}

		msgMsgs, err := authzMsg.GetMessages()
		if err != nil {
			return nil, false
		}
		subMsgs = append(subMsgs, msgMsgs...)
	}

	return subMsgs, true
}

-- Chunk 7 --
// feegrant.go:123-138
func (a *AuthzAllowance) ValidateBasic() error {
	if a.Allowance == nil {
		return errorsmod.Wrap(feegrant.ErrNoAllowance, "allowance should not be empty")
	}

	if _, err := sdk.AccAddressFromBech32(a.AuthzGrantee); err != nil {
		return err
	}

	allowance, err := a.GetAllowance()
	if err != nil {
		return err
	}

	return allowance.ValidateBasic()
}

-- Chunk 8 --
// feegrant.go:140-146
func (a *AuthzAllowance) ExpiresAt() (*time.Time, error) {
	allowance, err := a.GetAllowance()
	if err != nil {
		return nil, err
	}
	return allowance.ExpiresAt()
}

-- Chunk 9 --
// feegrant.go:149-152
func (a *ContractsAllowance) UnpackInterfaces(unpacker types.AnyUnpacker) error {
	var allowance feegrant.FeeAllowanceI
	return unpacker.UnpackAny(a.Allowance, &allowance)
}

-- Chunk 10 --
// feegrant.go:154-173
func NewContractsAllowance(allowance feegrant.FeeAllowanceI, allowedContractAddrs []sdk.AccAddress) (*ContractsAllowance, error) {
	msg, ok := allowance.(proto.Message)
	if !ok {
		return nil, errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", msg)
	}
	anyAllowance, err := types.NewAnyWithValue(msg)
	if err != nil {
		return nil, err
	}

	allowedAddrStrings := make([]string, len(allowedContractAddrs))
	for i, addr := range allowedContractAddrs {
		allowedAddrStrings[i] = addr.String()
	}

	return &ContractsAllowance{
		Allowance:         anyAllowance,
		ContractAddresses: allowedAddrStrings,
	}, nil
}

-- Chunk 11 --
// feegrant.go:176-183
func (a *ContractsAllowance) GetAllowance() (feegrant.FeeAllowanceI, error) {
	allowance, ok := a.Allowance.GetCachedValue().(feegrant.FeeAllowanceI)
	if !ok {
		return nil, errorsmod.Wrap(feegrant.ErrNoAllowance, "failed to get allowance")
	}

	return allowance, nil
}

-- Chunk 12 --
// feegrant.go:186-194
func (a *ContractsAllowance) SetAllowance(allowance feegrant.FeeAllowanceI) error {
	var err error
	a.Allowance, err = types.NewAnyWithValue(allowance.(proto.Message))
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", allowance)
	}

	return nil
}

-- Chunk 13 --
// feegrant.go:196-213
func (a *ContractsAllowance) Accept(ctx context.Context, fee sdk.Coins, msgs []sdk.Msg) (bool, error) {
	if !a.allMsgsValidWasmExecs(ctx, msgs) {
		return false, errorsmod.Wrap(feegrant.ErrMessageNotAllowed, "messages are not for specific contracts")
	}

	allowance, err := a.GetAllowance()
	if err != nil {
		return false, err
	}

	remove, err := allowance.Accept(ctx, fee, msgs)
	if err == nil && !remove {
		if err = a.SetAllowance(allowance); err != nil {
			return false, err
		}
	}
	return remove, err
}

-- Chunk 14 --
// feegrant.go:215-223
func (a *ContractsAllowance) allowedContractsToMap(ctx sdk.Context) map[string]bool {
	addrsMap := make(map[string]bool, len(a.ContractAddresses))
	for _, addr := range a.ContractAddresses {
		ctx.GasMeter().ConsumeGas(gasCostPerIteration, "check msg")
		addrsMap[addr] = true
	}

	return addrsMap
}

-- Chunk 15 --
// feegrant.go:225-242
func (a *ContractsAllowance) allMsgsValidWasmExecs(ctx context.Context, msgs []sdk.Msg) bool {
	sdkCtx := sdk.UnwrapSDKContext(ctx)
	addrsMap := a.allowedContractsToMap(sdkCtx)

	for _, msg := range msgs {
		sdkCtx.GasMeter().ConsumeGas(gasCostPerIteration, "check msg")

		wasmMsg, ok := msg.(*wasmtypes.MsgExecuteContract)
		if !ok {
			return false
		}
		if !addrsMap[wasmMsg.Contract] {
			return false
		}
	}

	return true
}

-- Chunk 16 --
// feegrant.go:244-265
func (a *ContractsAllowance) ValidateBasic() error {
	if a.Allowance == nil {
		return errorsmod.Wrap(feegrant.ErrNoAllowance, "allowance should not be empty")
	}

	if len(a.ContractAddresses) < 1 {
		return errorsmod.Wrap(ErrNoAllowedContracts, "must set contracts for feegrant")
	}

	for _, addr := range a.ContractAddresses {
		if _, err := sdk.AccAddressFromBech32(addr); err != nil {
			return err
		}
	}

	allowance, err := a.GetAllowance()
	if err != nil {
		return err
	}

	return allowance.ValidateBasic()
}

-- Chunk 17 --
// feegrant.go:267-273
func (a *ContractsAllowance) ExpiresAt() (*time.Time, error) {
	allowance, err := a.GetAllowance()
	if err != nil {
		return nil, err
	}
	return allowance.ExpiresAt()
}

-- Chunk 18 --
// feegrant.go:276-285
func (a *MultiAnyAllowance) UnpackInterfaces(unpacker types.AnyUnpacker) error {
	var allowance feegrant.FeeAllowanceI
	for _, innerAllowance := range a.Allowances {
		if err := unpacker.UnpackAny(innerAllowance, &allowance); err != nil {
			return err
		}
	}

	return nil
}

-- Chunk 19 --
// feegrant.go:287-304
func NewMultiAnyAllowance(allowances []feegrant.FeeAllowanceI) (*MultiAnyAllowance, error) {
	var anyAllowances []*types.Any
	for _, allowance := range allowances {
		msg, ok := allowance.(proto.Message)
		if !ok {
			return nil, errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", msg)
		}
		anyAllowance, err := types.NewAnyWithValue(msg)
		if err != nil {
			return nil, err
		}
		anyAllowances = append(anyAllowances, anyAllowance)
	}

	return &MultiAnyAllowance{
		Allowances: anyAllowances,
	}, nil
}

-- Chunk 20 --
// feegrant.go:307-314
func (a *MultiAnyAllowance) GetAllowance(index int) (feegrant.FeeAllowanceI, error) {
	allowance, ok := a.Allowances[index].GetCachedValue().(feegrant.FeeAllowanceI)
	if !ok {
		return nil, errorsmod.Wrap(feegrant.ErrNoAllowance, "failed to get allowance")
	}

	return allowance, nil
}

-- Chunk 21 --
// feegrant.go:317-325
func (a *MultiAnyAllowance) SetAllowance(index int, allowance feegrant.FeeAllowanceI) error {
	var err error
	a.Allowances[index], err = types.NewAnyWithValue(allowance.(proto.Message))
	if err != nil {
		return errorsmod.Wrapf(sdkerrors.ErrPackAny, "cannot proto marshal %T", allowance)
	}

	return nil
}

-- Chunk 22 --
// feegrant.go:327-364
func (a *MultiAnyAllowance) Accept(ctx context.Context, fee sdk.Coins, msgs []sdk.Msg) (bool, error) {
	// accept and charge first allowance that doesn't error
	accepted := false
	for i := range a.Allowances {
		sdk.UnwrapSDKContext(ctx).GasMeter().ConsumeGas(gasCostPerIteration, "check allowance")
		allowance, err := a.GetAllowance(i)
		if err != nil {
			return false, err
		}

		remove, err := allowance.Accept(ctx, fee, msgs)
		if err != nil {
			// the allowance errored, try the next
			continue
		}
		// the allowance was accepted
		accepted = true

		if !remove {
			// update the allowance state
			if err = a.SetAllowance(i, allowance); err != nil {
				return false, err
			}
		} else {
			// if the allowance is complete, remove it from the allowed list
			a.Allowances = append(a.Allowances[:i], a.Allowances[i+1:]...)
		}
		break
	}

	// if no allowances accepted, the allowance doesn't accept
	if !accepted {
		return false, errorsmod.Wrapf(ErrNoValidAllowances, "all allowances errored")
	}

	// if all the allowances have been removed, remove this allowance as well
	return len(a.Allowances) == 0, nil
}

-- Chunk 23 --
// feegrant.go:366-386
func (a *MultiAnyAllowance) ValidateBasic() error {
	if len(a.Allowances) == 0 {
		return errorsmod.Wrap(feegrant.ErrNoAllowance, "allowance list should contain at least one")
	}

	for i := range a.Allowances {
		allowance, err := a.GetAllowance(i)
		if err != nil {
			return err
		}
		if err := allowance.ValidateBasic(); err != nil {
			return err
		}
	}

	if _, err := a.ExpiresAt(); err != nil {
		return err
	}

	return nil
}

-- Chunk 24 --
// feegrant.go:388-411
func (a *MultiAnyAllowance) ExpiresAt() (*time.Time, error) {
	// all allowances must expire at the same time
	var expiration *time.Time
	set := false
	for i := range a.Allowances {
		allowance, err := a.GetAllowance(i)
		if err != nil {
			return nil, err
		}
		newExpiration, err := allowance.ExpiresAt()
		if err != nil {
			return nil, err
		}
		if set {
			if !EqTime(expiration, newExpiration) {
				return nil, errorsmod.Wrapf(ErrInconsistentExpiry, "allowance 0 had expiration %v while allowance %d had expiration %v", expiration, i, newExpiration)
			}
		} else {
			set = true
			expiration = newExpiration
		}
	}
	return expiration, nil
}

-- Chunk 25 --
// feegrant.go:413-421
func EqTime(a, b *time.Time) bool {
	if a != nil && b != nil {
		return a.Equal(*b)
	}
	if a == nil && b == nil {
		return true
	}
	return false
}

=== File: x/xion/types/webauthn.go ===

-- Chunk 1 --
// webauthn.go:10-13
type SmartContractUser struct {
	Address    string
	Credential *webauthn.Credential
}

-- Chunk 2 --
// webauthn.go:15-17
func (s SmartContractUser) WebAuthnID() []byte {
	return []byte(s.Address)
}

-- Chunk 3 --
// webauthn.go:19-21
func (s SmartContractUser) WebAuthnName() string {
	return s.Address
}

-- Chunk 4 --
// webauthn.go:23-25
func (s SmartContractUser) WebAuthnDisplayName() string {
	return s.WebAuthnName()
}

-- Chunk 5 --
// webauthn.go:27-29
func (s SmartContractUser) WebAuthnCredentials() []webauthn.Credential {
	return []webauthn.Credential{*s.Credential}
}

-- Chunk 6 --
// webauthn.go:31-33
func (s SmartContractUser) WebAuthnIcon() string {
	return ""
}

-- Chunk 7 --
// webauthn.go:37-58
func VerifyRegistration(rp *url.URL, contractAddr string, challenge string, credentialCreationData *protocol.ParsedCredentialCreationData) (*webauthn.Credential, error) {
	config := webauthn.Config{
		RPID:                   rp.Host,
		RPDisplayName:          rp.String(),
		RPOrigins:              []string{rp.String()},
		AttestationPreference:  "",
		AuthenticatorSelection: protocol.AuthenticatorSelection{},
	}
	webAuthn, err := webauthn.New(&config)
	if err != nil {
		return nil, err
	}

	smartContractUser := SmartContractUser{Address: contractAddr}
	session := webauthn.SessionData{
		Challenge:        challenge,
		UserID:           smartContractUser.WebAuthnID(),
		UserVerification: protocol.VerificationPreferred,
	}

	return webAuthn.CreateCredential(smartContractUser, session, credentialCreationData)
}

-- Chunk 8 --
// webauthn.go:60-89
func VerifyAuthentication(rp *url.URL, contractAddr string, challenge string, credential *webauthn.Credential, credentialAssertionData *protocol.ParsedCredentialAssertionData) (bool, error) {
	config := webauthn.Config{
		RPID:                   rp.Host,
		RPDisplayName:          rp.String(),
		RPOrigins:              []string{rp.String()},
		AttestationPreference:  "",
		AuthenticatorSelection: protocol.AuthenticatorSelection{},
	}
	webAuthn, err := webauthn.New(&config)
	if err != nil {
		return false, err
	}

	smartContractUser := SmartContractUser{
		Address:    contractAddr,
		Credential: credential,
	}
	session := webauthn.SessionData{
		Challenge:            challenge,
		UserID:               smartContractUser.WebAuthnID(),
		UserVerification:     protocol.VerificationPreferred,
		AllowedCredentialIDs: [][]byte{credential.ID},
	}

	if _, err := webAuthn.ValidateLogin(smartContractUser, session, credentialAssertionData); err != nil {
		return false, err
	}

	return true, nil
}

=== File: x/xion/types/query.pb.go ===

-- Chunk 1 --
// query.pb.go:33-38
type QueryWebAuthNVerifyRegisterRequest struct {
	Addr      string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Challenge string `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Rp        string `protobuf:"bytes,3,opt,name=rp,proto3" json:"rp,omitempty"`
	Data      []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

-- Chunk 2 --
// query.pb.go:40-40
func (m *QueryWebAuthNVerifyRegisterRequest) Reset()         { *m = QueryWebAuthNVerifyRegisterRequest{} }

-- Chunk 3 --
// query.pb.go:41-41
func (m *QueryWebAuthNVerifyRegisterRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// query.pb.go:42-42
func (*QueryWebAuthNVerifyRegisterRequest) ProtoMessage()    {}

-- Chunk 5 --
// query.pb.go:43-45
func (*QueryWebAuthNVerifyRegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{0}
}

-- Chunk 6 --
// query.pb.go:46-48
func (m *QueryWebAuthNVerifyRegisterRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// query.pb.go:49-60
func (m *QueryWebAuthNVerifyRegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryWebAuthNVerifyRegisterRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// query.pb.go:61-63
func (m *QueryWebAuthNVerifyRegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWebAuthNVerifyRegisterRequest.Merge(m, src)
}

-- Chunk 9 --
// query.pb.go:64-66
func (m *QueryWebAuthNVerifyRegisterRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// query.pb.go:67-69
func (m *QueryWebAuthNVerifyRegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWebAuthNVerifyRegisterRequest.DiscardUnknown(m)
}

-- Chunk 11 --
// query.pb.go:73-78
func (m *QueryWebAuthNVerifyRegisterRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

-- Chunk 12 --
// query.pb.go:80-85
func (m *QueryWebAuthNVerifyRegisterRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

-- Chunk 13 --
// query.pb.go:87-92
func (m *QueryWebAuthNVerifyRegisterRequest) GetRp() string {
	if m != nil {
		return m.Rp
	}
	return ""
}

-- Chunk 14 --
// query.pb.go:94-99
func (m *QueryWebAuthNVerifyRegisterRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

-- Chunk 15 --
// query.pb.go:101-103
type QueryWebAuthNVerifyRegisterResponse struct {
	Credential []byte `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
}

-- Chunk 16 --
// query.pb.go:105-105
func (m *QueryWebAuthNVerifyRegisterResponse) Reset()         { *m = QueryWebAuthNVerifyRegisterResponse{} }

-- Chunk 17 --
// query.pb.go:106-106
func (m *QueryWebAuthNVerifyRegisterResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 18 --
// query.pb.go:107-107
func (*QueryWebAuthNVerifyRegisterResponse) ProtoMessage()    {}

-- Chunk 19 --
// query.pb.go:108-110
func (*QueryWebAuthNVerifyRegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{1}
}

-- Chunk 20 --
// query.pb.go:111-113
func (m *QueryWebAuthNVerifyRegisterResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 21 --
// query.pb.go:114-125
func (m *QueryWebAuthNVerifyRegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryWebAuthNVerifyRegisterResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 22 --
// query.pb.go:126-128
func (m *QueryWebAuthNVerifyRegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWebAuthNVerifyRegisterResponse.Merge(m, src)
}

-- Chunk 23 --
// query.pb.go:129-131
func (m *QueryWebAuthNVerifyRegisterResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 24 --
// query.pb.go:132-134
func (m *QueryWebAuthNVerifyRegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWebAuthNVerifyRegisterResponse.DiscardUnknown(m)
}

-- Chunk 25 --
// query.pb.go:138-143
func (m *QueryWebAuthNVerifyRegisterResponse) GetCredential() []byte {
	if m != nil {
		return m.Credential
	}
	return nil
}

-- Chunk 26 --
// query.pb.go:145-151
type QueryWebAuthNVerifyAuthenticateRequest struct {
	Addr       string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Challenge  string `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Rp         string `protobuf:"bytes,3,opt,name=rp,proto3" json:"rp,omitempty"`
	Credential []byte `protobuf:"bytes,4,opt,name=credential,proto3" json:"credential,omitempty"`
	Data       []byte `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

-- Chunk 27 --
// query.pb.go:153-155
func (m *QueryWebAuthNVerifyAuthenticateRequest) Reset() {
	*m = QueryWebAuthNVerifyAuthenticateRequest{}
}

-- Chunk 28 --
// query.pb.go:156-156
func (m *QueryWebAuthNVerifyAuthenticateRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 29 --
// query.pb.go:157-157
func (*QueryWebAuthNVerifyAuthenticateRequest) ProtoMessage()    {}

-- Chunk 30 --
// query.pb.go:158-160
func (*QueryWebAuthNVerifyAuthenticateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{2}
}

-- Chunk 31 --
// query.pb.go:161-163
func (m *QueryWebAuthNVerifyAuthenticateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 32 --
// query.pb.go:164-175
func (m *QueryWebAuthNVerifyAuthenticateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryWebAuthNVerifyAuthenticateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 33 --
// query.pb.go:176-178
func (m *QueryWebAuthNVerifyAuthenticateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWebAuthNVerifyAuthenticateRequest.Merge(m, src)
}

-- Chunk 34 --
// query.pb.go:179-181
func (m *QueryWebAuthNVerifyAuthenticateRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 35 --
// query.pb.go:182-184
func (m *QueryWebAuthNVerifyAuthenticateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWebAuthNVerifyAuthenticateRequest.DiscardUnknown(m)
}

-- Chunk 36 --
// query.pb.go:188-193
func (m *QueryWebAuthNVerifyAuthenticateRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

-- Chunk 37 --
// query.pb.go:195-200
func (m *QueryWebAuthNVerifyAuthenticateRequest) GetChallenge() string {
	if m != nil {
		return m.Challenge
	}
	return ""
}

-- Chunk 38 --
// query.pb.go:202-207
func (m *QueryWebAuthNVerifyAuthenticateRequest) GetRp() string {
	if m != nil {
		return m.Rp
	}
	return ""
}

-- Chunk 39 --
// query.pb.go:209-214
func (m *QueryWebAuthNVerifyAuthenticateRequest) GetCredential() []byte {
	if m != nil {
		return m.Credential
	}
	return nil
}

-- Chunk 40 --
// query.pb.go:216-221
func (m *QueryWebAuthNVerifyAuthenticateRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

-- Chunk 41 --
// query.pb.go:223-224
type QueryWebAuthNVerifyAuthenticateResponse struct {
}

-- Chunk 42 --
// query.pb.go:226-228
func (m *QueryWebAuthNVerifyAuthenticateResponse) Reset() {
	*m = QueryWebAuthNVerifyAuthenticateResponse{}
}

-- Chunk 43 --
// query.pb.go:229-229
func (m *QueryWebAuthNVerifyAuthenticateResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 44 --
// query.pb.go:230-230
func (*QueryWebAuthNVerifyAuthenticateResponse) ProtoMessage()    {}

-- Chunk 45 --
// query.pb.go:231-233
func (*QueryWebAuthNVerifyAuthenticateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{3}
}

-- Chunk 46 --
// query.pb.go:234-236
func (m *QueryWebAuthNVerifyAuthenticateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 47 --
// query.pb.go:237-248
func (m *QueryWebAuthNVerifyAuthenticateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryWebAuthNVerifyAuthenticateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 48 --
// query.pb.go:249-251
func (m *QueryWebAuthNVerifyAuthenticateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWebAuthNVerifyAuthenticateResponse.Merge(m, src)
}

-- Chunk 49 --
// query.pb.go:252-254
func (m *QueryWebAuthNVerifyAuthenticateResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 50 --
// query.pb.go:255-257
func (m *QueryWebAuthNVerifyAuthenticateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWebAuthNVerifyAuthenticateResponse.DiscardUnknown(m)
}

-- Chunk 51 --
// query.pb.go:261-262
type QueryPlatformPercentageRequest struct {
}

-- Chunk 52 --
// query.pb.go:264-264
func (m *QueryPlatformPercentageRequest) Reset()         { *m = QueryPlatformPercentageRequest{} }

-- Chunk 53 --
// query.pb.go:265-265
func (m *QueryPlatformPercentageRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 54 --
// query.pb.go:266-266
func (*QueryPlatformPercentageRequest) ProtoMessage()    {}

-- Chunk 55 --
// query.pb.go:267-269
func (*QueryPlatformPercentageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{4}
}

-- Chunk 56 --
// query.pb.go:270-272
func (m *QueryPlatformPercentageRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 57 --
// query.pb.go:273-284
func (m *QueryPlatformPercentageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryPlatformPercentageRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 58 --
// query.pb.go:285-287
func (m *QueryPlatformPercentageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPlatformPercentageRequest.Merge(m, src)
}

-- Chunk 59 --
// query.pb.go:288-290
func (m *QueryPlatformPercentageRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 60 --
// query.pb.go:291-293
func (m *QueryPlatformPercentageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPlatformPercentageRequest.DiscardUnknown(m)
}

-- Chunk 61 --
// query.pb.go:297-299
type QueryPlatformPercentageResponse struct {
	PlatformPercentage uint64 `protobuf:"varint,1,opt,name=platform_percentage,json=platformPercentage,proto3" json:"platform_percentage,omitempty"`
}

-- Chunk 62 --
// query.pb.go:301-301
func (m *QueryPlatformPercentageResponse) Reset()         { *m = QueryPlatformPercentageResponse{} }

-- Chunk 63 --
// query.pb.go:302-302
func (m *QueryPlatformPercentageResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 64 --
// query.pb.go:303-303
func (*QueryPlatformPercentageResponse) ProtoMessage()    {}

-- Chunk 65 --
// query.pb.go:304-306
func (*QueryPlatformPercentageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{5}
}

-- Chunk 66 --
// query.pb.go:307-309
func (m *QueryPlatformPercentageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 67 --
// query.pb.go:310-321
func (m *QueryPlatformPercentageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryPlatformPercentageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 68 --
// query.pb.go:322-324
func (m *QueryPlatformPercentageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPlatformPercentageResponse.Merge(m, src)
}

-- Chunk 69 --
// query.pb.go:325-327
func (m *QueryPlatformPercentageResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 70 --
// query.pb.go:328-330
func (m *QueryPlatformPercentageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPlatformPercentageResponse.DiscardUnknown(m)
}

-- Chunk 71 --
// query.pb.go:334-339
func (m *QueryPlatformPercentageResponse) GetPlatformPercentage() uint64 {
	if m != nil {
		return m.PlatformPercentage
	}
	return 0
}

-- Chunk 72 --
// query.pb.go:341-342
type QueryPlatformMinimumRequest struct {
}

-- Chunk 73 --
// query.pb.go:344-344
func (m *QueryPlatformMinimumRequest) Reset()         { *m = QueryPlatformMinimumRequest{} }

-- Chunk 74 --
// query.pb.go:345-345
func (m *QueryPlatformMinimumRequest) String() string { return proto.CompactTextString(m) }

-- Chunk 75 --
// query.pb.go:346-346
func (*QueryPlatformMinimumRequest) ProtoMessage()    {}

-- Chunk 76 --
// query.pb.go:347-349
func (*QueryPlatformMinimumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{6}
}

-- Chunk 77 --
// query.pb.go:350-352
func (m *QueryPlatformMinimumRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 78 --
// query.pb.go:353-364
func (m *QueryPlatformMinimumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryPlatformMinimumRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 79 --
// query.pb.go:365-367
func (m *QueryPlatformMinimumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPlatformMinimumRequest.Merge(m, src)
}

-- Chunk 80 --
// query.pb.go:368-370
func (m *QueryPlatformMinimumRequest) XXX_Size() int {
	return m.Size()
}

-- Chunk 81 --
// query.pb.go:371-373
func (m *QueryPlatformMinimumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPlatformMinimumRequest.DiscardUnknown(m)
}

-- Chunk 82 --
// query.pb.go:377-379
type QueryPlatformMinimumResponse struct {
	Minimums github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=minimums,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"minimums"`
}

-- Chunk 83 --
// query.pb.go:381-381
func (m *QueryPlatformMinimumResponse) Reset()         { *m = QueryPlatformMinimumResponse{} }

-- Chunk 84 --
// query.pb.go:382-382
func (m *QueryPlatformMinimumResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 85 --
// query.pb.go:383-383
func (*QueryPlatformMinimumResponse) ProtoMessage()    {}

-- Chunk 86 --
// query.pb.go:384-386
func (*QueryPlatformMinimumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d6eabf4b8b83bc3, []int{7}
}

-- Chunk 87 --
// query.pb.go:387-389
func (m *QueryPlatformMinimumResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 88 --
// query.pb.go:390-401
func (m *QueryPlatformMinimumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryPlatformMinimumResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 89 --
// query.pb.go:402-404
func (m *QueryPlatformMinimumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPlatformMinimumResponse.Merge(m, src)
}

-- Chunk 90 --
// query.pb.go:405-407
func (m *QueryPlatformMinimumResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 91 --
// query.pb.go:408-410
func (m *QueryPlatformMinimumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPlatformMinimumResponse.DiscardUnknown(m)
}

-- Chunk 92 --
// query.pb.go:414-419
func (m *QueryPlatformMinimumResponse) GetMinimums() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Minimums
	}
	return nil
}

-- Chunk 93 --
// query.pb.go:421-430
func init() {
	proto.RegisterType((*QueryWebAuthNVerifyRegisterRequest)(nil), "xion.v1.QueryWebAuthNVerifyRegisterRequest")
	proto.RegisterType((*QueryWebAuthNVerifyRegisterResponse)(nil), "xion.v1.QueryWebAuthNVerifyRegisterResponse")
	proto.RegisterType((*QueryWebAuthNVerifyAuthenticateRequest)(nil), "xion.v1.QueryWebAuthNVerifyAuthenticateRequest")
	proto.RegisterType((*QueryWebAuthNVerifyAuthenticateResponse)(nil), "xion.v1.QueryWebAuthNVerifyAuthenticateResponse")
	proto.RegisterType((*QueryPlatformPercentageRequest)(nil), "xion.v1.QueryPlatformPercentageRequest")
	proto.RegisterType((*QueryPlatformPercentageResponse)(nil), "xion.v1.QueryPlatformPercentageResponse")
	proto.RegisterType((*QueryPlatformMinimumRequest)(nil), "xion.v1.QueryPlatformMinimumRequest")
	proto.RegisterType((*QueryPlatformMinimumResponse)(nil), "xion.v1.QueryPlatformMinimumResponse")
}

-- Chunk 94 --
// query.pb.go:432-432
func init() { proto.RegisterFile("xion/v1/query.proto", fileDescriptor_2d6eabf4b8b83bc3) }

-- Chunk 95 --
// query.pb.go:483-488
type QueryClient interface {
	WebAuthNVerifyRegister(ctx context.Context, in *QueryWebAuthNVerifyRegisterRequest, opts ...grpc.CallOption) (*QueryWebAuthNVerifyRegisterResponse, error)
	WebAuthNVerifyAuthenticate(ctx context.Context, in *QueryWebAuthNVerifyAuthenticateRequest, opts ...grpc.CallOption) (*QueryWebAuthNVerifyAuthenticateResponse, error)
	PlatformPercentage(ctx context.Context, in *QueryPlatformPercentageRequest, opts ...grpc.CallOption) (*QueryPlatformPercentageResponse, error)
	PlatformMinimum(ctx context.Context, in *QueryPlatformMinimumRequest, opts ...grpc.CallOption) (*QueryPlatformMinimumResponse, error)
}

-- Chunk 96 --
// query.pb.go:490-492
type queryClient struct {
	cc grpc1.ClientConn
}

-- Chunk 97 --
// query.pb.go:494-496
func NewQueryClient(cc grpc1.ClientConn) QueryClient {
	return &queryClient{cc}
}

-- Chunk 98 --
// query.pb.go:498-505
func (c *queryClient) WebAuthNVerifyRegister(ctx context.Context, in *QueryWebAuthNVerifyRegisterRequest, opts ...grpc.CallOption) (*QueryWebAuthNVerifyRegisterResponse, error) {
	out := new(QueryWebAuthNVerifyRegisterResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Query/WebAuthNVerifyRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 99 --
// query.pb.go:507-514
func (c *queryClient) WebAuthNVerifyAuthenticate(ctx context.Context, in *QueryWebAuthNVerifyAuthenticateRequest, opts ...grpc.CallOption) (*QueryWebAuthNVerifyAuthenticateResponse, error) {
	out := new(QueryWebAuthNVerifyAuthenticateResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Query/WebAuthNVerifyAuthenticate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 100 --
// query.pb.go:516-523
func (c *queryClient) PlatformPercentage(ctx context.Context, in *QueryPlatformPercentageRequest, opts ...grpc.CallOption) (*QueryPlatformPercentageResponse, error) {
	out := new(QueryPlatformPercentageResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Query/PlatformPercentage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 101 --
// query.pb.go:525-532
func (c *queryClient) PlatformMinimum(ctx context.Context, in *QueryPlatformMinimumRequest, opts ...grpc.CallOption) (*QueryPlatformMinimumResponse, error) {
	out := new(QueryPlatformMinimumResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Query/PlatformMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 102 --
// query.pb.go:535-540
type QueryServer interface {
	WebAuthNVerifyRegister(context.Context, *QueryWebAuthNVerifyRegisterRequest) (*QueryWebAuthNVerifyRegisterResponse, error)
	WebAuthNVerifyAuthenticate(context.Context, *QueryWebAuthNVerifyAuthenticateRequest) (*QueryWebAuthNVerifyAuthenticateResponse, error)
	PlatformPercentage(context.Context, *QueryPlatformPercentageRequest) (*QueryPlatformPercentageResponse, error)
	PlatformMinimum(context.Context, *QueryPlatformMinimumRequest) (*QueryPlatformMinimumResponse, error)
}

-- Chunk 103 --
// query.pb.go:543-544
type UnimplementedQueryServer struct {
}

-- Chunk 104 --
// query.pb.go:546-548
func (*UnimplementedQueryServer) WebAuthNVerifyRegister(ctx context.Context, req *QueryWebAuthNVerifyRegisterRequest) (*QueryWebAuthNVerifyRegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WebAuthNVerifyRegister not implemented")
}

-- Chunk 105 --
// query.pb.go:549-551
func (*UnimplementedQueryServer) WebAuthNVerifyAuthenticate(ctx context.Context, req *QueryWebAuthNVerifyAuthenticateRequest) (*QueryWebAuthNVerifyAuthenticateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WebAuthNVerifyAuthenticate not implemented")
}

-- Chunk 106 --
// query.pb.go:552-554
func (*UnimplementedQueryServer) PlatformPercentage(ctx context.Context, req *QueryPlatformPercentageRequest) (*QueryPlatformPercentageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlatformPercentage not implemented")
}

-- Chunk 107 --
// query.pb.go:555-557
func (*UnimplementedQueryServer) PlatformMinimum(ctx context.Context, req *QueryPlatformMinimumRequest) (*QueryPlatformMinimumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlatformMinimum not implemented")
}

-- Chunk 108 --
// query.pb.go:559-561
func RegisterQueryServer(s grpc1.Server, srv QueryServer) {
	s.RegisterService(&_Query_serviceDesc, srv)
}

-- Chunk 109 --
// query.pb.go:563-579
func _Query_WebAuthNVerifyRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryWebAuthNVerifyRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).WebAuthNVerifyRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Query/WebAuthNVerifyRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).WebAuthNVerifyRegister(ctx, req.(*QueryWebAuthNVerifyRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 110 --
// query.pb.go:581-597
func _Query_WebAuthNVerifyAuthenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryWebAuthNVerifyAuthenticateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).WebAuthNVerifyAuthenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Query/WebAuthNVerifyAuthenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).WebAuthNVerifyAuthenticate(ctx, req.(*QueryWebAuthNVerifyAuthenticateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 111 --
// query.pb.go:599-615
func _Query_PlatformPercentage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPlatformPercentageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).PlatformPercentage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Query/PlatformPercentage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).PlatformPercentage(ctx, req.(*QueryPlatformPercentageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 112 --
// query.pb.go:617-633
func _Query_PlatformMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPlatformMinimumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryServer).PlatformMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Query/PlatformMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryServer).PlatformMinimum(ctx, req.(*QueryPlatformMinimumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 113 --
// query.pb.go:660-668
func (m *QueryWebAuthNVerifyRegisterRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 114 --
// query.pb.go:670-673
func (m *QueryWebAuthNVerifyRegisterRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 115 --
// query.pb.go:675-709
func (m *QueryWebAuthNVerifyRegisterRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Rp) > 0 {
		i -= len(m.Rp)
		copy(dAtA[i:], m.Rp)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Rp)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Challenge) > 0 {
		i -= len(m.Challenge)
		copy(dAtA[i:], m.Challenge)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Challenge)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 116 --
// query.pb.go:711-719
func (m *QueryWebAuthNVerifyRegisterResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 117 --
// query.pb.go:721-724
func (m *QueryWebAuthNVerifyRegisterResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 118 --
// query.pb.go:726-739
func (m *QueryWebAuthNVerifyRegisterResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Credential) > 0 {
		i -= len(m.Credential)
		copy(dAtA[i:], m.Credential)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Credential)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 119 --
// query.pb.go:741-749
func (m *QueryWebAuthNVerifyAuthenticateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 120 --
// query.pb.go:751-754
func (m *QueryWebAuthNVerifyAuthenticateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 121 --
// query.pb.go:756-797
func (m *QueryWebAuthNVerifyAuthenticateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Credential) > 0 {
		i -= len(m.Credential)
		copy(dAtA[i:], m.Credential)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Credential)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Rp) > 0 {
		i -= len(m.Rp)
		copy(dAtA[i:], m.Rp)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Rp)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Challenge) > 0 {
		i -= len(m.Challenge)
		copy(dAtA[i:], m.Challenge)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Challenge)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Addr) > 0 {
		i -= len(m.Addr)
		copy(dAtA[i:], m.Addr)
		i = encodeVarintQuery(dAtA, i, uint64(len(m.Addr)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 122 --
// query.pb.go:799-807
func (m *QueryWebAuthNVerifyAuthenticateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 123 --
// query.pb.go:809-812
func (m *QueryWebAuthNVerifyAuthenticateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 124 --
// query.pb.go:814-820
func (m *QueryWebAuthNVerifyAuthenticateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 125 --
// query.pb.go:822-830
func (m *QueryPlatformPercentageRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 126 --
// query.pb.go:832-835
func (m *QueryPlatformPercentageRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 127 --
// query.pb.go:837-843
func (m *QueryPlatformPercentageRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 128 --
// query.pb.go:845-853
func (m *QueryPlatformPercentageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 129 --
// query.pb.go:855-858
func (m *QueryPlatformPercentageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 130 --
// query.pb.go:860-871
func (m *QueryPlatformPercentageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlatformPercentage != 0 {
		i = encodeVarintQuery(dAtA, i, uint64(m.PlatformPercentage))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

-- Chunk 131 --
// query.pb.go:873-881
func (m *QueryPlatformMinimumRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 132 --
// query.pb.go:883-886
func (m *QueryPlatformMinimumRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 133 --
// query.pb.go:888-894
func (m *QueryPlatformMinimumRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 134 --
// query.pb.go:896-904
func (m *QueryPlatformMinimumResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 135 --
// query.pb.go:906-909
func (m *QueryPlatformMinimumResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 136 --
// query.pb.go:911-931
func (m *QueryPlatformMinimumResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Minimums) > 0 {
		for iNdEx := len(m.Minimums) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Minimums[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuery(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 137 --
// query.pb.go:933-943
func encodeVarintQuery(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuery(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 138 --
// query.pb.go:944-967
func (m *QueryWebAuthNVerifyRegisterRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Challenge)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Rp)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 139 --
// query.pb.go:969-980
func (m *QueryWebAuthNVerifyRegisterResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Credential)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 140 --
// query.pb.go:982-1009
func (m *QueryWebAuthNVerifyAuthenticateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Addr)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Challenge)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Rp)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Credential)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovQuery(uint64(l))
	}
	return n
}

-- Chunk 141 --
// query.pb.go:1011-1018
func (m *QueryWebAuthNVerifyAuthenticateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 142 --
// query.pb.go:1020-1027
func (m *QueryPlatformPercentageRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 143 --
// query.pb.go:1029-1039
func (m *QueryPlatformPercentageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PlatformPercentage != 0 {
		n += 1 + sovQuery(uint64(m.PlatformPercentage))
	}
	return n
}

-- Chunk 144 --
// query.pb.go:1041-1048
func (m *QueryPlatformMinimumRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 145 --
// query.pb.go:1050-1063
func (m *QueryPlatformMinimumResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Minimums) > 0 {
		for _, e := range m.Minimums {
			l = e.Size()
			n += 1 + l + sovQuery(uint64(l))
		}
	}
	return n
}

-- Chunk 146 --
// query.pb.go:1065-1067
func sovQuery(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 147 --
// query.pb.go:1068-1070
func sozQuery(x uint64) (n int) {
	return sovQuery(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 148 --
// query.pb.go:1071-1220
func (m *QueryWebAuthNVerifyRegisterRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyRegisterRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyRegisterRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Challenge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Challenge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery

-- Chunk 149 --
// query.pb.go:1221-1250
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 150 --
// query.pb.go:1251-1334
func (m *QueryWebAuthNVerifyRegisterResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyRegisterResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyRegisterResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credential", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credential = append(m.Credential[:0], dAtA[iNdEx:postIndex]...)
			if m.Credential == nil {
				m.Credential = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 151 --
// query.pb.go:1335-1484
func (m *QueryWebAuthNVerifyAuthenticateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyAuthenticateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyAuthenticateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Challenge", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Challenge = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Rp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Rp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Credential", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery

-- Chunk 152 --
// query.pb.go:1485-1548
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Credential = append(m.Credential[:0], dAtA[iNdEx:postIndex]...)
			if m.Credential == nil {
				m.Credential = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 153 --
// query.pb.go:1549-1598
func (m *QueryWebAuthNVerifyAuthenticateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyAuthenticateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryWebAuthNVerifyAuthenticateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 154 --
// query.pb.go:1599-1648
func (m *QueryPlatformPercentageRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryPlatformPercentageRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryPlatformPercentageRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 155 --
// query.pb.go:1649-1717
func (m *QueryPlatformPercentageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryPlatformPercentageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryPlatformPercentageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformPercentage", wireType)
			}
			m.PlatformPercentage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlatformPercentage |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 156 --
// query.pb.go:1718-1767
func (m *QueryPlatformMinimumRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryPlatformMinimumRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryPlatformMinimumRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 157 --
// query.pb.go:1768-1851
func (m *QueryPlatformMinimumResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryPlatformMinimumResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryPlatformMinimumResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minimums", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuery
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuery
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Minimums = append(m.Minimums, types.Coin{})
			if err := m.Minimums[len(m.Minimums)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuery(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuery
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 158 --
// query.pb.go:1852-1929
func skipQuery(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuery
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuery
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuery
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuery
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuery
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/xion/types/feegrant_test.go ===

-- Chunk 1 --
// feegrant_test.go:22-107
func TestXionAllowanceValidAllow(t *testing.T) {
	key := storetypes.NewKVStoreKey(feegrant.StoreKey)
	testCtx := testutil.DefaultContextWithDB(t, key, storetypes.NewTransientStoreKey("transient_test"))

	// msg we will call in the all cases
	sendMsg := banktypes.MsgSend{}

	cases := map[string]struct {
		allowance        *feegrant.BasicAllowance
		testGrantee      sdk.AccAddress
		authzGrantee     sdk.AccAddress
		contract         sdk.AccAddress
		allowedContracts []sdk.AccAddress
		fee              sdk.Coins
		blockTime        time.Time
		accept           bool
	}{
		"correct granter": {
			allowance:    &feegrant.BasicAllowance{},
			authzGrantee: sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			testGrantee:  sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			accept:       true,
		},
		"incorrect granter": {
			allowance:    &feegrant.BasicAllowance{},
			authzGrantee: sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			testGrantee:  sdk.MustAccAddressFromBech32("cosmos14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s4hmalr"),
			accept:       false,
		},
		"authz for valid contract": {
			allowance:        &feegrant.BasicAllowance{},
			authzGrantee:     sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			testGrantee:      sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			contract:         sdk.MustAccAddressFromBech32("cosmos14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s4hmalr"),
			allowedContracts: []sdk.AccAddress{sdk.MustAccAddressFromBech32("cosmos14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s4hmalr")},
			accept:           true,
		},
		"authz for invalid contract": {
			allowance:        &feegrant.BasicAllowance{},
			authzGrantee:     sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			testGrantee:      sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x"),
			contract:         sdk.MustAccAddressFromBech32("cosmos14hj2tavq8fpesdwxxcu44rty3hh90vhujrvcmstl4zr3txmfvw9s4hmalr"),
			allowedContracts: []sdk.AccAddress{sdk.MustAccAddressFromBech32("cosmos1vx8knpllrj7n963p9ttd80w47kpacrhuts497x")},
			accept:           false,
		},
	}

	for name, stc := range cases {
		tc := stc // to make scopelint happy
		t.Run(name, func(t *testing.T) {
			err := tc.allowance.ValidateBasic()
			require.NoError(t, err)

			ctx := testCtx.Ctx.WithBlockTime(tc.blockTime)

			// create grant
			var granter, grantee sdk.AccAddress
			var allowance feegrant.FeeAllowanceI
			if len(tc.allowedContracts) > 0 {
				allowance, err = types.NewContractsAllowance(tc.allowance, tc.allowedContracts)
				require.NoError(t, err)
			} else {
				allowance = tc.allowance
			}
			authzAllowance, err := types.NewAuthzAllowance(allowance, tc.authzGrantee)
			require.NoError(t, err)
			_, err = feegrant.NewGrant(granter, grantee, authzAllowance)
			require.NoError(t, err)

			// now try to deduct
			var msgs []sdk.Msg
			if tc.contract != nil {
				msgs = []sdk.Msg{&wasmtypes.MsgExecuteContract{Contract: tc.contract.String()}}
			} else {
				msgs = []sdk.Msg{&sendMsg}
			}
			authzExecMsg := authz.NewMsgExec(tc.testGrantee, msgs)
			_, err = authzAllowance.Accept(ctx, tc.fee, []sdk.Msg{&authzExecMsg})
			if !tc.accept {
				require.Error(t, err)
				return
			}
			require.NoError(t, err)
		})
	}
}

-- Chunk 2 --
// feegrant_test.go:109-218
func TestXionMultiAllowance(t *testing.T) {
	key := storetypes.NewKVStoreKey(feegrant.StoreKey)
	testCtx := testutil.DefaultContextWithDB(t, key, storetypes.NewTransientStoreKey("transient_test"))

	// msg we will call in the all cases
	sendMsg := banktypes.MsgSend{}

	now := time.Now()
	inFive := time.Now().Add(time.Minute * 5)

	cases := map[string]struct {
		allowanceOne feegrant.FeeAllowanceI
		allowanceTwo feegrant.FeeAllowanceI
		fee          sdk.Coins
		validate     bool
		accept       bool
	}{
		"no allowances deny": {
			allowanceOne: nil,
			allowanceTwo: nil,
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(10)}},
			validate:     false,
			accept:       false,
		},
		"one allowance accept": {
			allowanceOne: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			allowanceTwo: nil,
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(10)}},
			validate:     true,
			accept:       true,
		},
		"two allowance accept": {
			allowanceOne: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			allowanceTwo: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(10)}},
			validate:     true,
			accept:       true,
		},
		"one allowance deny": {
			allowanceOne: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			allowanceTwo: nil,
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(100)}},
			validate:     true,
			accept:       false,
		},
		"two allowance deny": {
			allowanceOne: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			allowanceTwo: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(100)}},
			validate:     true,
			accept:       false,
		},
		"basic and periodic accept": {
			allowanceOne: &feegrant.PeriodicAllowance{
				Basic:            feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}}},
				Period:           86400,
				PeriodSpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}},
				PeriodCanSpend:   sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}},
				PeriodReset:      time.Time{},
			},
			allowanceTwo: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}},
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(100)}},
			validate:     true,
			accept:       true,
		},
		"mismatched expiry deny": {
			allowanceTwo: &feegrant.PeriodicAllowance{
				Basic:            feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}}, Expiration: &inFive},
				Period:           86400,
				PeriodSpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}},
				PeriodCanSpend:   sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(200)}},
				PeriodReset:      time.Time{},
			},
			allowanceOne: &feegrant.BasicAllowance{SpendLimit: sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(20)}}, Expiration: &now},
			fee:          sdk.Coins{sdk.Coin{Denom: "uxion", Amount: sdkmath.NewInt(100)}},
			validate:     false,
			accept:       true,
		},
	}

	for name, stc := range cases {
		tc := stc // to make scopelint happy
		t.Run(name, func(t *testing.T) {
			var allowances []feegrant.FeeAllowanceI
			if tc.allowanceOne != nil {
				allowances = append(allowances, tc.allowanceOne)
			}
			if tc.allowanceTwo != nil {
				allowances = append(allowances, tc.allowanceTwo)
			}
			allowance, err := types.NewMultiAnyAllowance(allowances)
			require.NoError(t, err)

			err = allowance.ValidateBasic()
			if tc.validate {
				require.NoError(t, err)
			} else {
				require.Error(t, err)
			}

			ctx := testCtx.Ctx
			_, err = allowance.Accept(ctx, tc.fee, []sdk.Msg{&sendMsg})
			if tc.accept {
				require.NoError(t, err)
			} else {
				require.Error(t, err)
			}
		})
	}
}

=== File: x/xion/types/tx.pb.go ===

-- Chunk 1 --
// tx.pb.go:38-42
type MsgSend struct {
	FromAddress string                                   `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	ToAddress   string                                   `protobuf:"bytes,2,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	Amount      github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

-- Chunk 2 --
// tx.pb.go:44-44
func (m *MsgSend) Reset()         { *m = MsgSend{} }

-- Chunk 3 --
// tx.pb.go:45-45
func (m *MsgSend) String() string { return proto.CompactTextString(m) }

-- Chunk 4 --
// tx.pb.go:46-46
func (*MsgSend) ProtoMessage()    {}

-- Chunk 5 --
// tx.pb.go:47-49
func (*MsgSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{0}
}

-- Chunk 6 --
// tx.pb.go:50-52
func (m *MsgSend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 7 --
// tx.pb.go:53-64
func (m *MsgSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 8 --
// tx.pb.go:65-67
func (m *MsgSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSend.Merge(m, src)
}

-- Chunk 9 --
// tx.pb.go:68-70
func (m *MsgSend) XXX_Size() int {
	return m.Size()
}

-- Chunk 10 --
// tx.pb.go:71-73
func (m *MsgSend) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSend.DiscardUnknown(m)
}

-- Chunk 11 --
// tx.pb.go:78-79
type MsgSendResponse struct {
}

-- Chunk 12 --
// tx.pb.go:81-81
func (m *MsgSendResponse) Reset()         { *m = MsgSendResponse{} }

-- Chunk 13 --
// tx.pb.go:82-82
func (m *MsgSendResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 14 --
// tx.pb.go:83-83
func (*MsgSendResponse) ProtoMessage()    {}

-- Chunk 15 --
// tx.pb.go:84-86
func (*MsgSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{1}
}

-- Chunk 16 --
// tx.pb.go:87-89
func (m *MsgSendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 17 --
// tx.pb.go:90-101
func (m *MsgSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 18 --
// tx.pb.go:102-104
func (m *MsgSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendResponse.Merge(m, src)
}

-- Chunk 19 --
// tx.pb.go:105-107
func (m *MsgSendResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 20 --
// tx.pb.go:108-110
func (m *MsgSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendResponse.DiscardUnknown(m)
}

-- Chunk 21 --
// tx.pb.go:115-120
type MsgMultiSend struct {
	// Inputs, despite being `repeated`, only allows one sender input. This is
	// checked in MsgMultiSend's ValidateBasic.
	Inputs  []types1.Input  `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs"`
	Outputs []types1.Output `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs"`
}

-- Chunk 22 --
// tx.pb.go:122-122
func (m *MsgMultiSend) Reset()         { *m = MsgMultiSend{} }

-- Chunk 23 --
// tx.pb.go:123-123
func (m *MsgMultiSend) String() string { return proto.CompactTextString(m) }

-- Chunk 24 --
// tx.pb.go:124-124
func (*MsgMultiSend) ProtoMessage()    {}

-- Chunk 25 --
// tx.pb.go:125-127
func (*MsgMultiSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{2}
}

-- Chunk 26 --
// tx.pb.go:128-130
func (m *MsgMultiSend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 27 --
// tx.pb.go:131-142
func (m *MsgMultiSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 28 --
// tx.pb.go:143-145
func (m *MsgMultiSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSend.Merge(m, src)
}

-- Chunk 29 --
// tx.pb.go:146-148
func (m *MsgMultiSend) XXX_Size() int {
	return m.Size()
}

-- Chunk 30 --
// tx.pb.go:149-151
func (m *MsgMultiSend) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSend.DiscardUnknown(m)
}

-- Chunk 31 --
// tx.pb.go:155-160
func (m *MsgMultiSend) GetInputs() []types1.Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

-- Chunk 32 --
// tx.pb.go:162-167
func (m *MsgMultiSend) GetOutputs() []types1.Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

-- Chunk 33 --
// tx.pb.go:170-171
type MsgMultiSendResponse struct {
}

-- Chunk 34 --
// tx.pb.go:173-173
func (m *MsgMultiSendResponse) Reset()         { *m = MsgMultiSendResponse{} }

-- Chunk 35 --
// tx.pb.go:174-174
func (m *MsgMultiSendResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 36 --
// tx.pb.go:175-175
func (*MsgMultiSendResponse) ProtoMessage()    {}

-- Chunk 37 --
// tx.pb.go:176-178
func (*MsgMultiSendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{3}
}

-- Chunk 38 --
// tx.pb.go:179-181
func (m *MsgMultiSendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 39 --
// tx.pb.go:182-193
func (m *MsgMultiSendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 40 --
// tx.pb.go:194-196
func (m *MsgMultiSendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSendResponse.Merge(m, src)
}

-- Chunk 41 --
// tx.pb.go:197-199
func (m *MsgMultiSendResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 42 --
// tx.pb.go:200-202
func (m *MsgMultiSendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSendResponse.DiscardUnknown(m)
}

-- Chunk 43 --
// tx.pb.go:206-210
type MsgSetPlatformPercentage struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// platform_percentage is the platform fee percentage to multiplied by 10000
	PlatformPercentage uint32 `protobuf:"varint,2,opt,name=platform_percentage,json=platformPercentage,proto3" json:"platform_percentage,omitempty"`
}

-- Chunk 44 --
// tx.pb.go:212-212
func (m *MsgSetPlatformPercentage) Reset()         { *m = MsgSetPlatformPercentage{} }

-- Chunk 45 --
// tx.pb.go:213-213
func (m *MsgSetPlatformPercentage) String() string { return proto.CompactTextString(m) }

-- Chunk 46 --
// tx.pb.go:214-214
func (*MsgSetPlatformPercentage) ProtoMessage()    {}

-- Chunk 47 --
// tx.pb.go:215-217
func (*MsgSetPlatformPercentage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{4}
}

-- Chunk 48 --
// tx.pb.go:218-220
func (m *MsgSetPlatformPercentage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 49 --
// tx.pb.go:221-232
func (m *MsgSetPlatformPercentage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPlatformPercentage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 50 --
// tx.pb.go:233-235
func (m *MsgSetPlatformPercentage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPlatformPercentage.Merge(m, src)
}

-- Chunk 51 --
// tx.pb.go:236-238
func (m *MsgSetPlatformPercentage) XXX_Size() int {
	return m.Size()
}

-- Chunk 52 --
// tx.pb.go:239-241
func (m *MsgSetPlatformPercentage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPlatformPercentage.DiscardUnknown(m)
}

-- Chunk 53 --
// tx.pb.go:245-250
func (m *MsgSetPlatformPercentage) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

-- Chunk 54 --
// tx.pb.go:252-257
func (m *MsgSetPlatformPercentage) GetPlatformPercentage() uint32 {
	if m != nil {
		return m.PlatformPercentage
	}
	return 0
}

-- Chunk 55 --
// tx.pb.go:259-260
type MsgSetPlatformPercentageResponse struct {
}

-- Chunk 56 --
// tx.pb.go:262-262
func (m *MsgSetPlatformPercentageResponse) Reset()         { *m = MsgSetPlatformPercentageResponse{} }

-- Chunk 57 --
// tx.pb.go:263-263
func (m *MsgSetPlatformPercentageResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 58 --
// tx.pb.go:264-264
func (*MsgSetPlatformPercentageResponse) ProtoMessage()    {}

-- Chunk 59 --
// tx.pb.go:265-267
func (*MsgSetPlatformPercentageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{5}
}

-- Chunk 60 --
// tx.pb.go:268-270
func (m *MsgSetPlatformPercentageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 61 --
// tx.pb.go:271-282
func (m *MsgSetPlatformPercentageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPlatformPercentageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 62 --
// tx.pb.go:283-285
func (m *MsgSetPlatformPercentageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPlatformPercentageResponse.Merge(m, src)
}

-- Chunk 63 --
// tx.pb.go:286-288
func (m *MsgSetPlatformPercentageResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 64 --
// tx.pb.go:289-291
func (m *MsgSetPlatformPercentageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPlatformPercentageResponse.DiscardUnknown(m)
}

-- Chunk 65 --
// tx.pb.go:295-298
type MsgSetPlatformMinimum struct {
	Authority string                                   `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Minimums  github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=minimums,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"minimums"`
}

-- Chunk 66 --
// tx.pb.go:300-300
func (m *MsgSetPlatformMinimum) Reset()         { *m = MsgSetPlatformMinimum{} }

-- Chunk 67 --
// tx.pb.go:301-301
func (m *MsgSetPlatformMinimum) String() string { return proto.CompactTextString(m) }

-- Chunk 68 --
// tx.pb.go:302-302
func (*MsgSetPlatformMinimum) ProtoMessage()    {}

-- Chunk 69 --
// tx.pb.go:303-305
func (*MsgSetPlatformMinimum) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{6}
}

-- Chunk 70 --
// tx.pb.go:306-308
func (m *MsgSetPlatformMinimum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 71 --
// tx.pb.go:309-320
func (m *MsgSetPlatformMinimum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPlatformMinimum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 72 --
// tx.pb.go:321-323
func (m *MsgSetPlatformMinimum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPlatformMinimum.Merge(m, src)
}

-- Chunk 73 --
// tx.pb.go:324-326
func (m *MsgSetPlatformMinimum) XXX_Size() int {
	return m.Size()
}

-- Chunk 74 --
// tx.pb.go:327-329
func (m *MsgSetPlatformMinimum) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPlatformMinimum.DiscardUnknown(m)
}

-- Chunk 75 --
// tx.pb.go:333-338
func (m *MsgSetPlatformMinimum) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

-- Chunk 76 --
// tx.pb.go:340-345
func (m *MsgSetPlatformMinimum) GetMinimums() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Minimums
	}
	return nil
}

-- Chunk 77 --
// tx.pb.go:347-348
type MsgSetPlatformMinimumResponse struct {
}

-- Chunk 78 --
// tx.pb.go:350-350
func (m *MsgSetPlatformMinimumResponse) Reset()         { *m = MsgSetPlatformMinimumResponse{} }

-- Chunk 79 --
// tx.pb.go:351-351
func (m *MsgSetPlatformMinimumResponse) String() string { return proto.CompactTextString(m) }

-- Chunk 80 --
// tx.pb.go:352-352
func (*MsgSetPlatformMinimumResponse) ProtoMessage()    {}

-- Chunk 81 --
// tx.pb.go:353-355
func (*MsgSetPlatformMinimumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5076275aa290c9b8, []int{7}
}

-- Chunk 82 --
// tx.pb.go:356-358
func (m *MsgSetPlatformMinimumResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}

-- Chunk 83 --
// tx.pb.go:359-370
func (m *MsgSetPlatformMinimumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPlatformMinimumResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}

-- Chunk 84 --
// tx.pb.go:371-373
func (m *MsgSetPlatformMinimumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPlatformMinimumResponse.Merge(m, src)
}

-- Chunk 85 --
// tx.pb.go:374-376
func (m *MsgSetPlatformMinimumResponse) XXX_Size() int {
	return m.Size()
}

-- Chunk 86 --
// tx.pb.go:377-379
func (m *MsgSetPlatformMinimumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPlatformMinimumResponse.DiscardUnknown(m)
}

-- Chunk 87 --
// tx.pb.go:383-392
func init() {
	proto.RegisterType((*MsgSend)(nil), "xion.v1.MsgSend")
	proto.RegisterType((*MsgSendResponse)(nil), "xion.v1.MsgSendResponse")
	proto.RegisterType((*MsgMultiSend)(nil), "xion.v1.MsgMultiSend")
	proto.RegisterType((*MsgMultiSendResponse)(nil), "xion.v1.MsgMultiSendResponse")
	proto.RegisterType((*MsgSetPlatformPercentage)(nil), "xion.v1.MsgSetPlatformPercentage")
	proto.RegisterType((*MsgSetPlatformPercentageResponse)(nil), "xion.v1.MsgSetPlatformPercentageResponse")
	proto.RegisterType((*MsgSetPlatformMinimum)(nil), "xion.v1.MsgSetPlatformMinimum")
	proto.RegisterType((*MsgSetPlatformMinimumResponse)(nil), "xion.v1.MsgSetPlatformMinimumResponse")
}

-- Chunk 88 --
// tx.pb.go:394-394
func init() { proto.RegisterFile("xion/v1/tx.proto", fileDescriptor_5076275aa290c9b8) }

-- Chunk 89 --
// tx.pb.go:453-466
type MsgClient interface {
	// Send defines a method for sending coins from one account to another
	// account.
	Send(ctx context.Context, in *MsgSend, opts ...grpc.CallOption) (*MsgSendResponse, error)
	// MultiSend defines a method for sending coins from some accounts to other
	// accounts.
	MultiSend(ctx context.Context, in *MsgMultiSend, opts ...grpc.CallOption) (*MsgMultiSendResponse, error)
	// SetPlatformPercentage defines the method for updating the platform
	// percentage fee
	SetPlatformPercentage(ctx context.Context, in *MsgSetPlatformPercentage, opts ...grpc.CallOption) (*MsgSetPlatformPercentageResponse, error)
	// SetPlatformMinimum defines the method for updating the platform
	// percentage fee
	SetPlatformMinimum(ctx context.Context, in *MsgSetPlatformMinimum, opts ...grpc.CallOption) (*MsgSetPlatformMinimumResponse, error)
}

-- Chunk 90 --
// tx.pb.go:468-470
type msgClient struct {
	cc grpc1.ClientConn
}

-- Chunk 91 --
// tx.pb.go:472-474
func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

-- Chunk 92 --
// tx.pb.go:476-483
func (c *msgClient) Send(ctx context.Context, in *MsgSend, opts ...grpc.CallOption) (*MsgSendResponse, error) {
	out := new(MsgSendResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Msg/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 93 --
// tx.pb.go:485-492
func (c *msgClient) MultiSend(ctx context.Context, in *MsgMultiSend, opts ...grpc.CallOption) (*MsgMultiSendResponse, error) {
	out := new(MsgMultiSendResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Msg/MultiSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 94 --
// tx.pb.go:494-501
func (c *msgClient) SetPlatformPercentage(ctx context.Context, in *MsgSetPlatformPercentage, opts ...grpc.CallOption) (*MsgSetPlatformPercentageResponse, error) {
	out := new(MsgSetPlatformPercentageResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Msg/SetPlatformPercentage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 95 --
// tx.pb.go:503-510
func (c *msgClient) SetPlatformMinimum(ctx context.Context, in *MsgSetPlatformMinimum, opts ...grpc.CallOption) (*MsgSetPlatformMinimumResponse, error) {
	out := new(MsgSetPlatformMinimumResponse)
	err := c.cc.Invoke(ctx, "/xion.v1.Msg/SetPlatformMinimum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

-- Chunk 96 --
// tx.pb.go:513-526
type MsgServer interface {
	// Send defines a method for sending coins from one account to another
	// account.
	Send(context.Context, *MsgSend) (*MsgSendResponse, error)
	// MultiSend defines a method for sending coins from some accounts to other
	// accounts.
	MultiSend(context.Context, *MsgMultiSend) (*MsgMultiSendResponse, error)
	// SetPlatformPercentage defines the method for updating the platform
	// percentage fee
	SetPlatformPercentage(context.Context, *MsgSetPlatformPercentage) (*MsgSetPlatformPercentageResponse, error)
	// SetPlatformMinimum defines the method for updating the platform
	// percentage fee
	SetPlatformMinimum(context.Context, *MsgSetPlatformMinimum) (*MsgSetPlatformMinimumResponse, error)
}

-- Chunk 97 --
// tx.pb.go:529-530
type UnimplementedMsgServer struct {
}

-- Chunk 98 --
// tx.pb.go:532-534
func (*UnimplementedMsgServer) Send(ctx context.Context, req *MsgSend) (*MsgSendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

-- Chunk 99 --
// tx.pb.go:535-537
func (*UnimplementedMsgServer) MultiSend(ctx context.Context, req *MsgMultiSend) (*MsgMultiSendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiSend not implemented")
}

-- Chunk 100 --
// tx.pb.go:538-540
func (*UnimplementedMsgServer) SetPlatformPercentage(ctx context.Context, req *MsgSetPlatformPercentage) (*MsgSetPlatformPercentageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPlatformPercentage not implemented")
}

-- Chunk 101 --
// tx.pb.go:541-543
func (*UnimplementedMsgServer) SetPlatformMinimum(ctx context.Context, req *MsgSetPlatformMinimum) (*MsgSetPlatformMinimumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPlatformMinimum not implemented")
}

-- Chunk 102 --
// tx.pb.go:545-547
func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

-- Chunk 103 --
// tx.pb.go:549-565
func _Msg_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Msg/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Send(ctx, req.(*MsgSend))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 104 --
// tx.pb.go:567-583
func _Msg_MultiSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiSend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Msg/MultiSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiSend(ctx, req.(*MsgMultiSend))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 105 --
// tx.pb.go:585-601
func _Msg_SetPlatformPercentage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPlatformPercentage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPlatformPercentage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Msg/SetPlatformPercentage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPlatformPercentage(ctx, req.(*MsgSetPlatformPercentage))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 106 --
// tx.pb.go:603-619
func _Msg_SetPlatformMinimum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPlatformMinimum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPlatformMinimum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xion.v1.Msg/SetPlatformMinimum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPlatformMinimum(ctx, req.(*MsgSetPlatformMinimum))
	}
	return interceptor(ctx, in, info, handler)
}

-- Chunk 107 --
// tx.pb.go:646-654
func (m *MsgSend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 108 --
// tx.pb.go:656-659
func (m *MsgSend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 109 --
// tx.pb.go:661-695
func (m *MsgSend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ToAddress) > 0 {
		i -= len(m.ToAddress)
		copy(dAtA[i:], m.ToAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ToAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 110 --
// tx.pb.go:697-705
func (m *MsgSendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 111 --
// tx.pb.go:707-710
func (m *MsgSendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 112 --
// tx.pb.go:712-718
func (m *MsgSendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 113 --
// tx.pb.go:720-728
func (m *MsgMultiSend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 114 --
// tx.pb.go:730-733
func (m *MsgMultiSend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 115 --
// tx.pb.go:735-769
func (m *MsgMultiSend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Outputs) > 0 {
		for iNdEx := len(m.Outputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Outputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Inputs) > 0 {
		for iNdEx := len(m.Inputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

-- Chunk 116 --
// tx.pb.go:771-779
func (m *MsgMultiSendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 117 --
// tx.pb.go:781-784
func (m *MsgMultiSendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 118 --
// tx.pb.go:786-792
func (m *MsgMultiSendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 119 --
// tx.pb.go:794-802
func (m *MsgSetPlatformPercentage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 120 --
// tx.pb.go:804-807
func (m *MsgSetPlatformPercentage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 121 --
// tx.pb.go:809-827
func (m *MsgSetPlatformPercentage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PlatformPercentage != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PlatformPercentage))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 122 --
// tx.pb.go:829-837
func (m *MsgSetPlatformPercentageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 123 --
// tx.pb.go:839-842
func (m *MsgSetPlatformPercentageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 124 --
// tx.pb.go:844-850
func (m *MsgSetPlatformPercentageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 125 --
// tx.pb.go:852-860
func (m *MsgSetPlatformMinimum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 126 --
// tx.pb.go:862-865
func (m *MsgSetPlatformMinimum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 127 --
// tx.pb.go:867-894
func (m *MsgSetPlatformMinimum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Minimums) > 0 {
		for iNdEx := len(m.Minimums) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Minimums[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

-- Chunk 128 --
// tx.pb.go:896-904
func (m *MsgSetPlatformMinimumResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

-- Chunk 129 --
// tx.pb.go:906-909
func (m *MsgSetPlatformMinimumResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

-- Chunk 130 --
// tx.pb.go:911-917
func (m *MsgSetPlatformMinimumResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

-- Chunk 131 --
// tx.pb.go:919-929
func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

-- Chunk 132 --
// tx.pb.go:930-951
func (m *MsgSend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ToAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

-- Chunk 133 --
// tx.pb.go:953-960
func (m *MsgSendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 134 --
// tx.pb.go:962-981
func (m *MsgMultiSend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Inputs) > 0 {
		for _, e := range m.Inputs {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Outputs) > 0 {
		for _, e := range m.Outputs {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

-- Chunk 135 --
// tx.pb.go:983-990
func (m *MsgMultiSendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 136 --
// tx.pb.go:992-1006
func (m *MsgSetPlatformPercentage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.PlatformPercentage != 0 {
		n += 1 + sovTx(uint64(m.PlatformPercentage))
	}
	return n
}

-- Chunk 137 --
// tx.pb.go:1008-1015
func (m *MsgSetPlatformPercentageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 138 --
// tx.pb.go:1017-1034
func (m *MsgSetPlatformMinimum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Minimums) > 0 {
		for _, e := range m.Minimums {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

-- Chunk 139 --
// tx.pb.go:1036-1043
func (m *MsgSetPlatformMinimumResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

-- Chunk 140 --
// tx.pb.go:1045-1047
func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

-- Chunk 141 --
// tx.pb.go:1048-1050
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}

-- Chunk 142 --
// tx.pb.go:1051-1198
func (m *MsgSend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ToAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ToAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 143 --
// tx.pb.go:1199-1248
func (m *MsgSendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 144 --
// tx.pb.go:1249-1366
func (m *MsgMultiSend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inputs = append(m.Inputs, types1.Input{})
			if err := m.Inputs[len(m.Inputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Outputs = append(m.Outputs, types1.Output{})
			if err := m.Outputs[len(m.Outputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 145 --
// tx.pb.go:1367-1416
func (m *MsgMultiSendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 146 --
// tx.pb.go:1417-1517
func (m *MsgSetPlatformPercentage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPlatformPercentage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPlatformPercentage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformPercentage", wireType)
			}
			m.PlatformPercentage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PlatformPercentage |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 147 --
// tx.pb.go:1518-1567
func (m *MsgSetPlatformPercentageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPlatformPercentageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPlatformPercentageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 148 --
// tx.pb.go:1568-1683
func (m *MsgSetPlatformMinimum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPlatformMinimum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPlatformMinimum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minimums", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Minimums = append(m.Minimums, types.Coin{})
			if err := m.Minimums[len(m.Minimums)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 149 --
// tx.pb.go:1684-1733
func (m *MsgSetPlatformMinimumResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPlatformMinimumResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPlatformMinimumResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}

-- Chunk 150 --
// tx.pb.go:1734-1811
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

=== File: x/xion/types/errors.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/xion/types/errors.go:1-15
package types

import errorsmod "cosmossdk.io/errors"

// Codes for general xion errors
const (
	DefaultCodespace = ModuleName
)

var (
	ErrNoAllowedContracts = errorsmod.Register(DefaultCodespace, 2, "no contract addresses specified")
	ErrNoValidAllowances  = errorsmod.Register(DefaultCodespace, 3, "none of the allowances accepted the msg")
	ErrInconsistentExpiry = errorsmod.Register(DefaultCodespace, 4, "multi allowances must all expire together")
	ErrMinimumNotMet      = errorsmod.Register(DefaultCodespace, 5, "minimum send amount not met")
)

=== File: x/xion/types/msgs.go ===

-- Chunk 1 --
// msgs.go:29-31
func NewMsgSend(fromAddr, toAddr sdk.AccAddress, amount sdk.Coins) *MsgSend {
	return &MsgSend{FromAddress: fromAddr.String(), ToAddress: toAddr.String(), Amount: amount}
}

-- Chunk 2 --
// msgs.go:34-34
func (msg MsgSend) Route() string { return RouterKey }

-- Chunk 3 --
// msgs.go:37-37
func (msg MsgSend) Type() string { return TypeMsgSend }

-- Chunk 4 --
// msgs.go:40-58
func (msg MsgSend) ValidateBasic() error {
	if _, err := sdk.AccAddressFromBech32(msg.FromAddress); err != nil {
		return sdkerrors.ErrInvalidAddress.Wrapf("invalid from address: %s", err)
	}

	if _, err := sdk.AccAddressFromBech32(msg.ToAddress); err != nil {
		return sdkerrors.ErrInvalidAddress.Wrapf("invalid to address: %s", err)
	}

	if !msg.Amount.IsValid() {
		return errorsmod.Wrap(sdkerrors.ErrInvalidCoins, msg.Amount.String())
	}

	if !msg.Amount.IsAllPositive() {
		return errorsmod.Wrap(sdkerrors.ErrInvalidCoins, msg.Amount.String())
	}

	return nil
}

-- Chunk 5 --
// msgs.go:61-63
func (msg MsgSend) GetSignBytes() []byte {
	return sdk.MustSortJSON(amino.MustMarshalJSON(&msg))
}

-- Chunk 6 --
// msgs.go:66-69
func (msg MsgSend) GetSigners() []sdk.AccAddress {
	fromAddress, _ := sdk.AccAddressFromBech32(msg.FromAddress)
	return []sdk.AccAddress{fromAddress}
}

-- Chunk 7 --
// msgs.go:72-74
func NewMsgMultiSend(in []banktypes.Input, out []banktypes.Output) *MsgMultiSend {
	return &MsgMultiSend{Inputs: in, Outputs: out}
}

-- Chunk 8 --
// msgs.go:77-77
func (msg MsgMultiSend) Route() string { return RouterKey }

-- Chunk 9 --
// msgs.go:80-80
func (msg MsgMultiSend) Type() string { return TypeMsgMultiSend }

-- Chunk 10 --
// msgs.go:83-100
func (msg MsgMultiSend) ValidateBasic() error {
	// this just makes sure the input and all the outputs are properly formatted,
	// not that they actually have the money inside

	if len(msg.Inputs) == 0 {
		return banktypes.ErrNoInputs
	}

	if len(msg.Inputs) != 1 {
		return banktypes.ErrMultipleSenders
	}

	if len(msg.Outputs) == 0 {
		return banktypes.ErrNoOutputs
	}

	return banktypes.ValidateInputOutputs(msg.Inputs[0], msg.Outputs)
}

-- Chunk 11 --
// msgs.go:103-105
func (msg MsgMultiSend) GetSignBytes() []byte {
	return sdk.MustSortJSON(amino.MustMarshalJSON(&msg))
}

-- Chunk 12 --
// msgs.go:108-116
func (msg MsgMultiSend) GetSigners() []sdk.AccAddress {
	addrs := make([]sdk.AccAddress, len(msg.Inputs))
	for i, in := range msg.Inputs {
		inAddr, _ := sdk.AccAddressFromBech32(in.Address)
		addrs[i] = inAddr
	}

	return addrs
}

-- Chunk 13 --
// msgs.go:119-121
func NewMsgSetPlatformPercentage(percentage uint32) *MsgSetPlatformPercentage {
	return &MsgSetPlatformPercentage{PlatformPercentage: percentage}
}

-- Chunk 14 --
// msgs.go:124-124
func (msg MsgSetPlatformPercentage) Route() string { return RouterKey }

-- Chunk 15 --
// msgs.go:127-127
func (msg MsgSetPlatformPercentage) Type() string { return TypeMsgSetPlatformPercentage }

-- Chunk 16 --
// msgs.go:130-139
func (msg MsgSetPlatformPercentage) ValidateBasic() error {
	// this just makes sure the input and all the outputs are properly formatted,
	// not that they actually have the money inside

	if msg.PlatformPercentage > 10000 {
		return errors.New("unable to have a platform percentage that exceeds 100%")
	}

	return nil
}

-- Chunk 17 --
// msgs.go:142-144
func (msg MsgSetPlatformPercentage) GetSignBytes() []byte {
	return sdk.MustSortJSON(amino.MustMarshalJSON(&msg))
}

-- Chunk 18 --
// msgs.go:147-150
func (msg MsgSetPlatformPercentage) GetSigners() []sdk.AccAddress {
	addr, _ := sdk.AccAddressFromBech32(msg.Authority)
	return []sdk.AccAddress{addr}
}

=== File: x/xion/types/genesis.go ===

-- Chunk 1 --
// genesis.go:13-19
func (gs GenesisState) Validate() error {
	if gs.PlatformPercentage > 10000 {
		return errors.New("unable to set platform percentage to greater than 100%")
	}

	return nil
}

-- Chunk 2 --
// genesis.go:22-28
func NewGenesisState(platformPercentage uint32, platformMinimums types.Coins) *GenesisState {
	rv := &GenesisState{
		PlatformPercentage: platformPercentage,
		PlatformMinimums:   platformMinimums,
	}
	return rv
}

-- Chunk 3 --
// genesis.go:31-33
func DefaultGenesisState() *GenesisState {
	return NewGenesisState(0, types.Coins{})
}

-- Chunk 4 --
// genesis.go:37-45
func GetGenesisStateFromAppState(cdc codec.JSONCodec, appState map[string]json.RawMessage) *GenesisState {
	var genesisState GenesisState

	if appState[ModuleName] != nil {
		cdc.MustUnmarshalJSON(appState[ModuleName], &genesisState)
	}

	return &genesisState
}

=== File: x/xion/types/expected_keepers.go ===

-- Chunk 1 --
// expected_keepers.go:14-37
type BankKeeper interface {
	SendCoinsFromModuleToAccount(
		ctx context.Context,
		senderModule string,
		recipientAddr sdktypes.AccAddress,
		amt sdktypes.Coins,
	) error
	SendCoinsFromModuleToModule(
		ctx context.Context,
		senderModule,
		recipientModule string,
		amt sdktypes.Coins,
	) error
	SendCoinsFromAccountToModule(
		ctx context.Context,
		senderAddr sdktypes.AccAddress,
		recipientModule string,
		amt sdktypes.Coins,
	) error
	IsSendEnabledCoins(ctx context.Context, coins ...sdktypes.Coin) error
	BlockedAddr(addr sdktypes.AccAddress) bool
	SendCoins(ctx context.Context, fromAddr sdktypes.AccAddress, toAddr sdktypes.AccAddress, amt sdktypes.Coins) error
	InputOutputCoins(ctx context.Context, input banktypes.Input, outputs []banktypes.Output) error
}

-- Chunk 2 --
// expected_keepers.go:39-41
type AccountKeeper interface {
	GetModuleAccount(ctx context.Context, moduleName string) sdktypes.ModuleAccountI
}

-- Chunk 3 --
// expected_keepers.go:43-48
type WasmKeeper interface {
	Migrate(ctx sdktypes.Context, contractAddress, caller sdktypes.AccAddress, newCodeID uint64, msg []byte) ([]byte, error)
	IterateContractsByCode(ctx sdktypes.Context, codeID uint64, cb func(address sdktypes.AccAddress) bool)
	PinCode(ctx sdktypes.Context, codeID uint64) error
	UnpinCode(ctx sdktypes.Context, codeID uint64) error
}

-- Chunk 4 --
// expected_keepers.go:50-53
type AbstractAccountKeeper interface {
	GetParams(ctx sdktypes.Context) (*aatypes.Params, error)
	SetParams(ctx sdktypes.Context, params *aatypes.Params) error
}

=== File: x/xion/types/keys.go ===

-- Chunk 1 --
// /home/ghazanfer/Extended-Ubuntu/KOII/bug-finder/worker/orca-agent/repos/repo_9/x/xion/types/keys.go:1-20
package types

var (
	PlatformPercentageKey = []byte{0x00}
	PlatformMinimumKey    = []byte{0x01}
)

const (
	// ModuleName is the module name constant used in many places
	ModuleName = "xion"

	// StoreKey is the store key string for oracle
	StoreKey = ModuleName

	// RouterKey is the message route for oracle
	RouterKey = ModuleName

	// QuerierRoute is the querier route for oracle
	QuerierRoute = ModuleName
)

=== File: x/xion/client/cli/query_webauthn.go ===

-- Chunk 1 --
// query_webauthn.go:12-49
func CmdWebAuthNVerifyRegister() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "webauthn-register [addr] [challenge] [rp] [data]",
		Short: "Test Webauthn Registration",
		Args:  cobra.ExactArgs(4),
		RunE: func(cmd *cobra.Command, args []string) error {
			reqAddr := args[0]
			reqChallenge := args[1]
			reqRP := args[2]
			reqData := []byte(args[3])

			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryWebAuthNVerifyRegisterRequest{
				Addr:      reqAddr,
				Challenge: reqChallenge,
				Rp:        reqRP,
				Data:      reqData,
			}

			res, err := queryClient.WebAuthNVerifyRegister(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 2 --
// query_webauthn.go:51-90
func CmdWebAuthNVerifyAuthenticate() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "webauthn-authenticate [addr] [challenge] [rp] [credential] [data]",
		Short: "Test Webauthn Authentication",
		Args:  cobra.ExactArgs(5),
		RunE: func(cmd *cobra.Command, args []string) error {
			reqAddr := args[0]
			reqChallenge := args[1]
			reqRP := args[2]
			reqCredential := []byte(args[3])
			reqData := []byte(args[4])

			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryWebAuthNVerifyAuthenticateRequest{
				Addr:       reqAddr,
				Challenge:  reqChallenge,
				Rp:         reqRP,
				Credential: reqCredential,
				Data:       reqData,
			}

			res, err := queryClient.WebAuthNVerifyAuthenticate(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/xion/client/cli/tx_test.go ===

-- Chunk 1 --
// tx_test.go:25-104
func (s *CLITestSuite) TestSendTxCmd() {
	accounts := testutil.CreateKeyringAccounts(s.T(), s.kr, 1)
	cmd := cli.NewSendTxCmd()
	cmd.SetOutput(io.Discard)

	extraArgs := []string{
		fmt.Sprintf("--%s=%s", flags.FlagBroadcastMode, flags.BroadcastSync),
		fmt.Sprintf("--%s=true", flags.FlagSkipConfirmation),
		fmt.Sprintf("--%s=%s", flags.FlagBroadcastMode, flags.BroadcastSync),
		fmt.Sprintf("--%s=%s", flags.FlagFees, sdk.NewCoins(sdk.NewCoin("photon", math.NewInt(10))).String()),
		fmt.Sprintf("--%s=test-chain", flags.FlagChainID),
	}

	testCases := []struct {
		name      string
		ctxGen    func() client.Context
		from, to  sdk.AccAddress
		amount    sdk.Coins
		extraArgs []string
		expectErr bool
	}{
		{
			"valid transaction",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address,
			accounts[0].Address,
			sdk.NewCoins(
				sdk.NewCoin("stake", math.NewInt(10)),
				sdk.NewCoin("photon", math.NewInt(40)),
			),
			extraArgs,
			false,
		},
		{
			"invalid to Address",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address,
			sdk.AccAddress{},
			sdk.NewCoins(
				sdk.NewCoin("stake", math.NewInt(10)),
				sdk.NewCoin("photon", math.NewInt(40)),
			),
			extraArgs,
			true,
		},
		{
			"invalid coins",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address,
			accounts[0].Address,
			nil,
			extraArgs,
			true,
		},
	}

	for _, tc := range testCases {
		s.Run(tc.name, func() {
			ctx := svrcmd.CreateExecuteContext(context.Background())

			cmd.SetContext(ctx)
			cmd.SetArgs(append([]string{tc.from.String(), tc.to.String(), tc.amount.String()}, tc.extraArgs...))

			s.Require().NoError(client.SetCmdClientContextHandler(tc.ctxGen(), cmd))

			err := cmd.Execute()
			if tc.expectErr {
				s.Require().Error(err)
			} else {
				s.Require().NoError(err)
			}
		})
	}
}

-- Chunk 2 --
// tx_test.go:106-219
func (s *CLITestSuite) TestMultiSendTxCmd() {
	accounts := testutil.CreateKeyringAccounts(s.T(), s.kr, 3)

	cmd := cli.NewMultiSendTxCmd()
	cmd.SetOutput(io.Discard)

	extraArgs := []string{
		fmt.Sprintf("--%s=%s", flags.FlagBroadcastMode, flags.BroadcastSync),
		fmt.Sprintf("--%s=true", flags.FlagSkipConfirmation),
		fmt.Sprintf("--%s=%s", flags.FlagBroadcastMode, flags.BroadcastSync),
		fmt.Sprintf("--%s=%s", flags.FlagFees, sdk.NewCoins(sdk.NewCoin("photon", math.NewInt(10))).String()),
		fmt.Sprintf("--%s=test-chain", flags.FlagChainID),
	}

	testCases := []struct {
		name      string
		ctxGen    func() client.Context
		from      string
		to        []string
		amount    sdk.Coins
		extraArgs []string
		expectErr bool
	}{
		{
			"valid transaction",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address.String(),
			[]string{
				accounts[1].Address.String(),
				accounts[2].Address.String(),
			},
			sdk.NewCoins(
				sdk.NewCoin("stake", math.NewInt(10)),
				sdk.NewCoin("photon", math.NewInt(40)),
			),
			extraArgs,
			false,
		},
		{
			"invalid from Address",
			func() client.Context {
				return s.baseCtx
			},
			"foo",
			[]string{
				accounts[1].Address.String(),
				accounts[2].Address.String(),
			},
			sdk.NewCoins(
				sdk.NewCoin("stake", math.NewInt(10)),
				sdk.NewCoin("photon", math.NewInt(40)),
			),
			extraArgs,
			true,
		},
		{
			"invalid recipients",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address.String(),
			[]string{
				accounts[1].Address.String(),
				"bar",
			},
			sdk.NewCoins(
				sdk.NewCoin("stake", math.NewInt(10)),
				sdk.NewCoin("photon", math.NewInt(40)),
			),
			extraArgs,
			true,
		},
		{
			"invalid amount",
			func() client.Context {
				return s.baseCtx
			},
			accounts[0].Address.String(),
			[]string{
				accounts[1].Address.String(),
				accounts[2].Address.String(),
			},
			nil,
			extraArgs,
			true,
		},
	}

	for _, tc := range testCases {
		s.Run(tc.name, func() {
			ctx := svrcmd.CreateExecuteContext(context.Background())

			var args []string
			args = append(args, tc.from)
			args = append(args, tc.to...)
			args = append(args, tc.amount.String())
			args = append(args, tc.extraArgs...)

			cmd.SetContext(ctx)
			cmd.SetArgs(args)

			s.Require().NoError(client.SetCmdClientContextHandler(tc.ctxGen(), cmd))

			err := cmd.Execute()
			if tc.expectErr {
				s.Require().Error(err)
			} else {
				s.Require().NoError(err)
			}
		})
	}
}

-- Chunk 3 --
// tx_test.go:221-344
func (s *CLITestSuite) TestUpdateConfigsCmd() {
	accounts := testutil.CreateKeyringAccounts(s.T(), s.kr, 1)
	cmd := cli.NewUpdateConfigsCmd()
	cmd.SetOutput(io.Discard)

	configFile := "plain_config.json"
	configFileURL := "https://raw.githubusercontent.com/burnt-labs/xion/6ce7bb89562d5a2964788cb64a623eec170c8748/integration_tests/testdata/unsigned_msgs/plain_config.json"

	// Create temporary JSON files for testing
	configData := []byte(`{"grant_config":[
		{
			"msg_type_url": "/cosmos.bank.v1.MsgSend",
			"grant_config": {
			"description": "Bank grant",
			"authorization": {
				"@type": "/cosmos.authz.v1beta1.GenericAuthorization",
				"msg": "/cosmos.bank.v1beta1.MsgSend"
			},
			"optional": true
			}
		},
		{
			"msg_type_url": "/cosmos.staking.v1beta1.MsgDelegate",
			"grant_config": {
			"description": "Staking grant",
			"authorization": {
				"@type": "/cosmos.authz.v1beta1.GenericAuthorization",
				"msg": "/cosmos.staking.v1beta1.MsgDelegate"
			},
			"optional": false
			}
		}
	], "fee_config":{
			"description": "Fee allowance for user1",
			"allowance": {
				"@type": "/cosmos.feegrant.v1beta1.BasicAllowance",
          		"spend_limit": [
            		{
						"denom": "atom",
						"amount": "1000"
            		}
          		],
          		"expiration": "2025-01-01T00:00:00Z"
			},
			"expiration": 1715151235
		}}`)

	require.NoError(s.T(), os.WriteFile(configFile, configData, 0o600))
	defer os.Remove(configFile)

	// Mock valid Bech32 contract address
	validContractAddress := "cosmos1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqnrql8a"

	extraArgs := []string{
		fmt.Sprintf("--%s=%s", flags.FlagBroadcastMode, flags.BroadcastSync),
		fmt.Sprintf("--%s=true", flags.FlagSkipConfirmation),
		fmt.Sprintf("--%s=%s", flags.FlagFees, sdk.NewCoins(sdk.NewCoin("photon", math.NewInt(10))).String()),
		fmt.Sprintf("--%s=test-chain", flags.FlagChainID),
		fmt.Sprintf("--%s=%s", flags.FlagFrom, accounts[0].Name),
	}

	testCases := []struct {
		name       string
		ctxGen     func() client.Context
		contract   string
		configFile string
		extraArgs  []string
		expectErr  bool
	}{
		{
			"valid execution url",
			func() client.Context {
				return s.baseCtx.WithFromAddress(accounts[0].Address)
			},
			validContractAddress,
			configFileURL,
			extraArgs,
			false,
		},
		{
			"valid execution",
			func() client.Context {
				return s.baseCtx.WithFromAddress(accounts[0].Address)
			},
			validContractAddress,
			configFile,
			append(extraArgs, fmt.Sprintf("--%s=true", "local")),
			false,
		},
		{
			"invalid contract address",
			func() client.Context {
				return s.baseCtx.WithFromAddress(accounts[0].Address)
			},
			"invalid-address",
			configFile,
			extraArgs,
			true,
		},
	}

	for _, tc := range testCases {
		s.Run(tc.name, func() {
			// Validate contract address format before executing the command
			if _, err := sdk.AccAddressFromBech32(tc.contract); tc.contract != "invalid-address" && err != nil {
				s.T().Fatalf("invalid contract address: %s", err)
			}

			ctx := svrcmd.CreateExecuteContext(context.Background())

			cmd.SetContext(ctx)
			cmd.SetArgs(append([]string{tc.contract, tc.configFile}, tc.extraArgs...))

			s.Require().NoError(client.SetCmdClientContextHandler(tc.ctxGen(), cmd))

			err := cmd.Execute()
			if tc.expectErr {
				s.Require().Error(err)
			} else {
				s.Require().NoError(err)
			}
		})
	}
}

-- Chunk 4 --
// tx_test.go:346-404
func (s *CLITestSuite) TestSerializeJSONAllowanceToProto() {
	// Example JSON input for a BasicAllowance
	jsonInput := `{
		"@type": "/cosmos.feegrant.v1beta1.AllowedMsgAllowance",
		"allowance": {
			"@type": "/cosmos.feegrant.v1beta1.AllowedMsgAllowance",
			"allowance": {
				"@type": "/cosmos.feegrant.v1beta1.AllowedMsgAllowance",
				"allowance": {
					"@type": "/cosmos.feegrant.v1beta1.BasicAllowance",
					"spend_limit": [{"denom": "atom", "amount": "1000"}],
					"expiration": "2025-01-01T00:00:00Z"
				},
				"allowed_messages": ["/cosmos.bank.v1beta1.MsgSend"]
			},
			"allowed_messages": ["/cosmos.staking.v1beta1.MsgDelegate"]
		},
		"allowed_messages": ["/cosmos.gov.v1beta1.MsgVote"]
	}`

	// Serialize JSON to Protobuf
	var jsonData map[string]interface{}
	require.NoError(s.T(), json.Unmarshal([]byte(jsonInput), &jsonData), "Failed to unmarshal JSON input")

	anyMsg, err := cli.ConvertJSONToAny(s.encCfg.Codec, jsonData)
	require.NoError(s.T(), err, "Failed to serialize JSON to Proto")

	// Assert that the resulting Protobuf message is not nil
	require.NotNil(s.T(), anyMsg, "Protobuf message should not be nil")

	var protoMsg feegrant.FeeAllowanceI
	// Unpack the Any into the top-level AllowedMsgAllowance
	err = s.encCfg.InterfaceRegistry.UnpackAny(&cdctypes.Any{
		TypeUrl: anyMsg.TypeURL,
		Value:   anyMsg.Value,
	}, &protoMsg)
	require.NoError(s.T(), err, "Failed to unpack Any into Protobuf message")

	// Verify first-level AllowedMsgAllowance
	topLevelAllowance, ok := protoMsg.(*feegrant.AllowedMsgAllowance)
	require.True(s.T(), ok, "Top-level Protobuf message is not of type *feegrant.AllowedMsgAllowance")
	require.Equal(s.T(), []string{"/cosmos.gov.v1beta1.MsgVote"}, topLevelAllowance.AllowedMessages)

	// Verify second-level AllowedMsgAllowance
	secondLevelAllowance, ok := topLevelAllowance.Allowance.GetCachedValue().(*feegrant.AllowedMsgAllowance)
	require.True(s.T(), ok, "Second-level Protobuf message is not of type *feegrant.AllowedMsgAllowance")
	require.Equal(s.T(), []string{"/cosmos.staking.v1beta1.MsgDelegate"}, secondLevelAllowance.AllowedMessages)

	// Verify third-level AllowedMsgAllowance
	thirdLevelAllowance, ok := secondLevelAllowance.Allowance.GetCachedValue().(*feegrant.AllowedMsgAllowance)
	require.True(s.T(), ok, "Third-level Protobuf message is not of type *feegrant.AllowedMsgAllowance")
	require.Equal(s.T(), []string{"/cosmos.bank.v1beta1.MsgSend"}, thirdLevelAllowance.AllowedMessages)

	// Verify fourth-level BasicAllowance
	fourthLevelAllowance, ok := thirdLevelAllowance.Allowance.GetCachedValue().(*feegrant.BasicAllowance)
	require.True(s.T(), ok, "Fourth-level Protobuf message is not of type *feegrant.BasicAllowance")
	require.Equal(s.T(), sdk.Coins{{Denom: "atom", Amount: math.NewInt(1000)}}, fourthLevelAllowance.SpendLimit)
	require.NotNil(s.T(), fourthLevelAllowance.Expiration, "Expiration should not be nil")
}

=== File: x/xion/client/cli/query_platform_fee.go ===

-- Chunk 1 --
// query_platform_fee.go:12-38
func CmdPlatformPercentage() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "platform-percentage",
		Short: "Get Platform Percentage",
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryPlatformPercentageRequest{}

			res, err := queryClient.PlatformPercentage(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

-- Chunk 2 --
// query_platform_fee.go:40-66
func CmdPlatformMinimum() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "platform-minimum",
		Short: "Get Platform Minimum",
		RunE: func(cmd *cobra.Command, _ []string) error {
			clientCtx, err := client.GetClientQueryContext(cmd)
			if err != nil {
				return err
			}

			queryClient := types.NewQueryClient(clientCtx)

			params := &types.QueryPlatformMinimumRequest{}

			res, err := queryClient.PlatformMinimum(cmd.Context(), params)
			if err != nil {
				return err
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddQueryFlagsToCmd(cmd)

	return cmd
}

=== File: x/xion/client/cli/suite_test.go ===

-- Chunk 1 --
// suite_test.go:24-30
type CLITestSuite struct {
	suite.Suite

	kr      keyring.Keyring
	encCfg  testutilmod.TestEncodingConfig
	baseCtx client.Context
}

-- Chunk 2 --
// suite_test.go:32-34
func TestMigrateTestSuite(t *testing.T) {
	suite.Run(t, new(CLITestSuite))
}

-- Chunk 3 --
// suite_test.go:36-46
func (s *CLITestSuite) SetupSuite() {
	s.encCfg = testutilmod.MakeTestEncodingConfig(bank.AppModuleBasic{}, feegrant.AppModuleBasic{}, authz.AppModuleBasic{}, staking.AppModuleBasic{}, gov.AppModuleBasic{}, wasm.AppModuleBasic{})
	s.kr = keyring.NewInMemory(s.encCfg.Codec)
	s.baseCtx = client.Context{}.
		WithKeyring(s.kr).
		WithTxConfig(s.encCfg.TxConfig).
		WithCodec(s.encCfg.Codec).
		WithClient(clitestutil.MockCometRPC{Client: rpcclientmock.Client{}}).
		WithAccountRetriever(client.MockAccountRetriever{}).
		WithOutput(io.Discard)
}

=== File: x/xion/client/cli/tx.go ===

-- Chunk 1 --
// tx.go:50-53
type ExplicitAny struct {
	TypeURL string `json:"type_url"`
	Value   []byte `json:"value"`
}

-- Chunk 2 --
// tx.go:55-59
type GrantConfig struct {
	Description   string      `json:"description"`
	Authorization interface{} `json:"authorization"`
	Optional      bool        `json:"optional"`
}

-- Chunk 3 --
// tx.go:61-64
type UpdateGrantConfig struct {
	MsgTypeURL  string      `json:"msg_type_url"`
	GrantConfig GrantConfig `json:"grant_config"`
}

-- Chunk 4 --
// tx.go:66-70
type FeeConfig struct {
	Description string      `json:"description"`
	Allowance   interface{} `json:"allowance,omitempty"`
	Expiration  int32       `json:"expiration,omitempty"`
}

-- Chunk 5 --
// tx.go:73-94
func NewTxCmd() *cobra.Command {
	txCmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      "Xion transaction subcommands",
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	txCmd.AddCommand(
		NewSendTxCmd(),
		NewMultiSendTxCmd(),
		NewSignCmd(),
		NewAddAuthenticatorCmd(),
		NewRegisterCmd(),
		NewEmitArbitraryDataCmd(),
		NewUpdateConfigsCmd(),
		NewUpdateParamsCmd(),
	)

	return txCmd
}

-- Chunk 6 --
// tx.go:97-134
func NewSendTxCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "send [from_key_or_address] [to_address] [amount]",
		Short: "Send funds from one account to another.",
		Long: `Send funds from one account to another.
Note, the '--from' flag is ignored as it is implied from [from_key_or_address].
When using '--dry-run' a key name cannot be used, only a bech32 address.
`,
		Args: cobra.ExactArgs(3),
		RunE: func(cmd *cobra.Command, args []string) error {
			if err := cmd.Flags().Set(flags.FlagFrom, args[0]); err != nil {
				return err
			}
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			toAddr, err := sdk.AccAddressFromBech32(args[1])
			if err != nil {
				return err
			}

			coins, err := sdk.ParseCoinsNormalized(args[2])
			if err != nil {
				return err
			}

			msg := types.NewMsgSend(clientCtx.GetFromAddress(), toAddr, coins)

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)

	return cmd
}

-- Chunk 7 --
// tx.go:138-209
func NewMultiSendTxCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "multi-send [from_key_or_address] [to_address_1, to_address_2, ...] [amount]",
		Short: "Send funds from one account to two or more accounts.",
		Long: `Send funds from one account to two or more accounts.
By default, sends the [amount] to each address of the list.
Using the '--split' flag, the [amount] is split equally between the addresses.
Note, the '--from' flag is ignored as it is implied from [from_key_or_address].
When using '--dry-run' a key name cannot be used, only a bech32 address.
`,
		Args: cobra.MinimumNArgs(4),
		RunE: func(cmd *cobra.Command, args []string) error {
			if err := cmd.Flags().Set(flags.FlagFrom, args[0]); err != nil {
				return err
			}
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			coins, err := sdk.ParseCoinsNormalized(args[len(args)-1])
			if err != nil {
				return err
			}

			if coins.IsZero() {
				return fmt.Errorf("must send positive amount")
			}

			split, err := cmd.Flags().GetBool(FlagSplit)
			if err != nil {
				return err
			}

			totalAddrs := math.NewInt(int64(len(args) - 2))
			// coins to be received by the addresses
			sendCoins := coins
			if split {
				sendCoins = coins.QuoInt(totalAddrs)
			}

			var output []banktypes.Output
			for _, arg := range args[1 : len(args)-1] {
				toAddr, err := sdk.AccAddressFromBech32(arg)
				if err != nil {
					return err
				}

				output = append(output, banktypes.NewOutput(toAddr, sendCoins))
			}

			// amount to be send from the from address
			var amount sdk.Coins
			if split {
				// user input: 1000stake to send to 3 addresses
				// actual: 333stake to each address (=> 999stake actually sent)
				amount = sendCoins.MulInt(totalAddrs)
			} else {
				amount = coins.MulInt(totalAddrs)
			}

			msg := types.NewMsgMultiSend([]banktypes.Input{banktypes.NewInput(clientCtx.FromAddress, amount)}, output)

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	cmd.Flags().Bool(FlagSplit, false, "Send the equally split token amount to each address")
	flags.AddTxFlagsToCmd(cmd)

	return cmd
}

-- Chunk 8 --
// tx.go:211-332
func NewRegisterCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "register [code-id] [keyname] --salt [string] --funds [coins,optional] --authenticator [Seckp256|Jwt,required] --authenticator-id [uint8] --aud [string] --sub [string] --token [string]",
		Short: "Register an abstract account",
		Args:  cobra.MaximumNArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			if err := cmd.Flags().Set(flags.FlagFrom, args[1]); err != nil {
				return err
			}

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			codeID, err := strconv.ParseUint(args[0], 10, 64)
			if err != nil {
				return err
			}

			authenticatorID, err := cmd.Flags().GetUint8(flagAuthenticatorID)
			if err != nil {
				return err
			}

			salt, err := cmd.Flags().GetString(flagSalt)
			if err != nil {
				return fmt.Errorf("salt: %s", err)
			}

			amountStr, err := cmd.Flags().GetString(flagFunds)
			if err != nil {
				return fmt.Errorf("amount: %s", err)
			}

			authenticatorType, err := cmd.Flags().GetString(flagAuthenticator)
			if err != nil {
				return fmt.Errorf("authenticator: %s", err)
			}

			amount, err := sdk.ParseCoinsNormalized(amountStr)
			if err != nil {
				return fmt.Errorf("amount: %s", err)
			}
			queryClient := wasmtypes.NewQueryClient(clientCtx)

			codeResp, err := queryClient.Code(
				context.Background(),
				&wasmtypes.QueryCodeRequest{
					CodeId: codeID,
				},
			)
			if err != nil {
				return err
			}
			creatorAddr := clientCtx.GetFromAddress()
			codeHash, err := hex.DecodeString(codeResp.DataHash.String())
			if err != nil {
				return err
			}
			predictedAddr := wasmkeeper.BuildContractAddressPredictable(codeHash, creatorAddr, []byte(salt), []byte{})

			signature, pubKey, err := clientCtx.Keyring.SignByAddress(
				clientCtx.GetFromAddress(),
				[]byte(predictedAddr.String()),
				signMode,
			)
			if err != nil {
				return fmt.Errorf("error signing predicted address : %s", err)
			}
			// TODO: Split authenticator types using switch,
			var instantiateMsg string
			switch authenticatorType {
			case "Jwt":
				sub, err := cmd.Flags().GetString(flagSubject)
				if err != nil {
					return fmt.Errorf("subject: %s", err)
				}

				aud, err := cmd.Flags().GetString(flagAudience)
				if err != nil {
					return fmt.Errorf("audience: %s", err)
				}

				token, err := cmd.Flags().GetString(flagToken)
				if err != nil {
					return fmt.Errorf("token: %s", err)
				}

				instantiateMsg, err = newInstantiateJwtMsg(token, authenticatorType, sub, aud, authenticatorID)
				if err != nil {
					return err
				}
			default:
				instantiateMsg, err = newInstantiateMsg(authenticatorType, authenticatorID, signature, pubKey.Bytes())
				if err != nil {
					return err
				}
			}

			msg := registerMsg(clientCtx.GetFromAddress().String(), salt, instantiateMsg, codeID, amount)
			if err := msg.ValidateBasic(); err != nil {
				return err
			}

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
		SilenceUsage: true,
	}

	flags.AddTxFlagsToCmd(cmd)

	cmd.Flags().String(flagSalt, "", "Salt value used in determining account address")
	cmd.Flags().String(flagAuthenticator, "", "Authenticator type: Seckp256K1|JWT")
	cmd.Flags().String(flagFunds, "", "Coins to send to the account during instantiation")
	cmd.Flags().Uint8(flagAuthenticatorID, 0, "Authenticator index locator")
	cmd.Flags().String(flagAudience, "", "Recipient for the token")
	cmd.Flags().String(flagToken, "", "Pre signed JWT")
	cmd.Flags().String(flagSubject, "", "Principal for the token")

	return cmd
}

-- Chunk 9 --
// tx.go:334-416
func NewAddAuthenticatorCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "add-authenticator [contract-addr] --authenticator-id [uint8]",
		Short: "Add the signing key as an authenticator to an abstract account",
		Args:  cobra.ExactArgs(1),
		RunE: func(cmd *cobra.Command, args []string) error {
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			authenticatorID, err := cmd.Flags().GetUint8(flagAuthenticatorID)
			if err != nil {
				return err
			}

			contractAddr := args[0]

			signMode := signing.SignMode_SIGN_MODE_UNSPECIFIED
			switch clientCtx.SignModeStr {
			case flags.SignModeDirect:
				signMode = signing.SignMode_SIGN_MODE_DIRECT
			case flags.SignModeLegacyAminoJSON:
				signMode = signing.SignMode_SIGN_MODE_LEGACY_AMINO_JSON
			case flags.SignModeDirectAux:
				signMode = signing.SignMode_SIGN_MODE_DIRECT_AUX
			case flags.SignModeTextual:
				signMode = signing.SignMode_SIGN_MODE_TEXTUAL
			case flags.SignModeEIP191:
				signMode = signing.SignMode_SIGN_MODE_EIP_191
			}

			signature, pubKey, err := clientCtx.Keyring.SignByAddress(clientCtx.GetFromAddress(), []byte(contractAddr), signMode)
			if err != nil {
				return fmt.Errorf("error signing address : %s", err)
			}

			secp256k1 := map[string]interface{}{}
			secp256k1["id"] = authenticatorID
			secp256k1["pubkey"] = pubKey.Bytes()
			secp256k1["signature"] = signature

			addAuthenticator := map[string]interface{}{}
			addAuthenticator["Secp256K1"] = secp256k1

			addAuthMethod := map[string]interface{}{}
			addAuthMethod["add_authenticator"] = addAuthenticator

			msg := map[string]interface{}{}
			msg["add_auth_method"] = addAuthMethod

			jsonMsg, err := json.Marshal(msg)
			if err != nil {
				return err
			}

			rawMsg := wasmtypes.RawContractMessage{}
			err = json.Unmarshal(jsonMsg, &rawMsg)
			if err != nil {
				return err
			}

			wasmMsg := &wasmtypes.MsgExecuteContract{
				Sender:   contractAddr,
				Contract: contractAddr,
				Msg:      rawMsg,
				Funds:    nil,
			}
			if err := wasmMsg.ValidateBasic(); err != nil {
				return err
			}

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), wasmMsg)
		},
		SilenceUsage: true,
	}

	flags.AddTxFlagsToCmd(cmd)

	cmd.Flags().Uint8(flagAuthenticatorID, 0, "Authenticator index locator")

	return cmd
}

-- Chunk 10 --
// tx.go:419-544
func NewSignCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "sign [keyname] [signer_account] [path/to/tx.json]",
		Short: "sign a transaction",
		Long:  `Sign transaction by retrieving the Smart Contract Account signer.`,
		Args:  cobra.ExactArgs(3),
		RunE: func(cmd *cobra.Command, args []string) error {
			if err := cmd.Flags().Set(flags.FlagFrom, args[0]); err != nil {
				return err
			}

			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}
			authenticatorID, err := cmd.Flags().GetUint8(flagAuthenticatorID)
			if err != nil {
				return err
			}

			signerAddr, err := sdk.AccAddressFromBech32(args[1])
			if err != nil {
				return err
			}

			txBz, err := os.ReadFile(args[2])
			if err != nil {
				return err
			}

			stdTx, err := clientCtx.TxConfig.TxJSONDecoder()(txBz)
			if err != nil {
				return err
			}

			queryClient := authtypes.NewQueryClient(clientCtx)

			signerAcc, err := getSignerOfTx(queryClient, signerAddr)
			if err != nil {
				return err
			}

			signerData := signing2.SignerData{
				Address:       signerAcc.GetAddress().String(),
				ChainID:       clientCtx.ChainID,
				AccountNumber: signerAcc.GetAccountNumber(),
				Sequence:      signerAcc.GetSequence(),
				PubKey:        nil, // NOTE: NilPubKey
			}

			txBuilder, err := clientCtx.TxConfig.WrapTxBuilder(stdTx)
			if err != nil {
				panic(err)
			}

			sigData := signing.SingleSignatureData{
				SignMode:  signMode,
				Signature: nil,
			}

			sig := signing.SignatureV2{
				PubKey:   signerAcc.GetPubKey(),
				Data:     &sigData,
				Sequence: signerAcc.GetSequence(),
			}

			if err := txBuilder.SetSignatures(sig); err != nil {
				panic(err)
			}

			adaptableTx, ok := txBuilder.GetTx().(authsigning.V2AdaptableTx)
			if !ok {
				return fmt.Errorf("expected tx to implement V2AdaptableTx, got %T", txBuilder.GetTx())
			}

			txData := adaptableTx.GetSigningTxData()
			signBytes, err := clientCtx.TxConfig.SignModeHandler().GetSignBytes(
				clientCtx.CmdContext,
				signingv1beta1.SignMode_SIGN_MODE_DIRECT,
				signerData,
				txData,
			)
			if err != nil {
				panic(err)
			}
			signedBytes, _, err := clientCtx.Keyring.Sign(
				clientCtx.GetFromName(), signBytes,
				signMode,
			)
			if err != nil {
				panic(err)
			}

			sigBytes := append([]byte{authenticatorID}, signedBytes...)
			sigData = signing.SingleSignatureData{
				SignMode:  signMode,
				Signature: sigBytes,
			}

			sig = signing.SignatureV2{
				PubKey:   signerAcc.GetPubKey(),
				Data:     &sigData,
				Sequence: signerAcc.GetSequence(),
			}

			if err := txBuilder.SetSignatures(sig); err != nil {
				panic(err)
			}

			bz, err := clientCtx.TxConfig.TxEncoder()(txBuilder.GetTx())
			if err != nil {
				panic(err)
			}
			res, err := clientCtx.BroadcastTx(bz)
			if err != nil {
				panic(err)
			}

			return clientCtx.PrintProto(res)
		},
	}

	flags.AddTxFlagsToCmd(cmd)
	cmd.Flags().Uint8(flagAuthenticatorID, 0, "Authenticator index locator")
	return cmd
}

-- Chunk 11 --
// tx.go:547-596
func NewEmitArbitraryDataCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "emit <arbitrary_data> <contract_address> --authenticator-id [uint8]",
		Short: "Emit an arbitrary data from the chain",
		Long:  `Sends an arbitrary data to the contract's emit endpoint. The contract emits the arbitrary contract on-chain.`,
		Args:  cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}
			arbitraryData := args[0]

			contractAddr := args[1]

			data := map[string]interface{}{}
			data["data"] = arbitraryData
			msg := map[string]interface{}{}
			msg["emit"] = data

			jsonMsg, err := json.Marshal(msg)
			if err != nil {
				return err
			}

			rawMsg := wasmtypes.RawContractMessage{}
			err = json.Unmarshal(jsonMsg, &rawMsg)
			if err != nil {
				return err
			}

			wasmMsg := &wasmtypes.MsgExecuteContract{
				Sender:   contractAddr,
				Contract: contractAddr,
				Msg:      rawMsg,
				Funds:    nil,
			}
			if err := wasmMsg.ValidateBasic(); err != nil {
				return err
			}

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), wasmMsg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)
	cmd.Flags().Uint8(flagAuthenticatorID, 0, "Authenticator index locator")

	return cmd
}

-- Chunk 12 --
// tx.go:598-725
func NewUpdateConfigsCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "update-configs [contract] [config_path_or_url]",
		Short: "Batch update grant configs and fee config for the treasury",
		Long:  "Batch update grant configs and fee config for the treasury. To read from a local file, use the --local flag otherwise the config_path_or_url is treated as a URL",
		Args:  cobra.ExactArgs(2),
		RunE: func(cmd *cobra.Command, args []string) error {
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			cdc := clientCtx.Codec

			contract := args[0]
			configSource := args[1]

			// Determine source type (local file or URL)
			localSource, err := cmd.Flags().GetBool("local")
			if err != nil {
				return fmt.Errorf("failed to parse local flag: %w", err)
			}

			var configData struct {
				GrantConfig []UpdateGrantConfig `json:"grant_config"`
				FeeConfig   FeeConfig           `json:"fee_config"`
			}

			if localSource {
				// Read from local file
				fileData, err := os.ReadFile(configSource)
				if err != nil {
					return fmt.Errorf("failed to read configuration file: %w", err)
				}
				err = json.Unmarshal(fileData, &configData)
				if err != nil {
					return fmt.Errorf("failed to unmarshal local configuration file: %w", err)
				}
			} else {
				// Fetch JSON from URI
				parsedURL, err := url.Parse(configSource)
				if err != nil || (parsedURL.Scheme != "http" && parsedURL.Scheme != "https") {
					return fmt.Errorf("invalid URL: %s", configSource)
				}
				// #nosec G107 - URL is controlled and safe in this context
				resp, err := http.Get(configSource)
				if err != nil {
					return fmt.Errorf("failed to fetch configuration from URI: %w", err)
				}
				defer resp.Body.Close()

				if resp.StatusCode != http.StatusOK {
					return fmt.Errorf("received non-200 response code: %d", resp.StatusCode)
				}

				err = json.NewDecoder(resp.Body).Decode(&configData)
				if err != nil {
					return fmt.Errorf("failed to decode JSON response: %w", err)
				}
			}

			var msgs []sdk.Msg
			// Process Grant Configs
			for _, grant := range configData.GrantConfig {
				auth := grant.GrantConfig.Authorization
				authM, ok := auth.(map[string]interface{})
				if !ok {
					return fmt.Errorf("failed to parse authorization from grant config")
				}
				grantConfig, err := ConvertJSONToAny(cdc, authM)
				if err != nil {
					return fmt.Errorf("failed to convert grant config to Any: %w", err)
				}
				grant.GrantConfig.Authorization = grantConfig
				executeMsg := map[string]interface{}{
					"update_grant_config": map[string]interface{}{
						"msg_type_url": grant.MsgTypeURL,
						"grant_config": grant.GrantConfig,
					},
				}
				msgBz, err := json.Marshal(executeMsg)
				if err != nil {
					return fmt.Errorf("failed to marshal execute message for grant: %w", err)
				}
				msg := &wasmtypes.MsgExecuteContract{
					Sender:   clientCtx.GetFromAddress().String(),
					Contract: contract,
					Msg:      msgBz,
					Funds:    sdk.Coins{},
				}
				msgs = append(msgs, msg)
			}

			// Process Fee Config
			allowance := configData.FeeConfig.Allowance
			allowanceM := allowance.(map[string]interface{})
			feeConfig, err := ConvertJSONToAny(cdc, allowanceM)
			if err != nil {
				return fmt.Errorf("failed to convert fee config to Any: %w", err)
			}
			configData.FeeConfig.Allowance = feeConfig

			feeExecuteMsg := map[string]interface{}{
				"update_fee_config": map[string]interface{}{
					"fee_config": configData.FeeConfig,
				},
			}
			feeMsgBz, err := json.Marshal(feeExecuteMsg)
			if err != nil {
				return fmt.Errorf("failed to marshal execute message for fee config: %w", err)
			}
			feeMsg := &wasmtypes.MsgExecuteContract{
				Sender:   clientCtx.GetFromAddress().String(),
				Contract: contract,
				Msg:      feeMsgBz,
				Funds:    sdk.Coins{},
			}
			msgs = append(msgs, feeMsg)

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msgs...)
		},
	}

	flags.AddTxFlagsToCmd(cmd)

	cmd.Flags().Bool("local", false, "Specify if the config source is a local file instead of a URL")
	return cmd
}

-- Chunk 13 --
// tx.go:727-790
func NewUpdateParamsCmd() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "update-params <contract> <display_url> <redirect_url> <icon_url>",
		Short: "Update treasury contract parameters",
		Long: `Updates a treasury contract's display URL, redirect URL, and icon URL.
		Example:
		update-params <contract_address> "https://example.com/display" "https://example.com/redirect" "https://example.com/icon.png"
		`,
		Args: cobra.ExactArgs(4),
		RunE: func(cmd *cobra.Command, args []string) error {
			clientCtx, err := client.GetClientTxContext(cmd)
			if err != nil {
				return err
			}

			contract := args[0]
			displayURL := args[1]
			redirectURL := args[2]
			iconURL := args[3]

			_, err = url.ParseRequestURI(displayURL)
			if err != nil {
				return fmt.Errorf("invalid display URL: %w", err)
			}
			_, err = url.ParseRequestURI(redirectURL)
			if err != nil {
				return fmt.Errorf("invalid redirect URL: %w", err)
			}
			_, err = url.ParseRequestURI(iconURL)
			if err != nil {
				return fmt.Errorf("invalid icon URL: %w", err)
			}

			// Construct the execute message
			updateMsg := map[string]interface{}{
				"update_params": map[string]interface{}{
					"params": map[string]string{
						"display_url":  displayURL,
						"redirect_url": redirectURL,
						"icon_url":     iconURL,
					},
				},
			}

			// Serialize the message to JSON
			msgBz, err := json.Marshal(updateMsg)
			if err != nil {
				return fmt.Errorf("failed to marshal execute message: %w", err)
			}

			// Create a MsgExecuteContract message
			msg := &wasmtypes.MsgExecuteContract{
				Sender:   clientCtx.GetFromAddress().String(),
				Contract: contract,
				Msg:      msgBz,
			}

			return tx.GenerateOrBroadcastTxCLI(clientCtx, cmd.Flags(), msg)
		},
	}

	flags.AddTxFlagsToCmd(cmd)
	return cmd
}

-- Chunk 14 --
// tx.go:792-808
func getSignerOfTx(queryClient authtypes.QueryClient, address sdk.AccAddress) (*aatypes.AbstractAccount, error) {
	res, err := queryClient.Account(context.Background(), &authtypes.QueryAccountRequest{Address: address.String()})
	if err != nil {
		return nil, err
	}

	if res.Account.TypeUrl != typeURL((*aatypes.AbstractAccount)(nil)) {
		return nil, fmt.Errorf("signer %s is not an AbstractAccount", address.String())
	}

	acc := &aatypes.AbstractAccount{}
	if err = proto.Unmarshal(res.Account.Value, acc); err != nil {
		return nil, err
	}

	return acc, nil
}

-- Chunk 15 --
// tx.go:810-812
func typeURL(x proto.Message) string {
	return "/" + proto.MessageName(x)
}

-- Chunk 16 --
// tx.go:814-823
func registerMsg(sender, salt, instantiateMsg string, codeID uint64, amount sdk.Coins) *aatypes.MsgRegisterAccount {
	msg := &aatypes.MsgRegisterAccount{
		Sender: sender,
		CodeID: codeID,
		Msg:    []byte(instantiateMsg),
		Funds:  amount,
		Salt:   []byte(salt),
	}
	return msg
}

-- Chunk 17 --
// tx.go:825-841
func newInstantiateMsg(authenticatorType string, authenticatorID uint8, signature, pubKey []byte) (string, error) {
	instantiateMsg := map[string]interface{}{}
	authenticatorDetails := map[string]interface{}{}
	authenticator := map[string]interface{}{}

	authenticatorDetails["id"] = authenticatorID
	authenticatorDetails["pubkey"] = pubKey
	authenticatorDetails["signature"] = signature
	authenticator[authenticatorType] = authenticatorDetails

	instantiateMsg["authenticator"] = authenticator
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	if err != nil {
		return "", fmt.Errorf("error signing contract msg : %s", err)
	}
	return string(instantiateMsgStr), nil
}

-- Chunk 18 --
// tx.go:843-880
func newInstantiateJwtMsg(token, authenticatorType, sub, aud string, authenticatorID uint8) (string, error) {
	instantiateMsg := map[string]interface{}{}
	authenticatorDetails := map[string]interface{}{}
	authenticator := map[string]interface{}{}

	authenticatorDetails["sub"] = sub
	authenticatorDetails["aud"] = aud
	authenticatorDetails["id"] = authenticatorID
	authenticator[authenticatorType] = authenticatorDetails

	instantiateMsg["authenticator"] = authenticator
	authenticatorDetails["token"] = []byte(token)
	instantiateMsgStr, err := json.Marshal(instantiateMsg)
	if err != nil {
		return "", err
	}

	return string(instantiateMsgStr), nil

	/*
		auds := jwt.ClaimStrings{aud}
		token := jwt.NewWithClaims(jwt.SigningMethodRS256, jwt.MapClaims{
			"iss":              aud,
			"sub":              sub,
			"aud":              auds,
			"exp":              inFive.Unix(),
			"nbf":              fiveAgo.Unix(),
			"iat":              fiveAgo.Unix(),
			"transaction_hash": signature,
		})
		t.Logf("jwt claims: %v", token)

		// sign the JWT with the predefined key
		output, err := token.SignedString(privateKey)
		require.NoError(t, err)
		t.Logf("signed token: %s", output)
	*/
}

-- Chunk 19 --
// tx.go:882-917
func ConvertJSONToAny(cdc codec.Codec, jsonInput map[string]interface{}) (ExplicitAny, error) {
	typeURL, ok := jsonInput["@type"].(string)
	if !ok {
		return ExplicitAny{}, fmt.Errorf("failed to parse type URL from JSON")
	}
	delete(jsonInput, "@type")
	// Resolve the concrete type for the given typeURL
	protoMsg, err := cdc.InterfaceRegistry().Resolve(typeURL)
	if err != nil {
		return ExplicitAny{}, fmt.Errorf("failed to resolve type URL %s: %w", typeURL, err)
	}
	jsonInputBz, err := json.Marshal(jsonInput)
	if err != nil {
		return ExplicitAny{}, fmt.Errorf("failed to marshal JSON input: %w", err)
	}
	// Unmarshal the JSON into the Protobuf message
	err = cdc.UnmarshalJSON(jsonInputBz, protoMsg)
	if err != nil {
		return ExplicitAny{}, fmt.Errorf("failed to unmarshal JSON into proto.Message: %w", err)
	}

	// Marshal the Protobuf message into Any
	val, err := cdcTypes.NewAnyWithValue(protoMsg)
	if err != nil {
		return ExplicitAny{}, fmt.Errorf("failed to marshal proto.Message into Any: %w", err)
	}

	res := ExplicitAny{
		TypeURL: val.TypeUrl,
		Value:   val.Value,
	}

	protoMsg.Reset()

	return res, nil
}

=== File: x/xion/client/cli/query.go ===

-- Chunk 1 --
// query.go:14-32
func GetQueryCmd() *cobra.Command {
	// Group jwk queries under a subcommand
	cmd := &cobra.Command{
		Use:                        types.ModuleName,
		Short:                      fmt.Sprintf("Querying commands for the %s module", types.ModuleName),
		DisableFlagParsing:         true,
		SuggestionsMinimumDistance: 2,
		RunE:                       client.ValidateCmd,
	}

	cmd.AddCommand(CmdWebAuthNVerifyRegister())
	cmd.AddCommand(CmdWebAuthNVerifyAuthenticate())
	cmd.AddCommand(CmdPlatformPercentage())
	cmd.AddCommand(CmdPlatformMinimum())

	// this line is used by starport scaffolding # 1

	return cmd
}
