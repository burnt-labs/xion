//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/auth/module/v1/module.proto

package cosmos.auth.module.v1;

@kotlin.jvm.JvmName("-initializemoduleAccountPermission")
public inline fun moduleAccountPermission(block: cosmos.auth.module.v1.ModuleAccountPermissionKt.Dsl.() -> kotlin.Unit): cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission =
  cosmos.auth.module.v1.ModuleAccountPermissionKt.Dsl._create(cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission.newBuilder()).apply { block() }._build()
public object ModuleAccountPermissionKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission = _builder.build()

    /**
     * <pre>
     * account is the name of the module.
     * </pre>
     *
     * <code>string account = 1 [json_name = "account"];</code>
     */
    public var account: kotlin.String
      @JvmName("getAccount")
      get() = _builder.getAccount()
      @JvmName("setAccount")
      set(value) {
        _builder.setAccount(value)
      }
    /**
     * <pre>
     * account is the name of the module.
     * </pre>
     *
     * <code>string account = 1 [json_name = "account"];</code>
     */
    public fun clearAccount() {
      _builder.clearAccount()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PermissionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @return A list containing the permissions.
     */
    public val permissions: com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPermissionsList()
      )
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPermissions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.add(value: kotlin.String) {
      _builder.addPermissions(value)
    }
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @param value The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPermissions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllPermissions(values)
    }
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @param values The permissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     * @param index The index to set the value at.
     * @param value The permissions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPermissions")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setPermissions(index, value)
    }/**
     * <pre>
     * permissions are the permissions this module has. Currently recognized
     * values are minter, burner and staking.
     * </pre>
     *
     * <code>repeated string permissions = 2 [json_name = "permissions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPermissions")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, PermissionsProxy>.clear() {
      _builder.clearPermissions()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission.copy(block: cosmos.auth.module.v1.ModuleAccountPermissionKt.Dsl.() -> kotlin.Unit): cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission =
  cosmos.auth.module.v1.ModuleAccountPermissionKt.Dsl._create(this.toBuilder()).apply { block() }._build()

