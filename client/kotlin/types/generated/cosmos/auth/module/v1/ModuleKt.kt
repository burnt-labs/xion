//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/auth/module/v1/module.proto

package cosmos.auth.module.v1;

@kotlin.jvm.JvmName("-initializemodule")
public inline fun module(block: cosmos.auth.module.v1.ModuleKt.Dsl.() -> kotlin.Unit): cosmos.auth.module.v1.ModuleOuterClass.Module =
  cosmos.auth.module.v1.ModuleKt.Dsl._create(cosmos.auth.module.v1.ModuleOuterClass.Module.newBuilder()).apply { block() }._build()
public object ModuleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.auth.module.v1.ModuleOuterClass.Module.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.auth.module.v1.ModuleOuterClass.Module.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.auth.module.v1.ModuleOuterClass.Module = _builder.build()

    /**
     * <pre>
     * bech32_prefix is the bech32 account prefix for the app.
     * </pre>
     *
     * <code>string bech32_prefix = 1 [json_name = "bech32Prefix"];</code>
     */
    public var bech32Prefix: kotlin.String
      @JvmName("getBech32Prefix")
      get() = _builder.getBech32Prefix()
      @JvmName("setBech32Prefix")
      set(value) {
        _builder.setBech32Prefix(value)
      }
    /**
     * <pre>
     * bech32_prefix is the bech32 account prefix for the app.
     * </pre>
     *
     * <code>string bech32_prefix = 1 [json_name = "bech32Prefix"];</code>
     */
    public fun clearBech32Prefix() {
      _builder.clearBech32Prefix()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ModuleAccountPermissionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     */
     public val moduleAccountPermissions: com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getModuleAccountPermissionsList()
      )
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     * @param value The moduleAccountPermissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addModuleAccountPermissions")
    public fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.add(value: cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission) {
      _builder.addModuleAccountPermissions(value)
    }
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     * @param value The moduleAccountPermissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignModuleAccountPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.plusAssign(value: cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission) {
      add(value)
    }
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     * @param values The moduleAccountPermissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllModuleAccountPermissions")
    public fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission>) {
      _builder.addAllModuleAccountPermissions(values)
    }
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     * @param values The moduleAccountPermissions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllModuleAccountPermissions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission>) {
      addAll(values)
    }
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     * @param index The index to set the value at.
     * @param value The moduleAccountPermissions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setModuleAccountPermissions")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.set(index: kotlin.Int, value: cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission) {
      _builder.setModuleAccountPermissions(index, value)
    }
    /**
     * <pre>
     * module_account_permissions are module account permissions.
     * </pre>
     *
     * <code>repeated .cosmos.auth.module.v1.ModuleAccountPermission module_account_permissions = 2 [json_name = "moduleAccountPermissions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearModuleAccountPermissions")
    public fun com.google.protobuf.kotlin.DslList<cosmos.auth.module.v1.ModuleOuterClass.ModuleAccountPermission, ModuleAccountPermissionsProxy>.clear() {
      _builder.clearModuleAccountPermissions()
    }


    /**
     * <pre>
     * authority defines the custom module authority. If not set, defaults to the governance module.
     * </pre>
     *
     * <code>string authority = 3 [json_name = "authority"];</code>
     */
    public var authority: kotlin.String
      @JvmName("getAuthority")
      get() = _builder.getAuthority()
      @JvmName("setAuthority")
      set(value) {
        _builder.setAuthority(value)
      }
    /**
     * <pre>
     * authority defines the custom module authority. If not set, defaults to the governance module.
     * </pre>
     *
     * <code>string authority = 3 [json_name = "authority"];</code>
     */
    public fun clearAuthority() {
      _builder.clearAuthority()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.auth.module.v1.ModuleOuterClass.Module.copy(block: cosmos.auth.module.v1.ModuleKt.Dsl.() -> kotlin.Unit): cosmos.auth.module.v1.ModuleOuterClass.Module =
  cosmos.auth.module.v1.ModuleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

