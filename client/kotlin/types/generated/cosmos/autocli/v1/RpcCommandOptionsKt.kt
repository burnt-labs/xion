//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/autocli/v1/options.proto

package cosmos.autocli.v1;

@kotlin.jvm.JvmName("-initializerpcCommandOptions")
public inline fun rpcCommandOptions(block: cosmos.autocli.v1.RpcCommandOptionsKt.Dsl.() -> kotlin.Unit): cosmos.autocli.v1.Options.RpcCommandOptions =
  cosmos.autocli.v1.RpcCommandOptionsKt.Dsl._create(cosmos.autocli.v1.Options.RpcCommandOptions.newBuilder()).apply { block() }._build()
public object RpcCommandOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.autocli.v1.Options.RpcCommandOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.autocli.v1.Options.RpcCommandOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.autocli.v1.Options.RpcCommandOptions = _builder.build()

    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     */
    public var rpcMethod: kotlin.String
      @JvmName("getRpcMethod")
      get() = _builder.getRpcMethod()
      @JvmName("setRpcMethod")
      set(value) {
        _builder.setRpcMethod(value)
      }
    /**
     * <pre>
     * rpc_method is short name of the protobuf rpc method that this command is
     * generated from.
     * </pre>
     *
     * <code>string rpc_method = 1 [json_name = "rpcMethod"];</code>
     */
    public fun clearRpcMethod() {
      _builder.clearRpcMethod()
    }

    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     */
    public var use: kotlin.String
      @JvmName("getUse")
      get() = _builder.getUse()
      @JvmName("setUse")
      set(value) {
        _builder.setUse(value)
      }
    /**
     * <pre>
     * use is the one-line usage method. It also allows specifying an alternate
     * name for the command as the first word of the usage text.
     * By default the name of an rpc command is the kebab-case short name of the
     * rpc method.
     * </pre>
     *
     * <code>string use = 2 [json_name = "use"];</code>
     */
    public fun clearUse() {
      _builder.clearUse()
    }

    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     */
    public var long: kotlin.String
      @JvmName("getLong")
      get() = _builder.getLong()
      @JvmName("setLong")
      set(value) {
        _builder.setLong(value)
      }
    /**
     * <pre>
     * long is the long message shown in the 'help &lt;this-command&gt;' output.
     * </pre>
     *
     * <code>string long = 3 [json_name = "long"];</code>
     */
    public fun clearLong() {
      _builder.clearLong()
    }

    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     */
    public var short: kotlin.String
      @JvmName("getShort")
      get() = _builder.getShort()
      @JvmName("setShort")
      set(value) {
        _builder.setShort(value)
      }
    /**
     * <pre>
     * short is the short description shown in the 'help' output.
     * </pre>
     *
     * <code>string short = 4 [json_name = "short"];</code>
     */
    public fun clearShort() {
      _builder.clearShort()
    }

    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     */
    public var example: kotlin.String
      @JvmName("getExample")
      get() = _builder.getExample()
      @JvmName("setExample")
      set(value) {
        _builder.setExample(value)
      }
    /**
     * <pre>
     * example is examples of how to use the command.
     * </pre>
     *
     * <code>string example = 5 [json_name = "example"];</code>
     */
    public fun clearExample() {
      _builder.clearExample()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AliasProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @return A list containing the alias.
     */
    public val alias: com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAliasList()
      )
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param value The alias to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAlias")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.add(value: kotlin.String) {
      _builder.addAlias(value)
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param value The alias to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAlias")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param values The alias to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAlias")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllAlias(values)
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param values The alias to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAlias")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     * @param index The index to set the value at.
     * @param value The alias to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAlias")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setAlias(index, value)
    }/**
     * <pre>
     * alias is an array of aliases that can be used instead of the first word in Use.
     * </pre>
     *
     * <code>repeated string alias = 6 [json_name = "alias"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAlias")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, AliasProxy>.clear() {
      _builder.clearAlias()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SuggestForProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @return A list containing the suggestFor.
     */
    public val suggestFor: com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSuggestForList()
      )
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param value The suggestFor to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSuggestFor")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.add(value: kotlin.String) {
      _builder.addSuggestFor(value)
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param value The suggestFor to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSuggestFor")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param values The suggestFor to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSuggestFor")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllSuggestFor(values)
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param values The suggestFor to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSuggestFor")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     * @param index The index to set the value at.
     * @param value The suggestFor to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSuggestFor")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setSuggestFor(index, value)
    }/**
     * <pre>
     * suggest_for is an array of command names for which this command will be suggested -
     * similar to aliases but only suggests.
     * </pre>
     *
     * <code>repeated string suggest_for = 7 [json_name = "suggestFor"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSuggestFor")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SuggestForProxy>.clear() {
      _builder.clearSuggestFor()
    }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     */
    public var deprecated: kotlin.String
      @JvmName("getDeprecated")
      get() = _builder.getDeprecated()
      @JvmName("setDeprecated")
      set(value) {
        _builder.setDeprecated(value)
      }
    /**
     * <pre>
     * deprecated defines, if this command is deprecated and should print this string when used.
     * </pre>
     *
     * <code>string deprecated = 8 [json_name = "deprecated"];</code>
     */
    public fun clearDeprecated() {
      _builder.clearDeprecated()
    }

    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <pre>
     * version defines the version for this command. If this value is non-empty and the command does not
     * define a "version" flag, a "version" boolean flag will be added to the command and, if specified,
     * will print content of the "Version" variable. A shorthand "v" flag will also be added if the
     * command does not define one.
     * </pre>
     *
     * <code>string version = 9 [json_name = "version"];</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FlagOptionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
     public val flagOptions: com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      @kotlin.jvm.JvmSynthetic
      @JvmName("getFlagOptionsMap")
      get() = com.google.protobuf.kotlin.DslMap(
        _builder.getFlagOptionsMap()
      )
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @JvmName("putFlagOptions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      .put(key: kotlin.String, value: cosmos.autocli.v1.Options.FlagOptions) {
         _builder.putFlagOptions(key, value)
       }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("setFlagOptions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      .set(key: kotlin.String, value: cosmos.autocli.v1.Options.FlagOptions) {
         put(key, value)
       }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("removeFlagOptions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      .remove(key: kotlin.String) {
         _builder.removeFlagOptions(key)
       }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("putAllFlagOptions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      .putAll(map: kotlin.collections.Map<kotlin.String, cosmos.autocli.v1.Options.FlagOptions>) {
         _builder.putAllFlagOptions(map)
       }
    /**
     * <pre>
     * flag_options are options for flags generated from rpc request fields.
     * By default all request fields are configured as flags. They can
     * also be configured as positional args instead using positional_args.
     * </pre>
     *
     * <code>map&lt;string, .cosmos.autocli.v1.FlagOptions&gt; flag_options = 10 [json_name = "flagOptions"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @JvmName("clearFlagOptions")
    public fun com.google.protobuf.kotlin.DslMap<kotlin.String, cosmos.autocli.v1.Options.FlagOptions, FlagOptionsProxy>
      .clear() {
         _builder.clearFlagOptions()
       }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class PositionalArgsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
     public val positionalArgs: com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getPositionalArgsList()
      )
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param value The positionalArgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPositionalArgs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.add(value: cosmos.autocli.v1.Options.PositionalArgDescriptor) {
      _builder.addPositionalArgs(value)
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param value The positionalArgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPositionalArgs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.plusAssign(value: cosmos.autocli.v1.Options.PositionalArgDescriptor) {
      add(value)
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param values The positionalArgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPositionalArgs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.autocli.v1.Options.PositionalArgDescriptor>) {
      _builder.addAllPositionalArgs(values)
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param values The positionalArgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPositionalArgs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.autocli.v1.Options.PositionalArgDescriptor>) {
      addAll(values)
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     * @param index The index to set the value at.
     * @param value The positionalArgs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPositionalArgs")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.set(index: kotlin.Int, value: cosmos.autocli.v1.Options.PositionalArgDescriptor) {
      _builder.setPositionalArgs(index, value)
    }
    /**
     * <pre>
     * positional_args specifies positional arguments for the command.
     * </pre>
     *
     * <code>repeated .cosmos.autocli.v1.PositionalArgDescriptor positional_args = 11 [json_name = "positionalArgs"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPositionalArgs")
    public fun com.google.protobuf.kotlin.DslList<cosmos.autocli.v1.Options.PositionalArgDescriptor, PositionalArgsProxy>.clear() {
      _builder.clearPositionalArgs()
    }


    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12 [json_name = "skip"];</code>
     */
    public var skip: kotlin.Boolean
      @JvmName("getSkip")
      get() = _builder.getSkip()
      @JvmName("setSkip")
      set(value) {
        _builder.setSkip(value)
      }
    /**
     * <pre>
     * skip specifies whether to skip this rpc method when generating commands.
     * </pre>
     *
     * <code>bool skip = 12 [json_name = "skip"];</code>
     */
    public fun clearSkip() {
      _builder.clearSkip()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.autocli.v1.Options.RpcCommandOptions.copy(block: cosmos.autocli.v1.RpcCommandOptionsKt.Dsl.() -> kotlin.Unit): cosmos.autocli.v1.Options.RpcCommandOptions =
  cosmos.autocli.v1.RpcCommandOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

