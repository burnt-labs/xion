//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/bank/v1beta1/query.proto

package cosmos.bank.v1beta1;

@kotlin.jvm.JvmName("-initializequeryAllBalancesRequest")
public inline fun queryAllBalancesRequest(block: cosmos.bank.v1beta1.QueryAllBalancesRequestKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest =
  cosmos.bank.v1beta1.QueryAllBalancesRequestKt.Dsl._create(cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest.newBuilder()).apply { block() }._build()
public object QueryAllBalancesRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest = _builder.build()

    /**
     * <pre>
     * address is the address to query balances for.
     * </pre>
     *
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * address is the address to query balances for.
     * </pre>
     *
     * <code>string address = 1 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.getPagination()
      @JvmName("setPagination")
      set(value) {
        _builder.setPagination(value)
      }
    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }

    /**
     * <pre>
     * resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
     * Since: cosmos-sdk 0.50
     * </pre>
     *
     * <code>bool resolve_denom = 3 [json_name = "resolveDenom"];</code>
     */
    public var resolveDenom: kotlin.Boolean
      @JvmName("getResolveDenom")
      get() = _builder.getResolveDenom()
      @JvmName("setResolveDenom")
      set(value) {
        _builder.setResolveDenom(value)
      }
    /**
     * <pre>
     * resolve_denom is the flag to resolve the denom into a human-readable form from the metadata.
     * Since: cosmos-sdk 0.50
     * </pre>
     *
     * <code>bool resolve_denom = 3 [json_name = "resolveDenom"];</code>
     */
    public fun clearResolveDenom() {
      _builder.clearResolveDenom()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest.copy(block: cosmos.bank.v1beta1.QueryAllBalancesRequestKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequest =
  cosmos.bank.v1beta1.QueryAllBalancesRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.bank.v1beta1.QueryOuterClass.QueryAllBalancesRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

