//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/bank/v1beta1/query.proto

package cosmos.bank.v1beta1;

@kotlin.jvm.JvmName("-initializequerySendEnabledRequest")
public inline fun querySendEnabledRequest(block: cosmos.bank.v1beta1.QuerySendEnabledRequestKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest =
  cosmos.bank.v1beta1.QuerySendEnabledRequestKt.Dsl._create(cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest.newBuilder()).apply { block() }._build()
public object QuerySendEnabledRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class DenomsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @return A list containing the denoms.
     */
    public val denoms: com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getDenomsList()
      )
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @param value The denoms to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addDenoms")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.add(value: kotlin.String) {
      _builder.addDenoms(value)
    }
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @param value The denoms to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignDenoms")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @param values The denoms to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllDenoms")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllDenoms(values)
    }
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @param values The denoms to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllDenoms")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     * @param index The index to set the value at.
     * @param value The denoms to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setDenoms")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setDenoms(index, value)
    }/**
     * <pre>
     * denoms is the specific denoms you want look up. Leave empty to get all entries.
     * </pre>
     *
     * <code>repeated string denoms = 1 [json_name = "denoms"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearDenoms")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, DenomsProxy>.clear() {
      _builder.clearDenoms()
    }
    /**
     * <pre>
     * pagination defines an optional pagination for the request. This field is
     * only read if the denoms field is empty.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 99 [json_name = "pagination"];</code>
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.getPagination()
      @JvmName("setPagination")
      set(value) {
        _builder.setPagination(value)
      }
    /**
     * <pre>
     * pagination defines an optional pagination for the request. This field is
     * only read if the denoms field is empty.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 99 [json_name = "pagination"];</code>
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * <pre>
     * pagination defines an optional pagination for the request. This field is
     * only read if the denoms field is empty.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 99 [json_name = "pagination"];</code>
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest.copy(block: cosmos.bank.v1beta1.QuerySendEnabledRequestKt.Dsl.() -> kotlin.Unit): cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequest =
  cosmos.bank.v1beta1.QuerySendEnabledRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.bank.v1beta1.QueryOuterClass.QuerySendEnabledRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

