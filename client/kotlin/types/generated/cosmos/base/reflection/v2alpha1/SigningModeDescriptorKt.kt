//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/base/reflection/v2alpha1/reflection.proto

package cosmos.base.reflection.v2alpha1;

@kotlin.jvm.JvmName("-initializesigningModeDescriptor")
public inline fun signingModeDescriptor(block: cosmos.base.reflection.v2alpha1.SigningModeDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor =
  cosmos.base.reflection.v2alpha1.SigningModeDescriptorKt.Dsl._create(cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor.newBuilder()).apply { block() }._build()
public object SigningModeDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor = _builder.build()

    /**
     * <pre>
     * name defines the unique name of the signing mode
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * name defines the unique name of the signing mode
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * number is the unique int32 identifier for the sign_mode enum
     * </pre>
     *
     * <code>int32 number = 2 [json_name = "number"];</code>
     */
    public var number: kotlin.Int
      @JvmName("getNumber")
      get() = _builder.getNumber()
      @JvmName("setNumber")
      set(value) {
        _builder.setNumber(value)
      }
    /**
     * <pre>
     * number is the unique int32 identifier for the sign_mode enum
     * </pre>
     *
     * <code>int32 number = 2 [json_name = "number"];</code>
     */
    public fun clearNumber() {
      _builder.clearNumber()
    }

    /**
     * <pre>
     * authn_info_provider_method_fullname defines the fullname of the method to call to get
     * the metadata required to authenticate using the provided sign_modes
     * </pre>
     *
     * <code>string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];</code>
     */
    public var authnInfoProviderMethodFullname: kotlin.String
      @JvmName("getAuthnInfoProviderMethodFullname")
      get() = _builder.getAuthnInfoProviderMethodFullname()
      @JvmName("setAuthnInfoProviderMethodFullname")
      set(value) {
        _builder.setAuthnInfoProviderMethodFullname(value)
      }
    /**
     * <pre>
     * authn_info_provider_method_fullname defines the fullname of the method to call to get
     * the metadata required to authenticate using the provided sign_modes
     * </pre>
     *
     * <code>string authn_info_provider_method_fullname = 3 [json_name = "authnInfoProviderMethodFullname"];</code>
     */
    public fun clearAuthnInfoProviderMethodFullname() {
      _builder.clearAuthnInfoProviderMethodFullname()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor.copy(block: cosmos.base.reflection.v2alpha1.SigningModeDescriptorKt.Dsl.() -> kotlin.Unit): cosmos.base.reflection.v2alpha1.Reflection.SigningModeDescriptor =
  cosmos.base.reflection.v2alpha1.SigningModeDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

