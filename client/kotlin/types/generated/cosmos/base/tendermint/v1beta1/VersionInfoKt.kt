//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/base/tendermint/v1beta1/query.proto

package cosmos.base.tendermint.v1beta1;

@kotlin.jvm.JvmName("-initializeversionInfo")
public inline fun versionInfo(block: cosmos.base.tendermint.v1beta1.VersionInfoKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.VersionInfo =
  cosmos.base.tendermint.v1beta1.VersionInfoKt.Dsl._create(cosmos.base.tendermint.v1beta1.Query.VersionInfo.newBuilder()).apply { block() }._build()
public object VersionInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.tendermint.v1beta1.Query.VersionInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.tendermint.v1beta1.Query.VersionInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.base.tendermint.v1beta1.Query.VersionInfo = _builder.build()

    /**
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>string app_name = 2 [json_name = "appName"];</code>
     */
    public var appName: kotlin.String
      @JvmName("getAppName")
      get() = _builder.getAppName()
      @JvmName("setAppName")
      set(value) {
        _builder.setAppName(value)
      }
    /**
     * <code>string app_name = 2 [json_name = "appName"];</code>
     */
    public fun clearAppName() {
      _builder.clearAppName()
    }

    /**
     * <code>string version = 3 [json_name = "version"];</code>
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <code>string version = 3 [json_name = "version"];</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * <code>string git_commit = 4 [json_name = "gitCommit"];</code>
     */
    public var gitCommit: kotlin.String
      @JvmName("getGitCommit")
      get() = _builder.getGitCommit()
      @JvmName("setGitCommit")
      set(value) {
        _builder.setGitCommit(value)
      }
    /**
     * <code>string git_commit = 4 [json_name = "gitCommit"];</code>
     */
    public fun clearGitCommit() {
      _builder.clearGitCommit()
    }

    /**
     * <code>string build_tags = 5 [json_name = "buildTags"];</code>
     */
    public var buildTags: kotlin.String
      @JvmName("getBuildTags")
      get() = _builder.getBuildTags()
      @JvmName("setBuildTags")
      set(value) {
        _builder.setBuildTags(value)
      }
    /**
     * <code>string build_tags = 5 [json_name = "buildTags"];</code>
     */
    public fun clearBuildTags() {
      _builder.clearBuildTags()
    }

    /**
     * <code>string go_version = 6 [json_name = "goVersion"];</code>
     */
    public var goVersion: kotlin.String
      @JvmName("getGoVersion")
      get() = _builder.getGoVersion()
      @JvmName("setGoVersion")
      set(value) {
        _builder.setGoVersion(value)
      }
    /**
     * <code>string go_version = 6 [json_name = "goVersion"];</code>
     */
    public fun clearGoVersion() {
      _builder.clearGoVersion()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BuildDepsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     */
     public val buildDeps: com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBuildDepsList()
      )
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     * @param value The buildDeps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBuildDeps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.add(value: cosmos.base.tendermint.v1beta1.Query.Module) {
      _builder.addBuildDeps(value)
    }
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     * @param value The buildDeps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBuildDeps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.plusAssign(value: cosmos.base.tendermint.v1beta1.Query.Module) {
      add(value)
    }
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     * @param values The buildDeps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBuildDeps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.tendermint.v1beta1.Query.Module>) {
      _builder.addAllBuildDeps(values)
    }
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     * @param values The buildDeps to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBuildDeps")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.tendermint.v1beta1.Query.Module>) {
      addAll(values)
    }
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     * @param index The index to set the value at.
     * @param value The buildDeps to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBuildDeps")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.set(index: kotlin.Int, value: cosmos.base.tendermint.v1beta1.Query.Module) {
      _builder.setBuildDeps(index, value)
    }
    /**
     * <code>repeated .cosmos.base.tendermint.v1beta1.Module build_deps = 7 [json_name = "buildDeps"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBuildDeps")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.tendermint.v1beta1.Query.Module, BuildDepsProxy>.clear() {
      _builder.clearBuildDeps()
    }


    /**
     * <pre>
     * Since: cosmos-sdk 0.43
     * </pre>
     *
     * <code>string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion"];</code>
     */
    public var cosmosSdkVersion: kotlin.String
      @JvmName("getCosmosSdkVersion")
      get() = _builder.getCosmosSdkVersion()
      @JvmName("setCosmosSdkVersion")
      set(value) {
        _builder.setCosmosSdkVersion(value)
      }
    /**
     * <pre>
     * Since: cosmos-sdk 0.43
     * </pre>
     *
     * <code>string cosmos_sdk_version = 8 [json_name = "cosmosSdkVersion"];</code>
     */
    public fun clearCosmosSdkVersion() {
      _builder.clearCosmosSdkVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.tendermint.v1beta1.Query.VersionInfo.copy(block: cosmos.base.tendermint.v1beta1.VersionInfoKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.VersionInfo =
  cosmos.base.tendermint.v1beta1.VersionInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

