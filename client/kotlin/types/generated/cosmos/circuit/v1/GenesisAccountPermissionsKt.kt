//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/circuit/v1/types.proto

package cosmos.circuit.v1;

@kotlin.jvm.JvmName("-initializegenesisAccountPermissions")
public inline fun genesisAccountPermissions(block: cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Types.GenesisAccountPermissions =
  cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl._create(cosmos.circuit.v1.Types.GenesisAccountPermissions.newBuilder()).apply { block() }._build()
public object GenesisAccountPermissionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.circuit.v1.Types.GenesisAccountPermissions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.circuit.v1.Types.GenesisAccountPermissions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.circuit.v1.Types.GenesisAccountPermissions = _builder.build()

    /**
     * <code>string address = 1 [json_name = "address"];</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <code>string address = 1 [json_name = "address"];</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <code>.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];</code>
     */
    public var permissions: cosmos.circuit.v1.Types.Permissions
      @JvmName("getPermissions")
      get() = _builder.getPermissions()
      @JvmName("setPermissions")
      set(value) {
        _builder.setPermissions(value)
      }
    /**
     * <code>.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];</code>
     */
    public fun clearPermissions() {
      _builder.clearPermissions()
    }
    /**
     * <code>.cosmos.circuit.v1.Permissions permissions = 2 [json_name = "permissions"];</code>
     * @return Whether the permissions field is set.
     */
    public fun hasPermissions(): kotlin.Boolean {
      return _builder.hasPermissions()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.circuit.v1.Types.GenesisAccountPermissions.copy(block: cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Types.GenesisAccountPermissions =
  cosmos.circuit.v1.GenesisAccountPermissionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.circuit.v1.Types.GenesisAccountPermissionsOrBuilder.permissionsOrNull: cosmos.circuit.v1.Types.Permissions?
  get() = if (hasPermissions()) getPermissions() else null

