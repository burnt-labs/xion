//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/circuit/v1/tx.proto

package cosmos.circuit.v1;

@kotlin.jvm.JvmName("-initializemsgTripCircuitBreakerResponse")
public inline fun msgTripCircuitBreakerResponse(block: cosmos.circuit.v1.MsgTripCircuitBreakerResponseKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse =
  cosmos.circuit.v1.MsgTripCircuitBreakerResponseKt.Dsl._create(cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse.newBuilder()).apply { block() }._build()
public object MsgTripCircuitBreakerResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse = _builder.build()

    /**
     * <code>bool success = 1 [json_name = "success"];</code>
     */
    public var success: kotlin.Boolean
      @JvmName("getSuccess")
      get() = _builder.getSuccess()
      @JvmName("setSuccess")
      set(value) {
        _builder.setSuccess(value)
      }
    /**
     * <code>bool success = 1 [json_name = "success"];</code>
     */
    public fun clearSuccess() {
      _builder.clearSuccess()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse.copy(block: cosmos.circuit.v1.MsgTripCircuitBreakerResponseKt.Dsl.() -> kotlin.Unit): cosmos.circuit.v1.Tx.MsgTripCircuitBreakerResponse =
  cosmos.circuit.v1.MsgTripCircuitBreakerResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

