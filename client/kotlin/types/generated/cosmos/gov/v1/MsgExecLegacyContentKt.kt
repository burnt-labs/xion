//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/gov/v1/tx.proto

package cosmos.gov.v1;

@kotlin.jvm.JvmName("-initializemsgExecLegacyContent")
public inline fun msgExecLegacyContent(block: cosmos.gov.v1.MsgExecLegacyContentKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.Tx.MsgExecLegacyContent =
  cosmos.gov.v1.MsgExecLegacyContentKt.Dsl._create(cosmos.gov.v1.Tx.MsgExecLegacyContent.newBuilder()).apply { block() }._build()
public object MsgExecLegacyContentKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.gov.v1.Tx.MsgExecLegacyContent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.gov.v1.Tx.MsgExecLegacyContent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.gov.v1.Tx.MsgExecLegacyContent = _builder.build()

    /**
     * <pre>
     * content is the proposal's content.
     * </pre>
     *
     * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
     */
    public var content: com.google.protobuf.Any
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * <pre>
     * content is the proposal's content.
     * </pre>
     *
     * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
     */
    public fun clearContent() {
      _builder.clearContent()
    }
    /**
     * <pre>
     * content is the proposal's content.
     * </pre>
     *
     * <code>.google.protobuf.Any content = 1 [json_name = "content", (.cosmos_proto.accepts_interface) = "cosmos.gov.v1beta1.Content"];</code>
     * @return Whether the content field is set.
     */
    public fun hasContent(): kotlin.Boolean {
      return _builder.hasContent()
    }

    /**
     * <pre>
     * authority must be the gov module address.
     * </pre>
     *
     * <code>string authority = 2 [json_name = "authority"];</code>
     */
    public var authority: kotlin.String
      @JvmName("getAuthority")
      get() = _builder.getAuthority()
      @JvmName("setAuthority")
      set(value) {
        _builder.setAuthority(value)
      }
    /**
     * <pre>
     * authority must be the gov module address.
     * </pre>
     *
     * <code>string authority = 2 [json_name = "authority"];</code>
     */
    public fun clearAuthority() {
      _builder.clearAuthority()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.gov.v1.Tx.MsgExecLegacyContent.copy(block: cosmos.gov.v1.MsgExecLegacyContentKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.Tx.MsgExecLegacyContent =
  cosmos.gov.v1.MsgExecLegacyContentKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.gov.v1.Tx.MsgExecLegacyContentOrBuilder.contentOrNull: com.google.protobuf.Any?
  get() = if (hasContent()) getContent() else null

