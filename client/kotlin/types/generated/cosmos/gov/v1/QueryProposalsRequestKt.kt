//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/gov/v1/query.proto

package cosmos.gov.v1;

@kotlin.jvm.JvmName("-initializequeryProposalsRequest")
public inline fun queryProposalsRequest(block: cosmos.gov.v1.QueryProposalsRequestKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest =
  cosmos.gov.v1.QueryProposalsRequestKt.Dsl._create(cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest.newBuilder()).apply { block() }._build()
public object QueryProposalsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest = _builder.build()

    /**
     * <pre>
     * proposal_status defines the status of the proposals.
     * </pre>
     *
     * <code>.cosmos.gov.v1.ProposalStatus proposal_status = 1 [json_name = "proposalStatus"];</code>
     */
    public var proposalStatus: cosmos.gov.v1.Gov.ProposalStatus
      @JvmName("getProposalStatus")
      get() = _builder.getProposalStatus()
      @JvmName("setProposalStatus")
      set(value) {
        _builder.setProposalStatus(value)
      }
    /**
     * <pre>
     * proposal_status defines the status of the proposals.
     * </pre>
     *
     * <code>.cosmos.gov.v1.ProposalStatus proposal_status = 1 [json_name = "proposalStatus"];</code>
     */
    public fun clearProposalStatus() {
      _builder.clearProposalStatus()
    }

    /**
     * <pre>
     * voter defines the voter address for the proposals.
     * </pre>
     *
     * <code>string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var voter: kotlin.String
      @JvmName("getVoter")
      get() = _builder.getVoter()
      @JvmName("setVoter")
      set(value) {
        _builder.setVoter(value)
      }
    /**
     * <pre>
     * voter defines the voter address for the proposals.
     * </pre>
     *
     * <code>string voter = 2 [json_name = "voter", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearVoter() {
      _builder.clearVoter()
    }

    /**
     * <pre>
     * depositor defines the deposit addresses from the proposals.
     * </pre>
     *
     * <code>string depositor = 3 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var depositor: kotlin.String
      @JvmName("getDepositor")
      get() = _builder.getDepositor()
      @JvmName("setDepositor")
      set(value) {
        _builder.setDepositor(value)
      }
    /**
     * <pre>
     * depositor defines the deposit addresses from the proposals.
     * </pre>
     *
     * <code>string depositor = 3 [json_name = "depositor", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearDepositor() {
      _builder.clearDepositor()
    }

    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];</code>
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.getPagination()
      @JvmName("setPagination")
      set(value) {
        _builder.setPagination(value)
      }
    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];</code>
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * <pre>
     * pagination defines an optional pagination for the request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 4 [json_name = "pagination"];</code>
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest.copy(block: cosmos.gov.v1.QueryProposalsRequestKt.Dsl.() -> kotlin.Unit): cosmos.gov.v1.QueryOuterClass.QueryProposalsRequest =
  cosmos.gov.v1.QueryProposalsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.gov.v1.QueryOuterClass.QueryProposalsRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

