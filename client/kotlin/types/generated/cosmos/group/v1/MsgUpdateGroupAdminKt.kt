//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/group/v1/tx.proto

package cosmos.group.v1;

@kotlin.jvm.JvmName("-initializemsgUpdateGroupAdmin")
public inline fun msgUpdateGroupAdmin(block: cosmos.group.v1.MsgUpdateGroupAdminKt.Dsl.() -> kotlin.Unit): cosmos.group.v1.Tx.MsgUpdateGroupAdmin =
  cosmos.group.v1.MsgUpdateGroupAdminKt.Dsl._create(cosmos.group.v1.Tx.MsgUpdateGroupAdmin.newBuilder()).apply { block() }._build()
public object MsgUpdateGroupAdminKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.group.v1.Tx.MsgUpdateGroupAdmin.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.group.v1.Tx.MsgUpdateGroupAdmin.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.group.v1.Tx.MsgUpdateGroupAdmin = _builder.build()

    /**
     * <pre>
     * admin is the current account address of the group admin.
     * </pre>
     *
     * <code>string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var admin: kotlin.String
      @JvmName("getAdmin")
      get() = _builder.getAdmin()
      @JvmName("setAdmin")
      set(value) {
        _builder.setAdmin(value)
      }
    /**
     * <pre>
     * admin is the current account address of the group admin.
     * </pre>
     *
     * <code>string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearAdmin() {
      _builder.clearAdmin()
    }

    /**
     * <pre>
     * group_id is the unique ID of the group.
     * </pre>
     *
     * <code>uint64 group_id = 2 [json_name = "groupId"];</code>
     */
    public var groupId: kotlin.Long
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <pre>
     * group_id is the unique ID of the group.
     * </pre>
     *
     * <code>uint64 group_id = 2 [json_name = "groupId"];</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }

    /**
     * <pre>
     * new_admin is the group new admin account address.
     * </pre>
     *
     * <code>string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var newAdmin: kotlin.String
      @JvmName("getNewAdmin")
      get() = _builder.getNewAdmin()
      @JvmName("setNewAdmin")
      set(value) {
        _builder.setNewAdmin(value)
      }
    /**
     * <pre>
     * new_admin is the group new admin account address.
     * </pre>
     *
     * <code>string new_admin = 3 [json_name = "newAdmin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearNewAdmin() {
      _builder.clearNewAdmin()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.group.v1.Tx.MsgUpdateGroupAdmin.copy(block: cosmos.group.v1.MsgUpdateGroupAdminKt.Dsl.() -> kotlin.Unit): cosmos.group.v1.Tx.MsgUpdateGroupAdmin =
  cosmos.group.v1.MsgUpdateGroupAdminKt.Dsl._create(this.toBuilder()).apply { block() }._build()

