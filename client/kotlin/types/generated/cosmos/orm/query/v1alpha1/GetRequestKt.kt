//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/orm/query/v1alpha1/query.proto

package cosmos.orm.query.v1alpha1;

@kotlin.jvm.JvmName("-initializegetRequest")
public inline fun getRequest(block: cosmos.orm.query.v1alpha1.GetRequestKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest =
  cosmos.orm.query.v1alpha1.GetRequestKt.Dsl._create(cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest.newBuilder()).apply { block() }._build()
public object GetRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest = _builder.build()

    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     */
    public var messageName: kotlin.String
      @JvmName("getMessageName")
      get() = _builder.getMessageName()
      @JvmName("setMessageName")
      set(value) {
        _builder.setMessageName(value)
      }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     */
    public fun clearMessageName() {
      _builder.clearMessageName()
    }

    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     */
    public var index: kotlin.String
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed. If it is non-empty, it must
     * refer to an unique index.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
     public val values: com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getValuesList()
      )
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     * @param value The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addValues")
    public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.add(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
      _builder.addValues(value)
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     * @param value The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignValues")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.plusAssign(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
      add(value)
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     * @param values The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllValues")
    public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.addAll(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
      _builder.addAllValues(values)
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     * @param values The values to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllValues")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
      addAll(values)
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     * @param index The index to set the value at.
     * @param value The values to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setValues")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.set(index: kotlin.Int, value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
      _builder.setValues(index, value)
    }
    /**
     * <pre>
     * values are the values of the fields corresponding to the requested index.
     * There must be as many values provided as there are fields in the index and
     * these values must correspond to the index field types.
     * </pre>
     *
     * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 3 [json_name = "values"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearValues")
    public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.clear() {
      _builder.clearValues()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest.copy(block: cosmos.orm.query.v1alpha1.GetRequestKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.GetRequest =
  cosmos.orm.query.v1alpha1.GetRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

