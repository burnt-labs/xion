//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/orm/query/v1alpha1/query.proto

package cosmos.orm.query.v1alpha1;

@kotlin.jvm.JvmName("-initializelistRequest")
public inline fun listRequest(block: cosmos.orm.query.v1alpha1.ListRequestKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest =
  cosmos.orm.query.v1alpha1.ListRequestKt.Dsl._create(cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.newBuilder()).apply { block() }._build()
public object ListRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest = _builder.build()

    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     */
    public var messageName: kotlin.String
      @JvmName("getMessageName")
      get() = _builder.getMessageName()
      @JvmName("setMessageName")
      set(value) {
        _builder.setMessageName(value)
      }
    /**
     * <pre>
     * message_name is the fully-qualified message name of the ORM table being queried.
     * </pre>
     *
     * <code>string message_name = 1 [json_name = "messageName"];</code>
     */
    public fun clearMessageName() {
      _builder.clearMessageName()
    }

    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     */
    public var index: kotlin.String
      @JvmName("getIndex")
      get() = _builder.getIndex()
      @JvmName("setIndex")
      set(value) {
        _builder.setIndex(value)
      }
    /**
     * <pre>
     * index is the index fields expression used in orm definitions. If it
     * is empty, the table's primary key is assumed.
     * </pre>
     *
     * <code>string index = 2 [json_name = "index"];</code>
     */
    public fun clearIndex() {
      _builder.clearIndex()
    }

    /**
     * <pre>
     * prefix defines a prefix query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Prefix prefix = 3 [json_name = "prefix"];</code>
     */
    public var prefix: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix
      @JvmName("getPrefix")
      get() = _builder.getPrefix()
      @JvmName("setPrefix")
      set(value) {
        _builder.setPrefix(value)
      }
    /**
     * <pre>
     * prefix defines a prefix query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Prefix prefix = 3 [json_name = "prefix"];</code>
     */
    public fun clearPrefix() {
      _builder.clearPrefix()
    }
    /**
     * <pre>
     * prefix defines a prefix query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Prefix prefix = 3 [json_name = "prefix"];</code>
     * @return Whether the prefix field is set.
     */
    public fun hasPrefix(): kotlin.Boolean {
      return _builder.hasPrefix()
    }

    /**
     * <pre>
     * range defines a range query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Range range = 4 [json_name = "range"];</code>
     */
    public var range: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range
      @JvmName("getRange")
      get() = _builder.getRange()
      @JvmName("setRange")
      set(value) {
        _builder.setRange(value)
      }
    /**
     * <pre>
     * range defines a range query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Range range = 4 [json_name = "range"];</code>
     */
    public fun clearRange() {
      _builder.clearRange()
    }
    /**
     * <pre>
     * range defines a range query.
     * </pre>
     *
     * <code>.cosmos.orm.query.v1alpha1.ListRequest.Range range = 4 [json_name = "range"];</code>
     * @return Whether the range field is set.
     */
    public fun hasRange(): kotlin.Boolean {
      return _builder.hasRange()
    }

    /**
     * <pre>
     * pagination is the pagination request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 5 [json_name = "pagination"];</code>
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.getPagination()
      @JvmName("setPagination")
      set(value) {
        _builder.setPagination(value)
      }
    /**
     * <pre>
     * pagination is the pagination request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 5 [json_name = "pagination"];</code>
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * <pre>
     * pagination is the pagination request.
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 5 [json_name = "pagination"];</code>
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }
    public val queryCase: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.QueryCase
      @JvmName("getQueryCase")
      get() = _builder.getQueryCase()

    public fun clearQuery() {
      _builder.clearQuery()
    }
  }
  @kotlin.jvm.JvmName("-initializeprefix")
  public inline fun prefix(block: cosmos.orm.query.v1alpha1.ListRequestKt.PrefixKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix =
    cosmos.orm.query.v1alpha1.ListRequestKt.PrefixKt.Dsl._create(cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix.newBuilder()).apply { block() }._build()
  public object PrefixKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ValuesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       */
       public val values: com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getValuesList()
        )
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addValues")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.add(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.addValues(value)
      }
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       * @param value The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.plusAssign(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        add(value)
      }
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllValues")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.addAll(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        _builder.addAllValues(values)
      }
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       * @param values The values to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllValues")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        addAll(values)
      }
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       * @param index The index to set the value at.
       * @param value The values to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setValues")
      public operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.set(index: kotlin.Int, value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.setValues(index, value)
      }
      /**
       * <pre>
       * values specifies the index values for the prefix query.
       * It is valid to special a partial prefix with fewer values than
       * the number of fields in the index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue values = 1 [json_name = "values"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearValues")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, ValuesProxy>.clear() {
        _builder.clearValues()
      }

    }
  }
  @kotlin.jvm.JvmName("-initializerange")
  public inline fun range(block: cosmos.orm.query.v1alpha1.ListRequestKt.RangeKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range =
    cosmos.orm.query.v1alpha1.ListRequestKt.RangeKt.Dsl._create(cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range.newBuilder()).apply { block() }._build()
  public object RangeKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class StartProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       */
       public val start: com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getStartList()
        )
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       * @param value The start to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addStart")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.add(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.addStart(value)
      }
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       * @param value The start to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignStart")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.plusAssign(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        add(value)
      }
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       * @param values The start to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllStart")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.addAll(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        _builder.addAllStart(values)
      }
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       * @param values The start to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllStart")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        addAll(values)
      }
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       * @param index The index to set the value at.
       * @param value The start to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setStart")
      public operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.set(index: kotlin.Int, value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.setStart(index, value)
      }
      /**
       * <pre>
       * start specifies the starting index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue start = 1 [json_name = "start"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearStart")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, StartProxy>.clear() {
        _builder.clearStart()
      }


      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class EndProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       */
       public val end: com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getEndList()
        )
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       * @param value The end to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addEnd")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.add(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.addEnd(value)
      }
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       * @param value The end to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignEnd")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.plusAssign(value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        add(value)
      }
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       * @param values The end to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllEnd")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.addAll(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        _builder.addAllEnd(values)
      }
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       * @param values The end to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllEnd")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue>) {
        addAll(values)
      }
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       * @param index The index to set the value at.
       * @param value The end to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setEnd")
      public operator fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.set(index: kotlin.Int, value: cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue) {
        _builder.setEnd(index, value)
      }
      /**
       * <pre>
       * end specifies the inclusive ending index values for the range query.
       * It is valid to provide fewer values than the number of fields in the
       * index.
       * </pre>
       *
       * <code>repeated .cosmos.orm.query.v1alpha1.IndexValue end = 2 [json_name = "end"];</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearEnd")
      public fun com.google.protobuf.kotlin.DslList<cosmos.orm.query.v1alpha1.QueryOuterClass.IndexValue, EndProxy>.clear() {
        _builder.clearEnd()
      }

    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.copy(block: cosmos.orm.query.v1alpha1.ListRequestKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest =
  cosmos.orm.query.v1alpha1.ListRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix.copy(block: cosmos.orm.query.v1alpha1.ListRequestKt.PrefixKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix =
  cosmos.orm.query.v1alpha1.ListRequestKt.PrefixKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range.copy(block: cosmos.orm.query.v1alpha1.ListRequestKt.RangeKt.Dsl.() -> kotlin.Unit): cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range =
  cosmos.orm.query.v1alpha1.ListRequestKt.RangeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequestOrBuilder.prefixOrNull: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Prefix?
  get() = if (hasPrefix()) getPrefix() else null

public val cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequestOrBuilder.rangeOrNull: cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequest.Range?
  get() = if (hasRange()) getRange() else null

public val cosmos.orm.query.v1alpha1.QueryOuterClass.ListRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

