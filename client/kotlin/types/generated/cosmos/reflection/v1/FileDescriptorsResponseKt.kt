//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/reflection/v1/reflection.proto

package cosmos.reflection.v1;

@kotlin.jvm.JvmName("-initializefileDescriptorsResponse")
public inline fun fileDescriptorsResponse(block: cosmos.reflection.v1.FileDescriptorsResponseKt.Dsl.() -> kotlin.Unit): cosmos.reflection.v1.Reflection.FileDescriptorsResponse =
  cosmos.reflection.v1.FileDescriptorsResponseKt.Dsl._create(cosmos.reflection.v1.Reflection.FileDescriptorsResponse.newBuilder()).apply { block() }._build()
public object FileDescriptorsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.reflection.v1.Reflection.FileDescriptorsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.reflection.v1.Reflection.FileDescriptorsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.reflection.v1.Reflection.FileDescriptorsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FilesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     */
     public val files: com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFilesList()
      )
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     * @param value The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFiles")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.add(value: com.google.protobuf.DescriptorProtos.FileDescriptorProto) {
      _builder.addFiles(value)
    }
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     * @param value The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.plusAssign(value: com.google.protobuf.DescriptorProtos.FileDescriptorProto) {
      add(value)
    }
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     * @param values The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFiles")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.DescriptorProtos.FileDescriptorProto>) {
      _builder.addAllFiles(values)
    }
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     * @param values The files to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFiles")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.DescriptorProtos.FileDescriptorProto>) {
      addAll(values)
    }
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     * @param index The index to set the value at.
     * @param value The files to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFiles")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.set(index: kotlin.Int, value: com.google.protobuf.DescriptorProtos.FileDescriptorProto) {
      _builder.setFiles(index, value)
    }
    /**
     * <pre>
     * files is the file descriptors.
     * </pre>
     *
     * <code>repeated .google.protobuf.FileDescriptorProto files = 1 [json_name = "files"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFiles")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.FileDescriptorProto, FilesProxy>.clear() {
      _builder.clearFiles()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.reflection.v1.Reflection.FileDescriptorsResponse.copy(block: cosmos.reflection.v1.FileDescriptorsResponseKt.Dsl.() -> kotlin.Unit): cosmos.reflection.v1.Reflection.FileDescriptorsResponse =
  cosmos.reflection.v1.FileDescriptorsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

