//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/store/snapshots/v1/snapshot.proto

package cosmos.store.snapshots.v1;

@kotlin.jvm.JvmName("-initializesnapshotExtensionPayload")
public inline fun snapshotExtensionPayload(block: cosmos.store.snapshots.v1.SnapshotExtensionPayloadKt.Dsl.() -> kotlin.Unit): cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload =
  cosmos.store.snapshots.v1.SnapshotExtensionPayloadKt.Dsl._create(cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload.newBuilder()).apply { block() }._build()
public object SnapshotExtensionPayloadKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload = _builder.build()

    /**
     * <code>bytes payload = 1 [json_name = "payload"];</code>
     */
    public var payload: com.google.protobuf.ByteString
      @JvmName("getPayload")
      get() = _builder.getPayload()
      @JvmName("setPayload")
      set(value) {
        _builder.setPayload(value)
      }
    /**
     * <code>bytes payload = 1 [json_name = "payload"];</code>
     */
    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload.copy(block: cosmos.store.snapshots.v1.SnapshotExtensionPayloadKt.Dsl.() -> kotlin.Unit): cosmos.store.snapshots.v1.SnapshotOuterClass.SnapshotExtensionPayload =
  cosmos.store.snapshots.v1.SnapshotExtensionPayloadKt.Dsl._create(this.toBuilder()).apply { block() }._build()

