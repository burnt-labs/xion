//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/store/streaming/abci/grpc.proto

package cosmos.store.streaming.abci;

@kotlin.jvm.JvmName("-initializelistenCommitResponse")
public inline fun listenCommitResponse(block: cosmos.store.streaming.abci.ListenCommitResponseKt.Dsl.() -> kotlin.Unit): cosmos.store.streaming.abci.Grpc.ListenCommitResponse =
  cosmos.store.streaming.abci.ListenCommitResponseKt.Dsl._create(cosmos.store.streaming.abci.Grpc.ListenCommitResponse.newBuilder()).apply { block() }._build()
public object ListenCommitResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.store.streaming.abci.Grpc.ListenCommitResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.store.streaming.abci.Grpc.ListenCommitResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.store.streaming.abci.Grpc.ListenCommitResponse = _builder.build()
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.store.streaming.abci.Grpc.ListenCommitResponse.copy(block: cosmos.store.streaming.abci.ListenCommitResponseKt.Dsl.() -> kotlin.Unit): cosmos.store.streaming.abci.Grpc.ListenCommitResponse =
  cosmos.store.streaming.abci.ListenCommitResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

