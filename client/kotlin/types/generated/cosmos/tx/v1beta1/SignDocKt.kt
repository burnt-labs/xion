//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/tx/v1beta1/tx.proto

package cosmos.tx.v1beta1;

@kotlin.jvm.JvmName("-initializesignDoc")
public inline fun signDoc(block: cosmos.tx.v1beta1.SignDocKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.SignDoc =
  cosmos.tx.v1beta1.SignDocKt.Dsl._create(cosmos.tx.v1beta1.TxOuterClass.SignDoc.newBuilder()).apply { block() }._build()
public object SignDocKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.tx.v1beta1.TxOuterClass.SignDoc.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.tx.v1beta1.TxOuterClass.SignDoc.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.tx.v1beta1.TxOuterClass.SignDoc = _builder.build()

    /**
     * <pre>
     * body_bytes is protobuf serialization of a TxBody that matches the
     * representation in TxRaw.
     * </pre>
     *
     * <code>bytes body_bytes = 1 [json_name = "bodyBytes"];</code>
     */
    public var bodyBytes: com.google.protobuf.ByteString
      @JvmName("getBodyBytes")
      get() = _builder.getBodyBytes()
      @JvmName("setBodyBytes")
      set(value) {
        _builder.setBodyBytes(value)
      }
    /**
     * <pre>
     * body_bytes is protobuf serialization of a TxBody that matches the
     * representation in TxRaw.
     * </pre>
     *
     * <code>bytes body_bytes = 1 [json_name = "bodyBytes"];</code>
     */
    public fun clearBodyBytes() {
      _builder.clearBodyBytes()
    }

    /**
     * <pre>
     * auth_info_bytes is a protobuf serialization of an AuthInfo that matches the
     * representation in TxRaw.
     * </pre>
     *
     * <code>bytes auth_info_bytes = 2 [json_name = "authInfoBytes"];</code>
     */
    public var authInfoBytes: com.google.protobuf.ByteString
      @JvmName("getAuthInfoBytes")
      get() = _builder.getAuthInfoBytes()
      @JvmName("setAuthInfoBytes")
      set(value) {
        _builder.setAuthInfoBytes(value)
      }
    /**
     * <pre>
     * auth_info_bytes is a protobuf serialization of an AuthInfo that matches the
     * representation in TxRaw.
     * </pre>
     *
     * <code>bytes auth_info_bytes = 2 [json_name = "authInfoBytes"];</code>
     */
    public fun clearAuthInfoBytes() {
      _builder.clearAuthInfoBytes()
    }

    /**
     * <pre>
     * chain_id is the unique identifier of the chain this transaction targets.
     * It prevents signed transactions from being used on another chain by an
     * attacker
     * </pre>
     *
     * <code>string chain_id = 3 [json_name = "chainId"];</code>
     */
    public var chainId: kotlin.String
      @JvmName("getChainId")
      get() = _builder.getChainId()
      @JvmName("setChainId")
      set(value) {
        _builder.setChainId(value)
      }
    /**
     * <pre>
     * chain_id is the unique identifier of the chain this transaction targets.
     * It prevents signed transactions from being used on another chain by an
     * attacker
     * </pre>
     *
     * <code>string chain_id = 3 [json_name = "chainId"];</code>
     */
    public fun clearChainId() {
      _builder.clearChainId()
    }

    /**
     * <pre>
     * account_number is the account number of the account in state
     * </pre>
     *
     * <code>uint64 account_number = 4 [json_name = "accountNumber"];</code>
     */
    public var accountNumber: kotlin.Long
      @JvmName("getAccountNumber")
      get() = _builder.getAccountNumber()
      @JvmName("setAccountNumber")
      set(value) {
        _builder.setAccountNumber(value)
      }
    /**
     * <pre>
     * account_number is the account number of the account in state
     * </pre>
     *
     * <code>uint64 account_number = 4 [json_name = "accountNumber"];</code>
     */
    public fun clearAccountNumber() {
      _builder.clearAccountNumber()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.tx.v1beta1.TxOuterClass.SignDoc.copy(block: cosmos.tx.v1beta1.SignDocKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.TxOuterClass.SignDoc =
  cosmos.tx.v1beta1.SignDocKt.Dsl._create(this.toBuilder()).apply { block() }._build()

