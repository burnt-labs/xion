//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/tx/v1beta1/service.proto

package cosmos.tx.v1beta1;

@kotlin.jvm.JvmName("-initializetxDecodeAminoRequest")
public inline fun txDecodeAminoRequest(block: cosmos.tx.v1beta1.TxDecodeAminoRequestKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest =
  cosmos.tx.v1beta1.TxDecodeAminoRequestKt.Dsl._create(cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest.newBuilder()).apply { block() }._build()
public object TxDecodeAminoRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest = _builder.build()

    /**
     * <code>bytes amino_binary = 1 [json_name = "aminoBinary"];</code>
     */
    public var aminoBinary: com.google.protobuf.ByteString
      @JvmName("getAminoBinary")
      get() = _builder.getAminoBinary()
      @JvmName("setAminoBinary")
      set(value) {
        _builder.setAminoBinary(value)
      }
    /**
     * <code>bytes amino_binary = 1 [json_name = "aminoBinary"];</code>
     */
    public fun clearAminoBinary() {
      _builder.clearAminoBinary()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest.copy(block: cosmos.tx.v1beta1.TxDecodeAminoRequestKt.Dsl.() -> kotlin.Unit): cosmos.tx.v1beta1.ServiceOuterClass.TxDecodeAminoRequest =
  cosmos.tx.v1beta1.TxDecodeAminoRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

