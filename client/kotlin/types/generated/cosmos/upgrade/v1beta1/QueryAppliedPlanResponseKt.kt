//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/upgrade/v1beta1/query.proto

package cosmos.upgrade.v1beta1;

@kotlin.jvm.JvmName("-initializequeryAppliedPlanResponse")
public inline fun queryAppliedPlanResponse(block: cosmos.upgrade.v1beta1.QueryAppliedPlanResponseKt.Dsl.() -> kotlin.Unit): cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse =
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponseKt.Dsl._create(cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse.newBuilder()).apply { block() }._build()
public object QueryAppliedPlanResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse = _builder.build()

    /**
     * <pre>
     * height is the block height at which the plan was applied.
     * </pre>
     *
     * <code>int64 height = 1 [json_name = "height"];</code>
     */
    public var height: kotlin.Long
      @JvmName("getHeight")
      get() = _builder.getHeight()
      @JvmName("setHeight")
      set(value) {
        _builder.setHeight(value)
      }
    /**
     * <pre>
     * height is the block height at which the plan was applied.
     * </pre>
     *
     * <code>int64 height = 1 [json_name = "height"];</code>
     */
    public fun clearHeight() {
      _builder.clearHeight()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse.copy(block: cosmos.upgrade.v1beta1.QueryAppliedPlanResponseKt.Dsl.() -> kotlin.Unit): cosmos.upgrade.v1beta1.QueryOuterClass.QueryAppliedPlanResponse =
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

