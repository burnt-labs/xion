//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos_proto/cosmos.proto

package cosmos_proto;

@kotlin.jvm.JvmName("-initializeinterfaceDescriptor")
public inline fun interfaceDescriptor(block: cosmos_proto.InterfaceDescriptorKt.Dsl.() -> kotlin.Unit): cosmos_proto.Cosmos.InterfaceDescriptor =
  cosmos_proto.InterfaceDescriptorKt.Dsl._create(cosmos_proto.Cosmos.InterfaceDescriptor.newBuilder()).apply { block() }._build()
public object InterfaceDescriptorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos_proto.Cosmos.InterfaceDescriptor.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos_proto.Cosmos.InterfaceDescriptor.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos_proto.Cosmos.InterfaceDescriptor = _builder.build()

    /**
     * <pre>
     * name is the name of the interface. It should be a short-name (without
     * a period) such that the fully qualified name of the interface will be
     * package.name, ex. for the package a.b and interface named C, the
     * fully-qualified name will be a.b.C.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <pre>
     * name is the name of the interface. It should be a short-name (without
     * a period) such that the fully qualified name of the interface will be
     * package.name, ex. for the package a.b and interface named C, the
     * fully-qualified name will be a.b.C.
     * </pre>
     *
     * <code>string name = 1 [json_name = "name"];</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <pre>
     * description is a human-readable description of the interface and its
     * purpose.
     * </pre>
     *
     * <code>string description = 2 [json_name = "description"];</code>
     */
    public var description: kotlin.String
      @JvmName("getDescription")
      get() = _builder.getDescription()
      @JvmName("setDescription")
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * <pre>
     * description is a human-readable description of the interface and its
     * purpose.
     * </pre>
     *
     * <code>string description = 2 [json_name = "description"];</code>
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos_proto.Cosmos.InterfaceDescriptor.copy(block: cosmos_proto.InterfaceDescriptorKt.Dsl.() -> kotlin.Unit): cosmos_proto.Cosmos.InterfaceDescriptor =
  cosmos_proto.InterfaceDescriptorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

