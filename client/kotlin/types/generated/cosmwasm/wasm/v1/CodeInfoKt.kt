//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/types.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializecodeInfo")
public inline fun codeInfo(block: cosmwasm.wasm.v1.CodeInfoKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Types.CodeInfo =
  cosmwasm.wasm.v1.CodeInfoKt.Dsl._create(cosmwasm.wasm.v1.Types.CodeInfo.newBuilder()).apply { block() }._build()
public object CodeInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Types.CodeInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Types.CodeInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Types.CodeInfo = _builder.build()

    /**
     * <pre>
     * CodeHash is the unique identifier created by wasmvm
     * </pre>
     *
     * <code>bytes code_hash = 1 [json_name = "codeHash"];</code>
     */
    public var codeHash: com.google.protobuf.ByteString
      @JvmName("getCodeHash")
      get() = _builder.getCodeHash()
      @JvmName("setCodeHash")
      set(value) {
        _builder.setCodeHash(value)
      }
    /**
     * <pre>
     * CodeHash is the unique identifier created by wasmvm
     * </pre>
     *
     * <code>bytes code_hash = 1 [json_name = "codeHash"];</code>
     */
    public fun clearCodeHash() {
      _builder.clearCodeHash()
    }

    /**
     * <pre>
     * Creator address who initially stored the code
     * </pre>
     *
     * <code>string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var creator: kotlin.String
      @JvmName("getCreator")
      get() = _builder.getCreator()
      @JvmName("setCreator")
      set(value) {
        _builder.setCreator(value)
      }
    /**
     * <pre>
     * Creator address who initially stored the code
     * </pre>
     *
     * <code>string creator = 2 [json_name = "creator", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearCreator() {
      _builder.clearCreator()
    }

    /**
     * <pre>
     * InstantiateConfig access control to apply on contract creation, optional
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_config = 5 [json_name = "instantiateConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public var instantiateConfig: cosmwasm.wasm.v1.Types.AccessConfig
      @JvmName("getInstantiateConfig")
      get() = _builder.getInstantiateConfig()
      @JvmName("setInstantiateConfig")
      set(value) {
        _builder.setInstantiateConfig(value)
      }
    /**
     * <pre>
     * InstantiateConfig access control to apply on contract creation, optional
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_config = 5 [json_name = "instantiateConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     */
    public fun clearInstantiateConfig() {
      _builder.clearInstantiateConfig()
    }
    /**
     * <pre>
     * InstantiateConfig access control to apply on contract creation, optional
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig instantiate_config = 5 [json_name = "instantiateConfig", (.gogoproto.nullable) = false, (.amino.dont_omitempty) = true];</code>
     * @return Whether the instantiateConfig field is set.
     */
    public fun hasInstantiateConfig(): kotlin.Boolean {
      return _builder.hasInstantiateConfig()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Types.CodeInfo.copy(block: cosmwasm.wasm.v1.CodeInfoKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Types.CodeInfo =
  cosmwasm.wasm.v1.CodeInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmwasm.wasm.v1.Types.CodeInfoOrBuilder.instantiateConfigOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
  get() = if (hasInstantiateConfig()) getInstantiateConfig() else null

