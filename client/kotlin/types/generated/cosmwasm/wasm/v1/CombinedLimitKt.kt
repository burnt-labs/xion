//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/authz.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializecombinedLimit")
public inline fun combinedLimit(block: cosmwasm.wasm.v1.CombinedLimitKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Authz.CombinedLimit =
  cosmwasm.wasm.v1.CombinedLimitKt.Dsl._create(cosmwasm.wasm.v1.Authz.CombinedLimit.newBuilder()).apply { block() }._build()
public object CombinedLimitKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Authz.CombinedLimit.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Authz.CombinedLimit.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Authz.CombinedLimit = _builder.build()

    /**
     * <pre>
     * Remaining number that is decremented on each execution
     * </pre>
     *
     * <code>uint64 calls_remaining = 1 [json_name = "callsRemaining"];</code>
     */
    public var callsRemaining: kotlin.Long
      @JvmName("getCallsRemaining")
      get() = _builder.getCallsRemaining()
      @JvmName("setCallsRemaining")
      set(value) {
        _builder.setCallsRemaining(value)
      }
    /**
     * <pre>
     * Remaining number that is decremented on each execution
     * </pre>
     *
     * <code>uint64 calls_remaining = 1 [json_name = "callsRemaining"];</code>
     */
    public fun clearCallsRemaining() {
      _builder.clearCallsRemaining()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AmountsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
     public val amounts: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAmountsList()
      )
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param value The amounts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAmounts")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.addAmounts(value)
    }
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param value The amounts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAmounts")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      add(value)
    }
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param values The amounts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAmounts")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      _builder.addAllAmounts(values)
    }
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param values The amounts to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAmounts")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      addAll(values)
    }
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param index The index to set the value at.
     * @param value The amounts to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAmounts")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.setAmounts(index, value)
    }
    /**
     * <pre>
     * Amounts is the maximal amount of tokens transferable to the contract.
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin amounts = 2 [json_name = "amounts", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAmounts")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, AmountsProxy>.clear() {
      _builder.clearAmounts()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Authz.CombinedLimit.copy(block: cosmwasm.wasm.v1.CombinedLimitKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Authz.CombinedLimit =
  cosmwasm.wasm.v1.CombinedLimitKt.Dsl._create(this.toBuilder()).apply { block() }._build()

