//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/tx.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializemsgExecuteContract")
public inline fun msgExecuteContract(block: cosmwasm.wasm.v1.MsgExecuteContractKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Tx.MsgExecuteContract =
  cosmwasm.wasm.v1.MsgExecuteContractKt.Dsl._create(cosmwasm.wasm.v1.Tx.MsgExecuteContract.newBuilder()).apply { block() }._build()
public object MsgExecuteContractKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Tx.MsgExecuteContract.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Tx.MsgExecuteContract.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Tx.MsgExecuteContract = _builder.build()

    /**
     * <pre>
     * Sender is the that actor that signed the messages
     * </pre>
     *
     * <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.getSender()
      @JvmName("setSender")
      set(value) {
        _builder.setSender(value)
      }
    /**
     * <pre>
     * Sender is the that actor that signed the messages
     * </pre>
     *
     * <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * <pre>
     * Contract is the address of the smart contract
     * </pre>
     *
     * <code>string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var contract: kotlin.String
      @JvmName("getContract")
      get() = _builder.getContract()
      @JvmName("setContract")
      set(value) {
        _builder.setContract(value)
      }
    /**
     * <pre>
     * Contract is the address of the smart contract
     * </pre>
     *
     * <code>string contract = 2 [json_name = "contract", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearContract() {
      _builder.clearContract()
    }

    /**
     * <pre>
     * Msg json encoded message to be passed to the contract
     * </pre>
     *
     * <code>bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     */
    public var msg: com.google.protobuf.ByteString
      @JvmName("getMsg")
      get() = _builder.getMsg()
      @JvmName("setMsg")
      set(value) {
        _builder.setMsg(value)
      }
    /**
     * <pre>
     * Msg json encoded message to be passed to the contract
     * </pre>
     *
     * <code>bytes msg = 3 [json_name = "msg", (.gogoproto.casttype) = "RawContractMessage", (.amino.encoding) = "inline_json"];</code>
     */
    public fun clearMsg() {
      _builder.clearMsg()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FundsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
     public val funds: com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFundsList()
      )
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param value The funds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.add(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.addFunds(value)
    }
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param value The funds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFunds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.plusAssign(value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      add(value)
    }
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param values The funds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.addAll(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      _builder.addAllFunds(values)
    }
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param values The funds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFunds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.plusAssign(values: kotlin.collections.Iterable<cosmos.base.v1beta1.CoinOuterClass.Coin>) {
      addAll(values)
    }
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     * @param index The index to set the value at.
     * @param value The funds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFunds")
    public operator fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.set(index: kotlin.Int, value: cosmos.base.v1beta1.CoinOuterClass.Coin) {
      _builder.setFunds(index, value)
    }
    /**
     * <pre>
     * Funds coins that are transferred to the contract on execution
     * </pre>
     *
     * <code>repeated .cosmos.base.v1beta1.Coin funds = 5 [json_name = "funds", (.gogoproto.nullable) = false, (.gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (.amino.encoding) = "legacy_coins", (.amino.dont_omitempty) = true];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFunds")
    public fun com.google.protobuf.kotlin.DslList<cosmos.base.v1beta1.CoinOuterClass.Coin, FundsProxy>.clear() {
      _builder.clearFunds()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Tx.MsgExecuteContract.copy(block: cosmwasm.wasm.v1.MsgExecuteContractKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Tx.MsgExecuteContract =
  cosmwasm.wasm.v1.MsgExecuteContractKt.Dsl._create(this.toBuilder()).apply { block() }._build()

