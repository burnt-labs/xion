//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/tx.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializemsgUpdateInstantiateConfig")
public inline fun msgUpdateInstantiateConfig(block: cosmwasm.wasm.v1.MsgUpdateInstantiateConfigKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig =
  cosmwasm.wasm.v1.MsgUpdateInstantiateConfigKt.Dsl._create(cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig.newBuilder()).apply { block() }._build()
public object MsgUpdateInstantiateConfigKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig = _builder.build()

    /**
     * <pre>
     * Sender is the that actor that signed the messages
     * </pre>
     *
     * <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var sender: kotlin.String
      @JvmName("getSender")
      get() = _builder.getSender()
      @JvmName("setSender")
      set(value) {
        _builder.setSender(value)
      }
    /**
     * <pre>
     * Sender is the that actor that signed the messages
     * </pre>
     *
     * <code>string sender = 1 [json_name = "sender", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearSender() {
      _builder.clearSender()
    }

    /**
     * <pre>
     * CodeID references the stored WASM code
     * </pre>
     *
     * <code>uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];</code>
     */
    public var codeId: kotlin.Long
      @JvmName("getCodeId")
      get() = _builder.getCodeId()
      @JvmName("setCodeId")
      set(value) {
        _builder.setCodeId(value)
      }
    /**
     * <pre>
     * CodeID references the stored WASM code
     * </pre>
     *
     * <code>uint64 code_id = 2 [json_name = "codeId", (.gogoproto.customname) = "CodeID"];</code>
     */
    public fun clearCodeId() {
      _builder.clearCodeId()
    }

    /**
     * <pre>
     * NewInstantiatePermission is the new access control
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];</code>
     */
    public var newInstantiatePermission: cosmwasm.wasm.v1.Types.AccessConfig
      @JvmName("getNewInstantiatePermission")
      get() = _builder.getNewInstantiatePermission()
      @JvmName("setNewInstantiatePermission")
      set(value) {
        _builder.setNewInstantiatePermission(value)
      }
    /**
     * <pre>
     * NewInstantiatePermission is the new access control
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];</code>
     */
    public fun clearNewInstantiatePermission() {
      _builder.clearNewInstantiatePermission()
    }
    /**
     * <pre>
     * NewInstantiatePermission is the new access control
     * </pre>
     *
     * <code>.cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3 [json_name = "newInstantiatePermission"];</code>
     * @return Whether the newInstantiatePermission field is set.
     */
    public fun hasNewInstantiatePermission(): kotlin.Boolean {
      return _builder.hasNewInstantiatePermission()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig.copy(block: cosmwasm.wasm.v1.MsgUpdateInstantiateConfigKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfig =
  cosmwasm.wasm.v1.MsgUpdateInstantiateConfigKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val cosmwasm.wasm.v1.Tx.MsgUpdateInstantiateConfigOrBuilder.newInstantiatePermissionOrNull: cosmwasm.wasm.v1.Types.AccessConfig?
  get() = if (hasNewInstantiatePermission()) getNewInstantiatePermission() else null

