//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmwasm/wasm/v1/query.proto

package cosmwasm.wasm.v1;

@kotlin.jvm.JvmName("-initializequeryBuildAddressRequest")
public inline fun queryBuildAddressRequest(block: cosmwasm.wasm.v1.QueryBuildAddressRequestKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest =
  cosmwasm.wasm.v1.QueryBuildAddressRequestKt.Dsl._create(cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest.newBuilder()).apply { block() }._build()
public object QueryBuildAddressRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest = _builder.build()

    /**
     * <pre>
     * CodeHash is the hash of the code
     * </pre>
     *
     * <code>string code_hash = 1 [json_name = "codeHash"];</code>
     */
    public var codeHash: kotlin.String
      @JvmName("getCodeHash")
      get() = _builder.getCodeHash()
      @JvmName("setCodeHash")
      set(value) {
        _builder.setCodeHash(value)
      }
    /**
     * <pre>
     * CodeHash is the hash of the code
     * </pre>
     *
     * <code>string code_hash = 1 [json_name = "codeHash"];</code>
     */
    public fun clearCodeHash() {
      _builder.clearCodeHash()
    }

    /**
     * <pre>
     * CreatorAddress is the address of the contract instantiator
     * </pre>
     *
     * <code>string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var creatorAddress: kotlin.String
      @JvmName("getCreatorAddress")
      get() = _builder.getCreatorAddress()
      @JvmName("setCreatorAddress")
      set(value) {
        _builder.setCreatorAddress(value)
      }
    /**
     * <pre>
     * CreatorAddress is the address of the contract instantiator
     * </pre>
     *
     * <code>string creator_address = 2 [json_name = "creatorAddress", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearCreatorAddress() {
      _builder.clearCreatorAddress()
    }

    /**
     * <pre>
     * Salt is a hex encoded salt
     * </pre>
     *
     * <code>string salt = 3 [json_name = "salt"];</code>
     */
    public var salt: kotlin.String
      @JvmName("getSalt")
      get() = _builder.getSalt()
      @JvmName("setSalt")
      set(value) {
        _builder.setSalt(value)
      }
    /**
     * <pre>
     * Salt is a hex encoded salt
     * </pre>
     *
     * <code>string salt = 3 [json_name = "salt"];</code>
     */
    public fun clearSalt() {
      _builder.clearSalt()
    }

    /**
     * <pre>
     * InitArgs are optional json encoded init args to be used in contract address
     * building if provided
     * </pre>
     *
     * <code>bytes init_args = 4 [json_name = "initArgs"];</code>
     */
    public var initArgs: com.google.protobuf.ByteString
      @JvmName("getInitArgs")
      get() = _builder.getInitArgs()
      @JvmName("setInitArgs")
      set(value) {
        _builder.setInitArgs(value)
      }
    /**
     * <pre>
     * InitArgs are optional json encoded init args to be used in contract address
     * building if provided
     * </pre>
     *
     * <code>bytes init_args = 4 [json_name = "initArgs"];</code>
     */
    public fun clearInitArgs() {
      _builder.clearInitArgs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest.copy(block: cosmwasm.wasm.v1.QueryBuildAddressRequestKt.Dsl.() -> kotlin.Unit): cosmwasm.wasm.v1.QueryOuterClass.QueryBuildAddressRequest =
  cosmwasm.wasm.v1.QueryBuildAddressRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

