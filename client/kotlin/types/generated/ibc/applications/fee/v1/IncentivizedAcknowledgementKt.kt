//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/fee/v1/ack.proto

package ibc.applications.fee.v1;

@kotlin.jvm.JvmName("-initializeincentivizedAcknowledgement")
public inline fun incentivizedAcknowledgement(block: ibc.applications.fee.v1.IncentivizedAcknowledgementKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement =
  ibc.applications.fee.v1.IncentivizedAcknowledgementKt.Dsl._create(ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement.newBuilder()).apply { block() }._build()
public object IncentivizedAcknowledgementKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement = _builder.build()

    /**
     * <pre>
     * the underlying app acknowledgement bytes
     * </pre>
     *
     * <code>bytes app_acknowledgement = 1 [json_name = "appAcknowledgement"];</code>
     */
    public var appAcknowledgement: com.google.protobuf.ByteString
      @JvmName("getAppAcknowledgement")
      get() = _builder.getAppAcknowledgement()
      @JvmName("setAppAcknowledgement")
      set(value) {
        _builder.setAppAcknowledgement(value)
      }
    /**
     * <pre>
     * the underlying app acknowledgement bytes
     * </pre>
     *
     * <code>bytes app_acknowledgement = 1 [json_name = "appAcknowledgement"];</code>
     */
    public fun clearAppAcknowledgement() {
      _builder.clearAppAcknowledgement()
    }

    /**
     * <pre>
     * the relayer address which submits the recv packet message
     * </pre>
     *
     * <code>string forward_relayer_address = 2 [json_name = "forwardRelayerAddress"];</code>
     */
    public var forwardRelayerAddress: kotlin.String
      @JvmName("getForwardRelayerAddress")
      get() = _builder.getForwardRelayerAddress()
      @JvmName("setForwardRelayerAddress")
      set(value) {
        _builder.setForwardRelayerAddress(value)
      }
    /**
     * <pre>
     * the relayer address which submits the recv packet message
     * </pre>
     *
     * <code>string forward_relayer_address = 2 [json_name = "forwardRelayerAddress"];</code>
     */
    public fun clearForwardRelayerAddress() {
      _builder.clearForwardRelayerAddress()
    }

    /**
     * <pre>
     * success flag of the base application callback
     * </pre>
     *
     * <code>bool underlying_app_success = 3 [json_name = "underlyingAppSuccess"];</code>
     */
    public var underlyingAppSuccess: kotlin.Boolean
      @JvmName("getUnderlyingAppSuccess")
      get() = _builder.getUnderlyingAppSuccess()
      @JvmName("setUnderlyingAppSuccess")
      set(value) {
        _builder.setUnderlyingAppSuccess(value)
      }
    /**
     * <pre>
     * success flag of the base application callback
     * </pre>
     *
     * <code>bool underlying_app_success = 3 [json_name = "underlyingAppSuccess"];</code>
     */
    public fun clearUnderlyingAppSuccess() {
      _builder.clearUnderlyingAppSuccess()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement.copy(block: ibc.applications.fee.v1.IncentivizedAcknowledgementKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.Ack.IncentivizedAcknowledgement =
  ibc.applications.fee.v1.IncentivizedAcknowledgementKt.Dsl._create(this.toBuilder()).apply { block() }._build()

