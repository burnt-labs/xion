//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/fee/v1/metadata.proto

package ibc.applications.fee.v1;

@kotlin.jvm.JvmName("-initializemetadata")
public inline fun metadata(block: ibc.applications.fee.v1.MetadataKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.MetadataOuterClass.Metadata =
  ibc.applications.fee.v1.MetadataKt.Dsl._create(ibc.applications.fee.v1.MetadataOuterClass.Metadata.newBuilder()).apply { block() }._build()
public object MetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.fee.v1.MetadataOuterClass.Metadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.fee.v1.MetadataOuterClass.Metadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.fee.v1.MetadataOuterClass.Metadata = _builder.build()

    /**
     * <pre>
     * fee_version defines the ICS29 fee version
     * </pre>
     *
     * <code>string fee_version = 1 [json_name = "feeVersion"];</code>
     */
    public var feeVersion: kotlin.String
      @JvmName("getFeeVersion")
      get() = _builder.getFeeVersion()
      @JvmName("setFeeVersion")
      set(value) {
        _builder.setFeeVersion(value)
      }
    /**
     * <pre>
     * fee_version defines the ICS29 fee version
     * </pre>
     *
     * <code>string fee_version = 1 [json_name = "feeVersion"];</code>
     */
    public fun clearFeeVersion() {
      _builder.clearFeeVersion()
    }

    /**
     * <pre>
     * app_version defines the underlying application version, which may or may not be a JSON encoded bytestring
     * </pre>
     *
     * <code>string app_version = 2 [json_name = "appVersion"];</code>
     */
    public var appVersion: kotlin.String
      @JvmName("getAppVersion")
      get() = _builder.getAppVersion()
      @JvmName("setAppVersion")
      set(value) {
        _builder.setAppVersion(value)
      }
    /**
     * <pre>
     * app_version defines the underlying application version, which may or may not be a JSON encoded bytestring
     * </pre>
     *
     * <code>string app_version = 2 [json_name = "appVersion"];</code>
     */
    public fun clearAppVersion() {
      _builder.clearAppVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.fee.v1.MetadataOuterClass.Metadata.copy(block: ibc.applications.fee.v1.MetadataKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.MetadataOuterClass.Metadata =
  ibc.applications.fee.v1.MetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

