//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/fee/v1/query.proto

package ibc.applications.fee.v1;

@kotlin.jvm.JvmName("-initializequeryTotalAckFeesRequest")
public inline fun queryTotalAckFeesRequest(block: ibc.applications.fee.v1.QueryTotalAckFeesRequestKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest =
  ibc.applications.fee.v1.QueryTotalAckFeesRequestKt.Dsl._create(ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest.newBuilder()).apply { block() }._build()
public object QueryTotalAckFeesRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest = _builder.build()

    /**
     * <pre>
     * the packet identifier for the associated fees
     * </pre>
     *
     * <code>.ibc.core.channel.v1.PacketId packet_id = 1 [json_name = "packetId", (.gogoproto.nullable) = false];</code>
     */
    public var packetId: ibc.core.channel.v1.ChannelOuterClass.PacketId
      @JvmName("getPacketId")
      get() = _builder.getPacketId()
      @JvmName("setPacketId")
      set(value) {
        _builder.setPacketId(value)
      }
    /**
     * <pre>
     * the packet identifier for the associated fees
     * </pre>
     *
     * <code>.ibc.core.channel.v1.PacketId packet_id = 1 [json_name = "packetId", (.gogoproto.nullable) = false];</code>
     */
    public fun clearPacketId() {
      _builder.clearPacketId()
    }
    /**
     * <pre>
     * the packet identifier for the associated fees
     * </pre>
     *
     * <code>.ibc.core.channel.v1.PacketId packet_id = 1 [json_name = "packetId", (.gogoproto.nullable) = false];</code>
     * @return Whether the packetId field is set.
     */
    public fun hasPacketId(): kotlin.Boolean {
      return _builder.hasPacketId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest.copy(block: ibc.applications.fee.v1.QueryTotalAckFeesRequestKt.Dsl.() -> kotlin.Unit): ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequest =
  ibc.applications.fee.v1.QueryTotalAckFeesRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.applications.fee.v1.QueryOuterClass.QueryTotalAckFeesRequestOrBuilder.packetIdOrNull: ibc.core.channel.v1.ChannelOuterClass.PacketId?
  get() = if (hasPacketId()) getPacketId() else null

