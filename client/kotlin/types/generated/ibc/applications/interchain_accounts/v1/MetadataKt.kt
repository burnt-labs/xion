//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/interchain_accounts/v1/metadata.proto

package ibc.applications.interchain_accounts.v1;

@kotlin.jvm.JvmName("-initializemetadata")
public inline fun metadata(block: ibc.applications.interchain_accounts.v1.MetadataKt.Dsl.() -> kotlin.Unit): ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata =
  ibc.applications.interchain_accounts.v1.MetadataKt.Dsl._create(ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata.newBuilder()).apply { block() }._build()
public object MetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata = _builder.build()

    /**
     * <pre>
     * version defines the ICS27 protocol version
     * </pre>
     *
     * <code>string version = 1 [json_name = "version"];</code>
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.getVersion()
      @JvmName("setVersion")
      set(value) {
        _builder.setVersion(value)
      }
    /**
     * <pre>
     * version defines the ICS27 protocol version
     * </pre>
     *
     * <code>string version = 1 [json_name = "version"];</code>
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }

    /**
     * <pre>
     * controller_connection_id is the connection identifier associated with the controller chain
     * </pre>
     *
     * <code>string controller_connection_id = 2 [json_name = "controllerConnectionId"];</code>
     */
    public var controllerConnectionId: kotlin.String
      @JvmName("getControllerConnectionId")
      get() = _builder.getControllerConnectionId()
      @JvmName("setControllerConnectionId")
      set(value) {
        _builder.setControllerConnectionId(value)
      }
    /**
     * <pre>
     * controller_connection_id is the connection identifier associated with the controller chain
     * </pre>
     *
     * <code>string controller_connection_id = 2 [json_name = "controllerConnectionId"];</code>
     */
    public fun clearControllerConnectionId() {
      _builder.clearControllerConnectionId()
    }

    /**
     * <pre>
     * host_connection_id is the connection identifier associated with the host chain
     * </pre>
     *
     * <code>string host_connection_id = 3 [json_name = "hostConnectionId"];</code>
     */
    public var hostConnectionId: kotlin.String
      @JvmName("getHostConnectionId")
      get() = _builder.getHostConnectionId()
      @JvmName("setHostConnectionId")
      set(value) {
        _builder.setHostConnectionId(value)
      }
    /**
     * <pre>
     * host_connection_id is the connection identifier associated with the host chain
     * </pre>
     *
     * <code>string host_connection_id = 3 [json_name = "hostConnectionId"];</code>
     */
    public fun clearHostConnectionId() {
      _builder.clearHostConnectionId()
    }

    /**
     * <pre>
     * address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     * NOTE: the address field is empty on the OnChanOpenInit handshake step
     * </pre>
     *
     * <code>string address = 4 [json_name = "address"];</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * address defines the interchain account address to be fulfilled upon the OnChanOpenTry handshake step
     * NOTE: the address field is empty on the OnChanOpenInit handshake step
     * </pre>
     *
     * <code>string address = 4 [json_name = "address"];</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * encoding defines the supported codec format
     * </pre>
     *
     * <code>string encoding = 5 [json_name = "encoding"];</code>
     */
    public var encoding: kotlin.String
      @JvmName("getEncoding")
      get() = _builder.getEncoding()
      @JvmName("setEncoding")
      set(value) {
        _builder.setEncoding(value)
      }
    /**
     * <pre>
     * encoding defines the supported codec format
     * </pre>
     *
     * <code>string encoding = 5 [json_name = "encoding"];</code>
     */
    public fun clearEncoding() {
      _builder.clearEncoding()
    }

    /**
     * <pre>
     * tx_type defines the type of transactions the interchain account can execute
     * </pre>
     *
     * <code>string tx_type = 6 [json_name = "txType"];</code>
     */
    public var txType: kotlin.String
      @JvmName("getTxType")
      get() = _builder.getTxType()
      @JvmName("setTxType")
      set(value) {
        _builder.setTxType(value)
      }
    /**
     * <pre>
     * tx_type defines the type of transactions the interchain account can execute
     * </pre>
     *
     * <code>string tx_type = 6 [json_name = "txType"];</code>
     */
    public fun clearTxType() {
      _builder.clearTxType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata.copy(block: ibc.applications.interchain_accounts.v1.MetadataKt.Dsl.() -> kotlin.Unit): ibc.applications.interchain_accounts.v1.MetadataOuterClass.Metadata =
  ibc.applications.interchain_accounts.v1.MetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

