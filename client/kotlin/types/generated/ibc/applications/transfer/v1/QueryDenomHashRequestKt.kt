//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/transfer/v1/query.proto

package ibc.applications.transfer.v1;

@kotlin.jvm.JvmName("-initializequeryDenomHashRequest")
public inline fun queryDenomHashRequest(block: ibc.applications.transfer.v1.QueryDenomHashRequestKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest =
  ibc.applications.transfer.v1.QueryDenomHashRequestKt.Dsl._create(ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest.newBuilder()).apply { block() }._build()
public object QueryDenomHashRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest = _builder.build()

    /**
     * <pre>
     * The denomination trace ([port_id]/[channel_id])+/[denom]
     * </pre>
     *
     * <code>string trace = 1 [json_name = "trace"];</code>
     */
    public var trace: kotlin.String
      @JvmName("getTrace")
      get() = _builder.getTrace()
      @JvmName("setTrace")
      set(value) {
        _builder.setTrace(value)
      }
    /**
     * <pre>
     * The denomination trace ([port_id]/[channel_id])+/[denom]
     * </pre>
     *
     * <code>string trace = 1 [json_name = "trace"];</code>
     */
    public fun clearTrace() {
      _builder.clearTrace()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest.copy(block: ibc.applications.transfer.v1.QueryDenomHashRequestKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.QueryOuterClass.QueryDenomHashRequest =
  ibc.applications.transfer.v1.QueryDenomHashRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

