//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/applications/transfer/v1/authz.proto

package ibc.applications.transfer.v1;

@kotlin.jvm.JvmName("-initializetransferAuthorization")
public inline fun transferAuthorization(block: ibc.applications.transfer.v1.TransferAuthorizationKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Authz.TransferAuthorization =
  ibc.applications.transfer.v1.TransferAuthorizationKt.Dsl._create(ibc.applications.transfer.v1.Authz.TransferAuthorization.newBuilder()).apply { block() }._build()
public object TransferAuthorizationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.applications.transfer.v1.Authz.TransferAuthorization.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.applications.transfer.v1.Authz.TransferAuthorization.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.applications.transfer.v1.Authz.TransferAuthorization = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class AllocationsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     */
     public val allocations: com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getAllocationsList()
      )
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     * @param value The allocations to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllocations")
    public fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.add(value: ibc.applications.transfer.v1.Authz.Allocation) {
      _builder.addAllocations(value)
    }
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     * @param value The allocations to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllocations")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.plusAssign(value: ibc.applications.transfer.v1.Authz.Allocation) {
      add(value)
    }
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     * @param values The allocations to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllAllocations")
    public fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.addAll(values: kotlin.collections.Iterable<ibc.applications.transfer.v1.Authz.Allocation>) {
      _builder.addAllAllocations(values)
    }
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     * @param values The allocations to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllAllocations")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.plusAssign(values: kotlin.collections.Iterable<ibc.applications.transfer.v1.Authz.Allocation>) {
      addAll(values)
    }
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     * @param index The index to set the value at.
     * @param value The allocations to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setAllocations")
    public operator fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.set(index: kotlin.Int, value: ibc.applications.transfer.v1.Authz.Allocation) {
      _builder.setAllocations(index, value)
    }
    /**
     * <pre>
     * port and channel amounts
     * </pre>
     *
     * <code>repeated .ibc.applications.transfer.v1.Allocation allocations = 1 [json_name = "allocations", (.gogoproto.nullable) = false];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearAllocations")
    public fun com.google.protobuf.kotlin.DslList<ibc.applications.transfer.v1.Authz.Allocation, AllocationsProxy>.clear() {
      _builder.clearAllocations()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.applications.transfer.v1.Authz.TransferAuthorization.copy(block: ibc.applications.transfer.v1.TransferAuthorizationKt.Dsl.() -> kotlin.Unit): ibc.applications.transfer.v1.Authz.TransferAuthorization =
  ibc.applications.transfer.v1.TransferAuthorizationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

