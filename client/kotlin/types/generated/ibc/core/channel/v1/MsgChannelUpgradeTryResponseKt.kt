//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/core/channel/v1/tx.proto

package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializemsgChannelUpgradeTryResponse")
public inline fun msgChannelUpgradeTryResponse(block: ibc.core.channel.v1.MsgChannelUpgradeTryResponseKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse =
  ibc.core.channel.v1.MsgChannelUpgradeTryResponseKt.Dsl._create(ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse.newBuilder()).apply { block() }._build()
public object MsgChannelUpgradeTryResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse = _builder.build()

    /**
     * <code>.ibc.core.channel.v1.Upgrade upgrade = 1 [json_name = "upgrade", (.gogoproto.nullable) = false];</code>
     */
    public var upgrade: ibc.core.channel.v1.UpgradeOuterClass.Upgrade
      @JvmName("getUpgrade")
      get() = _builder.getUpgrade()
      @JvmName("setUpgrade")
      set(value) {
        _builder.setUpgrade(value)
      }
    /**
     * <code>.ibc.core.channel.v1.Upgrade upgrade = 1 [json_name = "upgrade", (.gogoproto.nullable) = false];</code>
     */
    public fun clearUpgrade() {
      _builder.clearUpgrade()
    }
    /**
     * <code>.ibc.core.channel.v1.Upgrade upgrade = 1 [json_name = "upgrade", (.gogoproto.nullable) = false];</code>
     * @return Whether the upgrade field is set.
     */
    public fun hasUpgrade(): kotlin.Boolean {
      return _builder.hasUpgrade()
    }

    /**
     * <code>uint64 upgrade_sequence = 2 [json_name = "upgradeSequence"];</code>
     */
    public var upgradeSequence: kotlin.Long
      @JvmName("getUpgradeSequence")
      get() = _builder.getUpgradeSequence()
      @JvmName("setUpgradeSequence")
      set(value) {
        _builder.setUpgradeSequence(value)
      }
    /**
     * <code>uint64 upgrade_sequence = 2 [json_name = "upgradeSequence"];</code>
     */
    public fun clearUpgradeSequence() {
      _builder.clearUpgradeSequence()
    }

    /**
     * <code>.ibc.core.channel.v1.ResponseResultType result = 3 [json_name = "result"];</code>
     */
    public var result: ibc.core.channel.v1.Tx.ResponseResultType
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * <code>.ibc.core.channel.v1.ResponseResultType result = 3 [json_name = "result"];</code>
     */
    public fun clearResult() {
      _builder.clearResult()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse.copy(block: ibc.core.channel.v1.MsgChannelUpgradeTryResponseKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponse =
  ibc.core.channel.v1.MsgChannelUpgradeTryResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.channel.v1.Tx.MsgChannelUpgradeTryResponseOrBuilder.upgradeOrNull: ibc.core.channel.v1.UpgradeOuterClass.Upgrade?
  get() = if (hasUpgrade()) getUpgrade() else null

