//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/core/channel/v1/channel.proto

package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializeparams")
public inline fun params(block: ibc.core.channel.v1.ParamsKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.ChannelOuterClass.Params =
  ibc.core.channel.v1.ParamsKt.Dsl._create(ibc.core.channel.v1.ChannelOuterClass.Params.newBuilder()).apply { block() }._build()
public object ParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.ChannelOuterClass.Params.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.ChannelOuterClass.Params.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.ChannelOuterClass.Params = _builder.build()

    /**
     * <pre>
     * the relative timeout after which channel upgrades will time out.
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Timeout upgrade_timeout = 1 [json_name = "upgradeTimeout", (.gogoproto.nullable) = false];</code>
     */
    public var upgradeTimeout: ibc.core.channel.v1.ChannelOuterClass.Timeout
      @JvmName("getUpgradeTimeout")
      get() = _builder.getUpgradeTimeout()
      @JvmName("setUpgradeTimeout")
      set(value) {
        _builder.setUpgradeTimeout(value)
      }
    /**
     * <pre>
     * the relative timeout after which channel upgrades will time out.
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Timeout upgrade_timeout = 1 [json_name = "upgradeTimeout", (.gogoproto.nullable) = false];</code>
     */
    public fun clearUpgradeTimeout() {
      _builder.clearUpgradeTimeout()
    }
    /**
     * <pre>
     * the relative timeout after which channel upgrades will time out.
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Timeout upgrade_timeout = 1 [json_name = "upgradeTimeout", (.gogoproto.nullable) = false];</code>
     * @return Whether the upgradeTimeout field is set.
     */
    public fun hasUpgradeTimeout(): kotlin.Boolean {
      return _builder.hasUpgradeTimeout()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.ChannelOuterClass.Params.copy(block: ibc.core.channel.v1.ParamsKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.ChannelOuterClass.Params =
  ibc.core.channel.v1.ParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.channel.v1.ChannelOuterClass.ParamsOrBuilder.upgradeTimeoutOrNull: ibc.core.channel.v1.ChannelOuterClass.Timeout?
  get() = if (hasUpgradeTimeout()) getUpgradeTimeout() else null

