//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/core/channel/v1/query.proto

package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializequeryChannelResponse")
public inline fun queryChannelResponse(block: ibc.core.channel.v1.QueryChannelResponseKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse =
  ibc.core.channel.v1.QueryChannelResponseKt.Dsl._create(ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse.newBuilder()).apply { block() }._build()
public object QueryChannelResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse = _builder.build()

    /**
     * <pre>
     * channel associated with the request identifiers
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Channel channel = 1 [json_name = "channel"];</code>
     */
    public var channel: ibc.core.channel.v1.ChannelOuterClass.Channel
      @JvmName("getChannel")
      get() = _builder.getChannel()
      @JvmName("setChannel")
      set(value) {
        _builder.setChannel(value)
      }
    /**
     * <pre>
     * channel associated with the request identifiers
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Channel channel = 1 [json_name = "channel"];</code>
     */
    public fun clearChannel() {
      _builder.clearChannel()
    }
    /**
     * <pre>
     * channel associated with the request identifiers
     * </pre>
     *
     * <code>.ibc.core.channel.v1.Channel channel = 1 [json_name = "channel"];</code>
     * @return Whether the channel field is set.
     */
    public fun hasChannel(): kotlin.Boolean {
      return _builder.hasChannel()
    }

    /**
     * <pre>
     * merkle proof of existence
     * </pre>
     *
     * <code>bytes proof = 2 [json_name = "proof"];</code>
     */
    public var proof: com.google.protobuf.ByteString
      @JvmName("getProof")
      get() = _builder.getProof()
      @JvmName("setProof")
      set(value) {
        _builder.setProof(value)
      }
    /**
     * <pre>
     * merkle proof of existence
     * </pre>
     *
     * <code>bytes proof = 2 [json_name = "proof"];</code>
     */
    public fun clearProof() {
      _builder.clearProof()
    }

    /**
     * <pre>
     * height at which the proof was retrieved
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];</code>
     */
    public var proofHeight: ibc.core.client.v1.Client.Height
      @JvmName("getProofHeight")
      get() = _builder.getProofHeight()
      @JvmName("setProofHeight")
      set(value) {
        _builder.setProofHeight(value)
      }
    /**
     * <pre>
     * height at which the proof was retrieved
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];</code>
     */
    public fun clearProofHeight() {
      _builder.clearProofHeight()
    }
    /**
     * <pre>
     * height at which the proof was retrieved
     * </pre>
     *
     * <code>.ibc.core.client.v1.Height proof_height = 3 [json_name = "proofHeight", (.gogoproto.nullable) = false];</code>
     * @return Whether the proofHeight field is set.
     */
    public fun hasProofHeight(): kotlin.Boolean {
      return _builder.hasProofHeight()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse.copy(block: ibc.core.channel.v1.QueryChannelResponseKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryChannelResponse =
  ibc.core.channel.v1.QueryChannelResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.channel.v1.QueryOuterClass.QueryChannelResponseOrBuilder.channelOrNull: ibc.core.channel.v1.ChannelOuterClass.Channel?
  get() = if (hasChannel()) getChannel() else null

public val ibc.core.channel.v1.QueryOuterClass.QueryChannelResponseOrBuilder.proofHeightOrNull: ibc.core.client.v1.Client.Height?
  get() = if (hasProofHeight()) getProofHeight() else null

