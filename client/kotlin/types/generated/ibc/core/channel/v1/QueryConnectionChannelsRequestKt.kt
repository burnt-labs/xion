//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/core/channel/v1/query.proto

package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializequeryConnectionChannelsRequest")
public inline fun queryConnectionChannelsRequest(block: ibc.core.channel.v1.QueryConnectionChannelsRequestKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest =
  ibc.core.channel.v1.QueryConnectionChannelsRequestKt.Dsl._create(ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest.newBuilder()).apply { block() }._build()
public object QueryConnectionChannelsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest = _builder.build()

    /**
     * <pre>
     * connection unique identifier
     * </pre>
     *
     * <code>string connection = 1 [json_name = "connection"];</code>
     */
    public var connection: kotlin.String
      @JvmName("getConnection")
      get() = _builder.getConnection()
      @JvmName("setConnection")
      set(value) {
        _builder.setConnection(value)
      }
    /**
     * <pre>
     * connection unique identifier
     * </pre>
     *
     * <code>string connection = 1 [json_name = "connection"];</code>
     */
    public fun clearConnection() {
      _builder.clearConnection()
    }

    /**
     * <pre>
     * pagination request
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     */
    public var pagination: cosmos.base.query.v1beta1.Pagination.PageRequest
      @JvmName("getPagination")
      get() = _builder.getPagination()
      @JvmName("setPagination")
      set(value) {
        _builder.setPagination(value)
      }
    /**
     * <pre>
     * pagination request
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     */
    public fun clearPagination() {
      _builder.clearPagination()
    }
    /**
     * <pre>
     * pagination request
     * </pre>
     *
     * <code>.cosmos.base.query.v1beta1.PageRequest pagination = 2 [json_name = "pagination"];</code>
     * @return Whether the pagination field is set.
     */
    public fun hasPagination(): kotlin.Boolean {
      return _builder.hasPagination()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest.copy(block: ibc.core.channel.v1.QueryConnectionChannelsRequestKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequest =
  ibc.core.channel.v1.QueryConnectionChannelsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.channel.v1.QueryOuterClass.QueryConnectionChannelsRequestOrBuilder.paginationOrNull: cosmos.base.query.v1beta1.Pagination.PageRequest?
  get() = if (hasPagination()) getPagination() else null

