//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/core/channel/v1/upgrade.proto

package ibc.core.channel.v1;

@kotlin.jvm.JvmName("-initializeupgrade")
public inline fun upgrade(block: ibc.core.channel.v1.UpgradeKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.UpgradeOuterClass.Upgrade =
  ibc.core.channel.v1.UpgradeKt.Dsl._create(ibc.core.channel.v1.UpgradeOuterClass.Upgrade.newBuilder()).apply { block() }._build()
public object UpgradeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.core.channel.v1.UpgradeOuterClass.Upgrade.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.core.channel.v1.UpgradeOuterClass.Upgrade.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.core.channel.v1.UpgradeOuterClass.Upgrade = _builder.build()

    /**
     * <code>.ibc.core.channel.v1.UpgradeFields fields = 1 [json_name = "fields", (.gogoproto.nullable) = false];</code>
     */
    public var fields: ibc.core.channel.v1.UpgradeOuterClass.UpgradeFields
      @JvmName("getFields")
      get() = _builder.getFields()
      @JvmName("setFields")
      set(value) {
        _builder.setFields(value)
      }
    /**
     * <code>.ibc.core.channel.v1.UpgradeFields fields = 1 [json_name = "fields", (.gogoproto.nullable) = false];</code>
     */
    public fun clearFields() {
      _builder.clearFields()
    }
    /**
     * <code>.ibc.core.channel.v1.UpgradeFields fields = 1 [json_name = "fields", (.gogoproto.nullable) = false];</code>
     * @return Whether the fields field is set.
     */
    public fun hasFields(): kotlin.Boolean {
      return _builder.hasFields()
    }

    /**
     * <code>.ibc.core.channel.v1.Timeout timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
     */
    public var timeout: ibc.core.channel.v1.ChannelOuterClass.Timeout
      @JvmName("getTimeout")
      get() = _builder.getTimeout()
      @JvmName("setTimeout")
      set(value) {
        _builder.setTimeout(value)
      }
    /**
     * <code>.ibc.core.channel.v1.Timeout timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
     */
    public fun clearTimeout() {
      _builder.clearTimeout()
    }
    /**
     * <code>.ibc.core.channel.v1.Timeout timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false];</code>
     * @return Whether the timeout field is set.
     */
    public fun hasTimeout(): kotlin.Boolean {
      return _builder.hasTimeout()
    }

    /**
     * <code>uint64 next_sequence_send = 3 [json_name = "nextSequenceSend"];</code>
     */
    public var nextSequenceSend: kotlin.Long
      @JvmName("getNextSequenceSend")
      get() = _builder.getNextSequenceSend()
      @JvmName("setNextSequenceSend")
      set(value) {
        _builder.setNextSequenceSend(value)
      }
    /**
     * <code>uint64 next_sequence_send = 3 [json_name = "nextSequenceSend"];</code>
     */
    public fun clearNextSequenceSend() {
      _builder.clearNextSequenceSend()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.core.channel.v1.UpgradeOuterClass.Upgrade.copy(block: ibc.core.channel.v1.UpgradeKt.Dsl.() -> kotlin.Unit): ibc.core.channel.v1.UpgradeOuterClass.Upgrade =
  ibc.core.channel.v1.UpgradeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.core.channel.v1.UpgradeOuterClass.UpgradeOrBuilder.fieldsOrNull: ibc.core.channel.v1.UpgradeOuterClass.UpgradeFields?
  get() = if (hasFields()) getFields() else null

public val ibc.core.channel.v1.UpgradeOuterClass.UpgradeOrBuilder.timeoutOrNull: ibc.core.channel.v1.ChannelOuterClass.Timeout?
  get() = if (hasTimeout()) getTimeout() else null

