//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/lightclients/solomachine/v2/solomachine.proto

package ibc.lightclients.solomachine.v2;

@kotlin.jvm.JvmName("-initializenextSequenceRecvData")
public inline fun nextSequenceRecvData(block: ibc.lightclients.solomachine.v2.NextSequenceRecvDataKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData =
  ibc.lightclients.solomachine.v2.NextSequenceRecvDataKt.Dsl._create(ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData.newBuilder()).apply { block() }._build()
public object NextSequenceRecvDataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData = _builder.build()

    /**
     * <code>bytes path = 1 [json_name = "path"];</code>
     */
    public var path: com.google.protobuf.ByteString
      @JvmName("getPath")
      get() = _builder.getPath()
      @JvmName("setPath")
      set(value) {
        _builder.setPath(value)
      }
    /**
     * <code>bytes path = 1 [json_name = "path"];</code>
     */
    public fun clearPath() {
      _builder.clearPath()
    }

    /**
     * <code>uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];</code>
     */
    public var nextSeqRecv: kotlin.Long
      @JvmName("getNextSeqRecv")
      get() = _builder.getNextSeqRecv()
      @JvmName("setNextSeqRecv")
      set(value) {
        _builder.setNextSeqRecv(value)
      }
    /**
     * <code>uint64 next_seq_recv = 2 [json_name = "nextSeqRecv"];</code>
     */
    public fun clearNextSeqRecv() {
      _builder.clearNextSeqRecv()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData.copy(block: ibc.lightclients.solomachine.v2.NextSequenceRecvDataKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v2.Solomachine.NextSequenceRecvData =
  ibc.lightclients.solomachine.v2.NextSequenceRecvDataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

