//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: ibc/lightclients/solomachine/v3/solomachine.proto

package ibc.lightclients.solomachine.v3;

@kotlin.jvm.JvmName("-initializeheader")
public inline fun header(block: ibc.lightclients.solomachine.v3.HeaderKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v3.Solomachine.Header =
  ibc.lightclients.solomachine.v3.HeaderKt.Dsl._create(ibc.lightclients.solomachine.v3.Solomachine.Header.newBuilder()).apply { block() }._build()
public object HeaderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: ibc.lightclients.solomachine.v3.Solomachine.Header.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: ibc.lightclients.solomachine.v3.Solomachine.Header.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): ibc.lightclients.solomachine.v3.Solomachine.Header = _builder.build()

    /**
     * <code>uint64 timestamp = 1 [json_name = "timestamp"];</code>
     */
    public var timestamp: kotlin.Long
      @JvmName("getTimestamp")
      get() = _builder.getTimestamp()
      @JvmName("setTimestamp")
      set(value) {
        _builder.setTimestamp(value)
      }
    /**
     * <code>uint64 timestamp = 1 [json_name = "timestamp"];</code>
     */
    public fun clearTimestamp() {
      _builder.clearTimestamp()
    }

    /**
     * <code>bytes signature = 2 [json_name = "signature"];</code>
     */
    public var signature: com.google.protobuf.ByteString
      @JvmName("getSignature")
      get() = _builder.getSignature()
      @JvmName("setSignature")
      set(value) {
        _builder.setSignature(value)
      }
    /**
     * <code>bytes signature = 2 [json_name = "signature"];</code>
     */
    public fun clearSignature() {
      _builder.clearSignature()
    }

    /**
     * <code>.google.protobuf.Any new_public_key = 3 [json_name = "newPublicKey"];</code>
     */
    public var newPublicKey: com.google.protobuf.Any
      @JvmName("getNewPublicKey")
      get() = _builder.getNewPublicKey()
      @JvmName("setNewPublicKey")
      set(value) {
        _builder.setNewPublicKey(value)
      }
    /**
     * <code>.google.protobuf.Any new_public_key = 3 [json_name = "newPublicKey"];</code>
     */
    public fun clearNewPublicKey() {
      _builder.clearNewPublicKey()
    }
    /**
     * <code>.google.protobuf.Any new_public_key = 3 [json_name = "newPublicKey"];</code>
     * @return Whether the newPublicKey field is set.
     */
    public fun hasNewPublicKey(): kotlin.Boolean {
      return _builder.hasNewPublicKey()
    }

    /**
     * <code>string new_diversifier = 4 [json_name = "newDiversifier"];</code>
     */
    public var newDiversifier: kotlin.String
      @JvmName("getNewDiversifier")
      get() = _builder.getNewDiversifier()
      @JvmName("setNewDiversifier")
      set(value) {
        _builder.setNewDiversifier(value)
      }
    /**
     * <code>string new_diversifier = 4 [json_name = "newDiversifier"];</code>
     */
    public fun clearNewDiversifier() {
      _builder.clearNewDiversifier()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun ibc.lightclients.solomachine.v3.Solomachine.Header.copy(block: ibc.lightclients.solomachine.v3.HeaderKt.Dsl.() -> kotlin.Unit): ibc.lightclients.solomachine.v3.Solomachine.Header =
  ibc.lightclients.solomachine.v3.HeaderKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val ibc.lightclients.solomachine.v3.Solomachine.HeaderOrBuilder.newPublicKeyOrNull: com.google.protobuf.Any?
  get() = if (hasNewPublicKey()) getNewPublicKey() else null

