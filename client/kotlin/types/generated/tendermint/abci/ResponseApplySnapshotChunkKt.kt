//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/abci/types.proto

package tendermint.abci;

@kotlin.jvm.JvmName("-initializeresponseApplySnapshotChunk")
public inline fun responseApplySnapshotChunk(block: tendermint.abci.ResponseApplySnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ResponseApplySnapshotChunk =
  tendermint.abci.ResponseApplySnapshotChunkKt.Dsl._create(tendermint.abci.Types.ResponseApplySnapshotChunk.newBuilder()).apply { block() }._build()
public object ResponseApplySnapshotChunkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.ResponseApplySnapshotChunk.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.ResponseApplySnapshotChunk.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.ResponseApplySnapshotChunk = _builder.build()

    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     */
    public var result: tendermint.abci.Types.ResponseApplySnapshotChunk.Result
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * <code>.tendermint.abci.ResponseApplySnapshotChunk.Result result = 1 [json_name = "result"];</code>
     */
    public fun clearResult() {
      _builder.clearResult()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RefetchChunksProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     */
     public val refetchChunks: com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRefetchChunksList()
      )
    /**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param value The refetchChunks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRefetchChunks")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.add(value: kotlin.Int) {
      _builder.addRefetchChunks(value)
    }/**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param value The refetchChunks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRefetchChunks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.plusAssign(value: kotlin.Int) {
      add(value)
    }/**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param values The refetchChunks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRefetchChunks")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.addAll(values: kotlin.collections.Iterable<kotlin.Int>) {
      _builder.addAllRefetchChunks(values)
    }/**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param values The refetchChunks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRefetchChunks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.Int>) {
      addAll(values)
    }/**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     * @param index The index to set the value at.
     * @param value The refetchChunks to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRefetchChunks")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.set(index: kotlin.Int, value: kotlin.Int) {
      _builder.setRefetchChunks(index, value)
    }/**
     * <pre>
     * Chunks to refetch and reapply
     * </pre>
     *
     * <code>repeated uint32 refetch_chunks = 2 [json_name = "refetchChunks"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRefetchChunks")
    public fun com.google.protobuf.kotlin.DslList<kotlin.Int, RefetchChunksProxy>.clear() {
      _builder.clearRefetchChunks()
    }
    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class RejectSendersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @return A list containing the rejectSenders.
     */
    public val rejectSenders: com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getRejectSendersList()
      )
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param value The rejectSenders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addRejectSenders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.add(value: kotlin.String) {
      _builder.addRejectSenders(value)
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param value The rejectSenders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignRejectSenders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param values The rejectSenders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllRejectSenders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllRejectSenders(values)
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param values The rejectSenders to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllRejectSenders")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     * @param index The index to set the value at.
     * @param value The rejectSenders to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setRejectSenders")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setRejectSenders(index, value)
    }/**
     * <pre>
     * Chunk senders to reject and ban
     * </pre>
     *
     * <code>repeated string reject_senders = 3 [json_name = "rejectSenders"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearRejectSenders")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, RejectSendersProxy>.clear() {
      _builder.clearRejectSenders()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.ResponseApplySnapshotChunk.copy(block: tendermint.abci.ResponseApplySnapshotChunkKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ResponseApplySnapshotChunk =
  tendermint.abci.ResponseApplySnapshotChunkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

