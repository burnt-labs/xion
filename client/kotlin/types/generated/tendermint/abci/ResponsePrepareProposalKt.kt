//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/abci/types.proto

package tendermint.abci;

@kotlin.jvm.JvmName("-initializeresponsePrepareProposal")
public inline fun responsePrepareProposal(block: tendermint.abci.ResponsePrepareProposalKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ResponsePrepareProposal =
  tendermint.abci.ResponsePrepareProposalKt.Dsl._create(tendermint.abci.Types.ResponsePrepareProposal.newBuilder()).apply { block() }._build()
public object ResponsePrepareProposalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.abci.Types.ResponsePrepareProposal.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.abci.Types.ResponsePrepareProposal.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.abci.Types.ResponsePrepareProposal = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TxsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     */
     public val txs: com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTxsList()
      )
    /**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     * @param value The txs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTxs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.add(value: com.google.protobuf.ByteString) {
      _builder.addTxs(value)
    }/**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     * @param value The txs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTxs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.plusAssign(value: com.google.protobuf.ByteString) {
      add(value)
    }/**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     * @param values The txs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTxs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      _builder.addAllTxs(values)
    }/**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     * @param values The txs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTxs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.ByteString>) {
      addAll(values)
    }/**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     * @param index The index to set the value at.
     * @param value The txs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTxs")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.set(index: kotlin.Int, value: com.google.protobuf.ByteString) {
      _builder.setTxs(index, value)
    }/**
     * <code>repeated bytes txs = 1 [json_name = "txs"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTxs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.ByteString, TxsProxy>.clear() {
      _builder.clearTxs()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.abci.Types.ResponsePrepareProposal.copy(block: tendermint.abci.ResponsePrepareProposalKt.Dsl.() -> kotlin.Unit): tendermint.abci.Types.ResponsePrepareProposal =
  tendermint.abci.ResponsePrepareProposalKt.Dsl._create(this.toBuilder()).apply { block() }._build()

