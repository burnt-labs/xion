//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: tendermint/types/params.proto

package tendermint.types;

@kotlin.jvm.JvmName("-initializeaBCIParams")
public inline fun aBCIParams(block: tendermint.types.ABCIParamsKt.Dsl.() -> kotlin.Unit): tendermint.types.Params.ABCIParams =
  tendermint.types.ABCIParamsKt.Dsl._create(tendermint.types.Params.ABCIParams.newBuilder()).apply { block() }._build()
public object ABCIParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: tendermint.types.Params.ABCIParams.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: tendermint.types.Params.ABCIParams.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): tendermint.types.Params.ABCIParams = _builder.build()

    /**
     * <pre>
     * vote_extensions_enable_height configures the first height during which
     * vote extensions will be enabled. During this specified height, and for all
     * subsequent heights, precommit messages that do not contain valid extension data
     * will be considered invalid. Prior to this height, vote extensions will not
     * be used or accepted by validators on the network.
     * Once enabled, vote extensions will be created by the application in ExtendVote,
     * passed to the application for validation in VerifyVoteExtension and given
     * to the application to use when proposing a block during PrepareProposal.
     * </pre>
     *
     * <code>int64 vote_extensions_enable_height = 1 [json_name = "voteExtensionsEnableHeight"];</code>
     */
    public var voteExtensionsEnableHeight: kotlin.Long
      @JvmName("getVoteExtensionsEnableHeight")
      get() = _builder.getVoteExtensionsEnableHeight()
      @JvmName("setVoteExtensionsEnableHeight")
      set(value) {
        _builder.setVoteExtensionsEnableHeight(value)
      }
    /**
     * <pre>
     * vote_extensions_enable_height configures the first height during which
     * vote extensions will be enabled. During this specified height, and for all
     * subsequent heights, precommit messages that do not contain valid extension data
     * will be considered invalid. Prior to this height, vote extensions will not
     * be used or accepted by validators on the network.
     * Once enabled, vote extensions will be created by the application in ExtendVote,
     * passed to the application for validation in VerifyVoteExtension and given
     * to the application to use when proposing a block during PrepareProposal.
     * </pre>
     *
     * <code>int64 vote_extensions_enable_height = 1 [json_name = "voteExtensionsEnableHeight"];</code>
     */
    public fun clearVoteExtensionsEnableHeight() {
      _builder.clearVoteExtensionsEnableHeight()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun tendermint.types.Params.ABCIParams.copy(block: tendermint.types.ABCIParamsKt.Dsl.() -> kotlin.Unit): tendermint.types.Params.ABCIParams =
  tendermint.types.ABCIParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

