//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: xion/jwk/v1/query.proto

package xion.jwk.v1;

@kotlin.jvm.JvmName("-initializequeryGetAudienceClaimResponse")
public inline fun queryGetAudienceClaimResponse(block: xion.jwk.v1.QueryGetAudienceClaimResponseKt.Dsl.() -> kotlin.Unit): xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse =
  xion.jwk.v1.QueryGetAudienceClaimResponseKt.Dsl._create(xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse.newBuilder()).apply { block() }._build()
public object QueryGetAudienceClaimResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse = _builder.build()

    /**
     * <code>.xion.jwk.v1.AudienceClaim claim = 1 [json_name = "claim"];</code>
     */
    public var claim: xion.jwk.v1.AudienceOuterClass.AudienceClaim
      @JvmName("getClaim")
      get() = _builder.getClaim()
      @JvmName("setClaim")
      set(value) {
        _builder.setClaim(value)
      }
    /**
     * <code>.xion.jwk.v1.AudienceClaim claim = 1 [json_name = "claim"];</code>
     */
    public fun clearClaim() {
      _builder.clearClaim()
    }
    /**
     * <code>.xion.jwk.v1.AudienceClaim claim = 1 [json_name = "claim"];</code>
     * @return Whether the claim field is set.
     */
    public fun hasClaim(): kotlin.Boolean {
      return _builder.hasClaim()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse.copy(block: xion.jwk.v1.QueryGetAudienceClaimResponseKt.Dsl.() -> kotlin.Unit): xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponse =
  xion.jwk.v1.QueryGetAudienceClaimResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val xion.jwk.v1.QueryOuterClass.QueryGetAudienceClaimResponseOrBuilder.claimOrNull: xion.jwk.v1.AudienceOuterClass.AudienceClaim?
  get() = if (hasClaim()) getClaim() else null

