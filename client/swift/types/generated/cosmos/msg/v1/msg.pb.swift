// DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable all
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: cosmos/msg/v1/msg.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

// MARK: - Extension support defined in msg.proto.

// MARK: - Extension Properties

// Swift Extensions on the extended Messages to add easy access to the declared
// extension fields. The names are based on the extension field name from the proto
// declaration. To avoid naming collisions, the names are prefixed with the name of
// the scope where the extend directive occurs.

extension SwiftProtobuf.Google_Protobuf_MessageOptions {

  /// signer must be used in cosmos messages in order
  /// to signal to external clients which fields in a
  /// given cosmos message must be filled with signer
  /// information (address).
  /// The field must be the protobuf name of the message
  /// field extended with this MessageOption.
  /// The field must either be of string kind, or of message
  /// kind in case the signer information is contained within
  /// a message inside the cosmos message.
  var Cosmos_Msg_V1_signer: [String] {
    get {return getExtensionValue(ext: Cosmos_Msg_V1_Extensions_signer) ?? []}
    set {setExtensionValue(ext: Cosmos_Msg_V1_Extensions_signer, value: newValue)}
  }
}

extension SwiftProtobuf.Google_Protobuf_ServiceOptions {

  /// service indicates that the service is a Msg service and that requests
  /// must be transported via blockchain transactions rather than gRPC.
  /// Tooling can use this annotation to distinguish between Msg services and
  /// other types of services via reflection.
  var Cosmos_Msg_V1_service: Bool {
    get {return getExtensionValue(ext: Cosmos_Msg_V1_Extensions_service) ?? false}
    set {setExtensionValue(ext: Cosmos_Msg_V1_Extensions_service, value: newValue)}
  }
  /// Returns true if extension `Cosmos_Msg_V1_Extensions_service`
  /// has been explicitly set.
  var hasCosmos_Msg_V1_service: Bool {
    return hasExtensionValue(ext: Cosmos_Msg_V1_Extensions_service)
  }
  /// Clears the value of extension `Cosmos_Msg_V1_Extensions_service`.
  /// Subsequent reads from it will return its default value.
  mutating func clearCosmos_Msg_V1_service() {
    clearExtensionValue(ext: Cosmos_Msg_V1_Extensions_service)
  }

}

// MARK: - File's ExtensionMap: Cosmos_Msg_V1_Msg_Extensions

/// A `SwiftProtobuf.SimpleExtensionMap` that includes all of the extensions defined by
/// this .proto file. It can be used any place an `SwiftProtobuf.ExtensionMap` is needed
/// in parsing, or it can be combined with other `SwiftProtobuf.SimpleExtensionMap`s to create
/// a larger `SwiftProtobuf.SimpleExtensionMap`.
let Cosmos_Msg_V1_Msg_Extensions: SwiftProtobuf.SimpleExtensionMap = [
  Cosmos_Msg_V1_Extensions_service,
  Cosmos_Msg_V1_Extensions_signer
]

// Extension Objects - The only reason these might be needed is when manually
// constructing a `SimpleExtensionMap`, otherwise, use the above _Extension Properties_
// accessors for the extension fields on the messages directly.

/// service indicates that the service is a Msg service and that requests
/// must be transported via blockchain transactions rather than gRPC.
/// Tooling can use this annotation to distinguish between Msg services and
/// other types of services via reflection.
let Cosmos_Msg_V1_Extensions_service = SwiftProtobuf.MessageExtension<SwiftProtobuf.OptionalExtensionField<SwiftProtobuf.ProtobufBool>, SwiftProtobuf.Google_Protobuf_ServiceOptions>(
  _protobuf_fieldNumber: 11110000,
  fieldName: "cosmos.msg.v1.service"
)

/// signer must be used in cosmos messages in order
/// to signal to external clients which fields in a
/// given cosmos message must be filled with signer
/// information (address).
/// The field must be the protobuf name of the message
/// field extended with this MessageOption.
/// The field must either be of string kind, or of message
/// kind in case the signer information is contained within
/// a message inside the cosmos message.
let Cosmos_Msg_V1_Extensions_signer = SwiftProtobuf.MessageExtension<SwiftProtobuf.RepeatedExtensionField<SwiftProtobuf.ProtobufString>, SwiftProtobuf.Google_Protobuf_MessageOptions>(
  _protobuf_fieldNumber: 11110000,
  fieldName: "cosmos.msg.v1.signer"
)
